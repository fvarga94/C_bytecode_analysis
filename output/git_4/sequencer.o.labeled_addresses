template_untouched	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,3:CALL,5:FOR,0	120
0x4003c10	            0x4157	                                push r15	       827	sequencer.c	FUNCTION_29
0x4003c12	            0x4156	                                push r14	       827	sequencer.c	FUNCTION_29
0x4003c14	            0x4155	                                push r13	       827	sequencer.c	FUNCTION_29
0x4003c16	            0x4154	                                push r12	       827	sequencer.c	FUNCTION_29
0x4003c18	              0x55	                                push rbp	       827	sequencer.c	FUNCTION_29
0x4003c19	              0x53	                                push rbx	       827	sequencer.c	FUNCTION_29
0x4003c1a	          0x4889fd	                            mov rbp, rdi	       827	sequencer.c	FUNCTION_29
0x4003c1d	            0x89d3	                            mov ebx, edx	       827	sequencer.c	FUNCTION_29
0x4003c1f	        0x4883ec28	                           sub rsp, 0x28	       827	sequencer.c	FUNCTION_29
0x4003c23	    0x64488b042528	                mov rax, qword fs:[0x28]	       827	sequencer.c	FUNCTION_29
0x4003c2c	      0x4889442418	             mov qword [rsp + 0x18], rax	       827	sequencer.c	FUNCTION_29
0x4003c31	            0x31c0	                            xor eax, eax	       827	sequencer.c	FUNCTION_29
0x4003c33	          0x83fa01	                              cmp edx, 1	       831	sequencer.c	FUNCTION_29	IF_1
0x4003c36	    0x48c704240000	                      mov qword [rsp], 0	       828	sequencer.c	FUNCTION_29
0x4003c3e	    0x48c744240800	                  mov qword [rsp + 8], 0	       828	sequencer.c	FUNCTION_29
0x4003c47	    0x48c744241000	               mov qword [rsp + 0x10], 0	       828	sequencer.c	FUNCTION_29
0x4003c50	     0xf840a010000	                            je 0x4003d60	       831	sequencer.c	FUNCTION_29	IF_1
0x4003c56	          0x4885f6	                           test rsi, rsi	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003c59	     0xf8411010000	                            je 0x4003d70	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003c5f	            0x31d2	                            xor edx, edx	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003c61	          0x4889e7	                            mov rdi, rsp	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003c64	      0xe800000000	                          call 0x4003c69	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003c69	          0x4885c0	                           test rax, rax	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003c6c	     0xf8efe000000	                           jle 0x4003d70	       834	sequencer.c	FUNCTION_29	IF_2	CALL_1
0x4003c72	            0x31f6	                            xor esi, esi	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003c74	          0x83fb03	                              cmp ebx, 3	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003c77	          0x4889e7	                            mov rdi, rsp	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003c7a	        0x400f94c6	                                sete sil	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003c7e	      0xe800000000	                          call 0x4003c83	       837	sequencer.c	FUNCTION_29	CALL_2
0x4003c83	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003c87	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003c8c	          0x4889cb	                            mov rbx, rcx	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003c8f	            0xeb18	                           jmp 0x4003ca9	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003c91	     0xf1f80000000	                         nop dword [rax]	       838	sequencer.c	FUNCTION_29	IF_3	CALL_3
0x4003c98	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4003c9c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4003ca0	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4003ca3	     0xf8507010000	                           jne 0x4003db0	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4003ca9	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4003cac	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4003cae	            0x75e8	                           jne 0x4003c98	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4003cb0	          0x4889e7	                            mov rdi, rsp	       840	sequencer.c	FUNCTION_29	CALL_4
0x4003cb3	      0xe800000000	                          call 0x4003cb8	       840	sequencer.c	FUNCTION_29	CALL_4
0x4003cb8	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003cbc	        0x4c8b6508	                mov r12, qword [rbp + 8]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003cc0	          0x4c29fb	                            sub rbx, r15	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003cc3	          0x4189dd	                           mov r13d, ebx	       841	sequencer.c	FUNCTION_29	CALL_5
0x4003cc6	          0x4863db	                         movsxd rbx, ebx	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003cc9	          0x4c39e3	                            cmp rbx, r12	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003ccc	     0xf83e6000000	                           jae 0x4003db8	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003cd2	        0x4d8d341f	                    lea r14, [r15 + rbx]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4003cd6	          0x4c89e2	                            mov rdx, r12	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4003cd9	      0xbe0a000000	                            mov esi, 0xa	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4003cde	          0x4829da	                            sub rdx, rbx	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4003ce1	          0x4c89f7	                            mov rdi, r14	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4003ce4	      0xe800000000	                          call 0x4003ce9	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x4003ce9	            0x89c3	                            mov ebx, eax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4003ceb	          0x4429fb	                           sub ebx, r15d	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4003cee	          0x4885c0	                           test rax, rax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4003cf1	        0x410f44dc	                         cmove ebx, r12d	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x4003cf5	            0x89d8	                            mov eax, ebx	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003cf7	          0x4429e8	                           sub eax, r13d	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003cfa	            0x4898	                                    cdqe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003cfc	        0x4883f80e	                            cmp rax, 0xe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003d00	     0xf8792000000	                            ja 0x4003d98	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003d06	          0x4439eb	                           cmp ebx, r13d	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4003d09	     0xf8eb0000000	                           jle 0x4003dbf	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4003d0f	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d13	        0x418d5501	                      lea edx, [r13 + 1]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d17	          0x4d63ed	                        movsxd r13, r13d	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d1a	      0x420fb60429	             movzx eax, byte [rcx + r13]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d1f	    0xf68000000000	                      test byte [rax], 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d26	            0x7448	                            je 0x4003d70	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d28	          0x4863c2	                         movsxd rax, edx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d2b	          0x4801c8	                            add rax, rcx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d2e	            0xeb13	                           jmp 0x4003d43	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d30	           0xfb608	                   movzx ecx, byte [rax]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d33	          0x83c201	                              add edx, 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d36	        0x4883c001	                              add rax, 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d3a	    0xf68100000000	                      test byte [rcx], 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d41	            0x742d	                            je 0x4003d70	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4003d43	            0x39d3	                            cmp ebx, edx	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4003d45	            0x75e9	                           jne 0x4003d30	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4003d47	        0x448d6b01	                     lea r13d, [rbx + 1]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003d4b	        0x4c8b6508	                mov r12, qword [rbp + 8]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003d4f	          0x4963dd	                        movsxd rbx, r13d	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003d52	          0x4939dc	                            cmp r12, rbx	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003d55	            0x7661	                           jbe 0x4003db8	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003d57	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003d5b	      0xe972ffffff	                           jmp 0x4003cd2	       789	sequencer.c	FUNCTION_27	FOR_1
0x4003d60	      0x48837f0800	                  cmp qword [rdi + 8], 0	       831	sequencer.c	FUNCTION_29	IF_1
0x4003d65	     0xf84ebfeffff	                            je 0x4003c56	       831	sequencer.c	FUNCTION_29	IF_1
0x4003d6b	       0xf1f440000	                   nop dword [rax + rax]	       831	sequencer.c	FUNCTION_29	IF_1
0x4003d70	            0x31c0	                            xor eax, eax	       832	sequencer.c	FUNCTION_29	IF_1
0x4003d72	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       842	sequencer.c	FUNCTION_29
0x4003d77	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       842	sequencer.c	FUNCTION_29
0x4003d80	            0x7545	                           jne 0x4003dc7	       842	sequencer.c	FUNCTION_29
0x4003d82	        0x4883c428	                           add rsp, 0x28	       842	sequencer.c	FUNCTION_29
0x4003d86	              0x5b	                                 pop rbx	       842	sequencer.c	FUNCTION_29
0x4003d87	              0x5d	                                 pop rbp	       842	sequencer.c	FUNCTION_29
0x4003d88	            0x415c	                                 pop r12	       842	sequencer.c	FUNCTION_29
0x4003d8a	            0x415d	                                 pop r13	       842	sequencer.c	FUNCTION_29
0x4003d8c	            0x415e	                                 pop r14	       842	sequencer.c	FUNCTION_29
0x4003d8e	            0x415f	                                 pop r15	       842	sequencer.c	FUNCTION_29
0x4003d90	              0xc3	                                     ret	       842	sequencer.c	FUNCTION_29
0x4003d91	     0xf1f80000000	                         nop dword [rax]	       842	sequencer.c	FUNCTION_29
0x4003d98	      0xbe00000000	                              mov esi, 0	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x4003d9d	          0x4c89f7	                            mov rdi, r14	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x4003da0	      0xe800000000	                          call 0x4003da5	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x4003da5	            0x85c0	                           test eax, eax	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003da7	            0x759e	                           jne 0x4003d47	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003da9	      0xe958ffffff	                           jmp 0x4003d06	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003dae	            0x6690	                                     nop	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4003db0	          0x4889cb	                            mov rbx, rcx	       839	sequencer.c	FUNCTION_29	IF_3
0x4003db3	      0xe9f8feffff	                           jmp 0x4003cb0	       839	sequencer.c	FUNCTION_29	IF_3
0x4003db8	      0xb801000000	                              mov eax, 1	       806	sequencer.c	FUNCTION_27
0x4003dbd	            0xebb3	                           jmp 0x4003d72	       806	sequencer.c	FUNCTION_27
0x4003dbf	          0x4489eb	                           mov ebx, r13d	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4003dc2	      0xe980ffffff	                           jmp 0x4003d47	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4003dc7	      0xe800000000	                          call 0x4003dcc	       842	sequencer.c	FUNCTION_29
sequencer_add_exec_commands	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,3:CALL,11:FOR,1	111
0x400c930	            0x4157	                                push r15	      3972	sequencer.c	FUNCTION_98
0x400c932	            0x4156	                                push r14	      3972	sequencer.c	FUNCTION_98
0x400c934	            0x4155	                                push r13	      3972	sequencer.c	FUNCTION_98
0x400c936	            0x4154	                                push r12	      3972	sequencer.c	FUNCTION_98
0x400c938	          0x4989fd	                            mov r13, rdi	      3972	sequencer.c	FUNCTION_98
0x400c93b	              0x55	                                push rbp	      3972	sequencer.c	FUNCTION_98
0x400c93c	              0x53	                                push rbx	      3972	sequencer.c	FUNCTION_98
0x400c93d	        0x4883ec68	                           sub rsp, 0x68	      3972	sequencer.c	FUNCTION_98
0x400c941	    0x4c8b35000000	            mov r14, qword [0x0400c948] 	        52	sequencer.c	CALL_8
0x400c948	    0x64488b042528	                mov rax, qword fs:[0x28]	      3972	sequencer.c	FUNCTION_98
0x400c951	      0x4889442458	             mov qword [rsp + 0x58], rax	      3972	sequencer.c	FUNCTION_98
0x400c956	            0x31c0	                            xor eax, eax	      3972	sequencer.c	FUNCTION_98
0x400c958	          0x4d85f6	                           test r14, r14	        52	sequencer.c	CALL_8
0x400c95b	     0xf84f8000000	                            je 0x400ca59	        52	sequencer.c	CALL_8
0x400c961	            0x31c0	                            xor eax, eax	      3974	sequencer.c	FUNCTION_98
0x400c963	          0x4889e7	                            mov rdi, rsp	      3974	sequencer.c	FUNCTION_98
0x400c966	      0xb90b000000	                            mov ecx, 0xb	      3974	sequencer.c	FUNCTION_98
0x400c96b	          0xf348ab	              rep stosq qword [rdi], rax	      3974	sequencer.c	FUNCTION_98
0x400c96e	          0x4c89ef	                            mov rdi, r13	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400c971	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3974	sequencer.c	FUNCTION_98
0x400c97a	      0xe800000000	                          call 0x400c97f	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400c97f	            0x31d2	                            xor edx, edx	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400c981	          0x4c89f6	                            mov rsi, r14	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400c984	          0x4889e7	                            mov rdi, rsp	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400c987	          0x4989c4	                            mov r12, rax	      3977	sequencer.c	FUNCTION_98	CALL_2
0x400c98a	      0xe800000000	                          call 0x400c98f	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400c98f	          0x4885c0	                           test rax, rax	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400c992	     0xf882d010000	                            js 0x400cac5	      3980	sequencer.c	FUNCTION_98	IF_1	CALL_3
0x400c998	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400c99d	          0x4889e6	                            mov rsi, rsp	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400c9a0	      0xe89b39ffff	              call sym.parse_insn_buffer	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400c9a5	            0x85c0	                           test eax, eax	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400c9a7	     0xf85c5000000	                           jne 0x400ca72	      3983	sequencer.c	FUNCTION_98	IF_2	CALL_5
0x400c9ad	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9b1	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9b6	            0x85c0	                           test eax, eax	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9b8	            0x7e46	                           jle 0x400ca00	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9ba	            0x31ed	                            xor ebp, ebp	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9bc	          0x4531ff	                          xor r15d, r15d	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9bf	              0x90	                                     nop	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9c0	          0x83c501	                              add ebp, 1	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9c3	        0x4883c330	                           add rbx, 0x30	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9c7	            0x39c5	                            cmp ebp, eax	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9c9	            0x7d35	                           jge 0x400ca00	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9cb	            0x8b13	                    mov edx, dword [rbx]	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400c9cd	            0x85d2	                           test edx, edx	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400c9cf	            0x75ef	                           jne 0x400c9c0	      3991	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400c9d1	          0x4c89fe	                            mov rsi, r15	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400c9d4	        0x48037328	             add rsi, qword [rbx + 0x28]	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400c9d8	          0x4c89e1	                            mov rcx, r12	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400c9db	          0x4c89ea	                            mov rdx, r13	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400c9de	          0x4889e7	                            mov rdi, rsp	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400c9e1	          0x83c501	                              add ebp, 1	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9e4	          0x4d01e7	                            add r15, r12	      3994	sequencer.c	FUNCTION_98	FOR_1	IF_3
0x400c9e7	        0x4883c330	                           add rbx, 0x30	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9eb	      0xe800000000	                          call 0x400c9f0	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400c9f0	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3992	sequencer.c	FUNCTION_98	FOR_1	IF_3	CALL_8
0x400c9f4	            0x39c5	                            cmp ebp, eax	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9f6	            0x7cd3	                            jl 0x400c9cb	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400c9f8	     0xf1f84000000	                   nop dword [rax + rax]	      3990	sequencer.c	FUNCTION_98	FOR_1
0x400ca00	          0x4c89e2	                            mov rdx, r12	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ca03	          0x4c89ee	                            mov rsi, r13	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ca06	          0x4889e7	                            mov rdi, rsp	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ca09	      0xe800000000	                          call 0x400ca0e	      4000	sequencer.c	FUNCTION_98	CALL_9
0x400ca0e	      0x488b742408	                mov rsi, qword [rsp + 8]	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ca13	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ca18	          0x4c89f2	                            mov rdx, r14	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ca1b	      0xe8d048ffff	     call sym.write_message.constprop.34	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ca20	          0x4889e7	                            mov rdi, rsp	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ca23	            0x89c3	                            mov ebx, eax	      4002	sequencer.c	FUNCTION_98	CALL_10
0x400ca25	      0xe800000000	                          call 0x400ca2a	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ca2a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1792	sequencer.c	FUNCTION_51
0x400ca2f	      0xe800000000	                          call 0x400ca34	      1792	sequencer.c	FUNCTION_51
0x400ca34	            0x89d8	                            mov eax, ebx	      4004	sequencer.c	FUNCTION_98
0x400ca36	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      4005	sequencer.c	FUNCTION_98
0x400ca3b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4005	sequencer.c	FUNCTION_98
0x400ca44	     0xf8587000000	                           jne 0x400cad1	      4005	sequencer.c	FUNCTION_98
0x400ca4a	        0x4883c468	                           add rsp, 0x68	      4005	sequencer.c	FUNCTION_98
0x400ca4e	              0x5b	                                 pop rbx	      4005	sequencer.c	FUNCTION_98
0x400ca4f	              0x5d	                                 pop rbp	      4005	sequencer.c	FUNCTION_98
0x400ca50	            0x415c	                                 pop r12	      4005	sequencer.c	FUNCTION_98
0x400ca52	            0x415d	                                 pop r13	      4005	sequencer.c	FUNCTION_98
0x400ca54	            0x415e	                                 pop r14	      4005	sequencer.c	FUNCTION_98
0x400ca56	            0x415f	                                 pop r15	      4005	sequencer.c	FUNCTION_98
0x400ca58	              0xc3	                                     ret	      4005	sequencer.c	FUNCTION_98
0x400ca59	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400ca5e	      0xe800000000	                          call 0x400ca63	        52	sequencer.c	CALL_8
0x400ca63	          0x4989c6	                            mov r14, rax	        52	sequencer.c	CALL_8
0x400ca66	    0x488905000000	            mov qword [0x0400ca6d], rax 	        52	sequencer.c	CALL_8
0x400ca6d	      0xe9effeffff	                           jmp 0x400c961	        52	sequencer.c	CALL_8
0x400ca72	          0x4889e7	                            mov rdi, rsp	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ca75	      0xe800000000	                          call 0x400ca7a	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ca7a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1792	sequencer.c	FUNCTION_51
0x400ca7f	      0xe800000000	                          call 0x400ca84	      1792	sequencer.c	FUNCTION_51
0x400ca84	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1792	sequencer.c	FUNCTION_51
0x400ca8d	    0xc74424240000	               mov dword [rsp + 0x24], 0	      1793	sequencer.c	FUNCTION_51
0x400ca95	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400ca9a	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1793	sequencer.c	FUNCTION_51
0x400caa2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400caa7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400caa9	      0xe800000000	                          call 0x400caae	        54	gettext.h	FUNCTION_164
0x400caae	          0x4c89f6	                            mov rsi, r14	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cab1	          0x4889c7	                            mov rdi, rax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cab4	            0x31c0	                            xor eax, eax	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cab6	      0xe800000000	                          call 0x400cabb	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cabb	      0xb8ffffffff	                     mov eax, 0xffffffff	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cac0	      0xe971ffffff	                           jmp 0x400ca36	      3985	sequencer.c	FUNCTION_98	IF_2	CALL_7
0x400cac5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400caca	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400cacf	            0xebd6	                           jmp 0x400caa7	        54	gettext.h	FUNCTION_164
0x400cad1	      0xe800000000	                          call 0x400cad6	      4005	sequencer.c	FUNCTION_98
sequencer_continue	functions,0:SWITCH,0:ELSE,3:WHILE,0:DO,0:IF,13:CALL,27:FOR,0	1196
0x4009620	            0x4157	                                push r15	      3378	sequencer.c	FUNCTION_90
0x4009622	            0x4156	                                push r14	      3378	sequencer.c	FUNCTION_90
0x4009624	      0xb90b000000	                            mov ecx, 0xb	      3379	sequencer.c	FUNCTION_90
0x4009629	            0x4155	                                push r13	      3378	sequencer.c	FUNCTION_90
0x400962b	            0x4154	                                push r12	      3378	sequencer.c	FUNCTION_90
0x400962d	              0x55	                                push rbp	      3378	sequencer.c	FUNCTION_90
0x400962e	              0x53	                                push rbx	      3378	sequencer.c	FUNCTION_90
0x400962f	          0x4889fb	                            mov rbx, rdi	      3378	sequencer.c	FUNCTION_90
0x4009632	    0x4881ecf80000	                           sub rsp, 0xf8	      3378	sequencer.c	FUNCTION_90
0x4009639	      0x488d6c2450	                   lea rbp, [rsp + 0x50]	      3379	sequencer.c	FUNCTION_90
0x400963e	    0x64488b042528	                mov rax, qword fs:[0x28]	      3378	sequencer.c	FUNCTION_90
0x4009647	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      3378	sequencer.c	FUNCTION_90
0x400964f	            0x31c0	                            xor eax, eax	      3378	sequencer.c	FUNCTION_90
0x4009651	          0x4889ef	                            mov rdi, rbp	      3379	sequencer.c	FUNCTION_90
0x4009654	          0xf348ab	              rep stosq qword [rdi], rax	      3379	sequencer.c	FUNCTION_90
0x4009657	          0x4889df	                            mov rdi, rbx	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400965a	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3379	sequencer.c	FUNCTION_90
0x4009663	      0xe8a894ffff	         call sym.read_and_refresh_cache	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x4009668	          0x4c63e0	                         movsxd r12, eax	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400966b	          0x4585e4	                         test r12d, r12d	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x400966e	     0xf85dc060000	                           jne 0x4009d50	      3382	sequencer.c	FUNCTION_90	IF_1	CALL_1
0x4009674	          0x833b02	                      cmp dword [rbx], 2	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x4009677	     0xf84c3020000	                            je 0x4009940	      2103	sequencer.c	FUNCTION_64	IF_1	CALL_1
0x400967d	    0x488b3d000000	            mov rdi, qword [0x04009684] 	        41	sequencer.c	CALL_4
0x4009684	          0x4885ff	                           test rdi, rdi	        41	sequencer.c	CALL_4
0x4009687	     0xf845b0a0000	                            je 0x400a0e8	        41	sequencer.c	CALL_4
0x400968d	      0xe800000000	                          call 0x4009692	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4009692	            0x85c0	                           test eax, eax	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4009694	            0x7425	                            je 0x40096bb	      2148	sequencer.c	FUNCTION_64	IF_10	CALL_18
0x4009696	    0x488b35000000	            mov rsi, qword [0x0400969d] 	        41	sequencer.c	CALL_4
0x400969d	          0x4885f6	                           test rsi, rsi	        41	sequencer.c	CALL_4
0x40096a0	     0xf84720a0000	                            je 0x400a118	        41	sequencer.c	CALL_4
0x40096a6	          0x4889da	                            mov rdx, rbx	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x40096a9	      0xbf00000000	                              mov edi, 0	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x40096ae	      0xe800000000	                          call 0x40096b3	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x40096b3	            0x85c0	                           test eax, eax	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x40096b5	     0xf889f090000	                            js 0x400a05a	      2156	sequencer.c	FUNCTION_64	IF_11	CALL_20
0x40096bb	          0x833b02	                      cmp dword [rbx], 2	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x40096be	     0xf84cc000000	                            je 0x4009790	      3387	sequencer.c	FUNCTION_90	IF_3	CALL_3
0x40096c4	    0x488b3d000000	            mov rdi, qword [0x040096cb] 	        40	sequencer.c	CALL_3
0x40096cb	          0x4885ff	                           test rdi, rdi	        40	sequencer.c	CALL_3
0x40096ce	     0xf8448080000	                            je 0x4009f1c	        40	sequencer.c	CALL_3
0x40096d4	      0xe800000000	                          call 0x40096d9	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x40096d9	            0x85c0	                           test eax, eax	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x40096db	            0x745b	                            je 0x4009738	      3392	sequencer.c	FUNCTION_90	ELSE_1	IF_6	CALL_7
0x40096dd	          0x4889de	                            mov rsi, rbx	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x40096e0	          0x4889ef	                            mov rdi, rbp	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x40096e3	      0xe83881ffff	             call sym.read_populate_todo	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x40096e8	            0x85c0	                           test eax, eax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x40096ea	          0x4189c5	                           mov r13d, eax	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x40096ed	     0xf84a5010000	                            je 0x4009898	      3394	sequencer.c	FUNCTION_90	ELSE_2	IF_7	CALL_9
0x40096f3	          0x4889ef	                            mov rdi, rbp	      1791	sequencer.c	FUNCTION_51	CALL_1
0x40096f6	      0xe800000000	                          call 0x40096fb	      1791	sequencer.c	FUNCTION_51	CALL_1
0x40096fb	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x4009700	      0xe800000000	                          call 0x4009705	      1792	sequencer.c	FUNCTION_51
0x4009705	          0x4489e8	                           mov eax, r13d	      3423	sequencer.c	FUNCTION_90
0x4009708	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      3424	sequencer.c	FUNCTION_90
0x4009710	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3424	sequencer.c	FUNCTION_90
0x4009719	     0xf85ba110000	                           jne 0x400a8d9	      3424	sequencer.c	FUNCTION_90
0x400971f	    0x4881c4f80000	                           add rsp, 0xf8	      3424	sequencer.c	FUNCTION_90
0x4009726	              0x5b	                                 pop rbx	      3424	sequencer.c	FUNCTION_90
0x4009727	              0x5d	                                 pop rbp	      3424	sequencer.c	FUNCTION_90
0x4009728	            0x415c	                                 pop r12	      3424	sequencer.c	FUNCTION_90
0x400972a	            0x415d	                                 pop r13	      3424	sequencer.c	FUNCTION_90
0x400972c	            0x415e	                                 pop r14	      3424	sequencer.c	FUNCTION_90
0x400972e	            0x415f	                                 pop r15	      3424	sequencer.c	FUNCTION_90
0x4009730	              0xc3	                                     ret	      3424	sequencer.c	FUNCTION_90
0x4009731	     0xf1f80000000	                         nop dword [rax]	      3424	sequencer.c	FUNCTION_90
0x4009738	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      3243	sequencer.c	FUNCTION_88
0x4009744	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      3243	sequencer.c	FUNCTION_88
0x4009750	      0xe800000000	                          call 0x4009755	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x4009755	          0x4889c7	                            mov rdi, rax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x4009758	      0xe800000000	                          call 0x400975d	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400975d	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x400975f	            0x7515	                           jne 0x4009776	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x4009761	      0xe800000000	                          call 0x4009766	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x4009766	          0x4889c7	                            mov rdi, rax	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x4009769	      0xe800000000	                          call 0x400976e	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x400976e	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x4009770	     0xf841c090000	                            je 0x400a092	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x4009776	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      3248	sequencer.c	FUNCTION_88	CALL_6
0x400977e	      0xbe02000000	                              mov esi, 2	      3248	sequencer.c	FUNCTION_88	CALL_6
0x4009783	      0xe800000000	                          call 0x4009788	      3248	sequencer.c	FUNCTION_88	CALL_6
0x4009788	      0xe97bffffff	                           jmp 0x4009708	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0x400978d	           0xf1f00	                         nop dword [rax]	      3393	sequencer.c	FUNCTION_90	ELSE_1	IF_6
0x4009790	          0x4889de	                            mov rsi, rbx	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4009793	          0x4889ef	                            mov rdi, rbp	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x4009796	      0xe88580ffff	             call sym.read_populate_todo	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400979b	            0x85c0	                           test eax, eax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x400979d	          0x4189c5	                           mov r13d, eax	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x40097a0	     0xf854dffffff	                           jne 0x40096f3	      3388	sequencer.c	FUNCTION_90	IF_3	IF_4	CALL_4
0x40097a6	      0xbf01000000	                              mov edi, 1	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x40097ab	      0xe800000000	                          call 0x40097b0	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x40097b0	            0x85c0	                           test eax, eax	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x40097b2	     0xf858e0e0000	                           jne 0x400a646	      3257	sequencer.c	FUNCTION_89	IF_1	CALL_1
0x40097b8	            0x31ff	                            xor edi, edi	      3260	sequencer.c	FUNCTION_89	CALL_3
0x40097ba	      0xe800000000	                          call 0x40097bf	      3260	sequencer.c	FUNCTION_89	CALL_3
0x40097bf	    0x488b3d000000	            mov rdi, qword [0x040097c6] 	       110	sequencer.c	CALL_17
0x40097c6	          0x4189c6	                           mov r14d, eax	      3260	sequencer.c	FUNCTION_89	CALL_3
0x40097c9	          0x4885ff	                           test rdi, rdi	       110	sequencer.c	CALL_17
0x40097cc	     0xf84fc0d0000	                            je 0x400a5ce	       110	sequencer.c	CALL_17
0x40097d2	      0xe800000000	                          call 0x40097d7	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x40097d7	            0x85c0	                           test eax, eax	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x40097d9	     0xf85e9040000	                           jne 0x4009cc8	      3262	sequencer.c	FUNCTION_89	IF_2	CALL_5
0x40097df	          0x4585f6	                         test r14d, r14d	      3348	sequencer.c	FUNCTION_89	IF_14
0x40097e2	      0xba03000000	                              mov edx, 3	      3254	sequencer.c	FUNCTION_89
0x40097e7	     0xf8456090000	                            je 0x400a143	      3348	sequencer.c	FUNCTION_89	IF_14
0x40097ed	    0x488b05000000	            mov rax, qword [0x040097f4] 	        73	sequencer.c	CALL_12
0x40097f4	          0x4885c0	                           test rax, rax	        73	sequencer.c	CALL_12
0x40097f7	     0xf84db0e0000	                            je 0x400a6d8	        73	sequencer.c	CALL_12
0x40097fd	          0x4889c7	                            mov rdi, rax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009800	          0x4531f6	                          xor r14d, r14d	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009803	          0x4889de	                            mov rsi, rbx	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009806	      0xe86594ffff	                 call sym.run_git_commit	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x400980b	            0x85c0	                           test eax, eax	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x400980d	     0xf855e0f0000	                           jne 0x400a771	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x4009813	    0x488b3d000000	            mov rdi, qword [0x0400981a] 	       110	sequencer.c	CALL_17
0x400981a	          0x4885ff	                           test rdi, rdi	       110	sequencer.c	CALL_17
0x400981d	     0xf84c60d0000	                            je 0x400a5e9	       110	sequencer.c	CALL_17
0x4009823	      0xe800000000	                          call 0x4009828	      3360	sequencer.c	FUNCTION_89	CALL_47
0x4009828	          0x4585f6	                         test r14d, r14d	      3361	sequencer.c	FUNCTION_89	IF_18
0x400982b	            0x742a	                            je 0x4009857	      3361	sequencer.c	FUNCTION_89	IF_18
0x400982d	    0x488b3d000000	            mov rdi, qword [0x04009834] 	        90	sequencer.c	CALL_14
0x4009834	          0x4885ff	                           test rdi, rdi	        90	sequencer.c	CALL_14
0x4009837	     0xf84670e0000	                            je 0x400a6a4	        90	sequencer.c	CALL_14
0x400983d	      0xe800000000	                          call 0x4009842	      3362	sequencer.c	FUNCTION_89	IF_18	CALL_49
0x4009842	    0x488b3d000000	            mov rdi, qword [0x04009849] 	        82	sequencer.c	CALL_13
0x4009849	          0x4885ff	                           test rdi, rdi	        82	sequencer.c	CALL_13
0x400984c	     0xf84370e0000	                            je 0x400a689	        82	sequencer.c	CALL_13
0x4009852	      0xe800000000	                          call 0x4009857	      3363	sequencer.c	FUNCTION_89	IF_18	CALL_51
0x4009857	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      3365	sequencer.c	FUNCTION_89	IF_19
0x400985a	            0x85c0	                           test eax, eax	      3365	sequencer.c	FUNCTION_89	IF_19
0x400985c	            0x7e3a	                           jle 0x4009898	      3365	sequencer.c	FUNCTION_89	IF_19
0x400985e	    0x488b3d000000	            mov rdi, qword [0x04009865] 	        95	sequencer.c	CALL_15
0x4009865	          0x4885ff	                           test rdi, rdi	        95	sequencer.c	CALL_15
0x4009868	     0xf84960d0000	                            je 0x400a604	        95	sequencer.c	CALL_15
0x400986e	      0xe800000000	                          call 0x4009873	      3370	sequencer.c	FUNCTION_89	IF_19	CALL_53
0x4009873	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_109	IF_2
0x4009877	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_109
0x400987f	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x4009885	     0xf84f8090000	                            je 0x400a283	       165	strbuf.h	FUNCTION_109	IF_2
0x400988b	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400988e	    0xc74378000000	               mov dword [rbx + 0x78], 0	      3372	sequencer.c	FUNCTION_89	IF_19
0x4009895	           0xf1f00	                         nop dword [rax]	      3372	sequencer.c	FUNCTION_89	IF_19
0x4009898	          0x833b02	                      cmp dword [rbx], 2	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x400989b	     0xf845f020000	                            je 0x4009b00	      3397	sequencer.c	FUNCTION_90	IF_8	CALL_10
0x40098a1	      0xe800000000	                          call 0x40098a6	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x40098a6	          0x4889c7	                            mov rdi, rax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x40098a9	      0xe800000000	                          call 0x40098ae	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x40098ae	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x40098b0	            0x7511	                           jne 0x40098c3	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x40098b2	      0xe800000000	                          call 0x40098b7	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x40098b7	          0x4889c7	                            mov rdi, rax	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x40098ba	      0xe800000000	                          call 0x40098bf	      3400	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_14
0x40098bf	            0x85c0	                           test eax, eax	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x40098c1	            0x745b	                            je 0x400991e	      3399	sequencer.c	FUNCTION_90	IF_8	IF_9	CALL_12
0x40098c3	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      3243	sequencer.c	FUNCTION_88
0x40098cf	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      3243	sequencer.c	FUNCTION_88
0x40098db	      0xe800000000	                          call 0x40098e0	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40098e0	          0x4889c7	                            mov rdi, rax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40098e3	      0xe800000000	                          call 0x40098e8	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40098e8	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40098ea	            0x7515	                           jne 0x4009901	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40098ec	      0xe800000000	                          call 0x40098f1	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x40098f1	          0x4889c7	                            mov rdi, rax	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x40098f4	      0xe800000000	                          call 0x40098f9	      3246	sequencer.c	FUNCTION_88	IF_1	CALL_4
0x40098f9	            0x85c0	                           test eax, eax	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x40098fb	     0xf84b6070000	                            je 0x400a0b7	      3245	sequencer.c	FUNCTION_88	IF_1	CALL_2
0x4009901	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      3248	sequencer.c	FUNCTION_88	CALL_6
0x4009909	      0xbe02000000	                              mov esi, 2	      3248	sequencer.c	FUNCTION_88	CALL_6
0x400990e	      0xe800000000	                          call 0x4009913	      3248	sequencer.c	FUNCTION_88	CALL_6
0x4009913	            0x85c0	                           test eax, eax	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x4009915	          0x4189c5	                           mov r13d, eax	      3248	sequencer.c	FUNCTION_88	CALL_6
0x4009918	     0xf85d5fdffff	                           jne 0x40096f3	      3402	sequencer.c	FUNCTION_90	IF_8	IF_9	IF_10
0x400991e	            0x31d2	                            xor edx, edx	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009920	            0x31f6	                            xor esi, esi	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009922	      0xbf00000000	                              mov edi, 0	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009927	      0xe800000000	                          call 0x400992c	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400992c	            0x85c0	                           test eax, eax	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x400992e	     0xf85ff070000	                           jne 0x400a133	      3405	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_16
0x4009934	      0x8344247801	               add dword [rsp + 0x78], 1	      3409	sequencer.c	FUNCTION_90	IF_8
0x4009939	      0xe923020000	                           jmp 0x4009b61	      3409	sequencer.c	FUNCTION_90	IF_8
0x400993e	            0x6690	                                     nop	      3409	sequencer.c	FUNCTION_90	IF_8
0x4009940	    0x4c8b35000000	            mov r14, qword [0x04009947] 	       136	sequencer.c	CALL_22
0x4009947	          0x4531ff	                          xor r15d, r15d	       136	sequencer.c	CALL_22
0x400994a	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x4009953	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x400995c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2104	sequencer.c	FUNCTION_64	IF_1
0x4009965	          0x4d85f6	                           test r14, r14	       136	sequencer.c	CALL_22
0x4009968	     0xf841a080000	                            je 0x400a188	       136	sequencer.c	CALL_22
0x400996e	          0x4c89f7	                            mov rdi, r14	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009971	      0xe800000000	                          call 0x4009976	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009976	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009978	     0xf8572020000	                           jne 0x4009bf0	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400997e	    0x4c8b35000000	            mov r14, qword [0x04009985] 	       145	sequencer.c	CALL_31
0x4009985	          0x4d85f6	                           test r14, r14	       145	sequencer.c	CALL_31
0x4009988	     0xf846b080000	                            je 0x400a1f9	       145	sequencer.c	CALL_31
0x400998e	          0x4c89f7	                            mov rdi, r14	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009991	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       402	sequencer.c	FUNCTION_15
0x4009996	      0xe800000000	                          call 0x400999b	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400999b	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400999d	     0xf85d5010000	                           jne 0x4009b78	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x40099a3	    0x488b3d000000	            mov rdi, qword [0x040099aa] 	       138	sequencer.c	CALL_24
0x40099aa	          0x4885ff	                           test rdi, rdi	       138	sequencer.c	CALL_24
0x40099ad	     0xf8461080000	                            je 0x400a214	       138	sequencer.c	CALL_24
0x40099b3	      0xe800000000	                          call 0x40099b8	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x40099b8	            0x85c0	                           test eax, eax	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x40099ba	     0xf8530010000	                           jne 0x4009af0	      2124	sequencer.c	FUNCTION_64	IF_1	IF_7	CALL_10
0x40099c0	    0x488b3d000000	            mov rdi, qword [0x040099c7] 	       139	sequencer.c	CALL_25
0x40099c7	          0x4885ff	                           test rdi, rdi	       139	sequencer.c	CALL_25
0x40099ca	     0xf840e080000	                            je 0x400a1de	       139	sequencer.c	CALL_25
0x40099d0	      0xe800000000	                          call 0x40099d5	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x40099d5	            0x85c0	                           test eax, eax	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x40099d7	            0x740e	                            je 0x40099e7	      2127	sequencer.c	FUNCTION_64	IF_1	IF_8	CALL_12
0x40099d9	    0xc74314000000	               mov dword [rbx + 0x14], 0	      2128	sequencer.c	FUNCTION_64	IF_1	IF_8
0x40099e0	    0xc74310010000	               mov dword [rbx + 0x10], 1	      2129	sequencer.c	FUNCTION_64	IF_1	IF_8
0x40099e7	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_109	IF_2
0x40099ec	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_109
0x40099f5	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x40099fb	     0xf84af020000	                            je 0x4009cb0	       165	strbuf.h	FUNCTION_109	IF_2
0x4009a01	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x4009a04	    0x4c8b35000000	            mov r14, qword [0x04009a0b] 	       143	sequencer.c	CALL_29
0x4009a0b	          0x4d85f6	                           test r14, r14	       143	sequencer.c	CALL_29
0x4009a0e	     0xf84af070000	                            je 0x400a1c3	       143	sequencer.c	CALL_29
0x4009a14	          0x4c89f7	                            mov rdi, r14	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009a17	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       402	sequencer.c	FUNCTION_15
0x4009a1c	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	       402	sequencer.c	FUNCTION_15
0x4009a21	      0xe800000000	                          call 0x4009a26	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009a26	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009a28	     0xf8532030000	                           jne 0x4009d60	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009a2e	          0x4c89ef	                            mov rdi, r13	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_14
0x4009a31	      0xe800000000	                          call 0x4009a36	      2133	sequencer.c	FUNCTION_64	IF_1	CALL_14
0x4009a36	    0x4c8b2d000000	            mov r13, qword [0x04009a3d] 	        95	sequencer.c	CALL_15
0x4009a3d	          0x4d85ed	                           test r13, r13	        95	sequencer.c	CALL_15
0x4009a40	     0xf8462070000	                            je 0x400a1a8	        95	sequencer.c	CALL_15
0x4009a46	          0x4c89ef	                            mov rdi, r13	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009a49	        0x4c8b7368	            mov r14, qword [rbx + 0x68] 	       402	sequencer.c	FUNCTION_15
0x4009a4d	      0xe800000000	                          call 0x4009a52	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009a52	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009a54	     0xf8461fcffff	                            je 0x40096bb	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009a5a	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      2135	sequencer.c	FUNCTION_64	IF_1	IF_9	CALL_15
0x4009a5e	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009a60	          0x4c89ee	                            mov rsi, r13	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009a63	      0xe800000000	                          call 0x4009a68	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009a68	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009a6b	     0xf8827080000	                            js 0x400a298	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009a71	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a75	          0x4d63f6	                        movsxd r14, r14d	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a78	          0x4c39f0	                            cmp rax, r14	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a7b	            0x7633	                           jbe 0x4009ab0	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a7d	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a81	        0x488d48ff	                      lea rcx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a85	        0x488d340a	                    lea rsi, [rdx + rcx]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a89	          0x803e0a	                     cmp byte [rsi], 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a8c	            0x7522	                           jne 0x4009ab0	       412	sequencer.c	FUNCTION_15	IF_3
0x4009a8e	          0x4939ce	                            cmp r14, rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009a91	        0x48894b68	             mov qword [rbx + 0x68], rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009a95	            0x7310	                           jae 0x4009aa7	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009a97	        0x4883e802	                              sub rax, 2	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009a9b	          0x4801c2	                            add rdx, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009a9e	          0x803a0d	                     cmp byte [rdx], 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009aa1	     0xf84250c0000	                            je 0x400a6cc	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009aa7	          0xc60600	                       mov byte [rsi], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x4009aaa	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       415	sequencer.c	FUNCTION_15	IF_3
0x4009aae	            0x6690	                                     nop	       415	sequencer.c	FUNCTION_15	IF_3
0x4009ab0	          0x4939c6	                            cmp r14, rax	       418	sequencer.c	FUNCTION_15	IF_5
0x4009ab3	     0xf8402fcffff	                            je 0x40096bb	       418	sequencer.c	FUNCTION_15	IF_5
0x4009ab9	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      2137	sequencer.c	FUNCTION_64	IF_1	IF_9
0x4009abd	    0xc74378010000	               mov dword [rbx + 0x78], 1	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x4009ac4	    0x41bd02000000	                             mov r13d, 2	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x4009aca	            0xeb10	                           jmp 0x4009adc	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x4009acc	         0xf1f4000	                         nop dword [rax]	      2138	sequencer.c	FUNCTION_64	IF_1	IF_9
0x4009ad0	        0x488d7801	                      lea rdi, [rax + 1]	      2141	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009ad4	        0x44896b78	            mov dword [rbx + 0x78], r13d	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009ad8	        0x4183c501	                             add r13d, 1	      2140	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009adc	      0xbe0a000000	                            mov esi, 0xa	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009ae1	      0xe800000000	                          call 0x4009ae6	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009ae6	          0x4885c0	                           test rax, rax	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009ae9	            0x75e5	                           jne 0x4009ad0	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009aeb	      0xe9cbfbffff	                           jmp 0x40096bb	      2139	sequencer.c	FUNCTION_64	IF_1	IF_9	WHILE_1
0x4009af0	    0xc74328010000	               mov dword [rbx + 0x28], 1	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x4009af7	      0xe9c4feffff	                           jmp 0x40099c0	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x4009afc	         0xf1f4000	                         nop dword [rax]	      2125	sequencer.c	FUNCTION_64	IF_1	IF_7
0x4009b00	    0x488b3d000000	            mov rdi, qword [0x04009b07] 	       115	sequencer.c	CALL_18
0x4009b07	          0x4885ff	                           test rdi, rdi	       115	sequencer.c	CALL_18
0x4009b0a	     0xf84f1070000	                            je 0x400a301	       115	sequencer.c	CALL_18
0x4009b10	      0xe800000000	                          call 0x4009b15	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x4009b15	            0x85c0	                           test eax, eax	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x4009b17	            0x7448	                            je 0x4009b61	      3410	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_19
0x4009b19	    0x4c8b35000000	            mov r14, qword [0x04009b20] 	       115	sequencer.c	CALL_18
0x4009b20	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x4009b29	    0x48c744243800	               mov qword [rsp + 0x38], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x4009b32	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3411	sequencer.c	FUNCTION_90	ELSE_3	IF_12
0x4009b3b	          0x4d85f6	                           test r14, r14	       115	sequencer.c	CALL_18
0x4009b3e	     0xf846a0a0000	                            je 0x400a5ae	       115	sequencer.c	CALL_18
0x4009b44	          0x4c89f7	                            mov rdi, r14	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009b47	      0x4c8d6c2430	                   lea r13, [rsp + 0x30]	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009b4c	      0xe800000000	                          call 0x4009b51	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009b51	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009b53	     0xf85de030000	                           jne 0x4009f37	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009b59	          0x4c89ef	                            mov rdi, r13	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x4009b5c	      0xe800000000	                          call 0x4009b61	      3417	sequencer.c	FUNCTION_90	ELSE_3	IF_12	CALL_25
0x4009b61	          0x4889de	                            mov rsi, rbx	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009b64	          0x4889ef	                            mov rdi, rbp	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009b67	      0xe8b4d2ffff	                   call sym.pick_commits	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009b6c	          0x4189c5	                           mov r13d, eax	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009b6f	      0xe97ffbffff	                           jmp 0x40096f3	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009b74	         0xf1f4000	                         nop dword [rax]	      3420	sequencer.c	FUNCTION_90	CALL_26
0x4009b78	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009b7d	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009b7f	          0x4c89f6	                            mov rsi, r14	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009b82	          0x4c89ef	                            mov rdi, r13	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009b85	      0xe800000000	                          call 0x4009b8a	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009b8a	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009b8d	     0xf8828070000	                            js 0x400a2bb	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009b93	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009b98	          0x4d63ff	                        movsxd r15, r15d	       412	sequencer.c	FUNCTION_15	IF_3
0x4009b9b	          0x4c39f8	                            cmp rax, r15	       412	sequencer.c	FUNCTION_15	IF_3
0x4009b9e	     0xf8714030000	                            ja 0x4009eb8	       412	sequencer.c	FUNCTION_15	IF_3
0x4009ba4	          0x4939c7	                            cmp r15, rax	       418	sequencer.c	FUNCTION_15	IF_5
0x4009ba7	     0xf84f6fdffff	                            je 0x40099a3	       418	sequencer.c	FUNCTION_15	IF_5
0x4009bad	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009bb2	      0xbf00000000	                              mov edi, 0	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009bb7	      0xb914000000	                           mov ecx, 0x14	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009bbc	          0x4889c6	                            mov rsi, rax	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009bbf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009bc1	     0xf85c9020000	                           jne 0x4009e90	      2117	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009bc7	    0xc74318010000	               mov dword [rbx + 0x18], 1	      2118	sequencer.c	FUNCTION_64	IF_1	IF_4	IF_5
0x4009bce	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x4009bd4	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_109
0x4009bdd	     0xf8420050000	                            je 0x400a103	       165	strbuf.h	FUNCTION_109	IF_2
0x4009be3	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x4009be6	      0xe9b8fdffff	                           jmp 0x40099a3	       166	strbuf.h	FUNCTION_109	IF_2
0x4009beb	       0xf1f440000	                   nop dword [rax + rax]	       166	strbuf.h	FUNCTION_109	IF_2
0x4009bf0	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009bf5	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009bf7	          0x4c89f6	                            mov rsi, r14	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009bfa	          0x4c89ef	                            mov rdi, r13	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009bfd	      0xe800000000	                          call 0x4009c02	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009c02	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009c05	     0xf88d3060000	                            js 0x400a2de	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009c0b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009c10	          0x4c39f8	                            cmp rax, r15	       412	sequencer.c	FUNCTION_15	IF_3
0x4009c13	            0x763b	                           jbe 0x4009c50	       412	sequencer.c	FUNCTION_15	IF_3
0x4009c15	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009c1a	        0x488d48ff	                      lea rcx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009c1e	        0x488d340a	                    lea rsi, [rdx + rcx]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009c22	          0x803e0a	                     cmp byte [rsi], 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x4009c25	            0x7529	                           jne 0x4009c50	       412	sequencer.c	FUNCTION_15	IF_3
0x4009c27	          0x4939cf	                            cmp r15, rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009c2a	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009c2f	            0x7310	                           jae 0x4009c41	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009c31	        0x4883e802	                              sub rax, 2	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009c35	          0x4801c2	                            add rdx, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009c38	          0x803a0d	                     cmp byte [rdx], 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009c3b	     0xf84b50a0000	                            je 0x400a6f6	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009c41	          0xc60600	                       mov byte [rsi], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x4009c44	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       415	sequencer.c	FUNCTION_15	IF_3
0x4009c49	     0xf1f80000000	                         nop dword [rax]	       415	sequencer.c	FUNCTION_15	IF_3
0x4009c50	          0x4939c7	                            cmp r15, rax	       418	sequencer.c	FUNCTION_15	IF_5
0x4009c53	     0xf8425fdffff	                            je 0x400997e	       418	sequencer.c	FUNCTION_15	IF_5
0x4009c59	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4009c5e	      0xbe00000000	                              mov esi, 0	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4009c63	      0xe800000000	                          call 0x4009c68	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4009c68	            0x85c0	                           test eax, eax	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4009c6a	     0xf8485020000	                            je 0x4009ef5	      2107	sequencer.c	FUNCTION_64	IF_1	IF_2	IF_3	CALL_4
0x4009c70	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x4009c74	      0xe800000000	                          call 0x4009c79	      2110	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_5
0x4009c79	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x4009c7e	        0x488d7802	                      lea rdi, [rax + 2]	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x4009c82	      0xe800000000	                          call 0x4009c87	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x4009c87	        0x48894330	             mov qword [rbx + 0x30], rax	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x4009c8b	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2111	sequencer.c	FUNCTION_64	IF_1	IF_2	ELSE_1	CALL_6
0x4009c90	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x4009c96	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_109
0x4009c9f	     0xf84a0050000	                            je 0x400a245	       165	strbuf.h	FUNCTION_109	IF_2
0x4009ca5	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x4009ca8	      0xe9d1fcffff	                           jmp 0x400997e	       166	strbuf.h	FUNCTION_109	IF_2
0x4009cad	           0xf1f00	                         nop dword [rax]	       166	strbuf.h	FUNCTION_109	IF_2
0x4009cb0	    0x803d00000000	                cmp byte [0x04009cb7], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x4009cb7	     0xf8447fdffff	                            je 0x4009a04	       168	strbuf.h	FUNCTION_109	CALL_2
0x4009cbd	      0xe94e040000	                           jmp 0x400a110	       168	strbuf.h	FUNCTION_109	CALL_2
0x4009cc2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x4009cc8	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009cd0	      0xbf00000000	                              mov edi, 0	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009cd5	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x4009cde	    0x48c744243800	               mov qword [rsp + 0x38], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x4009ce7	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3263	sequencer.c	FUNCTION_89	IF_2
0x4009cf0	      0xe800000000	                          call 0x4009cf5	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009cf5	            0x85c0	                           test eax, eax	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009cf7	     0xf857a0b0000	                           jne 0x400a877	      3266	sequencer.c	FUNCTION_89	IF_2	IF_3	CALL_6
0x4009cfd	    0x4c8b3d000000	            mov r15, qword [0x04009d04] 	       110	sequencer.c	CALL_17
0x4009d04	          0x4d85ff	                           test r15, r15	       110	sequencer.c	CALL_17
0x4009d07	     0xf84030a0000	                            je 0x400a710	       110	sequencer.c	CALL_17
0x4009d0d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       402	sequencer.c	FUNCTION_15
0x4009d12	          0x4c89ff	                            mov rdi, r15	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009d15	      0x4889442408	                mov qword [rsp + 8], rax	       402	sequencer.c	FUNCTION_15
0x4009d1a	      0xe800000000	                          call 0x4009d1f	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009d1f	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009d21	     0xf85f5050000	                           jne 0x400a31c	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009d27	    0x488b1d000000	            mov rbx, qword [0x04009d2e] 	       110	sequencer.c	CALL_17
0x4009d2e	          0x4885db	                           test rbx, rbx	       110	sequencer.c	CALL_17
0x4009d31	     0xf841d0c0000	                            je 0x400a954	       110	sequencer.c	CALL_17
0x4009d37	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x4009d3c	      0xe8df64ffff	                       call sym._.part.6	       110	sequencer.c	CALL_17
0x4009d41	          0x4889de	                            mov rsi, rbx	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009d44	          0x4889c7	                            mov rdi, rax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009d47	            0x31c0	                            xor eax, eax	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009d49	      0xe800000000	                          call 0x4009d4e	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009d4e	            0x6690	                                     nop	      3299	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_23
0x4009d50	      0xb8ffffffff	                     mov eax, 0xffffffff	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x4009d55	      0xe9aef9ffff	                           jmp 0x4009708	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x4009d5a	    0x660f1f440000	                    nop word [rax + rax]	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x4009d60	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009d62	          0x4c89f6	                            mov rsi, r14	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009d65	          0x4c89ef	                            mov rdi, r13	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009d68	      0xe800000000	                          call 0x4009d6d	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009d6d	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009d70	     0xf88ea040000	                            js 0x400a260	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009d76	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d7b	          0x4d63ff	                        movsxd r15, r15d	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d7e	          0x4c39f8	                            cmp rax, r15	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d81	            0x7635	                           jbe 0x4009db8	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d83	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d88	        0x488d48ff	                      lea rcx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d8c	        0x488d340a	                    lea rsi, [rdx + rcx]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d90	          0x803e0a	                     cmp byte [rsi], 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d93	            0x7523	                           jne 0x4009db8	       412	sequencer.c	FUNCTION_15	IF_3
0x4009d95	          0x4939cf	                            cmp r15, rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009d98	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009d9d	            0x7310	                           jae 0x4009daf	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009d9f	        0x4883e802	                              sub rax, 2	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009da3	          0x4801c2	                            add rdx, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009da6	          0x803a0d	                     cmp byte [rdx], 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009da9	     0xf8410090000	                            je 0x400a6bf	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009daf	          0xc60600	                       mov byte [rsi], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x4009db2	    0x660f1f440000	                    nop word [rax + rax]	       415	sequencer.c	FUNCTION_15	IF_3
0x4009db8	            0x31f6	                            xor esi, esi	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4009dba	          0x4c89ef	                            mov rdi, r13	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4009dbd	      0xe800000000	                          call 0x4009dc2	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4009dc2	    0x4c8b35000000	            mov r14, qword [0x04009dc9] 	       144	sequencer.c	CALL_30
0x4009dc9	        0x48894340	             mov qword [rbx + 0x40], rax	      2088	sequencer.c	FUNCTION_63	CALL_3
0x4009dcd	          0x4d85f6	                           test r14, r14	       144	sequencer.c	CALL_30
0x4009dd0	     0xf8492070000	                            je 0x400a568	       144	sequencer.c	CALL_30
0x4009dd6	          0x4c89f7	                            mov rdi, r14	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009dd9	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       402	sequencer.c	FUNCTION_15
0x4009dde	      0xe800000000	                          call 0x4009de3	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009de3	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009de5	     0xf8443fcffff	                            je 0x4009a2e	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x4009deb	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009ded	          0x4c89f6	                            mov rsi, r14	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009df0	          0x4c89ef	                            mov rdi, r13	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009df3	      0xe800000000	                          call 0x4009df8	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009df8	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009dfb	     0xf885f040000	                            js 0x400a260	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009e01	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e06	          0x4d63ff	                        movsxd r15, r15d	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e09	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e0e	          0x4c39f8	                            cmp rax, r15	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e11	            0x7611	                           jbe 0x4009e24	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e13	        0x488d48ff	                      lea rcx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e17	        0x488d140f	                    lea rdx, [rdi + rcx]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e1b	          0x803a0a	                     cmp byte [rdx], 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e1e	     0xf845f070000	                            je 0x400a583	       412	sequencer.c	FUNCTION_15	IF_3
0x4009e24	        0x488d7348	                   lea rsi, [rbx + 0x48]	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4009e28	          0x4531f6	                          xor r14d, r14d	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009e2b	      0xe800000000	                          call 0x4009e30	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4009e30	            0x4898	                                    cdqe	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4009e32	          0x4885c0	                           test rax, rax	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009e35	        0x48894350	             mov qword [rbx + 0x50], rax	      2092	sequencer.c	FUNCTION_63	CALL_6
0x4009e39	     0xf84effbffff	                            je 0x4009a2e	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009e3f	              0x90	                                     nop	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009e40	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4009e44	        0x4e8d3cf0	                  lea r15, [rax + r14*8]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4009e48	      0xb800000000	                              mov eax, 0	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4009e4d	          0x498b0f	                    mov rcx, qword [r15]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4009e50	          0x4889cf	                            mov rdi, rcx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4009e53	            0xeb14	                           jmp 0x4009e69	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4009e55	           0xf1f00	                         nop dword [rax]	      2094	sequencer.c	FUNCTION_63	FOR_1
0x4009e58	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4009e5c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4009e60	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4009e63	     0xf8577020000	                           jne 0x400a0e0	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4009e69	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4009e6c	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4009e6e	            0x75e8	                           jne 0x4009e58	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4009e70	      0xe800000000	                          call 0x4009e75	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x4009e75	        0x4983c601	                              add r14, 1	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x4009e79	        0x4c397350	            cmp qword [rbx + 0x50], r14 	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009e7d	          0x498907	                    mov qword [r15], rax	      2097	sequencer.c	FUNCTION_63	FOR_1	CALL_8
0x4009e80	            0x77be	                            ja 0x4009e40	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009e82	      0xe9a7fbffff	                           jmp 0x4009a2e	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009e87	    0x660f1f840000	                    nop word [rax + rax]	      2093	sequencer.c	FUNCTION_63	FOR_1
0x4009e90	      0xbf00000000	                              mov edi, 0	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009e95	      0xb917000000	                           mov ecx, 0x17	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009e9a	          0x4889c6	                            mov rsi, rax	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009e9d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009e9f	     0xf8529fdffff	                           jne 0x4009bce	      2119	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009ea5	    0xc74318020000	               mov dword [rbx + 0x18], 2	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009eac	      0xe91dfdffff	                           jmp 0x4009bce	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009eb1	     0xf1f80000000	                         nop dword [rax]	      2120	sequencer.c	FUNCTION_64	IF_1	IF_4	ELSE_2	IF_6
0x4009eb8	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009ebd	        0x488d48ff	                      lea rcx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009ec1	        0x488d340a	                    lea rsi, [rdx + rcx]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009ec5	          0x803e0a	                     cmp byte [rsi], 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x4009ec8	     0xf85d6fcffff	                           jne 0x4009ba4	       412	sequencer.c	FUNCTION_15	IF_3
0x4009ece	          0x4939cf	                            cmp r15, rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009ed1	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009ed6	            0x7310	                           jae 0x4009ee8	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009ed8	        0x4883e802	                              sub rax, 2	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009edc	          0x4801c2	                            add rdx, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009edf	          0x803a0d	                     cmp byte [rdx], 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009ee2	     0xf841b080000	                            je 0x400a703	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x4009ee8	          0xc60600	                       mov byte [rsi], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x4009eeb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       415	sequencer.c	FUNCTION_15	IF_3
0x4009ef0	      0xe9affcffff	                           jmp 0x4009ba4	       415	sequencer.c	FUNCTION_15	IF_3
0x4009ef5	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_109	IF_2
0x4009efa	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_109
0x4009f03	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x4009f09	     0xf8420030000	                            je 0x400a22f	       165	strbuf.h	FUNCTION_109	IF_2
0x4009f0f	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x4009f12	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       166	strbuf.h	FUNCTION_109	IF_2
0x4009f17	      0xe974fdffff	                           jmp 0x4009c90	       166	strbuf.h	FUNCTION_109	IF_2
0x4009f1c	      0xbf00000000	                              mov edi, 0	        40	sequencer.c	CALL_3
0x4009f21	            0x31c0	                            xor eax, eax	        40	sequencer.c	CALL_3
0x4009f23	      0xe800000000	                          call 0x4009f28	        40	sequencer.c	CALL_3
0x4009f28	          0x4889c7	                            mov rdi, rax	        40	sequencer.c	CALL_3
0x4009f2b	    0x488905000000	            mov qword [0x04009f32], rax 	        40	sequencer.c	CALL_3
0x4009f32	      0xe99df7ffff	                           jmp 0x40096d4	        40	sequencer.c	CALL_3
0x4009f37	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009f39	          0x4c89f6	                            mov rsi, r14	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009f3c	          0x4c89ef	                            mov rdi, r13	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009f3f	      0xe800000000	                          call 0x4009f44	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009f44	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009f47	     0xf8819070000	                            js 0x400a666	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x4009f4d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009f52	          0x4c39e0	                            cmp rax, r12	       412	sequencer.c	FUNCTION_15	IF_3
0x4009f55	            0x7616	                           jbe 0x4009f6d	       412	sequencer.c	FUNCTION_15	IF_3
0x4009f57	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       412	sequencer.c	FUNCTION_15	IF_3
0x4009f5c	        0x488d70ff	                      lea rsi, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009f60	        0x488d0c32	                    lea rcx, [rdx + rsi]	       412	sequencer.c	FUNCTION_15	IF_3
0x4009f64	          0x80390a	                     cmp byte [rcx], 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x4009f67	     0xf84b2060000	                            je 0x400a61f	       412	sequencer.c	FUNCTION_15	IF_3
0x4009f6d	          0x4939c4	                            cmp r12, rax	       418	sequencer.c	FUNCTION_15	IF_5
0x4009f70	     0xf84e3fbffff	                            je 0x4009b59	       418	sequencer.c	FUNCTION_15	IF_5
0x4009f76	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x4009f7b	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x4009f83	      0xe800000000	                          call 0x4009f88	      3415	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_22
0x4009f88	            0x85c0	                           test eax, eax	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009f8a	     0xf85c9fbffff	                           jne 0x4009b59	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009f90	        0x8b742470	            mov esi, dword [rsp + 0x70] 	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009f94	        0x8b542478	            mov edx, dword [rsp + 0x78] 	      3414	sequencer.c	FUNCTION_90	ELSE_3	IF_12	IF_13	CALL_21
0x4009f98	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x4009f9e	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2910	sequencer.c	FUNCTION_84
0x4009fa3	            0x39d6	                            cmp esi, edx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009fa5	            0x7e49	                           jle 0x4009ff0	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009fa7	          0x4863ca	                         movsxd rcx, edx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009faa	        0x488d0449	                  lea rax, [rcx + rcx*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fae	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fb2	          0x4801f8	                            add rax, rdi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fb5	          0x448b20	                   mov r12d, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fb8	        0x4183fc09	                             cmp r12d, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fbc	            0x7632	                           jbe 0x4009ff0	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fbe	          0x83ee01	                              sub esi, 1	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fc1	            0x29d6	                            sub esi, edx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fc3	          0x4801f1	                            add rcx, rsi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fc6	        0x488d1449	                  lea rdx, [rcx + rcx*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fca	        0x48c1e204	                              shl rdx, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fce	          0x4801fa	                            add rdx, rdi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fd1	            0xeb12	                           jmp 0x4009fe5	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fd3	       0xf1f440000	                   nop dword [rax + rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fd8	        0x4883c030	                           add rax, 0x30	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fdc	          0x448b20	                   mov r12d, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fdf	        0x4183fc09	                             cmp r12d, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fe3	            0x760b	                           jbe 0x4009ff0	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x4009fe5	          0x4839d0	                            cmp rax, rdx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009fe8	            0x75ee	                           jne 0x4009fd8	      2906	sequencer.c	FUNCTION_84	FOR_1
0x4009fea	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x4009ff0	    0x488b3d000000	            mov rdi, qword [0x04009ff7] 	       123	sequencer.c	CALL_20
0x4009ff7	          0x4885ff	                           test rdi, rdi	       123	sequencer.c	CALL_20
0x4009ffa	     0xf84a1070000	                            je 0x400a7a1	       123	sequencer.c	CALL_20
0x400a000	      0xbe00000000	                              mov esi, 0	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400a005	      0xe800000000	                          call 0x400a00a	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400a00a	          0x4885c0	                           test rax, rax	      1485	sequencer.c	FUNCTION_47	IF_1
0x400a00d	          0x4989c6	                            mov r14, rax	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400a010	     0xf8443fbffff	                            je 0x4009b59	      1485	sequencer.c	FUNCTION_47	IF_1
0x400a016	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1488	sequencer.c	FUNCTION_47	CALL_3
0x400a01e	        0x4183ec04	                             sub r12d, 4	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x400a022	      0xe800000000	                          call 0x400a027	      1488	sequencer.c	FUNCTION_47	CALL_3
0x400a027	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x400a02c	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_279
0x400a02f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400a034	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_279
0x400a037	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400a039	      0xe800000000	                          call 0x400a03e	        97	stdio2.h	CALL_279
0x400a03e	          0x4c89f7	                            mov rdi, r14	      1489	sequencer.c	FUNCTION_47	CALL_4
0x400a041	      0xe800000000	                          call 0x400a046	      1489	sequencer.c	FUNCTION_47	CALL_4
0x400a046	        0x4183fc01	                             cmp r12d, 1	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x400a04a	     0xf8609fbffff	                           jbe 0x4009b59	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x400a050	      0xe84b60ffff	        call sym.flush_rewritten_pending	      1492	sequencer.c	FUNCTION_47	CALL_6
0x400a055	      0xe9fffaffff	                           jmp 0x4009b59	      1492	sequencer.c	FUNCTION_47	CALL_6
0x400a05a	    0x488b1d000000	            mov rbx, qword [0x0400a061] 	        41	sequencer.c	CALL_4
0x400a061	          0x4885db	                           test rbx, rbx	        41	sequencer.c	CALL_4
0x400a064	     0xf8474080000	                            je 0x400a8de	        41	sequencer.c	CALL_4
0x400a06a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a06f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a074	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a076	      0xe800000000	                          call 0x400a07b	        54	gettext.h	FUNCTION_164
0x400a07b	          0x4889de	                            mov rsi, rbx	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x400a07e	          0x4889c7	                            mov rdi, rax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x400a081	            0x31c0	                            xor eax, eax	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x400a083	      0xe800000000	                          call 0x400a088	      2157	sequencer.c	FUNCTION_64	IF_11	CALL_21
0x400a088	      0xb8ffffffff	                     mov eax, 0xffffffff	      3386	sequencer.c	FUNCTION_90	IF_2
0x400a08d	      0xe976f6ffff	                           jmp 0x4009708	      3386	sequencer.c	FUNCTION_90	IF_2
0x400a092	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a097	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a09c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a09e	      0xe800000000	                          call 0x400a0a3	        54	gettext.h	FUNCTION_164
0x400a0a3	          0x4889c7	                            mov rdi, rax	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0a6	            0x31c0	                            xor eax, eax	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0a8	      0xe800000000	                          call 0x400a0ad	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0ad	      0xb8ffffffff	                     mov eax, 0xffffffff	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0b2	      0xe951f6ffff	                           jmp 0x4009708	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0b7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a0bc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a0c1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a0c3	      0xe800000000	                          call 0x400a0c8	        54	gettext.h	FUNCTION_164
0x400a0c8	          0x4889c7	                            mov rdi, rax	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0cb	            0x31c0	                            xor eax, eax	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0cd	    0x41bdffffffff	                    mov r13d, 0xffffffff	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0d3	      0xe800000000	                          call 0x400a0d8	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0d8	      0xe916f6ffff	                           jmp 0x40096f3	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0dd	           0xf1f00	                         nop dword [rax]	      3247	sequencer.c	FUNCTION_88	CALL_5
0x400a0e0	          0x4889cf	                            mov rdi, rcx	      2094	sequencer.c	FUNCTION_63	FOR_1
0x400a0e3	      0xe988fdffff	                           jmp 0x4009e70	      2094	sequencer.c	FUNCTION_63	FOR_1
0x400a0e8	      0xbf00000000	                              mov edi, 0	        41	sequencer.c	CALL_4
0x400a0ed	            0x31c0	                            xor eax, eax	        41	sequencer.c	CALL_4
0x400a0ef	      0xe800000000	                          call 0x400a0f4	        41	sequencer.c	CALL_4
0x400a0f4	          0x4889c7	                            mov rdi, rax	        41	sequencer.c	CALL_4
0x400a0f7	    0x488905000000	            mov qword [0x0400a0fe], rax 	        41	sequencer.c	CALL_4
0x400a0fe	      0xe98af5ffff	                           jmp 0x400968d	        41	sequencer.c	CALL_4
0x400a103	    0x803d00000000	                cmp byte [0x0400a10a], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a10a	     0xf8493f8ffff	                            je 0x40099a3	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a110	      0xe800000000	                          call 0x400a115	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a115	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a118	      0xbf00000000	                              mov edi, 0	        41	sequencer.c	CALL_4
0x400a11d	            0x31c0	                            xor eax, eax	        41	sequencer.c	CALL_4
0x400a11f	      0xe800000000	                          call 0x400a124	        41	sequencer.c	CALL_4
0x400a124	          0x4889c6	                            mov rsi, rax	        41	sequencer.c	CALL_4
0x400a127	    0x488905000000	            mov qword [0x0400a12e], rax 	        41	sequencer.c	CALL_4
0x400a12e	      0xe973f5ffff	                           jmp 0x40096a6	        41	sequencer.c	CALL_4
0x400a133	          0x4889df	                            mov rdi, rbx	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400a136	      0xe8356bffff	              call sym.error_dirty_index	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400a13b	          0x4189c5	                           mov r13d, eax	      3406	sequencer.c	FUNCTION_90	IF_8	IF_11	CALL_17
0x400a13e	      0xe9b0f5ffff	                           jmp 0x40096f3	      3407	sequencer.c	FUNCTION_90	IF_8	IF_11
0x400a143	      0xe800000000	                          call 0x400a148	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x400a148	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a14b	          0x4989c5	                            mov r13, rax	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x400a14e	      0xe800000000	                          call 0x400a153	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a153	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a155	     0xf843df7ffff	                            je 0x4009898	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a15b	          0x4c89ef	                            mov rdi, r13	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a15e	      0xe800000000	                          call 0x400a163	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a163	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a165	     0xf842df7ffff	                            je 0x4009898	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a16b	      0xbf00000000	                              mov edi, 0	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a170	      0xe8ab60ffff	                       call sym._.part.6	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a175	          0x4889c7	                            mov rdi, rax	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400a178	            0x31c0	                            xor eax, eax	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400a17a	      0xe800000000	                          call 0x400a17f	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400a17f	      0xe9ccfbffff	                           jmp 0x4009d50	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400a184	         0xf1f4000	                         nop dword [rax]	      3352	sequencer.c	FUNCTION_89	IF_14	CALL_42
0x400a188	      0xbf00000000	                              mov edi, 0	       136	sequencer.c	CALL_22
0x400a18d	            0x31c0	                            xor eax, eax	       136	sequencer.c	CALL_22
0x400a18f	      0xe800000000	                          call 0x400a194	       136	sequencer.c	CALL_22
0x400a194	      0x4c637c2418	         movsxd r15, dword [rsp + 0x18] 	       136	sequencer.c	CALL_22
0x400a199	          0x4989c6	                            mov r14, rax	       136	sequencer.c	CALL_22
0x400a19c	    0x488905000000	            mov qword [0x0400a1a3], rax 	       136	sequencer.c	CALL_22
0x400a1a3	      0xe9c6f7ffff	                           jmp 0x400996e	       136	sequencer.c	CALL_22
0x400a1a8	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x400a1ad	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x400a1af	      0xe800000000	                          call 0x400a1b4	        95	sequencer.c	CALL_15
0x400a1b4	          0x4989c5	                            mov r13, rax	        95	sequencer.c	CALL_15
0x400a1b7	    0x488905000000	            mov qword [0x0400a1be], rax 	        95	sequencer.c	CALL_15
0x400a1be	      0xe983f8ffff	                           jmp 0x4009a46	        95	sequencer.c	CALL_15
0x400a1c3	      0xbf00000000	                              mov edi, 0	       143	sequencer.c	CALL_29
0x400a1c8	            0x31c0	                            xor eax, eax	       143	sequencer.c	CALL_29
0x400a1ca	      0xe800000000	                          call 0x400a1cf	       143	sequencer.c	CALL_29
0x400a1cf	          0x4989c6	                            mov r14, rax	       143	sequencer.c	CALL_29
0x400a1d2	    0x488905000000	            mov qword [0x0400a1d9], rax 	       143	sequencer.c	CALL_29
0x400a1d9	      0xe936f8ffff	                           jmp 0x4009a14	       143	sequencer.c	CALL_29
0x400a1de	      0xbf00000000	                              mov edi, 0	       139	sequencer.c	CALL_25
0x400a1e3	            0x31c0	                            xor eax, eax	       139	sequencer.c	CALL_25
0x400a1e5	      0xe800000000	                          call 0x400a1ea	       139	sequencer.c	CALL_25
0x400a1ea	          0x4889c7	                            mov rdi, rax	       139	sequencer.c	CALL_25
0x400a1ed	    0x488905000000	            mov qword [0x0400a1f4], rax 	       139	sequencer.c	CALL_25
0x400a1f4	      0xe9d7f7ffff	                           jmp 0x40099d0	       139	sequencer.c	CALL_25
0x400a1f9	      0xbf00000000	                              mov edi, 0	       145	sequencer.c	CALL_31
0x400a1fe	            0x31c0	                            xor eax, eax	       145	sequencer.c	CALL_31
0x400a200	      0xe800000000	                          call 0x400a205	       145	sequencer.c	CALL_31
0x400a205	          0x4989c6	                            mov r14, rax	       145	sequencer.c	CALL_31
0x400a208	    0x488905000000	            mov qword [0x0400a20f], rax 	       145	sequencer.c	CALL_31
0x400a20f	      0xe97af7ffff	                           jmp 0x400998e	       145	sequencer.c	CALL_31
0x400a214	      0xbf00000000	                              mov edi, 0	       138	sequencer.c	CALL_24
0x400a219	            0x31c0	                            xor eax, eax	       138	sequencer.c	CALL_24
0x400a21b	      0xe800000000	                          call 0x400a220	       138	sequencer.c	CALL_24
0x400a220	          0x4889c7	                            mov rdi, rax	       138	sequencer.c	CALL_24
0x400a223	    0x488905000000	            mov qword [0x0400a22a], rax 	       138	sequencer.c	CALL_24
0x400a22a	      0xe984f7ffff	                           jmp 0x40099b3	       138	sequencer.c	CALL_24
0x400a22f	    0x803d00000000	                cmp byte [0x0400a236], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a236	     0xf85d4feffff	                           jne 0x400a110	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a23c	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_109
0x400a245	    0x803d00000000	                cmp byte [0x0400a24c], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a24c	     0xf842cf7ffff	                            je 0x400997e	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a252	      0xe9b9feffff	                           jmp 0x400a110	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a257	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a260	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a262	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a267	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a26c	      0xe800000000	                          call 0x400a271	        54	gettext.h	FUNCTION_164
0x400a271	          0x4c89f6	                            mov rsi, r14	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a274	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a277	            0x31c0	                            xor eax, eax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a279	      0xe800000000	                          call 0x400a27e	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a27e	      0xe9abf7ffff	                           jmp 0x4009a2e	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a283	    0x803d00000000	                cmp byte [0x0400a28a], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a28a	     0xf84fef5ffff	                            je 0x400988e	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a290	      0xe97bfeffff	                           jmp 0x400a110	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a295	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a298	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a29a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a29f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a2a4	      0xe800000000	                          call 0x400a2a9	        54	gettext.h	FUNCTION_164
0x400a2a9	          0x4c89ee	                            mov rsi, r13	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2ac	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2af	            0x31c0	                            xor eax, eax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2b1	      0xe800000000	                          call 0x400a2b6	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2b6	      0xe900f4ffff	                           jmp 0x40096bb	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2bb	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a2bd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a2c2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a2c7	      0xe800000000	                          call 0x400a2cc	        54	gettext.h	FUNCTION_164
0x400a2cc	          0x4c89f6	                            mov rsi, r14	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2cf	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2d2	            0x31c0	                            xor eax, eax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2d4	      0xe800000000	                          call 0x400a2d9	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2d9	      0xe9c5f6ffff	                           jmp 0x40099a3	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2de	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a2e0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a2e5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a2ea	      0xe800000000	                          call 0x400a2ef	        54	gettext.h	FUNCTION_164
0x400a2ef	          0x4c89f6	                            mov rsi, r14	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2f2	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2f5	            0x31c0	                            xor eax, eax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2f7	      0xe800000000	                          call 0x400a2fc	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a2fc	      0xe97df6ffff	                           jmp 0x400997e	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a301	      0xbf00000000	                              mov edi, 0	       115	sequencer.c	CALL_18
0x400a306	            0x31c0	                            xor eax, eax	       115	sequencer.c	CALL_18
0x400a308	      0xe800000000	                          call 0x400a30d	       115	sequencer.c	CALL_18
0x400a30d	          0x4889c7	                            mov rdi, rax	       115	sequencer.c	CALL_18
0x400a310	    0x488905000000	            mov qword [0x0400a317], rax 	       115	sequencer.c	CALL_18
0x400a317	      0xe9f4f7ffff	                           jmp 0x4009b10	       115	sequencer.c	CALL_18
0x400a31c	      0x4c8d6c2430	                   lea r13, [rsp + 0x30]	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400a321	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400a323	          0x4c89fe	                            mov rsi, r15	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400a326	          0x4c89ef	                            mov rdi, r13	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400a329	      0xe800000000	                          call 0x400a32e	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400a32e	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400a331	     0xf886f050000	                            js 0x400a8a6	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400a337	      0x4c637c2408	            movsxd r15, dword [rsp + 8] 	       412	sequencer.c	FUNCTION_15	IF_3
0x400a33c	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       412	sequencer.c	FUNCTION_15	IF_3
0x400a341	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       412	sequencer.c	FUNCTION_15	IF_3
0x400a346	          0x4c39f8	                            cmp rax, r15	       412	sequencer.c	FUNCTION_15	IF_3
0x400a349	            0x760f	                           jbe 0x400a35a	       412	sequencer.c	FUNCTION_15	IF_3
0x400a34b	      0x807c07ff0a	          cmp byte [rdi + rax - 1], 0xa 	       412	sequencer.c	FUNCTION_15	IF_3
0x400a350	        0x488d50ff	                      lea rdx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x400a354	     0xf84d1030000	                            je 0x400a72b	       412	sequencer.c	FUNCTION_15	IF_3
0x400a35a	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a362	      0xe800000000	                          call 0x400a367	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a367	            0x85c0	                           test eax, eax	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a369	     0xf85e8030000	                           jne 0x400a757	      3270	sequencer.c	FUNCTION_89	IF_2	IF_5	CALL_12
0x400a36f	          0x4585f6	                         test r14d, r14d	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a372	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x400a377	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	       975	cache.h	FUNCTION_173	CALL_1
0x400a37f	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       975	cache.h	FUNCTION_173	CALL_1
0x400a387	            0x741f	                            je 0x400a3a8	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a389	      0xe800000000	                          call 0x400a38e	       975	cache.h	FUNCTION_173	CALL_1
0x400a38e	            0x85c0	                           test eax, eax	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a390	     0xf852a060000	                           jne 0x400a9c0	      3273	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_15
0x400a396	          0x4c89ef	                            mov rdi, r13	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x400a399	      0xe800000000	                          call 0x400a39e	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x400a39e	      0xba07000000	                              mov edx, 7	      3345	sequencer.c	FUNCTION_89	IF_2
0x400a3a3	      0xe945f4ffff	                           jmp 0x40097ed	      3345	sequencer.c	FUNCTION_89	IF_2
0x400a3a8	      0xe800000000	                          call 0x400a3ad	       975	cache.h	FUNCTION_173	CALL_1
0x400a3ad	            0x85c0	                           test eax, eax	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a3af	     0xf85a9010000	                           jne 0x400a55e	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a3b5	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a3b8	            0x85c9	                           test ecx, ecx	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a3ba	     0xf8e9e010000	                           jle 0x400a55e	      3285	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_17
0x400a3c0	    0x488b05000000	            mov rax, qword [0x0400a3c7] 	       115	sequencer.c	CALL_18
0x400a3c7	          0x4885c0	                           test rax, rax	       115	sequencer.c	CALL_18
0x400a3ca	     0xf84c0040000	                            je 0x400a890	       115	sequencer.c	CALL_18
0x400a3d0	          0x4889c7	                            mov rdi, rax	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x400a3d3	      0xe800000000	                          call 0x400a3d8	      3287	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_19
0x400a3d8	            0x85c0	                           test eax, eax	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a3da	     0xf847e010000	                            je 0x400a55e	      3286	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a3e0	        0x488b4b68	            mov rcx, qword [rbx + 0x68] 	      3289	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a3e4	        0x836b7801	               sub dword [rbx + 0x78], 1	      3291	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a3e8	        0x4c8b7370	            mov r14, qword [rbx + 0x70] 	      3288	sequencer.c	FUNCTION_89	IF_2	IF_7
0x400a3ec	            0x85c9	                           test ecx, ecx	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a3ee	     0xf84b3050000	                            je 0x400a9a7	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a3f4	          0x4863c1	                         movsxd rax, ecx	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a3f7	          0x83e901	                              sub ecx, 1	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a3fa	        0x488d50ff	                      lea rdx, [rax - 1]	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a3fe	          0x4829ca	                            sub rdx, rcx	      3292	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a401	    0x41807c06ff0a	          cmp byte [r14 + rax - 1], 0xa 	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a407	     0xf847d030000	                            je 0x400a78a	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a40d	        0x4883e801	                              sub rax, 1	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a411	          0x4839c2	                            cmp rdx, rax	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a414	            0x75eb	                           jne 0x400a401	      3294	sequencer.c	FUNCTION_89	IF_2	IF_7	WHILE_1
0x400a416	        0x4c8b7b60	            mov r15, qword [rbx + 0x60] 	       162	strbuf.h	FUNCTION_109	IF_1
0x400a41a	          0x4d85ff	                           test r15, r15	       162	strbuf.h	FUNCTION_109	IF_1
0x400a41d	            0x7412	                            je 0x400a431	       162	strbuf.h	FUNCTION_109	IF_1
0x400a41f	            0x31c0	                            xor eax, eax	      3296	sequencer.c	FUNCTION_89	IF_2	IF_7	CALL_20
0x400a421	        0x498d57ff	                      lea rdx, [r15 - 1]	       162	strbuf.h	FUNCTION_109	IF_1
0x400a425	          0x4989c7	                            mov r15, rax	       162	strbuf.h	FUNCTION_109	IF_1
0x400a428	          0x4939d7	                            cmp r15, rdx	       162	strbuf.h	FUNCTION_109	IF_1
0x400a42b	     0xf87a8050000	                            ja 0x400a9d9	       162	strbuf.h	FUNCTION_109	IF_1
0x400a431	    0x4981fe000000	                              cmp r14, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400a438	        0x4c897b68	             mov qword [rbx + 0x68], r15	       164	strbuf.h	FUNCTION_109
0x400a43c	     0xf8423040000	                            je 0x400a865	       165	strbuf.h	FUNCTION_109	IF_2
0x400a442	      0x43c6043e00	                 mov byte [r14 + r15], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400a447	    0x488b05000000	            mov rax, qword [0x0400a44e] 	        95	sequencer.c	CALL_15
0x400a44e	          0x4885c0	                           test rax, rax	        95	sequencer.c	CALL_15
0x400a451	     0xf84e7040000	                            je 0x400a93e	        95	sequencer.c	CALL_15
0x400a457	          0x4889c2	                            mov rdx, rax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a45a	          0x4c89fe	                            mov rsi, r15	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a45d	          0x4c89f7	                            mov rdi, r14	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a460	      0xe88b6effff	     call sym.write_message.constprop.34	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a465	            0x85c0	                           test eax, eax	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a467	     0xf8899040000	                            js 0x400a906	      3297	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_9	CALL_22
0x400a46d	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a470	      0x4c8b442468	              mov r8, qword [rsp + 0x68]	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a475	        0x8b7c2470	            mov edi, dword [rsp + 0x70] 	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a479	        0x8b4c2478	            mov ecx, dword [rsp + 0x78] 	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a47d	            0x85d2	                           test edx, edx	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a47f	     0xf8e37030000	                           jle 0x400a7bc	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a485	            0x39cf	                            cmp edi, ecx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a487	            0x7e3e	                           jle 0x400a4c7	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a489	          0x4863f1	                         movsxd rsi, ecx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a48c	        0x488d0476	                  lea rax, [rsi + rsi*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a490	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a494	          0x4c01c0	                             add rax, r8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a497	            0x8b10	                    mov edx, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a499	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a49c	     0xf8643050000	                           jbe 0x400a9e5	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4a2	          0x8d57ff	                      lea edx, [rdi - 1]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4a5	            0x29ca	                            sub edx, ecx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4a7	          0x4801f2	                            add rdx, rsi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4aa	        0x4c8d0c52	                   lea r9, [rdx + rdx*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4ae	        0x49c1e104	                               shl r9, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4b2	          0x4d01c1	                              add r9, r8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4b5	            0xeb0b	                           jmp 0x400a4c2	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4b7	        0x4883c030	                           add rax, 0x30	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4bb	            0x8b10	                    mov edx, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4bd	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4c0	            0x7671	                           jbe 0x400a533	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a4c2	          0x4939c1	                             cmp r9, rax	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a4c5	            0x75f0	                           jne 0x400a4b7	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a4c7	      0xbe00000000	                              mov esi, 0	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4cc	          0x4c89f7	                            mov rdi, r14	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4cf	      0xe800000000	                          call 0x400a4d4	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4d4	            0x85c0	                           test eax, eax	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4d6	     0xf85ed030000	                           jne 0x400a8c9	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4dc	          0x4c89f7	                            mov rdi, r14	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400a4df	      0xbe00000000	                              mov esi, 0	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400a4e4	    0x41be01000000	                             mov r14d, 1	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4ea	      0xe800000000	                          call 0x400a4ef	      3323	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11
0x400a4ef	        0x4883f801	                              cmp rax, 1	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4f3	            0x19d2	                            sbb edx, edx	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4f5	          0x83e206	                              and edx, 6	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4f8	          0x83c207	                              add edx, 7	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a4fb	          0x4c89ef	                            mov rdi, r13	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x400a4fe	        0x89542408	                mov dword [rsp + 8], edx	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x400a502	      0xe800000000	                          call 0x400a507	      3344	sequencer.c	FUNCTION_89	IF_2	CALL_38
0x400a507	      0xe800000000	                          call 0x400a50c	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x400a50c	          0x4889c7	                            mov rdi, rax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a50f	          0x4989c5	                            mov r13, rax	      3349	sequencer.c	FUNCTION_89	IF_14	CALL_39
0x400a512	      0xe800000000	                          call 0x400a517	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a517	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a519	        0x8b542408	                mov edx, dword [rsp + 8]	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a51d	     0xf854c040000	                           jne 0x400a96f	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a523	          0x4585f6	                         test r14d, r14d	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x400a526	     0xf846cf3ffff	                            je 0x4009898	      3353	sequencer.c	FUNCTION_89	IF_14	IF_16
0x400a52c	            0x31ff	                            xor edi, edi	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x400a52e	      0xe9d0f2ffff	                           jmp 0x4009803	      3357	sequencer.c	FUNCTION_89	IF_17	CALL_44
0x400a533	          0x83ea04	                              sub edx, 4	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a536	          0x83fa01	                              cmp edx, 1	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a539	            0x778c	                            ja 0x400a4c7	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a53b	        0x488d0476	                  lea rax, [rsi + rsi*2]	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a53f	        0x48c1e004	                              shl rax, 4	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a543	          0x4c01c0	                             add rax, r8	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a546	            0xeb0f	                           jmp 0x400a557	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a548	        0x4883c030	                           add rax, 0x30	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a54c	            0x8b10	                    mov edx, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a54e	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a551	     0xf8681020000	                           jbe 0x400a7d8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a557	          0x83c101	                              add ecx, 1	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a55a	            0x39cf	                            cmp edi, ecx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a55c	            0x7fea	                            jg 0x400a548	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a55e	      0xba07000000	                              mov edx, 7	      3391	sequencer.c	FUNCTION_90	IF_3	IF_5
0x400a563	          0x4531f6	                          xor r14d, r14d	      3255	sequencer.c	FUNCTION_89
0x400a566	            0xeb93	                           jmp 0x400a4fb	      3255	sequencer.c	FUNCTION_89
0x400a568	      0xbf00000000	                              mov edi, 0	       144	sequencer.c	CALL_30
0x400a56d	            0x31c0	                            xor eax, eax	       144	sequencer.c	CALL_30
0x400a56f	      0xe800000000	                          call 0x400a574	       144	sequencer.c	CALL_30
0x400a574	          0x4989c6	                            mov r14, rax	       144	sequencer.c	CALL_30
0x400a577	    0x488905000000	            mov qword [0x0400a57e], rax 	       144	sequencer.c	CALL_30
0x400a57e	      0xe953f8ffff	                           jmp 0x4009dd6	       144	sequencer.c	CALL_30
0x400a583	          0x4939cf	                            cmp r15, rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a586	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a58b	            0x7314	                           jae 0x400a5a1	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a58d	        0x4883e802	                              sub rax, 2	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a591	          0x4801c7	                            add rdi, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a594	          0x803f0d	                     cmp byte [rdi], 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a597	            0x7508	                           jne 0x400a5a1	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a599	      0x4889442418	             mov qword [rsp + 0x18], rax	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a59e	          0x4889fa	                            mov rdx, rdi	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a5a1	          0xc60200	                       mov byte [rdx], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x400a5a4	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       415	sequencer.c	FUNCTION_15	IF_3
0x400a5a9	      0xe976f8ffff	                           jmp 0x4009e24	       415	sequencer.c	FUNCTION_15	IF_3
0x400a5ae	      0xbf00000000	                              mov edi, 0	       115	sequencer.c	CALL_18
0x400a5b3	            0x31c0	                            xor eax, eax	       115	sequencer.c	CALL_18
0x400a5b5	      0xe800000000	                          call 0x400a5ba	       115	sequencer.c	CALL_18
0x400a5ba	      0x4c63642438	         movsxd r12, dword [rsp + 0x38] 	       115	sequencer.c	CALL_18
0x400a5bf	          0x4989c6	                            mov r14, rax	       115	sequencer.c	CALL_18
0x400a5c2	    0x488905000000	            mov qword [0x0400a5c9], rax 	       115	sequencer.c	CALL_18
0x400a5c9	      0xe976f5ffff	                           jmp 0x4009b44	       115	sequencer.c	CALL_18
0x400a5ce	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x400a5d3	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x400a5d5	      0xe800000000	                          call 0x400a5da	       110	sequencer.c	CALL_17
0x400a5da	          0x4889c7	                            mov rdi, rax	       110	sequencer.c	CALL_17
0x400a5dd	    0x488905000000	            mov qword [0x0400a5e4], rax 	       110	sequencer.c	CALL_17
0x400a5e4	      0xe9e9f1ffff	                           jmp 0x40097d2	       110	sequencer.c	CALL_17
0x400a5e9	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x400a5ee	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x400a5f0	      0xe800000000	                          call 0x400a5f5	       110	sequencer.c	CALL_17
0x400a5f5	          0x4889c7	                            mov rdi, rax	       110	sequencer.c	CALL_17
0x400a5f8	    0x488905000000	            mov qword [0x0400a5ff], rax 	       110	sequencer.c	CALL_17
0x400a5ff	      0xe91ff2ffff	                           jmp 0x4009823	       110	sequencer.c	CALL_17
0x400a604	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x400a609	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x400a60b	      0xe800000000	                          call 0x400a610	        95	sequencer.c	CALL_15
0x400a610	          0x4889c7	                            mov rdi, rax	        95	sequencer.c	CALL_15
0x400a613	    0x488905000000	            mov qword [0x0400a61a], rax 	        95	sequencer.c	CALL_15
0x400a61a	      0xe94ff2ffff	                           jmp 0x400986e	        95	sequencer.c	CALL_15
0x400a61f	          0x4939f4	                            cmp r12, rsi	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a622	      0x4889742438	             mov qword [rsp + 0x38], rsi	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a627	            0x7310	                           jae 0x400a639	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a629	        0x4883e802	                              sub rax, 2	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a62d	          0x4801c2	                            add rdx, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a630	          0x803a0d	                     cmp byte [rdx], 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a633	     0xf84c0020000	                            je 0x400a8f9	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a639	          0xc60100	                       mov byte [rcx], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x400a63c	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       415	sequencer.c	FUNCTION_15	IF_3
0x400a641	      0xe927f9ffff	                           jmp 0x4009f6d	       415	sequencer.c	FUNCTION_15	IF_3
0x400a646	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a648	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a64d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a652	      0xe800000000	                          call 0x400a657	        54	gettext.h	FUNCTION_164
0x400a657	          0x4889c7	                            mov rdi, rax	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a65a	            0x31c0	                            xor eax, eax	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a65c	      0xe800000000	                          call 0x400a661	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a661	      0xe9eaf6ffff	                           jmp 0x4009d50	      3258	sequencer.c	FUNCTION_89	CALL_2
0x400a666	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a668	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a66d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a672	      0xe800000000	                          call 0x400a677	        54	gettext.h	FUNCTION_164
0x400a677	          0x4c89f6	                            mov rsi, r14	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a67a	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a67d	            0x31c0	                            xor eax, eax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a67f	      0xe800000000	                          call 0x400a684	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a684	      0xe9d0f4ffff	                           jmp 0x4009b59	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a689	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x400a68e	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x400a690	      0xe800000000	                          call 0x400a695	        82	sequencer.c	CALL_13
0x400a695	          0x4889c7	                            mov rdi, rax	        82	sequencer.c	CALL_13
0x400a698	    0x488905000000	            mov qword [0x0400a69f], rax 	        82	sequencer.c	CALL_13
0x400a69f	      0xe9aef1ffff	                           jmp 0x4009852	        82	sequencer.c	CALL_13
0x400a6a4	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x400a6a9	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x400a6ab	      0xe800000000	                          call 0x400a6b0	        90	sequencer.c	CALL_14
0x400a6b0	          0x4889c7	                            mov rdi, rax	        90	sequencer.c	CALL_14
0x400a6b3	    0x488905000000	            mov qword [0x0400a6ba], rax 	        90	sequencer.c	CALL_14
0x400a6ba	      0xe97ef1ffff	                           jmp 0x400983d	        90	sequencer.c	CALL_14
0x400a6bf	      0x4889442418	             mov qword [rsp + 0x18], rax	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a6c4	          0x4889d6	                            mov rsi, rdx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a6c7	      0xe9e3f6ffff	                           jmp 0x4009daf	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a6cc	        0x48894368	             mov qword [rbx + 0x68], rax	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a6d0	          0x4889d6	                            mov rsi, rdx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a6d3	      0xe9cff3ffff	                           jmp 0x4009aa7	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a6d8	      0xbf00000000	                              mov edi, 0	        73	sequencer.c	CALL_12
0x400a6dd	        0x89542408	                mov dword [rsp + 8], edx	        73	sequencer.c	CALL_12
0x400a6e1	      0xe800000000	                          call 0x400a6e6	        73	sequencer.c	CALL_12
0x400a6e6	        0x8b542408	                mov edx, dword [rsp + 8]	        73	sequencer.c	CALL_12
0x400a6ea	    0x488905000000	            mov qword [0x0400a6f1], rax 	        73	sequencer.c	CALL_12
0x400a6f1	      0xe907f1ffff	                           jmp 0x40097fd	        73	sequencer.c	CALL_12
0x400a6f6	      0x4889442418	             mov qword [rsp + 0x18], rax	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a6fb	          0x4889d6	                            mov rsi, rdx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a6fe	      0xe93ef5ffff	                           jmp 0x4009c41	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a703	      0x4889442418	             mov qword [rsp + 0x18], rax	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a708	          0x4889d6	                            mov rsi, rdx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a70b	      0xe9d8f7ffff	                           jmp 0x4009ee8	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a710	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x400a715	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x400a717	      0xe800000000	                          call 0x400a71c	       110	sequencer.c	CALL_17
0x400a71c	          0x4989c7	                            mov r15, rax	       110	sequencer.c	CALL_17
0x400a71f	    0x488905000000	            mov qword [0x0400a726], rax 	       110	sequencer.c	CALL_17
0x400a726	      0xe9e2f5ffff	                           jmp 0x4009d0d	       110	sequencer.c	CALL_17
0x400a72b	          0x4939d7	                            cmp r15, rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a72e	      0x4889542438	             mov qword [rsp + 0x38], rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a733	            0x730f	                           jae 0x400a744	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a735	      0x807c07fe0d	          cmp byte [rdi + rax - 2], 0xd 	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a73a	        0x488d50fe	                      lea rdx, [rax - 2]	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a73e	     0xf84f0010000	                            je 0x400a934	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a744	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       415	sequencer.c	FUNCTION_15	IF_3
0x400a749	        0xc6040700	                 mov byte [rdi + rax], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x400a74d	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       415	sequencer.c	FUNCTION_15	IF_3
0x400a752	      0xe903fcffff	                           jmp 0x400a35a	       415	sequencer.c	FUNCTION_15	IF_3
0x400a757	    0x488b1d000000	            mov rbx, qword [0x0400a75e] 	       110	sequencer.c	CALL_17
0x400a75e	          0x4885db	                           test rbx, rbx	       110	sequencer.c	CALL_17
0x400a761	     0xf8425020000	                            je 0x400a98c	       110	sequencer.c	CALL_17
0x400a767	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x400a76c	      0xe9cbf5ffff	                           jmp 0x4009d3c	       110	sequencer.c	CALL_17
0x400a771	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x400a776	      0xe8a55affff	                       call sym._.part.6	       110	sequencer.c	CALL_17
0x400a77b	          0x4889c7	                            mov rdi, rax	      3359	sequencer.c	FUNCTION_89	CALL_45
0x400a77e	            0x31c0	                            xor eax, eax	      3359	sequencer.c	FUNCTION_89	CALL_45
0x400a780	      0xe800000000	                          call 0x400a785	      3359	sequencer.c	FUNCTION_89	CALL_45
0x400a785	      0xe9c6f5ffff	                           jmp 0x4009d50	      3359	sequencer.c	FUNCTION_89	CALL_45
0x400a78a	        0x4c8b7b60	            mov r15, qword [rbx + 0x60] 	       162	strbuf.h	FUNCTION_109	IF_1
0x400a78e	          0x4d85ff	                           test r15, r15	       162	strbuf.h	FUNCTION_109	IF_1
0x400a791	     0xf858afcffff	                           jne 0x400a421	       162	strbuf.h	FUNCTION_109	IF_1
0x400a797	            0x31d2	                            xor edx, edx	       162	strbuf.h	FUNCTION_109	IF_1
0x400a799	          0x4989c7	                            mov r15, rax	       162	strbuf.h	FUNCTION_109	IF_1
0x400a79c	      0xe987fcffff	                           jmp 0x400a428	       162	strbuf.h	FUNCTION_109	IF_1
0x400a7a1	      0xbf00000000	                              mov edi, 0	       123	sequencer.c	CALL_20
0x400a7a6	            0x31c0	                            xor eax, eax	       123	sequencer.c	CALL_20
0x400a7a8	      0xe800000000	                          call 0x400a7ad	       123	sequencer.c	CALL_20
0x400a7ad	          0x4889c7	                            mov rdi, rax	       123	sequencer.c	CALL_20
0x400a7b0	    0x488905000000	            mov qword [0x0400a7b7], rax 	       123	sequencer.c	CALL_20
0x400a7b7	      0xe944f8ffff	                           jmp 0x400a000	       123	sequencer.c	CALL_20
0x400a7bc	            0x39cf	                            cmp edi, ecx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a7be	     0xf8e9afdffff	                           jle 0x400a55e	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a7c4	          0x4863f1	                         movsxd rsi, ecx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a7c7	        0x486bc630	                     imul rax, rsi, 0x30	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a7cb	        0x418b1400	               mov edx, dword [r8 + rax]	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400a7cf	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a7d2	     0xf8763fdffff	                            ja 0x400a53b	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a7d8	          0x83ea04	                              sub edx, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400a7db	          0x83fa01	                              cmp edx, 1	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x400a7de	     0xf877afdffff	                            ja 0x400a55e	      3325	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_29
0x400a7e4	    0x48833d000000	               cmp qword [0x0400a7ec], 0	        82	sequencer.c	CALL_13
0x400a7ec	     0xf842d020000	                            je 0x400aa1f	        82	sequencer.c	CALL_13
0x400a7f2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a7f7	    0x4c8b3d000000	            mov r15, qword [0x0400a7fe] 	        82	sequencer.c	CALL_13
0x400a7fe	      0xe81d6fffff	                     call sym.parse_head	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a803	            0x85c0	                           test eax, eax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a805	     0xf85eb010000	                           jne 0x400a9f6	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a80b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a810	            0x31f6	                            xor esi, esi	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a812	      0xe800000000	                          call 0x400a817	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a817	          0x4885c0	                           test rax, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a81a	          0x4989c6	                            mov r14, rax	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a81d	     0xf84d3010000	                            je 0x400a9f6	      3333	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_31
0x400a823	            0x31c0	                            xor eax, eax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a825	        0x4883c9ff	              or rcx, 0xffffffffffffffff	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a829	          0x4c89f7	                            mov rdi, r14	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a82c	            0xf2ae	              repne scasb al, byte [rdi]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a82e	          0x4c89fa	                            mov rdx, r15	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a831	          0x4c89f7	                            mov rdi, r14	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a834	          0x4889c8	                            mov rax, rcx	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a837	          0x48f7d0	                                 not rax	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a83a	        0x488d70ff	                      lea rsi, [rax - 1]	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a83e	      0xe8ad6affff	     call sym.write_message.constprop.34	      3335	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_34
0x400a843	            0x85c0	                           test eax, eax	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a845	     0xf85ab010000	                           jne 0x400a9f6	      3334	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_32
0x400a84b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x400a850	          0x4c89f6	                            mov rsi, r14	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x400a853	          0x4531f6	                          xor r14d, r14d	      3255	sequencer.c	FUNCTION_89
0x400a856	      0xe800000000	                          call 0x400a85b	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x400a85b	      0xba07000000	                              mov edx, 7	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x400a860	      0xe996fcffff	                           jmp 0x400a4fb	      3340	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	CALL_37
0x400a865	    0x803d00000000	                cmp byte [0x0400a86c], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a86c	     0xf84d5fbffff	                            je 0x400a447	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a872	      0xe999f8ffff	                           jmp 0x400a110	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a877	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a87c	      0xe89f59ffff	                       call sym._.part.6	       168	strbuf.h	FUNCTION_109	CALL_2
0x400a881	          0x4889c7	                            mov rdi, rax	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a884	            0x31c0	                            xor eax, eax	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a886	      0xe800000000	                          call 0x400a88b	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a88b	      0xe9c0f4ffff	                           jmp 0x4009d50	      3267	sequencer.c	FUNCTION_89	IF_2	CALL_7
0x400a890	      0xbf00000000	                              mov edi, 0	       115	sequencer.c	CALL_18
0x400a895	      0xe800000000	                          call 0x400a89a	       115	sequencer.c	CALL_18
0x400a89a	    0x488905000000	            mov qword [0x0400a8a1], rax 	       115	sequencer.c	CALL_18
0x400a8a1	      0xe92afbffff	                           jmp 0x400a3d0	       115	sequencer.c	CALL_18
0x400a8a6	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400a8a8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400a8ad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400a8b2	      0xe800000000	                          call 0x400a8b7	        54	gettext.h	FUNCTION_164
0x400a8b7	          0x4c89fe	                            mov rsi, r15	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a8ba	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a8bd	            0x31c0	                            xor eax, eax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a8bf	      0xe800000000	                          call 0x400a8c4	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a8c4	      0xe95ef4ffff	                           jmp 0x4009d27	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400a8c9	      0xba07000000	                              mov edx, 7	      3322	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10	IF_11	CALL_27
0x400a8ce	    0x41be01000000	                             mov r14d, 1	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a8d4	      0xe922fcffff	                           jmp 0x400a4fb	      3315	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a8d9	      0xe800000000	                          call 0x400a8de	      3424	sequencer.c	FUNCTION_90
0x400a8de	      0xbf00000000	                              mov edi, 0	        41	sequencer.c	CALL_4
0x400a8e3	            0x31c0	                            xor eax, eax	        41	sequencer.c	CALL_4
0x400a8e5	      0xe800000000	                          call 0x400a8ea	        41	sequencer.c	CALL_4
0x400a8ea	          0x4889c3	                            mov rbx, rax	        41	sequencer.c	CALL_4
0x400a8ed	    0x488905000000	            mov qword [0x0400a8f4], rax 	        41	sequencer.c	CALL_4
0x400a8f4	      0xe971f7ffff	                           jmp 0x400a06a	        41	sequencer.c	CALL_4
0x400a8f9	      0x4889442438	             mov qword [rsp + 0x38], rax	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a8fe	          0x4889d1	                            mov rcx, rdx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a901	      0xe933fdffff	                           jmp 0x400a639	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a906	    0x48833d000000	               cmp qword [0x0400a90e], 0	        95	sequencer.c	CALL_15
0x400a90e	            0x7513	                           jne 0x400a923	        95	sequencer.c	CALL_15
0x400a910	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x400a915	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x400a917	      0xe800000000	                          call 0x400a91c	        95	sequencer.c	CALL_15
0x400a91c	    0x488905000000	            mov qword [0x0400a923], rax 	        95	sequencer.c	CALL_15
0x400a923	    0x488b1d000000	            mov rbx, qword [0x0400a92a] 	        95	sequencer.c	CALL_15
0x400a92a	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x400a92f	      0xe908f4ffff	                           jmp 0x4009d3c	        95	sequencer.c	CALL_15
0x400a934	      0x4889542438	             mov qword [rsp + 0x38], rdx	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a939	      0xe906feffff	                           jmp 0x400a744	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400a93e	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x400a943	      0xe800000000	                          call 0x400a948	        95	sequencer.c	CALL_15
0x400a948	    0x488905000000	            mov qword [0x0400a94f], rax 	        95	sequencer.c	CALL_15
0x400a94f	      0xe903fbffff	                           jmp 0x400a457	        95	sequencer.c	CALL_15
0x400a954	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x400a959	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x400a95b	      0xe800000000	                          call 0x400a960	       110	sequencer.c	CALL_17
0x400a960	          0x4889c3	                            mov rbx, rax	       110	sequencer.c	CALL_17
0x400a963	    0x488905000000	            mov qword [0x0400a96a], rax 	       110	sequencer.c	CALL_17
0x400a96a	      0xe9c8f3ffff	                           jmp 0x4009d37	       110	sequencer.c	CALL_17
0x400a96f	          0x4c89ef	                            mov rdi, r13	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a972	        0x89542408	                mov dword [rsp + 8], edx	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a976	      0xe800000000	                          call 0x400a97b	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a97b	            0x85c0	                           test eax, eax	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a97d	        0x8b542408	                mov edx, dword [rsp + 8]	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a981	     0xf849cfbffff	                            je 0x400a523	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a987	      0xe9dff7ffff	                           jmp 0x400a16b	      3351	sequencer.c	FUNCTION_89	IF_14	IF_15	CALL_41
0x400a98c	      0xbf00000000	                              mov edi, 0	       110	sequencer.c	CALL_17
0x400a991	            0x31c0	                            xor eax, eax	       110	sequencer.c	CALL_17
0x400a993	      0xe800000000	                          call 0x400a998	       110	sequencer.c	CALL_17
0x400a998	          0x4889c3	                            mov rbx, rax	       110	sequencer.c	CALL_17
0x400a99b	    0x488905000000	            mov qword [0x0400a9a2], rax 	       110	sequencer.c	CALL_17
0x400a9a2	      0xe9c0fdffff	                           jmp 0x400a767	       110	sequencer.c	CALL_17
0x400a9a7	          0x4c89f1	                            mov rcx, r14	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a9aa	      0xba00000000	                              mov edx, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a9af	      0xbedd0c0000	                          mov esi, 0xcdd	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a9b4	      0xbf00000000	                              mov edi, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a9b9	            0x31c0	                            xor eax, eax	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a9bb	      0xe800000000	                          call 0x400a9c0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a9c0	      0xbf00000000	                              mov edi, 0	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a9c5	      0xe85658ffff	                       call sym._.part.6	      3293	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_8
0x400a9ca	          0x4889c7	                            mov rdi, rax	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a9cd	            0x31c0	                            xor eax, eax	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a9cf	      0xe800000000	                          call 0x400a9d4	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a9d4	      0xe977f3ffff	                           jmp 0x4009d50	      3274	sequencer.c	FUNCTION_89	IF_2	IF_6	CALL_16
0x400a9d9	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_109	CALL_1
0x400a9de	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_109	CALL_1
0x400a9e0	      0xe800000000	                          call 0x400a9e5	       163	strbuf.h	FUNCTION_109	CALL_1
0x400a9e5	          0x83ea04	                              sub edx, 4	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a9e8	          0x83fa01	                              cmp edx, 1	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a9eb	     0xf86eafdffff	                           jbe 0x400a7db	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a9f1	      0xe9d1faffff	                           jmp 0x400a4c7	      3313	sequencer.c	FUNCTION_89	IF_2	IF_7	IF_10
0x400a9f6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400a9fb	          0x4c89f6	                            mov rsi, r14	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400a9fe	      0xe800000000	                          call 0x400aa03	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa03	      0xbf00000000	                              mov edi, 0	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa08	      0xe81358ffff	                       call sym._.part.6	      3336	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_35
0x400aa0d	          0x4c89fe	                            mov rsi, r15	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa10	          0x4889c7	                            mov rdi, rax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa13	            0x31c0	                            xor eax, eax	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa15	      0xe800000000	                          call 0x400aa1a	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa1a	      0xe931f3ffff	                           jmp 0x4009d50	      3337	sequencer.c	FUNCTION_89	IF_2	IF_7	ELSE_1	IF_12	IF_13	CALL_36
0x400aa1f	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x400aa24	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x400aa26	      0xe800000000	                          call 0x400aa2b	        82	sequencer.c	CALL_13
0x400aa2b	    0x488905000000	            mov qword [0x0400aa32], rax 	        82	sequencer.c	CALL_13
0x400aa32	      0xe9bbfdffff	                           jmp 0x400a7f2	        82	sequencer.c	CALL_13
do_recursive_merge	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,6:CALL,20:FOR,1	188
0x40037d0	            0x4157	                                push r15	       510	sequencer.c	FUNCTION_21
0x40037d2	            0x4156	                                push r14	       510	sequencer.c	FUNCTION_21
0x40037d4	          0x4989cf	                            mov r15, rcx	       510	sequencer.c	FUNCTION_21
0x40037d7	            0x4155	                                push r13	       510	sequencer.c	FUNCTION_21
0x40037d9	            0x4154	                                push r12	       510	sequencer.c	FUNCTION_21
0x40037db	          0x4989f4	                            mov r12, rsi	       510	sequencer.c	FUNCTION_21
0x40037de	              0x55	                                push rbp	       510	sequencer.c	FUNCTION_21
0x40037df	              0x53	                                push rbx	       510	sequencer.c	FUNCTION_21
0x40037e0	          0x4889fd	                            mov rbp, rdi	       510	sequencer.c	FUNCTION_21
0x40037e3	      0xbe04000000	                              mov esi, 4	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x40037e8	          0x4889d3	                            mov rbx, rdx	       510	sequencer.c	FUNCTION_21
0x40037eb	          0x4d89c5	                             mov r13, r8	       510	sequencer.c	FUNCTION_21
0x40037ee	    0x4881ecc80400	                          sub rsp, 0x4c8	       510	sequencer.c	FUNCTION_21
0x40037f5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x40037fa	      0x4c894c2408	                 mov qword [rsp + 8], r9	       510	sequencer.c	FUNCTION_21
0x40037ff	    0x4c8bb4240005	           mov r14, qword [rsp + 0x500] 	       510	sequencer.c	FUNCTION_21
0x4003807	    0x64488b042528	                mov rax, qword fs:[0x28]	       510	sequencer.c	FUNCTION_21
0x4003810	    0x48898424b804	            mov qword [rsp + 0x4b8], rax	       510	sequencer.c	FUNCTION_21
0x4003818	            0x31c0	                            xor eax, eax	       510	sequencer.c	FUNCTION_21
0x400381a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       515	sequencer.c	FUNCTION_21
0x4003823	      0xe800000000	                          call 0x4003828	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003828	            0x85c0	                           test eax, eax	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x400382a	     0xf881c020000	                            js 0x4003a4c	       517	sequencer.c	FUNCTION_21	IF_1	CALL_1
0x4003830	      0xbf00000000	                              mov edi, 0	       520	sequencer.c	FUNCTION_21
0x4003835	      0xe800000000	                          call 0x400383a	       520	sequencer.c	FUNCTION_21
0x400383a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       522	sequencer.c	FUNCTION_21	CALL_2
0x400383f	      0xe800000000	                          call 0x4003844	       522	sequencer.c	FUNCTION_21	CALL_2
0x4003844	          0x4885ed	                           test rbp, rbp	       523	sequencer.c	FUNCTION_21
0x4003847	      0xb800000000	                              mov eax, 0	       523	sequencer.c	FUNCTION_21
0x400384c	    0x48c744242800	               mov qword [rsp + 0x28], 0	       524	sequencer.c	FUNCTION_21
0x4003855	        0x480f44d8	                          cmove rbx, rax	       523	sequencer.c	FUNCTION_21
0x4003859	          0x4d85e4	                           test r12, r12	       525	sequencer.c	FUNCTION_21
0x400385c	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       523	sequencer.c	FUNCTION_21
0x4003861	     0xf8481010000	                            je 0x40039e8	       525	sequencer.c	FUNCTION_21
0x4003867	        0x41833e02	                      cmp dword [r14], 2	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x400386b	      0x4c897c2430	             mov qword [rsp + 0x30], r15	       525	sequencer.c	FUNCTION_21
0x4003870	     0xf840a010000	                            je 0x4003980	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x4003876	          0x4c89ef	                            mov rdi, r13	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003879	    0xc74424700100	               mov dword [rsp + 0x70], 1	       528	sequencer.c	FUNCTION_21
0x4003881	      0xe800000000	                          call 0x4003886	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003886	          0x4c89e7	                            mov rdi, r12	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003889	          0x4989c5	                            mov r13, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x400388c	      0xe800000000	                          call 0x4003891	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003891	          0x4885ed	                           test rbp, rbp	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003894	          0x4989c4	                            mov r12, rax	       531	sequencer.c	FUNCTION_21	CALL_6
0x4003897	     0xf8493010000	                            je 0x4003a30	       532	sequencer.c	FUNCTION_21	CALL_8
0x400389d	          0x4889ef	                            mov rdi, rbp	       532	sequencer.c	FUNCTION_21	CALL_8
0x40038a0	      0xe800000000	                          call 0x40038a5	       532	sequencer.c	FUNCTION_21	CALL_8
0x40038a5	          0x4889c5	                            mov rbp, rax	       532	sequencer.c	FUNCTION_21	CALL_8
0x40038a8	        0x498b4650	            mov rax, qword [r14 + 0x50] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038ac	        0x498b5e48	            mov rbx, qword [r14 + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038b0	        0x48c1e003	                              shl rax, 3	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038b4	          0x4885c0	                           test rax, rax	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038b7	            0x7429	                            je 0x40038e2	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038b9	     0xf1f80000000	                         nop dword [rax]	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038c0	          0x488b33	                    mov rsi, qword [rbx]	       535	sequencer.c	FUNCTION_21	CALL_9
0x40038c3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       535	sequencer.c	FUNCTION_21	CALL_9
0x40038c8	        0x4883c308	                              add rbx, 8	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038cc	      0xe800000000	                          call 0x40038d1	       535	sequencer.c	FUNCTION_21	CALL_9
0x40038d1	        0x498b5650	            mov rdx, qword [r14 + 0x50] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038d5	        0x498b4648	            mov rax, qword [r14 + 0x48] 	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038d9	        0x488d04d0	                  lea rax, [rax + rdx*8]	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038dd	          0x4839c3	                            cmp rbx, rax	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038e0	            0x75de	                           jne 0x40038c0	       534	sequencer.c	FUNCTION_21	FOR_1
0x40038e2	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       537	sequencer.c	FUNCTION_21	CALL_10
0x40038e7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       537	sequencer.c	FUNCTION_21	CALL_10
0x40038ec	          0x4889e9	                            mov rcx, rbp	       537	sequencer.c	FUNCTION_21	CALL_10
0x40038ef	          0x4c89e2	                            mov rdx, r12	       537	sequencer.c	FUNCTION_21	CALL_10
0x40038f2	          0x4c89ee	                            mov rsi, r13	       537	sequencer.c	FUNCTION_21	CALL_10
0x40038f5	      0xe800000000	                          call 0x40038fa	       537	sequencer.c	FUNCTION_21	CALL_10
0x40038fa	        0x41833e02	                      cmp dword [r14], 2	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x40038fe	            0x89c3	                            mov ebx, eax	       537	sequencer.c	FUNCTION_21	CALL_10
0x4003900	     0xf848a000000	                            je 0x4003990	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003906	      0x488d7c2478	                   lea rdi, [rsp + 0x78]	       542	sequencer.c	FUNCTION_21	CALL_13
0x400390b	      0xe800000000	                          call 0x4003910	       542	sequencer.c	FUNCTION_21	CALL_13
0x4003910	        0x8b74246c	            mov esi, dword [rsp + 0x6c] 	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003914	            0x31d2	                            xor edx, edx	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003916	      0xbf00000000	                              mov edi, 0	       543	sequencer.c	FUNCTION_21	CALL_14
0x400391b	      0xe800000000	                          call 0x4003920	       543	sequencer.c	FUNCTION_21	CALL_14
0x4003920	            0x85db	                           test ebx, ebx	       544	sequencer.c	FUNCTION_21	IF_4
0x4003922	     0xf88a8000000	                            js 0x40039d0	       544	sequencer.c	FUNCTION_21	IF_4
0x4003928	      0x488d742410	                   lea rsi, [rsp + 0x10]	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x400392d	      0xba03000000	                              mov edx, 3	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003932	      0xbf00000000	                              mov edi, 0	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003937	      0xe800000000	                          call 0x400393c	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x400393c	            0x85c0	                           test eax, eax	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x400393e	     0xf852b010000	                           jne 0x4003a6f	       549	sequencer.c	FUNCTION_21	IF_5	CALL_16
0x4003944	            0x85db	                           test ebx, ebx	       558	sequencer.c	FUNCTION_21	IF_6
0x4003946	            0x7478	                            je 0x40039c0	       558	sequencer.c	FUNCTION_21	IF_6
0x4003948	            0x31c0	                            xor eax, eax	       561	sequencer.c	FUNCTION_21
0x400394a	            0x85db	                           test ebx, ebx	       561	sequencer.c	FUNCTION_21
0x400394c	           0xf94c0	                                 sete al	       561	sequencer.c	FUNCTION_21
0x400394f	    0x488b8c24b804	           mov rcx, qword [rsp + 0x4b8] 	       562	sequencer.c	FUNCTION_21
0x4003957	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       562	sequencer.c	FUNCTION_21
0x4003960	     0xf858a010000	                           jne 0x4003af0	       562	sequencer.c	FUNCTION_21
0x4003966	    0x4881c4c80400	                          add rsp, 0x4c8	       562	sequencer.c	FUNCTION_21
0x400396d	              0x5b	                                 pop rbx	       562	sequencer.c	FUNCTION_21
0x400396e	              0x5d	                                 pop rbp	       562	sequencer.c	FUNCTION_21
0x400396f	            0x415c	                                 pop r12	       562	sequencer.c	FUNCTION_21
0x4003971	            0x415d	                                 pop r13	       562	sequencer.c	FUNCTION_21
0x4003973	            0x415e	                                 pop r14	       562	sequencer.c	FUNCTION_21
0x4003975	            0x415f	                                 pop r15	       562	sequencer.c	FUNCTION_21
0x4003977	              0xc3	                                     ret	       562	sequencer.c	FUNCTION_21
0x4003978	     0xf1f84000000	                   nop dword [rax + rax]	       562	sequencer.c	FUNCTION_21
0x4003980	    0xc74424480200	               mov dword [rsp + 0x48], 2	       527	sequencer.c	FUNCTION_21	IF_2
0x4003988	      0xe9e9feffff	                           jmp 0x4003876	       527	sequencer.c	FUNCTION_21	IF_2
0x400398d	           0xf1f00	                         nop dword [rax]	       527	sequencer.c	FUNCTION_21	IF_2
0x4003990	            0x85c0	                           test eax, eax	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003992	     0xf8ebe000000	                           jle 0x4003a56	       540	sequencer.c	FUNCTION_21	IF_3	CALL_11
0x4003998	      0x488d7c2478	                   lea rdi, [rsp + 0x78]	       542	sequencer.c	FUNCTION_21	CALL_13
0x400399d	      0xe800000000	                          call 0x40039a2	       542	sequencer.c	FUNCTION_21	CALL_13
0x40039a2	        0x8b74246c	            mov esi, dword [rsp + 0x6c] 	       543	sequencer.c	FUNCTION_21	CALL_14
0x40039a6	            0x31d2	                            xor edx, edx	       543	sequencer.c	FUNCTION_21	CALL_14
0x40039a8	      0xbf00000000	                              mov edi, 0	       543	sequencer.c	FUNCTION_21	CALL_14
0x40039ad	      0xe800000000	                          call 0x40039b2	       543	sequencer.c	FUNCTION_21	CALL_14
0x40039b2	      0xe971ffffff	                           jmp 0x4003928	       543	sequencer.c	FUNCTION_21	CALL_14
0x40039b7	    0x660f1f840000	                    nop word [rax + rax]	       543	sequencer.c	FUNCTION_21	CALL_14
0x40039c0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       559	sequencer.c	FUNCTION_21	CALL_20
0x40039c5	      0xe800000000	                          call 0x40039ca	       559	sequencer.c	FUNCTION_21	CALL_20
0x40039ca	      0xe979ffffff	                           jmp 0x4003948	       559	sequencer.c	FUNCTION_21	CALL_20
0x40039cf	              0x90	                                     nop	       559	sequencer.c	FUNCTION_21	CALL_20
0x40039d0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       304	lockfile.h	FUNCTION_202	CALL_1
0x40039d5	      0xe800000000	                          call 0x40039da	       304	lockfile.h	FUNCTION_202	CALL_1
0x40039da	            0x89d8	                            mov eax, ebx	       546	sequencer.c	FUNCTION_21	IF_4
0x40039dc	      0xe96effffff	                           jmp 0x400394f	       546	sequencer.c	FUNCTION_21	IF_4
0x40039e1	     0xf1f80000000	                         nop dword [rax]	       546	sequencer.c	FUNCTION_21	IF_4
0x40039e8	        0x41833e02	                      cmp dword [r14], 2	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x40039ec	    0x48c744243000	               mov qword [rsp + 0x30], 0	       525	sequencer.c	FUNCTION_21
0x40039f5	     0xf84e8000000	                            je 0x4003ae3	       526	sequencer.c	FUNCTION_21	IF_2	CALL_3
0x40039fb	          0x4c89ef	                            mov rdi, r13	       530	sequencer.c	FUNCTION_21	CALL_4
0x40039fe	    0xc74424700100	               mov dword [rsp + 0x70], 1	       528	sequencer.c	FUNCTION_21
0x4003a06	      0xe800000000	                          call 0x4003a0b	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003a0b	          0x4989c5	                            mov r13, rax	       530	sequencer.c	FUNCTION_21	CALL_4
0x4003a0e	    0x488b05000000	            mov rax, qword [0x04003a15] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a15	        0x488b4058	            mov rax, qword [rax + 0x58] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a19	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a1d	      0xe800000000	                          call 0x4003a22	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a22	          0x4885ed	                           test rbp, rbp	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003a25	          0x4989c4	                            mov r12, rax	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a28	     0xf856ffeffff	                           jne 0x400389d	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003a2e	            0x6690	                                     nop	       532	sequencer.c	FUNCTION_21	CALL_8
0x4003a30	    0x488b05000000	            mov rax, qword [0x04003a37] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a37	        0x488b4058	            mov rax, qword [rax + 0x58] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a3b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a3f	      0xe800000000	                          call 0x4003a44	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a44	          0x4889c5	                            mov rbp, rax	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a47	      0xe95cfeffff	                           jmp 0x40038a8	       426	sequencer.c	FUNCTION_16	CALL_1
0x4003a4c	      0xb8ffffffff	                     mov eax, 0xffffffff	       518	sequencer.c	FUNCTION_21	IF_1
0x4003a51	      0xe9f9feffff	                           jmp 0x400394f	       518	sequencer.c	FUNCTION_21	IF_1
0x4003a56	    0x488b35000000	            mov rsi, qword [0x04003a5d] 	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003a5d	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003a65	      0xe800000000	                          call 0x4003a6a	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003a6a	      0xe997feffff	                           jmp 0x4003906	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003a6f	          0x418b1e	                    mov ebx, dword [r14]	       541	sequencer.c	FUNCTION_21	CALL_12
0x4003a72	          0x83fb01	                              cmp ebx, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4003a75	            0x7429	                            je 0x4003aa0	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4003a77	            0x7263	                            jb 0x4003adc	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4003a79	          0x83fb02	                              cmp ebx, 2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4003a7c	      0xbe00000000	                              mov esi, 0	       298	sequencer.c	FUNCTION_9	SWITCH_1
0x4003a81	            0x7422	                            je 0x4003aa5	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4003a83	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4003a88	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4003a8a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4003a8f	      0xe800000000	                          call 0x4003a94	        54	gettext.h	FUNCTION_164
0x4003a94	            0x89de	                            mov esi, ebx	       300	sequencer.c	FUNCTION_9	CALL_2
0x4003a96	          0x4889c7	                            mov rdi, rax	       300	sequencer.c	FUNCTION_9	CALL_2
0x4003a99	            0x31c0	                            xor eax, eax	       300	sequencer.c	FUNCTION_9	CALL_2
0x4003a9b	      0xe800000000	                          call 0x4003aa0	       300	sequencer.c	FUNCTION_9	CALL_2
0x4003aa0	      0xbe00000000	                              mov esi, 0	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x4003aa5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4003aaa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4003aac	      0xe800000000	                          call 0x4003ab1	        54	gettext.h	FUNCTION_164
0x4003ab1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4003ab6	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_164
0x4003ab9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4003abe	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4003ac0	      0xe800000000	                          call 0x4003ac5	        54	gettext.h	FUNCTION_164
0x4003ac5	          0x4889de	                            mov rsi, rbx	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ac8	          0x4889c7	                            mov rdi, rax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003acb	            0x31c0	                            xor eax, eax	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003acd	      0xe800000000	                          call 0x4003ad2	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ad2	      0xb8ffffffff	                     mov eax, 0xffffffff	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003ad7	      0xe973feffff	                           jmp 0x400394f	       555	sequencer.c	FUNCTION_21	IF_5	CALL_17
0x4003adc	      0xbe00000000	                              mov esi, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x4003ae1	            0xebc2	                           jmp 0x4003aa5	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x4003ae3	    0xc74424480200	               mov dword [rsp + 0x48], 2	       527	sequencer.c	FUNCTION_21	IF_2
0x4003aeb	      0xe90bffffff	                           jmp 0x40039fb	       527	sequencer.c	FUNCTION_21	IF_2
0x4003af0	      0xe800000000	                          call 0x4003af5	       562	sequencer.c	FUNCTION_21
sequencer_make_script	functions,0:SWITCH,0:ELSE,0:WHILE,1:DO,0:IF,7:CALL,21:FOR,0	1118
0x400b3c0	            0x4157	                                push r15	      3908	sequencer.c	FUNCTION_97
0x400b3c2	            0x4156	                                push r14	      3908	sequencer.c	FUNCTION_97
0x400b3c4	          0x4189f6	                           mov r14d, esi	      3908	sequencer.c	FUNCTION_97
0x400b3c7	            0x4155	                                push r13	      3908	sequencer.c	FUNCTION_97
0x400b3c9	            0x4154	                                push r12	      3908	sequencer.c	FUNCTION_97
0x400b3cb	          0x4989d7	                            mov r15, rdx	      3908	sequencer.c	FUNCTION_97
0x400b3ce	              0x55	                                push rbp	      3908	sequencer.c	FUNCTION_97
0x400b3cf	              0x53	                                push rbx	      3908	sequencer.c	FUNCTION_97
0x400b3d0	            0x89cd	                            mov ebp, ecx	      3908	sequencer.c	FUNCTION_97
0x400b3d2	          0x4189ec	                           mov r12d, ebp	      3914	sequencer.c	FUNCTION_97
0x400b3d5	      0xb914000000	                           mov ecx, 0x14	      3910	sequencer.c	FUNCTION_97
0x400b3da	      0xbb00000000	                              mov ebx, 0	      3915	sequencer.c	FUNCTION_97
0x400b3df	    0x4881ece80b00	                          sub rsp, 0xbe8	      3908	sequencer.c	FUNCTION_97
0x400b3e6	        0x4183e401	                             and r12d, 1	      3914	sequencer.c	FUNCTION_97
0x400b3ea	          0x4189ed	                           mov r13d, ebp	      3916	sequencer.c	FUNCTION_97
0x400b3ed	    0x64488b042528	                mov rax, qword fs:[0x28]	      3908	sequencer.c	FUNCTION_97
0x400b3f6	    0x48898424d80b	            mov qword [rsp + 0xbd8], rax	      3908	sequencer.c	FUNCTION_97
0x400b3fe	            0x31c0	                            xor eax, eax	      3908	sequencer.c	FUNCTION_97
0x400b400	      0x48897c2408	                mov qword [rsp + 8], rdi	      3908	sequencer.c	FUNCTION_97
0x400b405	    0x488dbc246002	                  lea rdi, [rsp + 0x260]	      3910	sequencer.c	FUNCTION_97
0x400b40d	        0x40f6c504	                             test bpl, 4	      3915	sequencer.c	FUNCTION_97
0x400b411	    0x48c744247800	               mov qword [rsp + 0x78], 0	      3909	sequencer.c	FUNCTION_97
0x400b41a	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      3911	sequencer.c	FUNCTION_97
0x400b426	          0xf348ab	              rep stosq qword [rdi], rax	      3910	sequencer.c	FUNCTION_97
0x400b429	      0xb800000000	                              mov eax, 0	      3915	sequencer.c	FUNCTION_97
0x400b42e	    0x488dbc242003	                  lea rdi, [rsp + 0x320]	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400b436	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      3911	sequencer.c	FUNCTION_97
0x400b442	        0x480f45d8	                         cmovne rbx, rax	      3915	sequencer.c	FUNCTION_97
0x400b446	            0x31f6	                            xor esi, esi	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400b448	        0x4183e508	                             and r13d, 8	      3916	sequencer.c	FUNCTION_97
0x400b44c	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      3911	sequencer.c	FUNCTION_97
0x400b458	      0xe800000000	                          call 0x400b45d	      3918	sequencer.c	FUNCTION_97	CALL_1
0x400b45d	    0x808c24990300	             or byte [rsp + 0x399], 0x10	      3919	sequencer.c	FUNCTION_97
0x400b465	          0x4585ed	                         test r13d, r13d	      3920	sequencer.c	FUNCTION_97	IF_1
0x400b468	            0x750b	                           jne 0x400b475	      3920	sequencer.c	FUNCTION_97	IF_1
0x400b46a	    0xc78424040800	              mov dword [rsp + 0x804], 1	      3921	sequencer.c	FUNCTION_97	IF_1
0x400b475	      0x488d742478	                   lea rsi, [rsp + 0x78]	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400b47a	      0xbf00000000	                              mov edi, 0	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400b47f	    0x808c24980300	                or byte [rsp + 0x398], 2	      3922	sequencer.c	FUNCTION_97
0x400b487	    0x808c24960300	                or byte [rsp + 0x396], 4	      3923	sequencer.c	FUNCTION_97
0x400b48f	    0x808c24970300	            or byte [rsp + 0x397], 0x42 	      3925	sequencer.c	FUNCTION_97
0x400b497	    0xc784248c0300	              mov dword [rsp + 0x38c], 0	      3926	sequencer.c	FUNCTION_97
0x400b4a2	    0x808c24950300	                or byte [rsp + 0x395], 1	      3927	sequencer.c	FUNCTION_97
0x400b4aa	    0x808c249a0300	             or byte [rsp + 0x39a], 0x80	      3929	sequencer.c	FUNCTION_97
0x400b4b2	      0xe800000000	                          call 0x400b4b7	      3930	sequencer.c	FUNCTION_97	CALL_2
0x400b4b7	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3931	sequencer.c	FUNCTION_97	IF_2
0x400b4bc	          0x4885ff	                           test rdi, rdi	      3931	sequencer.c	FUNCTION_97	IF_2
0x400b4bf	     0xf84a2010000	                            je 0x400b667	      3931	sequencer.c	FUNCTION_97	IF_2
0x400b4c5	          0x803f00	                       cmp byte [rdi], 0	      3931	sequencer.c	FUNCTION_97	IF_2
0x400b4c8	     0xf8499010000	                            je 0x400b667	      3931	sequencer.c	FUNCTION_97	IF_2
0x400b4ce	    0x488db4242003	                  lea rsi, [rsp + 0x320]	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400b4d6	      0xe800000000	                          call 0x400b4db	      3935	sequencer.c	FUNCTION_97	CALL_5
0x400b4db	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3936	sequencer.c	FUNCTION_97	CALL_6
0x400b4e0	      0xe800000000	                          call 0x400b4e5	      3936	sequencer.c	FUNCTION_97	CALL_6
0x400b4e5	    0x8b8424c40300	           mov eax, dword [rsp + 0x3c4] 	      3937	sequencer.c	FUNCTION_97
0x400b4ec	    0x898424600200	            mov dword [rsp + 0x260], eax	      3937	sequencer.c	FUNCTION_97
0x400b4f3	      0xe800000000	                          call 0x400b4f8	      3938	sequencer.c	FUNCTION_97	CALL_7
0x400b4f8	    0x488d94242003	                  lea rdx, [rsp + 0x320]	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400b500	            0x31c9	                            xor ecx, ecx	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400b502	          0x4c89fe	                            mov rsi, r15	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400b505	          0x4489f7	                           mov edi, r14d	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400b508	    0x48898424b802	            mov qword [rsp + 0x2b8], rax	      3938	sequencer.c	FUNCTION_97	CALL_7
0x400b510	      0xe800000000	                          call 0x400b515	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400b515	          0x83f801	                              cmp eax, 1	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400b518	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b51d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b522	     0xf8f32120000	                            jg 0x400c75a	      3940	sequencer.c	FUNCTION_97	IF_3	CALL_8
0x400b528	    0x488dbc242003	                  lea rdi, [rsp + 0x320]	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400b530	      0xe800000000	                          call 0x400b535	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400b535	            0x85c0	                           test eax, eax	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400b537	     0xf8813120000	                            js 0x400c750	      3943	sequencer.c	FUNCTION_97	IF_4	CALL_10
0x400b53d	          0x4589e6	                          mov r14d, r12d	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400b540	        0x4183f601	                             xor r14d, 1	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400b544	        0x4183e601	                             and r14d, 1	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400b548	          0x4585ed	                         test r13d, r13d	      3946	sequencer.c	FUNCTION_97	IF_5
0x400b54b	     0xf859f010000	                           jne 0x400b6f0	      3946	sequencer.c	FUNCTION_97	IF_5
0x400b551	     0xf1f80000000	                         nop dword [rax]	      3946	sequencer.c	FUNCTION_97	IF_5
0x400b558	    0x488dbc242003	                  lea rdi, [rsp + 0x320]	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400b560	      0xe800000000	                          call 0x400b565	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400b565	          0x4885c0	                           test rax, rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400b568	          0x4889c5	                            mov rbp, rax	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400b56b	     0xf8447010000	                            je 0x400b6b8	      3949	sequencer.c	FUNCTION_97	WHILE_1	CALL_13
0x400b571	          0x4889ef	                            mov rdi, rbp	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400b574	      0xe8075affff	       call sym.is_original_commit_empty	      3950	sequencer.c	FUNCTION_97	WHILE_1	CALL_14
0x400b579	            0x85c0	                           test eax, eax	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400b57b	            0x7509	                           jne 0x400b586	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400b57d	    0xf74500002000	                test dword [rbp], 0x2000	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400b584	            0x75d2	                           jne 0x400b558	      3952	sequencer.c	FUNCTION_97	WHILE_1	IF_6
0x400b586	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400b58e	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       164	strbuf.h	FUNCTION_109
0x400b59a	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400b5a1	     0xf84f9000000	                            je 0x400b6a0	       165	strbuf.h	FUNCTION_109	IF_2
0x400b5a7	          0xc60200	                       mov byte [rdx], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400b5aa	          0x4584f6	                         test r14b, r14b	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400b5ad	    0x4c8da424a000	                   lea r12, [rsp + 0xa0]	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400b5b5	            0x741a	                            je 0x400b5d1	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400b5b7	            0x85c0	                           test eax, eax	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400b5b9	            0x7416	                            je 0x400b5d1	      3955	sequencer.c	FUNCTION_97	WHILE_1	IF_7
0x400b5bb	     0xfbe15000000	           movsx edx, byte [0x0400b5c2] 	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400b5c2	      0xbe00000000	                              mov esi, 0	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400b5c7	          0x4c89e7	                            mov rdi, r12	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400b5ca	            0x31c0	                            xor eax, eax	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400b5cc	      0xe800000000	                          call 0x400b5d1	      3956	sequencer.c	FUNCTION_97	WHILE_1	CALL_15
0x400b5d1	        0x488d7d04	                      lea rdi, [rbp + 4]	      3958	sequencer.c	FUNCTION_97	WHILE_1	CALL_17
0x400b5d5	      0xe800000000	                          call 0x400b5da	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400b5da	          0x4889da	                            mov rdx, rbx	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400b5dd	          0x4889c1	                            mov rcx, rax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400b5e0	      0xbe00000000	                              mov esi, 0	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400b5e5	            0x31c0	                            xor eax, eax	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400b5e7	          0x4c89e7	                            mov rdi, r12	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400b5ea	      0xe800000000	                          call 0x400b5ef	      3957	sequencer.c	FUNCTION_97	WHILE_1	CALL_16
0x400b5ef	    0x488dbc246002	                  lea rdi, [rsp + 0x260]	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400b5f7	          0x4c89e2	                            mov rdx, r12	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400b5fa	          0x4889ee	                            mov rsi, rbp	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400b5fd	      0xe800000000	                          call 0x400b602	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400b602	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	      3959	sequencer.c	FUNCTION_97	WHILE_1	CALL_18
0x400b60a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x400b60d	            0x7579	                           jne 0x400b688	       141	strbuf.h	FUNCTION_108
0x400b60f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x400b614	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_110	CALL_2
0x400b617	      0xe800000000	                          call 0x400b61c	       228	strbuf.h	FUNCTION_110	CALL_2
0x400b61c	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	       228	strbuf.h	FUNCTION_110	CALL_2
0x400b624	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x400b628	      0x488b742408	                mov rsi, qword [rsp + 8]	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400b62d	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       229	strbuf.h	FUNCTION_110
0x400b635	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       229	strbuf.h	FUNCTION_110
0x400b63d	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_110
0x400b641	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       230	strbuf.h	FUNCTION_110
0x400b649	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       230	strbuf.h	FUNCTION_110
0x400b651	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x400b655	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400b65d	      0xe800000000	                          call 0x400b662	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400b662	      0xe9f1feffff	                           jmp 0x400b558	      3961	sequencer.c	FUNCTION_97	WHILE_1	CALL_20
0x400b667	      0xe800000000	                          call 0x400b66c	      3932	sequencer.c	FUNCTION_97	IF_2	CALL_3
0x400b66c	      0xbf00000000	                              mov edi, 0	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400b671	      0xe800000000	                          call 0x400b676	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400b676	          0x4889c7	                            mov rdi, rax	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400b679	      0x4889442478	             mov qword [rsp + 0x78], rax	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400b67e	      0xe94bfeffff	                           jmp 0x400b4ce	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400b683	       0xf1f440000	                   nop dword [rax + rax]	      3933	sequencer.c	FUNCTION_97	IF_2	CALL_4
0x400b688	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	       141	strbuf.h	FUNCTION_108
0x400b690	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400b694	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400b697	            0x758b	                           jne 0x400b624	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400b699	      0xe971ffffff	                           jmp 0x400b60f	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400b69e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400b6a0	    0x803d00000000	                cmp byte [0x0400b6a7], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400b6a7	     0xf84fdfeffff	                            je 0x400b5aa	       168	strbuf.h	FUNCTION_109	CALL_2
0x400b6ad	      0xe916120000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400b6b2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400b6b8	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400b6c0	      0xe800000000	                          call 0x400b6c5	      3963	sequencer.c	FUNCTION_97	CALL_21
0x400b6c5	            0x31c0	                            xor eax, eax	      3964	sequencer.c	FUNCTION_97
0x400b6c7	    0x488b8c24d80b	           mov rcx, qword [rsp + 0xbd8] 	      3965	sequencer.c	FUNCTION_97
0x400b6cf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3965	sequencer.c	FUNCTION_97
0x400b6d8	     0xf8501120000	                           jne 0x400c8df	      3965	sequencer.c	FUNCTION_97
0x400b6de	    0x4881c4e80b00	                          add rsp, 0xbe8	      3965	sequencer.c	FUNCTION_97
0x400b6e5	              0x5b	                                 pop rbx	      3965	sequencer.c	FUNCTION_97
0x400b6e6	              0x5d	                                 pop rbp	      3965	sequencer.c	FUNCTION_97
0x400b6e7	            0x415c	                                 pop r12	      3965	sequencer.c	FUNCTION_97
0x400b6e9	            0x415d	                                 pop r13	      3965	sequencer.c	FUNCTION_97
0x400b6eb	            0x415e	                                 pop r14	      3965	sequencer.c	FUNCTION_97
0x400b6ed	            0x415f	                                 pop r15	      3965	sequencer.c	FUNCTION_97
0x400b6ef	              0xc3	                                     ret	      3965	sequencer.c	FUNCTION_97
0x400b6f0	            0x89e8	                            mov eax, ebp	      3683	sequencer.c	FUNCTION_96
0x400b6f2	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      3689	sequencer.c	FUNCTION_96
0x400b6fa	    0x4c8db4245001	                  lea r14, [rsp + 0x150]	      3691	sequencer.c	FUNCTION_96
0x400b702	          0x83e010	                           and eax, 0x10	      3683	sequencer.c	FUNCTION_96
0x400b705	      0xb906000000	                              mov ecx, 6	      3689	sequencer.c	FUNCTION_96
0x400b70a	      0xba00000000	                              mov edx, 0	      3698	sequencer.c	FUNCTION_96
0x400b70f	        0x8944246c	             mov dword [rsp + 0x6c], eax	      3683	sequencer.c	FUNCTION_96
0x400b713	            0x31c0	                            xor eax, eax	      3689	sequencer.c	FUNCTION_96
0x400b715	          0x83e504	                              and ebp, 4	      3698	sequencer.c	FUNCTION_96
0x400b718	          0xf348ab	              rep stosq qword [rdi], rax	      3689	sequencer.c	FUNCTION_96
0x400b71b	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0x400b720	          0x4c89f7	                            mov rdi, r14	      3691	sequencer.c	FUNCTION_96
0x400b723	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      3684	sequencer.c	FUNCTION_96
0x400b72f	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      3684	sequencer.c	FUNCTION_96
0x400b73b	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      3684	sequencer.c	FUNCTION_96
0x400b747	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      3684	sequencer.c	FUNCTION_96
0x400b753	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	      3684	sequencer.c	FUNCTION_96
0x400b75f	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      3684	sequencer.c	FUNCTION_96
0x400b76b	    0x48c784240001	              mov qword [rsp + 0x100], 0	      3685	sequencer.c	FUNCTION_96
0x400b777	    0x48c784240801	              mov qword [rsp + 0x108], 0	      3685	sequencer.c	FUNCTION_96
0x400b783	    0x48c784241001	              mov qword [rsp + 0x110], 0	      3685	sequencer.c	FUNCTION_96
0x400b78f	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0x400b792	    0x488dbc248001	                  lea rdi, [rsp + 0x180]	      3691	sequencer.c	FUNCTION_96
0x400b79a	      0xb906000000	                              mov ecx, 6	      3691	sequencer.c	FUNCTION_96
0x400b79f	    0x48c784248000	               mov qword [rsp + 0x80], 0	      3686	sequencer.c	FUNCTION_96
0x400b7ab	    0x48c784248800	               mov qword [rsp + 0x88], 0	      3687	sequencer.c	FUNCTION_96
0x400b7b7	          0xf348ab	              rep stosq qword [rdi], rax	      3691	sequencer.c	FUNCTION_96
0x400b7ba	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	      3692	sequencer.c	FUNCTION_96
0x400b7c2	      0xb906000000	                              mov ecx, 6	      3692	sequencer.c	FUNCTION_96
0x400b7c7	          0xf348ab	              rep stosq qword [rdi], rax	      3692	sequencer.c	FUNCTION_96
0x400b7ca	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3693	sequencer.c	FUNCTION_96
0x400b7d2	      0xb90f000000	                            mov ecx, 0xf	      3693	sequencer.c	FUNCTION_96
0x400b7d7	          0xf348ab	              rep stosq qword [rdi], rax	      3693	sequencer.c	FUNCTION_96
0x400b7da	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400b7df	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400b7e7	    0x48c784245002	              mov qword [rsp + 0x250], 0	      3693	sequencer.c	FUNCTION_96
0x400b7f3	        0x480f45c2	                         cmovne rax, rdx	      3698	sequencer.c	FUNCTION_96
0x400b7f7	      0xba00000000	                              mov edx, 0	      3698	sequencer.c	FUNCTION_96
0x400b7fc	      0x4889442450	             mov qword [rsp + 0x50], rax	      3698	sequencer.c	FUNCTION_96
0x400b801	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400b806	        0x480f45c2	                         cmovne rax, rdx	      3698	sequencer.c	FUNCTION_96
0x400b80a	      0xba00000000	                              mov edx, 0	      3698	sequencer.c	FUNCTION_96
0x400b80f	      0x4889442460	             mov qword [rsp + 0x60], rax	      3698	sequencer.c	FUNCTION_96
0x400b814	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400b819	        0x480f45c2	                         cmovne rax, rdx	      3698	sequencer.c	FUNCTION_96
0x400b81d	      0xba00000000	                              mov edx, 0	      3698	sequencer.c	FUNCTION_96
0x400b822	      0x4889442458	             mov qword [rsp + 0x58], rax	      3698	sequencer.c	FUNCTION_96
0x400b827	      0xb800000000	                              mov eax, 0	      3698	sequencer.c	FUNCTION_96
0x400b82c	        0x480f45c2	                         cmovne rax, rdx	      3698	sequencer.c	FUNCTION_96
0x400b830	            0x31f6	                            xor esi, esi	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400b832	      0x4889442420	             mov qword [rsp + 0x20], rax	      3698	sequencer.c	FUNCTION_96
0x400b837	      0xe800000000	                          call 0x400b83c	      3701	sequencer.c	FUNCTION_96	CALL_1
0x400b83c	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400b844	            0x31f6	                            xor esi, esi	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400b846	      0xe800000000	                          call 0x400b84b	      3702	sequencer.c	FUNCTION_96	CALL_2
0x400b84b	    0x488dbc241002	                  lea rdi, [rsp + 0x210]	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400b853	            0x31d2	                            xor edx, edx	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400b855	            0x31c9	                            xor ecx, ecx	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400b857	      0xbe00000000	                              mov esi, 0	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400b85c	      0xe800000000	                          call 0x400b861	      3703	sequencer.c	FUNCTION_96	CALL_3
0x400b861	    0x488dbc244002	                  lea rdi, [rsp + 0x240]	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400b869	      0xbe20000000	                           mov esi, 0x20	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400b86e	      0xe800000000	                          call 0x400b873	      3704	sequencer.c	FUNCTION_96	CALL_4
0x400b873	    0x8b9424480300	           mov edx, dword [rsp + 0x348] 	      3706	sequencer.c	FUNCTION_96	IF_1
0x400b87a	            0x85d2	                           test edx, edx	      3706	sequencer.c	FUNCTION_96	IF_1
0x400b87c	            0x7412	                            je 0x400b890	      3706	sequencer.c	FUNCTION_96	IF_1
0x400b87e	    0x488b84245003	           mov rax, qword [rsp + 0x350] 	      3706	sequencer.c	FUNCTION_96	IF_1
0x400b886	        0xf6401504	               test byte [rax + 0x15], 4	      3706	sequencer.c	FUNCTION_96	IF_1
0x400b88a	     0xf85e70f0000	                           jne 0x400c877	      3706	sequencer.c	FUNCTION_96	IF_1
0x400b890	    0x488d84248800	                   lea rax, [rsp + 0x88]	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b898	        0x4183f401	                             xor r12d, 1	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400b89c	      0x4889442418	             mov qword [rsp + 0x18], rax	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b8a1	    0x488d84248000	                   lea rax, [rsp + 0x80]	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b8a9	        0x48890424	                    mov qword [rsp], rax	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400b8ad	          0x4489e0	                           mov eax, r12d	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400b8b0	          0x83e001	                              and eax, 1	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400b8b3	        0x8844246b	               mov byte [rsp + 0x6b], al	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400b8b7	    0x660f1f840000	                    nop word [rax + rax]	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400b8c0	    0x488dbc242003	                  lea rdi, [rsp + 0x320]	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400b8c8	      0xe800000000	                          call 0x400b8cd	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400b8cd	          0x4885c0	                           test rax, rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400b8d0	          0x4889c3	                            mov rbx, rax	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400b8d3	     0xf848b080000	                            je 0x400c164	      3719	sequencer.c	FUNCTION_96	WHILE_1	CALL_7
0x400b8d9	        0x488b3424	                    mov rsi, qword [rsp]	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400b8dd	        0x488d6b04	                      lea rbp, [rbx + 4]	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400b8e1	          0x4889df	                            mov rdi, rbx	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400b8e4	      0xe800000000	                          call 0x400b8e9	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400b8e9	          0x4889ee	                            mov rsi, rbp	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400b8ec	        0x4883c008	                              add rax, 8	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400b8f0	          0x4c89f7	                            mov rdi, r14	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400b8f3	        0x48890424	                    mov qword [rsp], rax	      3726	sequencer.c	FUNCTION_96	WHILE_1	CALL_8
0x400b8f7	      0xe800000000	                          call 0x400b8fc	      3727	sequencer.c	FUNCTION_96	WHILE_1	CALL_9
0x400b8fc	          0x4889df	                            mov rdi, rbx	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400b8ff	      0xe87c56ffff	       call sym.is_original_commit_empty	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400b904	            0x85c0	                           test eax, eax	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400b906	          0x4189c7	                           mov r15d, eax	      3729	sequencer.c	FUNCTION_96	WHILE_1	CALL_10
0x400b909	            0x7508	                           jne 0x400b913	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400b90b	    0xf70300200000	                test dword [rbx], 0x2000	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400b911	            0x75ad	                           jne 0x400b8c0	      3730	sequencer.c	FUNCTION_96	WHILE_1	IF_2
0x400b913	    0x488b8424f000	            mov rax, qword [rsp + 0xf0] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400b91b	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	       164	strbuf.h	FUNCTION_109
0x400b927	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400b92d	     0xf846d030000	                            je 0x400bca0	       165	strbuf.h	FUNCTION_109	IF_2
0x400b933	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400b936	    0x488d9424e000	                   lea rdx, [rsp + 0xe0]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400b93e	    0x488dbc246002	                  lea rdi, [rsp + 0x260]	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400b946	          0x4889de	                            mov rsi, rbx	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400b949	      0xe800000000	                          call 0x400b94e	      3734	sequencer.c	FUNCTION_96	WHILE_1	CALL_11
0x400b94e	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400b952	          0x4885c0	                           test rax, rax	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400b955	     0xf848d070000	                            je 0x400c0e8	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400b95b	        0x4c8b6808	                mov r13, qword [rax + 8]	      3736	sequencer.c	FUNCTION_96	WHILE_1
0x400b95f	          0x4d85ed	                           test r13, r13	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400b962	     0xf8480070000	                            je 0x400c0e8	      3737	sequencer.c	FUNCTION_96	WHILE_1	IF_3
0x400b968	      0x49837d0800	                  cmp qword [r13 + 8], 0	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400b96d	     0xf8559070000	                           jne 0x400c0cc	      3753	sequencer.c	FUNCTION_96	WHILE_1
0x400b973	    0x488b84241001	           mov rax, qword [rsp + 0x110] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400b97b	    0x48c784240801	              mov qword [rsp + 0x108], 0	       164	strbuf.h	FUNCTION_109
0x400b987	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400b98d	     0xf843d030000	                            je 0x400bcd0	       165	strbuf.h	FUNCTION_109	IF_2
0x400b993	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400b996	    0x4c8ba424f000	            mov r12, qword [rsp + 0xf0] 	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400b99e	      0xb800000000	                              mov eax, 0	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400b9a3	          0x4c89e7	                            mov rdi, r12	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400b9a6	            0xeb19	                           jmp 0x400b9c1	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400b9a8	     0xf1f84000000	                   nop dword [rax + rax]	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400b9b0	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400b9b4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400b9b8	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400b9bb	     0xf85ef010000	                           jne 0x400bbb0	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400b9c1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400b9c4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400b9c6	            0x75e8	                           jne 0x400b9b0	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400b9c8	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400b9cd	      0xe800000000	                          call 0x400b9d2	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400b9d2	          0x4885c0	                           test rax, rax	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400b9d5	     0xf84d5010000	                            je 0x400bbb0	      3760	sequencer.c	FUNCTION_96	WHILE_1	IF_6	CALL_17
0x400b9db	        0x4c8d7801	                      lea r15, [rax + 1]	      3762	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400b9df	      0xbe27000000	                           mov esi, 0x27	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400b9e4	          0x4c89ff	                            mov rdi, r15	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400b9e7	      0xe800000000	                          call 0x400b9ec	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400b9ec	          0x4885c0	                           test rax, rax	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400b9ef	     0xf84bb010000	                            je 0x400bbb0	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400b9f5	          0x4c29f8	                            sub rax, r15	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400b9f8	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ba00	          0x4c89fe	                            mov rsi, r15	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ba03	          0x4889c2	                            mov rdx, rax	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ba06	      0xe800000000	                          call 0x400ba0b	      3763	sequencer.c	FUNCTION_96	WHILE_1	CALL_18
0x400ba0b	    0x488b94241001	           mov rdx, qword [rsp + 0x110] 	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba13	           0xfb602	                   movzx eax, byte [rdx]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba16	            0x84c0	                             test al, al	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba18	            0x741d	                            je 0x400ba37	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba1a	    0x660f1f440000	                    nop word [rax + rax]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba20	    0xf68000000000	                      test byte [rax], 1	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400ba27	            0x7403	                            je 0x400ba2c	      3772	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400ba29	          0xc6022d	                    mov byte [rdx], 0x2d	      3773	sequencer.c	FUNCTION_96	WHILE_1	FOR_1	IF_8
0x400ba2c	        0x4883c201	                              add rdx, 1	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba30	           0xfb602	                   movzx eax, byte [rdx]	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba33	            0x84c0	                             test al, al	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba35	            0x75e9	                           jne 0x400ba20	      3771	sequencer.c	FUNCTION_96	WHILE_1	FOR_1
0x400ba37	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400ba3f	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       164	strbuf.h	FUNCTION_109
0x400ba4b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400ba51	     0xf8461020000	                            je 0x400bcb8	       165	strbuf.h	FUNCTION_109	IF_2
0x400ba57	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400ba5a	          0x4889ef	                            mov rdi, rbp	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba5d	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba65	      0xe800000000	                          call 0x400ba6a	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba6a	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba6f	          0x4889c1	                            mov rcx, rax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba72	      0xbe00000000	                              mov esi, 0	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba77	            0x31c0	                            xor eax, eax	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba79	          0x4c89e7	                            mov rdi, r12	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba7c	      0xe800000000	                          call 0x400ba81	      3776	sequencer.c	FUNCTION_96	WHILE_1	CALL_23
0x400ba81	        0x498b4500	                    mov rax, qword [r13]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400ba85	      0x4889442410	             mov qword [rsp + 0x10], rax	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400ba8a	        0x4c8d7804	                      lea r15, [rax + 4]	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400ba8e	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	      3780	sequencer.c	FUNCTION_96	WHILE_1
0x400ba96	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x400ba99	     0xf85c1010000	                           jne 0x400bc60	       141	strbuf.h	FUNCTION_108
0x400ba9f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x400baa4	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_110	CALL_2
0x400baa7	      0xe800000000	                          call 0x400baac	       228	strbuf.h	FUNCTION_110	CALL_2
0x400baac	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       228	strbuf.h	FUNCTION_110	CALL_2
0x400bab4	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x400bab8	          0x4c89fe	                            mov rsi, r15	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400babb	          0x4c89f7	                            mov rdi, r14	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400babe	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       229	strbuf.h	FUNCTION_110
0x400bac6	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       229	strbuf.h	FUNCTION_110
0x400bace	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_110
0x400bad2	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	       230	strbuf.h	FUNCTION_110
0x400bada	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	       230	strbuf.h	FUNCTION_110
0x400bae2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x400bae6	      0xe800000000	                          call 0x400baeb	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400baeb	            0x85c0	                           test eax, eax	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400baed	     0xf8525010000	                           jne 0x400bc18	      3783	sequencer.c	FUNCTION_96	WHILE_1	IF_9	CALL_26
0x400baf3	    0x488db424e001	                  lea rsi, [rsp + 0x1e0]	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400bafb	          0x4c89ff	                            mov rdi, r15	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400bafe	      0xe83d76ffff	         call sym.label_oid.constprop.26	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400bb03	          0x4989c5	                            mov r13, rax	      3784	sequencer.c	FUNCTION_96	WHILE_1	CALL_28
0x400bb06	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bb09	      0xe800000000	                          call 0x400bb0e	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bb0e	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bb11	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bb14	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bb17	      0xe800000000	                          call 0x400bb1c	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bb1c	    0x488b9424f000	            mov rdx, qword [rsp + 0xf0] 	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400bb24	      0xbe00000000	                              mov esi, 0	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400bb29	          0x4c89e7	                            mov rdi, r12	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400bb2c	            0x31c0	                            xor eax, eax	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400bb2e	      0xe800000000	                          call 0x400bb33	      3791	sequencer.c	FUNCTION_96	WHILE_1	CALL_32
0x400bb33	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400bb3b	      0xe800000000	                          call 0x400bb40	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400bb40	        0x4883f8d7	             cmp rax, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400bb44	          0x4989c5	                            mov r13, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400bb47	     0xf87970d0000	                            ja 0x400c8e4	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400bb4d	     0xf84c40d0000	                            je 0x400c917	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400bb53	        0x498d7529	                   lea rsi, [r13 + 0x29]	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400bb57	      0xbf01000000	                              mov edi, 1	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400bb5c	      0xe800000000	                          call 0x400bb61	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400bb61	    0x488bb424d000	            mov rsi, qword [rsp + 0xd0] 	        53	string3.h	FUNCTION_233	CALL_3
0x400bb69	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_233	CALL_3
0x400bb6d	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_233	CALL_3
0x400bb70	          0x4989c4	                            mov r12, rax	      3793	sequencer.c	FUNCTION_96	WHILE_1
0x400bb73	      0xe800000000	                          call 0x400bb78	        53	string3.h	FUNCTION_233	CALL_3
0x400bb78	        0x488b5304	                mov rdx, qword [rbx + 4]	        53	string3.h	FUNCTION_233	CALL_3
0x400bb7c	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400bb84	          0x4c89e6	                            mov rsi, r12	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400bb87	      0x4989542410	             mov qword [r12 + 0x10], rdx	        53	string3.h	FUNCTION_233	CALL_3
0x400bb8c	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_233	CALL_3
0x400bb90	      0x4989542418	             mov qword [r12 + 0x18], rdx	        53	string3.h	FUNCTION_233	CALL_3
0x400bb95	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_233	CALL_3
0x400bb98	      0x4189542420	             mov dword [r12 + 0x20], edx	        53	string3.h	FUNCTION_233	CALL_3
0x400bb9d	      0xe800000000	                          call 0x400bba2	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400bba2	      0xe919fdffff	                           jmp 0x400b8c0	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400bba7	    0x660f1f840000	                    nop word [rax + rax]	      3795	sequencer.c	FUNCTION_96	WHILE_1	CALL_34
0x400bbb0	      0xb800000000	                              mov eax, 0	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400bbb5	            0xeb1c	                           jmp 0x400bbd3	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400bbb7	    0x660f1f840000	                    nop word [rax + rax]	      3761	sequencer.c	FUNCTION_96	WHILE_1	IF_6
0x400bbc0	        0x4983c401	                              add r12, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400bbc4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400bbc8	      0x413a5424ff	                  cmp dl, byte [r12 - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400bbcd	     0xf85ad000000	                           jne 0x400bc80	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400bbd3	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400bbd6	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400bbd8	            0x75e6	                           jne 0x400bbc0	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400bbda	      0xbe00000000	                              mov esi, 0	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400bbdf	          0x4c89e7	                            mov rdi, r12	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400bbe2	      0xe800000000	                          call 0x400bbe7	      3766	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400bbe7	          0x4885c0	                           test rax, rax	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400bbea	     0xf8490000000	                            je 0x400bc80	      3765	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400bbf0	        0x4c8d6006	                      lea r12, [rax + 6]	      3767	sequencer.c	FUNCTION_96	WHILE_1	ELSE_1	IF_7
0x400bbf4	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bbf7	      0xe800000000	                          call 0x400bbfc	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bbfc	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bc04	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bc07	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bc0a	      0xe800000000	                          call 0x400bc0f	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bc0f	      0xe9f7fdffff	                           jmp 0x400ba0b	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bc14	         0xf1f4000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_111	CALL_2
0x400bc18	        0x498b7d00	                    mov rdi, qword [r13]	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400bc1c	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400bc21	      0xe800000000	                          call 0x400bc26	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400bc26	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400bc2e	        0x4883c008	                              add rax, 8	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400bc32	          0x4c89fe	                            mov rsi, r15	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400bc35	      0x4889442418	             mov qword [rsp + 0x18], rax	      3786	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_29
0x400bc3a	    0x4c8bac241001	           mov r13, qword [rsp + 0x110] 	      3789	sequencer.c	FUNCTION_96	WHILE_1	ELSE_3	CALL_31
0x400bc42	      0xe800000000	                          call 0x400bc47	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400bc47	          0x4885c0	                           test rax, rax	      3597	sequencer.c	FUNCTION_95	IF_1
0x400bc4a	     0xf8498000000	                            je 0x400bce8	      3597	sequencer.c	FUNCTION_95	IF_1
0x400bc50	        0x4c8d6828	                   lea r13, [rax + 0x28]	      3598	sequencer.c	FUNCTION_95	IF_1
0x400bc54	      0xe9adfeffff	                           jmp 0x400bb06	      3598	sequencer.c	FUNCTION_95	IF_1
0x400bc59	     0xf1f80000000	                         nop dword [rax]	      3598	sequencer.c	FUNCTION_95	IF_1
0x400bc60	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	       141	strbuf.h	FUNCTION_108
0x400bc68	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400bc6c	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400bc6f	     0xf853ffeffff	                           jne 0x400bab4	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400bc75	      0xe925feffff	                           jmp 0x400ba9f	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400bc7a	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400bc80	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400bc88	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400bc90	      0xe800000000	                          call 0x400bc95	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400bc95	      0xe971fdffff	                           jmp 0x400ba0b	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400bc9a	    0x660f1f440000	                    nop word [rax + rax]	      3769	sequencer.c	FUNCTION_96	WHILE_1	CALL_22
0x400bca0	    0x803d00000000	                cmp byte [0x0400bca7], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bca7	     0xf8489fcffff	                            je 0x400b936	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcad	      0xe9160c0000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcb2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcb8	    0x803d00000000	                cmp byte [0x0400bcbf], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcbf	     0xf8495fdffff	                            je 0x400ba5a	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcc5	      0xe9fe0b0000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcca	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcd0	    0x803d00000000	                cmp byte [0x0400bcd7], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcd7	     0xf84b9fcffff	                            je 0x400b996	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bcdd	      0xe9e60b0000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bce2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400bce8	          0x4d85ed	                           test r13, r13	      3613	sequencer.c	FUNCTION_95	IF_2
0x400bceb	     0xf848f010000	                            je 0x400be80	      3613	sequencer.c	FUNCTION_95	IF_2
0x400bcf1	          0x4c89ef	                            mov rdi, r13	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400bcf4	      0xe800000000	                          call 0x400bcf9	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400bcf9	        0x4883f814	                           cmp rax, 0x14	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400bcfd	          0x4889c1	                            mov rcx, rax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400bd00	     0xf840e0b0000	                            je 0x400c814	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400bd06	        0x4883f801	                              cmp rax, 1	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400bd0a	            0x7507	                           jne 0x400bd13	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400bd0c	      0x41807d0023	                    cmp byte [r13], 0x23	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400bd11	            0x7446	                            je 0x400bd59	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400bd13	          0x4c89ef	                            mov rdi, r13	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400bd16	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400bd1b	      0xe800000000	                          call 0x400bd20	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400bd20	    0x488dbc241002	                  lea rdi, [rsp + 0x210]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bd28	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bd30	          0x4c89ea	                            mov rdx, r13	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bd33	    0x898424980000	             mov dword [rsp + 0x98], eax	       248	hashmap.h	FUNCTION_208
0x400bd3a	    0x48c784249000	               mov qword [rsp + 0x90], 0	       249	hashmap.h	FUNCTION_208
0x400bd46	      0xe800000000	                          call 0x400bd4b	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bd4b	          0x4885c0	                           test rax, rax	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400bd4e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400bd53	     0xf845d020000	                            je 0x400bfb6	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400bd59	    0x488b84245002	           mov rax, qword [rsp + 0x250] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400bd61	    0x48c784244802	              mov qword [rsp + 0x248], 0	       164	strbuf.h	FUNCTION_109
0x400bd6d	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400bd73	     0xf84fc090000	                            je 0x400c775	       165	strbuf.h	FUNCTION_109	IF_2
0x400bd79	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400bd7c	    0x488d84244002	                  lea rax, [rsp + 0x240]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400bd84	          0x4c89ee	                            mov rsi, r13	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400bd87	          0x4889ca	                            mov rdx, rcx	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400bd8a	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400bd8f	    0x41bd02000000	                             mov r13d, 2	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x400bd95	          0x4889c7	                            mov rdi, rax	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400bd98	      0x4889442428	             mov qword [rsp + 0x28], rax	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400bd9d	      0xe800000000	                          call 0x400bda2	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400bda2	    0x488d8c241002	                  lea rcx, [rsp + 0x210]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdaa	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400bdaf	      0x48896c2430	             mov qword [rsp + 0x30], rbp	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdb4	      0x48895c2428	             mov qword [rsp + 0x28], rbx	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdb9	          0x4489ed	                           mov ebp, r13d	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdbc	      0x4c89642440	             mov qword [rsp + 0x40], r12	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdc1	          0x4889ce	                            mov rsi, rcx	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdc4	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdc9	      0x4c897c2438	             mov qword [rsp + 0x38], r15	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdce	          0x4889c3	                            mov rbx, rax	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdd1	          0x4989f5	                            mov r13, rsi	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdd4	          0x4989cc	                            mov r12, rcx	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdd7	            0xeb5f	                           jmp 0x400be38	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bdd9	     0xf1f80000000	                         nop dword [rax]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bde0	      0x42c6042000	                 mov byte [rax + r12], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400bde5	            0x89ea	                            mov edx, ebp	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400bde7	      0xbe00000000	                              mov esi, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400bdec	            0x31c0	                            xor eax, eax	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400bdee	          0x4889df	                            mov rdi, rbx	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400bdf1	      0xe800000000	                          call 0x400bdf6	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400bdf6	    0x4c8bbc245002	           mov r15, qword [rsp + 0x250] 	      3659	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_18
0x400bdfe	          0x4c89ff	                            mov rdi, r15	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400be01	      0xe800000000	                          call 0x400be06	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400be06	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400be0e	          0x4c89fa	                            mov rdx, r15	       308	hashmap.h	FUNCTION_210	CALL_2
0x400be11	          0x4c89ef	                            mov rdi, r13	       308	hashmap.h	FUNCTION_210	CALL_2
0x400be14	    0x898424980000	             mov dword [rsp + 0x98], eax	       248	hashmap.h	FUNCTION_208
0x400be1b	    0x48c784249000	               mov qword [rsp + 0x90], 0	       249	hashmap.h	FUNCTION_208
0x400be27	      0xe800000000	                          call 0x400be2c	       308	hashmap.h	FUNCTION_210	CALL_2
0x400be2c	          0x4885c0	                           test rax, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400be2f	     0xf8476020000	                            je 0x400c0ab	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400be35	          0x83c501	                              add ebp, 1	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x400be38	    0x488b84244002	           mov rax, qword [rsp + 0x240] 	       162	strbuf.h	FUNCTION_109	IF_1
0x400be40	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_109	IF_1
0x400be44	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_109	IF_1
0x400be48	          0x4939c4	                            cmp r12, rax	       162	strbuf.h	FUNCTION_109	IF_1
0x400be4b	     0xf874f040000	                            ja 0x400c2a0	       162	strbuf.h	FUNCTION_109	IF_1
0x400be51	    0x488b84245002	           mov rax, qword [rsp + 0x250] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400be59	    0x4c89a4244802	            mov qword [rsp + 0x248], r12	       164	strbuf.h	FUNCTION_109
0x400be61	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400be67	     0xf8573ffffff	                           jne 0x400bde0	       165	strbuf.h	FUNCTION_109	IF_2
0x400be6d	    0x803d00000000	                cmp byte [0x0400be74], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400be74	     0xf846bffffff	                            je 0x400bde5	       168	strbuf.h	FUNCTION_109	CALL_2
0x400be7a	      0xe9490a0000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400be7f	              0x90	                                     nop	       168	strbuf.h	FUNCTION_109	CALL_2
0x400be80	    0x488b84245002	           mov rax, qword [rsp + 0x250] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400be88	    0x48c784244802	              mov qword [rsp + 0x248], 0	       164	strbuf.h	FUNCTION_109
0x400be94	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400be9a	     0xf84300a0000	                            je 0x400c8d0	       165	strbuf.h	FUNCTION_109	IF_2
0x400bea0	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400bea3	    0x488dbc244002	                  lea rdi, [rsp + 0x240]	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x400beab	      0xbe28000000	                           mov esi, 0x28	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x400beb0	      0xe800000000	                          call 0x400beb5	      3617	sequencer.c	FUNCTION_95	IF_2	CALL_2
0x400beb5	    0x4c8bac245002	           mov r13, qword [rsp + 0x250] 	      3618	sequencer.c	FUNCTION_95	IF_2
0x400bebd	    0x8b1500000000	            mov edx, dword [0x0400bec3] 	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400bec3	          0x4c89fe	                            mov rsi, r15	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400bec6	          0x4c89ef	                            mov rdi, r13	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400bec9	      0xe800000000	                          call 0x400bece	      3620	sequencer.c	FUNCTION_95	IF_2	CALL_3
0x400bece	          0x4c89ef	                            mov rdi, r13	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400bed1	      0xe800000000	                          call 0x400bed6	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400bed6	    0x898424980000	             mov dword [rsp + 0x98], eax	       248	hashmap.h	FUNCTION_208
0x400bedd	    0x488d84241002	                  lea rax, [rsp + 0x210]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bee5	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400beed	          0x4c89ea	                            mov rdx, r13	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bef0	    0x48c784249000	               mov qword [rsp + 0x90], 0	       249	hashmap.h	FUNCTION_208
0x400befc	          0x4889c7	                            mov rdi, rax	       308	hashmap.h	FUNCTION_210	CALL_2
0x400beff	      0x4889442430	             mov qword [rsp + 0x30], rax	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf04	      0xe800000000	                          call 0x400bf09	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf09	          0x4885c0	                           test rax, rax	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400bf0c	     0xf84a4000000	                            je 0x400bfb6	      3626	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_5
0x400bf12	          0x4c89ef	                            mov rdi, r13	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400bf15	      0xe800000000	                          call 0x400bf1a	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400bf1a	          0x4c89fe	                            mov rsi, r15	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400bf1d	          0x4c89ef	                            mov rdi, r13	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400bf20	      0x4889442428	             mov qword [rsp + 0x28], rax	      3627	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_6
0x400bf25	      0xe800000000	                          call 0x400bf2a	      3629	sequencer.c	FUNCTION_95	IF_2	IF_3	CALL_7
0x400bf2a	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf2f	        0x488d4201	                      lea rax, [rdx + 1]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf33	        0x4883f827	                           cmp rax, 0x27	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf37	            0x777d	                            ja 0x400bfb6	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf39	      0x498d4c1500	                    lea rcx, [r13 + rdx]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf3e	        0x498d7527	                   lea rsi, [r13 + 0x27]	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf42	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf47	      0x48896c2440	             mov qword [rsp + 0x40], rbp	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf4c	      0x4889742428	             mov qword [rsp + 0x28], rsi	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf51	          0x4889cb	                            mov rbx, rcx	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf54	            0xeb19	                           jmp 0x400bf6f	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf60	        0x40886b01	                 mov byte [rbx + 1], bpl	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf64	        0x4883c301	                              add rbx, 1	      3636	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf68	      0x48395c2428	            cmp qword [rsp + 0x28], rbx 	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf6d	            0x743d	                            je 0x400bfac	      3630	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf6f	         0xfb66b01	               movzx ebp, byte [rbx + 1]	      3631	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf73	          0x4c89ef	                            mov rdi, r13	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400bf76	        0xc6430100	                   mov byte [rbx + 1], 0	      3632	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1
0x400bf7a	      0xe800000000	                          call 0x400bf7f	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400bf7f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf84	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf8c	          0x4c89ea	                            mov rdx, r13	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bf8f	    0x898424980000	             mov dword [rsp + 0x98], eax	       248	hashmap.h	FUNCTION_208
0x400bf96	    0x48c784249000	               mov qword [rsp + 0x90], 0	       249	hashmap.h	FUNCTION_208
0x400bfa2	      0xe800000000	                          call 0x400bfa7	       308	hashmap.h	FUNCTION_210	CALL_2
0x400bfa7	          0x4885c0	                           test rax, rax	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400bfaa	            0x75b4	                           jne 0x400bf60	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400bfac	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400bfb1	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      3633	sequencer.c	FUNCTION_95	IF_2	IF_3	FOR_1	IF_4	CALL_8
0x400bfb6	          0x4c89ef	                            mov rdi, r13	      3667	sequencer.c	FUNCTION_95
0x400bfb9	      0xe800000000	                          call 0x400bfbe	      3667	sequencer.c	FUNCTION_95
0x400bfbe	        0x4883f8ef	             cmp rax, 0xffffffffffffffef	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400bfc2	          0x4889c2	                            mov rdx, rax	      3667	sequencer.c	FUNCTION_95
0x400bfc5	     0xf872d090000	                            ja 0x400c8f8	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400bfcb	     0xf8446090000	                            je 0x400c917	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400bfd1	        0x488d7011	                   lea rsi, [rax + 0x11]	      3667	sequencer.c	FUNCTION_95
0x400bfd5	      0xbf01000000	                              mov edi, 1	      3667	sequencer.c	FUNCTION_95
0x400bfda	      0x4889442430	             mov qword [rsp + 0x30], rax	      3667	sequencer.c	FUNCTION_95
0x400bfdf	      0xe800000000	                          call 0x400bfe4	      3667	sequencer.c	FUNCTION_95
0x400bfe4	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_233	CALL_3
0x400bfe9	        0x488d7810	                   lea rdi, [rax + 0x10]	        53	string3.h	FUNCTION_233	CALL_3
0x400bfed	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_233	CALL_3
0x400bff0	      0x4889442428	             mov qword [rsp + 0x28], rax	        53	string3.h	FUNCTION_233	CALL_3
0x400bff5	      0xe800000000	                          call 0x400bffa	        53	string3.h	FUNCTION_233	CALL_3
0x400bffa	          0x4c89ef	                            mov rdi, r13	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400bffd	      0xe800000000	                          call 0x400c002	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400c002	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       248	hashmap.h	FUNCTION_208
0x400c007	    0x488dbc241002	                  lea rdi, [rsp + 0x210]	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c00f	          0x894108	                mov dword [rcx + 8], eax	       248	hashmap.h	FUNCTION_208
0x400c012	    0x48c701000000	                      mov qword [rcx], 0	       249	hashmap.h	FUNCTION_208
0x400c019	          0x4889ce	                            mov rsi, rcx	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c01c	      0xe800000000	                          call 0x400c021	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c021	          0x4c89ef	                            mov rdi, r13	      3671	sequencer.c	FUNCTION_95
0x400c024	      0xe800000000	                          call 0x400c029	      3671	sequencer.c	FUNCTION_95
0x400c029	        0x4883f8d7	             cmp rax, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c02d	          0x4889c2	                            mov rdx, rax	      3671	sequencer.c	FUNCTION_95
0x400c030	     0xf87b1080000	                            ja 0x400c8e7	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c036	     0xf84db080000	                            je 0x400c917	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c03c	        0x488d7029	                   lea rsi, [rax + 0x29]	      3671	sequencer.c	FUNCTION_95
0x400c040	      0xbf01000000	                              mov edi, 1	      3671	sequencer.c	FUNCTION_95
0x400c045	      0x4889442428	             mov qword [rsp + 0x28], rax	      3671	sequencer.c	FUNCTION_95
0x400c04a	      0xe800000000	                          call 0x400c04f	      3671	sequencer.c	FUNCTION_95
0x400c04f	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_233	CALL_3
0x400c054	        0x4c8d4028	                    lea r8, [rax + 0x28]	      3671	sequencer.c	FUNCTION_95
0x400c058	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_233	CALL_3
0x400c05b	      0x4889442430	             mov qword [rsp + 0x30], rax	      3671	sequencer.c	FUNCTION_95
0x400c060	          0x4c89c7	                             mov rdi, r8	        53	string3.h	FUNCTION_233	CALL_3
0x400c063	      0x4c89442428	              mov qword [rsp + 0x28], r8	        53	string3.h	FUNCTION_233	CALL_3
0x400c068	      0xe800000000	                          call 0x400c06d	        53	string3.h	FUNCTION_233	CALL_3
0x400c06d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_233	CALL_3
0x400c072	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_233	CALL_3
0x400c077	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c07f	        0x488b5604	                mov rdx, qword [rsi + 4]	        53	string3.h	FUNCTION_233	CALL_3
0x400c083	          0x4889ce	                            mov rsi, rcx	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c086	        0x48895110	             mov qword [rcx + 0x10], rdx	        53	string3.h	FUNCTION_233	CALL_3
0x400c08a	        0x498b5708	                mov rdx, qword [r15 + 8]	        53	string3.h	FUNCTION_233	CALL_3
0x400c08e	        0x48895118	             mov qword [rcx + 0x18], rdx	        53	string3.h	FUNCTION_233	CALL_3
0x400c092	        0x418b5710	            mov edx, dword [r15 + 0x10] 	        53	string3.h	FUNCTION_233	CALL_3
0x400c096	          0x895120	             mov dword [rcx + 0x20], edx	        53	string3.h	FUNCTION_233	CALL_3
0x400c099	      0xe800000000	                          call 0x400c09e	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c09e	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c0a3	          0x4d89c5	                             mov r13, r8	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c0a6	      0xe95bfaffff	                           jmp 0x400bb06	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c0ab	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c0b0	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c0b5	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c0ba	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c0bf	    0x4c8bac245002	           mov r13, qword [rsp + 0x250] 	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400c0c7	      0xe9eafeffff	                           jmp 0x400bfb6	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400c0cc	      0xba00000000	                              mov edx, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400c0d1	      0xbeac0e0000	                          mov esi, 0xeac	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400c0d6	      0xbf00000000	                              mov edi, 0	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400c0db	            0x31c0	                            xor eax, eax	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400c0dd	      0xe800000000	                          call 0x400c0e2	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400c0e2	    0x660f1f440000	                    nop word [rax + rax]	      3756	sequencer.c	FUNCTION_96	WHILE_1	IF_5
0x400c0e8	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400c0f0	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       164	strbuf.h	FUNCTION_109
0x400c0fc	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400c102	     0xf8488060000	                            je 0x400c790	       165	strbuf.h	FUNCTION_109	IF_2
0x400c108	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400c10b	      0x807c246b00	                cmp byte [rsp + 0x6b], 0	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400c110	    0x4c8da424c000	                   lea r12, [rsp + 0xc0]	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400c118	            0x741b	                            je 0x400c135	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400c11a	          0x4585ff	                         test r15d, r15d	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400c11d	            0x7416	                            je 0x400c135	      3740	sequencer.c	FUNCTION_96	WHILE_1	IF_3	IF_4
0x400c11f	     0xfbe15000000	           movsx edx, byte [0x0400c126] 	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400c126	      0xbe00000000	                              mov esi, 0	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400c12b	          0x4c89e7	                            mov rdi, r12	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400c12e	            0x31c0	                            xor eax, eax	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400c130	      0xe800000000	                          call 0x400c135	      3741	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_12
0x400c135	    0x4c8bac24f000	            mov r13, qword [rsp + 0xf0] 	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c13d	          0x4889ef	                            mov rdi, rbp	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c140	      0xe800000000	                          call 0x400c145	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c145	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c14a	          0x4889c1	                            mov rcx, rax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c14d	      0xbe00000000	                              mov esi, 0	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c152	          0x4d89e8	                             mov r8, r13	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c155	          0x4c89e7	                            mov rdi, r12	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c158	            0x31c0	                            xor eax, eax	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c15a	      0xe800000000	                          call 0x400c15f	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c15f	      0xe9cff9ffff	                           jmp 0x400bb33	      3742	sequencer.c	FUNCTION_96	WHILE_1	IF_3	CALL_13
0x400c164	    0x4c8ba4248000	            mov r12, qword [rsp + 0x80] 	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c16c	          0x4d85e4	                           test r12, r12	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c16f	     0xf84f5020000	                            je 0x400c46a	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c175	    0x488d84241002	                  lea rax, [rsp + 0x210]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c17d	        0x48890424	                    mov qword [rsp], rax	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c181	    0x488d84244002	                  lea rax, [rsp + 0x240]	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400c189	      0x4889442428	             mov qword [rsp + 0x28], rax	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400c18e	            0x6690	                                     nop	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400c190	        0x498b0424	                    mov rax, qword [r12]	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400c194	        0x4c8b6830	            mov r13, qword [rax + 0x30] 	      3804	sequencer.c	FUNCTION_96	FOR_2
0x400c198	          0x4d85ed	                           test r13, r13	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c19b	          0x4d89ef	                            mov r15, r13	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c19e	            0x7511	                           jne 0x400c1b1	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1a0	            0xeb56	                           jmp 0x400c1f8	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1a2	    0x660f1f440000	                    nop word [rax + rax]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1a8	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1ac	          0x4d85ff	                           test r15, r15	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1af	            0x7447	                            je 0x400c1f8	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1b1	          0x498b07	                    mov rax, qword [r15]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1b4	          0x4c89f7	                            mov rdi, r14	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400c1b7	        0x488d5804	                      lea rbx, [rax + 4]	      3806	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1bb	          0x4889de	                            mov rsi, rbx	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400c1be	      0xe800000000	                          call 0x400c1c3	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400c1c3	            0x85c0	                           test eax, eax	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400c1c5	            0x74e1	                            je 0x400c1a8	      3807	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_10	CALL_35
0x400c1c7	    0x488dbc248001	                  lea rdi, [rsp + 0x180]	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400c1cf	          0x4889de	                            mov rsi, rbx	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400c1d2	      0xe800000000	                          call 0x400c1d7	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400c1d7	            0x85c0	                           test eax, eax	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400c1d9	          0x4889de	                            mov rsi, rbx	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400c1dc	            0x7532	                           jne 0x400c210	      3809	sequencer.c	FUNCTION_96	FOR_2	FOR_3	IF_11	CALL_36
0x400c1de	    0x488dbc248001	                  lea rdi, [rsp + 0x180]	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400c1e6	      0xe800000000	                          call 0x400c1eb	      3810	sequencer.c	FUNCTION_96	FOR_2	FOR_3	CALL_37
0x400c1eb	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1ef	          0x4d85ff	                           test r15, r15	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1f2	            0x75bd	                           jne 0x400c1b1	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1f4	         0xf1f4000	                         nop dword [rax]	      3805	sequencer.c	FUNCTION_96	FOR_2	FOR_3
0x400c1f8	      0x498b542408	                mov rdx, qword [r12 + 8]	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400c1fd	          0x4885d2	                           test rdx, rdx	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400c200	     0xf8448020000	                            je 0x400c44e	      3816	sequencer.c	FUNCTION_96	FOR_2	IF_12
0x400c206	          0x4989d4	                            mov r12, rdx	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c209	            0xeb85	                           jmp 0x400c190	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c20b	       0xf1f440000	                   nop dword [rax + rax]	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c210	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400c218	      0xe800000000	                          call 0x400c21d	      3596	sequencer.c	FUNCTION_95	CALL_1
0x400c21d	          0x4885c0	                           test rax, rax	      3597	sequencer.c	FUNCTION_95	IF_1
0x400c220	            0x7586	                           jne 0x400c1a8	      3597	sequencer.c	FUNCTION_95	IF_1
0x400c222	      0xbf00000000	                              mov edi, 0	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400c227	      0xe800000000	                          call 0x400c22c	      3642	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_12
0x400c22c	        0x488b3c24	                    mov rdi, qword [rsp]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c230	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c238	      0xba00000000	                              mov edx, 0	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c23d	    0x898424980000	             mov dword [rsp + 0x98], eax	       248	hashmap.h	FUNCTION_208
0x400c244	    0x48c784249000	               mov qword [rsp + 0x90], 0	       249	hashmap.h	FUNCTION_208
0x400c250	      0xe800000000	                          call 0x400c255	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c255	          0x4885c0	                           test rax, rax	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400c258	     0xf845c050000	                            je 0x400c7ba	      3641	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400c25e	    0x488b84245002	           mov rax, qword [rsp + 0x250] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400c266	    0x48c784244802	              mov qword [rsp + 0x248], 0	       164	strbuf.h	FUNCTION_109
0x400c272	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400c278	     0xf84c0040000	                            je 0x400c73e	       165	strbuf.h	FUNCTION_109	IF_2
0x400c27e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400c281	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400c286	      0xba0c000000	                            mov edx, 0xc	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400c28b	      0xbe00000000	                              mov esi, 0	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400c290	      0xe800000000	                          call 0x400c295	      3653	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_14
0x400c295	    0x4883bc244002	           cmp qword [rsp + 0x240], 0xc 	       162	strbuf.h	FUNCTION_109	IF_1
0x400c29e	            0x7710	                            ja 0x400c2b0	       162	strbuf.h	FUNCTION_109	IF_1
0x400c2a0	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_109	CALL_1
0x400c2a5	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_109	CALL_1
0x400c2a7	      0xe800000000	                          call 0x400c2ac	       163	strbuf.h	FUNCTION_109	CALL_1
0x400c2ac	         0xf1f4000	                         nop dword [rax]	       163	strbuf.h	FUNCTION_109	CALL_1
0x400c2b0	      0xbd02000000	                              mov ebp, 2	       162	strbuf.h	FUNCTION_109	IF_1
0x400c2b5	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       162	strbuf.h	FUNCTION_109	IF_1
0x400c2ba	        0x4c8b2c24	                    mov r13, qword [rsp]	       162	strbuf.h	FUNCTION_109	IF_1
0x400c2be	            0x89eb	                            mov ebx, ebp	       162	strbuf.h	FUNCTION_109	IF_1
0x400c2c0	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       162	strbuf.h	FUNCTION_109	IF_1
0x400c2c5	      0x4c89642410	             mov qword [rsp + 0x10], r12	       162	strbuf.h	FUNCTION_109	IF_1
0x400c2ca	    0x660f1f440000	                    nop word [rax + rax]	       162	strbuf.h	FUNCTION_109	IF_1
0x400c2d0	    0x488b84245002	           mov rax, qword [rsp + 0x250] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400c2d8	    0x48c784244802	           mov qword [rsp + 0x248], 0xc 	       164	strbuf.h	FUNCTION_109
0x400c2e4	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400c2ea	            0x7464	                            je 0x400c350	       165	strbuf.h	FUNCTION_109	IF_2
0x400c2ec	        0xc6400c00	                 mov byte [rax + 0xc], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400c2f0	            0x89da	                            mov edx, ebx	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400c2f2	      0xbe00000000	                              mov esi, 0	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400c2f7	            0x31c0	                            xor eax, eax	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400c2f9	          0x4889ef	                            mov rdi, rbp	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400c2fc	      0xe800000000	                          call 0x400c301	      3657	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	CALL_16
0x400c301	    0x4c8ba4245002	           mov r12, qword [rsp + 0x250] 	      3659	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_18
0x400c309	          0x4c89e7	                            mov rdi, r12	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400c30c	      0xe800000000	                          call 0x400c311	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400c311	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c319	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c31c	          0x4c89ef	                            mov rdi, r13	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c31f	    0x898424980000	             mov dword [rsp + 0x98], eax	       248	hashmap.h	FUNCTION_208
0x400c326	    0x48c784249000	               mov qword [rsp + 0x90], 0	       249	hashmap.h	FUNCTION_208
0x400c332	      0xe800000000	                          call 0x400c337	       308	hashmap.h	FUNCTION_210	CALL_2
0x400c337	          0x4885c0	                           test rax, rax	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400c33a	            0x7424	                            je 0x400c360	      3658	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2	IF_6	CALL_17
0x400c33c	          0x83c301	                              add ebx, 1	      3655	sequencer.c	FUNCTION_95	ELSE_1	IF_5	FOR_2
0x400c33f	    0x4883bc244002	           cmp qword [rsp + 0x240], 0xc 	       162	strbuf.h	FUNCTION_109	IF_1
0x400c348	            0x7786	                            ja 0x400c2d0	       162	strbuf.h	FUNCTION_109	IF_1
0x400c34a	      0xe951ffffff	                           jmp 0x400c2a0	       162	strbuf.h	FUNCTION_109	IF_1
0x400c34f	              0x90	                                     nop	       162	strbuf.h	FUNCTION_109	IF_1
0x400c350	    0x803d00000000	                cmp byte [0x0400c357], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c357	            0x7497	                            je 0x400c2f0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c359	      0xe96a050000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c35e	            0x6690	                                     nop	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c360	    0x4c8bac245002	           mov r13, qword [rsp + 0x250] 	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400c368	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400c36d	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      3664	sequencer.c	FUNCTION_95	ELSE_1	IF_5
0x400c372	          0x4c89ef	                            mov rdi, r13	      3667	sequencer.c	FUNCTION_95
0x400c375	      0xe800000000	                          call 0x400c37a	      3667	sequencer.c	FUNCTION_95
0x400c37a	        0x4883f8ef	             cmp rax, 0xffffffffffffffef	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c37e	          0x4889c2	                            mov rdx, rax	      3667	sequencer.c	FUNCTION_95
0x400c381	     0xf8771050000	                            ja 0x400c8f8	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c387	     0xf848a050000	                            je 0x400c917	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c38d	        0x488d7011	                   lea rsi, [rax + 0x11]	      3667	sequencer.c	FUNCTION_95
0x400c391	      0xbf01000000	                              mov edi, 1	      3667	sequencer.c	FUNCTION_95
0x400c396	      0x4889442420	             mov qword [rsp + 0x20], rax	      3667	sequencer.c	FUNCTION_95
0x400c39b	      0xe800000000	                          call 0x400c3a0	      3667	sequencer.c	FUNCTION_95
0x400c3a0	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_233	CALL_3
0x400c3a5	        0x488d7810	                   lea rdi, [rax + 0x10]	        53	string3.h	FUNCTION_233	CALL_3
0x400c3a9	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_233	CALL_3
0x400c3ac	      0x4889442410	             mov qword [rsp + 0x10], rax	        53	string3.h	FUNCTION_233	CALL_3
0x400c3b1	      0xe800000000	                          call 0x400c3b6	        53	string3.h	FUNCTION_233	CALL_3
0x400c3b6	          0x4c89ef	                            mov rdi, r13	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400c3b9	      0xe800000000	                          call 0x400c3be	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400c3be	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       248	hashmap.h	FUNCTION_208
0x400c3c3	        0x488b3c24	                    mov rdi, qword [rsp]	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c3c7	        0x41894008	                 mov dword [r8 + 8], eax	       248	hashmap.h	FUNCTION_208
0x400c3cb	    0x49c700000000	                       mov qword [r8], 0	       249	hashmap.h	FUNCTION_208
0x400c3d2	          0x4c89c6	                             mov rsi, r8	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c3d5	      0xe800000000	                          call 0x400c3da	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c3da	          0x4c89ef	                            mov rdi, r13	      3671	sequencer.c	FUNCTION_95
0x400c3dd	      0xe800000000	                          call 0x400c3e2	      3671	sequencer.c	FUNCTION_95
0x400c3e2	        0x4883f8d7	             cmp rax, 0xffffffffffffffd7	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c3e6	          0x4889c2	                            mov rdx, rax	      3671	sequencer.c	FUNCTION_95
0x400c3e9	     0xf87f8040000	                            ja 0x400c8e7	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c3ef	     0xf8422050000	                            je 0x400c917	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400c3f5	        0x488d7229	                   lea rsi, [rdx + 0x29]	      3671	sequencer.c	FUNCTION_95
0x400c3f9	      0xbf01000000	                              mov edi, 1	      3671	sequencer.c	FUNCTION_95
0x400c3fe	      0x4889542420	             mov qword [rsp + 0x20], rdx	      3671	sequencer.c	FUNCTION_95
0x400c403	      0xe800000000	                          call 0x400c408	      3671	sequencer.c	FUNCTION_95
0x400c408	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_233	CALL_3
0x400c40d	        0x488d7828	                   lea rdi, [rax + 0x28]	        53	string3.h	FUNCTION_233	CALL_3
0x400c411	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_233	CALL_3
0x400c414	      0x4889442410	             mov qword [rsp + 0x10], rax	        53	string3.h	FUNCTION_233	CALL_3
0x400c419	      0xe800000000	                          call 0x400c41e	        53	string3.h	FUNCTION_233	CALL_3
0x400c41e	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	        53	string3.h	FUNCTION_233	CALL_3
0x400c423	          0x488b13	                    mov rdx, qword [rbx]	        53	string3.h	FUNCTION_233	CALL_3
0x400c426	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c42e	        0x49895010	              mov qword [r8 + 0x10], rdx	        53	string3.h	FUNCTION_233	CALL_3
0x400c432	        0x488b5308	                mov rdx, qword [rbx + 8]	        53	string3.h	FUNCTION_233	CALL_3
0x400c436	          0x4c89c6	                             mov rsi, r8	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c439	        0x49895018	              mov qword [r8 + 0x18], rdx	        53	string3.h	FUNCTION_233	CALL_3
0x400c43d	          0x8b5310	            mov edx, dword [rbx + 0x10] 	        53	string3.h	FUNCTION_233	CALL_3
0x400c440	        0x41895020	              mov dword [r8 + 0x20], edx	        53	string3.h	FUNCTION_233	CALL_3
0x400c444	      0xe800000000	                          call 0x400c449	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c449	      0xe95afdffff	                           jmp 0x400c1a8	      3673	sequencer.c	FUNCTION_95	CALL_23
0x400c44e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400c453	        0x498b3c24	                    mov rdi, qword [r12]	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400c457	      0xe800000000	                          call 0x400c45c	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400c45c	      0x498b542408	                mov rdx, qword [r12 + 8]	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c461	          0x4885d2	                           test rdx, rdx	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c464	     0xf859f040000	                           jne 0x400c909	      3803	sequencer.c	FUNCTION_96	FOR_2
0x400c46a	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	        97	stdio2.h	CALL_279
0x400c46f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        97	stdio2.h	CALL_279
0x400c474	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400c476	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x400c47b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400c480	      0xe800000000	                          call 0x400c485	        97	stdio2.h	CALL_279
0x400c485	    0x488bac248800	            mov rbp, qword [rsp + 0x88] 	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c48d	          0x4885ed	                           test rbp, rbp	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c490	     0xf84b9010000	                            je 0x400c64f	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c496	      0x4c8b6c2460	            mov r13, qword [rsp + 0x60] 	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c49b	      0x4c8b642408	                mov r12, qword [rsp + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c4a0	            0xeb13	                           jmp 0x400c4b5	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c4a2	    0x660f1f440000	                    nop word [rax + rax]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c4a8	        0x488b6d08	                mov rbp, qword [rbp + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c4ac	          0x4885ed	                           test rbp, rbp	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c4af	     0xf849a010000	                            je 0x400c64f	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c4b5	    0x48c784249000	               mov qword [rsp + 0x90], 0	      3830	sequencer.c	FUNCTION_96	FOR_4
0x400c4c1	        0x488b5d00	                    mov rbx, qword [rbp]	      3832	sequencer.c	FUNCTION_96	FOR_4
0x400c4c5	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400c4cd	        0x4c8d7b04	                      lea r15, [rbx + 4]	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400c4d1	          0x4c89fe	                            mov rsi, r15	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400c4d4	      0xe800000000	                          call 0x400c4d9	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400c4d9	            0x85c0	                           test eax, eax	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400c4db	            0x75cb	                           jne 0x400c4a8	      3833	sequencer.c	FUNCTION_96	FOR_4	IF_13	CALL_40
0x400c4dd	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400c4e5	          0x4c89fe	                            mov rsi, r15	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400c4e8	      0xe800000000	                          call 0x400c4ed	      3835	sequencer.c	FUNCTION_96	FOR_4	CALL_41
0x400c4ed	          0x4885c0	                           test rax, rax	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0x400c4f0	     0xf84b2020000	                            je 0x400c7a8	      3837	sequencer.c	FUNCTION_96	FOR_4	IF_14
0x400c4f6	        0x488d4828	                   lea rcx, [rax + 0x28]	        97	stdio2.h	CALL_279
0x400c4fa	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x400c4ff	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400c504	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_279
0x400c507	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400c509	      0xe800000000	                          call 0x400c50e	        97	stdio2.h	CALL_279
0x400c50e	            0xeb34	                           jmp 0x400c544	        97	stdio2.h	CALL_279
0x400c510	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400c518	          0x4c89fe	                            mov rsi, r15	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400c51b	      0xe800000000	                          call 0x400c520	      3843	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_43
0x400c520	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400c522	            0x752f	                           jne 0x400c553	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400c524	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400c52c	          0x4889df	                            mov rdi, rbx	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400c52f	      0xe800000000	                          call 0x400c534	      3844	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_44
0x400c534	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c538	          0x4885c0	                           test rax, rax	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c53b	            0x744d	                            je 0x400c58a	      3845	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	IF_15
0x400c53d	          0x488b18	                    mov rbx, qword [rax]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400c540	        0x4c8d7b04	                      lea r15, [rbx + 4]	      3849	sequencer.c	FUNCTION_96	FOR_4	WHILE_2
0x400c544	          0x4c89fe	                            mov rsi, r15	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400c547	          0x4c89f7	                            mov rdi, r14	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400c54a	      0xe800000000	                          call 0x400c54f	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400c54f	            0x85c0	                           test eax, eax	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400c551	            0x75bd	                           jne 0x400c510	      3842	sequencer.c	FUNCTION_96	FOR_4	WHILE_2	CALL_42
0x400c553	          0x4885db	                           test rbx, rbx	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0x400c556	            0x7432	                            je 0x400c58a	      3852	sequencer.c	FUNCTION_96	FOR_4	IF_16
0x400c558	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400c560	          0x4c89fe	                            mov rsi, r15	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400c563	      0xe800000000	                          call 0x400c568	      3857	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	CALL_45
0x400c568	          0x4885c0	                           test rax, rax	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c56b	     0xf84ca020000	                            je 0x400c83b	      3859	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c571	        0x4c8d7828	                   lea r15, [rax + 0x28]	      3860	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_17
0x400c575	      0xbf00000000	                              mov edi, 0	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c57a	      0xb905000000	                              mov ecx, 5	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c57f	          0x4c89fe	                            mov rsi, r15	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c582	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c584	     0xf8550010000	                           jne 0x400c6da	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c58a	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	        97	stdio2.h	CALL_279
0x400c58f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x400c594	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400c599	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_279
0x400c59c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400c59e	      0xe800000000	                          call 0x400c5a3	        97	stdio2.h	CALL_279
0x400c5a3	    0x4c8bbc249000	            mov r15, qword [rsp + 0x90] 	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c5ab	          0x4d85ff	                           test r15, r15	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c5ae	     0xf84bc020000	                            je 0x400c870	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c5b4	         0xf1f4000	                         nop dword [rax]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c5b8	          0x498b07	                    mov rax, qword [r15]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c5bb	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400c5c3	        0x488d5804	                      lea rbx, [rax + 4]	      3876	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c5c7	          0x4889de	                            mov rsi, rbx	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400c5ca	      0xe800000000	                          call 0x400c5cf	      3877	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_48
0x400c5cf	          0x4885c0	                           test rax, rax	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0x400c5d2	            0x7418	                            je 0x400c5ec	      3879	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_20
0x400c5d4	        0x488d4828	                   lea rcx, [rax + 0x28]	        97	stdio2.h	CALL_279
0x400c5d8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x400c5dd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400c5e2	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_279
0x400c5e5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400c5e7	      0xe800000000	                          call 0x400c5ec	        97	stdio2.h	CALL_279
0x400c5ec	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400c5f4	          0x4889de	                            mov rsi, rbx	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400c5f7	      0xe800000000	                          call 0x400c5fc	      3881	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_49
0x400c5fc	          0x4885c0	                           test rax, rax	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400c5ff	            0x741b	                            je 0x400c61c	      3882	sequencer.c	FUNCTION_96	FOR_4	FOR_5	IF_21
0x400c601	        0x4c8d4028	                    lea r8, [rax + 0x28]	        97	stdio2.h	CALL_279
0x400c605	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_279
0x400c608	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x400c60d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400c612	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_279
0x400c615	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400c617	      0xe800000000	                          call 0x400c61c	        97	stdio2.h	CALL_279
0x400c61c	    0x488dbc24b001	                  lea rdi, [rsp + 0x1b0]	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400c624	          0x4889de	                            mov rsi, rbx	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400c627	      0xe800000000	                          call 0x400c62c	      3885	sequencer.c	FUNCTION_96	FOR_4	FOR_5	CALL_50
0x400c62c	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c630	          0x4d85ff	                           test r15, r15	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c633	            0x7583	                           jne 0x400c5b8	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c635	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c63d	      0xe800000000	                          call 0x400c642	      3888	sequencer.c	FUNCTION_96	FOR_4	CALL_51
0x400c642	        0x488b6d08	                mov rbp, qword [rbp + 8]	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c646	          0x4885ed	                           test rbp, rbp	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c649	     0xf8566feffff	                           jne 0x400c4b5	      3829	sequencer.c	FUNCTION_96	FOR_4
0x400c64f	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      3891	sequencer.c	FUNCTION_96	CALL_52
0x400c657	      0xe800000000	                          call 0x400c65c	      3891	sequencer.c	FUNCTION_96	CALL_52
0x400c65c	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      3892	sequencer.c	FUNCTION_96	CALL_53
0x400c664	      0xe800000000	                          call 0x400c669	      3892	sequencer.c	FUNCTION_96	CALL_53
0x400c669	    0x488dbc240001	                  lea rdi, [rsp + 0x100]	      3894	sequencer.c	FUNCTION_96	CALL_54
0x400c671	      0xe800000000	                          call 0x400c676	      3894	sequencer.c	FUNCTION_96	CALL_54
0x400c676	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      3895	sequencer.c	FUNCTION_96	CALL_55
0x400c67e	      0xe800000000	                          call 0x400c683	      3895	sequencer.c	FUNCTION_96	CALL_55
0x400c683	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      3896	sequencer.c	FUNCTION_96	CALL_56
0x400c68b	      0xe800000000	                          call 0x400c690	      3896	sequencer.c	FUNCTION_96	CALL_56
0x400c690	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400c698	      0xbe01000000	                              mov esi, 1	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400c69d	      0xe800000000	                          call 0x400c6a2	      3898	sequencer.c	FUNCTION_96	CALL_57
0x400c6a2	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400c6aa	      0xbe01000000	                              mov esi, 1	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400c6af	      0xe800000000	                          call 0x400c6b4	      3899	sequencer.c	FUNCTION_96	CALL_58
0x400c6b4	    0x488dbc241002	                  lea rdi, [rsp + 0x210]	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400c6bc	      0xbe01000000	                              mov esi, 1	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400c6c1	      0xe800000000	                          call 0x400c6c6	      3900	sequencer.c	FUNCTION_96	CALL_59
0x400c6c6	    0x488dbc244002	                  lea rdi, [rsp + 0x240]	      3901	sequencer.c	FUNCTION_96	CALL_60
0x400c6ce	      0xe800000000	                          call 0x400c6d3	      3901	sequencer.c	FUNCTION_96	CALL_60
0x400c6d3	            0x31c0	                            xor eax, eax	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400c6d5	      0xe9edefffff	                           jmp 0x400b6c7	      3947	sequencer.c	FUNCTION_97	CALL_12
0x400c6da	    0x488b8424f000	            mov rax, qword [rsp + 0xf0] 	       165	strbuf.h	FUNCTION_109	IF_2
0x400c6e2	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	       164	strbuf.h	FUNCTION_109
0x400c6ee	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x400c6f4	     0xf84c1010000	                            je 0x400c8bb	       165	strbuf.h	FUNCTION_109	IF_2
0x400c6fa	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400c6fd	    0x488d9424e000	                   lea rdx, [rsp + 0xe0]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400c705	    0x488dbc246002	                  lea rdi, [rsp + 0x260]	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400c70d	          0x4889de	                            mov rsi, rbx	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400c710	      0xe800000000	                          call 0x400c715	      3869	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_8	CALL_47
0x400c715	    0x4c8b8c24f000	              mov r9, qword [rsp + 0xf0]	        97	stdio2.h	CALL_279
0x400c71d	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	        97	stdio2.h	CALL_279
0x400c722	          0x4d89f8	                             mov r8, r15	        97	stdio2.h	CALL_279
0x400c725	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x400c72a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400c72f	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_279
0x400c732	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400c734	      0xe800000000	                          call 0x400c739	        97	stdio2.h	CALL_279
0x400c739	      0xe965feffff	                           jmp 0x400c5a3	        97	stdio2.h	CALL_279
0x400c73e	    0x803d00000000	                cmp byte [0x0400c745], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c745	     0xf8436fbffff	                            je 0x400c281	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c74b	      0xe978010000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c750	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400c755	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400c75a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400c75c	      0xe800000000	                          call 0x400c761	        54	gettext.h	FUNCTION_164
0x400c761	          0x4889c7	                            mov rdi, rax	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400c764	            0x31c0	                            xor eax, eax	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400c766	      0xe800000000	                          call 0x400c76b	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400c76b	      0xb8ffffffff	                     mov eax, 0xffffffff	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400c770	      0xe952efffff	                           jmp 0x400b6c7	      3944	sequencer.c	FUNCTION_97	CALL_11
0x400c775	    0x803d00000000	                cmp byte [0x0400c77c], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c77c	     0xf84faf5ffff	                            je 0x400bd7c	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c782	      0xe941010000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c787	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c790	    0x803d00000000	                cmp byte [0x0400c797], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c797	     0xf846ef9ffff	                            je 0x400c10b	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c79d	      0xe926010000	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c7a2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c7a8	          0x4c89e6	                            mov rsi, r12	        97	stdio2.h	CALL_279
0x400c7ab	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_279
0x400c7b0	      0xe800000000	                          call 0x400c7b5	        97	stdio2.h	CALL_279
0x400c7b5	      0xe98afdffff	                           jmp 0x400c544	        97	stdio2.h	CALL_279
0x400c7ba	      0xbe1d000000	                           mov esi, 0x1d	      3667	sequencer.c	FUNCTION_95
0x400c7bf	      0xbf01000000	                              mov edi, 1	      3667	sequencer.c	FUNCTION_95
0x400c7c4	      0xe800000000	                          call 0x400c7c9	      3667	sequencer.c	FUNCTION_95
0x400c7c9	          0x4989c5	                            mov r13, rax	      3667	sequencer.c	FUNCTION_95
0x400c7cc	    0x48b86272616e	          movabs rax, 0x702d68636e617262	        53	string3.h	FUNCTION_233	CALL_3
0x400c7d6	      0xbf00000000	                              mov edi, 0	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400c7db	        0x49894510	             mov qword [r13 + 0x10], rax	        53	string3.h	FUNCTION_233	CALL_3
0x400c7df	    0x41c745186f69	     mov dword [r13 + 0x18], 0x746e696f 	        53	string3.h	FUNCTION_233	CALL_3
0x400c7e7	      0xe800000000	                          call 0x400c7ec	      3668	sequencer.c	FUNCTION_95	CALL_20
0x400c7ec	        0x488b3c24	                    mov rdi, qword [rsp]	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c7f0	        0x41894508	                mov dword [r13 + 8], eax	       248	hashmap.h	FUNCTION_208
0x400c7f4	          0x4c89ee	                            mov rsi, r13	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c7f7	    0x49c745000000	                      mov qword [r13], 0	       249	hashmap.h	FUNCTION_208
0x400c7ff	    0x41bd00000000	                             mov r13d, 0	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c805	      0xe800000000	                          call 0x400c80a	      3669	sequencer.c	FUNCTION_95	CALL_21
0x400c80a	      0xba0c000000	                            mov edx, 0xc	      3671	sequencer.c	FUNCTION_95
0x400c80f	      0xe9e1fbffff	                           jmp 0x400c3f5	      3671	sequencer.c	FUNCTION_95
0x400c814	    0x488db4240003	                  lea rsi, [rsp + 0x300]	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400c81c	          0x4c89ef	                            mov rdi, r13	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400c81f	      0x4889442428	             mov qword [rsp + 0x28], rax	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400c824	      0xe800000000	                          call 0x400c829	      3640	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_11
0x400c829	            0x85c0	                           test eax, eax	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400c82b	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400c830	     0xf8423f5ffff	                            je 0x400bd59	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400c836	      0xe9d8f4ffff	                           jmp 0x400bd13	      3639	sequencer.c	FUNCTION_95	ELSE_1	IF_5	CALL_10
0x400c83b	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400c83f	            0x85c0	                           test eax, eax	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400c841	     0xf8543fdffff	                           jne 0x400c58a	      3861	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18
0x400c847	    0x488db424e001	                  lea rsi, [rsp + 0x1e0]	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400c84f	          0x4c89ff	                            mov rdi, r15	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400c852	      0xe8e968ffff	         call sym.label_oid.constprop.26	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400c857	          0x4885c0	                           test rax, rax	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c85a	          0x4989c7	                            mov r15, rax	      3862	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	ELSE_7	IF_18	CALL_46
0x400c85d	     0xf8512fdffff	                           jne 0x400c575	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c863	      0xe922fdffff	                           jmp 0x400c58a	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c868	     0xf1f84000000	                   nop dword [rax + rax]	      3865	sequencer.c	FUNCTION_96	FOR_4	ELSE_6	IF_19
0x400c870	            0x31ff	                            xor edi, edi	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c872	      0xe9c6fdffff	                           jmp 0x400c63d	      3875	sequencer.c	FUNCTION_96	FOR_4	FOR_5
0x400c877	          0x488b18	                    mov rbx, qword [rax]	      3707	sequencer.c	FUNCTION_96	IF_1
0x400c87a	      0xbe2d000000	                           mov esi, 0x2d	      3708	sequencer.c	FUNCTION_96	IF_1
0x400c87f	      0xbf01000000	                              mov edi, 1	      3708	sequencer.c	FUNCTION_96	IF_1
0x400c884	      0xe800000000	                          call 0x400c889	      3708	sequencer.c	FUNCTION_96	IF_1
0x400c889	    0xc740286f6e74	     mov dword [rax + 0x28], 0x6f746e6f 	        53	string3.h	FUNCTION_233	CALL_3
0x400c890	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400c898	        0x488b7304	                mov rsi, qword [rbx + 4]	        53	string3.h	FUNCTION_233	CALL_3
0x400c89c	        0x48897010	             mov qword [rax + 0x10], rsi	        53	string3.h	FUNCTION_233	CALL_3
0x400c8a0	        0x488b730c	              mov rsi, qword [rbx + 0xc]	        53	string3.h	FUNCTION_233	CALL_3
0x400c8a4	        0x48897018	             mov qword [rax + 0x18], rsi	        53	string3.h	FUNCTION_233	CALL_3
0x400c8a8	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	        53	string3.h	FUNCTION_233	CALL_3
0x400c8ab	          0x4889c6	                            mov rsi, rax	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400c8ae	          0x894820	             mov dword [rax + 0x20], ecx	        53	string3.h	FUNCTION_233	CALL_3
0x400c8b1	      0xe800000000	                          call 0x400c8b6	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400c8b6	      0xe9d5efffff	                           jmp 0x400b890	      3710	sequencer.c	FUNCTION_96	IF_1	CALL_6
0x400c8bb	    0x803d00000000	                cmp byte [0x0400c8c2], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c8c2	     0xf8435feffff	                            je 0x400c6fd	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c8c8	      0xe800000000	                          call 0x400c8cd	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c8cd	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c8d0	    0x803d00000000	                cmp byte [0x0400c8d7], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c8d7	     0xf84c6f5ffff	                            je 0x400bea3	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c8dd	            0xebe9	                           jmp 0x400c8c8	       168	strbuf.h	FUNCTION_109	CALL_2
0x400c8df	      0xe800000000	                          call 0x400c8e4	      3965	sequencer.c	FUNCTION_97
0x400c8e4	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c8e7	      0xbe28000000	                           mov esi, 0x28	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c8ec	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c8f1	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c8f3	      0xe800000000	                          call 0x400c8f8	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c8f8	      0xbe10000000	                           mov esi, 0x10	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c8fd	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c902	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c904	      0xe800000000	                          call 0x400c909	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c909	        0x4883c008	                              add rax, 8	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400c90d	      0x4889442418	             mov qword [rsp + 0x18], rax	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400c912	      0xe9eff8ffff	                           jmp 0x400c206	      3817	sequencer.c	FUNCTION_96	FOR_2	IF_12	CALL_39
0x400c917	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c91c	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c923	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c928	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400c92a	      0xe800000000	                          call 0x400c92f	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
sequencer_pick_revisions	functions,0:SWITCH,0:ELSE,1:WHILE,0:DO,0:IF,11:CALL,24:FOR,1	575
0x400aa40	            0x4157	                                push r15	      3434	sequencer.c	FUNCTION_92
0x400aa42	            0x4156	                                push r14	      3434	sequencer.c	FUNCTION_92
0x400aa44	      0xb90b000000	                            mov ecx, 0xb	      3435	sequencer.c	FUNCTION_92
0x400aa49	            0x4155	                                push r13	      3434	sequencer.c	FUNCTION_92
0x400aa4b	            0x4154	                                push r12	      3434	sequencer.c	FUNCTION_92
0x400aa4d	              0x55	                                push rbp	      3434	sequencer.c	FUNCTION_92
0x400aa4e	              0x53	                                push rbx	      3434	sequencer.c	FUNCTION_92
0x400aa4f	          0x4889fd	                            mov rbp, rdi	      3434	sequencer.c	FUNCTION_92
0x400aa52	    0x4881ecc80000	                           sub rsp, 0xc8	      3434	sequencer.c	FUNCTION_92
0x400aa59	    0x64488b042528	                mov rax, qword fs:[0x28]	      3434	sequencer.c	FUNCTION_92
0x400aa62	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      3434	sequencer.c	FUNCTION_92
0x400aa6a	            0x31c0	                            xor eax, eax	      3434	sequencer.c	FUNCTION_92
0x400aa6c	    0x4883bd800000	               cmp qword [rbp + 0x80], 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400aa74	      0x4c8d6c2440	                   lea r13, [rsp + 0x40]	      3435	sequencer.c	FUNCTION_92
0x400aa79	          0x4c89ef	                            mov rdi, r13	      3435	sequencer.c	FUNCTION_92
0x400aa7c	          0xf348ab	              rep stosq qword [rdi], rax	      3435	sequencer.c	FUNCTION_92
0x400aa7f	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3435	sequencer.c	FUNCTION_92
0x400aa88	     0xf8412090000	                            je 0x400b3a0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400aa8e	          0x4889ef	                            mov rdi, rbp	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400aa91	      0xe87a80ffff	         call sym.read_and_refresh_cache	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400aa96	            0x85c0	                           test eax, eax	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400aa98	     0xf8542040000	                           jne 0x400aee0	      3440	sequencer.c	FUNCTION_92	IF_1	CALL_2
0x400aa9e	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aaa5	        0x448b5008	               mov r10d, dword [rax + 8]	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aaa9	          0x4889c7	                            mov rdi, rax	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aaac	          0x4585d2	                         test r10d, r10d	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aaaf	            0x746f	                            je 0x400ab20	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aab1	            0x31db	                            xor ebx, ebx	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aab3	          0x4531e4	                          xor r12d, r12d	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aab6	            0xeb19	                           jmp 0x400aad1	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aab8	     0xf1f84000000	                   nop dword [rax + rax]	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aac0	        0x4183c401	                             add r12d, 1	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aac4	        0x4883c320	                           add rbx, 0x20	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aac8	        0x44396008	               cmp dword [rax + 8], r12d	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aacc	          0x4889c7	                            mov rdi, rax	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aacf	            0x764f	                           jbe 0x400ab20	      3443	sequencer.c	FUNCTION_92	FOR_1
0x400aad1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400aad5	      0x4c8b741a08	         mov r14, qword [rdx + rbx + 8] 	      3445	sequencer.c	FUNCTION_92	FOR_1
0x400aada	        0x41803e00	                       cmp byte [r14], 0	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x400aade	            0x74e0	                            je 0x400aac0	      3448	sequencer.c	FUNCTION_92	FOR_1	IF_2	CALL_3
0x400aae0	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400aae8	          0x4c89f7	                            mov rdi, r14	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400aaeb	      0xe800000000	                          call 0x400aaf0	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400aaf0	            0x85c0	                           test eax, eax	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400aaf2	     0xf8591040000	                           jne 0x400af89	      3451	sequencer.c	FUNCTION_92	FOR_1	IF_3	CALL_4
0x400aaf8	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400ab00	      0xbe01000000	                              mov esi, 1	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400ab05	      0xe800000000	                          call 0x400ab0a	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400ab0a	          0x4885c0	                           test rax, rax	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400ab0d	     0xf8499040000	                            je 0x400afac	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400ab13	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400ab1a	            0xeba4	                           jmp 0x400aac0	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400ab1c	         0xf1f4000	                         nop dword [rax]	      3452	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_5
0x400ab20	        0x83782801	               cmp dword [rax + 0x28], 1	      3470	sequencer.c	FUNCTION_92	IF_5
0x400ab24	     0xf84e6030000	                            je 0x400af10	      3470	sequencer.c	FUNCTION_92	IF_5
0x400ab2a	          0x8b4d00	                    mov ecx, dword [rbp]	      2165	sequencer.c	FUNCTION_65
0x400ab2d	            0x31d2	                            xor edx, edx	      2165	sequencer.c	FUNCTION_65
0x400ab2f	          0x83f901	                              cmp ecx, 1	      2165	sequencer.c	FUNCTION_65
0x400ab32	           0xf95c2	                                setne dl	      2165	sequencer.c	FUNCTION_65
0x400ab35	          0x4989d6	                            mov r14, rdx	      2165	sequencer.c	FUNCTION_65
0x400ab38	        0x48c1e204	                              shl rdx, 4	      2167	sequencer.c	FUNCTION_65
0x400ab3c	          0x83f901	                              cmp ecx, 1	      1735	sequencer.c	FUNCTION_49	IF_1
0x400ab3f	    0x488bb2000000	                    mov rsi, qword [rdx]	      2167	sequencer.c	FUNCTION_65
0x400ab46	      0x4889742408	                mov qword [rsp + 8], rsi	      2167	sequencer.c	FUNCTION_65
0x400ab4b	     0xf8408040000	                            je 0x400af59	      1735	sequencer.c	FUNCTION_49	IF_1
0x400ab51	      0xe800000000	                          call 0x400ab56	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x400ab56	            0x85c0	                           test eax, eax	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x400ab58	     0xf85b5060000	                           jne 0x400b213	      1738	sequencer.c	FUNCTION_49	IF_2	CALL_1
0x400ab5e	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      1741	sequencer.c	FUNCTION_49	IF_3
0x400ab65	        0x48833f00	                      cmp qword [rdi], 0	      1741	sequencer.c	FUNCTION_49	IF_3
0x400ab69	     0xf85f0000000	                           jne 0x400ac5f	      1741	sequencer.c	FUNCTION_49	IF_3
0x400ab6f	      0xe9c4070000	                           jmp 0x400b338	      1741	sequencer.c	FUNCTION_49	IF_3
0x400ab74	         0xf1f4000	                         nop dword [rax]	      1741	sequencer.c	FUNCTION_49	IF_3
0x400ab78	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1798	sequencer.c	FUNCTION_52
0x400ab7c	            0x89c2	                            mov edx, eax	      1798	sequencer.c	FUNCTION_52
0x400ab7e	          0xc1ea1f	                           shr edx, 0x1f	      1798	sequencer.c	FUNCTION_52
0x400ab81	             0x1c2	                            add edx, eax	      1798	sequencer.c	FUNCTION_52
0x400ab83	          0x8d4101	                      lea eax, [rcx + 1]	      1798	sequencer.c	FUNCTION_52
0x400ab86	            0xd1fa	                              sar edx, 1	      1798	sequencer.c	FUNCTION_52
0x400ab88	            0x39d1	                            cmp ecx, edx	      1798	sequencer.c	FUNCTION_52
0x400ab8a	           0xf4dd0	                         cmovge edx, eax	      1798	sequencer.c	FUNCTION_52
0x400ab8d	    0x48b855555555	           movabs rax, 0x555555555555555	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400ab97	        0x89542464	             mov dword [rsp + 0x64], edx	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400ab9b	          0x4863d2	                         movsxd rdx, edx	      1798	sequencer.c	FUNCTION_52
0x400ab9e	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400aba1	     0xf87aa070000	                            ja 0x400b351	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400aba7	        0x488d3452	                  lea rsi, [rdx + rdx*2]	      1798	sequencer.c	FUNCTION_52
0x400abab	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1798	sequencer.c	FUNCTION_52
0x400abb0	        0x48c1e604	                              shl rsi, 4	      1798	sequencer.c	FUNCTION_52
0x400abb4	      0xe800000000	                          call 0x400abb9	      1798	sequencer.c	FUNCTION_52
0x400abb9	      0x48634c2460	         movsxd rcx, dword [rsp + 0x60] 	      1798	sequencer.c	FUNCTION_52
0x400abbe	      0x4889442458	             mov qword [rsp + 0x58], rax	      1798	sequencer.c	FUNCTION_52
0x400abc3	        0x4c8d2449	                  lea r12, [rcx + rcx*2]	      1799	sequencer.c	FUNCTION_52
0x400abc7	          0x8d5101	                      lea edx, [rcx + 1]	      1799	sequencer.c	FUNCTION_52
0x400abca	            0x31f6	                            xor esi, esi	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x400abcc	          0x4889df	                            mov rdi, rbx	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x400abcf	        0x49c1e404	                              shl r12, 4	      1799	sequencer.c	FUNCTION_52
0x400abd3	        0x89542460	             mov dword [rsp + 0x60], edx	      1799	sequencer.c	FUNCTION_52
0x400abd7	          0x4901c4	                            add r12, rax	      1799	sequencer.c	FUNCTION_52
0x400abda	      0xe800000000	                          call 0x400abdf	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x400abdf	          0x4989c7	                            mov r15, rax	      2175	sequencer.c	FUNCTION_65	WHILE_1	CALL_4
0x400abe2	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x400abe7	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x400abec	        0x45893424	                   mov dword [r12], r14d	      2179	sequencer.c	FUNCTION_65	WHILE_1
0x400abf0	      0x49895c2408	                mov qword [r12 + 8], rbx	      2180	sequencer.c	FUNCTION_65	WHILE_1
0x400abf5	          0x4c89ff	                            mov rdi, r15	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x400abf8	    0x49c744241800	               mov qword [r12 + 0x18], 0	      2181	sequencer.c	FUNCTION_65	WHILE_1
0x400ac01	    0x41c744242000	               mov dword [r12 + 0x20], 0	      2182	sequencer.c	FUNCTION_65	WHILE_1
0x400ac0a	      0x4989442428	             mov qword [r12 + 0x28], rax	      2183	sequencer.c	FUNCTION_65	WHILE_1
0x400ac0f	      0xe800000000	                          call 0x400ac14	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x400ac14	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac19	    0x8b3500000000	            mov esi, dword [0x0400ac1f] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x400ac1f	        0x488d7b04	                      lea rdi, [rbx + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x400ac23	          0x4189c4	                           mov r12d, eax	      2184	sequencer.c	FUNCTION_65	WHILE_1	CALL_5
0x400ac26	        0x4c890c24	                     mov qword [rsp], r9	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac2a	      0xe800000000	                          call 0x400ac2f	       312	sequencer.c	FUNCTION_10	CALL_1
0x400ac2f	        0x4c8b0c24	                     mov r9, qword [rsp]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac33	      0x488b542408	                mov rdx, qword [rsp + 8]	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac38	          0x4889c1	                            mov rcx, rax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac3b	          0x4589e0	                           mov r8d, r12d	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac3e	      0xbe00000000	                              mov esi, 0	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac43	          0x4c89ef	                            mov rdi, r13	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac46	            0x31c0	                            xor eax, eax	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac48	      0xe800000000	                          call 0x400ac4d	      2185	sequencer.c	FUNCTION_65	WHILE_1	CALL_6
0x400ac4d	          0x4889df	                            mov rdi, rbx	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x400ac50	          0x4c89fe	                            mov rsi, r15	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x400ac53	      0xe800000000	                          call 0x400ac58	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x400ac58	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      2187	sequencer.c	FUNCTION_65	WHILE_1	CALL_8
0x400ac5f	      0xe800000000	                          call 0x400ac64	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x400ac64	          0x4885c0	                           test rax, rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x400ac67	          0x4889c3	                            mov rbx, rax	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x400ac6a	            0x7424	                            je 0x400ac90	      2173	sequencer.c	FUNCTION_65	WHILE_1	CALL_2
0x400ac6c	      0x48634c2460	         movsxd rcx, dword [rsp + 0x60] 	      1798	sequencer.c	FUNCTION_52
0x400ac71	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      1798	sequencer.c	FUNCTION_52
0x400ac75	            0x39c1	                            cmp ecx, eax	      1798	sequencer.c	FUNCTION_52
0x400ac77	     0xf8dfbfeffff	                           jge 0x400ab78	      1798	sequencer.c	FUNCTION_52
0x400ac7d	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1798	sequencer.c	FUNCTION_52
0x400ac82	      0xe93cffffff	                           jmp 0x400abc3	      1798	sequencer.c	FUNCTION_52
0x400ac87	    0x660f1f840000	                    nop word [rax + rax]	      1798	sequencer.c	FUNCTION_52
0x400ac90	    0x488b3d000000	            mov rdi, qword [0x0400ac97] 	        38	sequencer.c	CALL_2
0x400ac97	          0x4885ff	                           test rdi, rdi	        38	sequencer.c	CALL_2
0x400ac9a	     0xf84c3040000	                            je 0x400b163	        38	sequencer.c	CALL_2
0x400aca0	      0xe800000000	                          call 0x400aca5	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x400aca5	            0x85c0	                           test eax, eax	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x400aca7	     0xf8598050000	                           jne 0x400b245	      2194	sequencer.c	FUNCTION_66	IF_1	CALL_2
0x400acad	    0x488b1d000000	            mov rbx, qword [0x0400acb4] 	        38	sequencer.c	CALL_2
0x400acb4	          0x4885db	                           test rbx, rbx	        38	sequencer.c	CALL_2
0x400acb7	     0xf848b040000	                            je 0x400b148	        38	sequencer.c	CALL_2
0x400acbd	      0xbeff010000	                          mov esi, 0x1ff	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x400acc2	          0x4889df	                            mov rdi, rbx	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x400acc5	      0xe800000000	                          call 0x400acca	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x400acca	            0x85c0	                           test eax, eax	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x400accc	     0xf8850050000	                            js 0x400b222	      2198	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_6
0x400acd2	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400acda	      0xbf00000000	                              mov edi, 0	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400acdf	      0xe800000000	                          call 0x400ace4	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400ace4	            0x85c0	                           test eax, eax	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400ace6	            0x740d	                            je 0x400acf5	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400ace8	        0x448b4500	                    mov r8d, dword [rbp]	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400acec	          0x4585c0	                           test r8d, r8d	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400acef	     0xf84ca010000	                            je 0x400aebf	      3492	sequencer.c	FUNCTION_92	IF_9	CALL_17
0x400acf5	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400acfd	      0xe800000000	                          call 0x400ad02	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400ad02	    0x488b35000000	            mov rsi, qword [0x0400ad09] 	        42	sequencer.c	CALL_5
0x400ad09	          0x4989c4	                            mov r12, rax	      3494	sequencer.c	FUNCTION_92	IF_10	CALL_20
0x400ad0c	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2206	sequencer.c	FUNCTION_67
0x400ad15	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2207	sequencer.c	FUNCTION_67
0x400ad1e	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2207	sequencer.c	FUNCTION_67
0x400ad27	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2207	sequencer.c	FUNCTION_67
0x400ad30	          0x4885f6	                           test rsi, rsi	        42	sequencer.c	CALL_5
0x400ad33	     0xf84b7030000	                            je 0x400b0f0	        42	sequencer.c	CALL_5
0x400ad39	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       175	lockfile.h	FUNCTION_193	CALL_1
0x400ad3e	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_193	CALL_1
0x400ad40	            0x31d2	                            xor edx, edx	       175	lockfile.h	FUNCTION_193	CALL_1
0x400ad42	      0xe800000000	                          call 0x400ad47	       175	lockfile.h	FUNCTION_193	CALL_1
0x400ad47	            0x85c0	                           test eax, eax	      2212	sequencer.c	FUNCTION_67	IF_1
0x400ad49	            0x89c3	                            mov ebx, eax	       175	lockfile.h	FUNCTION_193	CALL_1
0x400ad4b	     0xf882f050000	                            js 0x400b280	      2212	sequencer.c	FUNCTION_67	IF_1
0x400ad51	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2214	sequencer.c	FUNCTION_67	CALL_4
0x400ad56	            0x31c0	                            xor eax, eax	      2214	sequencer.c	FUNCTION_67	CALL_4
0x400ad58	          0x4c89e2	                            mov rdx, r12	      2214	sequencer.c	FUNCTION_67	CALL_4
0x400ad5b	      0xbe00000000	                              mov esi, 0	      2214	sequencer.c	FUNCTION_67	CALL_4
0x400ad60	      0xe800000000	                          call 0x400ad65	      2214	sequencer.c	FUNCTION_67	CALL_4
0x400ad65	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2215	sequencer.c	FUNCTION_67	CALL_5
0x400ad6a	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2215	sequencer.c	FUNCTION_67	CALL_5
0x400ad6f	            0x89df	                            mov edi, ebx	      2215	sequencer.c	FUNCTION_67	CALL_5
0x400ad71	      0xe800000000	                          call 0x400ad76	      2215	sequencer.c	FUNCTION_67	CALL_5
0x400ad76	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2216	sequencer.c	FUNCTION_67	CALL_6
0x400ad7b	          0x4889c3	                            mov rbx, rax	      2215	sequencer.c	FUNCTION_67	CALL_5
0x400ad7e	      0xe800000000	                          call 0x400ad83	      2216	sequencer.c	FUNCTION_67	CALL_6
0x400ad83	          0x4885db	                           test rbx, rbx	      2217	sequencer.c	FUNCTION_67	IF_2
0x400ad86	     0xf887f030000	                            js 0x400b10b	      2217	sequencer.c	FUNCTION_67	IF_2
0x400ad8c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x400ad91	      0xe800000000	                          call 0x400ad96	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x400ad96	            0x85c0	                           test eax, eax	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x400ad98	     0xf8802050000	                            js 0x400b2a0	      2222	sequencer.c	FUNCTION_67	IF_3	CALL_10
0x400ad9e	    0x4c8b35000000	            mov r14, qword [0x0400ada5] 	        41	sequencer.c	CALL_4
0x400ada5	          0x4d85f6	                           test r14, r14	        41	sequencer.c	CALL_4
0x400ada8	     0xf84d0030000	                            je 0x400b17e	        41	sequencer.c	CALL_4
0x400adae	          0x8b7d0c	              mov edi, dword [rbp + 0xc]	      2371	sequencer.c	FUNCTION_73	IF_1
0x400adb1	          0x4531e4	                          xor r12d, r12d	      2369	sequencer.c	FUNCTION_73
0x400adb4	            0x85ff	                           test edi, edi	      2371	sequencer.c	FUNCTION_73	IF_1
0x400adb6	     0xf85ee020000	                           jne 0x400b0aa	      2371	sequencer.c	FUNCTION_73	IF_1
0x400adbc	          0x8b7504	                mov esi, dword [rbp + 4]	      2373	sequencer.c	FUNCTION_73	IF_2
0x400adbf	            0x85f6	                           test esi, esi	      2373	sequencer.c	FUNCTION_73	IF_2
0x400adc1	     0xf85c9020000	                           jne 0x400b090	      2373	sequencer.c	FUNCTION_73	IF_2
0x400adc7	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      2375	sequencer.c	FUNCTION_73	IF_3
0x400adca	            0x85c9	                           test ecx, ecx	      2375	sequencer.c	FUNCTION_73	IF_3
0x400adcc	     0xf85a4020000	                           jne 0x400b076	      2375	sequencer.c	FUNCTION_73	IF_3
0x400add2	          0x8b5508	                mov edx, dword [rbp + 8]	      2377	sequencer.c	FUNCTION_73	IF_4
0x400add5	            0x85d2	                           test edx, edx	      2377	sequencer.c	FUNCTION_73	IF_4
0x400add7	     0xf857f020000	                           jne 0x400b05c	      2377	sequencer.c	FUNCTION_73	IF_4
0x400addd	          0x8b4514	            mov eax, dword [rbp + 0x14] 	      2379	sequencer.c	FUNCTION_73	IF_5
0x400ade0	            0x85c0	                           test eax, eax	      2379	sequencer.c	FUNCTION_73	IF_5
0x400ade2	     0xf855a020000	                           jne 0x400b042	      2379	sequencer.c	FUNCTION_73	IF_5
0x400ade8	          0x8b552c	            mov edx, dword [rbp + 0x2c] 	      2381	sequencer.c	FUNCTION_73	IF_6
0x400adeb	            0x85d2	                           test edx, edx	      2381	sequencer.c	FUNCTION_73	IF_6
0x400aded	     0xf85ff010000	                           jne 0x400aff2	      2381	sequencer.c	FUNCTION_73	IF_6
0x400adf3	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	      2387	sequencer.c	FUNCTION_73	IF_7
0x400adf7	          0x4885d2	                           test rdx, rdx	      2387	sequencer.c	FUNCTION_73	IF_7
0x400adfa	            0x7410	                            je 0x400ae0c	      2387	sequencer.c	FUNCTION_73	IF_7
0x400adfc	      0xbe00000000	                              mov esi, 0	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400ae01	          0x4c89f7	                            mov rdi, r14	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400ae04	      0xe800000000	                          call 0x400ae09	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400ae09	          0x4109c4	                            or r12d, eax	      2388	sequencer.c	FUNCTION_73	CALL_10
0x400ae0c	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      2389	sequencer.c	FUNCTION_73	IF_8
0x400ae10	          0x4885d2	                           test rdx, rdx	      2389	sequencer.c	FUNCTION_73	IF_8
0x400ae13	            0x7410	                            je 0x400ae25	      2389	sequencer.c	FUNCTION_73	IF_8
0x400ae15	      0xbe00000000	                              mov esi, 0	      2390	sequencer.c	FUNCTION_73	CALL_11
0x400ae1a	          0x4c89f7	                            mov rdi, r14	      2390	sequencer.c	FUNCTION_73	CALL_11
0x400ae1d	      0xe800000000	                          call 0x400ae22	      2390	sequencer.c	FUNCTION_73	CALL_11
0x400ae22	          0x4109c4	                            or r12d, eax	      2390	sequencer.c	FUNCTION_73	CALL_11
0x400ae25	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      2391	sequencer.c	FUNCTION_73	IF_9
0x400ae29	          0x4885c0	                           test rax, rax	      2391	sequencer.c	FUNCTION_73	IF_9
0x400ae2c	            0x743c	                            je 0x400ae6a	      2391	sequencer.c	FUNCTION_73	IF_9
0x400ae2e	      0x48837d5000	               cmp qword [rbp + 0x50], 0	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400ae33	            0x7435	                            je 0x400ae6a	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400ae35	            0x31db	                            xor ebx, ebx	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400ae37	            0xeb0b	                           jmp 0x400ae44	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400ae39	     0xf1f80000000	                         nop dword [rax]	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400ae40	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400ae44	        0x488b14d8	            mov rdx, qword [rax + rbx*8]	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400ae48	          0x4531c0	                            xor r8d, r8d	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400ae4b	      0xb900000000	                              mov ecx, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400ae50	      0xbe00000000	                              mov esi, 0	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400ae55	          0x4c89f7	                            mov rdi, r14	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400ae58	        0x4883c301	                              add rbx, 1	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400ae5c	      0xe800000000	                          call 0x400ae61	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400ae61	          0x4109c4	                            or r12d, eax	      2394	sequencer.c	FUNCTION_73	IF_9	FOR_1	CALL_12
0x400ae64	        0x48395d50	            cmp qword [rbp + 0x50], rbx 	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400ae68	            0x77d6	                            ja 0x400ae40	      2393	sequencer.c	FUNCTION_73	IF_9	FOR_1
0x400ae6a	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      2398	sequencer.c	FUNCTION_73	IF_10
0x400ae6d	            0x85c0	                           test eax, eax	      2398	sequencer.c	FUNCTION_73	IF_10
0x400ae6f	            0x7421	                            je 0x400ae92	      2398	sequencer.c	FUNCTION_73	IF_10
0x400ae71	          0x83f801	                              cmp eax, 1	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400ae74	      0xba00000000	                              mov edx, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400ae79	      0xb800000000	                              mov eax, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400ae7e	        0x480f45d0	                         cmovne rdx, rax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400ae82	      0xbe00000000	                              mov esi, 0	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400ae87	          0x4c89f7	                            mov rdi, r14	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400ae8a	      0xe800000000	                          call 0x400ae8f	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400ae8f	          0x4109c4	                            or r12d, eax	      2399	sequencer.c	FUNCTION_73	IF_10	CALL_13
0x400ae92	          0x4585e4	                         test r12d, r12d	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400ae95	            0x7549	                           jne 0x400aee0	      3496	sequencer.c	FUNCTION_92	IF_11	CALL_21
0x400ae97	      0xe89453ffff	       call sym.update_abort_safety_file	      3498	sequencer.c	FUNCTION_92	CALL_22
0x400ae9c	          0x4889ee	                            mov rsi, rbp	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400ae9f	          0x4c89ef	                            mov rdi, r13	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400aea2	      0xe879bfffff	                   call sym.pick_commits	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400aea7	          0x4c89ef	                            mov rdi, r13	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400aeaa	            0x89c3	                            mov ebx, eax	      3499	sequencer.c	FUNCTION_92	CALL_23
0x400aeac	      0xe800000000	                          call 0x400aeb1	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400aeb1	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1792	sequencer.c	FUNCTION_51
0x400aeb6	      0xe800000000	                          call 0x400aebb	      1792	sequencer.c	FUNCTION_51
0x400aebb	            0x89d8	                            mov eax, ebx	      3501	sequencer.c	FUNCTION_92
0x400aebd	            0xeb26	                           jmp 0x400aee5	      3501	sequencer.c	FUNCTION_92
0x400aebf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400aec4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400aec9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400aecb	      0xe800000000	                          call 0x400aed0	        54	gettext.h	FUNCTION_164
0x400aed0	          0x4889c7	                            mov rdi, rax	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400aed3	            0x31c0	                            xor eax, eax	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400aed5	      0xe800000000	                          call 0x400aeda	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400aeda	    0x660f1f440000	                    nop word [rax + rax]	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400aee0	      0xb8ffffffff	                     mov eax, 0xffffffff	      3493	sequencer.c	FUNCTION_92	CALL_18
0x400aee5	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      3502	sequencer.c	FUNCTION_92
0x400aeed	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3502	sequencer.c	FUNCTION_92
0x400aef6	     0xf8566040000	                           jne 0x400b362	      3502	sequencer.c	FUNCTION_92
0x400aefc	    0x4881c4c80000	                           add rsp, 0xc8	      3502	sequencer.c	FUNCTION_92
0x400af03	              0x5b	                                 pop rbx	      3502	sequencer.c	FUNCTION_92
0x400af04	              0x5d	                                 pop rbp	      3502	sequencer.c	FUNCTION_92
0x400af05	            0x415c	                                 pop r12	      3502	sequencer.c	FUNCTION_92
0x400af07	            0x415d	                                 pop r13	      3502	sequencer.c	FUNCTION_92
0x400af09	            0x415e	                                 pop r14	      3502	sequencer.c	FUNCTION_92
0x400af0b	            0x415f	                                 pop r15	      3502	sequencer.c	FUNCTION_92
0x400af0d	              0xc3	                                     ret	      3502	sequencer.c	FUNCTION_92
0x400af0e	            0x6690	                                     nop	      3502	sequencer.c	FUNCTION_92
0x400af10	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400af14	        0x837a1005	               cmp dword [rdx + 0x10], 5	      3470	sequencer.c	FUNCTION_92	IF_5
0x400af18	     0xf850cfcffff	                           jne 0x400ab2a	      3470	sequencer.c	FUNCTION_92	IF_5
0x400af1e	        0xf6407430	           test byte [rax + 0x74], 0x30 	      3471	sequencer.c	FUNCTION_92	IF_5
0x400af22	     0xf849c010000	                            je 0x400b0c4	      3471	sequencer.c	FUNCTION_92	IF_5
0x400af28	        0x448b4a14	            mov r9d, dword [rdx + 0x14] 	      3472	sequencer.c	FUNCTION_92	IF_5
0x400af2c	          0x4585c9	                           test r9d, r9d	      3472	sequencer.c	FUNCTION_92	IF_5
0x400af2f	     0xf8464020000	                            je 0x400b199	      3472	sequencer.c	FUNCTION_92	IF_5
0x400af35	            0x31c0	                            xor eax, eax	      2165	sequencer.c	FUNCTION_65
0x400af37	        0x837d0001	                      cmp dword [rbp], 1	      2165	sequencer.c	FUNCTION_65
0x400af3b	           0xf95c0	                                setne al	      2165	sequencer.c	FUNCTION_65
0x400af3e	          0x4989c6	                            mov r14, rax	      2165	sequencer.c	FUNCTION_65
0x400af41	        0x48c1e004	                              shl rax, 4	      2167	sequencer.c	FUNCTION_65
0x400af45	    0x480500000000	                              add rax, 0	      2167	sequencer.c	FUNCTION_65
0x400af4b	        0x488b4008	                mov rax, qword [rax + 8]	      2167	sequencer.c	FUNCTION_65
0x400af4f	      0x4889442408	                mov qword [rsp + 8], rax	      2167	sequencer.c	FUNCTION_65
0x400af54	      0xe9f8fbffff	                           jmp 0x400ab51	      2167	sequencer.c	FUNCTION_65
0x400af59	        0xf6407430	           test byte [rax + 0x74], 0x30 	      1735	sequencer.c	FUNCTION_49	IF_1
0x400af5d	     0xf85eefbffff	                           jne 0x400ab51	      1735	sequencer.c	FUNCTION_49	IF_1
0x400af63	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af67	            0x89d1	                            mov ecx, edx	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af69	          0x83e2bf	                     and edx, 0xffffffbf	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af6c	          0xc0e906	                               shr cl, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af6f	          0x83e101	                              and ecx, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af72	          0x83f101	                              xor ecx, 1	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af75	          0xc1e106	                              shl ecx, 6	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af78	             0x9ca	                             or edx, ecx	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af7a	          0x885077	               mov byte [rax + 0x77], dl	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af7d	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af84	      0xe9c8fbffff	                           jmp 0x400ab51	      1736	sequencer.c	FUNCTION_49	IF_1
0x400af89	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400af8b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400af90	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400af95	      0xe800000000	                          call 0x400af9a	        54	gettext.h	FUNCTION_164
0x400af9a	          0x4c89f6	                            mov rsi, r14	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400af9d	          0x4889c7	                            mov rdi, rax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400afa0	            0x31c0	                            xor eax, eax	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400afa2	      0xe800000000	                          call 0x400afa7	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400afa7	      0xe934ffffff	                           jmp 0x400aee0	      3460	sequencer.c	FUNCTION_92	FOR_1	CALL_9
0x400afac	    0x488b3d000000	            mov rdi, qword [0x0400afb3] 	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400afb3	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400afbb	            0x31d2	                            xor edx, edx	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400afbd	      0xe800000000	                          call 0x400afc2	      3453	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_6
0x400afc2	            0x89c7	                            mov edi, eax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400afc4	      0xe800000000	                          call 0x400afc9	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400afc9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400afcb	          0x4889c3	                            mov rbx, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400afce	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400afd3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400afd8	      0xe800000000	                          call 0x400afdd	        54	gettext.h	FUNCTION_164
0x400afdd	          0x4889da	                            mov rdx, rbx	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400afe0	          0x4889c7	                            mov rdi, rax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400afe3	          0x4c89f6	                            mov rsi, r14	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400afe6	            0x31c0	                            xor eax, eax	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400afe8	      0xe800000000	                          call 0x400afed	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400afed	      0xe9eefeffff	                           jmp 0x400aee0	      3456	sequencer.c	FUNCTION_92	FOR_1	IF_3	IF_4	CALL_7
0x400aff2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400aff7	            0x31c0	                            xor eax, eax	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400aff9	      0xbe00000000	                              mov esi, 0	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400affe	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x400b007	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x400b010	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2382	sequencer.c	FUNCTION_73	IF_6
0x400b019	      0xe800000000	                          call 0x400b01e	      2383	sequencer.c	FUNCTION_73	IF_6	CALL_7
0x400b01e	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400b023	          0x4c89f7	                            mov rdi, r14	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400b026	      0xbe00000000	                              mov esi, 0	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400b02b	      0xe800000000	                          call 0x400b030	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400b030	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x400b035	          0x4109c4	                            or r12d, eax	      2384	sequencer.c	FUNCTION_73	IF_6	CALL_8
0x400b038	      0xe800000000	                          call 0x400b03d	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x400b03d	      0xe9b1fdffff	                           jmp 0x400adf3	      2385	sequencer.c	FUNCTION_73	IF_6	CALL_9
0x400b042	      0xba00000000	                              mov edx, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400b047	      0xbe00000000	                              mov esi, 0	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400b04c	          0x4c89f7	                            mov rdi, r14	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400b04f	      0xe800000000	                          call 0x400b054	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400b054	          0x4109c4	                            or r12d, eax	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400b057	      0xe98cfdffff	                           jmp 0x400ade8	      2380	sequencer.c	FUNCTION_73	CALL_6
0x400b05c	      0xba00000000	                              mov edx, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400b061	      0xbe00000000	                              mov esi, 0	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400b066	          0x4c89f7	                            mov rdi, r14	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400b069	      0xe800000000	                          call 0x400b06e	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400b06e	          0x4109c4	                            or r12d, eax	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400b071	      0xe967fdffff	                           jmp 0x400addd	      2378	sequencer.c	FUNCTION_73	CALL_5
0x400b076	      0xba00000000	                              mov edx, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400b07b	      0xbe00000000	                              mov esi, 0	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400b080	          0x4c89f7	                            mov rdi, r14	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400b083	      0xe800000000	                          call 0x400b088	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400b088	          0x4109c4	                            or r12d, eax	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400b08b	      0xe942fdffff	                           jmp 0x400add2	      2376	sequencer.c	FUNCTION_73	CALL_4
0x400b090	      0xba00000000	                              mov edx, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400b095	      0xbe00000000	                              mov esi, 0	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400b09a	          0x4c89f7	                            mov rdi, r14	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400b09d	      0xe800000000	                          call 0x400b0a2	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400b0a2	          0x4109c4	                            or r12d, eax	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400b0a5	      0xe91dfdffff	                           jmp 0x400adc7	      2374	sequencer.c	FUNCTION_73	CALL_3
0x400b0aa	      0xba00000000	                              mov edx, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400b0af	      0xbe00000000	                              mov esi, 0	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400b0b4	          0x4c89f7	                            mov rdi, r14	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400b0b7	      0xe800000000	                          call 0x400b0bc	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400b0bc	          0x4189c4	                           mov r12d, eax	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400b0bf	      0xe9f8fcffff	                           jmp 0x400adbc	      2372	sequencer.c	FUNCTION_73	CALL_2
0x400b0c4	          0x8b4d00	                    mov ecx, dword [rbp]	      2165	sequencer.c	FUNCTION_65
0x400b0c7	            0x31d2	                            xor edx, edx	      2165	sequencer.c	FUNCTION_65
0x400b0c9	          0x83f901	                              cmp ecx, 1	      2165	sequencer.c	FUNCTION_65
0x400b0cc	           0xf95c2	                                setne dl	      2165	sequencer.c	FUNCTION_65
0x400b0cf	          0x4989d6	                            mov r14, rdx	      2165	sequencer.c	FUNCTION_65
0x400b0d2	        0x48c1e204	                              shl rdx, 4	      2167	sequencer.c	FUNCTION_65
0x400b0d6	          0x83f901	                              cmp ecx, 1	      1735	sequencer.c	FUNCTION_49	IF_1
0x400b0d9	    0x488b9a000000	                    mov rbx, qword [rdx]	      2167	sequencer.c	FUNCTION_65
0x400b0e0	      0x48895c2408	                mov qword [rsp + 8], rbx	      2167	sequencer.c	FUNCTION_65
0x400b0e5	     0xf8566faffff	                           jne 0x400ab51	      1735	sequencer.c	FUNCTION_49	IF_1
0x400b0eb	      0xe973feffff	                           jmp 0x400af63	      1735	sequencer.c	FUNCTION_49	IF_1
0x400b0f0	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400b0f5	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x400b0f7	      0xe800000000	                          call 0x400b0fc	        42	sequencer.c	CALL_5
0x400b0fc	          0x4889c6	                            mov rsi, rax	        42	sequencer.c	CALL_5
0x400b0ff	    0x488905000000	            mov qword [0x0400b106], rax 	        42	sequencer.c	CALL_5
0x400b106	      0xe92efcffff	                           jmp 0x400ad39	        42	sequencer.c	CALL_5
0x400b10b	    0x488b1d000000	            mov rbx, qword [0x0400b112] 	        42	sequencer.c	CALL_5
0x400b112	          0x4885db	                           test rbx, rbx	        42	sequencer.c	CALL_5
0x400b115	     0xf84fb010000	                            je 0x400b316	        42	sequencer.c	CALL_5
0x400b11b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b120	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400b122	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b127	      0xe800000000	                          call 0x400b12c	        54	gettext.h	FUNCTION_164
0x400b12c	          0x4889de	                            mov rsi, rbx	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x400b12f	          0x4889c7	                            mov rdi, rax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x400b132	            0x31c0	                            xor eax, eax	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x400b134	      0xe800000000	                          call 0x400b139	      2218	sequencer.c	FUNCTION_67	IF_2	CALL_8
0x400b139	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       304	lockfile.h	FUNCTION_202	CALL_1
0x400b13e	      0xe800000000	                          call 0x400b143	       304	lockfile.h	FUNCTION_202	CALL_1
0x400b143	      0xe998fdffff	                           jmp 0x400aee0	       304	lockfile.h	FUNCTION_202	CALL_1
0x400b148	      0xbf00000000	                              mov edi, 0	        38	sequencer.c	CALL_2
0x400b14d	            0x31c0	                            xor eax, eax	        38	sequencer.c	CALL_2
0x400b14f	      0xe800000000	                          call 0x400b154	        38	sequencer.c	CALL_2
0x400b154	          0x4889c3	                            mov rbx, rax	        38	sequencer.c	CALL_2
0x400b157	    0x488905000000	            mov qword [0x0400b15e], rax 	        38	sequencer.c	CALL_2
0x400b15e	      0xe95afbffff	                           jmp 0x400acbd	        38	sequencer.c	CALL_2
0x400b163	      0xbf00000000	                              mov edi, 0	        38	sequencer.c	CALL_2
0x400b168	            0x31c0	                            xor eax, eax	        38	sequencer.c	CALL_2
0x400b16a	      0xe800000000	                          call 0x400b16f	        38	sequencer.c	CALL_2
0x400b16f	          0x4889c7	                            mov rdi, rax	        38	sequencer.c	CALL_2
0x400b172	    0x488905000000	            mov qword [0x0400b179], rax 	        38	sequencer.c	CALL_2
0x400b179	      0xe922fbffff	                           jmp 0x400aca0	        38	sequencer.c	CALL_2
0x400b17e	      0xbf00000000	                              mov edi, 0	        41	sequencer.c	CALL_4
0x400b183	            0x31c0	                            xor eax, eax	        41	sequencer.c	CALL_4
0x400b185	      0xe800000000	                          call 0x400b18a	        41	sequencer.c	CALL_4
0x400b18a	          0x4989c6	                            mov r14, rax	        41	sequencer.c	CALL_4
0x400b18d	    0x488905000000	            mov qword [0x0400b194], rax 	        41	sequencer.c	CALL_4
0x400b194	      0xe915fcffff	                           jmp 0x400adae	        41	sequencer.c	CALL_4
0x400b199	          0x4889c7	                            mov rdi, rax	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b19c	      0xe800000000	                          call 0x400b1a1	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b1a1	            0x85c0	                           test eax, eax	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b1a3	     0xf85d9010000	                           jne 0x400b382	      3475	sequencer.c	FUNCTION_92	IF_5	IF_6	CALL_10
0x400b1a9	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400b1b0	      0xe800000000	                          call 0x400b1b5	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400b1b5	          0x4885c0	                           test rax, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b1b8	          0x4989c4	                            mov r12, rax	      3477	sequencer.c	FUNCTION_92	IF_5	CALL_12
0x400b1bb	     0xf843f010000	                            je 0x400b300	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b1c1	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b1c8	      0xe800000000	                          call 0x400b1cd	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b1cd	          0x4885c0	                           test rax, rax	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b1d0	     0xf852a010000	                           jne 0x400b300	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b1d6	          0x8b5d00	                    mov ebx, dword [rbp]	      3478	sequencer.c	FUNCTION_92	IF_5	IF_7	CALL_13
0x400b1d9	          0x83fb01	                              cmp ebx, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x400b1dc	     0xf84f1000000	                            je 0x400b2d3	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x400b1e2	     0xf8249010000	                            jb 0x400b331	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x400b1e8	          0x83fb02	                              cmp ebx, 2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x400b1eb	      0xbe00000000	                              mov esi, 0	       298	sequencer.c	FUNCTION_9	SWITCH_1
0x400b1f0	     0xf84e2000000	                            je 0x400b2d8	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x400b1f6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b1fb	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400b1fd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b202	      0xe800000000	                          call 0x400b207	        54	gettext.h	FUNCTION_164
0x400b207	            0x89de	                            mov esi, ebx	       300	sequencer.c	FUNCTION_9	CALL_2
0x400b209	          0x4889c7	                            mov rdi, rax	       300	sequencer.c	FUNCTION_9	CALL_2
0x400b20c	            0x31c0	                            xor eax, eax	       300	sequencer.c	FUNCTION_9	CALL_2
0x400b20e	      0xe800000000	                          call 0x400b213	       300	sequencer.c	FUNCTION_9	CALL_2
0x400b213	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b218	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b21d	      0xe9a7fcffff	                           jmp 0x400aec9	        54	gettext.h	FUNCTION_164
0x400b222	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400b224	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b229	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b22e	      0xe800000000	                          call 0x400b233	        54	gettext.h	FUNCTION_164
0x400b233	          0x4889de	                            mov rsi, rbx	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400b236	          0x4889c7	                            mov rdi, rax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400b239	            0x31c0	                            xor eax, eax	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400b23b	      0xe800000000	                          call 0x400b240	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400b240	      0xe99bfcffff	                           jmp 0x400aee0	      2199	sequencer.c	FUNCTION_66	ELSE_1	IF_2	CALL_7
0x400b245	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b24a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b24f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400b251	      0xe800000000	                          call 0x400b256	        54	gettext.h	FUNCTION_164
0x400b256	          0x4889c7	                            mov rdi, rax	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x400b259	            0x31c0	                            xor eax, eax	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x400b25b	      0xe800000000	                          call 0x400b260	      2195	sequencer.c	FUNCTION_66	IF_1	CALL_3
0x400b260	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400b262	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b267	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b26c	      0xe800000000	                          call 0x400b271	        54	gettext.h	FUNCTION_164
0x400b271	          0x4889c7	                            mov rdi, rax	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400b274	            0x31c0	                            xor eax, eax	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400b276	      0xe800000000	                          call 0x400b27b	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400b27b	      0xe960fcffff	                           jmp 0x400aee0	      2196	sequencer.c	FUNCTION_66	IF_1	CALL_5
0x400b280	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400b282	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b287	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b28c	      0xe800000000	                          call 0x400b291	        54	gettext.h	FUNCTION_164
0x400b291	          0x4889c7	                            mov rdi, rax	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400b294	            0x31c0	                            xor eax, eax	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400b296	      0xe800000000	                          call 0x400b29b	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400b29b	      0xe940fcffff	                           jmp 0x400aee0	      2213	sequencer.c	FUNCTION_67	CALL_3
0x400b2a0	    0x488b1d000000	            mov rbx, qword [0x0400b2a7] 	        42	sequencer.c	CALL_5
0x400b2a7	          0x4885db	                           test rbx, rbx	        42	sequencer.c	CALL_5
0x400b2aa	     0xf84b7000000	                            je 0x400b367	        42	sequencer.c	CALL_5
0x400b2b0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400b2b2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400b2b7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400b2bc	      0xe800000000	                          call 0x400b2c1	        54	gettext.h	FUNCTION_164
0x400b2c1	          0x4889de	                            mov rsi, rbx	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400b2c4	          0x4889c7	                            mov rdi, rax	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400b2c7	            0x31c0	                            xor eax, eax	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400b2c9	      0xe800000000	                          call 0x400b2ce	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400b2ce	      0xe90dfcffff	                           jmp 0x400aee0	      2223	sequencer.c	FUNCTION_67	CALL_12
0x400b2d3	      0xbe00000000	                              mov esi, 0	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x400b2d8	            0x31d2	                            xor edx, edx	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400b2da	      0xbf00000000	                              mov edi, 0	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400b2df	      0xe800000000	                          call 0x400b2e4	      3428	sequencer.c	FUNCTION_91	CALL_1
0x400b2e4	            0x31ff	                            xor edi, edi	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400b2e6	        0x837d0001	                      cmp dword [rbp], 1	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400b2ea	          0x4889ea	                            mov rdx, rbp	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400b2ed	          0x4c89e6	                            mov rsi, r12	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400b2f0	        0x400f95c7	                               setne dil	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400b2f4	            0x31c9	                            xor ecx, ecx	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400b2f6	      0xe8159cffff	                 call sym.do_pick_commit	      3429	sequencer.c	FUNCTION_91	CALL_2
0x400b2fb	      0xe9e5fbffff	                           jmp 0x400aee5	      3480	sequencer.c	FUNCTION_92	IF_5	CALL_14
0x400b300	      0xbf00000000	                              mov edi, 0	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b305	            0x31c0	                            xor eax, eax	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b307	      0xe800000000	                          call 0x400b30c	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b30c	      0xb8ffffffff	                     mov eax, 0xffffffff	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b311	      0xe9cffbffff	                           jmp 0x400aee5	      3479	sequencer.c	FUNCTION_92	IF_5	IF_7
0x400b316	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400b31b	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x400b31d	      0xe800000000	                          call 0x400b322	        42	sequencer.c	CALL_5
0x400b322	          0x4889c3	                            mov rbx, rax	        42	sequencer.c	CALL_5
0x400b325	    0x488905000000	            mov qword [0x0400b32c], rax 	        42	sequencer.c	CALL_5
0x400b32c	      0xe9eafdffff	                           jmp 0x400b11b	        42	sequencer.c	CALL_5
0x400b331	      0xbe00000000	                              mov esi, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x400b336	            0xeba0	                           jmp 0x400b2d8	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x400b338	      0xbf00000000	                              mov edi, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x400b33d	      0xe8de4effff	                       call sym._.part.6	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x400b342	          0x4889c7	                            mov rdi, rax	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400b345	            0x31c0	                            xor eax, eax	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400b347	      0xe800000000	                          call 0x400b34c	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400b34c	      0xe98ffbffff	                           jmp 0x400aee0	      1742	sequencer.c	FUNCTION_49	CALL_3
0x400b351	      0xbe30000000	                           mov esi, 0x30	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400b356	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400b35b	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400b35d	      0xe800000000	                          call 0x400b362	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400b362	      0xe800000000	                          call 0x400b367	      3502	sequencer.c	FUNCTION_92
0x400b367	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400b36c	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x400b36e	      0xe800000000	                          call 0x400b373	        42	sequencer.c	CALL_5
0x400b373	          0x4889c3	                            mov rbx, rax	        42	sequencer.c	CALL_5
0x400b376	    0x488905000000	            mov qword [0x0400b37d], rax 	        42	sequencer.c	CALL_5
0x400b37d	      0xe92effffff	                           jmp 0x400b2b0	        42	sequencer.c	CALL_5
0x400b382	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400b387	      0xe8944effff	                       call sym._.part.6	        42	sequencer.c	CALL_5
0x400b38c	          0x4889c7	                            mov rdi, rax	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b38f	            0x31c0	                            xor eax, eax	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b391	      0xe800000000	                          call 0x400b396	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b396	      0xb8ffffffff	                     mov eax, 0xffffffff	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b39b	      0xe945fbffff	                           jmp 0x400aee5	      3476	sequencer.c	FUNCTION_92	IF_5	CALL_11
0x400b3a0	      0xb900000000	                              mov ecx, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400b3a5	      0xba6f0d0000	                          mov edx, 0xd6f	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400b3aa	      0xbe00000000	                              mov esi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400b3af	      0xbf00000000	                              mov edi, 0	      3439	sequencer.c	FUNCTION_92	CALL_1
0x400b3b4	      0xe800000000	                          call 0x400b3b9	      3439	sequencer.c	FUNCTION_92	CALL_1
read_and_refresh_cache	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,3:CALL,11:FOR,0	94
0x4002b10	              0x55	                                push rbp	      1747	sequencer.c	FUNCTION_50
0x4002b11	              0x53	                                push rbx	      1747	sequencer.c	FUNCTION_50
0x4002b12	            0x31f6	                            xor esi, esi	      1749	sequencer.c	FUNCTION_50	CALL_1
0x4002b14	          0x4889fd	                            mov rbp, rdi	      1747	sequencer.c	FUNCTION_50
0x4002b17	        0x4883ec18	                           sub rsp, 0x18	      1747	sequencer.c	FUNCTION_50
0x4002b1b	          0x4889e7	                            mov rdi, rsp	      1749	sequencer.c	FUNCTION_50	CALL_1
0x4002b1e	    0x48c704240000	                      mov qword [rsp], 0	      1748	sequencer.c	FUNCTION_50
0x4002b26	    0x64488b042528	                mov rax, qword fs:[0x28]	      1747	sequencer.c	FUNCTION_50
0x4002b2f	      0x4889442408	                mov qword [rsp + 8], rax	      1747	sequencer.c	FUNCTION_50
0x4002b34	            0x31c0	                            xor eax, eax	      1747	sequencer.c	FUNCTION_50
0x4002b36	      0xe800000000	                          call 0x4002b3b	      1749	sequencer.c	FUNCTION_50	CALL_1
0x4002b3b	            0x31f6	                            xor esi, esi	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4002b3d	      0xbf00000000	                              mov edi, 0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4002b42	            0x89c3	                            mov ebx, eax	      1749	sequencer.c	FUNCTION_50	CALL_1
0x4002b44	      0xe800000000	                          call 0x4002b49	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4002b49	            0x85c0	                           test eax, eax	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4002b4b	     0xf888f000000	                            js 0x4002be0	      1750	sequencer.c	FUNCTION_50	IF_1	CALL_2
0x4002b51	          0x4531c0	                            xor r8d, r8d	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4002b54	            0x31c9	                            xor ecx, ecx	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4002b56	            0x31d2	                            xor edx, edx	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4002b58	      0xbe06000000	                              mov esi, 6	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4002b5d	      0xbf00000000	                              mov edi, 0	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4002b62	      0xe800000000	                          call 0x4002b67	      1755	sequencer.c	FUNCTION_50	CALL_7
0x4002b67	            0x85db	                           test ebx, ebx	      1756	sequencer.c	FUNCTION_50	IF_2
0x4002b69	            0x7816	                            js 0x4002b81	      1756	sequencer.c	FUNCTION_50	IF_2
0x4002b6b	      0xba03000000	                              mov edx, 3	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4002b70	          0x4889e6	                            mov rsi, rsp	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4002b73	      0xbf00000000	                              mov edi, 0	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4002b78	      0xe800000000	                          call 0x4002b7d	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4002b7d	            0x85c0	                           test eax, eax	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4002b7f	            0x751f	                           jne 0x4002ba0	      1757	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_8
0x4002b81	            0x31c0	                            xor eax, eax	      1763	sequencer.c	FUNCTION_50
0x4002b83	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1764	sequencer.c	FUNCTION_50
0x4002b88	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1764	sequencer.c	FUNCTION_50
0x4002b91	     0xf85d1000000	                           jne 0x4002c68	      1764	sequencer.c	FUNCTION_50
0x4002b97	        0x4883c418	                           add rsp, 0x18	      1764	sequencer.c	FUNCTION_50
0x4002b9b	              0x5b	                                 pop rbx	      1764	sequencer.c	FUNCTION_50
0x4002b9c	              0x5d	                                 pop rbp	      1764	sequencer.c	FUNCTION_50
0x4002b9d	              0xc3	                                     ret	      1764	sequencer.c	FUNCTION_50
0x4002b9e	            0x6690	                                     nop	      1764	sequencer.c	FUNCTION_50
0x4002ba0	          0x8b5d00	                    mov ebx, dword [rbp]	      1764	sequencer.c	FUNCTION_50
0x4002ba3	          0x83fb01	                              cmp ebx, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002ba6	     0xf8487000000	                            je 0x4002c33	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bac	     0xf82af000000	                            jb 0x4002c61	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bb2	          0x83fb02	                              cmp ebx, 2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bb5	      0xbe00000000	                              mov esi, 0	       298	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bba	            0x747c	                            je 0x4002c38	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bbc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4002bc1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4002bc3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002bc8	      0xe800000000	                          call 0x4002bcd	        54	gettext.h	FUNCTION_164
0x4002bcd	            0x89de	                            mov esi, ebx	       300	sequencer.c	FUNCTION_9	CALL_2
0x4002bcf	          0x4889c7	                            mov rdi, rax	       300	sequencer.c	FUNCTION_9	CALL_2
0x4002bd2	            0x31c0	                            xor eax, eax	       300	sequencer.c	FUNCTION_9	CALL_2
0x4002bd4	      0xe800000000	                          call 0x4002bd9	       300	sequencer.c	FUNCTION_9	CALL_2
0x4002bd9	     0xf1f80000000	                         nop dword [rax]	       300	sequencer.c	FUNCTION_9	CALL_2
0x4002be0	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_202	CALL_1
0x4002be3	      0xe800000000	                          call 0x4002be8	       304	lockfile.h	FUNCTION_202	CALL_1
0x4002be8	          0x8b5d00	                    mov ebx, dword [rbp]	       304	lockfile.h	FUNCTION_202	CALL_1
0x4002beb	          0x83fb01	                              cmp ebx, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bee	            0x746a	                            je 0x4002c5a	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bf0	            0x7261	                            jb 0x4002c53	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bf2	          0x83fb02	                              cmp ebx, 2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bf5	      0xbe00000000	                              mov esi, 0	       298	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bfa	            0x75c0	                           jne 0x4002bbc	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4002bfc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002c01	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4002c03	      0xe800000000	                          call 0x4002c08	        54	gettext.h	FUNCTION_164
0x4002c08	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002c0d	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_164
0x4002c10	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4002c15	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4002c17	      0xe800000000	                          call 0x4002c1c	        54	gettext.h	FUNCTION_164
0x4002c1c	          0x4889de	                            mov rsi, rbx	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4002c1f	          0x4889c7	                            mov rdi, rax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4002c22	            0x31c0	                            xor eax, eax	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4002c24	      0xe800000000	                          call 0x4002c29	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4002c29	      0xb8ffffffff	                     mov eax, 0xffffffff	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4002c2e	      0xe950ffffff	                           jmp 0x4002b83	      1759	sequencer.c	FUNCTION_50	IF_2	IF_3	CALL_9
0x4002c33	      0xbe00000000	                              mov esi, 0	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x4002c38	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002c3d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4002c3f	      0xe800000000	                          call 0x4002c44	        54	gettext.h	FUNCTION_164
0x4002c44	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002c49	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_164
0x4002c4c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4002c51	            0xebc2	                           jmp 0x4002c15	        54	gettext.h	FUNCTION_164
0x4002c53	      0xbe00000000	                              mov esi, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x4002c58	            0xeba2	                           jmp 0x4002bfc	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x4002c5a	      0xbe00000000	                              mov esi, 0	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x4002c5f	            0xeb9b	                           jmp 0x4002bfc	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x4002c61	      0xbe00000000	                              mov esi, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x4002c66	            0xebd0	                           jmp 0x4002c38	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x4002c68	      0xe800000000	                          call 0x4002c6d	      1764	sequencer.c	FUNCTION_50
populate_opts_cb	functions,0:SWITCH,0:ELSE,11:WHILE,0:DO,0:IF,12:CALL,12:FOR,0	193
0x40013f0	            0x4154	                                push r12	      2043	sequencer.c	FUNCTION_62
0x40013f2	              0x55	                                push rbp	      2043	sequencer.c	FUNCTION_62
0x40013f3	          0x4889f5	                            mov rbp, rsi	      2043	sequencer.c	FUNCTION_62
0x40013f6	              0x53	                                push rbx	      2043	sequencer.c	FUNCTION_62
0x40013f7	          0x4889fb	                            mov rbx, rdi	      2043	sequencer.c	FUNCTION_62
0x40013fa	        0x4883ec10	                           sub rsp, 0x10	      2043	sequencer.c	FUNCTION_62
0x40013fe	    0x64488b042528	                mov rax, qword fs:[0x28]	      2043	sequencer.c	FUNCTION_62
0x4001407	      0x4889442408	                mov qword [rsp + 8], rax	      2043	sequencer.c	FUNCTION_62
0x400140c	            0x31c0	                            xor eax, eax	      2043	sequencer.c	FUNCTION_62
0x400140e	          0x4885f6	                           test rsi, rsi	      2047	sequencer.c	FUNCTION_62	IF_1
0x4001411	    0xc74424040100	                  mov dword [rsp + 4], 1	      2045	sequencer.c	FUNCTION_62
0x4001419	     0xf84b1010000	                            je 0x40015d0	      2047	sequencer.c	FUNCTION_62	IF_1
0x400141f	      0xbf00000000	                              mov edi, 0	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001424	      0xb912000000	                           mov ecx, 0x12	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001429	          0x4889de	                            mov rsi, rbx	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400142c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400142e	          0x4989d4	                            mov r12, rdx	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001431	     0xf8421010000	                            je 0x4001558	      2049	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001437	      0xbf00000000	                              mov edi, 0	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400143c	      0xb90d000000	                            mov ecx, 0xd	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001441	          0x4889de	                            mov rsi, rbx	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001444	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x4001446	     0xf844c010000	                            je 0x4001598	      2051	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400144c	      0xbf00000000	                              mov edi, 0	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001451	      0xb910000000	                           mov ecx, 0x10	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001456	          0x4889de	                            mov rsi, rbx	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001459	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400145b	     0xf84a7010000	                            je 0x4001608	      2053	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001461	      0xbf00000000	                              mov edi, 0	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001466	      0xb916000000	                           mov ecx, 0x16	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400146b	          0x4889de	                            mov rsi, rbx	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400146e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001470	     0xf84b2010000	                            je 0x4001628	      2055	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001476	      0xbf00000000	                              mov edi, 0	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x400147b	      0xb911000000	                           mov ecx, 0x11	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001480	          0x4889de	                            mov rsi, rbx	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001483	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x4001485	     0xf8425010000	                            je 0x40015b0	      2057	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x400148b	      0xbf00000000	                              mov edi, 0	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001490	      0xb911000000	                           mov ecx, 0x11	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001495	          0x4889de	                            mov rsi, rbx	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001498	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x400149a	     0xf84e8010000	                            je 0x4001688	      2059	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40014a0	      0xbf00000000	                              mov edi, 0	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40014a5	      0xb911000000	                           mov ecx, 0x11	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40014aa	          0x4889de	                            mov rsi, rbx	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40014ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40014af	     0xf84eb010000	                            je 0x40016a0	      2061	sequencer.c	FUNCTION_62	ELSE_7	IF_8
0x40014b5	      0xbf00000000	                              mov edi, 0	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40014ba	      0xb911000000	                           mov ecx, 0x11	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40014bf	          0x4889de	                            mov rsi, rbx	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40014c2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40014c4	     0xf84f6010000	                            je 0x40016c0	      2063	sequencer.c	FUNCTION_62	ELSE_8	IF_9
0x40014ca	      0xbf00000000	                              mov edi, 0	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014cf	      0xb918000000	                           mov ecx, 0x18	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014d4	          0x4889de	                            mov rsi, rbx	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014d7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014d9	     0xf8569010000	                           jne 0x4001648	      2065	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014df	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014e3	      0x498b442458	            mov rax, qword [r12 + 0x58] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014e8	        0x488d7201	                      lea rsi, [rdx + 1]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014ec	          0x4839c6	                            cmp rsi, rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014ef	     0xf86e6010000	                           jbe 0x40016db	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014f5	      0x488d544030	          lea rdx, [rax + rax*2 + 0x30] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x40014fa	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_132	IF_1
0x4001504	          0x48d1ea	                              shr rdx, 1	       795	git-compat-util.h	FUNCTION_132	IF_1
0x4001507	          0x4839f2	                            cmp rdx, rsi	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400150a	        0x480f42d6	                          cmovb rdx, rsi	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400150e	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_132	IF_1
0x4001511	      0x4989542458	             mov qword [r12 + 0x58], rdx	       795	git-compat-util.h	FUNCTION_132	IF_1
0x4001516	     0xf87ef010000	                            ja 0x400170b	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400151c	      0x498b7c2448	            mov rdi, qword [r12 + 0x48] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001521	    0x488d34d50000	                        lea rsi, [rdx*8]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001529	      0xe800000000	                          call 0x400152e	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400152e	      0x498b542450	            mov rdx, qword [r12 + 0x50] 	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001533	      0x4989442448	             mov qword [r12 + 0x48], rax	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x4001538	        0x488d7201	                      lea rsi, [rdx + 1]	      2066	sequencer.c	FUNCTION_62	ELSE_9	IF_10
0x400153c	      0x4989742450	             mov qword [r12 + 0x50], rsi	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001541	        0x4c8d24d0	                  lea r12, [rax + rdx*8]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001545	          0x4889ef	                            mov rdi, rbp	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001548	      0xe800000000	                          call 0x400154d	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x400154d	        0x49890424	                    mov qword [r12], rax	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001551	            0xeb1a	                           jmp 0x400156d	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001553	       0xf1f440000	                   nop dword [rax + rax]	      2067	sequencer.c	FUNCTION_62	ELSE_9	IF_10	CALL_9
0x4001558	      0x488d542404	                      lea rdx, [rsp + 4]	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400155d	          0x4889ee	                            mov rsi, rbp	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001560	          0x4889df	                            mov rdi, rbx	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001563	      0xe800000000	                          call 0x4001568	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x4001568	      0x418944240c	              mov dword [r12 + 0xc], eax	      2050	sequencer.c	FUNCTION_62	ELSE_1	IF_2
0x400156d	        0x8b442404	                mov eax, dword [rsp + 4]	      2075	sequencer.c	FUNCTION_62	IF_12
0x4001571	            0x85c0	                           test eax, eax	      2075	sequencer.c	FUNCTION_62	IF_12
0x4001573	            0x7463	                            je 0x40015d8	      2075	sequencer.c	FUNCTION_62	IF_12
0x4001575	            0x31c0	                            xor eax, eax	      2078	sequencer.c	FUNCTION_62
0x4001577	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2079	sequencer.c	FUNCTION_62
0x400157c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2079	sequencer.c	FUNCTION_62
0x4001585	     0xf857b010000	                           jne 0x4001706	      2079	sequencer.c	FUNCTION_62
0x400158b	        0x4883c410	                           add rsp, 0x10	      2079	sequencer.c	FUNCTION_62
0x400158f	              0x5b	                                 pop rbx	      2079	sequencer.c	FUNCTION_62
0x4001590	              0x5d	                                 pop rbp	      2079	sequencer.c	FUNCTION_62
0x4001591	            0x415c	                                 pop r12	      2079	sequencer.c	FUNCTION_62
0x4001593	              0xc3	                                     ret	      2079	sequencer.c	FUNCTION_62
0x4001594	         0xf1f4000	                         nop dword [rax]	      2079	sequencer.c	FUNCTION_62
0x4001598	      0x488d542404	                      lea rdx, [rsp + 4]	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x400159d	          0x4889ee	                            mov rsi, rbp	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40015a0	          0x4889df	                            mov rdi, rbx	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40015a3	      0xe800000000	                          call 0x40015a8	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40015a8	      0x4189442404	                mov dword [r12 + 4], eax	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40015ad	            0xebbe	                           jmp 0x400156d	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40015af	              0x90	                                     nop	      2052	sequencer.c	FUNCTION_62	ELSE_2	IF_3
0x40015b0	      0x488d542404	                      lea rdx, [rsp + 4]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40015b5	          0x4889ee	                            mov rsi, rbp	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40015b8	          0x4889df	                            mov rdi, rbx	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40015bb	      0xe800000000	                          call 0x40015c0	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40015c0	      0x4189442414	             mov dword [r12 + 0x14], eax	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40015c5	            0xeba6	                           jmp 0x400156d	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40015c7	    0x660f1f840000	                    nop word [rax + rax]	      2058	sequencer.c	FUNCTION_62	ELSE_5	IF_6
0x40015d0	    0xc74424040000	                  mov dword [rsp + 4], 0	      2048	sequencer.c	FUNCTION_62	IF_1
0x40015d8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40015dd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40015e2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40015e4	      0xe800000000	                          call 0x40015e9	        54	gettext.h	FUNCTION_164
0x40015e9	          0x4889ea	                            mov rdx, rbp	      2076	sequencer.c	FUNCTION_62	CALL_12
0x40015ec	          0x4889c7	                            mov rdi, rax	      2076	sequencer.c	FUNCTION_62	CALL_12
0x40015ef	          0x4889de	                            mov rsi, rbx	      2076	sequencer.c	FUNCTION_62	CALL_12
0x40015f2	            0x31c0	                            xor eax, eax	      2076	sequencer.c	FUNCTION_62	CALL_12
0x40015f4	      0xe800000000	                          call 0x40015f9	      2076	sequencer.c	FUNCTION_62	CALL_12
0x40015f9	      0xb8ffffffff	                     mov eax, 0xffffffff	      2076	sequencer.c	FUNCTION_62	CALL_12
0x40015fe	      0xe974ffffff	                           jmp 0x4001577	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001603	       0xf1f440000	                   nop dword [rax + rax]	      2076	sequencer.c	FUNCTION_62	CALL_12
0x4001608	      0x488d542404	                      lea rdx, [rsp + 4]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400160d	          0x4889ee	                            mov rsi, rbp	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001610	          0x4889df	                            mov rdi, rbx	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001613	      0xe800000000	                          call 0x4001618	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001618	      0x4189442410	             mov dword [r12 + 0x10], eax	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x400161d	      0xe94bffffff	                           jmp 0x400156d	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001622	    0x660f1f440000	                    nop word [rax + rax]	      2054	sequencer.c	FUNCTION_62	ELSE_3	IF_4
0x4001628	      0x488d542404	                      lea rdx, [rsp + 4]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400162d	          0x4889ee	                            mov rsi, rbp	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001630	          0x4889df	                            mov rdi, rbx	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001633	      0xe800000000	                          call 0x4001638	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001638	      0x4189442408	                mov dword [r12 + 8], eax	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x400163d	      0xe92bffffff	                           jmp 0x400156d	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001642	    0x660f1f440000	                    nop word [rax + rax]	      2056	sequencer.c	FUNCTION_62	ELSE_4	IF_5
0x4001648	      0xbf00000000	                              mov edi, 0	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400164d	      0xb91a000000	                           mov ecx, 0x1a	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001652	          0x4889de	                            mov rsi, rbx	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001655	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001657	     0xf8588000000	                           jne 0x40016e5	      2068	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400165d	      0x488d542404	                      lea rdx, [rsp + 4]	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4001662	          0x4889ee	                            mov rsi, rbp	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4001665	          0x4889df	                            mov rdi, rbx	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x4001668	      0xe800000000	                          call 0x400166d	      2070	sequencer.c	FUNCTION_62	ELSE_10	IF_11	CALL_10
0x400166d	          0x83f801	                              cmp eax, 1	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001670	            0x19c0	                            sbb eax, eax	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001672	            0xf7d0	                                 not eax	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001674	          0x83c002	                              add eax, 2	      2071	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001677	      0x4189442418	             mov dword [r12 + 0x18], eax	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x400167c	      0xe9ecfeffff	                           jmp 0x400156d	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001681	     0xf1f80000000	                         nop dword [rax]	      2069	sequencer.c	FUNCTION_62	ELSE_10	IF_11
0x4001688	          0x4889ee	                            mov rsi, rbp	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x400168b	          0x4889df	                            mov rdi, rbx	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x400168e	      0xe800000000	                          call 0x4001693	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001693	      0x418944242c	             mov dword [r12 + 0x2c], eax	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x4001698	      0xe9d0feffff	                           jmp 0x400156d	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x400169d	           0xf1f00	                         nop dword [rax]	      2060	sequencer.c	FUNCTION_62	ELSE_6	IF_7
0x40016a0	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      2037	sequencer.c	FUNCTION_61	CALL_2
0x40016a4	      0xe800000000	                          call 0x40016a9	      2037	sequencer.c	FUNCTION_61	CALL_2
0x40016a9	          0x4889ef	                            mov rdi, rbp	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016ac	      0xe800000000	                          call 0x40016b1	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016b1	      0x4989442440	             mov qword [r12 + 0x40], rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016b6	      0xe9b2feffff	                           jmp 0x400156d	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016bb	       0xf1f440000	                   nop dword [rax + rax]	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016c0	        0x488b7a30	            mov rdi, qword [rdx + 0x30] 	      2037	sequencer.c	FUNCTION_61	CALL_2
0x40016c4	      0xe800000000	                          call 0x40016c9	      2037	sequencer.c	FUNCTION_61	CALL_2
0x40016c9	          0x4889ef	                            mov rdi, rbp	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016cc	      0xe800000000	                          call 0x40016d1	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016d1	      0x4989442430	             mov qword [r12 + 0x30], rax	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016d6	      0xe992feffff	                           jmp 0x400156d	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016db	      0x498b442448	            mov rax, qword [r12 + 0x48] 	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016e0	      0xe957feffff	                           jmp 0x400153c	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016e5	      0xbf00000000	                              mov edi, 0	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016ea	      0xe831ebffff	                       call sym._.part.6	      2038	sequencer.c	FUNCTION_61	CALL_3
0x40016ef	          0x4889de	                            mov rsi, rbx	      2073	sequencer.c	FUNCTION_62	CALL_11
0x40016f2	          0x4889c7	                            mov rdi, rax	      2073	sequencer.c	FUNCTION_62	CALL_11
0x40016f5	            0x31c0	                            xor eax, eax	      2073	sequencer.c	FUNCTION_62	CALL_11
0x40016f7	      0xe800000000	                          call 0x40016fc	      2073	sequencer.c	FUNCTION_62	CALL_11
0x40016fc	      0xb8ffffffff	                     mov eax, 0xffffffff	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4001701	      0xe971feffff	                           jmp 0x4001577	      2073	sequencer.c	FUNCTION_62	CALL_11
0x4001706	      0xe800000000	                          call 0x400170b	      2079	sequencer.c	FUNCTION_62
0x400170b	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x4001710	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x4001715	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x4001717	      0xe800000000	                          call 0x400171c	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
print_commit_summary	functions,0:SWITCH,0:ELSE,1:WHILE,0:DO,0:IF,9:CALL,37:FOR,0	272
0x4004130	            0x4156	                                push r14	       994	sequencer.c	FUNCTION_35
0x4004132	            0x4155	                                push r13	       994	sequencer.c	FUNCTION_35
0x4004134	      0xb914000000	                           mov ecx, 0x14	       999	sequencer.c	FUNCTION_35
0x4004139	            0x4154	                                push r12	       994	sequencer.c	FUNCTION_35
0x400413b	              0x55	                                push rbp	       994	sequencer.c	FUNCTION_35
0x400413c	          0x4989fd	                            mov r13, rdi	       994	sequencer.c	FUNCTION_35
0x400413f	              0x53	                                push rbx	       994	sequencer.c	FUNCTION_35
0x4004140	          0x4189d4	                           mov r12d, edx	       994	sequencer.c	FUNCTION_35
0x4004143	    0x4881ece00900	                          sub rsp, 0x9e0	       994	sequencer.c	FUNCTION_35
0x400414a	    0x488d9c248000	                   lea rbx, [rsp + 0x80]	       999	sequencer.c	FUNCTION_35
0x4004152	    0x48c704240000	                      mov qword [rsp], 0	       997	sequencer.c	FUNCTION_35
0x400415a	    0x48c744240800	                  mov qword [rsp + 8], 0	       997	sequencer.c	FUNCTION_35
0x4004163	    0x64488b042528	                mov rax, qword fs:[0x28]	       994	sequencer.c	FUNCTION_35
0x400416c	    0x48898424d809	            mov qword [rsp + 0x9d8], rax	       994	sequencer.c	FUNCTION_35
0x4004174	            0x31c0	                            xor eax, eax	       994	sequencer.c	FUNCTION_35
0x4004176	          0x4889df	                            mov rdi, rbx	       999	sequencer.c	FUNCTION_35
0x4004179	    0x48c744241000	               mov qword [rsp + 0x10], 0	       997	sequencer.c	FUNCTION_35
0x4004182	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1000	sequencer.c	FUNCTION_35
0x400418b	          0xf348ab	              rep stosq qword [rdi], rax	       999	sequencer.c	FUNCTION_35
0x400418e	          0x4889f7	                            mov rdi, rsi	      1003	sequencer.c	FUNCTION_35	CALL_1
0x4004191	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1000	sequencer.c	FUNCTION_35
0x400419a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1000	sequencer.c	FUNCTION_35
0x40041a3	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1001	sequencer.c	FUNCTION_35
0x40041ac	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1001	sequencer.c	FUNCTION_35
0x40041b5	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1001	sequencer.c	FUNCTION_35
0x40041be	      0xe800000000	                          call 0x40041c3	      1003	sequencer.c	FUNCTION_35	CALL_1
0x40041c3	          0x4885c0	                           test rax, rax	      1004	sequencer.c	FUNCTION_35	IF_1
0x40041c6	     0xf8409040000	                            je 0x40045d5	      1004	sequencer.c	FUNCTION_35	IF_1
0x40041cc	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_106	CALL_1
0x40041ce	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_106	CALL_1
0x40041d1	          0x4889c5	                            mov rbp, rax	        75	commit.h	FUNCTION_106	CALL_1
0x40041d4	      0xe800000000	                          call 0x40041d9	        75	commit.h	FUNCTION_106	CALL_1
0x40041d9	            0x85c0	                           test eax, eax	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x40041db	     0xf850d040000	                           jne 0x40045ee	      1006	sequencer.c	FUNCTION_35	IF_2	CALL_4
0x40041e1	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_111	CALL_2
0x40041e6	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x40041eb	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x40041ee	      0xe800000000	                          call 0x40041f3	       279	strbuf.h	FUNCTION_111	CALL_2
0x40041f3	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1011	sequencer.c	FUNCTION_35	CALL_8
0x40041f8	          0x4889d9	                            mov rcx, rbx	      1011	sequencer.c	FUNCTION_35	CALL_8
0x40041fb	      0xbe00000000	                              mov esi, 0	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4004200	          0x4889ef	                            mov rdi, rbp	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4004203	      0xe800000000	                          call 0x4004208	      1011	sequencer.c	FUNCTION_35	CALL_8
0x4004208	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1012	sequencer.c	FUNCTION_35	CALL_9
0x400420d	          0x4889d9	                            mov rcx, rbx	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4004210	      0xbe00000000	                              mov esi, 0	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4004215	          0x4889ef	                            mov rdi, rbp	      1012	sequencer.c	FUNCTION_35	CALL_9
0x4004218	      0xe800000000	                          call 0x400421d	      1012	sequencer.c	FUNCTION_35	CALL_9
0x400421d	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4004222	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4004227	      0xe800000000	                          call 0x400422c	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x400422c	            0x85c0	                           test eax, eax	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x400422e	     0xf85fc020000	                           jne 0x4004530	      1013	sequencer.c	FUNCTION_35	IF_3	CALL_10
0x4004234	        0x41f6c402	                            test r12b, 2	      1017	sequencer.c	FUNCTION_35	IF_4
0x4004238	     0xf85b2010000	                           jne 0x40043f0	      1017	sequencer.c	FUNCTION_35	IF_4
0x400423e	      0xe800000000	                          call 0x4004243	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004243	            0x85c0	                           test eax, eax	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004245	     0xf840b020000	                            je 0x4004456	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x400424b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1033	sequencer.c	FUNCTION_35	CALL_23
0x4004250	      0xe800000000	                          call 0x4004255	      1033	sequencer.c	FUNCTION_35	CALL_23
0x4004255	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1034	sequencer.c	FUNCTION_35	CALL_24
0x400425a	      0xe800000000	                          call 0x400425f	      1034	sequencer.c	FUNCTION_35	CALL_24
0x400425f	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1036	sequencer.c	FUNCTION_35	CALL_25
0x4004267	          0x4c89ee	                            mov rsi, r13	      1036	sequencer.c	FUNCTION_35	CALL_25
0x400426a	      0xe800000000	                          call 0x400426f	      1036	sequencer.c	FUNCTION_35	CALL_25
0x400426f	    0x488d94242001	                  lea rdx, [rsp + 0x120]	      1037	sequencer.c	FUNCTION_35	CALL_26
0x4004277	            0x31c9	                            xor ecx, ecx	      1037	sequencer.c	FUNCTION_35	CALL_26
0x4004279	            0x31f6	                            xor esi, esi	      1037	sequencer.c	FUNCTION_35	CALL_26
0x400427b	            0x31ff	                            xor edi, edi	      1037	sequencer.c	FUNCTION_35	CALL_26
0x400427d	      0xe800000000	                          call 0x4004282	      1037	sequencer.c	FUNCTION_35	CALL_26
0x4004282	     0xfb684249901	          movzx eax, byte [rsp + 0x199] 	      1044	sequencer.c	FUNCTION_35
0x400428a	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1045	sequencer.c	FUNCTION_35	CALL_27
0x400428f	    0x488db4242001	                  lea rsi, [rsp + 0x120]	      1045	sequencer.c	FUNCTION_35	CALL_27
0x4004297	    0xc78424780600	          mov dword [rsp + 0x678], 0x28 	      1040	sequencer.c	FUNCTION_35
0x40042a2	          0x83c815	                            or eax, 0x15	      1044	sequencer.c	FUNCTION_35
0x40042a5	    0x888424990100	              mov byte [rsp + 0x199], al	      1044	sequencer.c	FUNCTION_35
0x40042ac	      0xe800000000	                          call 0x40042b1	      1045	sequencer.c	FUNCTION_35	CALL_27
0x40042b1	    0x488dbc241806	                  lea rdi, [rsp + 0x618]	      1049	sequencer.c	FUNCTION_35	CALL_28
0x40042b9	    0x80a4249a0100	            and byte [rsp + 0x19a], 0xfe	      1046	sequencer.c	FUNCTION_35
0x40042c1	    0xc78424680600	              mov dword [rsp + 0x668], 1	      1047	sequencer.c	FUNCTION_35
0x40042cc	    0xc78424640600	              mov dword [rsp + 0x664], 0	      1048	sequencer.c	FUNCTION_35
0x40042d7	      0xe800000000	                          call 0x40042dc	      1049	sequencer.c	FUNCTION_35	CALL_28
0x40042dc	            0x31c9	                            xor ecx, ecx	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40042de	            0x31d2	                            xor edx, edx	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40042e0	            0x31f6	                            xor esi, esi	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40042e2	      0xbf00000000	                              mov edi, 0	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40042e7	      0xe800000000	                          call 0x40042ec	      1051	sequencer.c	FUNCTION_35	CALL_29
0x40042ec	          0x4885c0	                           test rax, rax	      1052	sequencer.c	FUNCTION_35	IF_7
0x40042ef	     0xf84cc020000	                            je 0x40045c1	      1052	sequencer.c	FUNCTION_35	IF_7
0x40042f5	      0xb905000000	                              mov ecx, 5	      1054	sequencer.c	FUNCTION_35	IF_8
0x40042fa	          0x4889c6	                            mov rsi, rax	      1054	sequencer.c	FUNCTION_35	IF_8
0x40042fd	      0xbf00000000	                              mov edi, 0	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004302	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004304	          0x4889c3	                            mov rbx, rax	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004307	      0xba00000000	                              mov edx, 0	      1054	sequencer.c	FUNCTION_35	IF_8
0x400430c	        0x400f97c6	                                seta sil	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004310	           0xf92c1	                                 setb cl	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004313	          0x4038ce	                             cmp sil, cl	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004316	            0x7519	                           jne 0x4004331	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004318	      0xe93b020000	                           jmp 0x4004558	      1054	sequencer.c	FUNCTION_35	IF_8
0x400431d	           0xf1f00	                         nop dword [rax]	      1054	sequencer.c	FUNCTION_35	IF_8
0x4004320	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4004324	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4004328	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400432b	     0xf858f000000	                           jne 0x40043c0	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4004331	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4004334	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4004336	            0x75e8	                           jne 0x4004320	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4004338	        0x4183e401	                             and r12d, 1	      1058	sequencer.c	FUNCTION_35
0x400433c	      0xb900000000	                              mov ecx, 0	      1058	sequencer.c	FUNCTION_35
0x4004341	     0xf858b000000	                           jne 0x40043d2	      1058	sequencer.c	FUNCTION_35
0x4004347	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_282
0x400434a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_282
0x400434f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_282
0x4004354	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_282
0x4004356	      0xe800000000	                          call 0x400435b	       104	stdio2.h	CALL_282
0x400435b	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x4004363	          0x4889ee	                            mov rsi, rbp	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x4004366	      0xe800000000	                          call 0x400436b	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x400436b	            0x85c0	                           test eax, eax	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x400436d	            0x7520	                           jne 0x400438f	      1061	sequencer.c	FUNCTION_35	IF_9	CALL_35
0x400436f	    0x488dbc242001	                  lea rdi, [rsp + 0x120]	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x4004377	          0x4889ee	                            mov rsi, rbp	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x400437a	    0x808c249a0100	                or byte [rsp + 0x19a], 1	      1062	sequencer.c	FUNCTION_35	IF_9
0x4004382	    0x808c249b0100	                or byte [rsp + 0x19b], 8	      1063	sequencer.c	FUNCTION_35	IF_9
0x400438a	      0xe800000000	                          call 0x400438f	      1064	sequencer.c	FUNCTION_35	IF_9	CALL_36
0x400438f	          0x4889e7	                            mov rdi, rsp	      1067	sequencer.c	FUNCTION_35	CALL_37
0x4004392	      0xe800000000	                          call 0x4004397	      1067	sequencer.c	FUNCTION_35	CALL_37
0x4004397	    0x488b8424d809	           mov rax, qword [rsp + 0x9d8] 	      1068	sequencer.c	FUNCTION_35
0x400439f	    0x644833042528	                xor rax, qword fs:[0x28]	      1068	sequencer.c	FUNCTION_35
0x40043a8	     0xf853b020000	                           jne 0x40045e9	      1068	sequencer.c	FUNCTION_35
0x40043ae	    0x4881c4e00900	                          add rsp, 0x9e0	      1068	sequencer.c	FUNCTION_35
0x40043b5	              0x5b	                                 pop rbx	      1068	sequencer.c	FUNCTION_35
0x40043b6	              0x5d	                                 pop rbp	      1068	sequencer.c	FUNCTION_35
0x40043b7	            0x415c	                                 pop r12	      1068	sequencer.c	FUNCTION_35
0x40043b9	            0x415d	                                 pop r13	      1068	sequencer.c	FUNCTION_35
0x40043bb	            0x415e	                                 pop r14	      1068	sequencer.c	FUNCTION_35
0x40043bd	              0xc3	                                     ret	      1068	sequencer.c	FUNCTION_35
0x40043be	            0x6690	                                     nop	      1068	sequencer.c	FUNCTION_35
0x40043c0	        0x4183e401	                             and r12d, 1	      1058	sequencer.c	FUNCTION_35
0x40043c4	          0x4889c3	                            mov rbx, rax	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40043c7	      0xb900000000	                              mov ecx, 0	      1058	sequencer.c	FUNCTION_35
0x40043cc	     0xf8475ffffff	                            je 0x4004347	      1058	sequencer.c	FUNCTION_35
0x40043d2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40043d7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40043dc	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40043de	      0xe800000000	                          call 0x40043e3	        54	gettext.h	FUNCTION_164
0x40043e3	          0x4889c1	                            mov rcx, rax	        54	gettext.h	FUNCTION_164
0x40043e6	      0xe95cffffff	                           jmp 0x4004347	        54	gettext.h	FUNCTION_164
0x40043eb	       0xf1f440000	                   nop dword [rax + rax]	        54	gettext.h	FUNCTION_164
0x40043f0	      0x488d542460	                   lea rdx, [rsp + 0x60]	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x40043f5	          0x4889d9	                            mov rcx, rbx	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x40043f8	      0xbe00000000	                              mov esi, 0	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x40043fd	          0x4889ef	                            mov rdi, rbp	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004400	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4004409	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x4004412	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1018	sequencer.c	FUNCTION_35	IF_4
0x400441b	      0xe800000000	                          call 0x4004420	      1020	sequencer.c	FUNCTION_35	IF_4	CALL_13
0x4004420	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004425	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400442a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x400442d	      0xe800000000	                          call 0x4004432	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004432	      0x488d742460	                   lea rsi, [rsp + 0x60]	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x4004437	          0x4889e7	                            mov rdi, rsp	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x400443a	      0xe800000000	                          call 0x400443f	      1022	sequencer.c	FUNCTION_35	IF_4	CALL_15
0x400443f	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x4004444	      0xe800000000	                          call 0x4004449	      1023	sequencer.c	FUNCTION_35	IF_4	CALL_16
0x4004449	      0xe800000000	                          call 0x400444e	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x400444e	            0x85c0	                           test eax, eax	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004450	     0xf85f5fdffff	                           jne 0x400424b	      1025	sequencer.c	FUNCTION_35	IF_5	CALL_17
0x4004456	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_111	CALL_2
0x400445b	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004460	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004463	      0xe800000000	                          call 0x4004468	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004468	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x400446d	          0x4889e7	                            mov rdi, rsp	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x4004470	      0xe800000000	                          call 0x4004475	      1027	sequencer.c	FUNCTION_35	IF_5	CALL_19
0x4004475	    0x8b0500000000	            mov eax, dword [0x0400447b] 	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x400447b	            0x85c0	                           test eax, eax	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x400447d	     0xf84c8fdffff	                            je 0x400424b	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x4004483	        0x488b0424	                    mov rax, qword [rsp]	      1028	sequencer.c	FUNCTION_35	IF_5	IF_6
0x4004487	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x400448a	     0xf84e1000000	                            je 0x4004571	       141	strbuf.h	FUNCTION_108
0x4004490	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_108
0x4004495	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004499	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400449c	     0xf84cf000000	                            je 0x4004571	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40044a2	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x40044a6	            0x31f6	                            xor esi, esi	       978	sequencer.c	FUNCTION_34	CALL_1
0x40044a8	      0xbf00000000	                              mov edi, 0	       978	sequencer.c	FUNCTION_34	CALL_1
0x40044ad	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_110
0x40044b2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_110
0x40044b7	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_110
0x40044bb	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_110
0x40044c0	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_110
0x40044c5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x40044c9	      0xe800000000	                          call 0x40044ce	       978	sequencer.c	FUNCTION_34	CALL_1
0x40044ce	      0xbf00000000	                              mov edi, 0	       979	sequencer.c	FUNCTION_34	CALL_2
0x40044d3	          0x4889c3	                            mov rbx, rax	       978	sequencer.c	FUNCTION_34	CALL_1
0x40044d6	      0xe800000000	                          call 0x40044db	       979	sequencer.c	FUNCTION_34	CALL_2
0x40044db	          0x4889df	                            mov rdi, rbx	       980	sequencer.c	FUNCTION_34	CALL_4
0x40044de	          0x4989c6	                            mov r14, rax	       979	sequencer.c	FUNCTION_34	CALL_2
0x40044e1	      0xe800000000	                          call 0x40044e6	       980	sequencer.c	FUNCTION_34	CALL_4
0x40044e6	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x40044e8	     0xf849a000000	                            je 0x4004588	       980	sequencer.c	FUNCTION_34	CALL_4
0x40044ee	          0x4889df	                            mov rdi, rbx	       982	sequencer.c	FUNCTION_34	CALL_5
0x40044f1	      0xe800000000	                          call 0x40044f6	       982	sequencer.c	FUNCTION_34	CALL_5
0x40044f6	          0x4c89f7	                            mov rdi, r14	       983	sequencer.c	FUNCTION_34	CALL_6
0x40044f9	      0xe800000000	                          call 0x40044fe	       983	sequencer.c	FUNCTION_34	CALL_6
0x40044fe	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4004503	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4004508	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400450a	      0xe800000000	                          call 0x400450f	        54	gettext.h	FUNCTION_164
0x400450f	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_164
0x4004512	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004515	      0xe800000000	                          call 0x400451a	       279	strbuf.h	FUNCTION_111	CALL_2
0x400451a	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_111	CALL_2
0x400451d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004520	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004523	      0xe800000000	                          call 0x4004528	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004528	      0xe91efdffff	                           jmp 0x400424b	       279	strbuf.h	FUNCTION_111	CALL_2
0x400452d	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004530	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004533	      0xba0a000000	                            mov edx, 0xa	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004538	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400453d	      0xe800000000	                          call 0x4004542	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004542	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4004547	          0x4889e7	                            mov rdi, rsp	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x400454a	      0xe800000000	                          call 0x400454f	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x400454f	      0xe9e0fcffff	                           jmp 0x4004234	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4004554	         0xf1f4000	                         nop dword [rax]	      1015	sequencer.c	FUNCTION_35	IF_3	CALL_12
0x4004558	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400455d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4004562	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4004564	      0xe800000000	                          call 0x4004569	        54	gettext.h	FUNCTION_164
0x4004569	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_164
0x400456c	      0xe9c7fdffff	                           jmp 0x4004338	        54	gettext.h	FUNCTION_164
0x4004571	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004576	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004579	      0xe800000000	                          call 0x400457e	       228	strbuf.h	FUNCTION_110	CALL_2
0x400457e	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004583	      0xe91affffff	                           jmp 0x40044a2	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004588	          0x4c89f7	                            mov rdi, r14	       980	sequencer.c	FUNCTION_34	CALL_4
0x400458b	      0xe800000000	                          call 0x4004590	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004590	            0x85c0	                           test eax, eax	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004592	     0xf8556ffffff	                           jne 0x40044ee	       980	sequencer.c	FUNCTION_34	CALL_4
0x4004598	          0x4889df	                            mov rdi, rbx	       982	sequencer.c	FUNCTION_34	CALL_5
0x400459b	      0xe800000000	                          call 0x40045a0	       982	sequencer.c	FUNCTION_34	CALL_5
0x40045a0	          0x4c89f7	                            mov rdi, r14	       983	sequencer.c	FUNCTION_34	CALL_6
0x40045a3	      0xe800000000	                          call 0x40045a8	       983	sequencer.c	FUNCTION_34	CALL_6
0x40045a8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40045ad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40045b2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40045b4	      0xe800000000	                          call 0x40045b9	        54	gettext.h	FUNCTION_164
0x40045b9	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_164
0x40045bc	      0xe951ffffff	                           jmp 0x4004512	        54	gettext.h	FUNCTION_164
0x40045c1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_164
0x40045c6	      0xe855bcffff	                       call sym._.part.6	        54	gettext.h	FUNCTION_164
0x40045cb	          0x4889c7	                            mov rdi, rax	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40045ce	            0x31c0	                            xor eax, eax	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40045d0	      0xe800000000	                          call 0x40045d5	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40045d5	      0xbf00000000	                              mov edi, 0	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40045da	      0xe841bcffff	                       call sym._.part.6	      1053	sequencer.c	FUNCTION_35	CALL_31
0x40045df	          0x4889c7	                            mov rdi, rax	      1005	sequencer.c	FUNCTION_35	CALL_3
0x40045e2	            0x31c0	                            xor eax, eax	      1005	sequencer.c	FUNCTION_35	CALL_3
0x40045e4	      0xe800000000	                          call 0x40045e9	      1005	sequencer.c	FUNCTION_35	CALL_3
0x40045e9	      0xe800000000	                          call 0x40045ee	      1068	sequencer.c	FUNCTION_35
0x40045ee	      0xbf00000000	                              mov edi, 0	      1068	sequencer.c	FUNCTION_35
0x40045f3	      0xe828bcffff	                       call sym._.part.6	      1068	sequencer.c	FUNCTION_35
0x40045f8	          0x4889c7	                            mov rdi, rax	      1007	sequencer.c	FUNCTION_35	CALL_6
0x40045fb	            0x31c0	                            xor eax, eax	      1007	sequencer.c	FUNCTION_35	CALL_6
0x40045fd	      0xe800000000	                          call 0x4004602	      1007	sequencer.c	FUNCTION_35	CALL_6
flush_rewritten_pending	functions,0:SWITCH,0:ELSE,0:WHILE,1:DO,0:IF,2:CALL,10:FOR,0	90
0x40000a0	            0x4154	                                push r12	      1457	sequencer.c	FUNCTION_46
0x40000a2	              0x55	                                push rbp	      1457	sequencer.c	FUNCTION_46
0x40000a3	              0x53	                                push rbx	      1457	sequencer.c	FUNCTION_46
0x40000a4	        0x4883ec40	                           sub rsp, 0x40	      1457	sequencer.c	FUNCTION_46
0x40000a8	    0x488b35000000	            mov rsi, qword [0x040000af] 	       123	sequencer.c	CALL_20
0x40000af	    0x64488b042528	                mov rax, qword fs:[0x28]	      1457	sequencer.c	FUNCTION_46
0x40000b8	      0x4889442438	             mov qword [rsp + 0x38], rax	      1457	sequencer.c	FUNCTION_46
0x40000bd	            0x31c0	                            xor eax, eax	      1457	sequencer.c	FUNCTION_46
0x40000bf	    0x48c704240000	                      mov qword [rsp], 0	      1458	sequencer.c	FUNCTION_46
0x40000c7	    0x48c744240800	                  mov qword [rsp + 8], 0	      1458	sequencer.c	FUNCTION_46
0x40000d0	          0x4885f6	                           test rsi, rsi	       123	sequencer.c	CALL_20
0x40000d3	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1458	sequencer.c	FUNCTION_46
0x40000dc	     0xf84e6000000	                            je 0x40001c8	       123	sequencer.c	CALL_20
0x40000e2	      0xba52000000	                           mov edx, 0x52	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40000e7	          0x4889e7	                            mov rdi, rsp	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40000ea	      0xe800000000	                          call 0x40000ef	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40000ef	          0x4885c0	                           test rax, rax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40000f2	     0xf8eaa000000	                           jle 0x40001a2	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x40000f8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x40000fd	      0xbf00000000	                              mov edi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4000102	      0xe800000000	                          call 0x4000107	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4000107	            0x85c0	                           test eax, eax	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x4000109	     0xf8593000000	                           jne 0x40001a2	      1462	sequencer.c	FUNCTION_46	IF_1	CALL_2
0x400010f	    0x488b3d000000	            mov rdi, qword [0x04000116] 	       122	sequencer.c	CALL_19
0x4000116	          0x4885ff	                           test rdi, rdi	       122	sequencer.c	CALL_19
0x4000119	     0xf84c2000000	                            je 0x40001e1	       122	sequencer.c	CALL_19
0x400011f	      0xbe00000000	                              mov esi, 0	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4000124	      0xe800000000	                          call 0x4000129	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4000129	          0x4885c0	                           test rax, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400012c	          0x4989c4	                            mov r12, rax	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x400012f	            0x7471	                            je 0x40001a2	      1463	sequencer.c	FUNCTION_46	IF_1	CALL_3
0x4000131	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      1465	sequencer.c	FUNCTION_46	IF_1
0x4000136	        0x807d0000	                       cmp byte [rbp], 0	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400013a	            0x750e	                           jne 0x400014a	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400013c	            0xeb4b	                           jmp 0x4000189	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400013e	            0x6690	                                     nop	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000140	        0x807b0100	                   cmp byte [rbx + 1], 0	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000144	        0x488d6b01	                      lea rbp, [rbx + 1]	      1473	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000148	            0x743f	                            je 0x4000189	      1467	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400014a	      0xbe0a000000	                            mov esi, 0xa	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400014f	          0x4889ef	                            mov rdi, rbp	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000152	      0xe800000000	                          call 0x4000157	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000157	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400015c	          0x4889c3	                            mov rbx, rax	      1468	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400015f	      0xe800000000	                          call 0x4000164	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x4000164	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_279
0x4000167	          0x4989c1	                             mov r9, rax	      1469	sequencer.c	FUNCTION_46	IF_1	WHILE_1
0x400016a	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_279
0x400016d	          0x4829e9	                            sub rcx, rbp	        97	stdio2.h	CALL_279
0x4000170	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x4000172	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x4000177	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400017c	          0x4c89e7	                            mov rdi, r12	        97	stdio2.h	CALL_279
0x400017f	      0xe800000000	                          call 0x4000184	        97	stdio2.h	CALL_279
0x4000184	          0x803b00	                       cmp byte [rbx], 0	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x4000187	            0x75b7	                           jne 0x4000140	      1471	sequencer.c	FUNCTION_46	IF_1	WHILE_1	IF_2
0x4000189	          0x4c89e7	                            mov rdi, r12	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_7
0x400018c	      0xe800000000	                          call 0x4000191	      1475	sequencer.c	FUNCTION_46	IF_1	CALL_7
0x4000191	    0x488b3d000000	            mov rdi, qword [0x04000198] 	       123	sequencer.c	CALL_20
0x4000198	          0x4885ff	                           test rdi, rdi	       123	sequencer.c	CALL_20
0x400019b	            0x745d	                            je 0x40001fa	       123	sequencer.c	CALL_20
0x400019d	      0xe800000000	                          call 0x40001a2	      1476	sequencer.c	FUNCTION_46	IF_1	CALL_9
0x40001a2	          0x4889e7	                            mov rdi, rsp	      1478	sequencer.c	FUNCTION_46	CALL_10
0x40001a5	      0xe800000000	                          call 0x40001aa	      1478	sequencer.c	FUNCTION_46	CALL_10
0x40001aa	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1479	sequencer.c	FUNCTION_46
0x40001af	    0x644833042528	                xor rax, qword fs:[0x28]	      1479	sequencer.c	FUNCTION_46
0x40001b8	            0x7558	                           jne 0x4000212	      1479	sequencer.c	FUNCTION_46
0x40001ba	        0x4883c440	                           add rsp, 0x40	      1479	sequencer.c	FUNCTION_46
0x40001be	              0x5b	                                 pop rbx	      1479	sequencer.c	FUNCTION_46
0x40001bf	              0x5d	                                 pop rbp	      1479	sequencer.c	FUNCTION_46
0x40001c0	            0x415c	                                 pop r12	      1479	sequencer.c	FUNCTION_46
0x40001c2	              0xc3	                                     ret	      1479	sequencer.c	FUNCTION_46
0x40001c3	       0xf1f440000	                   nop dword [rax + rax]	      1479	sequencer.c	FUNCTION_46
0x40001c8	      0xbf00000000	                              mov edi, 0	       123	sequencer.c	CALL_20
0x40001cd	      0xe800000000	                          call 0x40001d2	       123	sequencer.c	CALL_20
0x40001d2	          0x4889c6	                            mov rsi, rax	       123	sequencer.c	CALL_20
0x40001d5	    0x488905000000	            mov qword [0x040001dc], rax 	       123	sequencer.c	CALL_20
0x40001dc	      0xe901ffffff	                           jmp 0x40000e2	       123	sequencer.c	CALL_20
0x40001e1	      0xbf00000000	                              mov edi, 0	       122	sequencer.c	CALL_19
0x40001e6	      0xe800000000	                          call 0x40001eb	       122	sequencer.c	CALL_19
0x40001eb	          0x4889c7	                            mov rdi, rax	       122	sequencer.c	CALL_19
0x40001ee	    0x488905000000	            mov qword [0x040001f5], rax 	       122	sequencer.c	CALL_19
0x40001f5	      0xe925ffffff	                           jmp 0x400011f	       122	sequencer.c	CALL_19
0x40001fa	      0xbf00000000	                              mov edi, 0	       123	sequencer.c	CALL_20
0x40001ff	            0x31c0	                            xor eax, eax	       123	sequencer.c	CALL_20
0x4000201	      0xe800000000	                          call 0x4000206	       123	sequencer.c	CALL_20
0x4000206	          0x4889c7	                            mov rdi, rax	       123	sequencer.c	CALL_20
0x4000209	    0x488905000000	            mov qword [0x04000210], rax 	       123	sequencer.c	CALL_20
0x4000210	            0xeb8b	                           jmp 0x400019d	       123	sequencer.c	CALL_20
0x4000212	      0xe800000000	                          call 0x4000217	      1479	sequencer.c	FUNCTION_46
make_patch	functions,0:SWITCH,0:ELSE,1:WHILE,0:DO,0:IF,4:CALL,21:FOR,0	195
0x40022d0	            0x4156	                                push r14	      2406	sequencer.c	FUNCTION_74
0x40022d2	            0x4155	                                push r13	      2406	sequencer.c	FUNCTION_74
0x40022d4	        0x4c8d7704	                      lea r14, [rdi + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x40022d8	            0x4154	                                push r12	      2406	sequencer.c	FUNCTION_74
0x40022da	              0x55	                                push rbp	      2406	sequencer.c	FUNCTION_74
0x40022db	          0x4989f4	                            mov r12, rsi	      2406	sequencer.c	FUNCTION_74
0x40022de	              0x53	                                push rbx	      2406	sequencer.c	FUNCTION_74
0x40022df	          0x4889fd	                            mov rbp, rdi	      2406	sequencer.c	FUNCTION_74
0x40022e2	          0x4c89f7	                            mov rdi, r14	       312	sequencer.c	FUNCTION_10	CALL_1
0x40022e5	    0x4881ecf00800	                          sub rsp, 0x8f0	      2406	sequencer.c	FUNCTION_74
0x40022ec	    0x8b3500000000	            mov esi, dword [0x040022f2] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x40022f2	    0x64488b042528	                mov rax, qword fs:[0x28]	      2406	sequencer.c	FUNCTION_74
0x40022fb	    0x48898424e808	            mov qword [rsp + 0x8e8], rax	      2406	sequencer.c	FUNCTION_74
0x4002303	            0x31c0	                            xor eax, eax	      2406	sequencer.c	FUNCTION_74
0x4002305	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2407	sequencer.c	FUNCTION_74
0x400230e	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2407	sequencer.c	FUNCTION_74
0x4002317	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2407	sequencer.c	FUNCTION_74
0x4002320	      0xe800000000	                          call 0x4002325	       312	sequencer.c	FUNCTION_10	CALL_1
0x4002325	    0x488b1d000000	            mov rbx, qword [0x0400232c] 	       115	sequencer.c	CALL_18
0x400232c	          0x4989c5	                            mov r13, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x400232f	          0x4885db	                           test rbx, rbx	       115	sequencer.c	CALL_18
0x4002332	     0xf84c0020000	                            je 0x40025f8	       115	sequencer.c	CALL_18
0x4002338	          0x4c89ef	                            mov rdi, r13	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x400233b	      0xe800000000	                          call 0x4002340	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002340	      0xb901000000	                              mov ecx, 1	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002345	          0x4889da	                            mov rdx, rbx	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002348	          0x4889c6	                            mov rsi, rax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x400234b	          0x4c89ef	                            mov rdi, r13	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x400234e	      0xe89dfaffff	                  call sym.write_message	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002353	            0x85c0	                           test eax, eax	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x4002355	     0xf88f5020000	                            js 0x4002650	      2413	sequencer.c	FUNCTION_74	IF_1	CALL_4
0x400235b	          0x4531c9	                            xor r9d, r9d	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400235e	            0x31c9	                            xor ecx, ecx	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002360	    0x41b801000000	                              mov r8d, 1	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002366	          0x4c89f2	                            mov rdx, r14	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002369	      0xbe00000000	                              mov esi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400236e	      0xbf00000000	                              mov edi, 0	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002373	      0xe800000000	                          call 0x4002378	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002378	            0x31db	                            xor ebx, ebx	      2410	sequencer.c	FUNCTION_74
0x400237a	            0x85c0	                           test eax, eax	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x400237c	     0xf8556010000	                           jne 0x40024d8	      2415	sequencer.c	FUNCTION_74	IF_2	CALL_5
0x4002382	      0x41833c2402	                      cmp dword [r12], 2	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x4002387	     0xf847b010000	                            je 0x4002508	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x400238d	    0x488b05000000	            mov rax, qword [0x04002394] 	        38	sequencer.c	CALL_2
0x4002394	          0x4885c0	                           test rax, rax	        38	sequencer.c	CALL_2
0x4002397	     0xf8493020000	                            je 0x4002630	        38	sequencer.c	CALL_2
0x400239d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40023a2	      0x4c8d6c2430	                   lea r13, [rsp + 0x30]	        90	string3.h	FUNCTION_236	CALL_5
0x40023a7	          0x4889c2	                            mov rdx, rax	       201	sequencer.c	FUNCTION_4	CALL_3
0x40023aa	      0xbe00000000	                              mov esi, 0	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40023af	            0x31c0	                            xor eax, eax	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40023b1	      0xe800000000	                          call 0x40023b6	      2419	sequencer.c	FUNCTION_74	CALL_8
0x40023b6	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_236	CALL_5
0x40023b8	      0xb916010000	                          mov ecx, 0x116	        90	string3.h	FUNCTION_236	CALL_5
0x40023bd	          0x4c89ef	                            mov rdi, r13	        90	string3.h	FUNCTION_236	CALL_5
0x40023c0	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_236	CALL_5
0x40023c3	            0x31f6	                            xor esi, esi	      2421	sequencer.c	FUNCTION_74	CALL_9
0x40023c5	          0x4c89ef	                            mov rdi, r13	      2421	sequencer.c	FUNCTION_74	CALL_9
0x40023c8	      0xe800000000	                          call 0x40023cd	      2421	sequencer.c	FUNCTION_74	CALL_9
0x40023cd	     0xfb68424a900	           movzx eax, byte [rsp + 0xa9] 	      2426	sequencer.c	FUNCTION_74
0x40023d5	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2427	sequencer.c	FUNCTION_74
0x40023da	      0xbe00000000	                              mov esi, 0	      2427	sequencer.c	FUNCTION_74
0x40023df	    0x808c24ab0000	              or byte [rsp + 0xab], 0x80	      2425	sequencer.c	FUNCTION_74
0x40023e7	    0xc78424d00000	               mov dword [rsp + 0xd0], 0	      2422	sequencer.c	FUNCTION_74
0x40023f2	    0xc78424880500	          mov dword [rsp + 0x588], 0x10 	      2424	sequencer.c	FUNCTION_74
0x40023fd	          0x83c809	                               or eax, 9	      2426	sequencer.c	FUNCTION_74
0x4002400	    0x888424a90000	               mov byte [rsp + 0xa9], al	      2426	sequencer.c	FUNCTION_74
0x4002407	      0xe800000000	                          call 0x400240c	      2427	sequencer.c	FUNCTION_74
0x400240c	          0x4885c0	                           test rax, rax	      2429	sequencer.c	FUNCTION_74	IF_3
0x400240f	    0x488984242806	            mov qword [rsp + 0x628], rax	      2427	sequencer.c	FUNCTION_74
0x4002417	    0xc78424680500	              mov dword [rsp + 0x568], 0	      2428	sequencer.c	FUNCTION_74
0x4002422	     0xf84a0010000	                            je 0x40025c8	      2429	sequencer.c	FUNCTION_74	IF_3
0x4002428	          0x4c89ef	                            mov rdi, r13	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x400242b	          0x4889ee	                            mov rsi, rbp	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x400242e	      0xe800000000	                          call 0x4002433	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x4002433	    0x488bbc242806	           mov rdi, qword [rsp + 0x628] 	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x400243b	             0x9c3	                             or ebx, eax	      2432	sequencer.c	FUNCTION_74	ELSE_1	CALL_11
0x400243d	      0xe800000000	                          call 0x4002442	      2433	sequencer.c	FUNCTION_74	ELSE_1	CALL_12
0x4002442	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_109	IF_2
0x4002447	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_109
0x4002450	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x4002456	     0xf8454010000	                            je 0x40025b0	       165	strbuf.h	FUNCTION_109	IF_2
0x400245c	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x400245f	      0x41833c2402	                      cmp dword [r12], 2	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x4002464	     0xf8416010000	                            je 0x4002580	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x400246a	    0x488b05000000	            mov rax, qword [0x04002471] 	        38	sequencer.c	CALL_2
0x4002471	          0x4885c0	                           test rax, rax	        38	sequencer.c	CALL_2
0x4002474	     0xf849e010000	                            je 0x4002618	        38	sequencer.c	CALL_2
0x400247a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2437	sequencer.c	FUNCTION_74	CALL_14
0x400247f	          0x4889c2	                            mov rdx, rax	       201	sequencer.c	FUNCTION_4	CALL_3
0x4002482	      0xbe00000000	                              mov esi, 0	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002487	            0x31c0	                            xor eax, eax	      2437	sequencer.c	FUNCTION_74	CALL_14
0x4002489	      0xe800000000	                          call 0x400248e	      2437	sequencer.c	FUNCTION_74	CALL_14
0x400248e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4002493	      0xe800000000	                          call 0x4002498	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x4002498	            0x85c0	                           test eax, eax	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x400249a	     0xf8490000000	                            je 0x4002530	      2438	sequencer.c	FUNCTION_74	IF_4	CALL_15
0x40024a0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2444	sequencer.c	FUNCTION_74	CALL_21
0x40024a5	      0xe800000000	                          call 0x40024aa	      2444	sequencer.c	FUNCTION_74	CALL_21
0x40024aa	            0x89d8	                            mov eax, ebx	      2446	sequencer.c	FUNCTION_74
0x40024ac	    0x488b8c24e808	           mov rcx, qword [rsp + 0x8e8] 	      2447	sequencer.c	FUNCTION_74
0x40024b4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2447	sequencer.c	FUNCTION_74
0x40024bd	     0xf8597010000	                           jne 0x400265a	      2447	sequencer.c	FUNCTION_74
0x40024c3	    0x4881c4f00800	                          add rsp, 0x8f0	      2447	sequencer.c	FUNCTION_74
0x40024ca	              0x5b	                                 pop rbx	      2447	sequencer.c	FUNCTION_74
0x40024cb	              0x5d	                                 pop rbp	      2447	sequencer.c	FUNCTION_74
0x40024cc	            0x415c	                                 pop r12	      2447	sequencer.c	FUNCTION_74
0x40024ce	            0x415d	                                 pop r13	      2447	sequencer.c	FUNCTION_74
0x40024d0	            0x415e	                                 pop r14	      2447	sequencer.c	FUNCTION_74
0x40024d2	              0xc3	                                     ret	      2447	sequencer.c	FUNCTION_74
0x40024d3	       0xf1f440000	                   nop dword [rax + rax]	      2447	sequencer.c	FUNCTION_74
0x40024d8	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40024da	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40024df	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40024e4	      0xe800000000	                          call 0x40024e9	        54	gettext.h	FUNCTION_164
0x40024e9	      0xbe00000000	                              mov esi, 0	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40024ee	          0x4889c7	                            mov rdi, rax	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40024f1	            0x31c0	                            xor eax, eax	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40024f3	      0xe800000000	                          call 0x40024f8	      2417	sequencer.c	FUNCTION_74	CALL_6
0x40024f8	      0x41833c2402	                      cmp dword [r12], 2	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x40024fd	      0xbbffffffff	                     mov ebx, 0xffffffff	      2417	sequencer.c	FUNCTION_74	CALL_6
0x4002502	     0xf8585feffff	                           jne 0x400238d	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x4002508	    0x488b05000000	            mov rax, qword [0x0400250f] 	        45	sequencer.c	CALL_7
0x400250f	          0x4885c0	                           test rax, rax	        45	sequencer.c	CALL_7
0x4002512	     0xf8585feffff	                           jne 0x400239d	        45	sequencer.c	CALL_7
0x4002518	      0xbf00000000	                              mov edi, 0	        45	sequencer.c	CALL_7
0x400251d	      0xe800000000	                          call 0x4002522	        45	sequencer.c	CALL_7
0x4002522	    0x488905000000	            mov qword [0x04002529], rax 	        45	sequencer.c	CALL_7
0x4002529	      0xe96ffeffff	                           jmp 0x400239d	        45	sequencer.c	CALL_7
0x400252e	            0x6690	                                     nop	        45	sequencer.c	CALL_7
0x4002530	            0x31f6	                            xor esi, esi	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4002532	          0x4889ef	                            mov rdi, rbp	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4002535	      0xe800000000	                          call 0x400253a	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x400253a	      0x488d742408	                      lea rsi, [rsp + 8]	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x400253f	          0x4889c7	                            mov rdi, rax	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x4002542	          0x4989c4	                            mov r12, rax	      2439	sequencer.c	FUNCTION_74	IF_4	CALL_16
0x4002545	      0xe800000000	                          call 0x400254a	      2440	sequencer.c	FUNCTION_74	IF_4	CALL_17
0x400254a	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400254f	          0x4c89ef	                            mov rdi, r13	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002552	      0xe800000000	                          call 0x4002557	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002557	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400255c	          0x4c89ef	                            mov rdi, r13	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400255f	      0xb901000000	                              mov ecx, 1	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002564	          0x4889c6	                            mov rsi, rax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002567	      0xe884f8ffff	                  call sym.write_message	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x400256c	          0x4c89e6	                            mov rsi, r12	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x400256f	          0x4889ef	                            mov rdi, rbp	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4002572	             0x9c3	                             or ebx, eax	      2441	sequencer.c	FUNCTION_74	IF_4	CALL_19
0x4002574	      0xe800000000	                          call 0x4002579	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4002579	      0xe922ffffff	                           jmp 0x40024a0	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x400257e	            0x6690	                                     nop	      2442	sequencer.c	FUNCTION_74	IF_4	CALL_20
0x4002580	    0x488b05000000	            mov rax, qword [0x04002587] 	        45	sequencer.c	CALL_7
0x4002587	          0x4885c0	                           test rax, rax	        45	sequencer.c	CALL_7
0x400258a	     0xf85eafeffff	                           jne 0x400247a	        45	sequencer.c	CALL_7
0x4002590	      0xbf00000000	                              mov edi, 0	        45	sequencer.c	CALL_7
0x4002595	      0xe800000000	                          call 0x400259a	        45	sequencer.c	CALL_7
0x400259a	    0x488905000000	            mov qword [0x040025a1], rax 	        45	sequencer.c	CALL_7
0x40025a1	      0xe9d4feffff	                           jmp 0x400247a	        45	sequencer.c	CALL_7
0x40025a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        45	sequencer.c	CALL_7
0x40025b0	    0x803d00000000	                cmp byte [0x040025b7], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x40025b7	     0xf84a2feffff	                            je 0x400245f	       168	strbuf.h	FUNCTION_109	CALL_2
0x40025bd	      0xe800000000	                          call 0x40025c2	       168	strbuf.h	FUNCTION_109	CALL_2
0x40025c2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x40025c8	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40025cd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40025d2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40025d7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40025d9	      0xe800000000	                          call 0x40025de	        54	gettext.h	FUNCTION_164
0x40025de	          0x4889de	                            mov rsi, rbx	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40025e1	          0x4889c7	                            mov rdi, rax	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40025e4	            0x31c0	                            xor eax, eax	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40025e6	      0xe800000000	                          call 0x40025eb	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40025eb	      0xbbffffffff	                     mov ebx, 0xffffffff	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40025f0	      0xe94dfeffff	                           jmp 0x4002442	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40025f5	           0xf1f00	                         nop dword [rax]	      2430	sequencer.c	FUNCTION_74	CALL_10
0x40025f8	      0xbf00000000	                              mov edi, 0	       115	sequencer.c	CALL_18
0x40025fd	            0x31c0	                            xor eax, eax	       115	sequencer.c	CALL_18
0x40025ff	      0xe800000000	                          call 0x4002604	       115	sequencer.c	CALL_18
0x4002604	          0x4889c3	                            mov rbx, rax	       115	sequencer.c	CALL_18
0x4002607	    0x488905000000	            mov qword [0x0400260e], rax 	       115	sequencer.c	CALL_18
0x400260e	      0xe925fdffff	                           jmp 0x4002338	       115	sequencer.c	CALL_18
0x4002613	       0xf1f440000	                   nop dword [rax + rax]	       115	sequencer.c	CALL_18
0x4002618	      0xbf00000000	                              mov edi, 0	        38	sequencer.c	CALL_2
0x400261d	      0xe800000000	                          call 0x4002622	        38	sequencer.c	CALL_2
0x4002622	    0x488905000000	            mov qword [0x04002629], rax 	        38	sequencer.c	CALL_2
0x4002629	      0xe94cfeffff	                           jmp 0x400247a	        38	sequencer.c	CALL_2
0x400262e	            0x6690	                                     nop	        38	sequencer.c	CALL_2
0x4002630	      0xbf00000000	                              mov edi, 0	        38	sequencer.c	CALL_2
0x4002635	      0xe800000000	                          call 0x400263a	        38	sequencer.c	CALL_2
0x400263a	    0x488905000000	            mov qword [0x04002641], rax 	        38	sequencer.c	CALL_2
0x4002641	      0xe957fdffff	                           jmp 0x400239d	        38	sequencer.c	CALL_2
0x4002646	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        38	sequencer.c	CALL_2
0x4002650	      0xb8ffffffff	                     mov eax, 0xffffffff	      2414	sequencer.c	FUNCTION_74	IF_1
0x4002655	      0xe952feffff	                           jmp 0x40024ac	      2414	sequencer.c	FUNCTION_74	IF_1
0x400265a	      0xe800000000	                          call 0x400265f	      2447	sequencer.c	FUNCTION_74
fast_forward_to	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,2:CALL,15:FOR,0	120
0x4000d90	            0x4155	                                push r13	       458	sequencer.c	FUNCTION_19
0x4000d92	            0x4154	                                push r12	       458	sequencer.c	FUNCTION_19
0x4000d94	          0x4989fc	                            mov r12, rdi	       458	sequencer.c	FUNCTION_19
0x4000d97	              0x55	                                push rbp	       458	sequencer.c	FUNCTION_19
0x4000d98	              0x53	                                push rbx	       458	sequencer.c	FUNCTION_19
0x4000d99	      0xbf00000000	                              mov edi, 0	       463	sequencer.c	FUNCTION_19
0x4000d9e	          0x4889f3	                            mov rbx, rsi	       458	sequencer.c	FUNCTION_19
0x4000da1	          0x4189d5	                           mov r13d, edx	       458	sequencer.c	FUNCTION_19
0x4000da4	          0x4889cd	                            mov rbp, rcx	       458	sequencer.c	FUNCTION_19
0x4000da7	        0x4883ec48	                           sub rsp, 0x48	       458	sequencer.c	FUNCTION_19
0x4000dab	    0x64488b042528	                mov rax, qword fs:[0x28]	       458	sequencer.c	FUNCTION_19
0x4000db4	      0x4889442438	             mov qword [rsp + 0x38], rax	       458	sequencer.c	FUNCTION_19
0x4000db9	            0x31c0	                            xor eax, eax	       458	sequencer.c	FUNCTION_19
0x4000dbb	    0x48c704240000	                      mov qword [rsp], 0	       460	sequencer.c	FUNCTION_19
0x4000dc3	    0x48c744240800	                  mov qword [rsp + 8], 0	       460	sequencer.c	FUNCTION_19
0x4000dcc	    0x48c744241000	               mov qword [rsp + 0x10], 0	       460	sequencer.c	FUNCTION_19
0x4000dd5	    0x48c744242000	               mov qword [rsp + 0x20], 0	       461	sequencer.c	FUNCTION_19
0x4000dde	    0x48c744242800	               mov qword [rsp + 0x28], 0	       461	sequencer.c	FUNCTION_19
0x4000de7	    0x48c744243000	               mov qword [rsp + 0x30], 0	       461	sequencer.c	FUNCTION_19
0x4000df0	      0xe800000000	                          call 0x4000df5	       463	sequencer.c	FUNCTION_19
0x4000df5	      0xba01000000	                              mov edx, 1	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4000dfa	          0x4c89e6	                            mov rsi, r12	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4000dfd	          0x4889df	                            mov rdi, rbx	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4000e00	      0xe800000000	                          call 0x4000e05	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4000e05	            0x85c0	                           test eax, eax	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4000e07	     0xf855b010000	                           jne 0x4000f68	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4000e0d	          0x8b6d00	                    mov ebp, dword [rbp]	       464	sequencer.c	FUNCTION_19	IF_1	CALL_1
0x4000e10	          0x83fd01	                              cmp ebp, 1	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4000e13	     0xf8407010000	                            je 0x4000f20	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4000e19	            0x722d	                            jb 0x4000e48	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4000e1b	          0x83fd02	                              cmp ebp, 2	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4000e1e	      0xbe00000000	                              mov esi, 0	       298	sequencer.c	FUNCTION_9	SWITCH_1
0x4000e23	            0x7428	                            je 0x4000e4d	       292	sequencer.c	FUNCTION_9	SWITCH_1
0x4000e25	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4000e2a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4000e2c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4000e31	      0xe800000000	                          call 0x4000e36	        54	gettext.h	FUNCTION_164
0x4000e36	            0x89ee	                            mov esi, ebp	       300	sequencer.c	FUNCTION_9	CALL_2
0x4000e38	          0x4889c7	                            mov rdi, rax	       300	sequencer.c	FUNCTION_9	CALL_2
0x4000e3b	            0x31c0	                            xor eax, eax	       300	sequencer.c	FUNCTION_9	CALL_2
0x4000e3d	      0xe800000000	                          call 0x4000e42	       300	sequencer.c	FUNCTION_9	CALL_2
0x4000e42	    0x660f1f440000	                    nop word [rax + rax]	       300	sequencer.c	FUNCTION_9	CALL_2
0x4000e48	      0xbe00000000	                              mov esi, 0	       294	sequencer.c	FUNCTION_9	SWITCH_1
0x4000e4d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4000e4f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4000e54	      0xe800000000	                          call 0x4000e59	        54	gettext.h	FUNCTION_164
0x4000e59	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4000e5b	          0x4889c5	                            mov rbp, rax	        54	gettext.h	FUNCTION_164
0x4000e5e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4000e63	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4000e68	      0xe800000000	                          call 0x4000e6d	        54	gettext.h	FUNCTION_164
0x4000e6d	          0x4889ea	                            mov rdx, rbp	       467	sequencer.c	FUNCTION_19	CALL_5
0x4000e70	          0x4889c6	                            mov rsi, rax	       467	sequencer.c	FUNCTION_19	CALL_5
0x4000e73	          0x4889e7	                            mov rdi, rsp	       467	sequencer.c	FUNCTION_19	CALL_5
0x4000e76	            0x31c0	                            xor eax, eax	       467	sequencer.c	FUNCTION_19	CALL_5
0x4000e78	      0xe800000000	                          call 0x4000e7d	       467	sequencer.c	FUNCTION_19	CALL_5
0x4000e7d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       469	sequencer.c	FUNCTION_19	CALL_6
0x4000e82	      0xe800000000	                          call 0x4000e87	       469	sequencer.c	FUNCTION_19	CALL_6
0x4000e87	          0x4885c0	                           test rax, rax	       470	sequencer.c	FUNCTION_19	IF_2
0x4000e8a	          0x4889c5	                            mov rbp, rax	       469	sequencer.c	FUNCTION_19	CALL_6
0x4000e8d	     0xf849d000000	                            je 0x4000f30	       470	sequencer.c	FUNCTION_19	IF_2
0x4000e93	          0x4585ed	                         test r13d, r13d	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000e96	      0xb900000000	                              mov ecx, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000e9b	          0x4c89e2	                            mov rdx, r12	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000e9e	        0x480f44cb	                          cmove rcx, rbx	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000ea2	        0x4883ec08	                              sub rsp, 8	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000ea6	          0x4531c0	                            xor r8d, r8d	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000ea9	      0x488d442428	                   lea rax, [rsp + 0x28]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000eae	      0xbe00000000	                              mov esi, 0	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000eb3	          0x4889ef	                            mov rdi, rbp	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000eb6	              0x50	                                push rax	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000eb7	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000ebc	      0xe800000000	                          call 0x4000ec1	       471	sequencer.c	FUNCTION_19	IF_2	CALL_7
0x4000ec1	            0x85c0	                           test eax, eax	       470	sequencer.c	FUNCTION_19	IF_2
0x4000ec3	              0x5a	                                 pop rdx	       470	sequencer.c	FUNCTION_19	IF_2
0x4000ec4	              0x59	                                 pop rcx	       470	sequencer.c	FUNCTION_19	IF_2
0x4000ec5	            0x7569	                           jne 0x4000f30	       470	sequencer.c	FUNCTION_19	IF_2
0x4000ec7	      0x488d742420	                   lea rsi, [rsp + 0x20]	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4000ecc	          0x4889ef	                            mov rdi, rbp	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4000ecf	      0xe800000000	                          call 0x4000ed4	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4000ed4	            0x85c0	                           test eax, eax	       473	sequencer.c	FUNCTION_19	IF_2
0x4000ed6	            0x89c3	                            mov ebx, eax	       474	sequencer.c	FUNCTION_19	IF_2	CALL_8
0x4000ed8	            0x7556	                           jne 0x4000f30	       473	sequencer.c	FUNCTION_19	IF_2
0x4000eda	          0x4889e7	                            mov rdi, rsp	       482	sequencer.c	FUNCTION_19	CALL_12
0x4000edd	      0xe800000000	                          call 0x4000ee2	       482	sequencer.c	FUNCTION_19	CALL_12
0x4000ee2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       483	sequencer.c	FUNCTION_19	CALL_13
0x4000ee7	      0xe800000000	                          call 0x4000eec	       483	sequencer.c	FUNCTION_19	CALL_13
0x4000eec	          0x4889ef	                            mov rdi, rbp	       484	sequencer.c	FUNCTION_19	CALL_14
0x4000eef	      0xe800000000	                          call 0x4000ef4	       484	sequencer.c	FUNCTION_19	CALL_14
0x4000ef4	      0xe837f3ffff	       call sym.update_abort_safety_file	       485	sequencer.c	FUNCTION_19	CALL_15
0x4000ef9	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       487	sequencer.c	FUNCTION_19
0x4000efe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       487	sequencer.c	FUNCTION_19
0x4000f07	            0x89d8	                            mov eax, ebx	       487	sequencer.c	FUNCTION_19
0x4000f09	            0x7564	                           jne 0x4000f6f	       487	sequencer.c	FUNCTION_19
0x4000f0b	        0x4883c448	                           add rsp, 0x48	       487	sequencer.c	FUNCTION_19
0x4000f0f	              0x5b	                                 pop rbx	       487	sequencer.c	FUNCTION_19
0x4000f10	              0x5d	                                 pop rbp	       487	sequencer.c	FUNCTION_19
0x4000f11	            0x415c	                                 pop r12	       487	sequencer.c	FUNCTION_19
0x4000f13	            0x415d	                                 pop r13	       487	sequencer.c	FUNCTION_19
0x4000f15	              0xc3	                                     ret	       487	sequencer.c	FUNCTION_19
0x4000f16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       487	sequencer.c	FUNCTION_19
0x4000f20	      0xbe00000000	                              mov esi, 0	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x4000f25	      0xe923ffffff	                           jmp 0x4000e4d	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x4000f2a	    0x660f1f440000	                    nop word [rax + rax]	       296	sequencer.c	FUNCTION_9	SWITCH_1
0x4000f30	          0x4889ef	                            mov rdi, rbp	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x4000f33	      0xbbffffffff	                     mov ebx, 0xffffffff	       479	sequencer.c	FUNCTION_19	IF_2
0x4000f38	      0xe800000000	                          call 0x4000f3d	       475	sequencer.c	FUNCTION_19	IF_2	CALL_9
0x4000f3d	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       476	sequencer.c	FUNCTION_19	IF_2
0x4000f42	      0xbf00000000	                              mov edi, 0	       476	sequencer.c	FUNCTION_19	IF_2
0x4000f47	            0x31c0	                            xor eax, eax	       476	sequencer.c	FUNCTION_19	IF_2
0x4000f49	      0xe800000000	                          call 0x4000f4e	       476	sequencer.c	FUNCTION_19	IF_2
0x4000f4e	          0x4889e7	                            mov rdi, rsp	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x4000f51	      0xe800000000	                          call 0x4000f56	       477	sequencer.c	FUNCTION_19	IF_2	CALL_10
0x4000f56	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x4000f5b	      0xe800000000	                          call 0x4000f60	       478	sequencer.c	FUNCTION_19	IF_2	CALL_11
0x4000f60	            0xeb97	                           jmp 0x4000ef9	       479	sequencer.c	FUNCTION_19	IF_2
0x4000f62	    0x660f1f440000	                    nop word [rax + rax]	       479	sequencer.c	FUNCTION_19	IF_2
0x4000f68	      0xbbffffffff	                     mov ebx, 0xffffffff	       465	sequencer.c	FUNCTION_19	IF_1
0x4000f6d	            0xeb8a	                           jmp 0x4000ef9	       465	sequencer.c	FUNCTION_19	IF_1
0x4000f6f	      0xe800000000	                          call 0x4000f74	       487	sequencer.c	FUNCTION_19
sequencer_init_config	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,0:CALL,1:FOR,0	4
0x4003400	          0x4889fe	                            mov rsi, rdi	       187	sequencer.c	FUNCTION_2
0x4003403	    0xc74738010000	               mov dword [rdi + 0x38], 1	       188	sequencer.c	FUNCTION_2
0x400340a	      0xbf00000000	                              mov edi, 0	       189	sequencer.c	FUNCTION_2	CALL_1
0x400340f	      0xe900000000	                           jmp 0x4003414	       189	sequencer.c	FUNCTION_2	CALL_1
do_pick_commit	functions,0:SWITCH,0:ELSE,12:WHILE,0:DO,0:IF,38:CALL,94:FOR,1	1701
0x4004f10	            0x4157	                                push r15	      1497	sequencer.c	FUNCTION_48
0x4004f12	            0x4156	                                push r14	      1497	sequencer.c	FUNCTION_48
0x4004f14	            0x4155	                                push r13	      1497	sequencer.c	FUNCTION_48
0x4004f16	            0x4154	                                push r12	      1497	sequencer.c	FUNCTION_48
0x4004f18	          0x4189fc	                           mov r12d, edi	      1497	sequencer.c	FUNCTION_48
0x4004f1b	              0x55	                                push rbp	      1497	sequencer.c	FUNCTION_48
0x4004f1c	              0x53	                                push rbx	      1497	sequencer.c	FUNCTION_48
0x4004f1d	          0x4889f5	                            mov rbp, rsi	      1497	sequencer.c	FUNCTION_48
0x4004f20	          0x4889d3	                            mov rbx, rdx	      1497	sequencer.c	FUNCTION_48
0x4004f23	    0x4881ec980100	                          sub rsp, 0x198	      1497	sequencer.c	FUNCTION_48
0x4004f2a	        0x448b5a04	               mov r11d, dword [rdx + 4]	      1498	sequencer.c	FUNCTION_48
0x4004f2e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1497	sequencer.c	FUNCTION_48
0x4004f37	    0x488984248801	            mov qword [rsp + 0x188], rax	      1497	sequencer.c	FUNCTION_48
0x4004f3f	            0x31c0	                            xor eax, eax	      1497	sequencer.c	FUNCTION_48
0x4004f41	        0x894c2468	             mov dword [rsp + 0x68], ecx	      1497	sequencer.c	FUNCTION_48
0x4004f45	          0x4585db	                         test r11d, r11d	      1498	sequencer.c	FUNCTION_48
0x4004f48	     0xf8412040000	                            je 0x4005360	      1498	sequencer.c	FUNCTION_48
0x4004f4e	    0xc74424580e00	            mov dword [rsp + 0x58], 0xe 	      1498	sequencer.c	FUNCTION_48
0x4004f56	    0xc74424480600	               mov dword [rsp + 0x48], 6	      1498	sequencer.c	FUNCTION_48
0x4004f5e	    0xc74424280200	               mov dword [rsp + 0x28], 2	      1498	sequencer.c	FUNCTION_48
0x4004f66	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4004f6f	        0x448b530c	            mov r10d, dword [rbx + 0xc] 	      1508	sequencer.c	FUNCTION_48	IF_1
0x4004f73	    0x488d84243001	                  lea rax, [rsp + 0x130]	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004f7b	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      1505	sequencer.c	FUNCTION_48
0x4004f87	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      1505	sequencer.c	FUNCTION_48
0x4004f93	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1505	sequencer.c	FUNCTION_48
0x4004f9f	      0x4889442420	             mov qword [rsp + 0x20], rax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004fa4	          0x4585d2	                         test r10d, r10d	      1508	sequencer.c	FUNCTION_48	IF_1
0x4004fa7	     0xf84e3030000	                            je 0x4005390	      1508	sequencer.c	FUNCTION_48	IF_1
0x4004fad	            0x31d2	                            xor edx, edx	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004faf	            0x31f6	                            xor esi, esi	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004fb1	          0x4889c7	                            mov rdi, rax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004fb4	      0xe800000000	                          call 0x4004fb9	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004fb9	            0x85c0	                           test eax, eax	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004fbb	     0xf8587100000	                           jne 0x4006048	      1515	sequencer.c	FUNCTION_48	IF_1	IF_2	CALL_2
0x4004fc1	          0x4531f6	                          xor r14d, r14d	      1506	sequencer.c	FUNCTION_48
0x4004fc4	      0xbf00000000	                              mov edi, 0	      1525	sequencer.c	FUNCTION_48
0x4004fc9	      0xe800000000	                          call 0x4004fce	      1525	sequencer.c	FUNCTION_48
0x4004fce	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      1527	sequencer.c	FUNCTION_48	IF_5
0x4004fd2	          0x4885c0	                           test rax, rax	      1527	sequencer.c	FUNCTION_48	IF_5
0x4004fd5	     0xf84860d0000	                            je 0x4005d61	      1527	sequencer.c	FUNCTION_48	IF_5
0x4004fdb	        0x488b4808	                mov rcx, qword [rax + 8]	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x4004fdf	          0x4885c9	                           test rcx, rcx	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x4004fe2	     0xf84780a0000	                            je 0x4005a60	      1529	sequencer.c	FUNCTION_48	ELSE_2	IF_6
0x4004fe8	        0x448b6b2c	           mov r13d, dword [rbx + 0x2c] 	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x4004fec	          0x4585ed	                         test r13d, r13d	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x4004fef	     0xf84ed150000	                            je 0x40065e2	      1534	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7
0x4004ff5	        0x4183fd01	                             cmp r13d, 1	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004ff9	            0x742b	                            je 0x4005026	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4004ffb	      0xba01000000	                              mov edx, 1	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005000	          0x4889c8	                            mov rax, rcx	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005003	            0xeb10	                           jmp 0x4005015	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005005	           0xf1f00	                         nop dword [rax]	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005008	          0x4885c0	                           test rax, rax	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400500b	     0xf84df100000	                            je 0x40060f0	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005011	        0x488b4008	                mov rax, qword [rax + 8]	      1539	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005015	          0x83c201	                              add edx, 1	      1540	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x4005018	          0x4139d5	                           cmp r13d, edx	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400501b	            0x75eb	                           jne 0x4005008	      1538	sequencer.c	FUNCTION_48	ELSE_2	IF_6	FOR_1
0x400501d	          0x4885c0	                           test rax, rax	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4005020	     0xf84ca100000	                            je 0x40060f0	      1542	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8
0x4005026	          0x4c8b28	                    mov r13, qword [rax]	      1550	sequencer.c	FUNCTION_48	ELSE_4
0x4005029	      0xe800000000	                          call 0x400502e	       320	sequencer.c	FUNCTION_11	CALL_2
0x400502e	            0x31f6	                            xor esi, esi	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005030	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005033	          0x4889ef	                            mov rdi, rbp	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005036	      0xe800000000	                          call 0x400503b	       320	sequencer.c	FUNCTION_11	CALL_2
0x400503b	        0x488d4d04	                      lea rcx, [rbp + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x400503f	    0x8b3500000000	            mov esi, dword [0x04005045] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005045	      0x4889442408	                mov qword [rsp + 8], rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x400504a	          0x4889cf	                            mov rdi, rcx	       312	sequencer.c	FUNCTION_10	CALL_1
0x400504d	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005052	      0xe800000000	                          call 0x4005057	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005057	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	       323	sequencer.c	FUNCTION_11	CALL_4
0x400505f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005064	          0x4989c7	                            mov r15, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005067	          0x4889ce	                            mov rsi, rcx	       323	sequencer.c	FUNCTION_11	CALL_4
0x400506a	      0x48894c2440	             mov qword [rsp + 0x40], rcx	       323	sequencer.c	FUNCTION_11	CALL_4
0x400506f	      0xe800000000	                          call 0x4005074	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005074	    0x488bbc240001	           mov rdi, qword [rsp + 0x100] 	       325	sequencer.c	FUNCTION_11	CALL_5
0x400507c	          0x4863f0	                         movsxd rsi, eax	       325	sequencer.c	FUNCTION_11	CALL_5
0x400507f	      0xe800000000	                          call 0x4005084	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005084	          0x4c89fe	                            mov rsi, r15	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005087	          0x4889c2	                            mov rdx, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x400508a	      0x4889442430	             mov qword [rsp + 0x30], rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x400508f	      0xbf00000000	                              mov edi, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005094	            0x31c0	                            xor eax, eax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005096	      0xe800000000	                          call 0x400509b	       326	sequencer.c	FUNCTION_11	CALL_6
0x400509b	      0xbf00000000	                              mov edi, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x40050a0	      0x4889442418	             mov qword [rsp + 0x18], rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x40050a5	          0x4889c6	                            mov rsi, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x40050a8	            0x31c0	                            xor eax, eax	       327	sequencer.c	FUNCTION_11	CALL_7
0x40050aa	      0xe800000000	                          call 0x40050af	       327	sequencer.c	FUNCTION_11	CALL_7
0x40050af	        0x448b4314	            mov r8d, dword [rbx + 0x14] 	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40050b3	      0x4889442410	             mov qword [rsp + 0x10], rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x40050b8	          0x4585c0	                           test r8d, r8d	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40050bb	     0xf853f030000	                           jne 0x4005400	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x40050c1	          0x4d85ed	                           test r13, r13	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x40050c4	            0x7412	                            je 0x40050d8	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x40050c6	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_106	CALL_1
0x40050c8	          0x4c89ef	                            mov rdi, r13	        75	commit.h	FUNCTION_106	CALL_1
0x40050cb	      0xe800000000	                          call 0x40050d0	        75	commit.h	FUNCTION_106	CALL_1
0x40050d0	            0x85c0	                           test eax, eax	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x40050d2	     0xf88370d0000	                            js 0x4005e0f	      1569	sequencer.c	FUNCTION_48	IF_14	CALL_22
0x40050d8	        0x4183fc01	                             cmp r12d, 1	      1583	sequencer.c	FUNCTION_48	IF_15
0x40050dc	     0xf847e080000	                            je 0x4005960	      1583	sequencer.c	FUNCTION_48	IF_15
0x40050e2	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40050ea	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40050ef	          0x4889c6	                            mov rsi, rax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40050f2	      0x4889442460	             mov qword [rsp + 0x60], rax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40050f7	      0xe800000000	                          call 0x40050fc	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40050fc	            0x85c0	                           test eax, eax	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x40050fe	     0xf859c0a0000	                           jne 0x4005ba0	      1607	sequencer.c	FUNCTION_48	ELSE_5	IF_17	CALL_35
0x4005104	          0x8b7b08	                mov edi, dword [rbx + 8]	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4005107	            0x85ff	                           test edi, edi	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x4005109	     0xf8591090000	                           jne 0x4005aa0	      1610	sequencer.c	FUNCTION_48	ELSE_5	IF_18
0x400510f	      0x418d4424fc	                      lea eax, [r12 - 4]	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4005114	          0x83f801	                              cmp eax, 1	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x4005117	     0xf8693050000	                           jbe 0x40056b0	      1618	sequencer.c	FUNCTION_48	ELSE_5	IF_20	CALL_44
0x400511d	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       678	sequencer.c	FUNCTION_25	CALL_1
0x4005122	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       678	sequencer.c	FUNCTION_25	CALL_1
0x4005127	      0xbe00000000	                              mov esi, 0	       678	sequencer.c	FUNCTION_25	CALL_1
0x400512c	      0xe800000000	                          call 0x4005131	       678	sequencer.c	FUNCTION_25	CALL_1
0x4005131	          0x4885c0	                           test rax, rax	       679	sequencer.c	FUNCTION_25	IF_1
0x4005134	     0xf84c3140000	                            je 0x40065fd	       679	sequencer.c	FUNCTION_25	IF_1
0x400513a	    0x488bb4240001	           mov rsi, qword [rsp + 0x100] 	       680	sequencer.c	FUNCTION_25	CALL_2
0x4005142	          0x4889c7	                            mov rdi, rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x4005145	      0xe800000000	                          call 0x400514a	       680	sequencer.c	FUNCTION_25	CALL_2
0x400514a	      0x4889442448	             mov qword [rsp + 0x48], rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x400514f	        0x4183fc03	                             cmp r12d, 3	      1623	sequencer.c	FUNCTION_48	IF_21
0x4005153	      0xb812000000	                           mov eax, 0x12	      1623	sequencer.c	FUNCTION_48	IF_21
0x4005158	          0x8b7310	            mov esi, dword [rbx + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x400515b	       0xf45442428	          cmovne eax, dword [rsp + 0x28]	      1623	sequencer.c	FUNCTION_48	IF_21
0x4005160	            0x85f6	                           test esi, esi	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005162	        0x89442428	             mov dword [rsp + 0x28], eax	      1623	sequencer.c	FUNCTION_48	IF_21
0x4005166	     0xf8504050000	                           jne 0x4005670	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x400516c	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005171	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005176	    0x4c8db424a000	                   lea r14, [rsp + 0xa0]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x400517e	          0x4989ea	                            mov r10, rbp	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005181	          0x833b02	                      cmp dword [rbx], 2	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005184	     0xf84a60b0000	                            je 0x4005d30	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x400518a	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x400518e	          0x4885f6	                           test rsi, rsi	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005191	     0xf8489030000	                            je 0x4005520	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x4005197	      0xbf00000000	                              mov edi, 0	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x400519c	      0xb90a000000	                            mov ecx, 0xa	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x40051a1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x40051a3	     0xf8477030000	                            je 0x4005520	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x40051a9	        0x4183fc01	                             cmp r12d, 1	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x40051ad	     0xf846d030000	                            je 0x4005520	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x40051b3	      0x4c89542458	             mov qword [rsp + 0x58], r10	      1650	sequencer.c	FUNCTION_48	ELSE_9	IF_29
0x40051b8	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      1658	sequencer.c	FUNCTION_48	ELSE_10
0x40051c4	    0x48c784240001	              mov qword [rsp + 0x100], 0	      1659	sequencer.c	FUNCTION_48	ELSE_10
0x40051d0	      0xe800000000	                          call 0x40051d5	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x40051d5	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x40051dd	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x40051e5	          0x4889c2	                            mov rdx, rax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x40051e8	      0xe803c1ffff	     call sym.write_message.constprop.34	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x40051ed	          0x4189c7	                           mov r15d, eax	      1661	sequencer.c	FUNCTION_48	ELSE_10	CALL_67
0x40051f0	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x40051f8	          0x4c89ef	                            mov rdi, r13	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x40051fb	          0x4889c6	                            mov rsi, rax	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x40051fe	      0xe800000000	                          call 0x4005203	      1664	sequencer.c	FUNCTION_48	ELSE_10	CALL_69
0x4005203	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4005208	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x400520d	          0x4c89d7	                            mov rdi, r10	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4005210	      0xe800000000	                          call 0x4005215	      1665	sequencer.c	FUNCTION_48	ELSE_10	CALL_70
0x4005215	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x400521a	    0x4c8bac240001	           mov r13, qword [rsp + 0x100] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005222	      0xe800000000	                          call 0x4005227	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4005227	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x400522b	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x400522f	          0x4989c0	                             mov r8, rax	      1668	sequencer.c	FUNCTION_48	ELSE_10	CALL_72
0x4005232	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005236	    0x488b8c24e000	            mov rcx, qword [rsp + 0xe0] 	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x400523e	          0x4d89e9	                             mov r9, r13	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005241	      0xe800000000	                          call 0x4005246	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005246	    0x488bbc24e000	            mov rdi, qword [rsp + 0xe0] 	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x400524e	          0x4109c7	                            or r15d, eax	      1666	sequencer.c	FUNCTION_48	ELSE_10	CALL_71
0x4005251	      0xe800000000	                          call 0x4005256	      1669	sequencer.c	FUNCTION_48	ELSE_10	CALL_73
0x4005256	    0x488bbc240001	           mov rdi, qword [rsp + 0x100] 	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x400525e	      0xe800000000	                          call 0x4005263	      1670	sequencer.c	FUNCTION_48	ELSE_10	CALL_74
0x4005263	          0x4c89f7	                            mov rdi, r14	      1672	sequencer.c	FUNCTION_48	CALL_75
0x4005266	      0xe800000000	                          call 0x400526b	      1672	sequencer.c	FUNCTION_48	CALL_75
0x400526b	          0x4585e4	                         test r12d, r12d	      1680	sequencer.c	FUNCTION_48	IF_31
0x400526e	     0xf8509030000	                           jne 0x400557d	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005274	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005277	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005279	     0xf8461030000	                            je 0x40055e0	      1680	sequencer.c	FUNCTION_48	IF_31
0x400527f	          0x4585ff	                         test r15d, r15d	      1689	sequencer.c	FUNCTION_48	IF_33
0x4005282	     0xf8562030000	                           jne 0x40055ea	      1689	sequencer.c	FUNCTION_48	IF_33
0x4005288	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	      1277	sequencer.c	FUNCTION_40	IF_1
0x400528b	            0x85c0	                           test eax, eax	      1277	sequencer.c	FUNCTION_40	IF_1
0x400528d	     0xf85cd090000	                           jne 0x4005c60	      1277	sequencer.c	FUNCTION_40	IF_1
0x4005293	        0x448b7b0c	            mov r15d, dword [rbx + 0xc] 	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005297	          0x4585ff	                         test r15d, r15d	      1705	sequencer.c	FUNCTION_48	IF_36
0x400529a	     0xf8570090000	                           jne 0x4005c10	      1705	sequencer.c	FUNCTION_48	IF_36
0x40052a0	    0x48837c244800	               cmp qword [rsp + 0x48], 0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40052a6	     0xf85c4100000	                           jne 0x4006370	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40052ac	        0x4183fc01	                             cmp r12d, 1	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40052b0	     0xf84ba100000	                            je 0x4006370	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40052b6	      0xf644242804	               test byte [rsp + 0x28], 4	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40052bb	     0xf85aa0b0000	                           jne 0x4005e6b	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x40052c1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40052c6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40052cb	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40052cd	      0xe800000000	                          call 0x40052d2	        54	gettext.h	FUNCTION_164
0x40052d2	          0x4889c7	                            mov rdi, rax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40052d5	            0x31c0	                            xor eax, eax	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40052d7	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40052dd	      0xe800000000	                          call 0x40052e2	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40052e2	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40052eb	       0xf1f440000	                   nop dword [rax + rax]	      1710	sequencer.c	FUNCTION_48	IF_36	CALL_85
0x40052f0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       334	sequencer.c	FUNCTION_12	CALL_1
0x40052f5	      0xe800000000	                          call 0x40052fa	       334	sequencer.c	FUNCTION_12	CALL_1
0x40052fa	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       335	sequencer.c	FUNCTION_12	CALL_2
0x40052ff	      0xe800000000	                          call 0x4005304	       335	sequencer.c	FUNCTION_12	CALL_2
0x4005304	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       336	sequencer.c	FUNCTION_12	CALL_3
0x4005309	      0xe800000000	                          call 0x400530e	       336	sequencer.c	FUNCTION_12	CALL_3
0x400530e	      0x488b742408	                mov rsi, qword [rsp + 8]	       337	sequencer.c	FUNCTION_12	CALL_4
0x4005313	          0x4889ef	                            mov rdi, rbp	       337	sequencer.c	FUNCTION_12	CALL_4
0x4005316	      0xe800000000	                          call 0x400531b	       337	sequencer.c	FUNCTION_12	CALL_4
0x400531b	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1723	sequencer.c	FUNCTION_48	CALL_93
0x4005320	      0xe800000000	                          call 0x4005325	      1723	sequencer.c	FUNCTION_48	CALL_93
0x4005325	      0xe806afffff	       call sym.update_abort_safety_file	      1724	sequencer.c	FUNCTION_48	CALL_94
0x400532a	          0x4489f8	                           mov eax, r15d	      1726	sequencer.c	FUNCTION_48
0x400532d	    0x488b9c248801	           mov rbx, qword [rsp + 0x188] 	      1727	sequencer.c	FUNCTION_48
0x4005335	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1727	sequencer.c	FUNCTION_48
0x400533e	     0xf8586190000	                           jne 0x4006cca	      1727	sequencer.c	FUNCTION_48
0x4005344	    0x4881c4980100	                          add rsp, 0x198	      1727	sequencer.c	FUNCTION_48
0x400534b	              0x5b	                                 pop rbx	      1727	sequencer.c	FUNCTION_48
0x400534c	              0x5d	                                 pop rbp	      1727	sequencer.c	FUNCTION_48
0x400534d	            0x415c	                                 pop r12	      1727	sequencer.c	FUNCTION_48
0x400534f	            0x415d	                                 pop r13	      1727	sequencer.c	FUNCTION_48
0x4005351	            0x415e	                                 pop r14	      1727	sequencer.c	FUNCTION_48
0x4005353	            0x415f	                                 pop r15	      1727	sequencer.c	FUNCTION_48
0x4005355	              0xc3	                                     ret	      1727	sequencer.c	FUNCTION_48
0x4005356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1727	sequencer.c	FUNCTION_48
0x4005360	      0xe800000000	                          call 0x4005365	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4005365	    0xc74424580c00	            mov dword [rsp + 0x58], 0xc 	      1499	sequencer.c	FUNCTION_48	CALL_1
0x400536d	      0x4889442450	             mov qword [rsp + 0x50], rax	      1499	sequencer.c	FUNCTION_48	CALL_1
0x4005372	    0xc74424480400	               mov dword [rsp + 0x48], 4	      1499	sequencer.c	FUNCTION_48	CALL_1
0x400537a	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1498	sequencer.c	FUNCTION_48
0x4005382	      0xe9e8fbffff	                           jmp 0x4004f6f	      1498	sequencer.c	FUNCTION_48
0x4005387	    0x660f1f840000	                    nop word [rax + rax]	      1498	sequencer.c	FUNCTION_48
0x4005390	      0xbf00000000	                              mov edi, 0	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4005395	          0x4889c6	                            mov rsi, rax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x4005398	      0xe800000000	                          call 0x400539d	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x400539d	            0x85c0	                           test eax, eax	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x400539f	          0x4189c6	                           mov r14d, eax	      1518	sequencer.c	FUNCTION_48	ELSE_1	CALL_4
0x40053a2	      0xbf00000000	                              mov edi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x40053a7	            0x7435	                            je 0x40053de	      1519	sequencer.c	FUNCTION_48	ELSE_1	IF_3
0x40053a9	    0x488b05000000	            mov rax, qword [0x040053b0] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x40053b0	      0xbf00000000	                              mov edi, 0	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x40053b5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1520	sequencer.c	FUNCTION_48	ELSE_1	CALL_5
0x40053b9	        0x488b4038	            mov rax, qword [rax + 0x38] 	        53	string3.h	FUNCTION_233	CALL_3
0x40053bd	          0x488b10	                    mov rdx, qword [rax]	        53	string3.h	FUNCTION_233	CALL_3
0x40053c0	    0x488994243001	            mov qword [rsp + 0x130], rdx	        53	string3.h	FUNCTION_233	CALL_3
0x40053c8	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_233	CALL_3
0x40053cc	    0x488994243801	            mov qword [rsp + 0x138], rdx	        53	string3.h	FUNCTION_233	CALL_3
0x40053d4	          0x8b4010	            mov eax, dword [rax + 0x10] 	        53	string3.h	FUNCTION_233	CALL_3
0x40053d7	    0x898424400100	            mov dword [rsp + 0x140], eax	        53	string3.h	FUNCTION_233	CALL_3
0x40053de	            0x31d2	                            xor edx, edx	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x40053e0	            0x31f6	                            xor esi, esi	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x40053e2	      0xe800000000	                          call 0x40053e7	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x40053e7	            0x85c0	                           test eax, eax	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x40053e9	     0xf84d5fbffff	                            je 0x4004fc4	      1521	sequencer.c	FUNCTION_48	ELSE_1	IF_4	CALL_6
0x40053ef	          0x4889df	                            mov rdi, rbx	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x40053f2	      0xe879b8ffff	              call sym.error_dirty_index	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x40053f7	      0xe931ffffff	                           jmp 0x400532d	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x40053fc	         0xf1f4000	                         nop dword [rax]	      1523	sequencer.c	FUNCTION_48	ELSE_1	CALL_7
0x4005400	      0x418d4424fc	                      lea eax, [r12 - 4]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005405	          0x83f801	                              cmp eax, 1	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005408	     0xf86b3fcffff	                           jbe 0x40050c1	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x400540e	          0x4d85ed	                           test r13, r13	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005411	     0xf84e7090000	                            je 0x4005dfe	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005417	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       975	cache.h	FUNCTION_173	CALL_1
0x400541c	        0x498d7d04	                      lea rdi, [r13 + 4]	       975	cache.h	FUNCTION_173	CALL_1
0x4005420	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x4005425	      0xe800000000	                          call 0x400542a	       975	cache.h	FUNCTION_173	CALL_1
0x400542a	            0x85c0	                           test eax, eax	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x400542c	     0xf8594fcffff	                           jne 0x40050c6	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4005432	          0x833b02	                      cmp dword [rbx], 2	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x4005435	     0xf84210a0000	                            je 0x4005e5c	      1559	sequencer.c	FUNCTION_48	IF_11	IF_12	CALL_19
0x400543b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x4005440	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x4005445	          0x4889d9	                            mov rcx, rbx	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x4005448	          0x4489f2	                           mov edx, r14d	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x400544b	      0xe840b9ffff	                call sym.fast_forward_to	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x4005450	            0x85c0	                           test eax, eax	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005452	          0x4189c7	                           mov r15d, eax	      1561	sequencer.c	FUNCTION_48	IF_11	CALL_21
0x4005455	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1503	sequencer.c	FUNCTION_48
0x400545e	     0xf858cfeffff	                           jne 0x40052f0	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005464	        0x4183fc03	                             cmp r12d, 3	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x4005468	     0xf8582feffff	                           jne 0x40052f0	      1563	sequencer.c	FUNCTION_48	IF_11	IF_13
0x400546e	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1566	sequencer.c	FUNCTION_48	IF_11
0x4005477	    0xc74424281600	           mov dword [rsp + 0x28], 0x16 	      1565	sequencer.c	FUNCTION_48	IF_11
0x400547f	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005483	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005488	          0x4889de	                            mov rsi, rbx	      1235	sequencer.c	FUNCTION_38	CALL_11
0x400548b	      0xe8e0d7ffff	                 call sym.run_git_commit	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005490	      0x448b5c2468	           mov r11d, dword [rsp + 0x68] 	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005495	          0x4189c7	                           mov r15d, eax	      1235	sequencer.c	FUNCTION_38	CALL_11
0x4005498	          0x4585db	                         test r11d, r11d	      1235	sequencer.c	FUNCTION_38	CALL_11
0x400549b	           0xf95c2	                                setne dl	      1235	sequencer.c	FUNCTION_38	CALL_11
0x400549e	            0x85c0	                           test eax, eax	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40054a0	           0xf94c0	                                 sete al	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40054a3	            0x21d0	                            and eax, edx	      1235	sequencer.c	FUNCTION_38	CALL_11
0x40054a5	            0x84c0	                             test al, al	      1713	sequencer.c	FUNCTION_48	IF_38
0x40054a7	     0xf8443feffff	                            je 0x40052f0	      1713	sequencer.c	FUNCTION_48	IF_38
0x40054ad	    0x488b3d000000	            mov rdi, qword [0x040054b4] 	        90	sequencer.c	CALL_14
0x40054b4	          0x4885ff	                           test rdi, rdi	        90	sequencer.c	CALL_14
0x40054b7	     0xf844e110000	                            je 0x400660b	        90	sequencer.c	CALL_14
0x40054bd	      0xe800000000	                          call 0x40054c2	      1714	sequencer.c	FUNCTION_48	IF_38	CALL_87
0x40054c2	    0x488b3d000000	            mov rdi, qword [0x040054c9] 	        82	sequencer.c	CALL_13
0x40054c9	          0x4885ff	                           test rdi, rdi	        82	sequencer.c	CALL_13
0x40054cc	     0xf846f110000	                            je 0x4006641	        82	sequencer.c	CALL_13
0x40054d2	      0xe800000000	                          call 0x40054d7	      1715	sequencer.c	FUNCTION_48	IF_38	CALL_89
0x40054d7	    0x488b3d000000	            mov rdi, qword [0x040054de] 	        95	sequencer.c	CALL_15
0x40054de	          0x4885ff	                           test rdi, rdi	        95	sequencer.c	CALL_15
0x40054e1	     0xf843f110000	                            je 0x4006626	        95	sequencer.c	CALL_15
0x40054e7	      0xe800000000	                          call 0x40054ec	      1716	sequencer.c	FUNCTION_48	IF_38	CALL_91
0x40054ec	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       165	strbuf.h	FUNCTION_109	IF_2
0x40054f0	    0x48c743680000	               mov qword [rbx + 0x68], 0	       164	strbuf.h	FUNCTION_109
0x40054f8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x40054fe	     0xf84c20d0000	                            je 0x40062c6	       165	strbuf.h	FUNCTION_109	IF_2
0x4005504	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x4005507	    0xc74378000000	               mov dword [rbx + 0x78], 0	      1718	sequencer.c	FUNCTION_48	IF_38
0x400550e	          0x4531ff	                          xor r15d, r15d	      1718	sequencer.c	FUNCTION_48	IF_38
0x4005511	      0xe9dafdffff	                           jmp 0x40052f0	      1718	sequencer.c	FUNCTION_48	IF_38
0x4005516	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1718	sequencer.c	FUNCTION_48	IF_38
0x4005520	        0x4883ec08	                              sub rsp, 8	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005524	          0x4c89fa	                            mov rdx, r15	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005527	          0x4d89f1	                             mov r9, r14	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x400552a	              0x53	                                push rbx	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x400552b	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005530	          0x4c89d9	                            mov rcx, r11	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005533	          0x4c89d6	                            mov rsi, r10	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005536	          0x4c89ef	                            mov rdi, r13	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005539	      0xe892e2ffff	             call sym.do_recursive_merge	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x400553e	          0x4189c7	                           mov r15d, eax	      1651	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_64
0x4005541	          0x4585ff	                         test r15d, r15d	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4005544	              0x58	                                 pop rax	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4005545	              0x5a	                                 pop rdx	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x4005546	     0xf8804050000	                            js 0x4005a50	      1653	sequencer.c	FUNCTION_48	ELSE_9	IF_29	IF_30
0x400554c	      0xe800000000	                          call 0x4005551	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005551	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005559	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005561	          0x4889c2	                            mov rdx, rax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005564	      0xe887bdffff	     call sym.write_message.constprop.34	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x4005569	          0x4c89f7	                            mov rdi, r14	      1672	sequencer.c	FUNCTION_48	CALL_75
0x400556c	          0x4109c7	                            or r15d, eax	      1655	sequencer.c	FUNCTION_48	ELSE_9	IF_29	CALL_65
0x400556f	      0xe800000000	                          call 0x4005574	      1672	sequencer.c	FUNCTION_48	CALL_75
0x4005574	          0x4585e4	                         test r12d, r12d	      1680	sequencer.c	FUNCTION_48	IF_31
0x4005577	     0xf84f7fcffff	                            je 0x4005274	      1680	sequencer.c	FUNCTION_48	IF_31
0x400557d	        0x4183fc01	                             cmp r12d, 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005581	     0xf85f8fcffff	                           jne 0x400527f	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005587	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1684	sequencer.c	FUNCTION_48	IF_32
0x400558a	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x400558c	     0xf8439060000	                            je 0x4005bcb	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005592	          0x4585ff	                         test r15d, r15d	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005595	     0xf8530060000	                           jne 0x4005bcb	      1684	sequencer.c	FUNCTION_48	IF_32
0x400559b	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40055a0	          0x4531c9	                            xor r9d, r9d	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40055a3	            0x31c9	                            xor ecx, ecx	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40055a5	            0x31ff	                            xor edi, edi	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40055a7	    0x41b801000000	                              mov r8d, 1	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40055ad	      0xbe00000000	                              mov esi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40055b2	      0xe800000000	                          call 0x40055b7	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x40055b7	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x40055b9	     0xf84c9fcffff	                            je 0x4005288	      1684	sequencer.c	FUNCTION_48	IF_32
0x40055bf	    0x8b3500000000	            mov esi, dword [0x040055c5] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055c5	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055ca	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1687	sequencer.c	FUNCTION_48	IF_32
0x40055d0	      0xe800000000	                          call 0x40055d5	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055d5	          0x4989c4	                            mov r12, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055d8	      0xe914060000	                           jmp 0x4005bf1	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055dd	           0xf1f00	                         nop dword [rax]	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055e0	        0x4183ff01	                             cmp r15d, 1	      1680	sequencer.c	FUNCTION_48	IF_31
0x40055e4	     0xf86b40f0000	                           jbe 0x400659e	      1680	sequencer.c	FUNCTION_48	IF_31
0x40055ea	    0x8b3500000000	            mov esi, dword [0x040055f0] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055f0	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055f5	      0xe800000000	                          call 0x40055fa	       312	sequencer.c	FUNCTION_10	CALL_1
0x40055fa	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40055ff	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005604	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4005606	          0x4989c4	                            mov r12, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005609	      0xe800000000	                          call 0x400560e	        54	gettext.h	FUNCTION_164
0x400560e	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005613	          0x4889c7	                            mov rdi, rax	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005616	          0x4c89e6	                            mov rsi, r12	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005619	            0x31c0	                            xor eax, eax	      1690	sequencer.c	FUNCTION_48	IF_33
0x400561b	      0xe800000000	                          call 0x4005620	      1690	sequencer.c	FUNCTION_48	IF_33
0x4005620	      0xbf00000000	                              mov edi, 0	       342	sequencer.c	FUNCTION_13	CALL_1
0x4005625	      0xe800000000	                          call 0x400562a	       342	sequencer.c	FUNCTION_13	CALL_1
0x400562a	          0x4885c0	                           test rax, rax	       344	sequencer.c	FUNCTION_13	IF_1
0x400562d	     0xf84f5050000	                            je 0x4005c28	       344	sequencer.c	FUNCTION_13	IF_1
0x4005633	    0x488b3d000000	            mov rdi, qword [0x0400563a] 	        97	stdio2.h	CALL_279
0x400563a	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_279
0x400563d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x4005642	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x4005647	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x4005649	      0xe800000000	                          call 0x400564e	        97	stdio2.h	CALL_279
0x400564e	      0xe800000000	                          call 0x4005653	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x4005653	          0x4889c7	                            mov rdi, rax	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x4005656	      0xe800000000	                          call 0x400565b	       351	sequencer.c	FUNCTION_13	IF_1	CALL_3
0x400565b	          0x8b7b18	            mov edi, dword [rbx + 0x18] 	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x400565e	      0xe800000000	                          call 0x4005663	      1695	sequencer.c	FUNCTION_48	IF_33	CALL_82
0x4005663	      0xe988fcffff	                           jmp 0x40052f0	      1696	sequencer.c	FUNCTION_48	IF_33
0x4005668	     0xf1f84000000	                   nop dword [rax + rax]	      1696	sequencer.c	FUNCTION_48	IF_33
0x4005670	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005675	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x400567a	    0x4c8db424a000	                   lea r14, [rsp + 0xa0]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005682	          0x4989ea	                            mov r10, rbp	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005685	            0x31d2	                            xor edx, edx	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005687	            0x31f6	                            xor esi, esi	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005689	          0x4c89f7	                            mov rdi, r14	      1646	sequencer.c	FUNCTION_48	CALL_61
0x400568c	      0x4c895c2460	             mov qword [rsp + 0x60], r11	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005691	      0x4c89542458	             mov qword [rsp + 0x58], r10	      1646	sequencer.c	FUNCTION_48	CALL_61
0x4005696	      0xe800000000	                          call 0x400569b	      1646	sequencer.c	FUNCTION_48	CALL_61
0x400569b	      0x4c8b5c2460	            mov r11, qword [rsp + 0x60] 	      1646	sequencer.c	FUNCTION_48	CALL_61
0x40056a0	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      1646	sequencer.c	FUNCTION_48	CALL_61
0x40056a5	      0xe9d7faffff	                           jmp 0x4005181	      1646	sequencer.c	FUNCTION_48	CALL_61
0x40056aa	    0x660f1f440000	                    nop word [rax + rax]	      1646	sequencer.c	FUNCTION_48	CALL_61
0x40056b0	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      1373	sequencer.c	FUNCTION_45	IF_1
0x40056b3	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      1369	sequencer.c	FUNCTION_45
0x40056bf	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	      1369	sequencer.c	FUNCTION_45
0x40056cb	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      1369	sequencer.c	FUNCTION_45
0x40056d7	            0x85d2	                           test edx, edx	      1373	sequencer.c	FUNCTION_45	IF_1
0x40056d9	     0xf8ee2100000	                           jle 0x40067c1	      1373	sequencer.c	FUNCTION_45	IF_1
0x40056df	    0x488b35000000	            mov rsi, qword [0x040056e6] 	        82	sequencer.c	CALL_13
0x40056e6	    0x48c784240001	              mov qword [rsp + 0x100], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x40056f2	    0x48c784240801	              mov qword [rsp + 0x108], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x40056fe	    0x48c784241001	              mov qword [rsp + 0x110], 0	      1374	sequencer.c	FUNCTION_45	IF_1
0x400570a	          0x4885f6	                           test rsi, rsi	        82	sequencer.c	CALL_13
0x400570d	     0xf845a090000	                            je 0x400606d	        82	sequencer.c	CALL_13
0x4005713	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4005718	      0xba09000000	                              mov edx, 9	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x400571d	      0xe800000000	                          call 0x4005722	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4005722	          0x4885c0	                           test rax, rax	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x4005725	     0xf8e61150000	                           jle 0x4006c8c	      1377	sequencer.c	FUNCTION_45	IF_1	IF_2	CALL_2
0x400572b	    0x4c8bbc24f000	            mov r15, qword [rsp + 0xf0] 	      1381	sequencer.c	FUNCTION_45	IF_1
0x4005733	    0x440fb6350000	          movzx r14d, byte [0x0400573b] 	      1381	sequencer.c	FUNCTION_45	IF_1
0x400573b	          0x453837	                    cmp byte [r15], r14b	      1382	sequencer.c	FUNCTION_45	IF_1
0x400573e	     0xf84890e0000	                            je 0x40065cd	      1382	sequencer.c	FUNCTION_45	IF_1
0x4005744	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4005749	        0x410fbed6	                         movsx edx, r14b	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x400574d	      0xbe00000000	                              mov esi, 0	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4005752	            0x31c0	                            xor eax, eax	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4005754	      0xe800000000	                          call 0x4005759	      1384	sequencer.c	FUNCTION_45	IF_1	CALL_5
0x4005759	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400575c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4005761	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005766	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4005768	        0x448d7002	                     lea r14d, [rax + 2]	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400576c	      0xe800000000	                          call 0x4005771	        54	gettext.h	FUNCTION_164
0x4005771	          0x4489f2	                           mov edx, r14d	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005774	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005779	          0x4889c6	                            mov rsi, rax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400577c	            0x31c0	                            xor eax, eax	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x400577e	          0x4c89f7	                            mov rdi, r14	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005781	      0xe800000000	                          call 0x4005786	      1385	sequencer.c	FUNCTION_45	IF_1	CALL_7
0x4005786	          0x4c89fa	                            mov rdx, r15	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005789	    0x482b9424f000	             sub rdx, qword [rsp + 0xf0]	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005791	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x4005796	    0x4c8b84240801	            mov r8, qword [rsp + 0x108] 	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x400579e	    0x488b8c241001	           mov rcx, qword [rsp + 0x110] 	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x40057a6	            0x31f6	                            xor esi, esi	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x40057a8	      0xe800000000	                          call 0x40057ad	      1387	sequencer.c	FUNCTION_45	IF_1	CALL_8
0x40057ad	          0x4c89f7	                            mov rdi, r14	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x40057b0	      0xe800000000	                          call 0x40057b5	      1388	sequencer.c	FUNCTION_45	IF_1	CALL_9
0x40057b5	            0x31f6	                            xor esi, esi	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40057b7	          0x4889ef	                            mov rdi, rbp	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40057ba	      0xe800000000	                          call 0x40057bf	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40057bf	          0x4885c0	                           test rax, rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40057c2	          0x4989c6	                            mov r14, rax	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40057c5	     0xf8414160000	                            je 0x4006ddf	      1419	sequencer.c	FUNCTION_45	IF_7	CALL_32
0x40057cb	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1422	sequencer.c	FUNCTION_45	CALL_35
0x40057d0	          0x4889c7	                            mov rdi, rax	      1422	sequencer.c	FUNCTION_45	CALL_35
0x40057d3	      0xe800000000	                          call 0x40057d8	      1422	sequencer.c	FUNCTION_45	CALL_35
0x40057d8	        0x4183fc05	                             cmp r12d, 5	      1424	sequencer.c	FUNCTION_45	IF_8
0x40057dc	     0xf841f0d0000	                            je 0x4006501	      1424	sequencer.c	FUNCTION_45	IF_8
0x40057e2	     0xfbe15000000	           movsx edx, byte [0x040057e9] 	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40057e9	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40057ee	      0xbe00000000	                              mov esi, 0	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40057f3	            0x31c0	                            xor eax, eax	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40057f5	      0xe800000000	                          call 0x40057fa	      1432	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_43
0x40057fa	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x40057fd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4005802	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005807	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4005809	        0x448d7801	                     lea r15d, [rax + 1]	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x400580d	        0x44897b78	            mov dword [rbx + 0x78], r15d	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005811	      0xe800000000	                          call 0x4005816	        54	gettext.h	FUNCTION_164
0x4005816	          0x4489fa	                           mov edx, r15d	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005819	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x400581e	          0x4889c6	                            mov rsi, rax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005821	            0x31c0	                            xor eax, eax	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005823	          0x4c89ff	                            mov rdi, r15	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x4005826	      0xe800000000	                          call 0x400582b	      1433	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_45
0x400582b	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005830	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005835	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005838	      0x4c897c2460	             mov qword [rsp + 0x60], r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x400583d	      0xe800000000	                          call 0x4005842	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005842	    0x4c8bbc240001	           mov r15, qword [rsp + 0x100] 	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x400584a	          0x4c89ff	                            mov rdi, r15	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x400584d	      0xe800000000	                          call 0x4005852	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005852	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005857	          0x4889c2	                            mov rdx, rax	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x400585a	          0x4c89fe	                            mov rsi, r15	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x400585d	      0xe800000000	                          call 0x4005862	      1436	sequencer.c	FUNCTION_45	ELSE_2	IF_9	CALL_48
0x4005862	          0x4c89f6	                            mov rsi, r14	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4005865	          0x4889ef	                            mov rdi, rbp	      1439	sequencer.c	FUNCTION_45	CALL_50
0x4005868	      0xe800000000	                          call 0x400586d	      1439	sequencer.c	FUNCTION_45	CALL_50
0x400586d	    0x488b15000000	            mov rdx, qword [0x04005874] 	        82	sequencer.c	CALL_13
0x4005874	          0x4885d2	                           test rdx, rdx	        82	sequencer.c	CALL_13
0x4005877	     0xf84cd110000	                            je 0x4006a4a	        82	sequencer.c	CALL_13
0x400587d	    0x488bb424e800	            mov rsi, qword [rsp + 0xe8] 	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005885	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	      1441	sequencer.c	FUNCTION_45	CALL_52
0x400588d	      0xe85ebaffff	     call sym.write_message.constprop.34	      1441	sequencer.c	FUNCTION_45	CALL_52
0x4005892	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1442	sequencer.c	FUNCTION_45	CALL_53
0x4005897	          0x4189c6	                           mov r14d, eax	      1441	sequencer.c	FUNCTION_45	CALL_52
0x400589a	      0xe800000000	                          call 0x400589f	      1442	sequencer.c	FUNCTION_45	CALL_53
0x400589f	          0x4585f6	                         test r14d, r14d	      1444	sequencer.c	FUNCTION_45	IF_10
0x40058a2	     0xf85aa050000	                           jne 0x4005e52	      1444	sequencer.c	FUNCTION_45	IF_10
0x40058a8	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058ad	      0xe800000000	                          call 0x40058b2	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058b2	          0x4489e2	                           mov edx, r12d	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x40058b5	          0x4989c0	                             mov r8, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058b8	        0x488d7b60	                   lea rdi, [rbx + 0x60]	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058bc	        0x48c1e204	                              shl rdx, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x40058c0	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058c5	      0xb800000000	                              mov eax, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058ca	    0x488b8a000000	                    mov rcx, qword [rdx]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x40058d1	      0xba00000000	                              mov edx, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058d6	      0xbe00000000	                              mov esi, 0	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058db	        0x480f45d0	                         cmovne rdx, rax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058df	            0x31c0	                            xor eax, eax	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058e1	      0xe800000000	                          call 0x40058e6	      1445	sequencer.c	FUNCTION_45	IF_10	CALL_54
0x40058e6	    0x488b15000000	            mov rdx, qword [0x040058ed] 	        95	sequencer.c	CALL_15
0x40058ed	          0x4885d2	                           test rdx, rdx	        95	sequencer.c	CALL_15
0x40058f0	     0xf848c120000	                            je 0x4006b82	        95	sequencer.c	CALL_15
0x40058f6	        0x488b7368	            mov rsi, qword [rbx + 0x68] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40058fa	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x40058fe	      0xe8edb9ffff	     call sym.write_message.constprop.34	      1449	sequencer.c	FUNCTION_45	IF_10	CALL_57
0x4005903	            0x85c0	                           test eax, eax	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x4005905	     0xf8547050000	                           jne 0x4005e52	      1625	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_23	CALL_47
0x400590b	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x400590f	            0x85c9	                           test ecx, ecx	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x4005911	     0xf85c9090000	                           jne 0x40062e0	      1628	sequencer.c	FUNCTION_48	ELSE_6	IF_22	IF_24
0x4005917	    0x488b05000000	            mov rax, qword [0x0400591e] 	        82	sequencer.c	CALL_13
0x400591e	          0x4885c0	                           test rax, rax	        82	sequencer.c	CALL_13
0x4005921	      0x4889442450	             mov qword [rsp + 0x50], rax	        82	sequencer.c	CALL_13
0x4005926	     0xf843b120000	                            je 0x4006b67	        82	sequencer.c	CALL_13
0x400592c	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      1627	sequencer.c	FUNCTION_48	ELSE_6	IF_22
0x4005930	        0x89442428	             mov dword [rsp + 0x28], eax	      1627	sequencer.c	FUNCTION_48	ELSE_6	IF_22
0x4005934	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1503	sequencer.c	FUNCTION_48
0x4005939	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1503	sequencer.c	FUNCTION_48
0x400593e	          0x4989ea	                            mov r10, rbp	      1503	sequencer.c	FUNCTION_48
0x4005941	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1503	sequencer.c	FUNCTION_48
0x400594a	    0x4c8db424a000	                   lea r14, [rsp + 0xa0]	      1503	sequencer.c	FUNCTION_48
0x4005952	      0xe92af8ffff	                           jmp 0x4005181	      1503	sequencer.c	FUNCTION_48
0x4005957	    0x660f1f840000	                    nop word [rax + rax]	      1503	sequencer.c	FUNCTION_48
0x4005960	    0x4c8db424a000	                   lea r14, [rsp + 0xa0]	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005968	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_111	CALL_2
0x400596d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005972	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005975	      0xe800000000	                          call 0x400597a	       279	strbuf.h	FUNCTION_111	CALL_2
0x400597a	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x400597f	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005982	      0xe800000000	                          call 0x4005987	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005987	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x400598a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x400598d	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005990	      0xe800000000	                          call 0x4005995	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005995	      0xba17000000	                           mov edx, 0x17	       279	strbuf.h	FUNCTION_111	CALL_2
0x400599a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400599f	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059a2	      0xe800000000	                          call 0x40059a7	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059a7	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x40059ac	      0xe800000000	                          call 0x40059b1	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x40059b1	          0x4989c7	                            mov r15, rax	      1591	sequencer.c	FUNCTION_48	IF_15	CALL_30
0x40059b4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059b7	      0xe800000000	                          call 0x40059bc	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059bc	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059bf	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059c2	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059c5	      0xe800000000	                          call 0x40059ca	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059ca	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x40059ce	          0x4885c0	                           test rax, rax	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x40059d1	            0x743b	                            je 0x4005a0e	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x40059d3	      0x4883780800	                  cmp qword [rax + 8], 0	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x40059d8	            0x7434	                            je 0x4005a0e	      1593	sequencer.c	FUNCTION_48	IF_15	IF_16
0x40059da	      0xba1c000000	                           mov edx, 0x1c	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059df	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059e4	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059e7	      0xe800000000	                          call 0x40059ec	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059ec	        0x498d7d04	                      lea rdi, [r13 + 4]	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x40059f0	      0xe800000000	                          call 0x40059f5	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x40059f5	          0x4989c7	                            mov r15, rax	      1595	sequencer.c	FUNCTION_48	IF_15	IF_16	CALL_33
0x40059f8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x40059fb	      0xe800000000	                          call 0x4005a00	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a00	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a03	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a06	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a09	      0xe800000000	                          call 0x4005a0e	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a0e	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a13	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a18	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a1b	      0xe800000000	                          call 0x4005a20	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005a20	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a23	          0x4d89ea	                            mov r10, r13	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a26	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a2b	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a30	          0x4989ed	                            mov r13, rbp	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a33	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1503	sequencer.c	FUNCTION_48
0x4005a3c	            0x85c9	                           test ecx, ecx	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a3e	     0xf843df7ffff	                            je 0x4005181	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a44	      0xe93cfcffff	                           jmp 0x4005685	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a49	     0xf1f80000000	                         nop dword [rax]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a50	          0x4489f8	                           mov eax, r15d	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a53	      0xe9d5f8ffff	                           jmp 0x400532d	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a58	     0xf1f84000000	                   nop dword [rax + rax]	      1645	sequencer.c	FUNCTION_48	IF_27	CALL_60
0x4005a60	        0x448b4b2c	            mov r9d, dword [rbx + 0x2c] 	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4005a64	          0x4585c9	                           test r9d, r9d	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4005a67	     0xf8eb9f5ffff	                           jle 0x4005026	      1546	sequencer.c	FUNCTION_48	ELSE_3	IF_9
0x4005a6d	        0x488d7d04	                      lea rdi, [rbp + 4]	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005a71	      0xe800000000	                          call 0x4005a76	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005a76	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4005a7b	          0x4889c3	                            mov rbx, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005a7e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005a83	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4005a85	      0xe800000000	                          call 0x4005a8a	        54	gettext.h	FUNCTION_164
0x4005a8a	          0x4889de	                            mov rsi, rbx	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005a8d	          0x4889c7	                            mov rdi, rax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005a90	            0x31c0	                            xor eax, eax	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005a92	      0xe800000000	                          call 0x4005a97	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005a97	      0xe9b6030000	                           jmp 0x4005e52	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005a9c	         0xf1f4000	                         nop dword [rax]	      1547	sequencer.c	FUNCTION_48	ELSE_3	IF_9	CALL_12
0x4005aa0	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       595	strbuf.h	FUNCTION_116	IF_1
0x4005aa8	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       595	strbuf.h	FUNCTION_116	IF_1
0x4005ab0	    0x4c8db424a000	                   lea r14, [rsp + 0xa0]	       595	strbuf.h	FUNCTION_116	IF_1
0x4005ab8	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_116	IF_1
0x4005abb	            0x7469	                            je 0x4005b26	       595	strbuf.h	FUNCTION_116	IF_1
0x4005abd	      0x807c06ff0a	          cmp byte [rsi + rax - 1], 0xa 	       595	strbuf.h	FUNCTION_116	IF_1
0x4005ac2	            0x7462	                            je 0x4005b26	       595	strbuf.h	FUNCTION_116	IF_1
0x4005ac4	    0x488b9424a000	            mov rdx, qword [rsp + 0xa0] 	       595	strbuf.h	FUNCTION_116	IF_1
0x4005acc	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_108
0x4005acf	     0xf8573080000	                           jne 0x4006348	       141	strbuf.h	FUNCTION_108
0x4005ad5	    0x4c8db424a000	                   lea r14, [rsp + 0xa0]	       228	strbuf.h	FUNCTION_110	CALL_2
0x4005add	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x4005ae2	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_110	CALL_2
0x4005ae5	      0xe800000000	                          call 0x4005aea	       228	strbuf.h	FUNCTION_110	CALL_2
0x4005aea	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       228	strbuf.h	FUNCTION_110	CALL_2
0x4005af2	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       228	strbuf.h	FUNCTION_110	CALL_2
0x4005afa	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_110
0x4005afe	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	       229	strbuf.h	FUNCTION_110
0x4005b06	        0xc604060a	               mov byte [rsi + rax], 0xa	       229	strbuf.h	FUNCTION_110
0x4005b0a	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       230	strbuf.h	FUNCTION_110
0x4005b12	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       230	strbuf.h	FUNCTION_110
0x4005b1a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x4005b1e	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       230	strbuf.h	FUNCTION_110
0x4005b26	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	       224	sequencer.c	FUNCTION_6	CALL_1
0x4005b2b	          0x4c89ff	                            mov rdi, r15	       224	sequencer.c	FUNCTION_6	CALL_1
0x4005b2e	      0xe800000000	                          call 0x4005b33	       224	sequencer.c	FUNCTION_6	CALL_1
0x4005b33	    0x488b84241001	           mov rax, qword [rsp + 0x110] 	       226	sequencer.c	FUNCTION_6	IF_1
0x4005b3b	    0x483984240801	           cmp qword [rsp + 0x108], rax 	       226	sequencer.c	FUNCTION_6	IF_1
0x4005b43	     0xf8447050000	                            je 0x4006090	       226	sequencer.c	FUNCTION_6	IF_1
0x4005b49	          0x4c89ff	                            mov rdi, r15	       236	sequencer.c	FUNCTION_6	CALL_2
0x4005b4c	      0xe800000000	                          call 0x4005b51	       236	sequencer.c	FUNCTION_6	CALL_2
0x4005b51	      0xba1b000000	                           mov edx, 0x1b	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b56	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b5b	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b5e	      0xe800000000	                          call 0x4005b63	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b63	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4005b68	      0xe800000000	                          call 0x4005b6d	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4005b6d	          0x4989c7	                            mov r15, rax	      1615	sequencer.c	FUNCTION_48	ELSE_5	IF_18	CALL_42
0x4005b70	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b73	      0xe800000000	                          call 0x4005b78	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b78	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b7b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b7e	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b81	      0xe800000000	                          call 0x4005b86	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b86	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b8b	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b90	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b93	      0xe800000000	                          call 0x4005b98	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b98	      0xe972f5ffff	                           jmp 0x400510f	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005b9d	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005ba0	    0x4c8bbc24e000	            mov r15, qword [rsp + 0xe0] 	      1608	sequencer.c	FUNCTION_48	ELSE_5	CALL_36
0x4005ba8	    0x4c8db424a000	                   lea r14, [rsp + 0xa0]	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005bb0	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005bb3	      0xe800000000	                          call 0x4005bb8	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005bb8	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005bbb	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005bbe	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005bc1	      0xe800000000	                          call 0x4005bc6	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005bc6	      0xe939f5ffff	                           jmp 0x4005104	       279	strbuf.h	FUNCTION_111	CALL_2
0x4005bcb	        0x4183ff01	                             cmp r15d, 1	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005bcf	     0xf844a070000	                            je 0x400631f	      1684	sequencer.c	FUNCTION_48	IF_32
0x4005bd5	          0x4585ff	                         test r15d, r15d	      1689	sequencer.c	FUNCTION_48	IF_33
0x4005bd8	     0xf84aaf6ffff	                            je 0x4005288	      1689	sequencer.c	FUNCTION_48	IF_33
0x4005bde	    0x8b3500000000	            mov esi, dword [0x04005be4] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005be4	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005be9	      0xe800000000	                          call 0x4005bee	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005bee	          0x4989c4	                            mov r12, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005bf1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4005bf6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005bfb	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4005bfd	      0xe800000000	                          call 0x4005c02	        54	gettext.h	FUNCTION_164
0x4005c02	      0xe907faffff	                           jmp 0x400560e	        54	gettext.h	FUNCTION_164
0x4005c07	    0x660f1f840000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_164
0x4005c10	      0x448b542468	           mov r10d, dword [rsp + 0x68] 	        54	gettext.h	FUNCTION_164
0x4005c15	          0x4585d2	                         test r10d, r10d	        54	gettext.h	FUNCTION_164
0x4005c18	           0xf95c0	                                setne al	        54	gettext.h	FUNCTION_164
0x4005c1b	          0x4531ff	                          xor r15d, r15d	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005c1e	      0xe982f8ffff	                           jmp 0x40054a5	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005c23	       0xf1f440000	                   nop dword [rax + rax]	      1705	sequencer.c	FUNCTION_48	IF_36
0x4005c28	        0x4183ff01	                             cmp r15d, 1	       355	sequencer.c	FUNCTION_13	IF_2
0x4005c2c	     0xf8529faffff	                           jne 0x400565b	       355	sequencer.c	FUNCTION_13	IF_2
0x4005c32	          0x8b430c	              mov eax, dword [rbx + 0xc]	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x4005c35	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4005c3a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005c3f	            0x85c0	                           test eax, eax	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x4005c41	            0x7505	                           jne 0x4005c48	       356	sequencer.c	FUNCTION_13	IF_2	IF_3
0x4005c43	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005c48	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4005c4a	      0xe800000000	                          call 0x4005c4f	        54	gettext.h	FUNCTION_164
0x4005c4f	          0x4889c7	                            mov rdi, rax	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005c52	            0x31c0	                            xor eax, eax	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005c54	      0xe800000000	                          call 0x4005c59	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005c59	      0xe9fdf9ffff	                           jmp 0x400565b	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005c5e	            0x6690	                                     nop	       360	sequencer.c	FUNCTION_13	IF_2	ELSE_1	CALL_7
0x4005c60	    0x4c8db4247001	                  lea r14, [rsp + 0x170]	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005c68	            0x31c9	                            xor ecx, ecx	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005c6a	      0xbe01000000	                              mov esi, 1	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005c6f	      0xbf00000000	                              mov edi, 0	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005c74	          0x4c89f2	                            mov rdx, r14	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005c77	      0xe800000000	                          call 0x4005c7c	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005c7c	          0x4885c0	                           test rax, rax	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005c7f	     0xf84ee0f0000	                            je 0x4006c73	       569	sequencer.c	FUNCTION_22	IF_1	CALL_1
0x4005c85	          0x4c89f7	                            mov rdi, r14	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005c88	      0xe800000000	                          call 0x4005c8d	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005c8d	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_106	CALL_1
0x4005c8f	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_106	CALL_1
0x4005c92	          0x4989c5	                            mov r13, rax	       572	sequencer.c	FUNCTION_22	CALL_3
0x4005c95	      0xe800000000	                          call 0x4005c9a	        75	commit.h	FUNCTION_106	CALL_1
0x4005c9a	            0x85c0	                           test eax, eax	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4005c9c	            0x753d	                           jne 0x4005cdb	       582	sequencer.c	FUNCTION_22	IF_2	CALL_4
0x4005c9e	    0x488b3d000000	            mov rdi, qword [0x04005ca5] 	       585	sequencer.c	FUNCTION_22	IF_3
0x4005ca5	          0x4885ff	                           test rdi, rdi	       585	sequencer.c	FUNCTION_22	IF_3
0x4005ca8	     0xf84c30c0000	                            je 0x4006971	       585	sequencer.c	FUNCTION_22	IF_3
0x4005cae	      0xe800000000	                          call 0x4005cb3	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005cb3	            0x85c0	                           test eax, eax	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005cb5	            0x7539	                           jne 0x4005cf0	       588	sequencer.c	FUNCTION_22	IF_4	CALL_6
0x4005cb7	            0x31f6	                            xor esi, esi	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005cb9	      0xbf00000000	                              mov edi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005cbe	      0xe800000000	                          call 0x4005cc3	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005cc3	            0x85c0	                           test eax, eax	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005cc5	            0x7429	                            je 0x4005cf0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005cc7	      0xbf00000000	                              mov edi, 0	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005ccc	      0xe84fa5ffff	                       call sym._.part.6	       589	sequencer.c	FUNCTION_22	IF_4	IF_5	CALL_7
0x4005cd1	          0x4889c7	                            mov rdi, rax	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005cd4	            0x31c0	                            xor eax, eax	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005cd6	      0xe800000000	                          call 0x4005cdb	       590	sequencer.c	FUNCTION_22	IF_4	IF_5
0x4005cdb	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1118	sequencer.c	FUNCTION_37	IF_1
0x4005ce1	      0xe90af6ffff	                           jmp 0x40052f0	      1118	sequencer.c	FUNCTION_37	IF_1
0x4005ce6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1118	sequencer.c	FUNCTION_37	IF_1
0x4005cf0	          0x4c89ef	                            mov rdi, r13	       593	sequencer.c	FUNCTION_22	CALL_10
0x4005cf3	      0xe800000000	                          call 0x4005cf8	       593	sequencer.c	FUNCTION_22	CALL_10
0x4005cf8	    0x488b0d000000	            mov rcx, qword [0x04005cff] 	       975	cache.h	FUNCTION_173	CALL_1
0x4005cff	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x4005d04	          0x4889c6	                            mov rsi, rax	       975	cache.h	FUNCTION_173	CALL_1
0x4005d07	        0x488d7904	                      lea rdi, [rcx + 4]	       975	cache.h	FUNCTION_173	CALL_1
0x4005d0b	      0xe800000000	                          call 0x4005d10	       975	cache.h	FUNCTION_173	CALL_1
0x4005d10	            0x85c0	                           test eax, eax	      1283	sequencer.c	FUNCTION_40	IF_3
0x4005d12	     0xf857bf5ffff	                           jne 0x4005293	      1283	sequencer.c	FUNCTION_40	IF_3
0x4005d18	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      1286	sequencer.c	FUNCTION_40	IF_4
0x4005d1b	            0x85c0	                           test eax, eax	      1286	sequencer.c	FUNCTION_40	IF_4
0x4005d1d	     0xf8455070000	                            je 0x4006478	      1286	sequencer.c	FUNCTION_40	IF_4
0x4005d23	      0x834c242801	                or dword [rsp + 0x28], 1	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005d28	      0xe966f5ffff	                           jmp 0x4005293	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005d2d	           0xf1f00	                         nop dword [rax]	      1704	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4005d30	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005d35	      0x4c895c2460	             mov qword [rsp + 0x60], r11	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005d3a	      0x4c89542458	             mov qword [rsp + 0x58], r10	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005d3f	      0xe8fcc1ffff	            call sym.write_author_script	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005d44	            0x85c0	                           test eax, eax	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005d46	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005d4b	      0x4c8b5c2460	            mov r11, qword [rsp + 0x60] 	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005d50	     0xf8934f4ffff	                           jns 0x400518a	      1648	sequencer.c	FUNCTION_48	IF_28	CALL_63
0x4005d56	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1649	sequencer.c	FUNCTION_48	IF_28
0x4005d5c	      0xe902f5ffff	                           jmp 0x4005263	      1649	sequencer.c	FUNCTION_48	IF_28
0x4005d61	      0xe800000000	                          call 0x4005d66	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005d66	            0x31f6	                            xor esi, esi	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005d68	          0x4889c2	                            mov rdx, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005d6b	          0x4889ef	                            mov rdi, rbp	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005d6e	      0xe800000000	                          call 0x4005d73	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005d73	        0x488d4d04	                      lea rcx, [rbp + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005d77	    0x8b3500000000	            mov esi, dword [0x04005d7d] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005d7d	          0x4989c7	                            mov r15, rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005d80	      0x4889442408	                mov qword [rsp + 8], rax	       320	sequencer.c	FUNCTION_11	CALL_2
0x4005d85	          0x4889cf	                            mov rdi, rcx	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005d88	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005d8d	      0xe800000000	                          call 0x4005d92	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005d92	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005d9a	          0x4c89ff	                            mov rdi, r15	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005d9d	          0x4989c5	                            mov r13, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x4005da0	          0x4889ce	                            mov rsi, rcx	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005da3	      0x48894c2440	             mov qword [rsp + 0x40], rcx	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005da8	      0xe800000000	                          call 0x4005dad	       323	sequencer.c	FUNCTION_11	CALL_4
0x4005dad	    0x488bbc240001	           mov rdi, qword [rsp + 0x100] 	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005db5	          0x4863f0	                         movsxd rsi, eax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005db8	      0xe800000000	                          call 0x4005dbd	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005dbd	          0x4c89ee	                            mov rsi, r13	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005dc0	          0x4889c2	                            mov rdx, rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005dc3	      0x4889442430	             mov qword [rsp + 0x30], rax	       325	sequencer.c	FUNCTION_11	CALL_5
0x4005dc8	      0xbf00000000	                              mov edi, 0	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005dcd	            0x31c0	                            xor eax, eax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005dcf	      0xe800000000	                          call 0x4005dd4	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005dd4	      0xbf00000000	                              mov edi, 0	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005dd9	          0x4889c6	                            mov rsi, rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005ddc	      0x4889442418	             mov qword [rsp + 0x18], rax	       326	sequencer.c	FUNCTION_11	CALL_6
0x4005de1	            0x31c0	                            xor eax, eax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005de3	      0xe800000000	                          call 0x4005de8	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005de8	          0x8b7314	            mov esi, dword [rbx + 0x14] 	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005deb	      0x4889442410	             mov qword [rsp + 0x10], rax	       327	sequencer.c	FUNCTION_11	CALL_7
0x4005df0	            0x85f6	                           test esi, esi	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005df2	            0x7413	                            je 0x4005e07	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005df4	      0x418d4424fc	                      lea eax, [r12 - 4]	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005df9	          0x83f801	                              cmp eax, 1	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005dfc	            0x7609	                           jbe 0x4005e07	      1556	sequencer.c	FUNCTION_48	IF_11	CALL_17
0x4005dfe	          0x4585f6	                         test r14d, r14d	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4005e01	     0xf852bf6ffff	                           jne 0x4005432	      1557	sequencer.c	FUNCTION_48	IF_11	CALL_18
0x4005e07	          0x4531ed	                          xor r13d, r13d	      1528	sequencer.c	FUNCTION_48	IF_5
0x4005e0a	      0xe9c9f2ffff	                           jmp 0x40050d8	      1528	sequencer.c	FUNCTION_48	IF_5
0x4005e0f	        0x498d7d04	                      lea rdi, [r13 + 4]	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005e13	      0xe800000000	                          call 0x4005e18	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005e18	        0x4183fc0b	                           cmp r12d, 0xb	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005e1c	          0x4889c5	                            mov rbp, rax	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005e1f	     0xf87df0f0000	                            ja 0x4006e04	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005e25	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4005e2a	        0x49c1e404	                              shl r12, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005e2e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005e33	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4005e35	    0x498b9c240000	                    mov rbx, qword [r12]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4005e3d	      0xe800000000	                          call 0x4005e42	        54	gettext.h	FUNCTION_164
0x4005e42	          0x4889ea	                            mov rdx, rbp	      1572	sequencer.c	FUNCTION_48	IF_14	CALL_23
0x4005e45	          0x4889c7	                            mov rdi, rax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005e48	          0x4889de	                            mov rsi, rbx	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005e4b	            0x31c0	                            xor eax, eax	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005e4d	      0xe800000000	                          call 0x4005e52	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005e52	      0xb8ffffffff	                     mov eax, 0xffffffff	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005e57	      0xe9d1f4ffff	                           jmp 0x400532d	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4005e5c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x4005e61	      0xe8dac0ffff	            call sym.write_author_script	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x4005e66	      0xe9d0f5ffff	                           jmp 0x400543b	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x4005e6b	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1560	sequencer.c	FUNCTION_48	IF_11	CALL_20
0x4005e6f	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005e78	          0x83e012	                           and eax, 0x12	      1707	sequencer.c	FUNCTION_48	IF_36	IF_37
0x4005e7b	            0x85c0	                           test eax, eax	      1213	sequencer.c	FUNCTION_38	IF_1
0x4005e7d	     0xf85fcf5ffff	                           jne 0x400547f	      1213	sequencer.c	FUNCTION_38	IF_1
0x4005e83	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005e88	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4005e94	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4005ea0	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1215	sequencer.c	FUNCTION_38	IF_1
0x4005eac	          0x4885c0	                           test rax, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005eaf	     0xf84ab040000	                            je 0x4006360	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005eb5	    0x4c8dac24c000	                   lea r13, [rsp + 0xc0]	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005ebd	      0xba00080000	                          mov edx, 0x800	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005ec2	          0x4889c6	                            mov rsi, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005ec5	          0x4c89ef	                            mov rdi, r13	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005ec8	          0x4d89ec	                            mov r12, r13	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4005ecb	      0xe800000000	                          call 0x4005ed0	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005ed0	          0x4885c0	                           test rax, rax	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005ed3	     0xf88530a0000	                            js 0x400692c	      1217	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_1
0x4005ed9	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4005ee1	    0x48c784248800	               mov qword [rsp + 0x88], 0	      1108	sequencer.c	FUNCTION_37
0x4005eed	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      1110	sequencer.c	FUNCTION_37
0x4005ef9	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	      1110	sequencer.c	FUNCTION_37
0x4005f05	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      1110	sequencer.c	FUNCTION_37
0x4005f11	    0x48c784240001	              mov qword [rsp + 0x100], 0	      1111	sequencer.c	FUNCTION_37
0x4005f1d	    0x48c784240801	              mov qword [rsp + 0x108], 0	      1111	sequencer.c	FUNCTION_37
0x4005f29	    0x48c784241001	              mov qword [rsp + 0x110], 0	      1111	sequencer.c	FUNCTION_37
0x4005f35	      0xe8e6b7ffff	                     call sym.parse_head	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4005f3a	            0x85c0	                           test eax, eax	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4005f3c	     0xf85780b0000	                           jne 0x4006aba	      1117	sequencer.c	FUNCTION_37	IF_1	CALL_1
0x4005f42	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1120	sequencer.c	FUNCTION_37	IF_2
0x4005f46	          0x83e004	                              and eax, 4	      1120	sequencer.c	FUNCTION_37	IF_2
0x4005f49	        0x8944246c	             mov dword [rsp + 0x6c], eax	      1120	sequencer.c	FUNCTION_37	IF_2
0x4005f4d	     0xf8529040000	                           jne 0x400637c	      1120	sequencer.c	FUNCTION_37	IF_2
0x4005f53	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005f5b	          0x4885ff	                           test rdi, rdi	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005f5e	            0x740d	                            je 0x4005f6d	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005f60	    0x488db4248800	                   lea rsi, [rsp + 0x88]	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4005f68	      0xe800000000	                          call 0x4005f6d	      1143	sequencer.c	FUNCTION_37	ELSE_1	IF_5	CALL_11
0x4005f6d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005f72	    0x4c8db4247001	                  lea r14, [rsp + 0x170]	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005f7a	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1113	sequencer.c	FUNCTION_37
0x4005f83	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1112	sequencer.c	FUNCTION_37
0x4005f8c	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1109	sequencer.c	FUNCTION_37
0x4005f95	      0x4889442460	             mov qword [rsp + 0x60], rax	      1142	sequencer.c	FUNCTION_37	ELSE_1	IF_5
0x4005f9a	            0x31d2	                            xor edx, edx	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4005f9c	            0x31f6	                            xor esi, esi	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4005f9e	          0x4c89f7	                            mov rdi, r14	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4005fa1	      0xe800000000	                          call 0x4005fa6	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4005fa6	            0x85c0	                           test eax, eax	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4005fa8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4005fad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4005fb2	     0xf85e5020000	                           jne 0x400629d	      1146	sequencer.c	FUNCTION_37	IF_6	CALL_12
0x4005fb8	      0xf644242801	               test byte [rsp + 0x28], 1	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005fbd	     0xf8564010000	                           jne 0x4006127	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005fc3	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005fcb	      0xb800000000	                              mov eax, 0	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005fd0	          0x4885ff	                           test rdi, rdi	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005fd3	            0x7405	                            je 0x4005fda	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005fd5	      0xe800000000	                          call 0x4005fda	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005fda	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x4005fdf	          0x4c89f6	                            mov rsi, r14	       975	cache.h	FUNCTION_173	CALL_1
0x4005fe2	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_173	CALL_1
0x4005fe5	      0xe800000000	                          call 0x4005fea	       975	cache.h	FUNCTION_173	CALL_1
0x4005fea	            0x85c0	                           test eax, eax	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005fec	     0xf8535010000	                           jne 0x4006127	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005ff2	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1151	sequencer.c	FUNCTION_37	IF_7	CALL_14
0x4005ffa	    0x41bf01000000	                             mov r15d, 1	      1154	sequencer.c	FUNCTION_37	IF_7
0x4006000	      0x4889442460	             mov qword [rsp + 0x60], rax	      1154	sequencer.c	FUNCTION_37	IF_7
0x4006005	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1200	sequencer.c	FUNCTION_37	CALL_30
0x400600a	      0xe800000000	                          call 0x400600f	      1200	sequencer.c	FUNCTION_37	CALL_30
0x400600f	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006014	      0xe800000000	                          call 0x4006019	      1201	sequencer.c	FUNCTION_37	CALL_31
0x4006019	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1202	sequencer.c	FUNCTION_37	CALL_32
0x400601e	      0xe800000000	                          call 0x4006023	      1202	sequencer.c	FUNCTION_37	CALL_32
0x4006023	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x4006028	      0xe800000000	                          call 0x400602d	      1203	sequencer.c	FUNCTION_37	CALL_33
0x400602d	          0x4c89ef	                            mov rdi, r13	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006030	      0xe800000000	                          call 0x4006035	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006035	        0x4183ff01	                             cmp r15d, 1	      1234	sequencer.c	FUNCTION_38	IF_5
0x4006039	     0xf85b1f2ffff	                           jne 0x40052f0	      1234	sequencer.c	FUNCTION_38	IF_5
0x400603f	      0xe93bf4ffff	                           jmp 0x400547f	      1234	sequencer.c	FUNCTION_38	IF_5
0x4006044	         0xf1f4000	                         nop dword [rax]	      1234	sequencer.c	FUNCTION_38	IF_5
0x4006048	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400604d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4006052	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4006054	      0xe800000000	                          call 0x4006059	        54	gettext.h	FUNCTION_164
0x4006059	          0x4889c7	                            mov rdi, rax	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x400605c	            0x31c0	                            xor eax, eax	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x400605e	      0xe800000000	                          call 0x4006063	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x4006063	      0xb8ffffffff	                     mov eax, 0xffffffff	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x4006068	      0xe9c0f2ffff	                           jmp 0x400532d	      1516	sequencer.c	FUNCTION_48	IF_1	CALL_3
0x400606d	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006072	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006074	      0xe800000000	                          call 0x4006079	        82	sequencer.c	CALL_13
0x4006079	          0x4889c6	                            mov rsi, rax	        82	sequencer.c	CALL_13
0x400607c	    0x488905000000	            mov qword [0x04006083], rax 	        82	sequencer.c	CALL_13
0x4006083	      0xe98bf6ffff	                           jmp 0x4005713	        82	sequencer.c	CALL_13
0x4006088	     0xf1f84000000	                   nop dword [rax + rax]	        82	sequencer.c	CALL_13
0x4006090	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	        82	sequencer.c	CALL_13
0x4006098	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x400609b	     0xf85b6030000	                           jne 0x4006457	       141	strbuf.h	FUNCTION_108
0x40060a1	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x40060a6	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_110	CALL_2
0x40060a9	      0xe800000000	                          call 0x40060ae	       228	strbuf.h	FUNCTION_110	CALL_2
0x40060ae	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	       228	strbuf.h	FUNCTION_110	CALL_2
0x40060b6	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x40060ba	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       229	strbuf.h	FUNCTION_110
0x40060c2	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       229	strbuf.h	FUNCTION_110
0x40060ca	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_110
0x40060ce	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       230	strbuf.h	FUNCTION_110
0x40060d6	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       230	strbuf.h	FUNCTION_110
0x40060de	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x40060e2	      0xe96afaffff	                           jmp 0x4005b51	       230	strbuf.h	FUNCTION_110
0x40060e7	    0x660f1f840000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_110
0x40060f0	        0x488d7d04	                      lea rdi, [rbp + 4]	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40060f4	      0xe800000000	                          call 0x40060f9	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x40060f9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40060fe	          0x4889c3	                            mov rbx, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006101	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4006106	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4006108	      0xe800000000	                          call 0x400610d	        54	gettext.h	FUNCTION_164
0x400610d	          0x4489ea	                           mov edx, r13d	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006110	          0x4889c7	                            mov rdi, rax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006113	          0x4889de	                            mov rsi, rbx	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006116	            0x31c0	                            xor eax, eax	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006118	      0xe800000000	                          call 0x400611d	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x400611d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006122	      0xe906f2ffff	                           jmp 0x400532d	      1543	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_8	CALL_10
0x4006127	      0xbf00000000	                              mov edi, 0	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x400612c	      0xe800000000	                          call 0x4006131	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x4006131	          0x4885c0	                           test rax, rax	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x4006134	     0xf84f0000000	                            je 0x400622a	      1158	sequencer.c	FUNCTION_37	IF_8	CALL_16
0x400613a	    0x4c8b15000000	            mov r10, qword [0x04006141] 	        36	sequencer.c	CALL_1
0x4006141	    0x48c784249000	               mov qword [rsp + 0x90], 0	       928	sequencer.c	FUNCTION_33
0x400614d	    0xc78424980000	               mov dword [rsp + 0x98], 0	       928	sequencer.c	FUNCTION_33
0x4006158	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	       928	sequencer.c	FUNCTION_33
0x4006163	          0x4d85d2	                           test r10, r10	        36	sequencer.c	CALL_1
0x4006166	     0xf84790a0000	                            je 0x4006be5	        36	sequencer.c	CALL_1
0x400616c	      0x498b742408	                mov rsi, qword [r12 + 8]	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006171	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006176	          0x4c89d2	                            mov rdx, r10	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006179	      0x4c89542470	             mov qword [rsp + 0x70], r10	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x400617e	      0xe86db1ffff	     call sym.write_message.constprop.34	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006183	            0x85c0	                           test eax, eax	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x4006185	     0xf8523010000	                           jne 0x40062ae	       933	sequencer.c	FUNCTION_33	IF_1	CALL_2
0x400618b	    0x4c8dbc249000	                   lea r15, [rsp + 0x90]	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006193	      0xe800000000	                          call 0x4006198	       936	sequencer.c	FUNCTION_33	CALL_4
0x4006198	      0xbe00000000	                              mov esi, 0	       936	sequencer.c	FUNCTION_33	CALL_4
0x400619d	          0x4889c2	                            mov rdx, rax	       936	sequencer.c	FUNCTION_33	CALL_4
0x40061a0	          0x4c89ff	                            mov rdi, r15	       936	sequencer.c	FUNCTION_33	CALL_4
0x40061a3	            0x31c0	                            xor eax, eax	       936	sequencer.c	FUNCTION_33	CALL_4
0x40061a5	      0xe800000000	                          call 0x40061aa	       936	sequencer.c	FUNCTION_33	CALL_4
0x40061aa	      0xbe00000000	                              mov esi, 0	       937	sequencer.c	FUNCTION_33	CALL_5
0x40061af	          0x4c89ff	                            mov rdi, r15	       937	sequencer.c	FUNCTION_33	CALL_5
0x40061b2	      0xe800000000	                          call 0x40061b7	       937	sequencer.c	FUNCTION_33	CALL_5
0x40061b7	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       938	sequencer.c	FUNCTION_33	IF_2
0x40061bc	      0x4c8b542470	            mov r10, qword [rsp + 0x70] 	       938	sequencer.c	FUNCTION_33	IF_2
0x40061c1	          0x4885c0	                           test rax, rax	       938	sequencer.c	FUNCTION_33	IF_2
0x40061c4	     0xf84fd080000	                            je 0x4006ac7	       938	sequencer.c	FUNCTION_33	IF_2
0x40061ca	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40061d2	          0x4989c0	                             mov r8, rax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40061d5	          0x4531c9	                            xor r9d, r9d	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40061d8	      0xb900000000	                              mov ecx, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40061dd	          0x4c89d2	                            mov rdx, r10	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40061e0	      0xbe00000000	                              mov esi, 0	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40061e5	            0x31c0	                            xor eax, eax	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40061e7	      0xe800000000	                          call 0x40061ec	       939	sequencer.c	FUNCTION_33	IF_2	CALL_6
0x40061ec	            0x85c0	                           test eax, eax	       944	sequencer.c	FUNCTION_33	IF_3
0x40061ee	     0xf85ac020000	                           jne 0x40064a0	       944	sequencer.c	FUNCTION_33	IF_3
0x40061f4	          0x4c89ff	                            mov rdi, r15	       946	sequencer.c	FUNCTION_33	CALL_9
0x40061f7	      0xe800000000	                          call 0x40061fc	       946	sequencer.c	FUNCTION_33	CALL_9
0x40061fc	    0x488b05000000	            mov rax, qword [0x04006203] 	        36	sequencer.c	CALL_1
0x4006203	          0x4885c0	                           test rax, rax	        36	sequencer.c	CALL_1
0x4006206	     0xf84c30a0000	                            je 0x4006ccf	        36	sequencer.c	CALL_1
0x400620c	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006211	      0xba00080000	                          mov edx, 0x800	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006216	          0x4889c6	                            mov rsi, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006219	          0x4c89e7	                            mov rdi, r12	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x400621c	      0xe800000000	                          call 0x4006221	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006221	          0x4885c0	                           test rax, rax	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x4006224	     0xf88c1080000	                            js 0x4006aeb	      1162	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_19
0x400622a	      0xf644242808	               test byte [rsp + 0x28], 8	      1172	sequencer.c	FUNCTION_37
0x400622f	     0xf8527040000	                           jne 0x400665c	      1172	sequencer.c	FUNCTION_37
0x4006235	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      1172	sequencer.c	FUNCTION_37
0x4006238	          0x83f801	                              cmp eax, 1	      1175	sequencer.c	FUNCTION_37	IF_11
0x400623b	     0xf85b50b0000	                           jne 0x4006df6	      1175	sequencer.c	FUNCTION_37	IF_11
0x4006241	          0x8b7b20	            mov edi, dword [rbx + 0x20] 	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x4006244	            0x85ff	                           test edi, edi	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x4006246	            0x750c	                           jne 0x4006254	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x4006248	    0x49837c240800	                  cmp qword [r12 + 8], 0	       816	sequencer.c	FUNCTION_28	IF_1
0x400624e	     0xf849efdffff	                            je 0x4005ff2	       816	sequencer.c	FUNCTION_28	IF_1
0x4006254	      0xe800000000	                          call 0x4006259	      1182	sequencer.c	FUNCTION_37	CALL_24
0x4006259	      0x498b742408	                mov rsi, qword [r12 + 8]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400625e	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006263	          0x4c89f2	                            mov rdx, r14	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006266	        0xff742420	                 push qword [rsp + 0x20]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400626a	          0xff7330	                 push qword [rbx + 0x30]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400626d	      0x4c8b4c2470	              mov r9, qword [rsp + 0x70]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006272	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400627a	    0x4c8d84246001	                   lea r8, [rsp + 0x160]	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006282	      0xe800000000	                          call 0x4006287	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006287	            0x85c0	                           test eax, eax	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006289	            0x4158	                                  pop r8	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400628b	            0x4159	                                  pop r9	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x400628d	     0xf84f2060000	                            je 0x4006985	      1184	sequencer.c	FUNCTION_37	IF_13	CALL_25
0x4006293	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4006298	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400629d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400629f	      0xe800000000	                          call 0x40062a4	        54	gettext.h	FUNCTION_164
0x40062a4	          0x4889c7	                            mov rdi, rax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x40062a7	            0x31c0	                            xor eax, eax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x40062a9	      0xe800000000	                          call 0x40062ae	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x40062ae	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x40062b6	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x40062bc	      0x4889442460	             mov qword [rsp + 0x60], rax	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x40062c1	      0xe93ffdffff	                           jmp 0x4006005	      1186	sequencer.c	FUNCTION_37	IF_13	CALL_26
0x40062c6	    0x803d00000000	                cmp byte [0x040062cd], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x40062cd	     0xf8434f2ffff	                            je 0x4005507	       168	strbuf.h	FUNCTION_109	CALL_2
0x40062d3	      0xe800000000	                          call 0x40062d8	       168	strbuf.h	FUNCTION_109	CALL_2
0x40062d8	     0xf1f84000000	                   nop dword [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x40062e0	    0x488b3d000000	            mov rdi, qword [0x040062e7] 	        90	sequencer.c	CALL_14
0x40062e7	          0x4885ff	                           test rdi, rdi	        90	sequencer.c	CALL_14
0x40062ea	     0xf8441080000	                            je 0x4006b31	        90	sequencer.c	CALL_14
0x40062f0	      0xe800000000	                          call 0x40062f5	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x40062f5	            0x85c0	                           test eax, eax	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x40062f7	     0xf846e040000	                            je 0x400676b	      1630	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25	CALL_50
0x40062fd	    0x488b05000000	            mov rax, qword [0x04006304] 	        90	sequencer.c	CALL_14
0x4006304	          0x4885c0	                           test rax, rax	        90	sequencer.c	CALL_14
0x4006307	      0x4889442450	             mov qword [rsp + 0x50], rax	        90	sequencer.c	CALL_14
0x400630c	     0xf843a080000	                            je 0x4006b4c	        90	sequencer.c	CALL_14
0x4006312	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      1631	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25
0x4006316	        0x89442428	             mov dword [rsp + 0x28], eax	      1631	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25
0x400631a	      0xe915f6ffff	                           jmp 0x4005934	      1631	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_7	IF_25
0x400631f	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4006324	          0x4531c9	                            xor r9d, r9d	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4006327	            0x31c9	                            xor ecx, ecx	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4006329	            0x31ff	                            xor edi, edi	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x400632b	    0x41b801000000	                              mov r8d, 1	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4006331	      0xbe00000000	                              mov esi, 0	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x4006336	      0xe800000000	                          call 0x400633b	      1685	sequencer.c	FUNCTION_48	IF_32	CALL_77
0x400633b	            0x85c0	                           test eax, eax	      1684	sequencer.c	FUNCTION_48	IF_32
0x400633d	     0xf857cf2ffff	                           jne 0x40055bf	      1684	sequencer.c	FUNCTION_48	IF_32
0x4006343	      0xe996f8ffff	                           jmp 0x4005bde	      1684	sequencer.c	FUNCTION_48	IF_32
0x4006348	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400634c	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400634f	     0xf85a5f7ffff	                           jne 0x4005afa	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4006355	      0xe97bf7ffff	                           jmp 0x4005ad5	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400635a	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4006360	          0x4531e4	                          xor r12d, r12d	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4006363	    0x4c8dac24c000	                   lea r13, [rsp + 0xc0]	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x400636b	      0xe969fbffff	                           jmp 0x4005ed9	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4006370	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4006374	          0x83e012	                           and eax, 0x12	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x4006377	      0xe9fffaffff	                           jmp 0x4005e7b	      1222	sequencer.c	FUNCTION_38	IF_1	CALL_3
0x400637c	    0x48c784247001	              mov qword [rsp + 0x170], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x4006388	    0x48c784247801	              mov qword [rsp + 0x178], 0	      1121	sequencer.c	FUNCTION_37	IF_2
0x4006394	    0x4c8dbc249000	                   lea r15, [rsp + 0x90]	      1121	sequencer.c	FUNCTION_37	IF_2
0x400639c	      0xe800000000	                          call 0x40063a1	      1122	sequencer.c	FUNCTION_37	IF_2	CALL_2
0x40063a1	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40063a9	            0x31f6	                            xor esi, esi	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40063ab	          0x4889c2	                            mov rdx, rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40063ae	      0xe800000000	                          call 0x40063b3	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40063b3	          0x4d85e4	                           test r12, r12	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x40063b6	          0x4989c6	                            mov r14, rax	      1123	sequencer.c	FUNCTION_37	IF_2	CALL_3
0x40063b9	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1113	sequencer.c	FUNCTION_37
0x40063c2	     0xf84d5070000	                            je 0x4006b9d	      1126	sequencer.c	FUNCTION_37	IF_2	IF_3
0x40063c8	          0x4c89fa	                            mov rdx, r15	       678	sequencer.c	FUNCTION_25	CALL_1
0x40063cb	      0xbe00000000	                              mov esi, 0	       678	sequencer.c	FUNCTION_25	CALL_1
0x40063d0	          0x4c89f7	                            mov rdi, r14	       678	sequencer.c	FUNCTION_25	CALL_1
0x40063d3	      0xe800000000	                          call 0x40063d8	       678	sequencer.c	FUNCTION_25	CALL_1
0x40063d8	          0x4885c0	                           test rax, rax	       679	sequencer.c	FUNCTION_25	IF_1
0x40063db	     0xf8484060000	                            je 0x4006a65	       679	sequencer.c	FUNCTION_25	IF_1
0x40063e1	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	       680	sequencer.c	FUNCTION_25	CALL_2
0x40063e9	          0x4889c7	                            mov rdi, rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x40063ec	      0xe800000000	                          call 0x40063f1	       680	sequencer.c	FUNCTION_25	CALL_2
0x40063f1	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x40063f9	          0x4989c7	                            mov r15, rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x40063fc	          0x4c89f6	                            mov rsi, r14	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x40063ff	      0x4889442460	             mov qword [rsp + 0x60], rax	       680	sequencer.c	FUNCTION_25	CALL_2
0x4006404	      0xe800000000	                          call 0x4006409	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4006409	          0x4d85ff	                           test r15, r15	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x400640c	     0xf8463060000	                            je 0x4006a75	      1136	sequencer.c	FUNCTION_37	IF_2	IF_4
0x4006412	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x400641a	    0x4c8db4247001	                  lea r14, [rsp + 0x170]	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006422	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x4006426	      0xe800000000	                          call 0x400642b	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x400642b	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006433	          0x4c89f6	                            mov rsi, r14	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006436	    0x488984248800	             mov qword [rsp + 0x88], rax	      1140	sequencer.c	FUNCTION_37	IF_2	CALL_9
0x400643e	      0xe800000000	                          call 0x4006443	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006443	      0x4889442420	             mov qword [rsp + 0x20], rax	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006448	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x400644d	      0x4889442438	             mov qword [rsp + 0x38], rax	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006452	      0xe943fbffff	                           jmp 0x4005f9a	      1141	sequencer.c	FUNCTION_37	IF_2	CALL_10
0x4006457	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	       141	strbuf.h	FUNCTION_108
0x400645f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4006463	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4006466	     0xf854afcffff	                           jne 0x40060b6	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400646c	      0xe930fcffff	                           jmp 0x40060a1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4006471	     0xf1f80000000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4006478	          0x4889ef	                            mov rdi, rbp	      1289	sequencer.c	FUNCTION_40	CALL_2
0x400647b	      0xe800abffff	       call sym.is_original_commit_empty	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4006480	            0x85c0	                           test eax, eax	      1290	sequencer.c	FUNCTION_40	IF_5
0x4006482	          0x4189c7	                           mov r15d, eax	      1289	sequencer.c	FUNCTION_40	CALL_2
0x4006485	     0xf8865eeffff	                            js 0x40052f0	      1290	sequencer.c	FUNCTION_40	IF_5
0x400648b	     0xf8592f8ffff	                           jne 0x4005d23	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4006491	      0xe9fdedffff	                           jmp 0x4005293	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x4006496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1703	sequencer.c	FUNCTION_48	ELSE_11	IF_35
0x40064a0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40064a5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40064aa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40064ac	      0xe800000000	                          call 0x40064b1	        54	gettext.h	FUNCTION_164
0x40064b1	          0x4889c7	                            mov rdi, rax	       945	sequencer.c	FUNCTION_33	CALL_8
0x40064b4	            0x31c0	                            xor eax, eax	       945	sequencer.c	FUNCTION_33	CALL_8
0x40064b6	      0xe800000000	                          call 0x40064bb	       945	sequencer.c	FUNCTION_33	CALL_8
0x40064bb	          0x4c89ff	                            mov rdi, r15	       946	sequencer.c	FUNCTION_33	CALL_9
0x40064be	    0x41bfffffffff	                    mov r15d, 0xffffffff	       945	sequencer.c	FUNCTION_33	CALL_8
0x40064c4	      0xe800000000	                          call 0x40064c9	       946	sequencer.c	FUNCTION_33	CALL_9
0x40064c9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40064ce	      0xe800000000	                          call 0x40064d3	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40064d3	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40064db	      0xe800000000	                          call 0x40064e0	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40064e0	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40064e5	      0xe800000000	                          call 0x40064ea	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40064ea	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40064ef	      0xe800000000	                          call 0x40064f4	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40064f4	          0x4c89ef	                            mov rdi, r13	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40064f7	      0xe800000000	                          call 0x40064fc	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40064fc	      0xe9efedffff	                           jmp 0x40052f0	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006501	    0x488b05000000	            mov rax, qword [0x04006508] 	        90	sequencer.c	CALL_14
0x4006508	          0x4885c0	                           test rax, rax	        90	sequencer.c	CALL_14
0x400650b	     0xf84a3070000	                            je 0x4006cb4	        90	sequencer.c	CALL_14
0x4006511	          0x4889c7	                            mov rdi, rax	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x4006514	      0xe800000000	                          call 0x4006519	      1425	sequencer.c	FUNCTION_45	IF_8	CALL_37
0x4006519	     0xfbe15000000	           movsx edx, byte [0x04006520] 	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4006520	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4006525	            0x31c0	                            xor eax, eax	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4006527	      0xbe00000000	                              mov esi, 0	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x400652c	      0xe800000000	                          call 0x4006531	      1426	sequencer.c	FUNCTION_45	IF_8	CALL_38
0x4006531	          0x8b4378	            mov eax, dword [rbx + 0x78] 	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006534	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4006536	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400653b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4006540	        0x448d7801	                     lea r15d, [rax + 1]	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006544	        0x44897b78	            mov dword [rbx + 0x78], r15d	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006548	      0xe800000000	                          call 0x400654d	        54	gettext.h	FUNCTION_164
0x400654d	          0x4489fa	                           mov edx, r15d	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006550	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006555	          0x4889c6	                            mov rsi, rax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006558	            0x31c0	                            xor eax, eax	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400655a	          0x4c89ff	                            mov rdi, r15	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x400655d	      0xe800000000	                          call 0x4006562	      1427	sequencer.c	FUNCTION_45	IF_8	CALL_40
0x4006562	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006567	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400656c	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x400656f	      0x4c897c2460	             mov qword [rsp + 0x60], r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006574	      0xe800000000	                          call 0x4006579	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006579	    0x4c8bbc240001	           mov r15, qword [rsp + 0x100] 	      1430	sequencer.c	FUNCTION_45	IF_8	CALL_42
0x4006581	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006584	      0xe800000000	                          call 0x4006589	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006589	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x400658e	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006591	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006594	      0xe800000000	                          call 0x4006599	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006599	      0xe9c4f2ffff	                           jmp 0x4005862	       279	strbuf.h	FUNCTION_111	CALL_2
0x400659e	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x40065a3	          0x4531c9	                            xor r9d, r9d	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x40065a6	            0x31c9	                            xor ecx, ecx	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x40065a8	            0x31ff	                            xor edi, edi	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x40065aa	    0x41b801000000	                              mov r8d, 1	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x40065b0	      0xbe00000000	                              mov esi, 0	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x40065b5	      0xe800000000	                          call 0x40065ba	      1681	sequencer.c	FUNCTION_48	IF_31	CALL_76
0x40065ba	            0x85c0	                           test eax, eax	      1680	sequencer.c	FUNCTION_48	IF_31
0x40065bc	     0xf84bdecffff	                            je 0x400527f	      1680	sequencer.c	FUNCTION_48	IF_31
0x40065c2	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1683	sequencer.c	FUNCTION_48	IF_31
0x40065c8	      0xe91df0ffff	                           jmp 0x40055ea	      1683	sequencer.c	FUNCTION_48	IF_31
0x40065cd	          0x4c89ff	                            mov rdi, r15	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065d0	      0xbe0a000000	                            mov esi, 0xa	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065d5	      0xe800000000	                          call 0x40065da	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065da	          0x4989c7	                            mov r15, rax	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065dd	      0xe962f1ffff	                           jmp 0x4005744	      1382	sequencer.c	FUNCTION_45	IF_1
0x40065e2	        0x488d7d04	                      lea rdi, [rbp + 4]	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40065e6	      0xe800000000	                          call 0x40065eb	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40065eb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40065f0	          0x4889c3	                            mov rbx, rax	      1535	sequencer.c	FUNCTION_48	ELSE_2	IF_6	IF_7	CALL_8
0x40065f3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40065f8	      0xe986f4ffff	                           jmp 0x4005a83	        54	gettext.h	FUNCTION_164
0x40065fd	    0x48c744244800	               mov qword [rsp + 0x48], 0	       682	sequencer.c	FUNCTION_25
0x4006606	      0xe944ebffff	                           jmp 0x400514f	       682	sequencer.c	FUNCTION_25
0x400660b	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006610	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x4006612	      0xe800000000	                          call 0x4006617	        90	sequencer.c	CALL_14
0x4006617	          0x4889c7	                            mov rdi, rax	        90	sequencer.c	CALL_14
0x400661a	    0x488905000000	            mov qword [0x04006621], rax 	        90	sequencer.c	CALL_14
0x4006621	      0xe997eeffff	                           jmp 0x40054bd	        90	sequencer.c	CALL_14
0x4006626	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x400662b	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x400662d	      0xe800000000	                          call 0x4006632	        95	sequencer.c	CALL_15
0x4006632	          0x4889c7	                            mov rdi, rax	        95	sequencer.c	CALL_15
0x4006635	    0x488905000000	            mov qword [0x0400663c], rax 	        95	sequencer.c	CALL_15
0x400663c	      0xe9a6eeffff	                           jmp 0x40054e7	        95	sequencer.c	CALL_15
0x4006641	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006646	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006648	      0xe800000000	                          call 0x400664d	        82	sequencer.c	CALL_13
0x400664d	          0x4889c7	                            mov rdi, rax	        82	sequencer.c	CALL_13
0x4006650	    0x488905000000	            mov qword [0x04006657], rax 	        82	sequencer.c	CALL_13
0x4006657	      0xe976eeffff	                           jmp 0x40054d2	        82	sequencer.c	CALL_13
0x400665c	      0xbe01000000	                              mov esi, 1	      1172	sequencer.c	FUNCTION_37
0x4006661	          0x4c89e7	                            mov rdi, r12	      1176	sequencer.c	FUNCTION_37	CALL_22
0x4006664	      0xe800000000	                          call 0x4006669	      1176	sequencer.c	FUNCTION_37	CALL_22
0x4006669	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x400666c	            0x85c0	                           test eax, eax	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x400666e	     0xf85e0fbffff	                           jne 0x4006254	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x4006674	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      1177	sequencer.c	FUNCTION_37	IF_12	CALL_23
0x4006679	          0x4885c9	                           test rcx, rcx	       789	sequencer.c	FUNCTION_27	FOR_1
0x400667c	     0xf8470f9ffff	                            je 0x4005ff2	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006682	      0x48895c2470	             mov qword [rsp + 0x70], rbx	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006687	          0x4531ff	                          xor r15d, r15d	       789	sequencer.c	FUNCTION_27	FOR_1
0x400668a	          0x4c89e3	                            mov rbx, r12	       789	sequencer.c	FUNCTION_27	FOR_1
0x400668d	            0x31c0	                            xor eax, eax	       789	sequencer.c	FUNCTION_27	FOR_1
0x400668f	      0x48896c2458	             mov qword [rsp + 0x58], rbp	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006694	          0x4989cc	                            mov r12, rcx	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006697	      0x4c896c2478	             mov qword [rsp + 0x78], r13	       789	sequencer.c	FUNCTION_27	FOR_1
0x400669c	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40066a0	          0x4c89e2	                            mov rdx, r12	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40066a3	      0xbe0a000000	                            mov esi, 0xa	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40066a8	          0x4829c2	                            sub rdx, rax	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40066ab	      0x498d6c0500	                    lea rbp, [r13 + rax]	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40066b0	          0x4889ef	                            mov rdi, rbp	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40066b3	      0xe800000000	                          call 0x40066b8	       790	sequencer.c	FUNCTION_27	FOR_1	CALL_1
0x40066b8	            0x89c2	                            mov edx, eax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40066ba	          0x4429ea	                           sub edx, r13d	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40066bd	          0x4885c0	                           test rax, rax	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40066c0	        0x440f45e2	                        cmovne r12d, edx	       792	sequencer.c	FUNCTION_27	FOR_1	IF_1
0x40066c4	          0x4489e0	                           mov eax, r12d	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40066c7	          0x4429f8	                           sub eax, r15d	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40066ca	            0x4898	                                    cdqe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40066cc	        0x4883f80e	                            cmp rax, 0xe	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40066d0	     0xf8781020000	                            ja 0x4006957	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x40066d6	          0x4539e7	                          cmp r15d, r12d	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x40066d9	     0xf8d08060000	                           jge 0x4006ce7	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x40066df	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40066e3	        0x418d5701	                      lea edx, [r15 + 1]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40066e7	          0x4d63ff	                        movsxd r15, r15d	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40066ea	      0x420fb60439	             movzx eax, byte [rcx + r15]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40066ef	    0xf68000000000	                      test byte [rax], 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40066f6	            0x745c	                            je 0x4006754	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40066f8	          0x4863c2	                         movsxd rax, edx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40066fb	          0x4801c8	                            add rax, rcx	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x40066fe	            0xeb13	                           jmp 0x4006713	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4006700	           0xfb608	                   movzx ecx, byte [rax]	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4006703	          0x83c201	                              add edx, 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4006706	        0x4883c001	                              add rax, 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x400670a	    0xf68100000000	                      test byte [rcx], 1	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4006711	            0x7441	                            je 0x4006754	       802	sequencer.c	FUNCTION_27	FOR_1	WHILE_1	IF_3
0x4006713	          0x4439e2	                           cmp edx, r12d	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4006716	            0x75e8	                           jne 0x4006700	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4006718	      0x458d7c2401	                     lea r15d, [r12 + 1]	       789	sequencer.c	FUNCTION_27	FOR_1
0x400671d	        0x4c8b6308	                mov r12, qword [rbx + 8]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006721	          0x4963c7	                        movsxd rax, r15d	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006724	          0x4939c4	                            cmp r12, rax	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006727	     0xf876fffffff	                            ja 0x400669c	       789	sequencer.c	FUNCTION_27	FOR_1
0x400672d	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006735	      0x488b6c2458	            mov rbp, qword [rsp + 0x58] 	       789	sequencer.c	FUNCTION_27	FOR_1
0x400673a	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	       789	sequencer.c	FUNCTION_27	FOR_1
0x400673f	      0x4c8b6c2478	            mov r13, qword [rsp + 0x78] 	       789	sequencer.c	FUNCTION_27	FOR_1
0x4006744	    0x41bf01000000	                             mov r15d, 1	      1178	sequencer.c	FUNCTION_37	IF_12
0x400674a	      0x4889442460	             mov qword [rsp + 0x60], rax	      1178	sequencer.c	FUNCTION_37	IF_12
0x400674f	      0xe9b1f8ffff	                           jmp 0x4006005	      1178	sequencer.c	FUNCTION_37	IF_12
0x4006754	          0x4989dc	                            mov r12, rbx	      1178	sequencer.c	FUNCTION_37	IF_12
0x4006757	      0x488b6c2458	            mov rbp, qword [rsp + 0x58] 	      1178	sequencer.c	FUNCTION_37	IF_12
0x400675c	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      1178	sequencer.c	FUNCTION_37	IF_12
0x4006761	      0x4c8b6c2478	            mov r13, qword [rsp + 0x78] 	      1178	sequencer.c	FUNCTION_37	IF_12
0x4006766	      0xe9e9faffff	                           jmp 0x4006254	      1178	sequencer.c	FUNCTION_37	IF_12
0x400676b	      0xe800000000	                          call 0x4006770	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x4006770	          0x4889c7	                            mov rdi, rax	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x4006773	      0x4889442450	             mov qword [rsp + 0x50], rax	      1634	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_52
0x4006778	      0xe800000000	                          call 0x400677d	      1635	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_53
0x400677d	    0x488b05000000	            mov rax, qword [0x04006784] 	        82	sequencer.c	CALL_13
0x4006784	          0x4885c0	                           test rax, rax	        82	sequencer.c	CALL_13
0x4006787	     0xf84d0040000	                            je 0x4006c5d	        82	sequencer.c	CALL_13
0x400678d	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4006792	      0xbab6010000	                          mov edx, 0x1b6	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x4006797	          0x4889c6	                            mov rsi, rax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x400679a	      0xe800000000	                          call 0x400679f	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x400679f	            0x85c0	                           test eax, eax	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x40067a1	     0xf8592040000	                           jne 0x4006c39	      1636	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_55
0x40067a7	      0xe800000000	                          call 0x40067ac	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x40067ac	          0x4889c7	                            mov rdi, rax	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x40067af	      0xe800000000	                          call 0x40067b4	      1639	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	CALL_59
0x40067b4	    0xc74424280600	               mov dword [rsp + 0x28], 6	      1641	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x40067bc	      0xe973f1ffff	                           jmp 0x4005934	      1641	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8
0x40067c1	    0x4c8db4247001	                  lea r14, [rsp + 0x170]	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40067c9	      0xbf00000000	                              mov edi, 0	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40067ce	          0x4c89f6	                            mov rsi, r14	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40067d1	      0xe800000000	                          call 0x40067d6	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40067d6	            0x85c0	                           test eax, eax	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40067d8	     0xf85cd050000	                           jne 0x4006dab	      1394	sequencer.c	FUNCTION_45	ELSE_1	IF_3	CALL_10
0x40067de	          0x4c89f7	                            mov rdi, r14	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40067e1	      0xe800000000	                          call 0x40067e6	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40067e6	          0x4885c0	                           test rax, rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40067e9	          0x4989c7	                            mov r15, rax	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40067ec	     0xf84a0050000	                            je 0x4006d92	      1396	sequencer.c	FUNCTION_45	ELSE_1	IF_4	CALL_12
0x40067f2	            0x31f6	                            xor esi, esi	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40067f4	          0x4889c7	                            mov rdi, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40067f7	      0xe800000000	                          call 0x40067fc	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40067fc	          0x4885c0	                           test rax, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x40067ff	          0x4989c6	                            mov r14, rax	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4006802	     0xf8471050000	                            je 0x4006d79	      1398	sequencer.c	FUNCTION_45	ELSE_1	IF_5	CALL_14
0x4006808	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x400680d	          0x4889c7	                            mov rdi, rax	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4006810	      0xe800000000	                          call 0x4006815	      1401	sequencer.c	FUNCTION_45	ELSE_1	CALL_16
0x4006815	    0x488b15000000	            mov rdx, qword [0x0400681c] 	        90	sequencer.c	CALL_14
0x400681c	          0x4885d2	                           test rdx, rdx	        90	sequencer.c	CALL_14
0x400681f	     0xf84ca040000	                            je 0x4006cef	        90	sequencer.c	CALL_14
0x4006825	    0x488b8c240001	           mov rcx, qword [rsp + 0x100] 	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400682d	      0x4889542450	             mov qword [rsp + 0x50], rdx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006832	          0x4889cf	                            mov rdi, rcx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006835	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400683a	      0xe800000000	                          call 0x400683f	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400683f	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006844	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006849	          0x4889c6	                            mov rsi, rax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400684c	          0x4889cf	                            mov rdi, rcx	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400684f	      0xe89caaffff	     call sym.write_message.constprop.34	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006854	            0x85c0	                           test eax, eax	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x4006856	     0xf85c9040000	                           jne 0x4006d25	      1402	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_18
0x400685c	     0xfbe15000000	           movsx edx, byte [0x04006863] 	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4006863	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4006868	            0x31c0	                            xor eax, eax	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x400686a	      0xbe00000000	                              mov esi, 0	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x400686f	      0xe800000000	                          call 0x4006874	      1409	sequencer.c	FUNCTION_45	ELSE_1	CALL_23
0x4006874	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4006876	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400687b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4006880	      0xe800000000	                          call 0x4006885	        54	gettext.h	FUNCTION_164
0x4006885	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x400688a	          0x4889c6	                            mov rsi, rax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x400688d	      0xba02000000	                              mov edx, 2	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4006892	            0x31c0	                            xor eax, eax	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4006894	      0xe800000000	                          call 0x4006899	      1410	sequencer.c	FUNCTION_45	ELSE_1	CALL_25
0x4006899	     0xfbe15000000	           movsx edx, byte [0x040068a0] 	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40068a0	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40068a5	            0x31c0	                            xor eax, eax	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40068a7	      0xbe00000000	                              mov esi, 0	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40068ac	      0xe800000000	                          call 0x40068b1	      1411	sequencer.c	FUNCTION_45	ELSE_1	CALL_26
0x40068b1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40068b6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40068bb	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40068bd	      0xe800000000	                          call 0x40068c2	        54	gettext.h	FUNCTION_164
0x40068c2	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068c5	      0x4889442428	             mov qword [rsp + 0x28], rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068ca	      0xe800000000	                          call 0x40068cf	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068cf	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068d4	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068d9	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068dc	      0xe800000000	                          call 0x40068e1	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068e1	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068e6	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068eb	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068f0	      0xe800000000	                          call 0x40068f5	       279	strbuf.h	FUNCTION_111	CALL_2
0x40068f5	    0x488bb4240001	           mov rsi, qword [rsp + 0x100] 	      1414	sequencer.c	FUNCTION_45	ELSE_1	CALL_30
0x40068fd	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006900	      0x4889742428	             mov qword [rsp + 0x28], rsi	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006905	      0xe800000000	                          call 0x400690a	       279	strbuf.h	FUNCTION_111	CALL_2
0x400690a	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x400690f	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006914	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006917	      0xe800000000	                          call 0x400691c	       279	strbuf.h	FUNCTION_111	CALL_2
0x400691c	          0x4c89f6	                            mov rsi, r14	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x400691f	          0x4c89ff	                            mov rdi, r15	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x4006922	      0xe800000000	                          call 0x4006927	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x4006927	      0xe989eeffff	                           jmp 0x40057b5	      1416	sequencer.c	FUNCTION_45	ELSE_1	CALL_31
0x400692c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4006931	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4006936	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4006938	      0xe800000000	                          call 0x400693d	        54	gettext.h	FUNCTION_164
0x400693d	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006942	          0x4889c7	                            mov rdi, rax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006945	            0x31c0	                            xor eax, eax	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006947	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400694d	      0xe800000000	                          call 0x4006952	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006952	      0xe999e9ffff	                           jmp 0x40052f0	      1218	sequencer.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006957	      0xbe00000000	                              mov esi, 0	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x400695c	          0x4889ef	                            mov rdi, rbp	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x400695f	      0xe800000000	                          call 0x4006964	       797	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_3
0x4006964	            0x85c0	                           test eax, eax	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4006966	     0xf85acfdffff	                           jne 0x4006718	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x400696c	      0xe965fdffff	                           jmp 0x40066d6	       796	sequencer.c	FUNCTION_27	FOR_1	ELSE_1	IF_2	CALL_2
0x4006971	      0xe800000000	                          call 0x4006976	       586	sequencer.c	FUNCTION_22	CALL_5
0x4006976	          0x4889c7	                            mov rdi, rax	       586	sequencer.c	FUNCTION_22	CALL_5
0x4006979	    0x488905000000	            mov qword [0x04006980], rax 	       586	sequencer.c	FUNCTION_22	CALL_5
0x4006980	      0xe929f3ffff	                           jmp 0x4005cae	       586	sequencer.c	FUNCTION_22	CALL_5
0x4006985	      0xbf00000000	                              mov edi, 0	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x400698a	      0xe800000000	                          call 0x400698f	      1191	sequencer.c	FUNCTION_37	IF_14	CALL_28
0x400698f	    0x488d8c24e000	                   lea rcx, [rsp + 0xe0]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x4006997	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x400699f	    0x488db4245001	                  lea rsi, [rsp + 0x150]	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40069a7	          0x4889c2	                            mov rdx, rax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40069aa	      0x48894c2460	             mov qword [rsp + 0x60], rcx	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40069af	          0x4989c8	                             mov r8, rcx	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40069b2	          0x4c89e1	                            mov rcx, r12	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40069b5	      0xe800000000	                          call 0x40069ba	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40069ba	            0x85c0	                           test eax, eax	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40069bc	     0xf853e020000	                           jne 0x4006c00	      1190	sequencer.c	FUNCTION_37	IF_14	CALL_27
0x40069c2	      0x448b74246c	           mov r14d, dword [rsp + 0x6c] 	      1196	sequencer.c	FUNCTION_37	IF_15
0x40069c7	          0x4585f6	                         test r14d, r14d	      1196	sequencer.c	FUNCTION_37	IF_15
0x40069ca	     0xf854f020000	                           jne 0x4006c1f	      1196	sequencer.c	FUNCTION_37	IF_15
0x40069d0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40069d5	      0xe800000000	                          call 0x40069da	      1200	sequencer.c	FUNCTION_37	CALL_30
0x40069da	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40069df	      0xe800000000	                          call 0x40069e4	      1201	sequencer.c	FUNCTION_37	CALL_31
0x40069e4	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40069e9	      0xe800000000	                          call 0x40069ee	      1202	sequencer.c	FUNCTION_37	CALL_32
0x40069ee	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40069f3	      0xe800000000	                          call 0x40069f8	      1203	sequencer.c	FUNCTION_37	CALL_33
0x40069f8	          0x4c89ef	                            mov rdi, r13	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x40069fb	      0xe800000000	                          call 0x4006a00	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006a00	      0xe800000000	                          call 0x4006a05	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x4006a05	          0x4889c7	                            mov rdi, rax	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x4006a08	      0xe800000000	                          call 0x4006a0d	      1226	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_6
0x4006a0d	      0xe800000000	                          call 0x4006a12	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4006a12	          0x4889c7	                            mov rdi, rax	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4006a15	      0xe800000000	                          call 0x4006a1a	      1227	sequencer.c	FUNCTION_38	IF_1	IF_3	CALL_8
0x4006a1a	          0x833b02	                      cmp dword [rbx], 2	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4006a1d	     0xf84edf1ffff	                            je 0x4005c10	      1228	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_9
0x4006a23	    0x488db4245001	                  lea rsi, [rsp + 0x150]	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a2b	            0x31ff	                            xor edi, edi	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a2d	      0xba02000000	                              mov edx, 2	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a32	      0xe800000000	                          call 0x4006a37	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a37	      0x448b642468	           mov r12d, dword [rsp + 0x68] 	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a3c	          0x4585e4	                         test r12d, r12d	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a3f	           0xf95c0	                                setne al	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a42	          0x4531ff	                          xor r15d, r15d	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a45	      0xe95beaffff	                           jmp 0x40054a5	      1229	sequencer.c	FUNCTION_38	IF_1	IF_3	IF_4	CALL_10
0x4006a4a	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006a4f	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006a51	      0xe800000000	                          call 0x4006a56	        82	sequencer.c	CALL_13
0x4006a56	          0x4889c2	                            mov rdx, rax	        82	sequencer.c	CALL_13
0x4006a59	    0x488905000000	            mov qword [0x04006a60], rax 	        82	sequencer.c	CALL_13
0x4006a60	      0xe918eeffff	                           jmp 0x400587d	        82	sequencer.c	CALL_13
0x4006a65	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4006a6d	          0x4c89f6	                            mov rsi, r14	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4006a70	      0xe800000000	                          call 0x4006a75	      1135	sequencer.c	FUNCTION_37	IF_2	CALL_7
0x4006a75	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4006a7a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4006a7f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4006a81	      0xe800000000	                          call 0x4006a86	        54	gettext.h	FUNCTION_164
0x4006a86	          0x4889c7	                            mov rdi, rax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x4006a89	            0x31c0	                            xor eax, eax	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x4006a8b	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x4006a91	      0xe800000000	                          call 0x4006a96	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x4006a96	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1137	sequencer.c	FUNCTION_37	IF_2	IF_4	CALL_8
0x4006a9e	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1138	sequencer.c	FUNCTION_37	IF_2	IF_4
0x4006aa7	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1109	sequencer.c	FUNCTION_37
0x4006ab0	      0x4889442460	             mov qword [rsp + 0x60], rax	      1109	sequencer.c	FUNCTION_37
0x4006ab5	      0xe94bf5ffff	                           jmp 0x4006005	      1109	sequencer.c	FUNCTION_37
0x4006aba	          0x4c89ef	                            mov rdi, r13	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006abd	      0xe800000000	                          call 0x4006ac2	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006ac2	      0xe914f2ffff	                           jmp 0x4005cdb	      1224	sequencer.c	FUNCTION_38	IF_1	CALL_4
0x4006ac7	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006acf	          0x4531c0	                            xor r8d, r8d	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006ad2	      0xb900000000	                              mov ecx, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006ad7	          0x4c89d2	                            mov rdx, r10	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006ada	      0xbe00000000	                              mov esi, 0	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006adf	            0x31c0	                            xor eax, eax	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006ae1	      0xe800000000	                          call 0x4006ae6	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006ae6	      0xe901f7ffff	                           jmp 0x40061ec	       942	sequencer.c	FUNCTION_33	ELSE_1	CALL_7
0x4006aeb	    0x4c8b25000000	            mov r12, qword [0x04006af2] 	        36	sequencer.c	CALL_1
0x4006af2	          0x4d85e4	                           test r12, r12	        36	sequencer.c	CALL_1
0x4006af5	     0xf8463020000	                            je 0x4006d5e	        36	sequencer.c	CALL_1
0x4006afb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4006b00	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4006b05	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4006b07	      0xe800000000	                          call 0x4006b0c	        54	gettext.h	FUNCTION_164
0x4006b0c	          0x4c89e6	                            mov rsi, r12	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006b0f	          0x4889c7	                            mov rdi, rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006b12	            0x31c0	                            xor eax, eax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006b14	      0xe800000000	                          call 0x4006b19	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006b19	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006b21	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006b27	      0x4889442460	             mov qword [rsp + 0x60], rax	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006b2c	      0xe9d4f4ffff	                           jmp 0x4006005	      1164	sequencer.c	FUNCTION_37	IF_8	IF_10	CALL_20
0x4006b31	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006b36	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x4006b38	      0xe800000000	                          call 0x4006b3d	        90	sequencer.c	CALL_14
0x4006b3d	          0x4889c7	                            mov rdi, rax	        90	sequencer.c	CALL_14
0x4006b40	    0x488905000000	            mov qword [0x04006b47], rax 	        90	sequencer.c	CALL_14
0x4006b47	      0xe9a4f7ffff	                           jmp 0x40062f0	        90	sequencer.c	CALL_14
0x4006b4c	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006b51	      0xe800000000	                          call 0x4006b56	        90	sequencer.c	CALL_14
0x4006b56	    0x488905000000	            mov qword [0x04006b5d], rax 	        90	sequencer.c	CALL_14
0x4006b5d	      0x4889442450	             mov qword [rsp + 0x50], rax	        90	sequencer.c	CALL_14
0x4006b62	      0xe9abf7ffff	                           jmp 0x4006312	        90	sequencer.c	CALL_14
0x4006b67	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006b6c	      0xe800000000	                          call 0x4006b71	        82	sequencer.c	CALL_13
0x4006b71	    0x488905000000	            mov qword [0x04006b78], rax 	        82	sequencer.c	CALL_13
0x4006b78	      0x4889442450	             mov qword [rsp + 0x50], rax	        82	sequencer.c	CALL_13
0x4006b7d	      0xe9aaedffff	                           jmp 0x400592c	        82	sequencer.c	CALL_13
0x4006b82	      0xbf00000000	                              mov edi, 0	        95	sequencer.c	CALL_15
0x4006b87	            0x31c0	                            xor eax, eax	        95	sequencer.c	CALL_15
0x4006b89	      0xe800000000	                          call 0x4006b8e	        95	sequencer.c	CALL_15
0x4006b8e	          0x4889c2	                            mov rdx, rax	        95	sequencer.c	CALL_15
0x4006b91	    0x488905000000	            mov qword [0x04006b98], rax 	        95	sequencer.c	CALL_15
0x4006b98	      0xe959edffff	                           jmp 0x40058f6	        95	sequencer.c	CALL_15
0x4006b9d	          0x4c89fe	                            mov rsi, r15	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006ba0	          0x4889c7	                            mov rdi, rax	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006ba3	    0x48c784249000	               mov qword [rsp + 0x90], 0	      1127	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006baf	      0xe800000000	                          call 0x4006bb4	      1129	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_4
0x4006bb4	    0x4c8ba4249000	            mov r12, qword [rsp + 0x90] 	      1131	sequencer.c	FUNCTION_37	IF_2	IF_3	CALL_5
0x4006bbc	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006bbf	      0xe800000000	                          call 0x4006bc4	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006bc4	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006bc7	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006bcc	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006bcf	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006bd2	      0xe800000000	                          call 0x4006bd7	       279	strbuf.h	FUNCTION_111	CALL_2
0x4006bd7	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1132	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006be0	      0xe9e3f7ffff	                           jmp 0x40063c8	      1132	sequencer.c	FUNCTION_37	IF_2	IF_3
0x4006be5	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006bea	            0x31c0	                            xor eax, eax	        36	sequencer.c	CALL_1
0x4006bec	      0xe800000000	                          call 0x4006bf1	        36	sequencer.c	CALL_1
0x4006bf1	          0x4989c2	                            mov r10, rax	        36	sequencer.c	CALL_1
0x4006bf4	    0x488905000000	            mov qword [0x04006bfb], rax 	        36	sequencer.c	CALL_1
0x4006bfb	      0xe96cf5ffff	                           jmp 0x400616c	        36	sequencer.c	CALL_1
0x4006c00	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006c08	      0xbf00000000	                              mov edi, 0	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006c0d	            0x31c0	                            xor eax, eax	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006c0f	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006c15	      0xe800000000	                          call 0x4006c1a	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006c1a	      0xe9e6f3ffff	                           jmp 0x4006005	      1192	sequencer.c	FUNCTION_37	IF_14
0x4006c1f	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006c27	    0x488db4245001	                  lea rsi, [rsp + 0x150]	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006c2f	      0xe800000000	                          call 0x4006c34	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006c34	      0xe997fdffff	                           jmp 0x40069d0	      1197	sequencer.c	FUNCTION_37	CALL_29
0x4006c39	    0x488b1d000000	            mov rbx, qword [0x04006c40] 	        82	sequencer.c	CALL_13
0x4006c40	          0x4885db	                           test rbx, rbx	        82	sequencer.c	CALL_13
0x4006c43	     0xf847b010000	                            je 0x4006dc4	        82	sequencer.c	CALL_13
0x4006c49	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006c4e	      0xe8cd95ffff	                       call sym._.part.6	        82	sequencer.c	CALL_13
0x4006c53	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4006c58	      0xe9e8f1ffff	                           jmp 0x4005e45	      1637	sequencer.c	FUNCTION_48	ELSE_6	IF_22	ELSE_8	IF_26	CALL_56
0x4006c5d	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006c62	      0xe800000000	                          call 0x4006c67	        82	sequencer.c	CALL_13
0x4006c67	    0x488905000000	            mov qword [0x04006c6e], rax 	        82	sequencer.c	CALL_13
0x4006c6e	      0xe91afbffff	                           jmp 0x400678d	        82	sequencer.c	CALL_13
0x4006c73	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006c78	      0xe8a395ffff	                       call sym._.part.6	        82	sequencer.c	CALL_13
0x4006c7d	          0x4889c7	                            mov rdi, rax	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c80	            0x31c0	                            xor eax, eax	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c82	      0xe800000000	                          call 0x4006c87	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c87	      0xe94ff0ffff	                           jmp 0x4005cdb	       570	sequencer.c	FUNCTION_22	CALL_2
0x4006c8c	    0x488b1d000000	            mov rbx, qword [0x04006c93] 	        82	sequencer.c	CALL_13
0x4006c93	          0x4885db	                           test rbx, rbx	        82	sequencer.c	CALL_13
0x4006c96	            0x7472	                            je 0x4006d0a	        82	sequencer.c	CALL_13
0x4006c98	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006c9d	      0xe87e95ffff	                       call sym._.part.6	        82	sequencer.c	CALL_13
0x4006ca2	          0x4889de	                            mov rsi, rbx	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006ca5	          0x4889c7	                            mov rdi, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006ca8	            0x31c0	                            xor eax, eax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006caa	      0xe800000000	                          call 0x4006caf	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006caf	      0xe99ef1ffff	                           jmp 0x4005e52	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006cb4	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006cb9	      0xe800000000	                          call 0x4006cbe	        90	sequencer.c	CALL_14
0x4006cbe	    0x488905000000	            mov qword [0x04006cc5], rax 	        90	sequencer.c	CALL_14
0x4006cc5	      0xe947f8ffff	                           jmp 0x4006511	        90	sequencer.c	CALL_14
0x4006cca	      0xe800000000	                          call 0x4006ccf	      1727	sequencer.c	FUNCTION_48
0x4006ccf	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006cd4	            0x31c0	                            xor eax, eax	        36	sequencer.c	CALL_1
0x4006cd6	      0xe800000000	                          call 0x4006cdb	        36	sequencer.c	CALL_1
0x4006cdb	    0x488905000000	            mov qword [0x04006ce2], rax 	        36	sequencer.c	CALL_1
0x4006ce2	      0xe925f5ffff	                           jmp 0x400620c	        36	sequencer.c	CALL_1
0x4006ce7	          0x4589fc	                          mov r12d, r15d	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4006cea	      0xe929faffff	                           jmp 0x4006718	       801	sequencer.c	FUNCTION_27	FOR_1	WHILE_1
0x4006cef	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006cf4	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x4006cf6	      0xe800000000	                          call 0x4006cfb	        90	sequencer.c	CALL_14
0x4006cfb	          0x4889c2	                            mov rdx, rax	        90	sequencer.c	CALL_14
0x4006cfe	    0x488905000000	            mov qword [0x04006d05], rax 	        90	sequencer.c	CALL_14
0x4006d05	      0xe91bfbffff	                           jmp 0x4006825	        90	sequencer.c	CALL_14
0x4006d0a	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006d0f	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006d11	      0xe800000000	                          call 0x4006d16	        82	sequencer.c	CALL_13
0x4006d16	          0x4889c3	                            mov rbx, rax	        82	sequencer.c	CALL_13
0x4006d19	    0x488905000000	            mov qword [0x04006d20], rax 	        82	sequencer.c	CALL_13
0x4006d20	      0xe973ffffff	                           jmp 0x4006c98	        82	sequencer.c	CALL_13
0x4006d25	          0x4c89f6	                            mov rsi, r14	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4006d28	          0x4c89ff	                            mov rdi, r15	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4006d2b	      0xe800000000	                          call 0x4006d30	      1404	sequencer.c	FUNCTION_45	ELSE_1	IF_6	CALL_20
0x4006d30	    0x48833d000000	               cmp qword [0x04006d38], 0	        90	sequencer.c	CALL_14
0x4006d38	            0x7513	                           jne 0x4006d4d	        90	sequencer.c	CALL_14
0x4006d3a	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006d3f	            0x31c0	                            xor eax, eax	        90	sequencer.c	CALL_14
0x4006d41	      0xe800000000	                          call 0x4006d46	        90	sequencer.c	CALL_14
0x4006d46	    0x488905000000	            mov qword [0x04006d4d], rax 	        90	sequencer.c	CALL_14
0x4006d4d	    0x488b1d000000	            mov rbx, qword [0x04006d54] 	        90	sequencer.c	CALL_14
0x4006d54	      0xbf00000000	                              mov edi, 0	        90	sequencer.c	CALL_14
0x4006d59	      0xe93fffffff	                           jmp 0x4006c9d	        90	sequencer.c	CALL_14
0x4006d5e	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006d63	            0x31c0	                            xor eax, eax	        36	sequencer.c	CALL_1
0x4006d65	      0xe800000000	                          call 0x4006d6a	        36	sequencer.c	CALL_1
0x4006d6a	          0x4989c4	                            mov r12, rax	        36	sequencer.c	CALL_1
0x4006d6d	    0x488905000000	            mov qword [0x04006d74], rax 	        36	sequencer.c	CALL_1
0x4006d74	      0xe982fdffff	                           jmp 0x4006afb	        36	sequencer.c	CALL_1
0x4006d79	      0xbf00000000	                              mov edi, 0	        36	sequencer.c	CALL_1
0x4006d7e	      0xe89d94ffff	                       call sym._.part.6	        36	sequencer.c	CALL_1
0x4006d83	          0x4889c7	                            mov rdi, rax	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006d86	            0x31c0	                            xor eax, eax	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006d88	      0xe800000000	                          call 0x4006d8d	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006d8d	      0xe9c0f0ffff	                           jmp 0x4005e52	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006d92	      0xbf00000000	                              mov edi, 0	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006d97	      0xe88494ffff	                       call sym._.part.6	      1399	sequencer.c	FUNCTION_45	ELSE_1	CALL_15
0x4006d9c	          0x4889c7	                            mov rdi, rax	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006d9f	            0x31c0	                            xor eax, eax	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006da1	      0xe800000000	                          call 0x4006da6	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006da6	      0xe9a7f0ffff	                           jmp 0x4005e52	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006dab	      0xbf00000000	                              mov edi, 0	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006db0	      0xe86b94ffff	                       call sym._.part.6	      1397	sequencer.c	FUNCTION_45	ELSE_1	CALL_13
0x4006db5	          0x4889c7	                            mov rdi, rax	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4006db8	            0x31c0	                            xor eax, eax	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4006dba	      0xe800000000	                          call 0x4006dbf	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4006dbf	      0xe98ef0ffff	                           jmp 0x4005e52	      1395	sequencer.c	FUNCTION_45	ELSE_1	CALL_11
0x4006dc4	      0xbf00000000	                              mov edi, 0	        82	sequencer.c	CALL_13
0x4006dc9	            0x31c0	                            xor eax, eax	        82	sequencer.c	CALL_13
0x4006dcb	      0xe800000000	                          call 0x4006dd0	        82	sequencer.c	CALL_13
0x4006dd0	          0x4889c3	                            mov rbx, rax	        82	sequencer.c	CALL_13
0x4006dd3	    0x488905000000	            mov qword [0x04006dda], rax 	        82	sequencer.c	CALL_13
0x4006dda	      0xe96afeffff	                           jmp 0x4006c49	        82	sequencer.c	CALL_13
0x4006ddf	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006de4	      0xe800000000	                          call 0x4006de9	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006de9	      0xbf00000000	                              mov edi, 0	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006dee	          0x4889c3	                            mov rbx, rax	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006df1	      0xe9a7feffff	                           jmp 0x4006c9d	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006df6	            0x31f6	                            xor esi, esi	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006df8	          0x83f803	                              cmp eax, 3	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006dfb	        0x400f94c6	                                sete sil	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006dff	      0xe95df8ffff	                           jmp 0x4006661	      1420	sequencer.c	FUNCTION_45	IF_7	CALL_33
0x4006e04	          0x4489e6	                           mov esi, r12d	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4006e07	      0xbf00000000	                              mov edi, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4006e0c	            0x31c0	                            xor eax, eax	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4006e0e	      0xe800000000	                          call 0x4006e13	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
sequencer_remove_state	functions,0:SWITCH,0:ELSE,0:WHILE,1:DO,0:IF,4:CALL,15:FOR,1	142
0x4003420	            0x4154	                                push r12	       256	sequencer.c	FUNCTION_8
0x4003422	              0x55	                                push rbp	       256	sequencer.c	FUNCTION_8
0x4003423	          0x4889fd	                            mov rbp, rdi	       256	sequencer.c	FUNCTION_8
0x4003426	              0x53	                                push rbx	       256	sequencer.c	FUNCTION_8
0x4003427	        0x4883ec20	                           sub rsp, 0x20	       256	sequencer.c	FUNCTION_8
0x400342b	    0x64488b042528	                mov rax, qword fs:[0x28]	       256	sequencer.c	FUNCTION_8
0x4003434	      0x4889442418	             mov qword [rsp + 0x18], rax	       256	sequencer.c	FUNCTION_8
0x4003439	            0x31c0	                            xor eax, eax	       256	sequencer.c	FUNCTION_8
0x400343b	          0x833f02	                      cmp dword [rdi], 2	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x400343e	    0x48c704240000	                      mov qword [rsp], 0	       257	sequencer.c	FUNCTION_8
0x4003446	    0x48c744240800	                  mov qword [rsp + 8], 0	       257	sequencer.c	FUNCTION_8
0x400344f	    0x48c744241000	               mov qword [rsp + 0x10], 0	       257	sequencer.c	FUNCTION_8
0x4003458	     0xf84d2000000	                            je 0x4003530	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x400345e	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	       275	sequencer.c	FUNCTION_8	CALL_7
0x4003462	            0x31db	                            xor ebx, ebx	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003464	      0xe800000000	                          call 0x4003469	       275	sequencer.c	FUNCTION_8	CALL_7
0x4003469	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	       276	sequencer.c	FUNCTION_8	CALL_8
0x400346d	      0xe800000000	                          call 0x4003472	       276	sequencer.c	FUNCTION_8	CALL_8
0x4003472	      0x48837d5000	               cmp qword [rbp + 0x50], 0	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003477	            0x741e	                            je 0x4003497	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003479	     0xf1f80000000	                         nop dword [rax]	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003480	        0x488b4548	            mov rax, qword [rbp + 0x48] 	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003484	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003488	        0x4883c301	                              add rbx, 1	       278	sequencer.c	FUNCTION_8	CALL_9
0x400348c	      0xe800000000	                          call 0x4003491	       278	sequencer.c	FUNCTION_8	CALL_9
0x4003491	        0x48395d50	            cmp qword [rbp + 0x50], rbx 	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003495	            0x77e9	                            ja 0x4003480	       277	sequencer.c	FUNCTION_8	FOR_1
0x4003497	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	       279	sequencer.c	FUNCTION_8	CALL_10
0x400349b	      0xe800000000	                          call 0x40034a0	       279	sequencer.c	FUNCTION_8	CALL_10
0x40034a0	        0x488d7d60	                   lea rdi, [rbp + 0x60]	       280	sequencer.c	FUNCTION_8	CALL_11
0x40034a4	      0xe800000000	                          call 0x40034a9	       280	sequencer.c	FUNCTION_8	CALL_11
0x40034a9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_109	IF_2
0x40034ae	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_109
0x40034b7	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x40034bd	     0xf844d010000	                            je 0x4003610	       165	strbuf.h	FUNCTION_109	IF_2
0x40034c3	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x40034c6	        0x837d0002	                      cmp dword [rbp], 2	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x40034ca	     0xf8418010000	                            je 0x40035e8	       199	sequencer.c	FUNCTION_4	IF_1	CALL_1
0x40034d0	    0x488b05000000	            mov rax, qword [0x040034d7] 	        38	sequencer.c	CALL_2
0x40034d7	          0x4885c0	                           test rax, rax	        38	sequencer.c	CALL_2
0x40034da	     0xf846b010000	                            je 0x400364b	        38	sequencer.c	CALL_2
0x40034e0	          0x4889c3	                            mov rbx, rax	       201	sequencer.c	FUNCTION_4	CALL_3
0x40034e3	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x40034e6	      0xe800000000	                          call 0x40034eb	       279	strbuf.h	FUNCTION_111	CALL_2
0x40034eb	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_111	CALL_2
0x40034ee	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x40034f1	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x40034f4	      0xe800000000	                          call 0x40034f9	       279	strbuf.h	FUNCTION_111	CALL_2
0x40034f9	            0x31f6	                            xor esi, esi	       284	sequencer.c	FUNCTION_8	CALL_14
0x40034fb	          0x4889e7	                            mov rdi, rsp	       284	sequencer.c	FUNCTION_8	CALL_14
0x40034fe	      0xe800000000	                          call 0x4003503	       284	sequencer.c	FUNCTION_8	CALL_14
0x4003503	          0x4889e7	                            mov rdi, rsp	       285	sequencer.c	FUNCTION_8	CALL_15
0x4003506	      0xe800000000	                          call 0x400350b	       285	sequencer.c	FUNCTION_8	CALL_15
0x400350b	            0x31c0	                            xor eax, eax	       288	sequencer.c	FUNCTION_8
0x400350d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       288	sequencer.c	FUNCTION_8
0x4003512	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       288	sequencer.c	FUNCTION_8
0x400351b	     0xf855b010000	                           jne 0x400367c	       288	sequencer.c	FUNCTION_8
0x4003521	        0x4883c420	                           add rsp, 0x20	       288	sequencer.c	FUNCTION_8
0x4003525	              0x5b	                                 pop rbx	       288	sequencer.c	FUNCTION_8
0x4003526	              0x5d	                                 pop rbp	       288	sequencer.c	FUNCTION_8
0x4003527	            0x415c	                                 pop r12	       288	sequencer.c	FUNCTION_8
0x4003529	              0xc3	                                     ret	       288	sequencer.c	FUNCTION_8
0x400352a	    0x660f1f440000	                    nop word [rax + rax]	       288	sequencer.c	FUNCTION_8
0x4003530	    0x488b35000000	            mov rsi, qword [0x04003537] 	       130	sequencer.c	CALL_21
0x4003537	          0x4885f6	                           test rsi, rsi	       130	sequencer.c	CALL_21
0x400353a	     0xf8421010000	                            je 0x4003661	       130	sequencer.c	CALL_21
0x4003540	            0x31d2	                            xor edx, edx	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4003542	          0x4889e7	                            mov rdi, rsp	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x4003545	      0xe800000000	                          call 0x400354a	       261	sequencer.c	FUNCTION_8	IF_1	CALL_3
0x400354a	          0x4885c0	                           test rax, rax	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x400354d	     0xf8e0bffffff	                           jle 0x400345e	       260	sequencer.c	FUNCTION_8	IF_1	CALL_1
0x4003553	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       262	sequencer.c	FUNCTION_8	IF_1
0x4003558	      0x41803c2400	                       cmp byte [r12], 0	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x400355d	            0x7533	                           jne 0x4003592	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x400355f	      0xe9fafeffff	                           jmp 0x400345e	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003564	         0xf1f4000	                         nop dword [rax]	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003568	            0x31c9	                            xor ecx, ecx	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x400356a	            0x31d2	                            xor edx, edx	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x400356c	          0xc60000	                       mov byte [rax], 0	       266	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x400356f	          0x4c89e6	                            mov rsi, r12	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003572	      0xbf00000000	                              mov edi, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003577	      0xe800000000	                          call 0x400357c	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x400357c	            0x85c0	                           test eax, eax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x400357e	     0xf88a4000000	                            js 0x4003628	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x4003584	        0x807b0100	                   cmp byte [rbx + 1], 0	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003588	        0x4c8d6301	                      lea r12, [rbx + 1]	       271	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x400358c	     0xf84ccfeffff	                            je 0x400345e	       263	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003592	      0xbe0a000000	                            mov esi, 0xa	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x4003597	          0x4c89e7	                            mov rdi, r12	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x400359a	      0xe800000000	                          call 0x400359f	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x400359f	          0x4885c0	                           test rax, rax	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x40035a2	          0x4889c3	                            mov rbx, rax	       264	sequencer.c	FUNCTION_8	IF_1	WHILE_1
0x40035a5	            0x75c1	                           jne 0x4003568	       265	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_2
0x40035a7	            0x31c9	                            xor ecx, ecx	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40035a9	            0x31d2	                            xor edx, edx	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40035ab	          0x4c89e6	                            mov rsi, r12	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40035ae	      0xbf00000000	                              mov edi, 0	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40035b3	      0xe800000000	                          call 0x40035b8	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40035b8	            0x85c0	                           test eax, eax	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40035ba	     0xf899efeffff	                           jns 0x400345e	       267	sequencer.c	FUNCTION_8	IF_1	WHILE_1	IF_3	CALL_4
0x40035c0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40035c2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40035c7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40035cc	      0xe800000000	                          call 0x40035d1	        54	gettext.h	FUNCTION_164
0x40035d1	          0x4c89e6	                            mov rsi, r12	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x40035d4	          0x4889c7	                            mov rdi, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x40035d7	            0x31c0	                            xor eax, eax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x40035d9	      0xe800000000	                          call 0x40035de	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x40035de	      0xe97bfeffff	                           jmp 0x400345e	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x40035e3	       0xf1f440000	                   nop dword [rax + rax]	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x40035e8	    0x488b05000000	            mov rax, qword [0x040035ef] 	        45	sequencer.c	CALL_7
0x40035ef	          0x4885c0	                           test rax, rax	        45	sequencer.c	CALL_7
0x40035f2	     0xf85e8feffff	                           jne 0x40034e0	        45	sequencer.c	CALL_7
0x40035f8	      0xbf00000000	                              mov edi, 0	        45	sequencer.c	CALL_7
0x40035fd	      0xe800000000	                          call 0x4003602	        45	sequencer.c	CALL_7
0x4003602	    0x488905000000	            mov qword [0x04003609], rax 	        45	sequencer.c	CALL_7
0x4003609	      0xe9d2feffff	                           jmp 0x40034e0	        45	sequencer.c	CALL_7
0x400360e	            0x6690	                                     nop	        45	sequencer.c	CALL_7
0x4003610	    0x803d00000000	                cmp byte [0x04003617], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x4003617	     0xf84a9feffff	                            je 0x40034c6	       168	strbuf.h	FUNCTION_109	CALL_2
0x400361d	      0xe800000000	                          call 0x4003622	       168	strbuf.h	FUNCTION_109	CALL_2
0x4003622	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_109	CALL_2
0x4003628	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400362a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400362f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4003634	      0xe800000000	                          call 0x4003639	        54	gettext.h	FUNCTION_164
0x4003639	          0x4c89e6	                            mov rsi, r12	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x400363c	          0x4889c7	                            mov rdi, rax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x400363f	            0x31c0	                            xor eax, eax	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003641	      0xe800000000	                          call 0x4003646	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x4003646	      0xe939ffffff	                           jmp 0x4003584	       268	sequencer.c	FUNCTION_8	IF_1	WHILE_1	CALL_6
0x400364b	      0xbf00000000	                              mov edi, 0	        38	sequencer.c	CALL_2
0x4003650	      0xe800000000	                          call 0x4003655	        38	sequencer.c	CALL_2
0x4003655	    0x488905000000	            mov qword [0x0400365c], rax 	        38	sequencer.c	CALL_2
0x400365c	      0xe97ffeffff	                           jmp 0x40034e0	        38	sequencer.c	CALL_2
0x4003661	      0xbf00000000	                              mov edi, 0	       130	sequencer.c	CALL_21
0x4003666	            0x31c0	                            xor eax, eax	       130	sequencer.c	CALL_21
0x4003668	      0xe800000000	                          call 0x400366d	       130	sequencer.c	CALL_21
0x400366d	          0x4889c6	                            mov rsi, rax	       130	sequencer.c	CALL_21
0x4003670	    0x488905000000	            mov qword [0x04003677], rax 	       130	sequencer.c	CALL_21
0x4003677	      0xe9c4feffff	                           jmp 0x4003540	       130	sequencer.c	CALL_21
0x400367c	      0xe800000000	                          call 0x4003681	       288	sequencer.c	FUNCTION_8
parse_insn_buffer	functions,0:SWITCH,0:ELSE,2:WHILE,0:DO,0:IF,5:CALL,9:FOR,1	419
0x4000340	            0x4157	                                push r15	      1891	sequencer.c	FUNCTION_54
0x4000342	            0x4156	                                push r14	      1891	sequencer.c	FUNCTION_54
0x4000344	          0x4989ff	                            mov r15, rdi	      1891	sequencer.c	FUNCTION_54
0x4000347	            0x4155	                                push r13	      1891	sequencer.c	FUNCTION_54
0x4000349	            0x4154	                                push r12	      1891	sequencer.c	FUNCTION_54
0x400034b	          0x4989f6	                            mov r14, rsi	      1891	sequencer.c	FUNCTION_54
0x400034e	              0x55	                                push rbp	      1891	sequencer.c	FUNCTION_54
0x400034f	              0x53	                                push rbx	      1891	sequencer.c	FUNCTION_54
0x4000350	        0x4883ec48	                           sub rsp, 0x48	      1891	sequencer.c	FUNCTION_54
0x4000354	    0x64488b042528	                mov rax, qword fs:[0x28]	      1891	sequencer.c	FUNCTION_54
0x400035d	      0x4889442438	             mov qword [rsp + 0x38], rax	      1891	sequencer.c	FUNCTION_54
0x4000362	            0x31c0	                            xor eax, eax	      1891	sequencer.c	FUNCTION_54
0x4000364	    0x488b05000000	            mov rax, qword [0x0400036b] 	        58	sequencer.c	CALL_9
0x400036b	          0x4885c0	                           test rax, rax	        58	sequencer.c	CALL_9
0x400036e	     0xf84b5050000	                            je 0x4000929	        58	sequencer.c	CALL_9
0x4000374	          0x4889c7	                            mov rdi, rax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4000377	      0xe800000000	                          call 0x400037c	      1894	sequencer.c	FUNCTION_54	CALL_2
0x400037c	        0x41803f00	                       cmp byte [r15], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000380	        0x89442418	             mov dword [rsp + 0x18], eax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4000384	     0xf8498050000	                            je 0x4000922	      1896	sequencer.c	FUNCTION_54	FOR_1
0x400038a	    0xc70424000000	                      mov dword [rsp], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000391	    0x41bc01000000	                             mov r12d, 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000397	    0x660f1f840000	                    nop word [rax + rax]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x40003a0	      0xbe0a000000	                            mov esi, 0xa	      1897	sequencer.c	FUNCTION_54	FOR_1
0x40003a5	          0x4c89ff	                            mov rdi, r15	      1897	sequencer.c	FUNCTION_54	FOR_1
0x40003a8	      0xe800000000	                          call 0x40003ad	      1897	sequencer.c	FUNCTION_54	FOR_1
0x40003ad	          0x803801	                       cmp byte [rax], 1	      1899	sequencer.c	FUNCTION_54	FOR_1
0x40003b0	          0x4889c5	                            mov rbp, rax	      1899	sequencer.c	FUNCTION_54	FOR_1
0x40003b3	          0x4989c5	                            mov r13, rax	      1897	sequencer.c	FUNCTION_54	FOR_1
0x40003b6	        0x4883ddff	             sbb rbp, 0xffffffffffffffff	      1899	sequencer.c	FUNCTION_54	FOR_1
0x40003ba	          0x4c39f8	                            cmp rax, r15	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40003bd	            0x740d	                            je 0x40003cc	      1901	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40003bf	            0x31c0	                            xor eax, eax	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40003c1	      0x41807dff0d	                 cmp byte [r13 - 1], 0xd	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40003c6	           0xf94c0	                                 sete al	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40003c9	          0x4929c5	                            sub r13, rax	      1902	sequencer.c	FUNCTION_54	FOR_1	IF_1
0x40003cc	        0x49635620	         movsxd rdx, dword [r14 + 0x20] 	      1798	sequencer.c	FUNCTION_52
0x40003d0	        0x418b4624	            mov eax, dword [r14 + 0x24] 	      1798	sequencer.c	FUNCTION_52
0x40003d4	            0x39c2	                            cmp edx, eax	      1798	sequencer.c	FUNCTION_52
0x40003d6	     0xf8c55030000	                            jl 0x4000731	      1798	sequencer.c	FUNCTION_52
0x40003dc	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1798	sequencer.c	FUNCTION_52
0x40003e0	            0x89c6	                            mov esi, eax	      1798	sequencer.c	FUNCTION_52
0x40003e2	          0xc1ee1f	                           shr esi, 0x1f	      1798	sequencer.c	FUNCTION_52
0x40003e5	             0x1c6	                            add esi, eax	      1798	sequencer.c	FUNCTION_52
0x40003e7	          0x8d4201	                      lea eax, [rdx + 1]	      1798	sequencer.c	FUNCTION_52
0x40003ea	            0xd1fe	                              sar esi, 1	      1798	sequencer.c	FUNCTION_52
0x40003ec	            0x39f2	                            cmp edx, esi	      1798	sequencer.c	FUNCTION_52
0x40003ee	           0xf4df0	                         cmovge esi, eax	      1798	sequencer.c	FUNCTION_52
0x40003f1	    0x48b855555555	           movabs rax, 0x555555555555555	       795	git-compat-util.h	FUNCTION_132	IF_1
0x40003fb	          0x4863d6	                         movsxd rdx, esi	      1798	sequencer.c	FUNCTION_52
0x40003fe	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_132	IF_1
0x4000401	        0x41895624	             mov dword [r14 + 0x24], edx	       795	git-compat-util.h	FUNCTION_132	IF_1
0x4000405	     0xf8786050000	                            ja 0x4000991	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400040b	        0x488d3452	                  lea rsi, [rdx + rdx*2]	      1798	sequencer.c	FUNCTION_52
0x400040f	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1798	sequencer.c	FUNCTION_52
0x4000413	        0x48c1e604	                              shl rsi, 4	      1798	sequencer.c	FUNCTION_52
0x4000417	      0xe800000000	                          call 0x400041c	      1798	sequencer.c	FUNCTION_52
0x400041c	        0x49635620	         movsxd rdx, dword [r14 + 0x20] 	      1798	sequencer.c	FUNCTION_52
0x4000420	        0x49894618	             mov qword [r14 + 0x18], rax	      1798	sequencer.c	FUNCTION_52
0x4000424	        0x4c8d0452	                   lea r8, [rdx + rdx*2]	      1799	sequencer.c	FUNCTION_52
0x4000428	          0x8d7201	                      lea esi, [rdx + 1]	      1799	sequencer.c	FUNCTION_52
0x400042b	        0x49c1e004	                               shl r8, 4	      1799	sequencer.c	FUNCTION_52
0x400042f	        0x41897620	             mov dword [r14 + 0x20], esi	      1799	sequencer.c	FUNCTION_52
0x4000433	          0x4901c0	                             add r8, rax	      1799	sequencer.c	FUNCTION_52
0x4000436	          0x4c89f8	                            mov rax, r15	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4000439	        0x492b4610	             sub rax, qword [r14 + 0x10]	      1905	sequencer.c	FUNCTION_54	FOR_1
0x400043d	    0x41c740100000	                mov dword [r8 + 0x10], 0	      1808	sequencer.c	FUNCTION_53
0x4000445	        0x49894028	              mov qword [r8 + 0x28], rax	      1905	sequencer.c	FUNCTION_54	FOR_1
0x4000449	        0x410fbe07	                   movsx eax, byte [r15]	      1039	string2.h	FUNCTION_225	WHILE_1
0x400044d	          0x83f820	                           cmp eax, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000450	            0x89c7	                            mov edi, eax	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000452	            0x7409	                            je 0x400045d	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000454	          0x83f809	                              cmp eax, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000457	     0xf8516030000	                           jne 0x4000773	      1039	string2.h	FUNCTION_225	WHILE_1
0x400045d	        0x498d4701	                      lea rax, [r15 + 1]	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000461	     0xf1f80000000	                         nop dword [rax]	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000468	           0xfbe10	                   movsx edx, byte [rax]	      1039	string2.h	FUNCTION_225	WHILE_1
0x400046b	          0x4889c6	                            mov rsi, rax	      1039	string2.h	FUNCTION_225	WHILE_1
0x400046e	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000472	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000475	            0x89d7	                            mov edi, edx	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000477	            0x74ef	                            je 0x4000468	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000479	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x400047c	            0x74ea	                            je 0x4000468	      1039	string2.h	FUNCTION_225	WHILE_1
0x400047e	          0x4939f5	                            cmp r13, rsi	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000481	     0xf8435020000	                            je 0x40006bc	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000487	        0x4080ff0d	                            cmp dil, 0xd	      1813	sequencer.c	FUNCTION_53	IF_1
0x400048b	     0xf842b020000	                            je 0x40006bc	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000491	    0x40383d000000	              cmp byte [0x04000498], dil	      1813	sequencer.c	FUNCTION_53	IF_1
0x4000498	     0xf841e020000	                            je 0x40006bc	      1813	sequencer.c	FUNCTION_53	IF_1
0x400049e	      0xbf00000000	                              mov edi, 0	      1813	sequencer.c	FUNCTION_53	IF_1
0x40004a3	          0x4531db	                          xor r11d, r11d	      1813	sequencer.c	FUNCTION_53	IF_1
0x40004a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1813	sequencer.c	FUNCTION_53	IF_1
0x40004b0	          0x488b07	                    mov rax, qword [rdi]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_1
0x40004b3	          0x4889f3	                            mov rbx, rsi	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_1
0x40004b6	            0xeb19	                           jmp 0x40004d1	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_1
0x40004b8	     0xf1f84000000	                   nop dword [rax + rax]	      1822	sequencer.c	FUNCTION_53	FOR_1	IF_2	CALL_1
0x40004c0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40004c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40004c8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40004cb	     0xf85b7010000	                           jne 0x4000688	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40004d1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40004d4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40004d6	            0x75e8	                           jne 0x40004c0	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40004d8	          0x458918	                    mov dword [r8], r11d	      1823	sequencer.c	FUNCTION_53	FOR_1	IF_2
0x40004db	           0xfbe03	                   movsx eax, byte [rbx]	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004de	          0x83f820	                           cmp eax, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004e1	            0x7409	                            je 0x40004ec	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004e3	          0x83f809	                              cmp eax, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004e6	     0xf85fc000000	                           jne 0x40005e8	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004ec	            0x31c0	                            xor eax, eax	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004ee	            0x6690	                                     nop	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004f0	        0x4883c001	                              add rax, 1	      1040	string2.h	FUNCTION_225	WHILE_1
0x40004f4	         0xfbe1403	             movsx edx, byte [rbx + rax]	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004f8	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004fb	            0x74f3	                            je 0x40004f0	      1039	string2.h	FUNCTION_225	WHILE_1
0x40004fd	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000500	            0x74ee	                            je 0x40004f0	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000502	          0x418b30	                     mov esi, dword [r8]	      1837	sequencer.c	FUNCTION_53	IF_5
0x4000505	          0x4863d0	                         movsxd rdx, eax	      1835	sequencer.c	FUNCTION_53
0x4000508	          0x4801d3	                            add rbx, rdx	      1835	sequencer.c	FUNCTION_53
0x400050b	          0x83fe0a	                            cmp esi, 0xa	      1837	sequencer.c	FUNCTION_53	IF_5
0x400050e	     0xf8426020000	                            je 0x400073a	      1837	sequencer.c	FUNCTION_53	IF_5
0x4000514	            0x85c0	                           test eax, eax	      1847	sequencer.c	FUNCTION_53	IF_7
0x4000516	     0xf84d8000000	                            je 0x40005f4	      1847	sequencer.c	FUNCTION_53	IF_7
0x400051c	          0x8d46fa	                      lea eax, [rsi - 6]	      1851	sequencer.c	FUNCTION_53	IF_8
0x400051f	          0x83f802	                              cmp eax, 2	      1851	sequencer.c	FUNCTION_53	IF_8
0x4000522	     0xf865b020000	                           jbe 0x4000783	      1851	sequencer.c	FUNCTION_53	IF_8
0x4000528	          0x83fe09	                              cmp esi, 9	      1859	sequencer.c	FUNCTION_53	IF_9
0x400052b	     0xf846d020000	                            je 0x400079e	      1859	sequencer.c	FUNCTION_53	IF_9
0x4000531	           0xfb613	                   movzx edx, byte [rbx]	      1859	sequencer.c	FUNCTION_53	IF_9
0x4000534	            0x84d2	                             test dl, dl	       974	string2.h	FUNCTION_223	WHILE_1
0x4000536	     0xf8403040000	                            je 0x400093f	       974	string2.h	FUNCTION_223	WHILE_1
0x400053c	          0x8d42f7	                      lea eax, [rdx - 9]	       975	string2.h	FUNCTION_223	WHILE_1
0x400053f	            0x3c01	                               cmp al, 1	       975	string2.h	FUNCTION_223	WHILE_1
0x4000541	     0xf861d040000	                           jbe 0x4000964	       975	string2.h	FUNCTION_223	WHILE_1
0x4000547	          0x80fa20	                            cmp dl, 0x20	       975	string2.h	FUNCTION_223	WHILE_1
0x400054a	     0xf8414040000	                            je 0x4000964	       975	string2.h	FUNCTION_223	WHILE_1
0x4000550	        0x488d4301	                      lea rax, [rbx + 1]	       975	string2.h	FUNCTION_223	WHILE_1
0x4000554	            0xeb24	                           jmp 0x400057a	       975	string2.h	FUNCTION_223	WHILE_1
0x4000556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       975	string2.h	FUNCTION_223	WHILE_1
0x4000560	          0x8d72f7	                      lea esi, [rdx - 9]	       975	string2.h	FUNCTION_223	WHILE_1
0x4000563	        0x4883c001	                              add rax, 1	       975	string2.h	FUNCTION_223	WHILE_1
0x4000567	        0x4080fe01	                              cmp sil, 1	       975	string2.h	FUNCTION_223	WHILE_1
0x400056b	     0xf868b020000	                           jbe 0x40007fc	       975	string2.h	FUNCTION_223	WHILE_1
0x4000571	          0x80fa20	                            cmp dl, 0x20	       975	string2.h	FUNCTION_223	WHILE_1
0x4000574	     0xf8482020000	                            je 0x40007fc	       975	string2.h	FUNCTION_223	WHILE_1
0x400057a	           0xfb610	                   movzx edx, byte [rax]	       974	string2.h	FUNCTION_223	WHILE_1
0x400057d	          0x4989c3	                            mov r11, rax	       974	string2.h	FUNCTION_223	WHILE_1
0x4000580	            0x84d2	                             test dl, dl	       974	string2.h	FUNCTION_223	WHILE_1
0x4000582	            0x75dc	                           jne 0x4000560	       974	string2.h	FUNCTION_223	WHILE_1
0x4000584	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000589	          0xc60000	                       mov byte [rax], 0	      1876	sequencer.c	FUNCTION_53
0x400058c	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x400058f	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000594	      0x4889442408	                mov qword [rsp + 8], rax	      1876	sequencer.c	FUNCTION_53
0x4000599	      0xe800000000	                          call 0x400059e	      1877	sequencer.c	FUNCTION_53	CALL_8
0x400059e	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      1878	sequencer.c	FUNCTION_53
0x40005a3	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1878	sequencer.c	FUNCTION_53
0x40005a8	        0x41c60300	                       mov byte [r11], 0	      1878	sequencer.c	FUNCTION_53
0x40005ac	          0x4c89ea	                            mov rdx, r13	      1881	sequencer.c	FUNCTION_53
0x40005af	        0x4d895818	              mov qword [r8 + 0x18], r11	      1880	sequencer.c	FUNCTION_53
0x40005b3	          0x4c29da	                            sub rdx, r11	      1881	sequencer.c	FUNCTION_53
0x40005b6	            0x85c0	                           test eax, eax	      1883	sequencer.c	FUNCTION_53	IF_12
0x40005b8	        0x41895020	              mov dword [r8 + 0x20], edx	      1881	sequencer.c	FUNCTION_53
0x40005bc	            0x7870	                            js 0x400062e	      1883	sequencer.c	FUNCTION_53	IF_12
0x40005be	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1886	sequencer.c	FUNCTION_53	CALL_9
0x40005c3	      0x4c89442408	                 mov qword [rsp + 8], r8	      1886	sequencer.c	FUNCTION_53	CALL_9
0x40005c8	      0xe800000000	                          call 0x40005cd	      1886	sequencer.c	FUNCTION_53	CALL_9
0x40005cd	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1886	sequencer.c	FUNCTION_53	CALL_9
0x40005d2	          0x4885c0	                           test rax, rax	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40005d5	        0x49894008	                 mov qword [r8 + 8], rax	      1886	sequencer.c	FUNCTION_53	CALL_9
0x40005d9	     0xf85fa000000	                           jne 0x40006d9	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40005df	            0xeb4d	                           jmp 0x400062e	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40005e1	     0xf1f80000000	                         nop dword [rax]	      1906	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_4
0x40005e8	          0x418b30	                     mov esi, dword [r8]	      1837	sequencer.c	FUNCTION_53	IF_5
0x40005eb	          0x83fe0a	                            cmp esi, 0xa	      1837	sequencer.c	FUNCTION_53	IF_5
0x40005ee	     0xf8446010000	                            je 0x400073a	      1837	sequencer.c	FUNCTION_53	IF_5
0x40005f4	          0x83fe0b	                            cmp esi, 0xb	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x40005f7	        0x4c890424	                     mov qword [rsp], r8	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x40005fb	     0xf877f030000	                            ja 0x4000980	      1344	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000601	        0x48c1e604	                              shl rsi, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000605	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400060a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400060c	    0x488b9e000000	                    mov rbx, qword [rsi]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x4000613	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4000618	      0xe800000000	                          call 0x400061d	        54	gettext.h	FUNCTION_164
0x400061d	          0x4889c7	                            mov rdi, rax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4000620	            0x31c0	                            xor eax, eax	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4000622	          0x4889de	                            mov rsi, rbx	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x4000625	      0xe800000000	                          call 0x400062a	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x400062a	        0x4c8b0424	                     mov r8, qword [rsp]	      1848	sequencer.c	FUNCTION_53	IF_7	CALL_4
0x400062e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4000633	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4000638	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400063a	        0x4c890424	                     mov qword [rsp], r8	        54	gettext.h	FUNCTION_164
0x400063e	      0xe800000000	                          call 0x4000643	        54	gettext.h	FUNCTION_164
0x4000643	          0x4c89ea	                            mov rdx, r13	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000646	          0x4889c7	                            mov rdi, rax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000649	          0x4c89f9	                            mov rcx, r15	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x400064c	          0x4c29fa	                            sub rdx, r15	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x400064f	          0x4489e6	                           mov esi, r12d	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000652	            0x31c0	                            xor eax, eax	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000654	      0xe800000000	                          call 0x4000659	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000659	        0x4c8b0424	                     mov r8, qword [rsp]	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x400065d	    0xc70424ffffff	            mov dword [rsp], 0xffffffff 	      1907	sequencer.c	FUNCTION_54	FOR_1	IF_2	CALL_5
0x4000664	    0x41c7000a0000	                     mov dword [r8], 0xa	      1909	sequencer.c	FUNCTION_54	FOR_1	IF_2
0x400066b	        0x4183c401	                             add r12d, 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x400066f	        0x807d0000	                       cmp byte [rbp], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000673	     0xf8492000000	                            je 0x400070b	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000679	          0x4989ef	                            mov r15, rbp	      1896	sequencer.c	FUNCTION_54	FOR_1
0x400067c	      0xe91ffdffff	                           jmp 0x40003a0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000681	     0xf1f80000000	                         nop dword [rax]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000688	        0x807e0120	                cmp byte [rsi + 1], 0x20	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x400068c	            0x741a	                            je 0x40006a8	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x400068e	        0x4883c710	                           add rdi, 0x10	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x4000692	        0x4183c301	                             add r11d, 1	      1821	sequencer.c	FUNCTION_53	FOR_1
0x4000696	    0x4881ff000000	                              cmp rdi, 0	      1821	sequencer.c	FUNCTION_53	FOR_1
0x400069d	     0xf850dfeffff	                           jne 0x40004b0	      1821	sequencer.c	FUNCTION_53	FOR_1
0x40006a3	            0xeb89	                           jmp 0x400062e	      1821	sequencer.c	FUNCTION_53	FOR_1
0x40006a5	           0xf1f00	                         nop dword [rax]	      1821	sequencer.c	FUNCTION_53	FOR_1
0x40006a8	         0xfb647f8	               movzx eax, byte [rdi - 8]	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40006ac	            0x3806	                      cmp byte [rsi], al	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40006ae	            0x75de	                           jne 0x400068e	      1825	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40006b0	        0x488d5e01	                      lea rbx, [rsi + 1]	      1826	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40006b4	          0x458918	                    mov dword [r8], r11d	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40006b7	      0xe91ffeffff	                           jmp 0x40004db	      1827	sequencer.c	FUNCTION_53	ELSE_1	IF_3
0x40006bc	          0x4d89e9	                             mov r9, r13	      1817	sequencer.c	FUNCTION_53	IF_1
0x40006bf	    0x41c7000c0000	                     mov dword [r8], 0xc	      1814	sequencer.c	FUNCTION_53	IF_1
0x40006c6	    0x49c740080000	                   mov qword [r8 + 8], 0	      1815	sequencer.c	FUNCTION_53	IF_1
0x40006ce	          0x4929f1	                             sub r9, rsi	      1817	sequencer.c	FUNCTION_53	IF_1
0x40006d1	        0x49897018	              mov qword [r8 + 0x18], rsi	      1816	sequencer.c	FUNCTION_53	IF_1
0x40006d5	        0x45894820	              mov dword [r8 + 0x20], r9d	      1817	sequencer.c	FUNCTION_53	IF_1
0x40006d9	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x40006dd	            0x85c0	                           test eax, eax	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x40006df	            0x758a	                           jne 0x400066b	      1912	sequencer.c	FUNCTION_54	FOR_1	IF_3
0x40006e1	          0x418b00	                     mov eax, dword [r8]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x40006e4	          0x8d50fc	                      lea edx, [rax - 4]	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x40006e7	          0x83fa01	                              cmp edx, 1	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x40006ea	     0xf8689010000	                           jbe 0x4000879	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x40006f0	          0x83f809	                              cmp eax, 9	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x40006f3	           0xf96c0	                                setbe al	      1914	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_6
0x40006f6	        0x4183c401	                             add r12d, 1	      1896	sequencer.c	FUNCTION_54	FOR_1
0x40006fa	        0x807d0000	                       cmp byte [rbp], 0	      1896	sequencer.c	FUNCTION_54	FOR_1
0x40006fe	           0xfb6c0	                           movzx eax, al	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000701	        0x89442418	             mov dword [rsp + 0x18], eax	      1896	sequencer.c	FUNCTION_54	FOR_1
0x4000705	     0xf856effffff	                           jne 0x4000679	      1896	sequencer.c	FUNCTION_54	FOR_1
0x400070b	          0x8b0424	                    mov eax, dword [rsp]	      1896	sequencer.c	FUNCTION_54	FOR_1
0x400070e	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1922	sequencer.c	FUNCTION_54
0x4000713	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1922	sequencer.c	FUNCTION_54
0x400071c	     0xf856a020000	                           jne 0x400098c	      1922	sequencer.c	FUNCTION_54
0x4000722	        0x4883c448	                           add rsp, 0x48	      1922	sequencer.c	FUNCTION_54
0x4000726	              0x5b	                                 pop rbx	      1922	sequencer.c	FUNCTION_54
0x4000727	              0x5d	                                 pop rbp	      1922	sequencer.c	FUNCTION_54
0x4000728	            0x415c	                                 pop r12	      1922	sequencer.c	FUNCTION_54
0x400072a	            0x415d	                                 pop r13	      1922	sequencer.c	FUNCTION_54
0x400072c	            0x415e	                                 pop r14	      1922	sequencer.c	FUNCTION_54
0x400072e	            0x415f	                                 pop r15	      1922	sequencer.c	FUNCTION_54
0x4000730	              0xc3	                                     ret	      1922	sequencer.c	FUNCTION_54
0x4000731	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      1922	sequencer.c	FUNCTION_54
0x4000735	      0xe9eafcffff	                           jmp 0x4000424	      1922	sequencer.c	FUNCTION_54
0x400073a	          0x4939dd	                            cmp r13, rbx	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x400073d	     0xf8469010000	                            je 0x40008ac	      1838	sequencer.c	FUNCTION_53	IF_5	IF_6
0x4000743	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4000748	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400074d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400074f	        0x4c890424	                     mov qword [rsp], r8	        54	gettext.h	FUNCTION_164
0x4000753	      0xe800000000	                          call 0x4000758	        54	gettext.h	FUNCTION_164
0x4000758	          0x4889da	                            mov rdx, rbx	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x400075b	          0x4889c7	                            mov rdi, rax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x400075e	      0xbe00000000	                              mov esi, 0	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000763	            0x31c0	                            xor eax, eax	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000765	      0xe800000000	                          call 0x400076a	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x400076a	        0x4c8b0424	                     mov r8, qword [rsp]	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x400076e	      0xe9bbfeffff	                           jmp 0x400062e	      1839	sequencer.c	FUNCTION_53	IF_5	IF_6	CALL_2
0x4000773	          0x4c89fe	                            mov rsi, r15	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000776	      0xe903fdffff	                           jmp 0x400047e	      1039	string2.h	FUNCTION_225	WHILE_1
0x400077b	    0x41c740100100	                mov dword [r8 + 0x10], 1	      1866	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000783	          0x4d89e9	                             mov r9, r13	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000786	    0x49c740080000	                   mov qword [r8 + 8], 0	      1867	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x400078e	        0x49895818	              mov qword [r8 + 0x18], rbx	      1868	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000792	          0x4929d9	                             sub r9, rbx	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000795	        0x45894820	              mov dword [r8 + 0x20], r9d	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x4000799	      0xe93bffffff	                           jmp 0x40006d9	      1869	sequencer.c	FUNCTION_53	IF_9	ELSE_3
0x400079e	          0x4889d8	                            mov rax, rbx	      1835	sequencer.c	FUNCTION_53
0x40007a1	      0xba00000000	                              mov edx, 0	      1859	sequencer.c	FUNCTION_53	IF_9
0x40007a6	            0xeb1a	                           jmp 0x40007c2	      1859	sequencer.c	FUNCTION_53	IF_9
0x40007a8	     0xf1f84000000	                   nop dword [rax + rax]	      1859	sequencer.c	FUNCTION_53	IF_9
0x40007b0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40007b4	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40007b8	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40007bc	     0xf8503010000	                           jne 0x40008c5	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40007c2	           0xfb632	                   movzx esi, byte [rdx]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40007c5	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40007c8	            0x75e6	                           jne 0x40007b0	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40007ca	           0xfbe30	                   movsx esi, byte [rax]	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007cd	          0x83fe20	                           cmp esi, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007d0	            0x89f2	                            mov edx, esi	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007d2	            0x7409	                            je 0x40007dd	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007d4	          0x83fe09	                              cmp esi, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007d7	     0xf853d010000	                           jne 0x400091a	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007dd	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007e1	           0xfbe30	                   movsx esi, byte [rax]	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007e4	          0x4889c3	                            mov rbx, rax	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007e7	        0x4883c001	                              add rax, 1	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007eb	          0x83fe09	                              cmp esi, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007ee	            0x89f2	                            mov edx, esi	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007f0	            0x74ef	                            je 0x40007e1	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007f2	          0x83fe20	                           cmp esi, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007f5	            0x74ea	                            je 0x40007e1	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007f7	      0xe938fdffff	                           jmp 0x4000534	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007fc	           0xfbec2	                           movsx eax, dl	      1039	string2.h	FUNCTION_225	WHILE_1
0x40007ff	          0x83f820	                           cmp eax, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000802	        0x400f94c6	                                sete sil	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000806	          0x83f809	                              cmp eax, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000809	           0xf94c0	                                 sete al	      1039	string2.h	FUNCTION_225	WHILE_1
0x400080c	            0x89f1	                            mov ecx, esi	      1039	string2.h	FUNCTION_225	WHILE_1
0x400080e	             0x9c1	                             or ecx, eax	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000810	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000815	        0x41c60300	                       mov byte [r11], 0	      1876	sequencer.c	FUNCTION_53
0x4000819	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x400081c	        0x884c241f	               mov byte [rsp + 0x1f], cl	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000820	        0x8854241e	               mov byte [rsp + 0x1e], dl	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000824	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000829	      0x4c895c2408	                mov qword [rsp + 8], r11	      1876	sequencer.c	FUNCTION_53
0x400082e	      0xe800000000	                          call 0x4000833	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000833	       0xfb64c241f	           movzx ecx, byte [rsp + 0x1f] 	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000838	       0xfb654241e	           movzx edx, byte [rsp + 0x1e] 	      1878	sequencer.c	FUNCTION_53
0x400083d	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      1878	sequencer.c	FUNCTION_53
0x4000842	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000847	            0x84c9	                             test cl, cl	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000849	          0x418813	                      mov byte [r11], dl	      1878	sequencer.c	FUNCTION_53
0x400084c	     0xf845afdffff	                            je 0x40005ac	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000852	        0x498d5301	                      lea rdx, [r11 + 1]	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000856	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000860	           0xfbe32	                   movsx esi, byte [rdx]	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000863	          0x4989d3	                            mov r11, rdx	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000866	        0x4883c201	                              add rdx, 1	      1039	string2.h	FUNCTION_225	WHILE_1
0x400086a	          0x83fe20	                           cmp esi, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x400086d	            0x74f1	                            je 0x4000860	      1039	string2.h	FUNCTION_225	WHILE_1
0x400086f	          0x83fe09	                              cmp esi, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000872	            0x74ec	                            je 0x4000860	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000874	      0xe933fdffff	                           jmp 0x40005ac	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000879	        0x48c1e004	                              shl rax, 4	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x400087d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4000882	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4000887	    0x488b98000000	                    mov rbx, qword [rax]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x400088e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4000890	      0xe800000000	                          call 0x4000895	        54	gettext.h	FUNCTION_164
0x4000895	          0x4889c7	                            mov rdi, rax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x4000898	            0x31c0	                            xor eax, eax	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x400089a	          0x4889de	                            mov rsi, rbx	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x400089d	      0xe800000000	                          call 0x40008a2	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40008a2	      0xb8ffffffff	                     mov eax, 0xffffffff	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40008a7	      0xe962feffff	                           jmp 0x400070e	      1915	sequencer.c	FUNCTION_54	FOR_1	ELSE_1	IF_4	CALL_7
0x40008ac	    0x49c740080000	                   mov qword [r8 + 8], 0	      1841	sequencer.c	FUNCTION_53	IF_5
0x40008b4	        0x4d896818	              mov qword [r8 + 0x18], r13	      1842	sequencer.c	FUNCTION_53	IF_5
0x40008b8	    0x41c740200000	                mov dword [r8 + 0x20], 0	      1843	sequencer.c	FUNCTION_53	IF_5
0x40008c0	      0xe914feffff	                           jmp 0x40006d9	      1843	sequencer.c	FUNCTION_53	IF_5
0x40008c5	          0x4889d8	                            mov rax, rbx	      1835	sequencer.c	FUNCTION_53
0x40008c8	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40008cd	            0xeb13	                           jmp 0x40008e2	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40008cf	              0x90	                                     nop	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40008d0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40008d4	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40008d8	        0x403a70ff	                 cmp sil, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40008dc	     0xf8599feffff	                           jne 0x400077b	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40008e2	           0xfb632	                   movzx esi, byte [rdx]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40008e5	          0x4084f6	                           test sil, sil	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40008e8	            0x75e6	                           jne 0x40008d0	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x40008ea	           0xfbe10	                   movsx edx, byte [rax]	      1039	string2.h	FUNCTION_225	WHILE_1
0x40008ed	          0x83fa20	                           cmp edx, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x40008f0	            0x7405	                            je 0x40008f7	      1039	string2.h	FUNCTION_225	WHILE_1
0x40008f2	          0x83fa09	                              cmp edx, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x40008f5	            0x7518	                           jne 0x400090f	      1039	string2.h	FUNCTION_225	WHILE_1
0x40008f7	        0x488d5001	                      lea rdx, [rax + 1]	      1039	string2.h	FUNCTION_225	WHILE_1
0x40008fb	           0xfbe32	                   movsx esi, byte [rdx]	      1039	string2.h	FUNCTION_225	WHILE_1
0x40008fe	          0x4889d0	                            mov rax, rdx	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000901	        0x4883c201	                              add rdx, 1	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000905	          0x83fe09	                              cmp esi, 9	      1039	string2.h	FUNCTION_225	WHILE_1
0x4000908	            0x74f1	                            je 0x40008fb	      1039	string2.h	FUNCTION_225	WHILE_1
0x400090a	          0x83fe20	                           cmp esi, 0x20	      1039	string2.h	FUNCTION_225	WHILE_1
0x400090d	            0x74ec	                            je 0x40008fb	      1039	string2.h	FUNCTION_225	WHILE_1
0x400090f	    0x41c740100100	                mov dword [r8 + 0x10], 1	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4000917	           0xfb610	                   movzx edx, byte [rax]	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x400091a	          0x4889c3	                            mov rbx, rax	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x400091d	      0xe912fcffff	                           jmp 0x4000534	      1864	sequencer.c	FUNCTION_53	IF_9	ELSE_2	IF_11
0x4000922	            0x31c0	                            xor eax, eax	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4000924	      0xe9e5fdffff	                           jmp 0x400070e	      1894	sequencer.c	FUNCTION_54	CALL_2
0x4000929	      0xbf00000000	                              mov edi, 0	        58	sequencer.c	CALL_9
0x400092e	      0xe800000000	                          call 0x4000933	        58	sequencer.c	CALL_9
0x4000933	    0x488905000000	            mov qword [0x0400093a], rax 	        58	sequencer.c	CALL_9
0x400093a	      0xe935faffff	                           jmp 0x4000374	        58	sequencer.c	CALL_9
0x400093f	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000944	          0xc60300	                       mov byte [rbx], 0	      1876	sequencer.c	FUNCTION_53
0x4000947	          0x4889df	                            mov rdi, rbx	      1877	sequencer.c	FUNCTION_53	CALL_8
0x400094a	      0x4c89442408	                 mov qword [rsp + 8], r8	      1877	sequencer.c	FUNCTION_53	CALL_8
0x400094f	      0xe800000000	                          call 0x4000954	      1877	sequencer.c	FUNCTION_53	CALL_8
0x4000954	          0xc60300	                       mov byte [rbx], 0	      1878	sequencer.c	FUNCTION_53
0x4000957	          0x4989db	                            mov r11, rbx	      1878	sequencer.c	FUNCTION_53
0x400095a	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1878	sequencer.c	FUNCTION_53
0x400095f	      0xe948fcffff	                           jmp 0x40005ac	      1878	sequencer.c	FUNCTION_53
0x4000964	           0xfbec2	                           movsx eax, dl	      1878	sequencer.c	FUNCTION_53
0x4000967	          0x4989db	                            mov r11, rbx	       975	string2.h	FUNCTION_223	WHILE_1
0x400096a	          0x83f809	                              cmp eax, 9	       975	string2.h	FUNCTION_223	WHILE_1
0x400096d	        0x400f94c6	                                sete sil	       975	string2.h	FUNCTION_223	WHILE_1
0x4000971	          0x83f820	                           cmp eax, 0x20	       975	string2.h	FUNCTION_223	WHILE_1
0x4000974	           0xf94c0	                                 sete al	       975	string2.h	FUNCTION_223	WHILE_1
0x4000977	            0x89f1	                            mov ecx, esi	       975	string2.h	FUNCTION_223	WHILE_1
0x4000979	             0x9c1	                             or ecx, eax	       975	string2.h	FUNCTION_223	WHILE_1
0x400097b	      0xe990feffff	                           jmp 0x4000810	       975	string2.h	FUNCTION_223	WHILE_1
0x4000980	      0xbf00000000	                              mov edi, 0	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4000985	            0x31c0	                            xor eax, eax	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x4000987	      0xe800000000	                          call 0x400098c	      1346	sequencer.c	ELSE_1	FUNCTION_41	CALL_1
0x400098c	      0xe800000000	                          call 0x4000991	      1922	sequencer.c	FUNCTION_54
0x4000991	      0xbe30000000	                           mov esi, 0x30	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x4000996	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400099b	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400099d	      0xe800000000	                          call 0x40009a2	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
is_original_commit_empty	functions,0:SWITCH,0:ELSE,1:WHILE,0:DO,0:IF,3:CALL,9:FOR,0	59
0x4000f80	              0x55	                                push rbp	      1241	sequencer.c	FUNCTION_39
0x4000f81	              0x53	                                push rbx	      1241	sequencer.c	FUNCTION_39
0x4000f82	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_106	CALL_1
0x4000f84	          0x4889fb	                            mov rbx, rdi	      1241	sequencer.c	FUNCTION_39
0x4000f87	        0x4883ec08	                              sub rsp, 8	      1241	sequencer.c	FUNCTION_39
0x4000f8b	      0xe800000000	                          call 0x4000f90	        75	commit.h	FUNCTION_106	CALL_1
0x4000f90	            0x85c0	                           test eax, eax	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x4000f92	     0xf85a0000000	                           jne 0x4001038	      1244	sequencer.c	FUNCTION_39	IF_1	CALL_1
0x4000f98	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1247	sequencer.c	FUNCTION_39	IF_2
0x4000f9c	          0x4885c0	                           test rax, rax	      1247	sequencer.c	FUNCTION_39	IF_2
0x4000f9f	            0x7447	                            je 0x4000fe8	      1247	sequencer.c	FUNCTION_39	IF_2
0x4000fa1	          0x488b28	                    mov rbp, qword [rax]	      1248	sequencer.c	FUNCTION_39	IF_2
0x4000fa4	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_106	CALL_1
0x4000fa6	          0x4889ef	                            mov rdi, rbp	        75	commit.h	FUNCTION_106	CALL_1
0x4000fa9	      0xe800000000	                          call 0x4000fae	        75	commit.h	FUNCTION_106	CALL_1
0x4000fae	            0x85c0	                           test eax, eax	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4000fb0	            0x754e	                           jne 0x4001000	      1249	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4000fb2	          0x4889ef	                            mov rdi, rbp	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4000fb5	      0xe800000000	                          call 0x4000fba	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4000fba	          0x4889c5	                            mov rbp, rax	      1252	sequencer.c	FUNCTION_39	IF_2	CALL_7
0x4000fbd	          0x4889df	                            mov rdi, rbx	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4000fc0	      0xe800000000	                          call 0x4000fc5	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4000fc5	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x4000fca	          0x4889c6	                            mov rsi, rax	       975	cache.h	FUNCTION_173	CALL_1
0x4000fcd	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_173	CALL_1
0x4000fd0	      0xe800000000	                          call 0x4000fd5	       975	cache.h	FUNCTION_173	CALL_1
0x4000fd5	            0x85c0	                           test eax, eax	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4000fd7	           0xf94c0	                                 sete al	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4000fda	           0xfb6c0	                           movzx eax, al	      1257	sequencer.c	FUNCTION_39	CALL_9
0x4000fdd	        0x4883c408	                              add rsp, 8	      1258	sequencer.c	FUNCTION_39
0x4000fe1	              0x5b	                                 pop rbx	      1258	sequencer.c	FUNCTION_39
0x4000fe2	              0x5d	                                 pop rbp	      1258	sequencer.c	FUNCTION_39
0x4000fe3	              0xc3	                                     ret	      1258	sequencer.c	FUNCTION_39
0x4000fe4	         0xf1f4000	                         nop dword [rax]	      1258	sequencer.c	FUNCTION_39
0x4000fe8	    0x488b05000000	            mov rax, qword [0x04000fef] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4000fef	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4000ff3	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4000ff7	            0xebc4	                           jmp 0x4000fbd	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4000ff9	     0xf1f80000000	                         nop dword [rax]	      1254	sequencer.c	FUNCTION_39	ELSE_1
0x4001000	        0x488d7d04	                      lea rdi, [rbp + 4]	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001004	      0xe800000000	                          call 0x4001009	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001009	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400100e	          0x4889c3	                            mov rbx, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001011	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4001016	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4001018	      0xe800000000	                          call 0x400101d	        54	gettext.h	FUNCTION_164
0x400101d	          0x4889de	                            mov rsi, rbx	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001020	          0x4889c7	                            mov rdi, rax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001023	            0x31c0	                            xor eax, eax	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001025	      0xe800000000	                          call 0x400102a	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400102a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x400102f	            0xebac	                           jmp 0x4000fdd	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001031	     0xf1f80000000	                         nop dword [rax]	      1250	sequencer.c	FUNCTION_39	IF_2	IF_3	CALL_5
0x4001038	        0x488d7b04	                      lea rdi, [rbx + 4]	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x400103c	      0xe800000000	                          call 0x4001041	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4001041	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4001046	          0x4889c3	                            mov rbx, rax	      1245	sequencer.c	FUNCTION_39	IF_1	CALL_2
0x4001049	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400104e	            0xebc6	                           jmp 0x4001016	        54	gettext.h	FUNCTION_164
labels_cmp	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,0:CALL,0:FOR,0	10
0x4000040	          0x4885c9	                           test rcx, rcx	      3573	sequencer.c	FUNCTION_94
0x4000043	            0x7413	                            je 0x4000058	      3573	sequencer.c	FUNCTION_94
0x4000045	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      3573	sequencer.c	FUNCTION_94
0x4000049	          0x4889ce	                            mov rsi, rcx	      3573	sequencer.c	FUNCTION_94
0x400004c	      0xe900000000	                           jmp 0x4000051	      3573	sequencer.c	FUNCTION_94
0x4000051	     0xf1f80000000	                         nop dword [rax]	      3573	sequencer.c	FUNCTION_94
0x4000058	        0x4883c210	                           add rdx, 0x10	      3573	sequencer.c	FUNCTION_94
0x400005c	        0x488d7e10	                   lea rdi, [rsi + 0x10]	      3573	sequencer.c	FUNCTION_94
0x4000060	          0x4889d6	                            mov rsi, rdx	      3573	sequencer.c	FUNCTION_94
0x4000063	      0xe900000000	                           jmp 0x4000068	      3573	sequencer.c	FUNCTION_94
parse_head	functions,0:SWITCH,0:ELSE,1:WHILE,0:DO,0:IF,4:CALL,9:FOR,0	71
0x4001720	            0x4154	                                push r12	      1071	sequencer.c	FUNCTION_36
0x4001722	              0x55	                                push rbp	      1071	sequencer.c	FUNCTION_36
0x4001723	          0x4889fd	                            mov rbp, rdi	      1071	sequencer.c	FUNCTION_36
0x4001726	              0x53	                                push rbx	      1071	sequencer.c	FUNCTION_36
0x4001727	      0xbf00000000	                              mov edi, 0	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400172c	            0x31db	                            xor ebx, ebx	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400172e	        0x4883ec20	                           sub rsp, 0x20	      1071	sequencer.c	FUNCTION_36
0x4001732	          0x4889e6	                            mov rsi, rsp	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x4001735	    0x64488b042528	                mov rax, qword fs:[0x28]	      1071	sequencer.c	FUNCTION_36
0x400173e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1071	sequencer.c	FUNCTION_36
0x4001743	            0x31c0	                            xor eax, eax	      1071	sequencer.c	FUNCTION_36
0x4001745	      0xe800000000	                          call 0x400174a	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400174a	            0x85c0	                           test eax, eax	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400174c	            0x742a	                            je 0x4001778	      1075	sequencer.c	FUNCTION_36	IF_1	CALL_1
0x400174e	        0x48895d00	                    mov qword [rbp], rbx	      1088	sequencer.c	FUNCTION_36
0x4001752	            0x31c0	                            xor eax, eax	      1090	sequencer.c	FUNCTION_36
0x4001754	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1091	sequencer.c	FUNCTION_36
0x4001759	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1091	sequencer.c	FUNCTION_36
0x4001762	     0xf85af000000	                           jne 0x4001817	      1091	sequencer.c	FUNCTION_36
0x4001768	        0x4883c420	                           add rsp, 0x20	      1091	sequencer.c	FUNCTION_36
0x400176c	              0x5b	                                 pop rbx	      1091	sequencer.c	FUNCTION_36
0x400176d	              0x5d	                                 pop rbp	      1091	sequencer.c	FUNCTION_36
0x400176e	            0x415c	                                 pop r12	      1091	sequencer.c	FUNCTION_36
0x4001770	              0xc3	                                     ret	      1091	sequencer.c	FUNCTION_36
0x4001771	     0xf1f80000000	                         nop dword [rax]	      1091	sequencer.c	FUNCTION_36
0x4001778	          0x4889e7	                            mov rdi, rsp	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x400177b	      0xe800000000	                          call 0x4001780	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4001780	          0x4885c0	                           test rax, rax	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x4001783	          0x4889c3	                            mov rbx, rax	      1078	sequencer.c	FUNCTION_36	ELSE_1	CALL_2
0x4001786	            0x7473	                            je 0x40017fb	      1079	sequencer.c	FUNCTION_36	ELSE_1	IF_2
0x4001788	        0x488d7004	                      lea rsi, [rax + 4]	       975	cache.h	FUNCTION_173	CALL_1
0x400178c	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x4001791	          0x4889e7	                            mov rdi, rsp	       975	cache.h	FUNCTION_173	CALL_1
0x4001794	      0xe800000000	                          call 0x4001799	       975	cache.h	FUNCTION_173	CALL_1
0x4001799	            0x85c0	                           test eax, eax	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400179b	            0x7533	                           jne 0x40017d0	      1081	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_4
0x400179d	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_106	CALL_1
0x400179f	          0x4889df	                            mov rdi, rbx	        75	commit.h	FUNCTION_106	CALL_1
0x40017a2	      0xe800000000	                          call 0x40017a7	        75	commit.h	FUNCTION_106	CALL_1
0x40017a7	            0x85c0	                           test eax, eax	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x40017a9	            0x74a3	                            je 0x400174e	      1085	sequencer.c	FUNCTION_36	ELSE_1	IF_4	CALL_8
0x40017ab	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40017b0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40017b5	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40017b7	      0xe800000000	                          call 0x40017bc	        54	gettext.h	FUNCTION_164
0x40017bc	          0x4889c7	                            mov rdi, rax	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40017bf	            0x31c0	                            xor eax, eax	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40017c1	      0xe800000000	                          call 0x40017c6	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40017c6	      0xb8ffffffff	                     mov eax, 0xffffffff	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40017cb	            0xeb87	                           jmp 0x4001754	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40017cd	           0xf1f00	                         nop dword [rax]	      1086	sequencer.c	FUNCTION_36	ELSE_1	CALL_9
0x40017d0	          0x4889e7	                            mov rdi, rsp	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40017d3	      0xe800000000	                          call 0x40017d8	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40017d8	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40017da	          0x4989c4	                            mov r12, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40017dd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40017e2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40017e7	      0xe800000000	                          call 0x40017ec	        54	gettext.h	FUNCTION_164
0x40017ec	          0x4c89e6	                            mov rsi, r12	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40017ef	          0x4889c7	                            mov rdi, rax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40017f2	            0x31c0	                            xor eax, eax	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40017f4	      0xe800000000	                          call 0x40017f9	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40017f9	            0xeba2	                           jmp 0x400179d	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x40017fb	      0xbf00000000	                              mov edi, 0	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4001800	      0xe81beaffff	                       call sym._.part.6	      1082	sequencer.c	FUNCTION_36	ELSE_1	IF_3	CALL_6
0x4001805	          0x4889c7	                            mov rdi, rax	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4001808	            0x31c0	                            xor eax, eax	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x400180a	      0xe800000000	                          call 0x400180f	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x400180f	          0x83c8ff	                      or eax, 0xffffffff	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4001812	      0xe93dffffff	                           jmp 0x4001754	      1080	sequencer.c	FUNCTION_36	ELSE_1	CALL_3
0x4001817	      0xe800000000	                          call 0x400181c	      1091	sequencer.c	FUNCTION_36
append_signoff	functions,0:SWITCH,0:ELSE,3:WHILE,0:DO,0:IF,8:CALL,12:FOR,0	202
0x4004ba0	            0x4157	                                push r15	      3505	sequencer.c	FUNCTION_93
0x4004ba2	            0x4156	                                push r14	      3505	sequencer.c	FUNCTION_93
0x4004ba4	          0x83e201	                              and edx, 1	      3506	sequencer.c	FUNCTION_93
0x4004ba7	            0x4155	                                push r13	      3505	sequencer.c	FUNCTION_93
0x4004ba9	            0x4154	                                push r12	      3505	sequencer.c	FUNCTION_93
0x4004bab	          0x4989fe	                            mov r14, rdi	      3505	sequencer.c	FUNCTION_93
0x4004bae	              0x55	                                push rbp	      3505	sequencer.c	FUNCTION_93
0x4004baf	              0x53	                                push rbx	      3505	sequencer.c	FUNCTION_93
0x4004bb0	            0x89f3	                            mov ebx, esi	      3505	sequencer.c	FUNCTION_93
0x4004bb2	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004bb7	        0x4883ec78	                           sub rsp, 0x78	      3505	sequencer.c	FUNCTION_93
0x4004bbb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004bc0	        0x8954241c	             mov dword [rsp + 0x1c], edx	      3506	sequencer.c	FUNCTION_93
0x4004bc4	      0xba0f000000	                            mov edx, 0xf	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004bc9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3505	sequencer.c	FUNCTION_93
0x4004bd2	      0x4889442468	             mov qword [rsp + 0x68], rax	      3505	sequencer.c	FUNCTION_93
0x4004bd7	            0x31c0	                            xor eax, eax	      3505	sequencer.c	FUNCTION_93
0x4004bd9	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3507	sequencer.c	FUNCTION_93
0x4004be2	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3507	sequencer.c	FUNCTION_93
0x4004beb	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3507	sequencer.c	FUNCTION_93
0x4004bf4	      0xe800000000	                          call 0x4004bf9	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004bf9	      0xbf00000000	                              mov edi, 0	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004bfe	      0xe800000000	                          call 0x4004c03	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004c03	      0xbf00000000	                              mov edi, 0	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004c08	          0x4889c5	                            mov rbp, rax	      3512	sequencer.c	FUNCTION_93	CALL_5
0x4004c0b	      0xe800000000	                          call 0x4004c10	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004c10	          0x4889ee	                            mov rsi, rbp	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004c13	          0x4889c7	                            mov rdi, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004c16	      0xe800000000	                          call 0x4004c1b	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004c1b	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004c1e	          0x4889c5	                            mov rbp, rax	      3511	sequencer.c	FUNCTION_93	CALL_4
0x4004c21	      0xe800000000	                          call 0x4004c26	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004c26	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004c2b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004c2e	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004c31	      0xe800000000	                          call 0x4004c36	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004c36	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x4004c3b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x4004c3e	     0xf8574010000	                           jne 0x4004db8	       141	strbuf.h	FUNCTION_108
0x4004c44	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004c49	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004c4e	      0xe800000000	                          call 0x4004c53	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004c53	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004c58	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x4004c5c	            0x85db	                           test ebx, ebx	      3515	sequencer.c	FUNCTION_93	IF_1
0x4004c5e	      0x4889442428	             mov qword [rsp + 0x28], rax	       229	strbuf.h	FUNCTION_110
0x4004c63	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       229	strbuf.h	FUNCTION_110
0x4004c68	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_110
0x4004c6c	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       230	strbuf.h	FUNCTION_110
0x4004c71	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       230	strbuf.h	FUNCTION_110
0x4004c76	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x4004c7a	        0x498b5608	                mov rdx, qword [r14 + 8]	       595	strbuf.h	FUNCTION_116	IF_1
0x4004c7e	     0xf849c010000	                            je 0x4004e20	      3515	sequencer.c	FUNCTION_93	IF_1
0x4004c84	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	      3515	sequencer.c	FUNCTION_93	IF_1
0x4004c88	          0x4863c3	                         movsxd rax, ebx	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004c8b	          0x4829c2	                            sub rdx, rax	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004c8e	      0x483b542428	            cmp rdx, qword [rsp + 0x28] 	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004c93	      0x4889442410	             mov qword [rsp + 0x10], rax	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004c98	     0xf8432010000	                            je 0x4004dd0	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004c9e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       224	sequencer.c	FUNCTION_6	CALL_1
0x4004ca3	          0x4889ee	                            mov rsi, rbp	       224	sequencer.c	FUNCTION_6	CALL_1
0x4004ca6	      0xe800000000	                          call 0x4004cab	       224	sequencer.c	FUNCTION_6	CALL_1
0x4004cab	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       226	sequencer.c	FUNCTION_6	IF_1
0x4004cb0	      0x4839442448	            cmp qword [rsp + 0x48], rax 	       226	sequencer.c	FUNCTION_6	IF_1
0x4004cb5	     0xf84b5000000	                            je 0x4004d70	       226	sequencer.c	FUNCTION_6	IF_1
0x4004cbb	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004cc0	          0x4885db	                           test rbx, rbx	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004cc3	     0xf840f020000	                            je 0x4004ed8	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004cc9	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004cce	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004cd3	            0x31ed	                            xor ebp, ebp	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004cd5	      0x4c8b642458	            mov r12, qword [rsp + 0x58] 	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004cda	    0xc74424180000	               mov dword [rsp + 0x18], 0	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004ce2	          0x4531ff	                          xor r15d, r15d	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004ce5	        0x48890424	                    mov qword [rsp], rax	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004ce9	        0x488d43ff	                      lea rax, [rbx - 1]	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4004ced	      0x4889442408	                mov qword [rsp + 8], rax	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4004cf2	    0x660f1f440000	                    nop word [rax + rax]	       232	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4004cf8	        0x4b8b3cfc	            mov rdi, qword [r12 + r15*8]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x4004cfc	        0x488b3424	                    mov rsi, qword [rsp]	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x4004d00	          0x4c89ea	                            mov rdx, r13	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x4004d03	      0xe800000000	                          call 0x4004d08	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x4004d08	            0x85c0	                           test eax, eax	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x4004d0a	            0x7515	                           jne 0x4004d21	       230	sequencer.c	FUNCTION_6	FOR_1	IF_2
0x4004d0c	      0x4c397c2408	                cmp qword [rsp + 8], r15	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4004d11	      0xb801000000	                              mov eax, 1	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4004d16	    0xc74424180100	               mov dword [rsp + 0x18], 1	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4004d1e	           0xf44e8	                          cmove ebp, eax	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4004d21	        0x4983c701	                              add r15, 1	       233	sequencer.c	FUNCTION_6	FOR_1	IF_2	IF_3
0x4004d25	          0x4939df	                            cmp r15, rbx	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004d28	            0x75ce	                           jne 0x4004cf8	       229	sequencer.c	FUNCTION_6	FOR_1
0x4004d2a	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       236	sequencer.c	FUNCTION_6	CALL_2
0x4004d2f	      0xe800000000	                          call 0x4004d34	       236	sequencer.c	FUNCTION_6	CALL_2
0x4004d34	            0x85ed	                           test ebp, ebp	       238	sequencer.c	FUNCTION_6	IF_4
0x4004d36	     0xf8444010000	                            je 0x4004e80	       238	sequencer.c	FUNCTION_6	IF_4
0x4004d3c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3562	sequencer.c	FUNCTION_93	CALL_12
0x4004d41	      0xe800000000	                          call 0x4004d46	      3562	sequencer.c	FUNCTION_93	CALL_12
0x4004d46	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3563	sequencer.c	FUNCTION_93
0x4004d4b	    0x644833042528	                xor rax, qword fs:[0x28]	      3563	sequencer.c	FUNCTION_93
0x4004d54	     0xf85a6010000	                           jne 0x4004f00	      3563	sequencer.c	FUNCTION_93
0x4004d5a	        0x4883c478	                           add rsp, 0x78	      3563	sequencer.c	FUNCTION_93
0x4004d5e	              0x5b	                                 pop rbx	      3563	sequencer.c	FUNCTION_93
0x4004d5f	              0x5d	                                 pop rbp	      3563	sequencer.c	FUNCTION_93
0x4004d60	            0x415c	                                 pop r12	      3563	sequencer.c	FUNCTION_93
0x4004d62	            0x415d	                                 pop r13	      3563	sequencer.c	FUNCTION_93
0x4004d64	            0x415e	                                 pop r14	      3563	sequencer.c	FUNCTION_93
0x4004d66	            0x415f	                                 pop r15	      3563	sequencer.c	FUNCTION_93
0x4004d68	              0xc3	                                     ret	      3563	sequencer.c	FUNCTION_93
0x4004d69	     0xf1f80000000	                         nop dword [rax]	      3563	sequencer.c	FUNCTION_93
0x4004d70	        0x498b4608	                mov rax, qword [r14 + 8]	      3530	sequencer.c	FUNCTION_93	IF_3
0x4004d74	          0x4889c6	                            mov rsi, rax	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004d77	      0x482b742410	             sub rsi, qword [rsp + 0x10]	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004d7c	            0x7572	                           jne 0x4004df0	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004d7e	    0x41b802000000	                              mov r8d, 2	      3532	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004d84	      0xb900000000	                              mov ecx, 0	      3537	sequencer.c	FUNCTION_93	IF_3	IF_4
0x4004d89	            0x31d2	                            xor edx, edx	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004d8b	          0x4c89f7	                            mov rdi, r14	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004d8e	      0xe800000000	                          call 0x4004d93	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004d93	        0x498b4608	                mov rax, qword [r14 + 8]	      3554	sequencer.c	FUNCTION_93	IF_3	IF_7	CALL_9
0x4004d97	      0x482b442410	             sub rax, qword [rsp + 0x10]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004d9c	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004da1	            0x31d2	                            xor edx, edx	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004da3	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004da8	          0x4c89f7	                            mov rdi, r14	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004dab	          0x4889c6	                            mov rsi, rax	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004dae	      0xe800000000	                          call 0x4004db3	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004db3	            0xeb87	                           jmp 0x4004d3c	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004db5	           0xf1f00	                         nop dword [rax]	      3559	sequencer.c	FUNCTION_93	IF_8	CALL_11
0x4004db8	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       141	strbuf.h	FUNCTION_108
0x4004dbd	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004dc1	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004dc4	     0xf858efeffff	                           jne 0x4004c58	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004dca	      0xe975feffff	                           jmp 0x4004c44	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004dcf	              0x90	                                     nop	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004dd0	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004dd5	          0x4889ef	                            mov rdi, rbp	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004dd8	      0xe800000000	                          call 0x4004ddd	      3523	sequencer.c	FUNCTION_93	IF_2
0x4004ddd	            0x85c0	                           test eax, eax	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004ddf	     0xf85b9feffff	                           jne 0x4004c9e	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004de5	      0xe952ffffff	                           jmp 0x4004d3c	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004dea	    0x660f1f440000	                    nop word [rax + rax]	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004df0	        0x4883fe01	                              cmp rsi, 1	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004df4	     0xf84ce000000	                            je 0x4004ec8	      3538	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004dfa	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004dfe	    0x41b801000000	                              mov r8d, 1	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e04	      0xb900000000	                              mov ecx, 0	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004e09	      0x807c32fe0a	          cmp byte [rdx + rsi - 2], 0xa 	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e0e	     0xf8575ffffff	                           jne 0x4004d89	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e14	      0xe97effffff	                           jmp 0x4004d97	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e19	     0xf1f80000000	                         nop dword [rax]	      3544	sequencer.c	FUNCTION_93	IF_3	ELSE_3	IF_6
0x4004e20	          0x4885d2	                           test rdx, rdx	       595	strbuf.h	FUNCTION_116	IF_1
0x4004e23	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	       595	strbuf.h	FUNCTION_116	IF_1
0x4004e27	            0x747f	                            je 0x4004ea8	       595	strbuf.h	FUNCTION_116	IF_1
0x4004e29	      0x807c15ff0a	          cmp byte [rbp + rdx - 1], 0xa 	       595	strbuf.h	FUNCTION_116	IF_1
0x4004e2e	     0xf8454feffff	                            je 0x4004c88	       595	strbuf.h	FUNCTION_116	IF_1
0x4004e34	          0x498b06	                    mov rax, qword [r14]	       595	strbuf.h	FUNCTION_116	IF_1
0x4004e37	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x4004e3a	     0xf85a9000000	                           jne 0x4004ee9	       141	strbuf.h	FUNCTION_108
0x4004e40	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004e45	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004e48	      0xe800000000	                          call 0x4004e4d	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004e4d	        0x498b6e10	            mov rbp, qword [r14 + 0x10] 	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004e51	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x4004e55	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x4004e59	        0x49894608	                mov qword [r14 + 8], rax	       229	strbuf.h	FUNCTION_110
0x4004e5d	      0xc64415000a	               mov byte [rbp + rdx], 0xa	       229	strbuf.h	FUNCTION_110
0x4004e62	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_110
0x4004e66	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_110
0x4004e6a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x4004e6e	        0x498b5608	                mov rdx, qword [r14 + 8]	       230	strbuf.h	FUNCTION_110
0x4004e72	      0xe90dfeffff	                           jmp 0x4004c84	       230	strbuf.h	FUNCTION_110
0x4004e77	    0x660f1f840000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_110
0x4004e80	      0x837c241801	               cmp dword [rsp + 0x18], 1	       241	sequencer.c	FUNCTION_6	IF_5
0x4004e85	            0x19c0	                            sbb eax, eax	       241	sequencer.c	FUNCTION_6	IF_5
0x4004e87	          0x83c002	                              add eax, 2	       241	sequencer.c	FUNCTION_6	IF_5
0x4004e8a	          0x83f802	                              cmp eax, 2	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e8d	            0x750c	                           jne 0x4004e9b	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e8f	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e93	            0x85c0	                           test eax, eax	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e95	     0xf85a1feffff	                           jne 0x4004d3c	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e9b	        0x498b4608	                mov rax, qword [r14 + 8]	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004e9f	      0xe9f3feffff	                           jmp 0x4004d97	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004ea4	         0xf1f4000	                         nop dword [rax]	      3558	sequencer.c	FUNCTION_93	IF_8
0x4004ea8	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004eae	     0xf8488feffff	                            je 0x4004d3c	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004eb4	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004ebd	      0xe9dcfdffff	                           jmp 0x4004c9e	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004ec2	    0x660f1f440000	                    nop word [rax + rax]	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004ec8	    0x41b801000000	                              mov r8d, 1	      3522	sequencer.c	FUNCTION_93	IF_2
0x4004ece	      0xb900000000	                              mov ecx, 0	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004ed3	      0xe9b1feffff	                           jmp 0x4004d89	      3543	sequencer.c	FUNCTION_93	IF_3	ELSE_2	IF_5
0x4004ed8	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       236	sequencer.c	FUNCTION_6	CALL_2
0x4004edd	      0xe800000000	                          call 0x4004ee2	       236	sequencer.c	FUNCTION_6	CALL_2
0x4004ee2	      0xb801000000	                              mov eax, 1	       242	sequencer.c	FUNCTION_6
0x4004ee7	            0xeba1	                           jmp 0x4004e8a	       242	sequencer.c	FUNCTION_6
0x4004ee9	          0x4889d1	                            mov rcx, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004eec	          0x48f7d1	                                 not rcx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004eef	          0x4801c1	                            add rcx, rax	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004ef2	     0xf855dffffff	                           jne 0x4004e55	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004ef8	      0xe943ffffff	                           jmp 0x4004e40	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004efd	           0xf1f00	                         nop dword [rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4004f00	      0xe800000000	                          call 0x4004f05	      3563	sequencer.c	FUNCTION_93
append_conflicts_hint	functions,0:SWITCH,0:ELSE,0:WHILE,1:DO,0:IF,1:CALL,3:FOR,1	81
0x4003690	            0x4157	                                push r15	       490	sequencer.c	FUNCTION_20
0x4003692	            0x4156	                                push r14	       490	sequencer.c	FUNCTION_20
0x4003694	            0x4155	                                push r13	       490	sequencer.c	FUNCTION_20
0x4003696	            0x4154	                                push r12	       490	sequencer.c	FUNCTION_20
0x4003698	          0x4989fc	                            mov r12, rdi	       490	sequencer.c	FUNCTION_20
0x400369b	              0x55	                                push rbp	       490	sequencer.c	FUNCTION_20
0x400369c	              0x53	                                push rbx	       490	sequencer.c	FUNCTION_20
0x400369d	        0x4883ec08	                              sub rsp, 8	       490	sequencer.c	FUNCTION_20
0x40036a1	          0x488b07	                    mov rax, qword [rdi]	       490	sequencer.c	FUNCTION_20
0x40036a4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x40036a7	     0xf8503010000	                           jne 0x40037b0	       141	strbuf.h	FUNCTION_108
0x40036ad	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x40036b2	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_110	CALL_2
0x40036b5	      0xe800000000	                          call 0x40036ba	       228	strbuf.h	FUNCTION_110	CALL_2
0x40036ba	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x40036bf	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_110
0x40036c4	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x40036c8	      0xbe00000000	                              mov esi, 0	       494	sequencer.c	FUNCTION_20	CALL_2
0x40036cd	          0x4c89e7	                            mov rdi, r12	       494	sequencer.c	FUNCTION_20	CALL_2
0x40036d0	            0x31db	                            xor ebx, ebx	       495	sequencer.c	FUNCTION_20	FOR_1
0x40036d2	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_110
0x40036d7	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_110
0x40036db	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_110
0x40036e0	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_110
0x40036e5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x40036e9	            0x31c0	                            xor eax, eax	       494	sequencer.c	FUNCTION_20	CALL_2
0x40036eb	      0xe800000000	                          call 0x40036f0	       494	sequencer.c	FUNCTION_20	CALL_2
0x40036f0	    0x448b2d000000	           mov r13d, dword [0x040036f7] 	       494	sequencer.c	FUNCTION_20	CALL_2
0x40036f7	    0x4c8b35000000	            mov r14, qword [0x040036fe] 	       494	sequencer.c	FUNCTION_20	CALL_2
0x40036fe	          0x4863c3	                         movsxd rax, ebx	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003701	        0x498d04c6	                  lea rax, [r14 + rax*8]	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003705	            0xeb1c	                           jmp 0x4003723	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003707	    0x660f1f840000	                    nop word [rax + rax]	       494	sequencer.c	FUNCTION_20	CALL_2
0x4003710	          0x488b38	                    mov rdi, qword [rax]	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003713	          0x83c301	                              add ebx, 1	       496	sequencer.c	FUNCTION_20	FOR_1
0x4003716	        0x4883c008	                              add rax, 8	       496	sequencer.c	FUNCTION_20	FOR_1
0x400371a	    0xf74738003000	        test dword [rdi + 0x38], 0x3000 	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4003721	            0x751d	                           jne 0x4003740	       497	sequencer.c	FUNCTION_20	FOR_1	IF_1
0x4003723	          0x4139dd	                           cmp r13d, ebx	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003726	            0x77e8	                            ja 0x4003710	       495	sequencer.c	FUNCTION_20	FOR_1
0x4003728	        0x4883c408	                              add rsp, 8	       504	sequencer.c	FUNCTION_20
0x400372c	              0x5b	                                 pop rbx	       504	sequencer.c	FUNCTION_20
0x400372d	              0x5d	                                 pop rbp	       504	sequencer.c	FUNCTION_20
0x400372e	            0x415c	                                 pop r12	       504	sequencer.c	FUNCTION_20
0x4003730	            0x415d	                                 pop r13	       504	sequencer.c	FUNCTION_20
0x4003732	            0x415e	                                 pop r14	       504	sequencer.c	FUNCTION_20
0x4003734	            0x415f	                                 pop r15	       504	sequencer.c	FUNCTION_20
0x4003736	              0xc3	                                     ret	       504	sequencer.c	FUNCTION_20
0x4003737	    0x660f1f840000	                    nop word [rax + rax]	       504	sequencer.c	FUNCTION_20
0x4003740	        0x488d6f58	                   lea rbp, [rdi + 0x58]	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003744	            0x31c0	                            xor eax, eax	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003746	      0xbe00000000	                              mov esi, 0	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x400374b	          0x4c89e7	                            mov rdi, r12	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x400374e	          0x4889ea	                            mov rdx, rbp	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003751	      0xe800000000	                          call 0x4003756	       498	sequencer.c	FUNCTION_20	FOR_1	IF_1	CALL_3
0x4003756	    0x448b2d000000	           mov r13d, dword [0x0400375d] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x400375d	    0x4c8b35000000	            mov r14, qword [0x04003764] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003764	          0x4139dd	                           cmp r13d, ebx	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003767	            0x7695	                           jbe 0x40036fe	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003769	    0x4c8b35000000	            mov r14, qword [0x04003770] 	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003770	          0x4863c3	                         movsxd rax, ebx	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003773	        0x4d8d3cc6	                  lea r15, [r14 + rax*8]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003777	            0xeb17	                           jmp 0x4003790	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003779	     0xf1f80000000	                         nop dword [rax]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003780	          0x83c301	                              add ebx, 1	       501	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003783	        0x4983c708	                              add r15, 8	       501	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003787	          0x4139dd	                           cmp r13d, ebx	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x400378a	     0xf866effffff	                           jbe 0x40036fe	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003790	          0x498b07	                    mov rax, qword [r15]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003793	          0x4889ef	                            mov rdi, rbp	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x4003796	        0x488d7058	                   lea rsi, [rax + 0x58]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x400379a	      0xe800000000	                          call 0x400379f	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x400379f	            0x85c0	                           test eax, eax	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x40037a1	            0x74dd	                            je 0x4003780	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x40037a3	      0xe956ffffff	                           jmp 0x40036fe	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x40037a8	     0xf1f84000000	                   nop dword [rax + rax]	       499	sequencer.c	FUNCTION_20	FOR_1	IF_1	WHILE_1
0x40037b0	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_108
0x40037b4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40037b8	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40037bb	     0xf85fefeffff	                           jne 0x40036bf	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40037c1	      0xe9e7feffff	                           jmp 0x40036ad	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
update_head_with_reflog	functions,0:SWITCH,0:ELSE,1:WHILE,0:DO,0:IF,3:CALL,10:FOR,0	116
0x4003dd0	            0x4157	                                push r15	       848	sequencer.c	FUNCTION_30
0x4003dd2	            0x4156	                                push r14	       848	sequencer.c	FUNCTION_30
0x4003dd4	          0x4989ce	                            mov r14, rcx	       848	sequencer.c	FUNCTION_30
0x4003dd7	            0x4155	                                push r13	       848	sequencer.c	FUNCTION_30
0x4003dd9	            0x4154	                                push r12	       848	sequencer.c	FUNCTION_30
0x4003ddb	          0x4989f5	                            mov r13, rsi	       848	sequencer.c	FUNCTION_30
0x4003dde	              0x55	                                push rbp	       848	sequencer.c	FUNCTION_30
0x4003ddf	              0x53	                                push rbx	       848	sequencer.c	FUNCTION_30
0x4003de0	          0x4989fc	                            mov r12, rdi	       848	sequencer.c	FUNCTION_30
0x4003de3	          0x4c89c5	                             mov rbp, r8	       848	sequencer.c	FUNCTION_30
0x4003de6	        0x4883ec28	                           sub rsp, 0x28	       848	sequencer.c	FUNCTION_30
0x4003dea	    0x64488b042528	                mov rax, qword fs:[0x28]	       848	sequencer.c	FUNCTION_30
0x4003df3	      0x4889442418	             mov qword [rsp + 0x18], rax	       848	sequencer.c	FUNCTION_30
0x4003df8	            0x31c0	                            xor eax, eax	       848	sequencer.c	FUNCTION_30
0x4003dfa	          0x4885d2	                           test rdx, rdx	       854	sequencer.c	FUNCTION_30	IF_1
0x4003dfd	    0x48c704240000	                      mov qword [rsp], 0	       850	sequencer.c	FUNCTION_30
0x4003e05	    0x48c744240800	                  mov qword [rsp + 8], 0	       850	sequencer.c	FUNCTION_30
0x4003e0e	    0x48c744241000	               mov qword [rsp + 0x10], 0	       850	sequencer.c	FUNCTION_30
0x4003e17	          0x4889e3	                            mov rbx, rsp	       850	sequencer.c	FUNCTION_30
0x4003e1a	            0x742e	                            je 0x4003e4a	       854	sequencer.c	FUNCTION_30	IF_1
0x4003e1c	          0x4989d7	                            mov r15, rdx	       854	sequencer.c	FUNCTION_30	IF_1
0x4003e1f	          0x4889d7	                            mov rdi, rdx	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e22	          0x4889e3	                            mov rbx, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e25	      0xe800000000	                          call 0x4003e2a	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e2a	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e2d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e30	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e33	      0xe800000000	                          call 0x4003e38	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e38	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e3d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e42	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e45	      0xe800000000	                          call 0x4003e4a	       279	strbuf.h	FUNCTION_111	CALL_2
0x4003e4a	        0x4d8b7e10	            mov r15, qword [r14 + 0x10] 	       859	sequencer.c	FUNCTION_30
0x4003e4e	      0xbe0a000000	                            mov esi, 0xa	       859	sequencer.c	FUNCTION_30
0x4003e53	          0x4c89ff	                            mov rdi, r15	       859	sequencer.c	FUNCTION_30
0x4003e56	      0xe800000000	                          call 0x4003e5b	       859	sequencer.c	FUNCTION_30
0x4003e5b	          0x4885c0	                           test rax, rax	       860	sequencer.c	FUNCTION_30	IF_2
0x4003e5e	     0xf84ac000000	                            je 0x4003f10	       860	sequencer.c	FUNCTION_30	IF_2
0x4003e64	        0x488d5001	                      lea rdx, [rax + 1]	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4003e68	          0x4c89fe	                            mov rsi, r15	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4003e6b	          0x4889df	                            mov rdi, rbx	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4003e6e	          0x4c29fa	                            sub rdx, r15	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4003e71	      0xe800000000	                          call 0x4003e76	       861	sequencer.c	FUNCTION_30	IF_2	CALL_3
0x4003e76	          0x4889ef	                            mov rdi, rbp	       867	sequencer.c	FUNCTION_30	CALL_6
0x4003e79	      0xe800000000	                          call 0x4003e7e	       867	sequencer.c	FUNCTION_30	CALL_6
0x4003e7e	          0x4885c0	                           test rax, rax	       868	sequencer.c	FUNCTION_30	IF_3
0x4003e81	          0x4989c6	                            mov r14, rax	       867	sequencer.c	FUNCTION_30	CALL_6
0x4003e84	     0xf84d6000000	                            je 0x4003f60	       868	sequencer.c	FUNCTION_30	IF_3
0x4003e8a	      0x498d442404	                      lea rax, [r12 + 4]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003e8f	          0x4d85e4	                           test r12, r12	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003e92	      0xb900000000	                              mov ecx, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003e97	          0x4c89ea	                            mov rdx, r13	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003e9a	      0xbe00000000	                              mov esi, 0	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003e9f	          0x4c89f7	                            mov rdi, r14	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003ea2	        0x480f45c8	                         cmovne rcx, rax	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003ea6	        0x4883ec08	                              sub rsp, 8	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003eaa	          0x4531c0	                            xor r8d, r8d	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003ead	              0x55	                                push rbp	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003eae	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003eb3	      0xe800000000	                          call 0x4003eb8	       869	sequencer.c	FUNCTION_30	IF_3	CALL_7
0x4003eb8	            0x85c0	                           test eax, eax	       868	sequencer.c	FUNCTION_30	IF_3
0x4003eba	              0x5a	                                 pop rdx	       868	sequencer.c	FUNCTION_30	IF_3
0x4003ebb	              0x59	                                 pop rcx	       868	sequencer.c	FUNCTION_30	IF_3
0x4003ebc	     0xf859e000000	                           jne 0x4003f60	       868	sequencer.c	FUNCTION_30	IF_3
0x4003ec2	          0x4889ee	                            mov rsi, rbp	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x4003ec5	          0x4c89f7	                            mov rdi, r14	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x4003ec8	            0x31ed	                            xor ebp, ebp	       871	sequencer.c	FUNCTION_30	IF_3
0x4003eca	      0xe800000000	                          call 0x4003ecf	       872	sequencer.c	FUNCTION_30	IF_3	CALL_8
0x4003ecf	            0x85c0	                           test eax, eax	       871	sequencer.c	FUNCTION_30	IF_3
0x4003ed1	        0x400f95c5	                               setne bpl	       871	sequencer.c	FUNCTION_30	IF_3
0x4003ed5	            0xf7dd	                                 neg ebp	       871	sequencer.c	FUNCTION_30	IF_3
0x4003ed7	          0x4c89f7	                            mov rdi, r14	       875	sequencer.c	FUNCTION_30	CALL_9
0x4003eda	      0xe800000000	                          call 0x4003edf	       875	sequencer.c	FUNCTION_30	CALL_9
0x4003edf	          0x4889df	                            mov rdi, rbx	       876	sequencer.c	FUNCTION_30	CALL_10
0x4003ee2	      0xe800000000	                          call 0x4003ee7	       876	sequencer.c	FUNCTION_30	CALL_10
0x4003ee7	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       879	sequencer.c	FUNCTION_30
0x4003eec	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       879	sequencer.c	FUNCTION_30
0x4003ef5	            0x89e8	                            mov eax, ebp	       879	sequencer.c	FUNCTION_30
0x4003ef7	     0xf8583000000	                           jne 0x4003f80	       879	sequencer.c	FUNCTION_30
0x4003efd	        0x4883c428	                           add rsp, 0x28	       879	sequencer.c	FUNCTION_30
0x4003f01	              0x5b	                                 pop rbx	       879	sequencer.c	FUNCTION_30
0x4003f02	              0x5d	                                 pop rbp	       879	sequencer.c	FUNCTION_30
0x4003f03	            0x415c	                                 pop r12	       879	sequencer.c	FUNCTION_30
0x4003f05	            0x415d	                                 pop r13	       879	sequencer.c	FUNCTION_30
0x4003f07	            0x415e	                                 pop r14	       879	sequencer.c	FUNCTION_30
0x4003f09	            0x415f	                                 pop r15	       879	sequencer.c	FUNCTION_30
0x4003f0b	              0xc3	                                     ret	       879	sequencer.c	FUNCTION_30
0x4003f0c	         0xf1f4000	                         nop dword [rax]	       879	sequencer.c	FUNCTION_30
0x4003f10	          0x4c89f6	                            mov rsi, r14	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x4003f13	          0x4889df	                            mov rdi, rbx	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x4003f16	      0xe800000000	                          call 0x4003f1b	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x4003f1b	        0x488b0424	                    mov rax, qword [rsp]	       863	sequencer.c	FUNCTION_30	ELSE_1	CALL_4
0x4003f1f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x4003f22	            0x754c	                           jne 0x4003f70	       141	strbuf.h	FUNCTION_108
0x4003f24	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x4003f29	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_110	CALL_2
0x4003f2c	      0xe800000000	                          call 0x4003f31	       228	strbuf.h	FUNCTION_110	CALL_2
0x4003f31	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x4003f36	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x4003f3a	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_110
0x4003f3f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_110
0x4003f44	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_110
0x4003f48	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_110
0x4003f4d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_110
0x4003f52	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x4003f56	      0xe91bffffff	                           jmp 0x4003e76	       230	strbuf.h	FUNCTION_110
0x4003f5b	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_110
0x4003f60	      0xbdffffffff	                     mov ebp, 0xffffffff	       873	sequencer.c	FUNCTION_30	IF_3
0x4003f65	      0xe96dffffff	                           jmp 0x4003ed7	       873	sequencer.c	FUNCTION_30	IF_3
0x4003f6a	    0x660f1f440000	                    nop word [rax + rax]	       873	sequencer.c	FUNCTION_30	IF_3
0x4003f70	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_108
0x4003f75	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4003f79	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4003f7c	            0x75b8	                           jne 0x4003f36	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4003f7e	            0xeba4	                           jmp 0x4003f24	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4003f80	      0xe800000000	                          call 0x4003f85	       879	sequencer.c	FUNCTION_30
subject2item_cmp	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,0:CALL,0:FOR,0	10
0x4000070	          0x4885c9	                           test rcx, rcx	      4276	sequencer.c	FUNCTION_104
0x4000073	            0x7413	                            je 0x4000088	      4276	sequencer.c	FUNCTION_104
0x4000075	        0x488d7e14	                   lea rdi, [rsi + 0x14]	      4276	sequencer.c	FUNCTION_104
0x4000079	          0x4889ce	                            mov rsi, rcx	      4276	sequencer.c	FUNCTION_104
0x400007c	      0xe900000000	                           jmp 0x4000081	      4276	sequencer.c	FUNCTION_104
0x4000081	     0xf1f80000000	                         nop dword [rax]	      4276	sequencer.c	FUNCTION_104
0x4000088	        0x4883c214	                           add rdx, 0x14	      4276	sequencer.c	FUNCTION_104
0x400008c	        0x488d7e14	                   lea rdi, [rsi + 0x14]	      4276	sequencer.c	FUNCTION_104
0x4000090	          0x4889d6	                            mov rsi, rdx	      4276	sequencer.c	FUNCTION_104
0x4000093	      0xe900000000	                           jmp 0x4000098	      4276	sequencer.c	FUNCTION_104
skip_unnecessary_picks	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,15:CALL,35:FOR,1	420
0x400d3a0	            0x4157	                                push r15	      4187	sequencer.c	FUNCTION_103
0x400d3a2	            0x4156	                                push r14	      4187	sequencer.c	FUNCTION_103
0x400d3a4	            0x4155	                                push r13	      4187	sequencer.c	FUNCTION_103
0x400d3a6	            0x4154	                                push r12	      4187	sequencer.c	FUNCTION_103
0x400d3a8	              0x55	                                push rbp	      4187	sequencer.c	FUNCTION_103
0x400d3a9	              0x53	                                push rbx	      4187	sequencer.c	FUNCTION_103
0x400d3aa	    0x4881ecb80000	                           sub rsp, 0xb8	      4187	sequencer.c	FUNCTION_103
0x400d3b1	    0x488b2d000000	            mov rbp, qword [0x0400d3b8] 	        52	sequencer.c	CALL_8
0x400d3b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      4187	sequencer.c	FUNCTION_103
0x400d3c1	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      4187	sequencer.c	FUNCTION_103
0x400d3c9	            0x31c0	                            xor eax, eax	      4187	sequencer.c	FUNCTION_103
0x400d3cb	          0x4885ed	                           test rbp, rbp	        52	sequencer.c	CALL_8
0x400d3ce	     0xf8425050000	                            je 0x400d8f9	        52	sequencer.c	CALL_8
0x400d3d4	    0x488b1d000000	            mov rbx, qword [0x0400d3db] 	       141	sequencer.c	CALL_27
0x400d3db	      0x4c8d742430	                   lea r14, [rsp + 0x30]	      4190	sequencer.c	FUNCTION_103
0x400d3e0	            0x31c0	                            xor eax, eax	      4190	sequencer.c	FUNCTION_103
0x400d3e2	      0xb90b000000	                            mov ecx, 0xb	      4190	sequencer.c	FUNCTION_103
0x400d3e7	          0x4531e4	                          xor r12d, r12d	       141	sequencer.c	CALL_27
0x400d3ea	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4189	sequencer.c	FUNCTION_103
0x400d3f3	          0x4c89f7	                            mov rdi, r14	      4190	sequencer.c	FUNCTION_103
0x400d3f6	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4189	sequencer.c	FUNCTION_103
0x400d3ff	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4189	sequencer.c	FUNCTION_103
0x400d408	          0x4885db	                           test rbx, rbx	       141	sequencer.c	CALL_27
0x400d40b	          0xf348ab	              rep stosq qword [rdi], rax	      4190	sequencer.c	FUNCTION_103
0x400d40e	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4190	sequencer.c	FUNCTION_103
0x400d417	     0xf84be040000	                            je 0x400d8db	       141	sequencer.c	CALL_27
0x400d41d	          0x4889df	                            mov rdi, rbx	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400d420	      0xe800000000	                          call 0x400d425	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400d425	            0x85c0	                           test eax, eax	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400d427	            0x7557	                           jne 0x400d480	       404	sequencer.c	FUNCTION_15	IF_1	CALL_1
0x400d429	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d42e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d433	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d435	      0xe800000000	                          call 0x400d43a	        54	gettext.h	FUNCTION_164
0x400d43a	          0x4889c7	                            mov rdi, rax	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d43d	            0x31c0	                            xor eax, eax	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d43f	      0xe800000000	                          call 0x400d444	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d444	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4195	sequencer.c	FUNCTION_103	CALL_4
0x400d44a	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      4264	sequencer.c	FUNCTION_103
0x400d452	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4264	sequencer.c	FUNCTION_103
0x400d45b	          0x4489f8	                           mov eax, r15d	      4264	sequencer.c	FUNCTION_103
0x400d45e	     0xf8514060000	                           jne 0x400da78	      4264	sequencer.c	FUNCTION_103
0x400d464	    0x4881c4b80000	                           add rsp, 0xb8	      4264	sequencer.c	FUNCTION_103
0x400d46b	              0x5b	                                 pop rbx	      4264	sequencer.c	FUNCTION_103
0x400d46c	              0x5d	                                 pop rbp	      4264	sequencer.c	FUNCTION_103
0x400d46d	            0x415c	                                 pop r12	      4264	sequencer.c	FUNCTION_103
0x400d46f	            0x415d	                                 pop r13	      4264	sequencer.c	FUNCTION_103
0x400d471	            0x415e	                                 pop r14	      4264	sequencer.c	FUNCTION_103
0x400d473	            0x415f	                                 pop r15	      4264	sequencer.c	FUNCTION_103
0x400d475	              0xc3	                                     ret	      4264	sequencer.c	FUNCTION_103
0x400d476	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4264	sequencer.c	FUNCTION_103
0x400d480	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400d485	            0x31d2	                            xor edx, edx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400d487	          0x4889de	                            mov rsi, rbx	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400d48a	      0xe800000000	                          call 0x400d48f	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400d48f	          0x4885c0	                           test rax, rax	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400d492	     0xf88d1040000	                            js 0x400d969	       407	sequencer.c	FUNCTION_15	IF_2	CALL_2
0x400d498	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       412	sequencer.c	FUNCTION_15	IF_3
0x400d49d	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       412	sequencer.c	FUNCTION_15	IF_3
0x400d4a2	          0x4c39e0	                            cmp rax, r12	       412	sequencer.c	FUNCTION_15	IF_3
0x400d4a5	     0xf8765030000	                            ja 0x400d810	       412	sequencer.c	FUNCTION_15	IF_3
0x400d4ab	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d4b3	      0xe800000000	                          call 0x400d4b8	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d4b8	            0x85c0	                           test eax, eax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d4ba	          0x4189c7	                           mov r15d, eax	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d4bd	     0xf858d040000	                           jne 0x400d950	      4196	sequencer.c	FUNCTION_103	IF_2	CALL_5
0x400d4c3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4200	sequencer.c	FUNCTION_103	CALL_8
0x400d4c8	      0xe800000000	                          call 0x400d4cd	      4200	sequencer.c	FUNCTION_103	CALL_8
0x400d4cd	            0x31f6	                            xor esi, esi	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d4cf	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d4d1	          0x4889ef	                            mov rdi, rbp	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d4d4	      0xe800000000	                          call 0x400d4d9	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d4d9	            0x85c0	                           test eax, eax	      1958	sequencer.c	FUNCTION_59	IF_1
0x400d4db	            0x89c3	                            mov ebx, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d4dd	     0xf88c7040000	                            js 0x400d9aa	      1958	sequencer.c	FUNCTION_59	IF_1
0x400d4e3	            0x31d2	                            xor edx, edx	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d4e5	            0x89c6	                            mov esi, eax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d4e7	          0x4c89f7	                            mov rdi, r14	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d4ea	      0xe800000000	                          call 0x400d4ef	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d4ef	            0x89df	                            mov edi, ebx	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400d4f1	          0x4989c4	                            mov r12, rax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d4f4	      0xe800000000	                          call 0x400d4f9	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400d4f9	          0x4d85e4	                           test r12, r12	      1962	sequencer.c	FUNCTION_59	IF_2
0x400d4fc	     0xf8853050000	                            js 0x400da55	      1962	sequencer.c	FUNCTION_59	IF_2
0x400d502	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d507	          0x4c89f6	                            mov rsi, r14	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d50a	      0xe8312effff	              call sym.parse_insn_buffer	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d50f	            0x85c0	                           test eax, eax	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d511	     0xf883c020000	                            js 0x400d753	      4204	sequencer.c	FUNCTION_103	IF_4	CALL_10
0x400d517	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d51b	            0x85d2	                           test edx, edx	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d51d	     0xf8e7a040000	                           jle 0x400d99d	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d523	    0x4c8dac249000	                   lea r13, [rsp + 0x90]	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d52b	            0x31ed	                            xor ebp, ebp	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d52d	            0x31db	                            xor ebx, ebx	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d52f	              0x90	                                     nop	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d530	          0x4989ec	                            mov r12, rbp	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d533	      0x4c03642448	             add r12, qword [rsp + 0x48]	      4210	sequencer.c	FUNCTION_103	FOR_1
0x400d538	        0x418b0424	                    mov eax, dword [r12]	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400d53c	          0x83f809	                              cmp eax, 9	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400d53f	            0x775f	                            ja 0x400d5a0	      4212	sequencer.c	FUNCTION_103	FOR_1	IF_5
0x400d541	            0x85c0	                           test eax, eax	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400d543	     0xf85cf010000	                           jne 0x400d718	      4214	sequencer.c	FUNCTION_103	FOR_1	IF_6
0x400d549	      0x498b7c2408	                mov rdi, qword [r12 + 8]	        75	commit.h	FUNCTION_106	CALL_1
0x400d54e	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_106	CALL_1
0x400d550	      0xe800000000	                          call 0x400d555	        75	commit.h	FUNCTION_106	CALL_1
0x400d555	            0x85c0	                           test eax, eax	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400d557	     0xf85ef020000	                           jne 0x400d84c	      4216	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_12
0x400d55d	      0x4d8b642408	                mov r12, qword [r12 + 8]	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d562	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d567	          0x4885c0	                           test rax, rax	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d56a	     0xf84a8010000	                            je 0x400d718	      4221	sequencer.c	FUNCTION_103	FOR_1	IF_8
0x400d570	      0x4883780800	                  cmp qword [rax + 8], 0	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d575	     0xf859d010000	                           jne 0x400d718	      4223	sequencer.c	FUNCTION_103	FOR_1	IF_9
0x400d57b	          0x488b38	                    mov rdi, qword [rax]	       975	cache.h	FUNCTION_173	CALL_1
0x400d57e	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x400d583	          0x4c89ee	                            mov rsi, r13	       975	cache.h	FUNCTION_173	CALL_1
0x400d586	        0x4883c704	                              add rdi, 4	       975	cache.h	FUNCTION_173	CALL_1
0x400d58a	      0xe800000000	                          call 0x400d58f	       975	cache.h	FUNCTION_173	CALL_1
0x400d58f	            0x85c0	                           test eax, eax	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d591	     0xf8581010000	                           jne 0x400d718	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d597	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      4226	sequencer.c	FUNCTION_103	FOR_1	IF_10	CALL_16
0x400d59b	      0x4d8d6c2404	                      lea r13, [r12 + 4]	      4228	sequencer.c	FUNCTION_103	FOR_1
0x400d5a0	          0x83c301	                              add ebx, 1	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d5a3	        0x4883c530	                           add rbp, 0x30	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d5a7	            0x39d3	                            cmp ebx, edx	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d5a9	            0x7c85	                            jl 0x400d530	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d5ab	            0x85db	                           test ebx, ebx	      4230	sequencer.c	FUNCTION_103	IF_11
0x400d5ad	     0xf8e21010000	                           jle 0x400d6d4	      4230	sequencer.c	FUNCTION_103	IF_11
0x400d5b3	      0x48636c2438	         movsxd rbp, dword [rsp + 0x38] 	      1937	sequencer.c	FUNCTION_56
0x400d5b8	    0x4c8b25000000	            mov r12, qword [0x0400d5bf] 	        58	sequencer.c	CALL_9
0x400d5bf	          0x4d85e4	                           test r12, r12	        58	sequencer.c	CALL_9
0x400d5c2	     0xf844a030000	                            je 0x400d912	        58	sequencer.c	CALL_9
0x400d5c8	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d5ca	      0xbab6010000	                          mov edx, 0x1b6	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d5cf	      0xbe41040000	                          mov esi, 0x441	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d5d4	          0x4c89e7	                            mov rdi, r12	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d5d7	      0xe800000000	                          call 0x400d5dc	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d5dc	            0x85c0	                           test eax, eax	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400d5de	     0xf8851010000	                            js 0x400d735	      4235	sequencer.c	FUNCTION_103	IF_11	IF_12
0x400d5e4	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400d5e9	          0x4889ea	                            mov rdx, rbp	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400d5ec	            0x89c7	                            mov edi, eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400d5ee	          0x890424	                    mov dword [rsp], eax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400d5f1	      0xe800000000	                          call 0x400d5f6	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400d5f6	          0x4885c0	                           test rax, rax	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400d5f9	          0x8b0c24	                    mov ecx, dword [rsp]	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400d5fc	     0xf88e6030000	                            js 0x400d9e8	      4241	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_22
0x400d602	            0x89cf	                            mov edi, ecx	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400d604	      0xe800000000	                          call 0x400d609	      4247	sequencer.c	FUNCTION_103	IF_11	CALL_26
0x400d609	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400d60e	    0x4c8b25000000	            mov r12, qword [0x0400d615] 	        52	sequencer.c	CALL_8
0x400d615	          0x4829ea	                            sub rdx, rbp	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400d618	      0x48036c2440	             add rbp, qword [rsp + 0x40]	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400d61d	          0x4d85e4	                           test r12, r12	        52	sequencer.c	CALL_8
0x400d620	      0x48896c2408	                mov qword [rsp + 8], rbp	      4249	sequencer.c	FUNCTION_103	IF_11	IF_14	CALL_28
0x400d625	     0xf8402030000	                            je 0x400d92d	        52	sequencer.c	CALL_8
0x400d62b	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d62d	      0xbe01020000	                          mov esi, 0x201	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d632	          0x4c89e7	                            mov rdi, r12	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d635	        0x48891424	                    mov qword [rsp], rdx	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d639	      0xe800000000	                          call 0x400d63e	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d63e	            0x85c0	                           test eax, eax	      4176	sequencer.c	FUNCTION_102	IF_1
0x400d640	            0x89c5	                            mov ebp, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d642	        0x488b1424	                    mov rdx, qword [rsp]	      4176	sequencer.c	FUNCTION_102	IF_1
0x400d646	     0xf88e9000000	                            js 0x400d735	      4176	sequencer.c	FUNCTION_102	IF_1
0x400d64c	      0x488b742408	                mov rsi, qword [rsp + 8]	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d651	            0x89c7	                            mov edi, eax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d653	      0xe800000000	                          call 0x400d658	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d658	          0x4885c0	                           test rax, rax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d65b	     0xf8850020000	                            js 0x400d8b1	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400d661	            0x89ef	                            mov edi, ebp	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d663	      0xe800000000	                          call 0x400d668	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d668	            0x85c0	                           test eax, eax	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d66a	     0xf85d6030000	                           jne 0x400da46	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d670	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d674	        0x895c2458	             mov dword [rsp + 0x58], ebx	      4255	sequencer.c	FUNCTION_103	IF_11
0x400d678	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      4255	sequencer.c	FUNCTION_103	IF_11
0x400d67d	            0x39da	                            cmp edx, ebx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400d67f	            0x7e53	                           jle 0x400d6d4	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400d681	          0x4863fb	                         movsxd rdi, ebx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d684	        0x488d047f	                  lea rax, [rdi + rdi*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d688	        0x48c1e004	                              shl rax, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d68c	        0x498d3400	                     lea rsi, [r8 + rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d690	            0x8b2e	                    mov ebp, dword [rsi]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d692	          0x83fd09	                              cmp ebp, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d695	     0xf86f1020000	                           jbe 0x400d98c	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d69b	        0x448d4aff	                      lea r9d, [rdx - 1]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d69f	          0x4889f0	                            mov rax, rsi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6a2	          0x4489ca	                            mov edx, r9d	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6a5	            0x29da	                            sub edx, ebx	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6a7	          0x4801fa	                            add rdx, rdi	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6aa	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6ae	        0x48c1e104	                              shl rcx, 4	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6b2	          0x4c01c1	                             add rcx, r8	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6b5	            0xeb18	                           jmp 0x400d6cf	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6b7	    0x660f1f840000	                    nop word [rax + rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6c0	        0x4883c030	                           add rax, 0x30	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6c4	            0x8b10	                    mov edx, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6c6	          0x83fa09	                              cmp edx, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6c9	     0xf86a1000000	                           jbe 0x400d770	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d6cf	          0x4839c8	                            cmp rax, rcx	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400d6d2	            0x75ec	                           jne 0x400d6c0	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400d6d4	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d6d7	      0xe800000000	                          call 0x400d6dc	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d6dc	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1792	sequencer.c	FUNCTION_51
0x400d6e1	      0xe800000000	                          call 0x400d6e6	      1792	sequencer.c	FUNCTION_51
0x400d6e6	          0x4c89ef	                            mov rdi, r13	      4261	sequencer.c	FUNCTION_103	CALL_35
0x400d6e9	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1792	sequencer.c	FUNCTION_51
0x400d6f2	    0xc74424540000	               mov dword [rsp + 0x54], 0	      1793	sequencer.c	FUNCTION_51
0x400d6fa	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1793	sequencer.c	FUNCTION_51
0x400d702	      0xe800000000	                          call 0x400d707	      4261	sequencer.c	FUNCTION_103	CALL_35
0x400d707	          0x4889c7	                            mov rdi, rax	       104	stdio2.h	CALL_282
0x400d70a	      0xe800000000	                          call 0x400d70f	       104	stdio2.h	CALL_282
0x400d70f	      0xe936fdffff	                           jmp 0x400d44a	      4263	sequencer.c	FUNCTION_103
0x400d714	         0xf1f4000	                         nop dword [rax]	      4263	sequencer.c	FUNCTION_103
0x400d718	            0x85db	                           test ebx, ebx	      4230	sequencer.c	FUNCTION_103	IF_11
0x400d71a	            0x7eb8	                           jle 0x400d6d4	      4230	sequencer.c	FUNCTION_103	IF_11
0x400d71c	        0x395c2450	            cmp dword [rsp + 0x50], ebx 	      1937	sequencer.c	FUNCTION_56
0x400d720	     0xf8e8dfeffff	                           jle 0x400d5b3	      1937	sequencer.c	FUNCTION_56
0x400d726	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1937	sequencer.c	FUNCTION_56
0x400d72b	      0x48636c2828	   movsxd rbp, dword [rax + rbp + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x400d730	      0xe983feffff	                           jmp 0x400d5b8	      1937	sequencer.c	FUNCTION_56
0x400d735	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d73a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d73f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d741	      0xe800000000	                          call 0x400d746	        54	gettext.h	FUNCTION_164
0x400d746	          0x4c89e6	                            mov rsi, r12	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d749	          0x4889c7	                            mov rdi, rax	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d74c	            0x31c0	                            xor eax, eax	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d74e	      0xe800000000	                          call 0x400d753	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400d753	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d756	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400d75c	      0xe800000000	                          call 0x400d761	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d761	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1792	sequencer.c	FUNCTION_51
0x400d766	      0xe800000000	                          call 0x400d76b	      1792	sequencer.c	FUNCTION_51
0x400d76b	      0xe9dafcffff	                           jmp 0x400d44a	      4252	sequencer.c	FUNCTION_103	IF_11	IF_14
0x400d770	          0x83ea04	                              sub edx, 4	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d773	          0x83fa01	                              cmp edx, 1	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d776	     0xf8758ffffff	                            ja 0x400d6d4	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d77c	          0x4489ca	                            mov edx, r9d	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d77f	          0x4889f0	                            mov rax, rsi	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d782	            0x29da	                            sub edx, ebx	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d784	          0x4801fa	                            add rdx, rdi	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d787	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d78b	        0x48c1e204	                              shl rdx, 4	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d78f	          0x4901d0	                             add r8, rdx	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d792	            0xeb0f	                           jmp 0x400d7a3	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d794	         0xf1f4000	                         nop dword [rax]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d798	        0x4883c030	                           add rax, 0x30	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d79c	            0x8b28	                    mov ebp, dword [rax]	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d79e	          0x83fd09	                              cmp ebp, 9	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d7a1	            0x760a	                           jbe 0x400d7ad	      2907	sequencer.c	FUNCTION_84	FOR_1	IF_1	CALL_1
0x400d7a3	          0x4939c0	                             cmp r8, rax	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400d7a6	            0x75f0	                           jne 0x400d798	      2906	sequencer.c	FUNCTION_84	FOR_1
0x400d7a8	      0xbdffffffff	                     mov ebp, 0xffffffff	      2910	sequencer.c	FUNCTION_84
0x400d7ad	    0x488b3d000000	            mov rdi, qword [0x0400d7b4] 	       123	sequencer.c	CALL_20
0x400d7b4	          0x4885ff	                           test rdi, rdi	       123	sequencer.c	CALL_20
0x400d7b7	     0xf8410020000	                            je 0x400d9cd	       123	sequencer.c	CALL_20
0x400d7bd	      0xbe00000000	                              mov esi, 0	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400d7c2	      0xe800000000	                          call 0x400d7c7	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400d7c7	          0x4885c0	                           test rax, rax	      1485	sequencer.c	FUNCTION_47	IF_1
0x400d7ca	          0x4889c3	                            mov rbx, rax	      1483	sequencer.c	FUNCTION_47	CALL_2
0x400d7cd	     0xf8401ffffff	                            je 0x400d6d4	      1485	sequencer.c	FUNCTION_47	IF_1
0x400d7d3	          0x4c89ef	                            mov rdi, r13	      1488	sequencer.c	FUNCTION_47	CALL_3
0x400d7d6	          0x83ed04	                              sub ebp, 4	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x400d7d9	      0xe800000000	                          call 0x400d7de	      1488	sequencer.c	FUNCTION_47	CALL_3
0x400d7de	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_279
0x400d7e3	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_279
0x400d7e6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400d7eb	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_279
0x400d7ee	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400d7f0	      0xe800000000	                          call 0x400d7f5	        97	stdio2.h	CALL_279
0x400d7f5	          0x4889df	                            mov rdi, rbx	      1489	sequencer.c	FUNCTION_47	CALL_4
0x400d7f8	      0xe800000000	                          call 0x400d7fd	      1489	sequencer.c	FUNCTION_47	CALL_4
0x400d7fd	          0x83fd01	                              cmp ebp, 1	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x400d800	     0xf86cefeffff	                           jbe 0x400d6d4	      1491	sequencer.c	FUNCTION_47	IF_2	CALL_5
0x400d806	      0xe89528ffff	        call sym.flush_rewritten_pending	      1492	sequencer.c	FUNCTION_47	CALL_6
0x400d80b	      0xe9c4feffff	                           jmp 0x400d6d4	      1492	sequencer.c	FUNCTION_47	CALL_6
0x400d810	        0x488d50ff	                      lea rdx, [rax - 1]	       412	sequencer.c	FUNCTION_15	IF_3
0x400d814	        0x488d0c17	                    lea rcx, [rdi + rdx]	       412	sequencer.c	FUNCTION_15	IF_3
0x400d818	          0x80390a	                     cmp byte [rcx], 0xa	       412	sequencer.c	FUNCTION_15	IF_3
0x400d81b	     0xf858afcffff	                           jne 0x400d4ab	       412	sequencer.c	FUNCTION_15	IF_3
0x400d821	          0x4939d4	                            cmp r12, rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d824	      0x4889542418	             mov qword [rsp + 0x18], rdx	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d829	            0x7314	                           jae 0x400d83f	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d82b	        0x4883e802	                              sub rax, 2	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d82f	          0x4801c7	                            add rdi, rax	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d832	          0x803f0d	                     cmp byte [rdi], 0xd	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d835	            0x7508	                           jne 0x400d83f	       413	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d837	      0x4889442418	             mov qword [rsp + 0x18], rax	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d83c	          0x4889f9	                            mov rcx, rdi	       414	sequencer.c	FUNCTION_15	IF_3	IF_4
0x400d83f	          0xc60100	                       mov byte [rcx], 0	       415	sequencer.c	FUNCTION_15	IF_3
0x400d842	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       415	sequencer.c	FUNCTION_15	IF_3
0x400d847	      0xe95ffcffff	                           jmp 0x400d4ab	       415	sequencer.c	FUNCTION_15	IF_3
0x400d84c	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d84f	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d855	      0xe800000000	                          call 0x400d85a	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d85a	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1792	sequencer.c	FUNCTION_51
0x400d85f	      0xe800000000	                          call 0x400d864	      1792	sequencer.c	FUNCTION_51
0x400d864	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d869	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1792	sequencer.c	FUNCTION_51
0x400d872	    0xc74424540000	               mov dword [rsp + 0x54], 0	      1793	sequencer.c	FUNCTION_51
0x400d87a	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1793	sequencer.c	FUNCTION_51
0x400d882	        0x4883c704	                              add rdi, 4	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d886	      0xe800000000	                          call 0x400d88b	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d88b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d890	          0x4889c3	                            mov rbx, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d893	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d898	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d89a	      0xe800000000	                          call 0x400d89f	        54	gettext.h	FUNCTION_164
0x400d89f	          0x4889de	                            mov rsi, rbx	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8a2	          0x4889c7	                            mov rdi, rax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8a5	            0x31c0	                            xor eax, eax	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8a7	      0xe800000000	                          call 0x400d8ac	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8ac	      0xe999fbffff	                           jmp 0x400d44a	      4218	sequencer.c	FUNCTION_103	FOR_1	IF_7	CALL_14
0x400d8b1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d8b6	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d8b8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d8bd	      0xe800000000	                          call 0x400d8c2	        54	gettext.h	FUNCTION_164
0x400d8c2	          0x4c89e6	                            mov rsi, r12	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d8c5	          0x4889c7	                            mov rdi, rax	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d8c8	            0x31c0	                            xor eax, eax	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d8ca	      0xe800000000	                          call 0x400d8cf	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400d8cf	            0x89ef	                            mov edi, ebp	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d8d1	      0xe800000000	                          call 0x400d8d6	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d8d6	      0xe978feffff	                           jmp 0x400d753	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400d8db	      0xbf00000000	                              mov edi, 0	       141	sequencer.c	CALL_27
0x400d8e0	      0xe800000000	                          call 0x400d8e5	       141	sequencer.c	CALL_27
0x400d8e5	      0x4c63642418	         movsxd r12, dword [rsp + 0x18] 	       141	sequencer.c	CALL_27
0x400d8ea	          0x4889c3	                            mov rbx, rax	       141	sequencer.c	CALL_27
0x400d8ed	    0x488905000000	            mov qword [0x0400d8f4], rax 	       141	sequencer.c	CALL_27
0x400d8f4	      0xe924fbffff	                           jmp 0x400d41d	       141	sequencer.c	CALL_27
0x400d8f9	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400d8fe	      0xe800000000	                          call 0x400d903	        52	sequencer.c	CALL_8
0x400d903	          0x4889c5	                            mov rbp, rax	        52	sequencer.c	CALL_8
0x400d906	    0x488905000000	            mov qword [0x0400d90d], rax 	        52	sequencer.c	CALL_8
0x400d90d	      0xe9c2faffff	                           jmp 0x400d3d4	        52	sequencer.c	CALL_8
0x400d912	      0xbf00000000	                              mov edi, 0	        58	sequencer.c	CALL_9
0x400d917	            0x31c0	                            xor eax, eax	        58	sequencer.c	CALL_9
0x400d919	      0xe800000000	                          call 0x400d91e	        58	sequencer.c	CALL_9
0x400d91e	          0x4989c4	                            mov r12, rax	        58	sequencer.c	CALL_9
0x400d921	    0x488905000000	            mov qword [0x0400d928], rax 	        58	sequencer.c	CALL_9
0x400d928	      0xe99bfcffff	                           jmp 0x400d5c8	        58	sequencer.c	CALL_9
0x400d92d	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400d932	            0x31c0	                            xor eax, eax	        52	sequencer.c	CALL_8
0x400d934	        0x48891424	                    mov qword [rsp], rdx	        52	sequencer.c	CALL_8
0x400d938	      0xe800000000	                          call 0x400d93d	        52	sequencer.c	CALL_8
0x400d93d	        0x488b1424	                    mov rdx, qword [rsp]	        52	sequencer.c	CALL_8
0x400d941	          0x4989c4	                            mov r12, rax	        52	sequencer.c	CALL_8
0x400d944	    0x488905000000	            mov qword [0x0400d94b], rax 	        52	sequencer.c	CALL_8
0x400d94b	      0xe9dbfcffff	                           jmp 0x400d62b	        52	sequencer.c	CALL_8
0x400d950	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400d955	      0xe800000000	                          call 0x400d95a	      4197	sequencer.c	FUNCTION_103	IF_2	CALL_6
0x400d95a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d95f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d964	      0xe9cafaffff	                           jmp 0x400d433	        54	gettext.h	FUNCTION_164
0x400d969	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d96b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d970	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d975	      0xe800000000	                          call 0x400d97a	        54	gettext.h	FUNCTION_164
0x400d97a	          0x4889de	                            mov rsi, rbx	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400d97d	          0x4889c7	                            mov rdi, rax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400d980	            0x31c0	                            xor eax, eax	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400d982	      0xe800000000	                          call 0x400d987	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400d987	      0xe99dfaffff	                           jmp 0x400d429	       408	sequencer.c	FUNCTION_15	IF_2	CALL_4
0x400d98c	          0x8d45fc	                      lea eax, [rbp - 4]	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d98f	          0x83f801	                              cmp eax, 1	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d992	     0xf873cfdffff	                            ja 0x400d6d4	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d998	      0xe910feffff	                           jmp 0x400d7ad	      4256	sequencer.c	FUNCTION_103	IF_11	IF_15	CALL_31
0x400d99d	    0x4c8dac249000	                   lea r13, [rsp + 0x90]	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d9a5	      0xe92afdffff	                           jmp 0x400d6d4	      4209	sequencer.c	FUNCTION_103	FOR_1
0x400d9aa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d9ac	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d9b1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d9b6	      0xe800000000	                          call 0x400d9bb	        54	gettext.h	FUNCTION_164
0x400d9bb	          0x4889ee	                            mov rsi, rbp	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d9be	          0x4889c7	                            mov rdi, rax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d9c1	            0x31c0	                            xor eax, eax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d9c3	      0xe800000000	                          call 0x400d9c8	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d9c8	      0xe977faffff	                           jmp 0x400d444	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d9cd	      0xbf00000000	                              mov edi, 0	       123	sequencer.c	CALL_20
0x400d9d2	            0x31c0	                            xor eax, eax	       123	sequencer.c	CALL_20
0x400d9d4	      0xe800000000	                          call 0x400d9d9	       123	sequencer.c	CALL_20
0x400d9d9	          0x4889c7	                            mov rdi, rax	       123	sequencer.c	CALL_20
0x400d9dc	    0x488905000000	            mov qword [0x0400d9e3], rax 	       123	sequencer.c	CALL_20
0x400d9e3	      0xe9d5fdffff	                           jmp 0x400d7bd	       123	sequencer.c	CALL_20
0x400d9e8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d9ed	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d9f2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d9f4	      0xe800000000	                          call 0x400d9f9	        54	gettext.h	FUNCTION_164
0x400d9f9	          0x4c89e6	                            mov rsi, r12	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400d9fc	          0x4889c7	                            mov rdi, rax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400d9ff	            0x31c0	                            xor eax, eax	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400da01	      0xe800000000	                          call 0x400da06	      4242	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_23
0x400da06	          0x4c89f7	                            mov rdi, r14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400da09	    0x41bfffffffff	                    mov r15d, 0xffffffff	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0x400da0f	      0xe800000000	                          call 0x400da14	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400da14	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1792	sequencer.c	FUNCTION_51
0x400da19	      0xe800000000	                          call 0x400da1e	      1792	sequencer.c	FUNCTION_51
0x400da1e	          0x8b0c24	                    mov ecx, dword [rsp]	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400da21	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1792	sequencer.c	FUNCTION_51
0x400da2a	    0xc74424540000	               mov dword [rsp + 0x54], 0	      1793	sequencer.c	FUNCTION_51
0x400da32	    0xc74424500000	               mov dword [rsp + 0x50], 0	      1793	sequencer.c	FUNCTION_51
0x400da3a	            0x89cf	                            mov edi, ecx	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400da3c	      0xe800000000	                          call 0x400da41	      4244	sequencer.c	FUNCTION_103	IF_11	IF_13	CALL_25
0x400da41	      0xe904faffff	                           jmp 0x400d44a	      4245	sequencer.c	FUNCTION_103	IF_11	IF_13
0x400da46	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400da4b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400da50	      0xe9eafcffff	                           jmp 0x400d73f	        54	gettext.h	FUNCTION_164
0x400da55	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400da57	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400da5c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400da61	      0xe800000000	                          call 0x400da66	        54	gettext.h	FUNCTION_164
0x400da66	          0x4889ee	                            mov rsi, rbp	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400da69	          0x4889c7	                            mov rdi, rax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400da6c	            0x31c0	                            xor eax, eax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400da6e	      0xe800000000	                          call 0x400da73	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400da73	      0xe9ccf9ffff	                           jmp 0x400d444	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400da78	      0xe800000000	                          call 0x400da7d	      4264	sequencer.c	FUNCTION_103
transform_todos	functions,0:SWITCH,0:ELSE,3:WHILE,0:DO,0:IF,8:CALL,20:FOR,1	206
0x400cae0	            0x4157	                                push r15	      4008	sequencer.c	FUNCTION_99
0x400cae2	            0x4156	                                push r14	      4008	sequencer.c	FUNCTION_99
0x400cae4	            0x4155	                                push r13	      4008	sequencer.c	FUNCTION_99
0x400cae6	            0x4154	                                push r12	      4008	sequencer.c	FUNCTION_99
0x400cae8	          0x4189fc	                           mov r12d, edi	      4008	sequencer.c	FUNCTION_99
0x400caeb	              0x55	                                push rbp	      4008	sequencer.c	FUNCTION_99
0x400caec	              0x53	                                push rbx	      4008	sequencer.c	FUNCTION_99
0x400caed	    0x4881ec880000	                           sub rsp, 0x88	      4008	sequencer.c	FUNCTION_99
0x400caf4	    0x4c8b35000000	            mov r14, qword [0x0400cafb] 	        52	sequencer.c	CALL_8
0x400cafb	    0x64488b042528	                mov rax, qword fs:[0x28]	      4008	sequencer.c	FUNCTION_99
0x400cb04	      0x4889442478	             mov qword [rsp + 0x78], rax	      4008	sequencer.c	FUNCTION_99
0x400cb09	            0x31c0	                            xor eax, eax	      4008	sequencer.c	FUNCTION_99
0x400cb0b	          0x4d85f6	                           test r14, r14	        52	sequencer.c	CALL_8
0x400cb0e	     0xf84ce020000	                            je 0x400cde2	        52	sequencer.c	CALL_8
0x400cb14	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4010	sequencer.c	FUNCTION_99
0x400cb19	            0x31c0	                            xor eax, eax	      4010	sequencer.c	FUNCTION_99
0x400cb1b	      0xb90b000000	                            mov ecx, 0xb	      4010	sequencer.c	FUNCTION_99
0x400cb20	            0x31d2	                            xor edx, edx	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cb22	          0x4c89f6	                            mov rsi, r14	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cb25	    0x48c704240000	                      mov qword [rsp], 0	      4011	sequencer.c	FUNCTION_99
0x400cb2d	          0xf348ab	              rep stosq qword [rdi], rax	      4010	sequencer.c	FUNCTION_99
0x400cb30	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cb35	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4010	sequencer.c	FUNCTION_99
0x400cb3e	    0x48c744240800	                  mov qword [rsp + 8], 0	      4011	sequencer.c	FUNCTION_99
0x400cb47	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4011	sequencer.c	FUNCTION_99
0x400cb50	      0xe800000000	                          call 0x400cb55	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cb55	          0x4885c0	                           test rax, rax	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cb58	     0xf88f2020000	                            js 0x400ce50	      4015	sequencer.c	FUNCTION_99	IF_1	CALL_2
0x400cb5e	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cb63	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cb68	      0xe8d337ffff	              call sym.parse_insn_buffer	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cb6d	            0x85c0	                           test eax, eax	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cb6f	     0xf8586020000	                           jne 0x400cdfb	      4018	sequencer.c	FUNCTION_99	IF_2	CALL_4
0x400cb75	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cb79	          0x4589e5	                          mov r13d, r12d	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400cb7c	            0x31ed	                            xor ebp, ebp	      4038	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400cb7e	        0x4183e504	                             and r13d, 4	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400cb82	        0x4183e402	                             and r12d, 2	      4038	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400cb86	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cb8b	            0x85c0	                           test eax, eax	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cb8d	     0xf8ff8000000	                            jg 0x400cc8b	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cb93	      0xe950010000	                           jmp 0x400cce8	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cb98	     0xf1f84000000	                   nop dword [rax + rax]	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cba0	    0x440fb6b80000	                  movzx r15d, byte [rax]	      1351	sequencer.c	FUNCTION_42	IF_1
0x400cba8	     0xfb605000000	           movzx eax, byte [0x0400cbaf] 	      1353	sequencer.c	FUNCTION_42
0x400cbaf	        0x488b1424	                    mov rdx, qword [rsp]	      1353	sequencer.c	FUNCTION_42
0x400cbb3	          0x4584ff	                         test r15b, r15b	      1353	sequencer.c	FUNCTION_42
0x400cbb6	        0x440f44f8	                         cmove r15d, eax	      1353	sequencer.c	FUNCTION_42
0x400cbba	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_108
0x400cbbd	     0xf85cd010000	                           jne 0x400cd90	       141	strbuf.h	FUNCTION_108
0x400cbc3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x400cbc8	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_110	CALL_2
0x400cbcb	      0xe800000000	                          call 0x400cbd0	       228	strbuf.h	FUNCTION_110	CALL_2
0x400cbd0	      0x488b442408	                mov rax, qword [rsp + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x400cbd5	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_110
0x400cbd9	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_110
0x400cbde	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_110
0x400cbe3	        0x44883c02	              mov byte [rdx + rax], r15b	       229	strbuf.h	FUNCTION_110
0x400cbe7	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_110
0x400cbec	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_110
0x400cbf1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x400cbf5	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400cbf9	          0x4885ff	                           test rdi, rdi	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400cbfc	            0x7436	                            je 0x400cc34	      4037	sequencer.c	FUNCTION_99	FOR_1	IF_5
0x400cbfe	        0x4883c704	                              add rdi, 4	       312	sequencer.c	FUNCTION_10	CALL_1
0x400cc02	          0x4585e4	                         test r12d, r12d	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400cc05	     0xf8435010000	                            je 0x400cd40	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400cc0b	    0x8b3500000000	            mov esi, dword [0x0400cc11] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x400cc11	      0xe800000000	                          call 0x400cc16	       312	sequencer.c	FUNCTION_10	CALL_1
0x400cc16	          0x833b09	                      cmp dword [rbx], 9	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400cc19	          0x4989c7	                            mov r15, rax	       312	sequencer.c	FUNCTION_10	CALL_1
0x400cc1c	     0xf842f010000	                            je 0x400cd51	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400cc22	          0x4c89fa	                            mov rdx, r15	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400cc25	      0xbe00000000	                              mov esi, 0	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400cc2a	          0x4889e7	                            mov rdi, rsp	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400cc2d	            0x31c0	                            xor eax, eax	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400cc2f	      0xe800000000	                          call 0x400cc34	      4049	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_16
0x400cc34	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400cc37	            0x85d2	                           test edx, edx	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400cc39	     0xf8589000000	                           jne 0x400ccc8	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400cc3f	        0x488b0424	                    mov rax, qword [rsp]	      4053	sequencer.c	FUNCTION_99	FOR_1	IF_8
0x400cc43	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x400cc46	     0xf8564010000	                           jne 0x400cdb0	       141	strbuf.h	FUNCTION_108
0x400cc4c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x400cc51	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_110	CALL_2
0x400cc54	      0xe800000000	                          call 0x400cc59	       228	strbuf.h	FUNCTION_110	CALL_2
0x400cc59	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x400cc5e	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x400cc62	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_110
0x400cc67	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_110
0x400cc6c	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_110
0x400cc70	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_110
0x400cc75	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_110
0x400cc7a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x400cc7e	          0x83c501	                              add ebp, 1	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cc81	        0x4883c330	                           add rbx, 0x30	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cc85	        0x396c2440	            cmp dword [rsp + 0x40], ebp 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cc89	            0x7e5d	                           jle 0x400cce8	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cc8b	            0x8b03	                    mov eax, dword [rbx]	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cc8d	          0x83f80b	                            cmp eax, 0xb	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cc90	     0xf87da000000	                            ja 0x400cd70	      4025	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cc96	        0x48c1e004	                              shl rax, 4	      1351	sequencer.c	FUNCTION_42	IF_1
0x400cc9a	          0x4585ed	                         test r13d, r13d	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400cc9d	     0xf85fdfeffff	                           jne 0x400cba0	      4031	sequencer.c	FUNCTION_99	FOR_1	IF_4
0x400cca3	    0x4c8bb8000000	                    mov r15, qword [rax]	      1345	sequencer.c	ELSE_1	FUNCTION_41	IF_1
0x400ccaa	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x400ccad	      0xe800000000	                          call 0x400ccb2	       279	strbuf.h	FUNCTION_111	CALL_2
0x400ccb2	          0x4c89fe	                            mov rsi, r15	       279	strbuf.h	FUNCTION_111	CALL_2
0x400ccb5	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x400ccb8	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x400ccbb	      0xe800000000	                          call 0x400ccc0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400ccc0	      0xe930ffffff	                           jmp 0x400cbf5	       279	strbuf.h	FUNCTION_111	CALL_2
0x400ccc5	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_111	CALL_2
0x400ccc8	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400cccc	            0x31c0	                            xor eax, eax	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400ccce	      0xbe00000000	                              mov esi, 0	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400ccd3	          0x4889e7	                            mov rdi, rsp	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400ccd6	          0x83c501	                              add ebp, 1	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400ccd9	        0x4883c330	                           add rbx, 0x30	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400ccdd	      0xe800000000	                          call 0x400cce2	      4056	sequencer.c	FUNCTION_99	FOR_1	CALL_18
0x400cce2	        0x396c2440	            cmp dword [rsp + 0x40], ebp 	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cce6	            0x7fa3	                            jg 0x400cc8b	      4023	sequencer.c	FUNCTION_99	FOR_1
0x400cce8	      0x488b742408	                mov rsi, qword [rsp + 8]	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400cced	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400ccf2	          0x4c89f2	                            mov rdx, r14	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400ccf5	      0xe8f645ffff	     call sym.write_message.constprop.34	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400ccfa	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ccff	            0x89c3	                            mov ebx, eax	      4059	sequencer.c	FUNCTION_99	CALL_19
0x400cd01	      0xe800000000	                          call 0x400cd06	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400cd06	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1792	sequencer.c	FUNCTION_51
0x400cd0b	      0xe800000000	                          call 0x400cd10	      1792	sequencer.c	FUNCTION_51
0x400cd10	            0x89d8	                            mov eax, ebx	      4061	sequencer.c	FUNCTION_99
0x400cd12	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      4062	sequencer.c	FUNCTION_99
0x400cd17	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4062	sequencer.c	FUNCTION_99
0x400cd20	     0xf8536010000	                           jne 0x400ce5c	      4062	sequencer.c	FUNCTION_99
0x400cd26	    0x4881c4880000	                           add rsp, 0x88	      4062	sequencer.c	FUNCTION_99
0x400cd2d	              0x5b	                                 pop rbx	      4062	sequencer.c	FUNCTION_99
0x400cd2e	              0x5d	                                 pop rbp	      4062	sequencer.c	FUNCTION_99
0x400cd2f	            0x415c	                                 pop r12	      4062	sequencer.c	FUNCTION_99
0x400cd31	            0x415d	                                 pop r13	      4062	sequencer.c	FUNCTION_99
0x400cd33	            0x415e	                                 pop r14	      4062	sequencer.c	FUNCTION_99
0x400cd35	            0x415f	                                 pop r15	      4062	sequencer.c	FUNCTION_99
0x400cd37	              0xc3	                                     ret	      4062	sequencer.c	FUNCTION_99
0x400cd38	     0xf1f84000000	                   nop dword [rax + rax]	      4062	sequencer.c	FUNCTION_99
0x400cd40	      0xe800000000	                          call 0x400cd45	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400cd45	          0x833b09	                      cmp dword [rbx], 9	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400cd48	          0x4989c7	                            mov r15, rax	      4039	sequencer.c	FUNCTION_99	FOR_1	IF_5	CALL_12
0x400cd4b	     0xf85d1feffff	                           jne 0x400cc22	      4042	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6
0x400cd51	        0xf6431001	               test byte [rbx + 0x10], 1	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400cd55	      0xba03000000	                              mov edx, 3	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cd5a	            0x7474	                            je 0x400cdd0	      4043	sequencer.c	FUNCTION_99	FOR_1	IF_5	IF_6	IF_7
0x400cd5c	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cd61	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cd64	      0xe800000000	                          call 0x400cd69	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cd69	      0xe9b4feffff	                           jmp 0x400cc22	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cd6e	            0x6690	                                     nop	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cd70	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cd74	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cd77	      0xbe00000000	                              mov esi, 0	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cd7c	          0x4889e7	                            mov rdi, rsp	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cd7f	            0x31c0	                            xor eax, eax	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cd81	      0xe800000000	                          call 0x400cd86	      4026	sequencer.c	FUNCTION_99	FOR_1	IF_3	CALL_7
0x400cd86	      0xe9f3feffff	                           jmp 0x400cc7e	      4027	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cd8b	       0xf1f440000	                   nop dword [rax + rax]	      4027	sequencer.c	FUNCTION_99	FOR_1	IF_3
0x400cd90	      0x488b442408	                mov rax, qword [rsp + 8]	       141	strbuf.h	FUNCTION_108
0x400cd95	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cd99	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cd9c	     0xf8533feffff	                           jne 0x400cbd5	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cda2	      0xe91cfeffff	                           jmp 0x400cbc3	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cda7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cdb0	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_108
0x400cdb5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cdb9	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cdbc	     0xf859cfeffff	                           jne 0x400cc5e	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cdc2	      0xe985feffff	                           jmp 0x400cc4c	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cdc7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400cdd0	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cdd5	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cdd8	      0xe800000000	                          call 0x400cddd	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cddd	      0xe940feffff	                           jmp 0x400cc22	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cde2	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400cde7	      0xe800000000	                          call 0x400cdec	        52	sequencer.c	CALL_8
0x400cdec	          0x4989c6	                            mov r14, rax	        52	sequencer.c	CALL_8
0x400cdef	    0x488905000000	            mov qword [0x0400cdf6], rax 	        52	sequencer.c	CALL_8
0x400cdf6	      0xe919fdffff	                           jmp 0x400cb14	        52	sequencer.c	CALL_8
0x400cdfb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ce00	      0xe800000000	                          call 0x400ce05	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400ce05	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1792	sequencer.c	FUNCTION_51
0x400ce0a	      0xe800000000	                          call 0x400ce0f	      1792	sequencer.c	FUNCTION_51
0x400ce0f	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1792	sequencer.c	FUNCTION_51
0x400ce18	    0xc74424440000	               mov dword [rsp + 0x44], 0	      1793	sequencer.c	FUNCTION_51
0x400ce20	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400ce25	    0xc74424400000	               mov dword [rsp + 0x40], 0	      1793	sequencer.c	FUNCTION_51
0x400ce2d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400ce32	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400ce34	      0xe800000000	                          call 0x400ce39	        54	gettext.h	FUNCTION_164
0x400ce39	          0x4c89f6	                            mov rsi, r14	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ce3c	          0x4889c7	                            mov rdi, rax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ce3f	            0x31c0	                            xor eax, eax	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ce41	      0xe800000000	                          call 0x400ce46	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ce46	      0xb8ffffffff	                     mov eax, 0xffffffff	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ce4b	      0xe9c2feffff	                           jmp 0x400cd12	      4020	sequencer.c	FUNCTION_99	IF_2	CALL_6
0x400ce50	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400ce55	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400ce5a	            0xebd6	                           jmp 0x400ce32	        54	gettext.h	FUNCTION_164
0x400ce5c	      0xe800000000	                          call 0x400ce61	      4062	sequencer.c	FUNCTION_99
check_todo_list	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,8:CALL,19:FOR,2	312
0x400ce70	            0x4157	                                push r15	      4091	sequencer.c	FUNCTION_101
0x400ce72	            0x4156	                                push r14	      4091	sequencer.c	FUNCTION_101
0x400ce74	      0xbf00000000	                              mov edi, 0	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400ce79	            0x4155	                                push r13	      4091	sequencer.c	FUNCTION_101
0x400ce7b	            0x4154	                                push r12	      4091	sequencer.c	FUNCTION_101
0x400ce7d	              0x55	                                push rbp	      4091	sequencer.c	FUNCTION_101
0x400ce7e	              0x53	                                push rbx	      4091	sequencer.c	FUNCTION_101
0x400ce7f	    0x4881ecb80000	                           sub rsp, 0xb8	      4091	sequencer.c	FUNCTION_101
0x400ce86	      0x4c8d642450	                   lea r12, [rsp + 0x50]	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400ce8b	    0x64488b042528	                mov rax, qword fs:[0x28]	      4091	sequencer.c	FUNCTION_101
0x400ce94	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      4091	sequencer.c	FUNCTION_101
0x400ce9c	            0x31c0	                            xor eax, eax	      4091	sequencer.c	FUNCTION_101
0x400ce9e	          0x4c89e6	                            mov rsi, r12	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400cea1	      0xe800000000	                          call 0x400cea6	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400cea6	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400cea8	            0x7576	                           jne 0x400cf20	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400ceaa	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400ceaf	      0xbf00000000	                              mov edi, 0	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400ceb4	          0x4889de	                            mov rsi, rbx	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400ceb7	      0xe800000000	                          call 0x400cebc	      4073	sequencer.c	FUNCTION_100	IF_1	CALL_2
0x400cebc	            0x85c0	                           test eax, eax	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400cebe	            0x7460	                            je 0x400cf20	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400cec0	          0x4889de	                            mov rsi, rbx	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400cec3	      0xbf00000000	                              mov edi, 0	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400cec8	      0xe800000000	                          call 0x400cecd	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400cecd	            0x85c0	                           test eax, eax	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400cecf	     0xf84f3030000	                            je 0x400d2c8	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400ced5	          0x4889de	                            mov rsi, rbx	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400ced8	      0xbf00000000	                              mov edi, 0	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400cedd	            0x31ed	                            xor ebp, ebp	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400cedf	      0xe800000000	                          call 0x400cee4	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400cee4	            0x85c0	                           test eax, eax	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400cee6	    0x41bd02000000	                             mov r13d, 2	      4078	sequencer.c	FUNCTION_100	IF_3
0x400ceec	            0x743a	                            je 0x400cf28	      4077	sequencer.c	FUNCTION_100	IF_3	CALL_4
0x400ceee	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400cef3	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400cef8	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400cefa	      0xe800000000	                          call 0x400ceff	        54	gettext.h	FUNCTION_164
0x400ceff	          0x4889de	                            mov rsi, rbx	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400cf02	          0x4889c7	                            mov rdi, rax	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400cf05	            0x31c0	                            xor eax, eax	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400cf07	      0xe800000000	                          call 0x400cf0c	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400cf0c	      0xbd01000000	                              mov ebp, 1	      4079	sequencer.c	FUNCTION_100	CALL_6
0x400cf11	          0x4531ed	                          xor r13d, r13d	      4081	sequencer.c	FUNCTION_100
0x400cf14	            0xeb12	                           jmp 0x400cf28	      4081	sequencer.c	FUNCTION_100
0x400cf16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4081	sequencer.c	FUNCTION_100
0x400cf20	      0xbd01000000	                              mov ebp, 1	      4072	sequencer.c	FUNCTION_100	IF_1	CALL_1
0x400cf25	          0x4531ed	                          xor r13d, r13d	      4074	sequencer.c	FUNCTION_100	IF_1
0x400cf28	    0x488b1d000000	            mov rbx, qword [0x0400cf2f] 	        52	sequencer.c	CALL_8
0x400cf2f	            0x31c0	                            xor eax, eax	      4094	sequencer.c	FUNCTION_101
0x400cf31	      0xb90b000000	                            mov ecx, 0xb	      4094	sequencer.c	FUNCTION_101
0x400cf36	          0x4c89e7	                            mov rdi, r12	      4094	sequencer.c	FUNCTION_101
0x400cf39	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4093	sequencer.c	FUNCTION_101
0x400cf42	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4093	sequencer.c	FUNCTION_101
0x400cf4b	          0xf348ab	              rep stosq qword [rdi], rax	      4094	sequencer.c	FUNCTION_101
0x400cf4e	          0x4885db	                           test rbx, rbx	        52	sequencer.c	CALL_8
0x400cf51	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4093	sequencer.c	FUNCTION_101
0x400cf5a	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4094	sequencer.c	FUNCTION_101
0x400cf63	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4095	sequencer.c	FUNCTION_101
0x400cf6c	    0x48c744243800	               mov qword [rsp + 0x38], 0	      4095	sequencer.c	FUNCTION_101
0x400cf75	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4095	sequencer.c	FUNCTION_101
0x400cf7e	     0xf8454030000	                            je 0x400d2d8	        52	sequencer.c	CALL_8
0x400cf84	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cf87	      0xe800000000	                          call 0x400cf8c	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cf8c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cf91	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cf94	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cf97	      0xe800000000	                          call 0x400cf9c	       279	strbuf.h	FUNCTION_111	CALL_2
0x400cf9c	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      4099	sequencer.c	FUNCTION_101	IF_1	CALL_4
0x400cfa1	            0x31f6	                            xor esi, esi	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400cfa3	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400cfa5	          0x4c89f7	                            mov rdi, r14	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400cfa8	      0xe800000000	                          call 0x400cfad	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400cfad	            0x85c0	                           test eax, eax	      1958	sequencer.c	FUNCTION_59	IF_1
0x400cfaf	            0x89c3	                            mov ebx, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400cfb1	     0xf883a030000	                            js 0x400d2f1	      1958	sequencer.c	FUNCTION_59	IF_1
0x400cfb7	            0x31d2	                            xor edx, edx	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400cfb9	            0x89c6	                            mov esi, eax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400cfbb	          0x4c89e7	                            mov rdi, r12	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400cfbe	      0xe800000000	                          call 0x400cfc3	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400cfc3	            0x89df	                            mov edi, ebx	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400cfc5	          0x4989c7	                            mov r15, rax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400cfc8	      0xe800000000	                          call 0x400cfcd	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400cfcd	          0x4d85ff	                           test r15, r15	      1962	sequencer.c	FUNCTION_59	IF_2
0x400cfd0	     0xf8880030000	                            js 0x400d356	      1962	sequencer.c	FUNCTION_59	IF_2
0x400cfd6	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4103	sequencer.c	FUNCTION_101
0x400cfdb	          0x4c89e6	                            mov rsi, r12	      4103	sequencer.c	FUNCTION_101
0x400cfde	      0xe85d33ffff	              call sym.parse_insn_buffer	      4103	sequencer.c	FUNCTION_101
0x400cfe3	            0x85c0	                           test eax, eax	      4106	sequencer.c	FUNCTION_101	IF_2
0x400cfe5	            0x89c3	                            mov ebx, eax	      4103	sequencer.c	FUNCTION_101
0x400cfe7	     0xf8553020000	                           jne 0x400d240	      4106	sequencer.c	FUNCTION_101	IF_2
0x400cfed	          0x4084ed	                           test bpl, bpl	      4106	sequencer.c	FUNCTION_101	IF_2
0x400cff0	     0xf854a020000	                           jne 0x400d240	      4106	sequencer.c	FUNCTION_101	IF_2
0x400cff6	        0x8b542470	            mov edx, dword [rsp + 0x70] 	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400cffa	            0x85d2	                           test edx, edx	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400cffc	            0x7e3b	                           jle 0x400d039	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400cffe	          0x83ea01	                              sub edx, 1	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d001	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d006	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d00a	        0x48c1e204	                              shl rdx, 4	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d00e	        0x488d4108	                      lea rax, [rcx + 8]	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d012	      0x488d4c1138	            lea rcx, [rcx + rdx + 0x38] 	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d017	    0x660f1f840000	                    nop word [rax + rax]	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d020	          0x488b10	                    mov rdx, qword [rax]	      4111	sequencer.c	FUNCTION_101	FOR_1
0x400d023	          0x4885d2	                           test rdx, rdx	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400d026	            0x7408	                            je 0x400d030	      4112	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400d028	    0x48c742180100	               mov qword [rdx + 0x18], 1	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400d030	        0x4883c030	                           add rax, 0x30	      4113	sequencer.c	FUNCTION_101	FOR_1	IF_3
0x400d034	          0x4839c1	                            cmp rcx, rax	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d037	            0x75e7	                           jne 0x400d020	      4110	sequencer.c	FUNCTION_101	FOR_1
0x400d039	          0x4c89e7	                            mov rdi, r12	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d03c	      0xe800000000	                          call 0x400d041	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d041	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x400d046	      0xe800000000	                          call 0x400d04b	      1792	sequencer.c	FUNCTION_51
0x400d04b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_111	CALL_2
0x400d050	      0xba07000000	                              mov edx, 7	       279	strbuf.h	FUNCTION_111	CALL_2
0x400d055	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400d05a	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1792	sequencer.c	FUNCTION_51
0x400d063	    0xc74424740000	               mov dword [rsp + 0x74], 0	      1793	sequencer.c	FUNCTION_51
0x400d06b	    0xc74424700000	               mov dword [rsp + 0x70], 0	      1793	sequencer.c	FUNCTION_51
0x400d073	      0xe800000000	                          call 0x400d078	       279	strbuf.h	FUNCTION_111	CALL_2
0x400d078	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      4118	sequencer.c	FUNCTION_101	IF_4	CALL_8
0x400d07d	            0x31f6	                            xor esi, esi	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d07f	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d081	          0x4889ef	                            mov rdi, rbp	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d084	      0xe800000000	                          call 0x400d089	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d089	            0x85c0	                           test eax, eax	      1958	sequencer.c	FUNCTION_59	IF_1
0x400d08b	            0x89c3	                            mov ebx, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400d08d	     0xf88a3020000	                            js 0x400d336	      1958	sequencer.c	FUNCTION_59	IF_1
0x400d093	            0x31d2	                            xor edx, edx	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d095	            0x89c6	                            mov esi, eax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d097	          0x4c89e7	                            mov rdi, r12	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d09a	      0xe800000000	                          call 0x400d09f	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d09f	            0x89df	                            mov edi, ebx	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400d0a1	          0x4989c6	                            mov r14, rax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400d0a4	      0xe800000000	                          call 0x400d0a9	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400d0a9	          0x4d85f6	                           test r14, r14	      1962	sequencer.c	FUNCTION_59	IF_2
0x400d0ac	     0xf88c4020000	                            js 0x400d376	      1962	sequencer.c	FUNCTION_59	IF_2
0x400d0b2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400d0b7	          0x4531f6	                          xor r14d, r14d	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d0ba	      0xe800000000	                          call 0x400d0bf	      4122	sequencer.c	FUNCTION_101	CALL_9
0x400d0bf	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d0c4	          0x4c89e6	                            mov rsi, r12	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d0c7	      0xe87432ffff	              call sym.parse_insn_buffer	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d0cc	        0x8b542470	            mov edx, dword [rsp + 0x70] 	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0d0	            0x85c0	                           test eax, eax	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d0d2	        0x410f95c6	                              setne r14b	      4123	sequencer.c	FUNCTION_101	CALL_10
0x400d0d6	          0x83ea01	                              sub edx, 1	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0d9	            0x784a	                            js 0x400d125	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0db	          0x4863c2	                         movsxd rax, edx	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0de	            0x89d2	                            mov edx, edx	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0e0	        0x488d1c40	                  lea rbx, [rax + rax*2]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0e4	          0x4829d0	                            sub rax, rdx	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0e7	        0x4c8d0c40	                   lea r9, [rax + rax*2]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0eb	        0x48c1e304	                              shl rbx, 4	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0ef	        0x49c1e104	                               shl r9, 4	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0f3	        0x4d8d79d0	                    lea r15, [r9 - 0x30]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d0f7	    0x660f1f840000	                    nop word [rax + rax]	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d100	          0x4889d8	                            mov rax, rbx	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d103	      0x4803442468	             add rax, qword [rsp + 0x68]	      4127	sequencer.c	FUNCTION_101	FOR_2
0x400d108	        0x488b6808	                mov rbp, qword [rax + 8]	      4128	sequencer.c	FUNCTION_101	FOR_2
0x400d10c	          0x4885ed	                           test rbp, rbp	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d10f	            0x740b	                            je 0x400d11c	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d111	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d116	     0xf8434010000	                            je 0x400d250	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d11c	        0x4883eb30	                           sub rbx, 0x30	      4129	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d120	          0x4939df	                            cmp r15, rbx	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d123	            0x75db	                           jne 0x400d100	      4126	sequencer.c	FUNCTION_101	FOR_2
0x400d125	    0x48837c243800	               cmp qword [rsp + 0x38], 0	      4138	sequencer.c	FUNCTION_101	IF_6
0x400d12b	     0xf846f010000	                            je 0x400d2a0	      4138	sequencer.c	FUNCTION_101	IF_6
0x400d131	            0x31db	                            xor ebx, ebx	      4141	sequencer.c	FUNCTION_101	IF_7
0x400d133	      0xb801000000	                              mov eax, 1	      4141	sequencer.c	FUNCTION_101	IF_7
0x400d138	        0x4183fd02	                             cmp r13d, 2	      4141	sequencer.c	FUNCTION_101	IF_7
0x400d13c	           0xf94c3	                                 sete bl	      4141	sequencer.c	FUNCTION_101	IF_7
0x400d13f	        0x440f44f0	                         cmove r14d, eax	      4141	sequencer.c	FUNCTION_101	IF_7
0x400d143	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d148	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d14d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d14f	      0xe800000000	                          call 0x400d154	        54	gettext.h	FUNCTION_164
0x400d154	    0x488b3d000000	            mov rdi, qword [0x0400d15b] 	        97	stdio2.h	CALL_279
0x400d15b	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_279
0x400d15e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400d163	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400d165	      0xe800000000	                          call 0x400d16a	        97	stdio2.h	CALL_279
0x400d16a	    0x488b35000000	            mov rsi, qword [0x0400d171] 	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400d171	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400d176	      0xe800000000	                          call 0x400d17b	      4149	sequencer.c	FUNCTION_101	CALL_14
0x400d17b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4150	sequencer.c	FUNCTION_101	CALL_15
0x400d180	      0xe800000000	                          call 0x400d185	      4150	sequencer.c	FUNCTION_101	CALL_15
0x400d185	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d18a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d18f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d191	      0xe800000000	                          call 0x400d196	        54	gettext.h	FUNCTION_164
0x400d196	    0x488b3d000000	            mov rdi, qword [0x0400d19d] 	        97	stdio2.h	CALL_279
0x400d19d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_279
0x400d1a0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400d1a5	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400d1a7	      0xe800000000	                          call 0x400d1ac	        97	stdio2.h	CALL_279
0x400d1ac	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400d1b1	      0xe800000000	                          call 0x400d1b6	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400d1b6	          0x4c89e7	                            mov rdi, r12	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d1b9	      0xe800000000	                          call 0x400d1be	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d1be	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x400d1c3	      0xe800000000	                          call 0x400d1c8	      1792	sequencer.c	FUNCTION_51
0x400d1c8	            0x85db	                           test ebx, ebx	      4162	sequencer.c	FUNCTION_101	IF_8
0x400d1ca	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1792	sequencer.c	FUNCTION_51
0x400d1d3	    0xc74424740000	               mov dword [rsp + 0x74], 0	      1793	sequencer.c	FUNCTION_51
0x400d1db	    0xc74424700000	               mov dword [rsp + 0x70], 0	      1793	sequencer.c	FUNCTION_51
0x400d1e3	            0x7427	                            je 0x400d20c	      4162	sequencer.c	FUNCTION_101	IF_8
0x400d1e5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d1ea	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d1ef	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d1f1	      0xe800000000	                          call 0x400d1f6	        54	gettext.h	FUNCTION_164
0x400d1f6	    0x488b3d000000	            mov rdi, qword [0x0400d1fd] 	        97	stdio2.h	CALL_279
0x400d1fd	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_279
0x400d200	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_279
0x400d205	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_279
0x400d207	      0xe800000000	                          call 0x400d20c	        97	stdio2.h	CALL_279
0x400d20c	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      4170	sequencer.c	FUNCTION_101
0x400d214	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4170	sequencer.c	FUNCTION_101
0x400d21d	          0x4489f0	                           mov eax, r14d	      4170	sequencer.c	FUNCTION_101
0x400d220	     0xf8573010000	                           jne 0x400d399	      4170	sequencer.c	FUNCTION_101
0x400d226	    0x4881c4b80000	                           add rsp, 0xb8	      4170	sequencer.c	FUNCTION_101
0x400d22d	              0x5b	                                 pop rbx	      4170	sequencer.c	FUNCTION_101
0x400d22e	              0x5d	                                 pop rbp	      4170	sequencer.c	FUNCTION_101
0x400d22f	            0x415c	                                 pop r12	      4170	sequencer.c	FUNCTION_101
0x400d231	            0x415d	                                 pop r13	      4170	sequencer.c	FUNCTION_101
0x400d233	            0x415e	                                 pop r14	      4170	sequencer.c	FUNCTION_101
0x400d235	            0x415f	                                 pop r15	      4170	sequencer.c	FUNCTION_101
0x400d237	              0xc3	                                     ret	      4170	sequencer.c	FUNCTION_101
0x400d238	     0xf1f84000000	                   nop dword [rax + rax]	      4170	sequencer.c	FUNCTION_101
0x400d240	          0x4189de	                           mov r14d, ebx	      4103	sequencer.c	FUNCTION_101
0x400d243	      0xe964ffffff	                           jmp 0x400d1ac	      4103	sequencer.c	FUNCTION_101
0x400d248	     0xf1f84000000	                   nop dword [rax + rax]	      4103	sequencer.c	FUNCTION_101
0x400d250	        0x4c8b4018	              mov r8, qword [rax + 0x18]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d254	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d257	        0x488d7d04	                      lea rdi, [rbp + 4]	       312	sequencer.c	FUNCTION_10	CALL_1
0x400d25b	    0x8b3500000000	            mov esi, dword [0x0400d261] 	       312	sequencer.c	FUNCTION_10	CALL_1
0x400d261	      0x4c89442408	                 mov qword [rsp + 8], r8	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d266	        0x894c2404	                mov dword [rsp + 4], ecx	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d26a	      0xe800000000	                          call 0x400d26f	       312	sequencer.c	FUNCTION_10	CALL_1
0x400d26f	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d274	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d278	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d27d	          0x4889c2	                            mov rdx, rax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d280	      0xbe00000000	                              mov esi, 0	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d285	            0x31c0	                            xor eax, eax	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d287	      0xe800000000	                          call 0x400d28c	      4130	sequencer.c	FUNCTION_101	FOR_2	IF_5	CALL_11
0x400d28c	    0x48c745180100	               mov qword [rbp + 0x18], 1	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d294	      0xe983feffff	                           jmp 0x400d11c	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d299	     0xf1f80000000	                         nop dword [rax]	      4133	sequencer.c	FUNCTION_101	FOR_2	IF_5
0x400d2a0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400d2a5	      0xe800000000	                          call 0x400d2aa	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400d2aa	          0x4c89e7	                            mov rdi, r12	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d2ad	      0xe800000000	                          call 0x400d2b2	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d2b2	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x400d2b7	      0xe800000000	                          call 0x400d2bc	      1792	sequencer.c	FUNCTION_51
0x400d2bc	      0xe94bffffff	                           jmp 0x400d20c	      1792	sequencer.c	FUNCTION_51
0x400d2c1	     0xf1f80000000	                         nop dword [rax]	      1792	sequencer.c	FUNCTION_51
0x400d2c8	            0x31ed	                            xor ebp, ebp	      4075	sequencer.c	FUNCTION_100	IF_2	CALL_3
0x400d2ca	    0x41bd01000000	                             mov r13d, 1	      4076	sequencer.c	FUNCTION_100	IF_2
0x400d2d0	      0xe953fcffff	                           jmp 0x400cf28	      4076	sequencer.c	FUNCTION_100	IF_2
0x400d2d5	           0xf1f00	                         nop dword [rax]	      4076	sequencer.c	FUNCTION_100	IF_2
0x400d2d8	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400d2dd	      0xe800000000	                          call 0x400d2e2	        52	sequencer.c	CALL_8
0x400d2e2	          0x4889c3	                            mov rbx, rax	        52	sequencer.c	CALL_8
0x400d2e5	    0x488905000000	            mov qword [0x0400d2ec], rax 	        52	sequencer.c	CALL_8
0x400d2ec	      0xe993fcffff	                           jmp 0x400cf84	        52	sequencer.c	CALL_8
0x400d2f1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d2f6	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d2f8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d2fd	      0xe800000000	                          call 0x400d302	        54	gettext.h	FUNCTION_164
0x400d302	          0x4c89f6	                            mov rsi, r14	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d305	          0x4889c7	                            mov rdi, rax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d308	            0x31c0	                            xor eax, eax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d30a	      0xe800000000	                          call 0x400d30f	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d30f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400d314	    0x41beffffffff	                    mov r14d, 0xffffffff	      1792	sequencer.c	FUNCTION_51
0x400d31a	      0xe800000000	                          call 0x400d31f	      4159	sequencer.c	FUNCTION_101	CALL_17
0x400d31f	          0x4c89e7	                            mov rdi, r12	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d322	      0xe800000000	                          call 0x400d327	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400d327	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1792	sequencer.c	FUNCTION_51
0x400d32c	      0xe800000000	                          call 0x400d331	      1792	sequencer.c	FUNCTION_51
0x400d331	      0xe9d6feffff	                           jmp 0x400d20c	      1792	sequencer.c	FUNCTION_51
0x400d336	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d338	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d33d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d342	      0xe800000000	                          call 0x400d347	        54	gettext.h	FUNCTION_164
0x400d347	          0x4889ee	                            mov rsi, rbp	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d34a	          0x4889c7	                            mov rdi, rax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d34d	            0x31c0	                            xor eax, eax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d34f	      0xe800000000	                          call 0x400d354	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d354	            0xebb9	                           jmp 0x400d30f	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400d356	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d358	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d35d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d362	      0xe800000000	                          call 0x400d367	        54	gettext.h	FUNCTION_164
0x400d367	          0x4c89f6	                            mov rsi, r14	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d36a	          0x4889c7	                            mov rdi, rax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d36d	            0x31c0	                            xor eax, eax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d36f	      0xe800000000	                          call 0x400d374	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d374	            0xeb99	                           jmp 0x400d30f	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d376	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400d378	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400d37d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400d382	      0xe800000000	                          call 0x400d387	        54	gettext.h	FUNCTION_164
0x400d387	          0x4889ee	                            mov rsi, rbp	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d38a	          0x4889c7	                            mov rdi, rax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d38d	            0x31c0	                            xor eax, eax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d38f	      0xe800000000	                          call 0x400d394	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d394	      0xe976ffffff	                           jmp 0x400d30f	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400d399	      0xe800000000	                          call 0x400d39e	      4170	sequencer.c	FUNCTION_101
git_sequencer_config	functions,0:SWITCH,0:ELSE,4:WHILE,0:DO,0:IF,8:CALL,7:FOR,0	107
0x4001c70	            0x4155	                                push r13	       148	sequencer.c	FUNCTION_1
0x4001c72	            0x4154	                                push r12	       148	sequencer.c	FUNCTION_1
0x4001c74	          0x4989f5	                            mov r13, rsi	       148	sequencer.c	FUNCTION_1
0x4001c77	              0x55	                                push rbp	       148	sequencer.c	FUNCTION_1
0x4001c78	              0x53	                                push rbx	       148	sequencer.c	FUNCTION_1
0x4001c79	          0x4889fd	                            mov rbp, rdi	       148	sequencer.c	FUNCTION_1
0x4001c7c	      0xb90f000000	                            mov ecx, 0xf	       152	sequencer.c	FUNCTION_1	IF_1
0x4001c81	      0xbf00000000	                              mov edi, 0	       152	sequencer.c	FUNCTION_1	IF_1
0x4001c86	          0x4889ee	                            mov rsi, rbp	       152	sequencer.c	FUNCTION_1	IF_1
0x4001c89	        0x4883ec18	                           sub rsp, 0x18	       148	sequencer.c	FUNCTION_1
0x4001c8d	          0x4989d4	                            mov r12, rdx	       148	sequencer.c	FUNCTION_1
0x4001c90	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	sequencer.c	FUNCTION_1
0x4001c99	      0x4889442408	                mov qword [rsp + 8], rax	       148	sequencer.c	FUNCTION_1
0x4001c9e	            0x31c0	                            xor eax, eax	       148	sequencer.c	FUNCTION_1
0x4001ca0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       152	sequencer.c	FUNCTION_1	IF_1
0x4001ca2	     0xf8490000000	                            je 0x4001d38	       152	sequencer.c	FUNCTION_1	IF_1
0x4001ca8	      0xbf00000000	                              mov edi, 0	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cad	      0xb90f000000	                            mov ecx, 0xf	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cb2	          0x4889ee	                            mov rsi, rbp	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cb5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cb7	           0xf97c3	                                 seta bl	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cba	           0xf92c0	                                 setb al	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cbd	            0x29c3	                            sub ebx, eax	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cbf	           0xfbedb	                           movsx ebx, bl	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cc2	            0x85db	                           test ebx, ebx	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cc4	            0x754a	                           jne 0x4001d10	       174	sequencer.c	FUNCTION_1	IF_7
0x4001cc6	          0x4c89ee	                            mov rsi, r13	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001cc9	          0x4889ef	                            mov rdi, rbp	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001ccc	      0xe800000000	                          call 0x4001cd1	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001cd1	            0x31d2	                            xor edx, edx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001cd3	            0x85c0	                           test eax, eax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001cd5	            0x740d	                            je 0x4001ce4	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001cd7	      0xbf00000000	                              mov edi, 0	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001cdc	      0xe800000000	                          call 0x4001ce1	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001ce1	          0x4889c2	                            mov rdx, rax	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001ce4	      0x4989542430	             mov qword [r12 + 0x30], rdx	       175	sequencer.c	FUNCTION_1	IF_7	CALL_5
0x4001ce9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       184	sequencer.c	FUNCTION_1
0x4001cee	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       184	sequencer.c	FUNCTION_1
0x4001cf7	            0x89d8	                            mov eax, ebx	       184	sequencer.c	FUNCTION_1
0x4001cf9	     0xf85e5000000	                           jne 0x4001de4	       184	sequencer.c	FUNCTION_1
0x4001cff	        0x4883c418	                           add rsp, 0x18	       184	sequencer.c	FUNCTION_1
0x4001d03	              0x5b	                                 pop rbx	       184	sequencer.c	FUNCTION_1
0x4001d04	              0x5d	                                 pop rbp	       184	sequencer.c	FUNCTION_1
0x4001d05	            0x415c	                                 pop r12	       184	sequencer.c	FUNCTION_1
0x4001d07	            0x415d	                                 pop r13	       184	sequencer.c	FUNCTION_1
0x4001d09	              0xc3	                                     ret	       184	sequencer.c	FUNCTION_1
0x4001d0a	    0x660f1f440000	                    nop word [rax + rax]	       184	sequencer.c	FUNCTION_1
0x4001d10	            0x31d2	                            xor edx, edx	       179	sequencer.c	FUNCTION_1	CALL_6
0x4001d12	          0x4c89ee	                            mov rsi, r13	       179	sequencer.c	FUNCTION_1	CALL_6
0x4001d15	          0x4889ef	                            mov rdi, rbp	       179	sequencer.c	FUNCTION_1	CALL_6
0x4001d18	      0xe800000000	                          call 0x4001d1d	       179	sequencer.c	FUNCTION_1	CALL_6
0x4001d1d	            0x85c0	                           test eax, eax	       180	sequencer.c	FUNCTION_1	IF_8
0x4001d1f	            0x89c3	                            mov ebx, eax	       179	sequencer.c	FUNCTION_1	CALL_6
0x4001d21	            0x75c6	                           jne 0x4001ce9	       180	sequencer.c	FUNCTION_1	IF_8
0x4001d23	            0x31d2	                            xor edx, edx	       183	sequencer.c	FUNCTION_1	CALL_7
0x4001d25	          0x4c89ee	                            mov rsi, r13	       183	sequencer.c	FUNCTION_1	CALL_7
0x4001d28	          0x4889ef	                            mov rdi, rbp	       183	sequencer.c	FUNCTION_1	CALL_7
0x4001d2b	      0xe800000000	                          call 0x4001d30	       183	sequencer.c	FUNCTION_1	CALL_7
0x4001d30	            0x89c3	                            mov ebx, eax	       183	sequencer.c	FUNCTION_1	CALL_7
0x4001d32	            0xebb5	                           jmp 0x4001ce9	       183	sequencer.c	FUNCTION_1	CALL_7
0x4001d34	         0xf1f4000	                         nop dword [rax]	       183	sequencer.c	FUNCTION_1	CALL_7
0x4001d38	          0x4c89ea	                            mov rdx, r13	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4001d3b	          0x4889ee	                            mov rsi, rbp	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4001d3e	          0x4889e7	                            mov rdi, rsp	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4001d41	      0xe800000000	                          call 0x4001d46	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4001d46	            0x85c0	                           test eax, eax	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0x4001d48	            0x89c3	                            mov ebx, eax	       155	sequencer.c	FUNCTION_1	IF_1	CALL_1
0x4001d4a	            0x759d	                           jne 0x4001ce9	       156	sequencer.c	FUNCTION_1	IF_1	IF_2
0x4001d4c	        0x488b2c24	                    mov rbp, qword [rsp]	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d50	      0xbf00000000	                              mov edi, 0	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d55	      0xb909000000	                              mov ecx, 9	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d5a	          0x4889ee	                            mov rsi, rbp	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d5d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d5f	            0x750f	                           jne 0x4001d70	       159	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d61	    0x41c744243801	               mov dword [r12 + 0x38], 1	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d6a	      0xe97affffff	                           jmp 0x4001ce9	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d6f	              0x90	                                     nop	       160	sequencer.c	FUNCTION_1	IF_1	IF_3
0x4001d70	      0xbf00000000	                              mov edi, 0	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4001d75	      0xb90b000000	                            mov ecx, 0xb	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4001d7a	          0x4889ee	                            mov rsi, rbp	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4001d7d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4001d7f	            0x741f	                            je 0x4001da0	       161	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4001d81	      0xbf00000000	                              mov edi, 0	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4001d86	      0xb906000000	                              mov ecx, 6	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4001d8b	          0x4889ee	                            mov rsi, rbp	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4001d8e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4001d90	            0x751e	                           jne 0x4001db0	       163	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4001d92	    0x41c744243803	               mov dword [r12 + 0x38], 3	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4001d9b	      0xe949ffffff	                           jmp 0x4001ce9	       164	sequencer.c	FUNCTION_1	IF_1	ELSE_2	IF_5
0x4001da0	    0x41c744243800	               mov dword [r12 + 0x38], 0	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4001da9	      0xe93bffffff	                           jmp 0x4001ce9	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4001dae	            0x6690	                                     nop	       162	sequencer.c	FUNCTION_1	IF_1	ELSE_1	IF_4
0x4001db0	      0xbf00000000	                              mov edi, 0	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4001db5	      0xb909000000	                              mov ecx, 9	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4001dba	          0x4889ee	                            mov rsi, rbp	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4001dbd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4001dbf	            0x74df	                            je 0x4001da0	       165	sequencer.c	FUNCTION_1	IF_1	ELSE_3	IF_6
0x4001dc1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4001dc3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4001dc8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4001dcd	      0xe800000000	                          call 0x4001dd2	        54	gettext.h	FUNCTION_164
0x4001dd2	          0x4889ee	                            mov rsi, rbp	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x4001dd5	          0x4889c7	                            mov rdi, rax	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x4001dd8	            0x31c0	                            xor eax, eax	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x4001dda	      0xe800000000	                          call 0x4001ddf	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x4001ddf	      0xe905ffffff	                           jmp 0x4001ce9	       168	sequencer.c	FUNCTION_1	IF_1	ELSE_4	CALL_3
0x4001de4	      0xe800000000	                          call 0x4001de9	       184	sequencer.c	FUNCTION_1
commit_post_rewrite	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,1:CALL,4:FOR,0	87
0x4003f90	            0x4154	                                push r12	       914	sequencer.c	FUNCTION_32
0x4003f92	              0x55	                                push rbp	       914	sequencer.c	FUNCTION_32
0x4003f93	          0x4889fd	                            mov rbp, rdi	       914	sequencer.c	FUNCTION_32
0x4003f96	              0x53	                                push rbx	       914	sequencer.c	FUNCTION_32
0x4003f97	      0xbf00000000	                              mov edi, 0	       917	sequencer.c	FUNCTION_32	CALL_1
0x4003f9c	          0x4989f4	                            mov r12, rsi	       914	sequencer.c	FUNCTION_32
0x4003f9f	    0x4881eca00000	                           sub rsp, 0xa0	       914	sequencer.c	FUNCTION_32
0x4003fa6	    0x64488b042528	                mov rax, qword fs:[0x28]	       914	sequencer.c	FUNCTION_32
0x4003faf	    0x488984249800	             mov qword [rsp + 0x98], rax	       914	sequencer.c	FUNCTION_32
0x4003fb7	            0x31c0	                            xor eax, eax	       914	sequencer.c	FUNCTION_32
0x4003fb9	      0xe800000000	                          call 0x4003fbe	       917	sequencer.c	FUNCTION_32	CALL_1
0x4003fbe	          0x4885c0	                           test rax, rax	       918	sequencer.c	FUNCTION_32	IF_1
0x4003fc1	     0xf8451010000	                            je 0x4004118	       918	sequencer.c	FUNCTION_32	IF_1
0x4003fc7	        0x4883c504	                              add rbp, 4	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4003fcb	          0x4889c3	                            mov rbx, rax	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4003fce	          0x4889c7	                            mov rdi, rax	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4003fd1	          0x4889ee	                            mov rsi, rbp	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4003fd4	          0x4c89e2	                            mov rdx, r12	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4003fd7	      0xe800000000	                          call 0x4003fdc	       920	sequencer.c	FUNCTION_32	IF_1	CALL_2
0x4003fdc	      0xbe00000000	                              mov esi, 0	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4003fe1	          0x4889df	                            mov rdi, rbx	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4003fe4	      0xe800000000	                          call 0x4003fe9	       921	sequencer.c	FUNCTION_32	IF_1	CALL_3
0x4003fe9	      0x488d5c2420	                   lea rbx, [rsp + 0x20]	       884	sequencer.c	FUNCTION_31
0x4003fee	            0x31c0	                            xor eax, eax	       884	sequencer.c	FUNCTION_31
0x4003ff0	      0xb90c000000	                            mov ecx, 0xc	       884	sequencer.c	FUNCTION_31
0x4003ff5	    0x48c704240000	                      mov qword [rsp], 0	       887	sequencer.c	FUNCTION_31
0x4003ffd	    0x48c744240800	                  mov qword [rsp + 8], 0	       887	sequencer.c	FUNCTION_31
0x4004006	          0x4889df	                            mov rdi, rbx	       884	sequencer.c	FUNCTION_31
0x4004009	    0x48c744241000	               mov qword [rsp + 0x10], 0	       887	sequencer.c	FUNCTION_31
0x4004012	          0xf348ab	              rep stosq qword [rdi], rax	       884	sequencer.c	FUNCTION_31
0x4004015	      0xbf00000000	                              mov edi, 0	       889	sequencer.c	FUNCTION_31	CALL_1
0x400401a	    0x48c744242800	               mov qword [rsp + 0x28], 0	       884	sequencer.c	FUNCTION_31
0x4004023	    0x48c744243800	               mov qword [rsp + 0x38], 0	       884	sequencer.c	FUNCTION_31
0x400402c	      0xe800000000	                          call 0x4004031	       889	sequencer.c	FUNCTION_31	CALL_1
0x4004031	          0x4885c0	                           test rax, rax	       890	sequencer.c	FUNCTION_31	IF_1
0x4004034	    0x488984248000	             mov qword [rsp + 0x80], rax	       889	sequencer.c	FUNCTION_31	CALL_1
0x400403c	            0x743e	                            je 0x400407c	       890	sequencer.c	FUNCTION_31	IF_1
0x400403e	    0x488d84248000	                   lea rax, [rsp + 0x80]	       896	sequencer.c	FUNCTION_31
0x4004046	          0x4889df	                            mov rdi, rbx	       900	sequencer.c	FUNCTION_31	CALL_2
0x4004049	      0x804c246820	              or byte [rsp + 0x68], 0x20	       898	sequencer.c	FUNCTION_31
0x400404e	    0x48c784248800	               mov qword [rsp + 0x88], 0	       893	sequencer.c	FUNCTION_31
0x400405a	    0x48c784249000	               mov qword [rsp + 0x90], 0	       894	sequencer.c	FUNCTION_31
0x4004066	      0x4889442420	             mov qword [rsp + 0x20], rax	       896	sequencer.c	FUNCTION_31
0x400406b	    0xc744244cffff	     mov dword [rsp + 0x4c], 0xffffffff 	       897	sequencer.c	FUNCTION_31
0x4004073	      0xe800000000	                          call 0x4004078	       900	sequencer.c	FUNCTION_31	CALL_2
0x4004078	            0x85c0	                           test eax, eax	       901	sequencer.c	FUNCTION_31	IF_2
0x400407a	            0x7424	                            je 0x40040a0	       901	sequencer.c	FUNCTION_31	IF_2
0x400407c	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	       924	sequencer.c	FUNCTION_32
0x4004084	    0x644833042528	                xor rax, qword fs:[0x28]	       924	sequencer.c	FUNCTION_32
0x400408d	     0xf858e000000	                           jne 0x4004121	       924	sequencer.c	FUNCTION_32
0x4004093	    0x4881c4a00000	                           add rsp, 0xa0	       924	sequencer.c	FUNCTION_32
0x400409a	              0x5b	                                 pop rbx	       924	sequencer.c	FUNCTION_32
0x400409b	              0x5d	                                 pop rbp	       924	sequencer.c	FUNCTION_32
0x400409c	            0x415c	                                 pop r12	       924	sequencer.c	FUNCTION_32
0x400409e	              0xc3	                                     ret	       924	sequencer.c	FUNCTION_32
0x400409f	              0x90	                                     nop	       924	sequencer.c	FUNCTION_32
0x40040a0	          0x4c89e7	                            mov rdi, r12	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040a3	      0xe800000000	                          call 0x40040a8	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040a8	          0x4889ef	                            mov rdi, rbp	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040ab	          0x4989c4	                            mov r12, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040ae	      0xe800000000	                          call 0x40040b3	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040b3	          0x4c89e1	                            mov rcx, r12	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040b6	          0x4889c2	                            mov rdx, rax	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040b9	          0x4889e7	                            mov rdi, rsp	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040bc	            0x31c0	                            xor eax, eax	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040be	      0xbe00000000	                              mov esi, 0	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040c3	      0xe800000000	                          call 0x40040c8	       903	sequencer.c	FUNCTION_31	CALL_5
0x40040c8	      0xbe01000000	                              mov esi, 1	       904	sequencer.c	FUNCTION_31	CALL_6
0x40040cd	      0xbf0d000000	                            mov edi, 0xd	       904	sequencer.c	FUNCTION_31	CALL_6
0x40040d2	      0xe800000000	                          call 0x40040d7	       904	sequencer.c	FUNCTION_31	CALL_6
0x40040d7	      0x488b542408	                mov rdx, qword [rsp + 8]	       905	sequencer.c	FUNCTION_31	CALL_7
0x40040dc	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       905	sequencer.c	FUNCTION_31	CALL_7
0x40040e1	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       905	sequencer.c	FUNCTION_31	CALL_7
0x40040e5	      0xe800000000	                          call 0x40040ea	       905	sequencer.c	FUNCTION_31	CALL_7
0x40040ea	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       906	sequencer.c	FUNCTION_31	CALL_8
0x40040ee	      0xe800000000	                          call 0x40040f3	       906	sequencer.c	FUNCTION_31	CALL_8
0x40040f3	          0x4889e7	                            mov rdi, rsp	       907	sequencer.c	FUNCTION_31	CALL_9
0x40040f6	      0xe800000000	                          call 0x40040fb	       907	sequencer.c	FUNCTION_31	CALL_9
0x40040fb	      0xbf0d000000	                            mov edi, 0xd	       908	sequencer.c	FUNCTION_31	CALL_10
0x4004100	      0xe800000000	                          call 0x4004105	       908	sequencer.c	FUNCTION_31	CALL_10
0x4004105	          0x4889df	                            mov rdi, rbx	       909	sequencer.c	FUNCTION_31	CALL_11
0x4004108	      0xe800000000	                          call 0x400410d	       909	sequencer.c	FUNCTION_31	CALL_11
0x400410d	      0xe96affffff	                           jmp 0x400407c	       924	sequencer.c	FUNCTION_32
0x4004112	    0x660f1f440000	                    nop word [rax + rax]	       924	sequencer.c	FUNCTION_32
0x4004118	        0x4883c504	                              add rbp, 4	       924	sequencer.c	FUNCTION_32
0x400411c	      0xe9c8feffff	                           jmp 0x4003fe9	       924	sequencer.c	FUNCTION_32
0x4004121	      0xe800000000	                          call 0x4004126	       924	sequencer.c	FUNCTION_32
save_todo	functions,0:SWITCH,0:ELSE,0:WHILE,0:DO,0:IF,8:CALL,18:FOR,0	185
0x4002820	            0x4155	                                push r13	      2326	sequencer.c	FUNCTION_72
0x4002822	            0x4154	                                push r12	      2326	sequencer.c	FUNCTION_72
0x4002824	          0x4989f5	                            mov r13, rsi	      2326	sequencer.c	FUNCTION_72
0x4002827	              0x55	                                push rbp	      2326	sequencer.c	FUNCTION_72
0x4002828	              0x53	                                push rbx	      2326	sequencer.c	FUNCTION_72
0x4002829	          0x4889fb	                            mov rbx, rdi	      2326	sequencer.c	FUNCTION_72
0x400282c	        0x4883ec18	                           sub rsp, 0x18	      2326	sequencer.c	FUNCTION_72
0x4002830	    0x64488b042528	                mov rax, qword fs:[0x28]	      2326	sequencer.c	FUNCTION_72
0x4002839	      0x4889442408	                mov qword [rsp + 8], rax	      2326	sequencer.c	FUNCTION_72
0x400283e	            0x31c0	                            xor eax, eax	      2326	sequencer.c	FUNCTION_72
0x4002840	          0x833e02	                      cmp dword [rsi], 2	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4002843	    0x48c704240000	                      mov qword [rsp], 0	      2327	sequencer.c	FUNCTION_72
0x400284b	     0xf842f010000	                            je 0x4002980	       206	sequencer.c	FUNCTION_5	IF_1	CALL_1
0x4002851	    0x488b2d000000	            mov rbp, qword [0x04002858] 	        40	sequencer.c	CALL_3
0x4002858	          0x4885ed	                           test rbp, rbp	        40	sequencer.c	CALL_3
0x400285b	     0xf849f010000	                            je 0x4002a00	        40	sequencer.c	CALL_3
0x4002861	        0x448b6728	           mov r12d, dword [rdi + 0x28] 	      2329	sequencer.c	FUNCTION_72
0x4002865	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_193	CALL_1
0x4002867	            0x31d2	                            xor edx, edx	       175	lockfile.h	FUNCTION_193	CALL_1
0x4002869	          0x4889ee	                            mov rsi, rbp	       175	lockfile.h	FUNCTION_193	CALL_1
0x400286c	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_193	CALL_1
0x400286f	      0xe800000000	                          call 0x4002874	       175	lockfile.h	FUNCTION_193	CALL_1
0x4002874	            0x85c0	                           test eax, eax	      2339	sequencer.c	FUNCTION_72	IF_2
0x4002876	     0xf884c020000	                            js 0x4002ac8	      2339	sequencer.c	FUNCTION_72	IF_2
0x400287c	        0x443b6320	           cmp r12d, dword [rbx + 0x20] 	      1937	sequencer.c	FUNCTION_56
0x4002880	     0xf8cda000000	                            jl 0x4002960	      1937	sequencer.c	FUNCTION_56
0x4002886	        0x488b5308	                mov rdx, qword [rbx + 8]	      1938	sequencer.c	FUNCTION_56
0x400288a	          0x4863f2	                         movsxd rsi, edx	      1937	sequencer.c	FUNCTION_56
0x400288d	          0x4829f2	                            sub rdx, rsi	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4002890	        0x48037310	             add rsi, qword [rbx + 0x10]	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4002894	            0x89c7	                            mov edi, eax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x4002896	      0xe800000000	                          call 0x400289b	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400289b	          0x4885c0	                           test rax, rax	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x400289e	     0xf88fc010000	                            js 0x4002aa0	      2342	sequencer.c	FUNCTION_72	IF_3	CALL_6
0x40028a4	          0x4889e7	                            mov rdi, rsp	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40028a7	      0xe800000000	                          call 0x40028ac	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40028ac	            0x85c0	                           test eax, eax	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40028ae	     0xf8820020000	                            js 0x4002ad4	      2345	sequencer.c	FUNCTION_72	IF_4	CALL_8
0x40028b4	      0x41837d0002	                      cmp dword [r13], 2	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x40028b9	     0xf85e1000000	                           jne 0x40029a0	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x40028bf	          0x4585e4	                         test r12d, r12d	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x40028c2	     0xf8ed8000000	                           jle 0x40029a0	      2348	sequencer.c	FUNCTION_72	IF_5	CALL_10
0x40028c8	    0x488b2d000000	            mov rbp, qword [0x040028cf] 	        58	sequencer.c	CALL_9
0x40028cf	          0x4885ed	                           test rbp, rbp	        58	sequencer.c	CALL_9
0x40028d2	     0xf84a8010000	                            je 0x4002a80	        58	sequencer.c	CALL_9
0x40028d8	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x40028da	      0xbab6010000	                          mov edx, 0x1b6	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x40028df	      0xbe41040000	                          mov esi, 0x441	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x40028e4	          0x4889ef	                            mov rdi, rbp	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x40028e7	      0xe800000000	                          call 0x40028ec	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x40028ec	            0x85c0	                           test eax, eax	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x40028ee	          0x4189c5	                           mov r13d, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x40028f1	     0xf88a9000000	                            js 0x40029a0	      2353	sequencer.c	FUNCTION_72	IF_5	IF_6
0x40028f7	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      1937	sequencer.c	FUNCTION_56
0x40028fa	      0x418d4424ff	                      lea eax, [r12 - 1]	      2356	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_15
0x40028ff	          0x4139cc	                           cmp r12d, ecx	      1937	sequencer.c	FUNCTION_56
0x4002902	     0xf8cc0000000	                            jl 0x40029c8	      1937	sequencer.c	FUNCTION_56
0x4002908	            0x39c8	                            cmp eax, ecx	      1937	sequencer.c	FUNCTION_56
0x400290a	          0x8b5308	                mov edx, dword [rbx + 8]	      1937	sequencer.c	FUNCTION_56
0x400290d	     0xf8dcf000000	                           jge 0x40029e2	      1937	sequencer.c	FUNCTION_56
0x4002913	            0x4898	                                    cdqe	      1938	sequencer.c	FUNCTION_56
0x4002915	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1943	sequencer.c	FUNCTION_57	CALL_1
0x4002919	        0x488d0440	                  lea rax, [rax + rax*2]	      1938	sequencer.c	FUNCTION_56
0x400291d	        0x48c1e004	                              shl rax, 4	      1938	sequencer.c	FUNCTION_56
0x4002921	        0x48034318	             add rax, qword [rbx + 0x18]	      1938	sequencer.c	FUNCTION_56
0x4002925	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x4002929	            0x29ca	                            sub edx, ecx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400292b	          0x4863c1	                         movsxd rax, ecx	      1937	sequencer.c	FUNCTION_56
0x400292e	          0x4863d2	                         movsxd rdx, edx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4002931	          0x4801c6	                            add rsi, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4002934	          0x4489ef	                           mov edi, r13d	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4002937	            0x31db	                            xor ebx, ebx	      2351	sequencer.c	FUNCTION_72	IF_5
0x4002939	      0xe800000000	                          call 0x400293e	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x400293e	          0x4885c0	                           test rax, rax	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4002941	     0xf88e9000000	                            js 0x4002a30	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4002947	          0x4489ef	                           mov edi, r13d	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x400294a	      0xe800000000	                          call 0x400294f	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x400294f	            0x85c0	                           test eax, eax	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x4002951	     0xf88a5010000	                            js 0x4002afc	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x4002957	            0x89d8	                            mov eax, ebx	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x4002959	            0xeb47	                           jmp 0x40029a2	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x400295b	       0xf1f440000	                   nop dword [rax + rax]	      2359	sequencer.c	FUNCTION_72	IF_5	IF_8	CALL_17
0x4002960	          0x4963d4	                        movsxd rdx, r12d	      1938	sequencer.c	FUNCTION_56
0x4002963	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      1938	sequencer.c	FUNCTION_56
0x4002967	        0x48c1e204	                              shl rdx, 4	      1938	sequencer.c	FUNCTION_56
0x400296b	        0x48035318	             add rdx, qword [rbx + 0x18]	      1938	sequencer.c	FUNCTION_56
0x400296f	        0x48637228	         movsxd rsi, dword [rdx + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x4002973	        0x488b5308	                mov rdx, qword [rbx + 8]	      1937	sequencer.c	FUNCTION_56
0x4002977	      0xe911ffffff	                           jmp 0x400288d	      1937	sequencer.c	FUNCTION_56
0x400297c	         0xf1f4000	                         nop dword [rax]	      1937	sequencer.c	FUNCTION_56
0x4002980	    0x488b2d000000	            mov rbp, qword [0x04002987] 	        52	sequencer.c	CALL_8
0x4002987	          0x4885ed	                           test rbp, rbp	        52	sequencer.c	CALL_8
0x400298a	     0xf84d0000000	                            je 0x4002a60	        52	sequencer.c	CALL_8
0x4002990	        0x448b6728	           mov r12d, dword [rdi + 0x28] 	      2329	sequencer.c	FUNCTION_72
0x4002994	        0x4183c401	                             add r12d, 1	      2336	sequencer.c	FUNCTION_72	IF_1
0x4002998	      0xe9c8feffff	                           jmp 0x4002865	      2336	sequencer.c	FUNCTION_72	IF_1
0x400299d	           0xf1f00	                         nop dword [rax]	      2336	sequencer.c	FUNCTION_72	IF_1
0x40029a0	            0x31c0	                            xor eax, eax	      2363	sequencer.c	FUNCTION_72
0x40029a2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2364	sequencer.c	FUNCTION_72
0x40029a7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2364	sequencer.c	FUNCTION_72
0x40029b0	     0xf8552010000	                           jne 0x4002b08	      2364	sequencer.c	FUNCTION_72
0x40029b6	        0x4883c418	                           add rsp, 0x18	      2364	sequencer.c	FUNCTION_72
0x40029ba	              0x5b	                                 pop rbx	      2364	sequencer.c	FUNCTION_72
0x40029bb	              0x5d	                                 pop rbp	      2364	sequencer.c	FUNCTION_72
0x40029bc	            0x415c	                                 pop r12	      2364	sequencer.c	FUNCTION_72
0x40029be	            0x415d	                                 pop r13	      2364	sequencer.c	FUNCTION_72
0x40029c0	              0xc3	                                     ret	      2364	sequencer.c	FUNCTION_72
0x40029c1	     0xf1f80000000	                         nop dword [rax]	      2364	sequencer.c	FUNCTION_72
0x40029c8	          0x4d63e4	                        movsxd r12, r12d	      1938	sequencer.c	FUNCTION_56
0x40029cb	        0x4b8d1464	                  lea rdx, [r12 + r12*2]	      1938	sequencer.c	FUNCTION_56
0x40029cf	        0x48c1e204	                              shl rdx, 4	      1938	sequencer.c	FUNCTION_56
0x40029d3	        0x48035318	             add rdx, qword [rbx + 0x18]	      1938	sequencer.c	FUNCTION_56
0x40029d7	            0x39c8	                            cmp eax, ecx	      1937	sequencer.c	FUNCTION_56
0x40029d9	          0x8b5228	            mov edx, dword [rdx + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x40029dc	     0xf8c31ffffff	                            jl 0x4002913	      1937	sequencer.c	FUNCTION_56
0x40029e2	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1937	sequencer.c	FUNCTION_56
0x40029e6	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1943	sequencer.c	FUNCTION_57	CALL_1
0x40029ea	            0x29ca	                            sub edx, ecx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40029ec	          0x4863c1	                         movsxd rax, ecx	      1937	sequencer.c	FUNCTION_56
0x40029ef	          0x4863d2	                         movsxd rdx, edx	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40029f2	      0xe93affffff	                           jmp 0x4002931	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x40029f7	    0x660f1f840000	                    nop word [rax + rax]	      2355	sequencer.c	FUNCTION_72	IF_5	IF_7	CALL_14
0x4002a00	      0xbf00000000	                              mov edi, 0	        40	sequencer.c	CALL_3
0x4002a05	            0x31c0	                            xor eax, eax	        40	sequencer.c	CALL_3
0x4002a07	      0xe800000000	                          call 0x4002a0c	        40	sequencer.c	CALL_3
0x4002a0c	        0x418b5500	                    mov edx, dword [r13]	        40	sequencer.c	CALL_3
0x4002a10	    0x488905000000	            mov qword [0x04002a17], rax 	        40	sequencer.c	CALL_3
0x4002a17	          0x4889c5	                            mov rbp, rax	        40	sequencer.c	CALL_3
0x4002a1a	          0x83fa02	                              cmp edx, 2	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x4002a1d	        0x448b6328	           mov r12d, dword [rbx + 0x28] 	      2329	sequencer.c	FUNCTION_72
0x4002a21	     0xf853efeffff	                           jne 0x4002865	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x4002a27	      0xe968ffffff	                           jmp 0x4002994	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x4002a2c	         0xf1f4000	                         nop dword [rax]	      2335	sequencer.c	FUNCTION_72	IF_1	CALL_2
0x4002a30	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002a35	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4002a3a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4002a3c	      0xe800000000	                          call 0x4002a41	        54	gettext.h	FUNCTION_164
0x4002a41	          0x4889ee	                            mov rsi, rbp	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4002a44	          0x4889c7	                            mov rdi, rax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4002a47	            0x31c0	                            xor eax, eax	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4002a49	      0xe800000000	                          call 0x4002a4e	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4002a4e	      0xbbffffffff	                     mov ebx, 0xffffffff	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4002a53	      0xe9effeffff	                           jmp 0x4002947	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4002a58	     0xf1f84000000	                   nop dword [rax + rax]	      2358	sequencer.c	FUNCTION_72	IF_5	CALL_16
0x4002a60	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x4002a65	      0xe800000000	                          call 0x4002a6a	        52	sequencer.c	CALL_8
0x4002a6a	        0x418b5500	                    mov edx, dword [r13]	        52	sequencer.c	CALL_8
0x4002a6e	    0x488905000000	            mov qword [0x04002a75], rax 	        52	sequencer.c	CALL_8
0x4002a75	          0x4889c5	                            mov rbp, rax	        52	sequencer.c	CALL_8
0x4002a78	            0xeba0	                           jmp 0x4002a1a	        52	sequencer.c	CALL_8
0x4002a7a	    0x660f1f440000	                    nop word [rax + rax]	        52	sequencer.c	CALL_8
0x4002a80	      0xbf00000000	                              mov edi, 0	        58	sequencer.c	CALL_9
0x4002a85	            0x31c0	                            xor eax, eax	        58	sequencer.c	CALL_9
0x4002a87	      0xe800000000	                          call 0x4002a8c	        58	sequencer.c	CALL_9
0x4002a8c	          0x4889c5	                            mov rbp, rax	        58	sequencer.c	CALL_9
0x4002a8f	    0x488905000000	            mov qword [0x04002a96], rax 	        58	sequencer.c	CALL_9
0x4002a96	      0xe93dfeffff	                           jmp 0x40028d8	        58	sequencer.c	CALL_9
0x4002a9b	       0xf1f440000	                   nop dword [rax + rax]	        58	sequencer.c	CALL_9
0x4002aa0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002aa5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4002aaa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4002aac	      0xe800000000	                          call 0x4002ab1	        54	gettext.h	FUNCTION_164
0x4002ab1	          0x4889c7	                            mov rdi, rax	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4002ab4	          0x4889ee	                            mov rsi, rbp	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4002ab7	            0x31c0	                            xor eax, eax	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4002ab9	      0xe800000000	                          call 0x4002abe	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4002abe	      0xb8ffffffff	                     mov eax, 0xffffffff	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4002ac3	      0xe9dafeffff	                           jmp 0x40029a2	      2344	sequencer.c	FUNCTION_72	CALL_7
0x4002ac8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002acd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4002ad2	            0xebd6	                           jmp 0x4002aaa	        54	gettext.h	FUNCTION_164
0x4002ad4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x4002ad9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x4002ade	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x4002ae0	      0xe800000000	                          call 0x4002ae5	        54	gettext.h	FUNCTION_164
0x4002ae5	          0x4889ee	                            mov rsi, rbp	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002ae8	          0x4889c7	                            mov rdi, rax	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002aeb	            0x31c0	                            xor eax, eax	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002aed	      0xe800000000	                          call 0x4002af2	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002af2	      0xb8ffffffff	                     mov eax, 0xffffffff	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002af7	      0xe9a6feffff	                           jmp 0x40029a2	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002afc	      0xbf00000000	                              mov edi, 0	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002b01	      0xe81ad7ffff	                       call sym._.part.6	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002b06	            0xeba9	                           jmp 0x4002ab1	      2346	sequencer.c	FUNCTION_72	CALL_9
0x4002b08	      0xe800000000	                          call 0x4002b0d	      2364	sequencer.c	FUNCTION_72
sequencer_rollback	functions,0:SWITCH,0:ELSE,1:WHILE,0:DO,0:IF,7:CALL,24:FOR,0	295
0x4004610	            0x4154	                                push r12	      2277	sequencer.c	FUNCTION_71
0x4004612	              0x55	                                push rbp	      2277	sequencer.c	FUNCTION_71
0x4004613	          0x4889fd	                            mov rbp, rdi	      2277	sequencer.c	FUNCTION_71
0x4004616	              0x53	                                push rbx	      2277	sequencer.c	FUNCTION_71
0x4004617	    0x4881ecc00000	                           sub rsp, 0xc0	      2277	sequencer.c	FUNCTION_71
0x400461e	    0x488b3d000000	            mov rdi, qword [0x04004625] 	        42	sequencer.c	CALL_5
0x4004625	    0x64488b042528	                mov rax, qword fs:[0x28]	      2277	sequencer.c	FUNCTION_71
0x400462e	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      2277	sequencer.c	FUNCTION_71
0x4004636	            0x31c0	                            xor eax, eax	      2277	sequencer.c	FUNCTION_71
0x4004638	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2280	sequencer.c	FUNCTION_71
0x4004641	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2280	sequencer.c	FUNCTION_71
0x400464a	          0x4885ff	                           test rdi, rdi	        42	sequencer.c	CALL_5
0x400464d	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2280	sequencer.c	FUNCTION_71
0x4004656	     0xf84bc020000	                            je 0x4004918	        42	sequencer.c	CALL_5
0x400465c	      0xbe00000000	                              mov esi, 0	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4004661	      0xe800000000	                          call 0x4004666	      2283	sequencer.c	FUNCTION_71	CALL_1
0x4004666	          0x4885c0	                           test rax, rax	      2284	sequencer.c	FUNCTION_71	IF_1
0x4004669	          0x4889c3	                            mov rbx, rax	      2283	sequencer.c	FUNCTION_71	CALL_1
0x400466c	     0xf8426020000	                            je 0x4004898	      2284	sequencer.c	FUNCTION_71	IF_1
0x4004672	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4004677	          0x4889c6	                            mov rsi, rax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x400467a	      0xe800000000	                          call 0x400467f	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x400467f	            0x85c0	                           test eax, eax	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x4004681	          0x4889df	                            mov rdi, rbx	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004684	     0xf85e6020000	                           jne 0x4004970	      2294	sequencer.c	FUNCTION_71	IF_3	CALL_5
0x400468a	      0xe800000000	                          call 0x400468f	      2300	sequencer.c	FUNCTION_71	CALL_12
0x400468f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004694	      0x488d542408	                      lea rdx, [rsp + 8]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x4004699	      0x488d742450	                   lea rsi, [rsp + 0x50]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x400469e	      0xe800000000	                          call 0x40046a3	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40046a3	            0x85c0	                           test eax, eax	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40046a5	     0xf8535020000	                           jne 0x40048e0	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40046ab	      0x488b442408	                mov rax, qword [rsp + 8]	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40046b0	          0x803800	                       cmp byte [rax], 0	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40046b3	     0xf8527020000	                           jne 0x40048e0	      2301	sequencer.c	FUNCTION_71	IF_4	CALL_13
0x40046b9	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       975	cache.h	FUNCTION_173	CALL_1
0x40046be	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x40046c3	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_173	CALL_1
0x40046c8	      0xe800000000	                          call 0x40046cd	       975	cache.h	FUNCTION_173	CALL_1
0x40046cd	            0x85c0	                           test eax, eax	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x40046cf	     0xf84fb020000	                            je 0x40049d0	      2306	sequencer.c	FUNCTION_71	IF_5	CALL_16
0x40046d5	    0x488b35000000	            mov rsi, qword [0x040046dc] 	        43	sequencer.c	CALL_6
0x40046dc	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2229	sequencer.c	FUNCTION_68
0x40046e5	    0x48c744243800	               mov qword [rsp + 0x38], 0	      2229	sequencer.c	FUNCTION_68
0x40046ee	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2229	sequencer.c	FUNCTION_68
0x40046f7	          0x4885f6	                           test rsi, rsi	        43	sequencer.c	CALL_6
0x40046fa	     0xf8438020000	                            je 0x4004938	        43	sequencer.c	CALL_6
0x4004700	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004705	            0x31d2	                            xor edx, edx	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004707	      0xe800000000	                          call 0x400470c	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x400470c	          0x4885c0	                           test rax, rax	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x400470f	     0xf88db000000	                            js 0x40047f0	      2232	sequencer.c	FUNCTION_68	IF_1	CALL_2
0x4004715	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x400471a	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x400471f	      0xe800000000	                          call 0x4004724	      2233	sequencer.c	FUNCTION_68	IF_1	CALL_3
0x4004724	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004729	          0x4889de	                            mov rsi, rbx	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x400472c	      0xe800000000	                          call 0x4004731	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004731	            0x85c0	                           test eax, eax	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x4004733	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4004738	     0xf85da030000	                           jne 0x4004b18	      2234	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_4
0x400473e	      0xe800000000	                          call 0x4004743	      2238	sequencer.c	FUNCTION_68	IF_1	CALL_9
0x4004743	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x400474b	      0xbf00000000	                              mov edi, 0	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004750	      0xe800000000	                          call 0x4004755	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004755	            0x85c0	                           test eax, eax	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004757	            0x7423	                            je 0x400477c	      2245	sequencer.c	FUNCTION_68	IF_4	CALL_14
0x4004759	    0x48c784249000	               mov qword [rsp + 0x90], 0	        90	string3.h	FUNCTION_236	CALL_5
0x4004765	    0x48c784249800	               mov qword [rsp + 0x98], 0	        90	string3.h	FUNCTION_236	CALL_5
0x4004771	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	        90	string3.h	FUNCTION_236	CALL_5
0x400477c	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       975	cache.h	FUNCTION_173	CALL_1
0x4004784	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x4004789	          0x4889de	                            mov rsi, rbx	       975	cache.h	FUNCTION_173	CALL_1
0x400478c	      0xe800000000	                          call 0x4004791	       975	cache.h	FUNCTION_173	CALL_1
0x4004791	            0x85c0	                           test eax, eax	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x4004793	     0xf848f000000	                            je 0x4004828	      2311	sequencer.c	FUNCTION_71	IF_6	CALL_18
0x4004799	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400479b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40047a0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40047a5	      0xe800000000	                          call 0x40047aa	        54	gettext.h	FUNCTION_164
0x40047aa	          0x4889c7	                            mov rdi, rax	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x40047ad	            0x31c0	                            xor eax, eax	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x40047af	      0xe800000000	                          call 0x40047b4	      2313	sequencer.c	FUNCTION_71	IF_6	CALL_20
0x40047b4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2318	sequencer.c	FUNCTION_71	CALL_22
0x40047b9	      0xe800000000	                          call 0x40047be	      2318	sequencer.c	FUNCTION_71	CALL_22
0x40047be	          0x4889ef	                            mov rdi, rbp	      2319	sequencer.c	FUNCTION_71	CALL_23
0x40047c1	      0xe800000000	                          call 0x40047c6	      2319	sequencer.c	FUNCTION_71	CALL_23
0x40047c6	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      2323	sequencer.c	FUNCTION_71
0x40047ce	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2323	sequencer.c	FUNCTION_71
0x40047d7	     0xf852f030000	                           jne 0x4004b0c	      2323	sequencer.c	FUNCTION_71
0x40047dd	    0x4881c4c00000	                           add rsp, 0xc0	      2323	sequencer.c	FUNCTION_71
0x40047e4	              0x5b	                                 pop rbx	      2323	sequencer.c	FUNCTION_71
0x40047e5	              0x5d	                                 pop rbp	      2323	sequencer.c	FUNCTION_71
0x40047e6	            0x415c	                                 pop r12	      2323	sequencer.c	FUNCTION_71
0x40047e8	              0xc3	                                     ret	      2323	sequencer.c	FUNCTION_71
0x40047e9	     0xf1f80000000	                         nop dword [rax]	      2323	sequencer.c	FUNCTION_71
0x40047f0	      0xe800000000	                          call 0x40047f5	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x40047f5	          0x833802	                      cmp dword [rax], 2	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x40047f8	     0xf8547030000	                           jne 0x4004b45	      2240	sequencer.c	FUNCTION_68	ELSE_1	IF_3
0x40047fe	    0x48c744247000	               mov qword [rsp + 0x70], 0	        90	string3.h	FUNCTION_236	CALL_5
0x4004807	    0x48c744247800	               mov qword [rsp + 0x78], 0	        90	string3.h	FUNCTION_236	CALL_5
0x4004810	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	        90	string3.h	FUNCTION_236	CALL_5
0x4004815	    0xc78424800000	               mov dword [rsp + 0x80], 0	        90	string3.h	FUNCTION_236	CALL_5
0x4004820	      0xe91effffff	                           jmp 0x4004743	        90	string3.h	FUNCTION_236	CALL_5
0x4004825	           0xf1f00	                         nop dword [rax]	        90	string3.h	FUNCTION_236	CALL_5
0x4004828	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2257	sequencer.c	FUNCTION_69	CALL_1
0x400482d	    0x48c784249000	               mov qword [rsp + 0x90], 0	      2255	sequencer.c	FUNCTION_69
0x4004839	    0x48c784249800	               mov qword [rsp + 0x98], 0	      2256	sequencer.c	FUNCTION_69
0x4004845	      0xe800000000	                          call 0x400484a	      2257	sequencer.c	FUNCTION_69	CALL_1
0x400484a	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4004852	      0xbe02000000	                              mov esi, 2	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4004857	    0x48898424a000	             mov qword [rsp + 0xa0], rax	      2257	sequencer.c	FUNCTION_69	CALL_1
0x400485f	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      2258	sequencer.c	FUNCTION_69
0x400486b	      0xe800000000	                          call 0x4004870	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4004870	            0x85c0	                           test eax, eax	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004872	     0xf843cffffff	                            je 0x40047b4	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004878	     0xf1f84000000	                   nop dword [rax + rax]	      2316	sequencer.c	FUNCTION_71	ELSE_1	IF_7	CALL_21
0x4004880	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2321	sequencer.c	FUNCTION_71	CALL_24
0x4004885	      0xe800000000	                          call 0x400488a	      2321	sequencer.c	FUNCTION_71	CALL_24
0x400488a	      0xb8ffffffff	                     mov eax, 0xffffffff	      2322	sequencer.c	FUNCTION_71
0x400488f	      0xe932ffffff	                           jmp 0x40047c6	      2322	sequencer.c	FUNCTION_71
0x4004894	         0xf1f4000	                         nop dword [rax]	      2322	sequencer.c	FUNCTION_71
0x4004898	      0xe800000000	                          call 0x400489d	      2284	sequencer.c	FUNCTION_71	IF_1
0x400489d	          0x833802	                      cmp dword [rax], 2	      2284	sequencer.c	FUNCTION_71	IF_1
0x40048a0	     0xf846a010000	                            je 0x4004a10	      2284	sequencer.c	FUNCTION_71	IF_1
0x40048a6	    0x488b1d000000	            mov rbx, qword [0x040048ad] 	        42	sequencer.c	CALL_5
0x40048ad	          0x4885db	                           test rbx, rbx	        42	sequencer.c	CALL_5
0x40048b0	     0xf849d000000	                            je 0x4004953	        42	sequencer.c	CALL_5
0x40048b6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40048bb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40048c0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40048c2	      0xe800000000	                          call 0x40048c7	        54	gettext.h	FUNCTION_164
0x40048c7	          0x4889de	                            mov rsi, rbx	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40048ca	          0x4889c7	                            mov rdi, rax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40048cd	            0x31c0	                            xor eax, eax	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40048cf	      0xe800000000	                          call 0x40048d4	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40048d4	      0xb8ffffffff	                     mov eax, 0xffffffff	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40048d9	      0xe9e8feffff	                           jmp 0x40047c6	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40048de	            0x6690	                                     nop	      2293	sequencer.c	FUNCTION_71	CALL_4
0x40048e0	    0x488b1d000000	            mov rbx, qword [0x040048e7] 	        42	sequencer.c	CALL_5
0x40048e7	          0x4885db	                           test rbx, rbx	        42	sequencer.c	CALL_5
0x40048ea	     0xf84ca010000	                            je 0x4004aba	        42	sequencer.c	CALL_5
0x40048f0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40048f2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40048f7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40048fc	      0xe800000000	                          call 0x4004901	        54	gettext.h	FUNCTION_164
0x4004901	          0x4889de	                            mov rsi, rbx	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004904	          0x4889c7	                            mov rdi, rax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004907	            0x31c0	                            xor eax, eax	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004909	      0xe800000000	                          call 0x400490e	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x400490e	      0xe96dffffff	                           jmp 0x4004880	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004913	       0xf1f440000	                   nop dword [rax + rax]	      2302	sequencer.c	FUNCTION_71	IF_4	CALL_14
0x4004918	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x400491d	      0xe800000000	                          call 0x4004922	        42	sequencer.c	CALL_5
0x4004922	          0x4889c7	                            mov rdi, rax	        42	sequencer.c	CALL_5
0x4004925	    0x488905000000	            mov qword [0x0400492c], rax 	        42	sequencer.c	CALL_5
0x400492c	      0xe92bfdffff	                           jmp 0x400465c	        42	sequencer.c	CALL_5
0x4004931	     0xf1f80000000	                         nop dword [rax]	        42	sequencer.c	CALL_5
0x4004938	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x400493d	            0x31c0	                            xor eax, eax	        43	sequencer.c	CALL_6
0x400493f	      0xe800000000	                          call 0x4004944	        43	sequencer.c	CALL_6
0x4004944	          0x4889c6	                            mov rsi, rax	        43	sequencer.c	CALL_6
0x4004947	    0x488905000000	            mov qword [0x0400494e], rax 	        43	sequencer.c	CALL_6
0x400494e	      0xe9adfdffff	                           jmp 0x4004700	        43	sequencer.c	CALL_6
0x4004953	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004958	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x400495a	      0xe800000000	                          call 0x400495f	        42	sequencer.c	CALL_5
0x400495f	          0x4889c3	                            mov rbx, rax	        42	sequencer.c	CALL_5
0x4004962	    0x488905000000	            mov qword [0x04004969], rax 	        42	sequencer.c	CALL_5
0x4004969	      0xe948ffffff	                           jmp 0x40048b6	        42	sequencer.c	CALL_5
0x400496e	            0x6690	                                     nop	        42	sequencer.c	CALL_5
0x4004970	      0xe800000000	                          call 0x4004975	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004975	            0x85c0	                           test eax, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004977	            0x7477	                            je 0x40049f0	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004979	      0xe800000000	                          call 0x400497e	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x400497e	            0x8b38	                    mov edi, dword [rax]	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004980	      0xe800000000	                          call 0x4004985	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004985	          0x4989c4	                            mov r12, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x4004988	    0x488b2d000000	            mov rbp, qword [0x0400498f] 	        42	sequencer.c	CALL_5
0x400498f	          0x4885ed	                           test rbp, rbp	        42	sequencer.c	CALL_5
0x4004992	     0xf843d010000	                            je 0x4004ad5	        42	sequencer.c	CALL_5
0x4004998	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400499a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400499f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40049a4	      0xe800000000	                          call 0x40049a9	        54	gettext.h	FUNCTION_164
0x40049a9	          0x4c89e2	                            mov rdx, r12	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x40049ac	          0x4889c7	                            mov rdi, rax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x40049af	          0x4889ee	                            mov rsi, rbp	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x40049b2	            0x31c0	                            xor eax, eax	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x40049b4	      0xe800000000	                          call 0x40049b9	      2295	sequencer.c	FUNCTION_71	IF_3	CALL_7
0x40049b9	          0x4889df	                            mov rdi, rbx	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x40049bc	      0xe800000000	                          call 0x40049c1	      2297	sequencer.c	FUNCTION_71	IF_3	CALL_11
0x40049c1	      0xe9bafeffff	                           jmp 0x4004880	      2298	sequencer.c	FUNCTION_71	IF_3
0x40049c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2298	sequencer.c	FUNCTION_71	IF_3
0x40049d0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40049d2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40049d7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40049dc	      0xe800000000	                          call 0x40049e1	        54	gettext.h	FUNCTION_164
0x40049e1	          0x4889c7	                            mov rdi, rax	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x40049e4	            0x31c0	                            xor eax, eax	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x40049e6	      0xe800000000	                          call 0x40049eb	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x40049eb	      0xe990feffff	                           jmp 0x4004880	      2307	sequencer.c	FUNCTION_71	IF_5	CALL_17
0x40049f0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40049f5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40049fa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40049fc	      0xe800000000	                          call 0x4004a01	        54	gettext.h	FUNCTION_164
0x4004a01	          0x4989c4	                            mov r12, rax	        54	gettext.h	FUNCTION_164
0x4004a04	            0xeb82	                           jmp 0x4004988	        54	gettext.h	FUNCTION_164
0x4004a06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        54	gettext.h	FUNCTION_164
0x4004a10	      0xe800000000	                          call 0x4004a15	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004a15	          0x4889c7	                            mov rdi, rax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004a18	      0xe800000000	                          call 0x4004a1d	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004a1d	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004a1f	            0x7515	                           jne 0x4004a36	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004a21	      0xe800000000	                          call 0x4004a26	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4004a26	          0x4889c7	                            mov rdi, rax	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4004a29	      0xe800000000	                          call 0x4004a2e	      2267	sequencer.c	FUNCTION_70	IF_1	CALL_4
0x4004a2e	            0x85c0	                           test eax, eax	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004a30	     0xf8437010000	                            je 0x4004b6d	      2266	sequencer.c	FUNCTION_70	IF_1	CALL_2
0x4004a36	      0x488d542470	                   lea rdx, [rsp + 0x70]	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004a3b	            0x31c9	                            xor ecx, ecx	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004a3d	            0x31f6	                            xor esi, esi	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004a3f	      0xbf00000000	                              mov edi, 0	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004a44	      0xe800000000	                          call 0x4004a49	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004a49	            0x85c0	                           test eax, eax	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004a4b	     0xf85c0000000	                           jne 0x4004b11	      2269	sequencer.c	FUNCTION_70	IF_2	CALL_6
0x4004a51	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       975	cache.h	FUNCTION_173	CALL_1
0x4004a56	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_173	CALL_1
0x4004a5b	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_173	CALL_1
0x4004a60	      0xe800000000	                          call 0x4004a65	       975	cache.h	FUNCTION_173	CALL_1
0x4004a65	            0x85c0	                           test eax, eax	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4004a67	     0xf8483000000	                            je 0x4004af0	      2271	sequencer.c	FUNCTION_70	IF_3	CALL_8
0x4004a6d	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      2257	sequencer.c	FUNCTION_69	CALL_1
0x4004a72	    0x48c784249000	               mov qword [rsp + 0x90], 0	      2255	sequencer.c	FUNCTION_69
0x4004a7e	    0x48c784249800	               mov qword [rsp + 0x98], 0	      2256	sequencer.c	FUNCTION_69
0x4004a8a	      0xe800000000	                          call 0x4004a8f	      2257	sequencer.c	FUNCTION_69	CALL_1
0x4004a8f	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4004a97	      0xbe02000000	                              mov esi, 2	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4004a9c	    0x48898424a000	             mov qword [rsp + 0xa0], rax	      2257	sequencer.c	FUNCTION_69	CALL_1
0x4004aa4	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      2258	sequencer.c	FUNCTION_69
0x4004ab0	      0xe800000000	                          call 0x4004ab5	      2259	sequencer.c	FUNCTION_69	CALL_2
0x4004ab5	      0xe90cfdffff	                           jmp 0x40047c6	      2290	sequencer.c	FUNCTION_71	IF_1	CALL_2
0x4004aba	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004abf	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x4004ac1	      0xe800000000	                          call 0x4004ac6	        42	sequencer.c	CALL_5
0x4004ac6	          0x4889c3	                            mov rbx, rax	        42	sequencer.c	CALL_5
0x4004ac9	    0x488905000000	            mov qword [0x04004ad0], rax 	        42	sequencer.c	CALL_5
0x4004ad0	      0xe91bfeffff	                           jmp 0x40048f0	        42	sequencer.c	CALL_5
0x4004ad5	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004ada	            0x31c0	                            xor eax, eax	        42	sequencer.c	CALL_5
0x4004adc	      0xe800000000	                          call 0x4004ae1	        42	sequencer.c	CALL_5
0x4004ae1	          0x4889c5	                            mov rbp, rax	        42	sequencer.c	CALL_5
0x4004ae4	    0x488905000000	            mov qword [0x04004aeb], rax 	        42	sequencer.c	CALL_5
0x4004aeb	      0xe9a8feffff	                           jmp 0x4004998	        42	sequencer.c	CALL_5
0x4004af0	      0xbf00000000	                              mov edi, 0	        42	sequencer.c	CALL_5
0x4004af5	      0xe826b7ffff	                       call sym._.part.6	        42	sequencer.c	CALL_5
0x4004afa	          0x4889c7	                            mov rdi, rax	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004afd	            0x31c0	                            xor eax, eax	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004aff	      0xe800000000	                          call 0x4004b04	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004b04	          0x83c8ff	                      or eax, 0xffffffff	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004b07	      0xe9bafcffff	                           jmp 0x40047c6	      2272	sequencer.c	FUNCTION_70	CALL_9
0x4004b0c	      0xe800000000	                          call 0x4004b11	      2323	sequencer.c	FUNCTION_71
0x4004b11	      0xbf00000000	                              mov edi, 0	      2323	sequencer.c	FUNCTION_71
0x4004b16	            0xebdd	                           jmp 0x4004af5	      2323	sequencer.c	FUNCTION_71
0x4004b18	      0xe800000000	                          call 0x4004b1d	      2235	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_5
0x4004b1d	    0x48833d000000	               cmp qword [0x04004b25], 0	        43	sequencer.c	CALL_6
0x4004b25	            0x744d	                            je 0x4004b74	        43	sequencer.c	CALL_6
0x4004b27	    0x488b1d000000	            mov rbx, qword [0x04004b2e] 	        43	sequencer.c	CALL_6
0x4004b2e	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004b33	      0xe8e8b6ffff	                       call sym._.part.6	        43	sequencer.c	CALL_6
0x4004b38	          0x4889c7	                            mov rdi, rax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b3b	            0x31c0	                            xor eax, eax	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b3d	          0x4889de	                            mov rsi, rbx	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b40	      0xe800000000	                          call 0x4004b45	      2236	sequencer.c	FUNCTION_68	IF_1	IF_2	CALL_8
0x4004b45	    0x48833d000000	               cmp qword [0x04004b4d], 0	        43	sequencer.c	CALL_6
0x4004b4d	            0x743a	                            je 0x4004b89	        43	sequencer.c	CALL_6
0x4004b4f	    0x488b1d000000	            mov rbx, qword [0x04004b56] 	        43	sequencer.c	CALL_6
0x4004b56	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004b5b	      0xe8c0b6ffff	                       call sym._.part.6	        43	sequencer.c	CALL_6
0x4004b60	          0x4889c7	                            mov rdi, rax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004b63	            0x31c0	                            xor eax, eax	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004b65	          0x4889de	                            mov rsi, rbx	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004b68	      0xe800000000	                          call 0x4004b6d	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004b6d	      0xbf00000000	                              mov edi, 0	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004b72	            0xeb81	                           jmp 0x4004af5	      2243	sequencer.c	FUNCTION_68	CALL_13
0x4004b74	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004b79	            0x31c0	                            xor eax, eax	        43	sequencer.c	CALL_6
0x4004b7b	      0xe800000000	                          call 0x4004b80	        43	sequencer.c	CALL_6
0x4004b80	    0x488905000000	            mov qword [0x04004b87], rax 	        43	sequencer.c	CALL_6
0x4004b87	            0xeb9e	                           jmp 0x4004b27	        43	sequencer.c	CALL_6
0x4004b89	      0xbf00000000	                              mov edi, 0	        43	sequencer.c	CALL_6
0x4004b8e	            0x31c0	                            xor eax, eax	        43	sequencer.c	CALL_6
0x4004b90	      0xe800000000	                          call 0x4004b95	        43	sequencer.c	CALL_6
0x4004b95	    0x488905000000	            mov qword [0x04004b9c], rax 	        43	sequencer.c	CALL_6
0x4004b9c	            0xebb1	                           jmp 0x4004b4f	        43	sequencer.c	CALL_6
run_git_commit	functions,0:SWITCH,0:ELSE,2:WHILE,0:DO,0:IF,15:CALL,20:FOR,0	288
0x4002c70	            0x4157	                                push r15	       719	sequencer.c	FUNCTION_26
0x4002c72	            0x4156	                                push r14	       719	sequencer.c	FUNCTION_26
0x4002c74	      0xb90c000000	                            mov ecx, 0xc	       720	sequencer.c	FUNCTION_26
0x4002c79	            0x4155	                                push r13	       719	sequencer.c	FUNCTION_26
0x4002c7b	            0x4154	                                push r12	       719	sequencer.c	FUNCTION_26
0x4002c7d	          0x4989f7	                            mov r15, rsi	       719	sequencer.c	FUNCTION_26
0x4002c80	              0x55	                                push rbp	       719	sequencer.c	FUNCTION_26
0x4002c81	              0x53	                                push rbx	       719	sequencer.c	FUNCTION_26
0x4002c82	          0x4189d5	                           mov r13d, edx	       719	sequencer.c	FUNCTION_26
0x4002c85	    0x4881ecc80000	                           sub rsp, 0xc8	       719	sequencer.c	FUNCTION_26
0x4002c8c	      0x488d6c2450	                   lea rbp, [rsp + 0x50]	       720	sequencer.c	FUNCTION_26
0x4002c91	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       719	sequencer.c	FUNCTION_26
0x4002c96	    0x64488b042528	                mov rax, qword fs:[0x28]	       719	sequencer.c	FUNCTION_26
0x4002c9f	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       719	sequencer.c	FUNCTION_26
0x4002ca7	            0x31c0	                            xor eax, eax	       719	sequencer.c	FUNCTION_26
0x4002ca9	          0x4889ef	                            mov rdi, rbp	       720	sequencer.c	FUNCTION_26
0x4002cac	          0xf348ab	              rep stosq qword [rdi], rax	       720	sequencer.c	FUNCTION_26
0x4002caf	            0x89d0	                            mov eax, edx	       720	sequencer.c	FUNCTION_26
0x4002cb1	    0x48c744245800	               mov qword [rsp + 0x58], 0	       720	sequencer.c	FUNCTION_26
0x4002cba	    0x48c744246800	               mov qword [rsp + 0x68], 0	       720	sequencer.c	FUNCTION_26
0x4002cc3	          0x83e002	                              and eax, 2	       720	sequencer.c	FUNCTION_26
0x4002cc6	          0x833e02	                      cmp dword [rsi], 2	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x4002cc9	    0xc68424980000	                mov byte [rsp + 0x98], 8	       723	sequencer.c	FUNCTION_26
0x4002cd1	        0x8944241c	             mov dword [rsp + 0x1c], eax	       723	sequencer.c	FUNCTION_26
0x4002cd5	     0xf841d010000	                            je 0x4002df8	       725	sequencer.c	FUNCTION_26	IF_1	CALL_1
0x4002cdb	        0x488d5d08	                      lea rbx, [rbp + 8]	       739	sequencer.c	FUNCTION_26	CALL_5
0x4002cdf	      0xbe00000000	                              mov esi, 0	       739	sequencer.c	FUNCTION_26	CALL_5
0x4002ce4	          0x4889df	                            mov rdi, rbx	       739	sequencer.c	FUNCTION_26	CALL_5
0x4002ce7	      0xe800000000	                          call 0x4002cec	       739	sequencer.c	FUNCTION_26	CALL_5
0x4002cec	        0x41f6c510	                         test r13b, 0x10	       741	sequencer.c	FUNCTION_26	IF_4
0x4002cf0	     0xf842d030000	                            je 0x4003023	       741	sequencer.c	FUNCTION_26	IF_4
0x4002cf6	        0x41f6c504	                            test r13b, 4	       743	sequencer.c	FUNCTION_26	IF_5
0x4002cfa	     0xf8510030000	                           jne 0x4003010	       743	sequencer.c	FUNCTION_26	IF_5
0x4002d00	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	       745	sequencer.c	FUNCTION_26	IF_6
0x4002d04	          0x4885d2	                           test rdx, rdx	       745	sequencer.c	FUNCTION_26	IF_6
0x4002d07	            0x7410	                            je 0x4002d19	       745	sequencer.c	FUNCTION_26	IF_6
0x4002d09	        0x488d7d08	                      lea rdi, [rbp + 8]	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002d0d	      0xbe00000000	                              mov esi, 0	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002d12	            0x31c0	                            xor eax, eax	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002d14	      0xe800000000	                          call 0x4002d19	       746	sequencer.c	FUNCTION_26	CALL_8
0x4002d19	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       747	sequencer.c	FUNCTION_26	IF_7
0x4002d1e	          0x4885c0	                           test rax, rax	       747	sequencer.c	FUNCTION_26	IF_7
0x4002d21	     0xf8432020000	                            je 0x4002f59	       747	sequencer.c	FUNCTION_26	IF_7
0x4002d27	        0x488d5d08	                      lea rbx, [rbp + 8]	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002d2b	            0x31c9	                            xor ecx, ecx	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002d2d	          0x4889c2	                            mov rdx, rax	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002d30	      0xbe00000000	                              mov esi, 0	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002d35	            0x31c0	                            xor eax, eax	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002d37	          0x4889df	                            mov rdi, rbx	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002d3a	      0xe800000000	                          call 0x4002d3f	       748	sequencer.c	FUNCTION_26	CALL_9
0x4002d3f	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x4002d43	            0x7543	                           jne 0x4002d88	       751	sequencer.c	FUNCTION_26	IF_9
0x4002d45	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       753	sequencer.c	FUNCTION_26	IF_10
0x4002d49	            0x85c0	                           test eax, eax	       753	sequencer.c	FUNCTION_26	IF_10
0x4002d4b	     0xf8520020000	                           jne 0x4002f71	       753	sequencer.c	FUNCTION_26	IF_10
0x4002d51	        0x458b4710	            mov r8d, dword [r15 + 0x10] 	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d55	          0x4585c0	                           test r8d, r8d	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d58	            0x7549	                           jne 0x4002da3	       755	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d5a	        0x418b7f08	                mov edi, dword [r15 + 8]	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d5e	            0x85ff	                           test edi, edi	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d60	            0x7541	                           jne 0x4002da3	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d62	      0x488d742428	                   lea rsi, [rsp + 0x28]	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x4002d67	      0xbf00000000	                              mov edi, 0	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x4002d6c	      0xe800000000	                          call 0x4002d71	       757	sequencer.c	FUNCTION_26	ELSE_2	IF_11	CALL_13
0x4002d71	            0x85c0	                           test eax, eax	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d73	            0x742e	                            je 0x4002da3	       756	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d75	        0x488d7d08	                      lea rdi, [rbp + 8]	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d79	      0xbe00000000	                              mov esi, 0	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d7e	      0xe800000000	                          call 0x4002d83	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d83	            0xeb1e	                           jmp 0x4002da3	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d85	           0xf1f00	                         nop dword [rax]	       758	sequencer.c	FUNCTION_26	ELSE_2	IF_11
0x4002d88	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x4002d8d	          0x4889df	                            mov rdi, rbx	       752	sequencer.c	FUNCTION_26	CALL_11
0x4002d90	      0xe800000000	                          call 0x4002d95	       752	sequencer.c	FUNCTION_26	CALL_11
0x4002d95	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	       753	sequencer.c	FUNCTION_26	IF_10
0x4002d9a	          0x4585c9	                           test r9d, r9d	       753	sequencer.c	FUNCTION_26	IF_10
0x4002d9d	     0xf85ce010000	                           jne 0x4002f71	       753	sequencer.c	FUNCTION_26	IF_10
0x4002da3	        0x4183e501	                             and r13d, 1	       760	sequencer.c	FUNCTION_26	IF_12
0x4002da7	     0xf85dc010000	                           jne 0x4002f89	       760	sequencer.c	FUNCTION_26	IF_12
0x4002dad	        0x418b7720	            mov esi, dword [r15 + 0x20] 	       763	sequencer.c	FUNCTION_26	IF_13
0x4002db1	            0x85f6	                           test esi, esi	       763	sequencer.c	FUNCTION_26	IF_13
0x4002db3	     0xf85ea010000	                           jne 0x4002fa3	       763	sequencer.c	FUNCTION_26	IF_13
0x4002db9	    0x83bc24840000	cmp dword [rsp + 0x84], 0xffffffffffffffff	       766	sequencer.c	FUNCTION_26	IF_14
0x4002dc1	     0xf84f8010000	                            je 0x4002fbf	       766	sequencer.c	FUNCTION_26	IF_14
0x4002dc7	          0x4889ef	                            mov rdi, rbp	       780	sequencer.c	FUNCTION_26	CALL_20
0x4002dca	      0xe800000000	                          call 0x4002dcf	       780	sequencer.c	FUNCTION_26	CALL_20
0x4002dcf	    0x488b9c24b800	            mov rbx, qword [rsp + 0xb8] 	       781	sequencer.c	FUNCTION_26
0x4002dd7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       781	sequencer.c	FUNCTION_26
0x4002de0	     0xf854a030000	                           jne 0x4003130	       781	sequencer.c	FUNCTION_26
0x4002de6	    0x4881c4c80000	                           add rsp, 0xc8	       781	sequencer.c	FUNCTION_26
0x4002ded	              0x5b	                                 pop rbx	       781	sequencer.c	FUNCTION_26
0x4002dee	              0x5d	                                 pop rbp	       781	sequencer.c	FUNCTION_26
0x4002def	            0x415c	                                 pop r12	       781	sequencer.c	FUNCTION_26
0x4002df1	            0x415d	                                 pop r13	       781	sequencer.c	FUNCTION_26
0x4002df3	            0x415e	                                 pop r14	       781	sequencer.c	FUNCTION_26
0x4002df5	            0x415f	                                 pop r15	       781	sequencer.c	FUNCTION_26
0x4002df7	              0xc3	                                     ret	       781	sequencer.c	FUNCTION_26
0x4002df8	            0x85c0	                           test eax, eax	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002dfa	            0x7517	                           jne 0x4002e13	       726	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002dfc	      0xb828000000	                           mov eax, 0x28	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002e01	    0xc78424840000	     mov dword [rsp + 0x84], 0xffffffff 	       728	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002e0c	    0x888424980000	               mov byte [rsp + 0x98], al	       727	sequencer.c	FUNCTION_26	IF_1	IF_2
0x4002e13	    0x488b35000000	            mov rsi, qword [0x04002e1a] 	       101	sequencer.c	CALL_16
0x4002e1a	    0x48c744243000	               mov qword [rsp + 0x30], 0	       648	sequencer.c	FUNCTION_24
0x4002e23	    0x48c744243800	               mov qword [rsp + 0x38], 0	       648	sequencer.c	FUNCTION_24
0x4002e2c	    0x48c744244000	               mov qword [rsp + 0x40], 0	       648	sequencer.c	FUNCTION_24
0x4002e35	          0x4885f6	                           test rsi, rsi	       101	sequencer.c	CALL_16
0x4002e38	     0xf844d020000	                            je 0x400308b	       101	sequencer.c	CALL_16
0x4002e3e	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002e43	      0xba00010000	                          mov edx, 0x100	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002e48	          0x4889df	                            mov rdi, rbx	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002e4b	      0xe800000000	                          call 0x4002e50	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002e50	          0x4885c0	                           test rax, rax	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002e53	     0xf8e4d020000	                           jle 0x40030a6	       652	sequencer.c	FUNCTION_24	IF_1	CALL_2
0x4002e59	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e5e	        0x410fb636	                   movzx esi, byte [r14]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e62	          0x4084f6	                           test sil, sil	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e65	     0xf8470feffff	                            je 0x4002cdb	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e6b	          0x4531e4	                          xor r12d, r12d	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e6e	            0x6690	                                     nop	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e70	          0x4c89f2	                            mov rdx, r14	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e73	      0xb800000000	                              mov eax, 0	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e78	            0xeb17	                           jmp 0x4002e91	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e7a	    0x660f1f440000	                    nop word [rax + rax]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002e80	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4002e84	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4002e88	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4002e8b	     0xf857f000000	                           jne 0x4002f10	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4002e91	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4002e94	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4002e96	            0x75e8	                           jne 0x4002e80	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4002e98	          0x4c89f6	                            mov rsi, r14	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002e9b	      0x482b742440	             sub rsi, qword [rsp + 0x40]	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002ea0	          0x4c29f2	                            sub rdx, r14	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002ea3	    0x41b801000000	                              mov r8d, 1	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002ea9	      0xb900000000	                              mov ecx, 0	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002eae	          0x4889df	                            mov rdi, rbx	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002eb1	      0xe800000000	                          call 0x4002eb6	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002eb6	          0x4c89f0	                            mov rax, r14	       657	sequencer.c	FUNCTION_24	FOR_1	IF_2
0x4002eb9	         0xfb67001	               movzx esi, byte [rax + 1]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002ebd	        0x4c8d7001	                      lea r14, [rax + 1]	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002ec1	          0x4084f6	                           test sil, sil	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002ec4	            0x75aa	                           jne 0x4002e70	       655	sequencer.c	FUNCTION_24	FOR_1
0x4002ec6	          0x4585e4	                         test r12d, r12d	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002ec9	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002ece	     0xf8407feffff	                            je 0x4002cdb	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002ed4	        0x488d4518	                   lea rax, [rbp + 0x18]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002ed8	          0x4531f6	                          xor r14d, r14d	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002edb	      0x4889442408	                mov qword [rsp + 8], rax	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002ee0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002ee5	          0x4889de	                            mov rsi, rbx	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002ee8	        0x4183c601	                             add r14d, 1	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002eec	      0xe800000000	                          call 0x4002ef1	       666	sequencer.c	FUNCTION_24	FOR_2	CALL_6
0x4002ef1	          0x4889df	                            mov rdi, rbx	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002ef4	      0xe800000000	                          call 0x4002ef9	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002ef9	          0x4539e6	                          cmp r14d, r12d	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002efc	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	       667	sequencer.c	FUNCTION_24	FOR_2	CALL_7
0x4002f01	            0x75dd	                           jne 0x4002ee0	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002f03	      0xe9d3fdffff	                           jmp 0x4002cdb	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002f08	     0xf1f84000000	                   nop dword [rax + rax]	       665	sequencer.c	FUNCTION_24	FOR_2
0x4002f10	        0x4080fe27	                           cmp sil, 0x27	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f14	            0x7413	                            je 0x4002f29	       658	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f16	        0x4080fe0a	                            cmp sil, 0xa	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002f1a	          0x4c89f0	                            mov rax, r14	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002f1d	            0x759a	                           jne 0x4002eb9	       660	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002f1f	        0x41c60600	                       mov byte [r14], 0	       661	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002f23	        0x4183c401	                             add r12d, 1	       662	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002f27	            0xeb90	                           jmp 0x4002eb9	       662	sequencer.c	FUNCTION_24	ELSE_2	IF_4
0x4002f29	          0x4c89f6	                            mov rsi, r14	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f2c	      0x482b742440	             sub rsi, qword [rsp + 0x40]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f31	        0x498d46ff	                      lea rax, [r14 - 1]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f35	          0x4531c0	                            xor r8d, r8d	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f38	      0xb900000000	                              mov ecx, 0	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f3d	      0xba01000000	                              mov edx, 1	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f42	          0x4889df	                            mov rdi, rbx	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f45	      0x4889442408	                mov qword [rsp + 8], rax	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f4a	      0xe800000000	                          call 0x4002f4f	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f4f	      0x488b442408	                mov rax, qword [rsp + 8]	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f54	      0xe960ffffff	                           jmp 0x4002eb9	       659	sequencer.c	FUNCTION_24	ELSE_1	IF_3
0x4002f59	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002f5e	          0x4585d2	                         test r10d, r10d	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002f61	     0xf84ee000000	                            je 0x4003055	       749	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4002f67	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x4002f6b	     0xf85ac010000	                           jne 0x400311d	       751	sequencer.c	FUNCTION_26	IF_9
0x4002f71	        0x488d7d08	                      lea rdi, [rbp + 8]	       754	sequencer.c	FUNCTION_26	CALL_12
0x4002f75	      0xbe00000000	                              mov esi, 0	       754	sequencer.c	FUNCTION_26	CALL_12
0x4002f7a	      0xe800000000	                          call 0x4002f7f	       754	sequencer.c	FUNCTION_26	CALL_12
0x4002f7f	        0x4183e501	                             and r13d, 1	       760	sequencer.c	FUNCTION_26	IF_12
0x4002f83	     0xf8424feffff	                            je 0x4002dad	       760	sequencer.c	FUNCTION_26	IF_12
0x4002f89	        0x488d7d08	                      lea rdi, [rbp + 8]	       761	sequencer.c	FUNCTION_26	CALL_15
0x4002f8d	      0xbe00000000	                              mov esi, 0	       761	sequencer.c	FUNCTION_26	CALL_15
0x4002f92	      0xe800000000	                          call 0x4002f97	       761	sequencer.c	FUNCTION_26	CALL_15
0x4002f97	        0x418b7720	            mov esi, dword [r15 + 0x20] 	       763	sequencer.c	FUNCTION_26	IF_13
0x4002f9b	            0x85f6	                           test esi, esi	       763	sequencer.c	FUNCTION_26	IF_13
0x4002f9d	     0xf8416feffff	                            je 0x4002db9	       763	sequencer.c	FUNCTION_26	IF_13
0x4002fa3	        0x488d7d08	                      lea rdi, [rbp + 8]	       764	sequencer.c	FUNCTION_26	CALL_16
0x4002fa7	      0xbe00000000	                              mov esi, 0	       764	sequencer.c	FUNCTION_26	CALL_16
0x4002fac	      0xe800000000	                          call 0x4002fb1	       764	sequencer.c	FUNCTION_26	CALL_16
0x4002fb1	    0x83bc24840000	cmp dword [rsp + 0x84], 0xffffffffffffffff	       766	sequencer.c	FUNCTION_26	IF_14
0x4002fb9	     0xf8508feffff	                           jne 0x4002dc7	       766	sequencer.c	FUNCTION_26	IF_14
0x4002fbf	    0x48c744243000	               mov qword [rsp + 0x30], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x4002fc8	    0x48c744243800	               mov qword [rsp + 0x38], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x4002fd1	      0x488d5c2430	                   lea rbx, [rsp + 0x30]	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002fd6	    0x48c744244000	               mov qword [rsp + 0x40], 0	       768	sequencer.c	FUNCTION_26	IF_14
0x4002fdf	        0x4883ec08	                              sub rsp, 8	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002fe3	            0x31c9	                            xor ecx, ecx	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002fe5	            0x6a00	                                  push 0	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002fe7	            0x31d2	                            xor edx, edx	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002fe9	          0x4531c0	                            xor r8d, r8d	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002fec	            0x31f6	                            xor esi, esi	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002fee	          0x4889ef	                            mov rdi, rbp	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002ff1	          0x4989d9	                             mov r9, rbx	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002ff4	      0xe800000000	                          call 0x4002ff9	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002ff9	            0x85c0	                           test eax, eax	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x4002ffb	            0x89c5	                            mov ebp, eax	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4002ffd	              0x5a	                                 pop rdx	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x4002ffe	              0x59	                                 pop rcx	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x4002fff	            0x7534	                           jne 0x4003035	       774	sequencer.c	FUNCTION_26	IF_14	IF_15
0x4003001	          0x4889df	                            mov rdi, rbx	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4003004	      0xe800000000	                          call 0x4003009	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4003009	            0x89e8	                            mov eax, ebp	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x400300b	      0xe9bffdffff	                           jmp 0x4002dcf	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4003010	        0x488d7d08	                      lea rdi, [rbp + 8]	       744	sequencer.c	FUNCTION_26	CALL_7
0x4003014	      0xbe00000000	                              mov esi, 0	       744	sequencer.c	FUNCTION_26	CALL_7
0x4003019	      0xe800000000	                          call 0x400301e	       744	sequencer.c	FUNCTION_26	CALL_7
0x400301e	      0xe9ddfcffff	                           jmp 0x4002d00	       744	sequencer.c	FUNCTION_26	CALL_7
0x4003023	      0xbe00000000	                              mov esi, 0	       742	sequencer.c	FUNCTION_26	CALL_6
0x4003028	          0x4889df	                            mov rdi, rbx	       742	sequencer.c	FUNCTION_26	CALL_6
0x400302b	      0xe800000000	                          call 0x4003030	       742	sequencer.c	FUNCTION_26	CALL_6
0x4003030	      0xe9c1fcffff	                           jmp 0x4002cf6	       742	sequencer.c	FUNCTION_26	CALL_6
0x4003035	    0x488b35000000	            mov rsi, qword [0x0400303c] 	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x400303c	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x4003041	      0xe800000000	                          call 0x4003046	       775	sequencer.c	FUNCTION_26	IF_14	CALL_18
0x4003046	          0x4889df	                            mov rdi, rbx	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x4003049	      0xe800000000	                          call 0x400304e	       776	sequencer.c	FUNCTION_26	IF_14	CALL_19
0x400304e	            0x89e8	                            mov eax, ebp	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4003050	      0xe97afdffff	                           jmp 0x4002dcf	       769	sequencer.c	FUNCTION_26	IF_14	CALL_17
0x4003055	        0x488d5d08	                      lea rbx, [rbp + 8]	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4003059	            0x31c9	                            xor ecx, ecx	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400305b	            0x31c0	                            xor eax, eax	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400305d	      0xba00000000	                              mov edx, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4003062	      0xbe00000000	                              mov esi, 0	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x4003067	          0x4889df	                            mov rdi, rbx	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400306a	      0xe800000000	                          call 0x400306f	       750	sequencer.c	FUNCTION_26	ELSE_1	IF_8
0x400306f	        0x41f6c508	                            test r13b, 8	       751	sequencer.c	FUNCTION_26	IF_9
0x4003073	     0xf84d8fcffff	                            je 0x4002d51	       751	sequencer.c	FUNCTION_26	IF_9
0x4003079	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x400307e	          0x4889df	                            mov rdi, rbx	       752	sequencer.c	FUNCTION_26	CALL_11
0x4003081	      0xe800000000	                          call 0x4003086	       752	sequencer.c	FUNCTION_26	CALL_11
0x4003086	      0xe918fdffff	                           jmp 0x4002da3	       752	sequencer.c	FUNCTION_26	CALL_11
0x400308b	      0xbf00000000	                              mov edi, 0	       101	sequencer.c	CALL_16
0x4003090	            0x31c0	                            xor eax, eax	       101	sequencer.c	CALL_16
0x4003092	      0xe800000000	                          call 0x4003097	       101	sequencer.c	CALL_16
0x4003097	          0x4889c6	                            mov rsi, rax	       101	sequencer.c	CALL_16
0x400309a	    0x488905000000	            mov qword [0x040030a1], rax 	       101	sequencer.c	CALL_16
0x40030a1	      0xe998fdffff	                           jmp 0x4002e3e	       101	sequencer.c	CALL_16
0x40030a6	    0x488b05000000	            mov rax, qword [0x040030ad] 	       165	strbuf.h	FUNCTION_109	IF_2
0x40030ad	    0x48c705000000	               mov qword [0x040030b8], 0	       164	strbuf.h	FUNCTION_109
0x40030b8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_109	IF_2
0x40030be	            0x744f	                            je 0x400310f	       165	strbuf.h	FUNCTION_109	IF_2
0x40030c0	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_109	IF_2
0x40030c3	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	       250	sequencer.c	FUNCTION_7	IF_1
0x40030c7	          0x4885d2	                           test rdx, rdx	       250	sequencer.c	FUNCTION_7	IF_1
0x40030ca	            0x7411	                            je 0x40030dd	       250	sequencer.c	FUNCTION_7	IF_1
0x40030cc	      0xbe00000000	                              mov esi, 0	       251	sequencer.c	FUNCTION_7	CALL_1
0x40030d1	      0xbf00000000	                              mov edi, 0	       251	sequencer.c	FUNCTION_7	CALL_1
0x40030d6	            0x31c0	                            xor eax, eax	       251	sequencer.c	FUNCTION_7	CALL_1
0x40030d8	      0xe800000000	                          call 0x40030dd	       251	sequencer.c	FUNCTION_7	CALL_1
0x40030dd	    0x488b1d000000	            mov rbx, qword [0x040030e4] 	       252	sequencer.c	FUNCTION_7
0x40030e4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x40030e9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x40030ee	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x40030f0	      0xe800000000	                          call 0x40030f5	        54	gettext.h	FUNCTION_164
0x40030f5	          0x4889da	                            mov rdx, rbx	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40030f8	          0x4889c7	                            mov rdi, rax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40030fb	          0x4889de	                            mov rsi, rbx	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x40030fe	            0x31c0	                            xor eax, eax	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4003100	      0xe800000000	                          call 0x4003105	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x4003105	      0xb8ffffffff	                     mov eax, 0xffffffff	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x400310a	      0xe9c0fcffff	                           jmp 0x4002dcf	       734	sequencer.c	FUNCTION_26	IF_1	IF_3	CALL_4
0x400310f	    0x803d00000000	                cmp byte [0x04003116], 0	       168	strbuf.h	FUNCTION_109	CALL_2
0x4003116	            0x74ab	                            je 0x40030c3	       168	strbuf.h	FUNCTION_109	CALL_2
0x4003118	      0xe800000000	                          call 0x400311d	       168	strbuf.h	FUNCTION_109	CALL_2
0x400311d	        0x488d7d08	                      lea rdi, [rbp + 8]	       752	sequencer.c	FUNCTION_26	CALL_11
0x4003121	      0xbe00000000	                              mov esi, 0	       752	sequencer.c	FUNCTION_26	CALL_11
0x4003126	      0xe800000000	                          call 0x400312b	       752	sequencer.c	FUNCTION_26	CALL_11
0x400312b	      0xe941feffff	                           jmp 0x4002f71	       752	sequencer.c	FUNCTION_26	CALL_11
0x4003130	      0xe800000000	                          call 0x4003135	       781	sequencer.c	FUNCTION_26
write_author_script	functions,0:SWITCH,0:ELSE,8:WHILE,3:DO,0:IF,8:CALL,18:FOR,1	226
0x4001f40	            0x4155	                                push r13	       597	sequencer.c	FUNCTION_23
0x4001f42	            0x4154	                                push r12	       597	sequencer.c	FUNCTION_23
0x4001f44	              0x55	                                push rbp	       597	sequencer.c	FUNCTION_23
0x4001f45	              0x53	                                push rbx	       597	sequencer.c	FUNCTION_23
0x4001f46	          0x4889fd	                            mov rbp, rdi	       597	sequencer.c	FUNCTION_23
0x4001f49	        0x4883ec28	                           sub rsp, 0x28	       597	sequencer.c	FUNCTION_23
0x4001f4d	    0x64488b042528	                mov rax, qword fs:[0x28]	       597	sequencer.c	FUNCTION_23
0x4001f56	      0x4889442418	             mov qword [rsp + 0x18], rax	       597	sequencer.c	FUNCTION_23
0x4001f5b	            0x31c0	                            xor eax, eax	       597	sequencer.c	FUNCTION_23
0x4001f5d	          0x803f00	                       cmp byte [rdi], 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f60	    0x48c704240000	                      mov qword [rsp], 0	       598	sequencer.c	FUNCTION_23
0x4001f68	    0x48c744240800	                  mov qword [rsp + 8], 0	       598	sequencer.c	FUNCTION_23
0x4001f71	    0x48c744241000	               mov qword [rsp + 0x10], 0	       598	sequencer.c	FUNCTION_23
0x4001f7a	     0xf8498010000	                            je 0x4002118	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f80	      0xbe00000000	                              mov esi, 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f85	          0x4889ef	                            mov rdi, rbp	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f88	      0xe800000000	                          call 0x4001f8d	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f8d	            0x85c0	                           test eax, eax	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f8f	     0xf8583010000	                           jne 0x4002118	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f95	          0x4889eb	                            mov rbx, rbp	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f98	      0xb800000000	                              mov eax, 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f9d	            0xeb12	                           jmp 0x4001fb1	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001f9f	              0x90	                                     nop	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4001fa0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4001fa4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4001fa8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4001fab	     0xf8547010000	                           jne 0x40020f8	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4001fb1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4001fb4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4001fb6	            0x75e8	                           jne 0x4001fa0	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4001fb8	      0xba11000000	                           mov edx, 0x11	       279	strbuf.h	FUNCTION_111	CALL_2
0x4001fbd	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4001fc2	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4001fc5	        0x4883c301	                              add rbx, 1	       279	strbuf.h	FUNCTION_111	CALL_2
0x4001fc9	    0x41bd01240000	                        mov r13d, 0x2401	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001fcf	      0xe800000000	                          call 0x4001fd4	       279	strbuf.h	FUNCTION_111	CALL_2
0x4001fd4	      0x440fb663ff	              movzx r12d, byte [rbx - 1]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001fd9	        0x488d6bff	                      lea rbp, [rbx - 1]	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001fdd	        0x4180fc0d	                           cmp r12b, 0xd	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001fe1	            0x7706	                            ja 0x4001fe9	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001fe3	        0x4d0fa3e5	                             bt r13, r12	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001fe7	            0x721f	                            jb 0x4002008	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001fe9	      0xb800000000	                              mov eax, 0	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001fee	            0xeb11	                           jmp 0x4002001	       616	sequencer.c	FUNCTION_23	WHILE_1
0x4001ff0	        0x4883c501	                              add rbp, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4001ff4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4001ff8	          0x3a55ff	                  cmp dl, byte [rbp - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4001ffb	     0xf854f010000	                           jne 0x4002150	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4002001	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4002004	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4002006	            0x75e8	                           jne 0x4001ff0	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4002008	      0xba14000000	                           mov edx, 0x14	       279	strbuf.h	FUNCTION_111	CALL_2
0x400200d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x4002012	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x4002015	        0x4883c501	                              add rbp, 1	       279	strbuf.h	FUNCTION_111	CALL_2
0x4002019	    0x41bd01240000	                        mov r13d, 0x2401	       624	sequencer.c	FUNCTION_23	WHILE_2
0x400201f	      0xe800000000	                          call 0x4002024	       279	strbuf.h	FUNCTION_111	CALL_2
0x4002024	         0xf1f4000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_111	CALL_2
0x4002028	      0x440fb665ff	              movzx r12d, byte [rbp - 1]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x400202d	        0x488d5dff	                      lea rbx, [rbp - 1]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002031	        0x4180fc0d	                           cmp r12b, 0xd	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002035	            0x7706	                            ja 0x400203d	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002037	        0x4d0fa3e5	                             bt r13, r12	       624	sequencer.c	FUNCTION_23	WHILE_2
0x400203b	            0x7223	                            jb 0x4002060	       624	sequencer.c	FUNCTION_23	WHILE_2
0x400203d	      0xb800000000	                              mov eax, 0	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002042	            0xeb15	                           jmp 0x4002059	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002044	         0xf1f4000	                         nop dword [rax]	       624	sequencer.c	FUNCTION_23	WHILE_2
0x4002048	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400204c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4002050	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4002053	     0xf8577010000	                           jne 0x40021d0	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4002059	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400205c	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400205e	            0x75e8	                           jne 0x4002048	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x4002060	      0xba14000000	                           mov edx, 0x14	       279	strbuf.h	FUNCTION_111	CALL_2
0x4002065	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_111	CALL_2
0x400206a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_111	CALL_2
0x400206d	      0xe800000000	                          call 0x4002072	       279	strbuf.h	FUNCTION_111	CALL_2
0x4002072	        0x4883c301	                              add rbx, 1	       279	strbuf.h	FUNCTION_111	CALL_2
0x4002076	    0x41bc01240000	                        mov r12d, 0x2401	       632	sequencer.c	FUNCTION_23	WHILE_3
0x400207c	            0xeb20	                           jmp 0x400209e	       632	sequencer.c	FUNCTION_23	WHILE_3
0x400207e	            0x6690	                                     nop	       632	sequencer.c	FUNCTION_23	WHILE_3
0x4002080	        0x4080fd27	                           cmp bpl, 0x27	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002084	            0x752c	                           jne 0x40020b2	       633	sequencer.c	FUNCTION_23	WHILE_3	IF_8
0x4002086	      0xba27000000	                           mov edx, 0x27	       636	sequencer.c	FUNCTION_23	CALL_15
0x400208b	      0xbe00000000	                              mov esi, 0	       636	sequencer.c	FUNCTION_23	CALL_15
0x4002090	          0x4889e7	                            mov rdi, rsp	       636	sequencer.c	FUNCTION_23	CALL_15
0x4002093	            0x31c0	                            xor eax, eax	       636	sequencer.c	FUNCTION_23	CALL_15
0x4002095	      0xe800000000	                          call 0x400209a	       636	sequencer.c	FUNCTION_23	CALL_15
0x400209a	        0x4883c301	                              add rbx, 1	       636	sequencer.c	FUNCTION_23	CALL_15
0x400209e	         0xfb66bff	               movzx ebp, byte [rbx - 1]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40020a2	        0x4080fd0d	                            cmp bpl, 0xd	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40020a6	            0x77d8	                            ja 0x4002080	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40020a8	        0x490fa3ec	                             bt r12, rbp	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40020ac	     0xf82b4010000	                            jb 0x4002266	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40020b2	        0x488b0424	                    mov rax, qword [rsp]	       632	sequencer.c	FUNCTION_23	WHILE_3
0x40020b6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x40020b9	     0xf855b010000	                           jne 0x400221a	       141	strbuf.h	FUNCTION_108
0x40020bf	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x40020c4	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_110	CALL_2
0x40020c7	      0xe800000000	                          call 0x40020cc	       228	strbuf.h	FUNCTION_110	CALL_2
0x40020cc	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x40020d1	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x40020d5	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_110
0x40020da	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_110
0x40020df	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_110
0x40020e3	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_110
0x40020e8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_110
0x40020ed	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x40020f1	            0xeba7	                           jmp 0x400209a	       230	strbuf.h	FUNCTION_110
0x40020f3	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_110
0x40020f8	      0xbe0a000000	                            mov esi, 0xa	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x40020fd	          0x4889ef	                            mov rdi, rbp	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002100	      0xe800000000	                          call 0x4002105	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002105	          0x4885c0	                           test rax, rax	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002108	            0x740e	                            je 0x4002118	       610	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x400210a	        0x80780100	                   cmp byte [rax + 1], 0	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x400210e	        0x488d6801	                      lea rbp, [rax + 1]	       611	sequencer.c	FUNCTION_23	ELSE_2	IF_3
0x4002112	     0xf8568feffff	                           jne 0x4001f80	       603	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_1
0x4002118	    0x488b3d000000	            mov rdi, qword [0x0400211f] 	       101	sequencer.c	CALL_16
0x400211f	          0x4885ff	                           test rdi, rdi	       101	sequencer.c	CALL_16
0x4002122	     0xf846f010000	                            je 0x4002297	       101	sequencer.c	CALL_16
0x4002128	      0xe800000000	                          call 0x400212d	       606	sequencer.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x400212d	            0x31c0	                            xor eax, eax	       607	sequencer.c	FUNCTION_23	FOR_1	IF_1
0x400212f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       640	sequencer.c	FUNCTION_23
0x4002134	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       640	sequencer.c	FUNCTION_23
0x400213d	     0xf8587010000	                           jne 0x40022ca	       640	sequencer.c	FUNCTION_23
0x4002143	        0x4883c428	                           add rsp, 0x28	       640	sequencer.c	FUNCTION_23
0x4002147	              0x5b	                                 pop rbx	       640	sequencer.c	FUNCTION_23
0x4002148	              0x5d	                                 pop rbp	       640	sequencer.c	FUNCTION_23
0x4002149	            0x415c	                                 pop r12	       640	sequencer.c	FUNCTION_23
0x400214b	            0x415d	                                 pop r13	       640	sequencer.c	FUNCTION_23
0x400214d	              0xc3	                                     ret	       640	sequencer.c	FUNCTION_23
0x400214e	            0x6690	                                     nop	       640	sequencer.c	FUNCTION_23
0x4002150	        0x4180fc27	                          cmp r12b, 0x27	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4002154	            0x745a	                            je 0x40021b0	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x4002156	        0x488b0424	                    mov rax, qword [rsp]	       619	sequencer.c	FUNCTION_23	ELSE_4	IF_5
0x400215a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x400215d	            0x753b	                           jne 0x400219a	       141	strbuf.h	FUNCTION_108
0x400215f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x4002164	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_110	CALL_2
0x4002167	      0xe800000000	                          call 0x400216c	       228	strbuf.h	FUNCTION_110	CALL_2
0x400216c	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x4002171	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x4002175	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_110
0x400217a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_110
0x400217f	        0x44882410	              mov byte [rax + rdx], r12b	       229	strbuf.h	FUNCTION_110
0x4002183	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_110
0x4002188	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_110
0x400218d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x4002191	        0x4883c301	                              add rbx, 1	       230	strbuf.h	FUNCTION_110
0x4002195	      0xe93afeffff	                           jmp 0x4001fd4	       230	strbuf.h	FUNCTION_110
0x400219a	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_108
0x400219f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40021a3	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40021a6	            0x75c9	                           jne 0x4002171	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40021a8	            0xebb5	                           jmp 0x400215f	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40021aa	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x40021b0	      0xba27000000	                           mov edx, 0x27	       622	sequencer.c	FUNCTION_23	CALL_8
0x40021b5	      0xbe00000000	                              mov esi, 0	       622	sequencer.c	FUNCTION_23	CALL_8
0x40021ba	          0x4889e7	                            mov rdi, rsp	       622	sequencer.c	FUNCTION_23	CALL_8
0x40021bd	            0x31c0	                            xor eax, eax	       622	sequencer.c	FUNCTION_23	CALL_8
0x40021bf	      0xe800000000	                          call 0x40021c4	       622	sequencer.c	FUNCTION_23	CALL_8
0x40021c4	            0xebcb	                           jmp 0x4002191	       622	sequencer.c	FUNCTION_23	CALL_8
0x40021c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       622	sequencer.c	FUNCTION_23	CALL_8
0x40021d0	        0x4180fc27	                          cmp r12b, 0x27	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x40021d4	            0x747a	                            je 0x4002250	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x40021d6	        0x488b0424	                    mov rax, qword [rsp]	       627	sequencer.c	FUNCTION_23	ELSE_6	IF_7
0x40021da	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_108
0x40021dd	            0x7559	                           jne 0x4002238	       141	strbuf.h	FUNCTION_108
0x40021df	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_110	CALL_2
0x40021e4	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_110	CALL_2
0x40021e7	      0xe800000000	                          call 0x40021ec	       228	strbuf.h	FUNCTION_110	CALL_2
0x40021ec	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_110	CALL_2
0x40021f1	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_110
0x40021f5	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_110
0x40021fa	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_110
0x40021ff	        0x44882410	              mov byte [rax + rdx], r12b	       229	strbuf.h	FUNCTION_110
0x4002203	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_110
0x4002208	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_110
0x400220d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_110
0x4002211	        0x4883c501	                              add rbp, 1	       230	strbuf.h	FUNCTION_110
0x4002215	      0xe90efeffff	                           jmp 0x4002028	       230	strbuf.h	FUNCTION_110
0x400221a	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_108
0x400221f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002223	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002226	     0xf85a5feffff	                           jne 0x40020d1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x400222c	      0xe98efeffff	                           jmp 0x40020bf	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002231	     0xf1f80000000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002238	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_108
0x400223d	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002241	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002244	            0x75ab	                           jne 0x40021f1	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002246	            0xeb97	                           jmp 0x40021df	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002248	     0xf1f84000000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_110	IF_1	CALL_1
0x4002250	      0xba27000000	                           mov edx, 0x27	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002255	      0xbe00000000	                              mov esi, 0	       630	sequencer.c	FUNCTION_23	CALL_12
0x400225a	          0x4889e7	                            mov rdi, rsp	       630	sequencer.c	FUNCTION_23	CALL_12
0x400225d	            0x31c0	                            xor eax, eax	       630	sequencer.c	FUNCTION_23	CALL_12
0x400225f	      0xe800000000	                          call 0x4002264	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002264	            0xebab	                           jmp 0x4002211	       630	sequencer.c	FUNCTION_23	CALL_12
0x4002266	    0x488b15000000	            mov rdx, qword [0x0400226d] 	       101	sequencer.c	CALL_16
0x400226d	          0x4885d2	                           test rdx, rdx	       101	sequencer.c	CALL_16
0x4002270	            0x7440	                            je 0x40022b2	       101	sequencer.c	CALL_16
0x4002272	      0x488b742408	                mov rsi, qword [rsp + 8]	       637	sequencer.c	FUNCTION_23	CALL_17
0x4002277	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       637	sequencer.c	FUNCTION_23	CALL_17
0x400227c	      0xb901000000	                              mov ecx, 1	       637	sequencer.c	FUNCTION_23	CALL_17
0x4002281	      0xe86afbffff	                  call sym.write_message	       637	sequencer.c	FUNCTION_23	CALL_17
0x4002286	          0x4889e7	                            mov rdi, rsp	       638	sequencer.c	FUNCTION_23	CALL_18
0x4002289	            0x89c3	                            mov ebx, eax	       637	sequencer.c	FUNCTION_23	CALL_17
0x400228b	      0xe800000000	                          call 0x4002290	       638	sequencer.c	FUNCTION_23	CALL_18
0x4002290	            0x89d8	                            mov eax, ebx	       639	sequencer.c	FUNCTION_23
0x4002292	      0xe998feffff	                           jmp 0x400212f	       639	sequencer.c	FUNCTION_23
0x4002297	      0xbf00000000	                              mov edi, 0	       101	sequencer.c	CALL_16
0x400229c	            0x31c0	                            xor eax, eax	       101	sequencer.c	CALL_16
0x400229e	      0xe800000000	                          call 0x40022a3	       101	sequencer.c	CALL_16
0x40022a3	          0x4889c7	                            mov rdi, rax	       101	sequencer.c	CALL_16
0x40022a6	    0x488905000000	            mov qword [0x040022ad], rax 	       101	sequencer.c	CALL_16
0x40022ad	      0xe976feffff	                           jmp 0x4002128	       101	sequencer.c	CALL_16
0x40022b2	      0xbf00000000	                              mov edi, 0	       101	sequencer.c	CALL_16
0x40022b7	            0x31c0	                            xor eax, eax	       101	sequencer.c	CALL_16
0x40022b9	      0xe800000000	                          call 0x40022be	       101	sequencer.c	CALL_16
0x40022be	          0x4889c2	                            mov rdx, rax	       101	sequencer.c	CALL_16
0x40022c1	    0x488905000000	            mov qword [0x040022c8], rax 	       101	sequencer.c	CALL_16
0x40022c8	            0xeba8	                           jmp 0x4002272	       101	sequencer.c	CALL_16
0x40022ca	      0xe800000000	                          call 0x40022cf	       640	sequencer.c	FUNCTION_23
rearrange_squash	functions,0:SWITCH,0:ELSE,4:WHILE,2:DO,0:IF,16:CALL,42:FOR,5	554
0x400da80	            0x4157	                                push r15	      4289	sequencer.c	FUNCTION_105
0x400da82	            0x4156	                                push r14	      4289	sequencer.c	FUNCTION_105
0x400da84	            0x4155	                                push r13	      4289	sequencer.c	FUNCTION_105
0x400da86	            0x4154	                                push r12	      4289	sequencer.c	FUNCTION_105
0x400da88	              0x55	                                push rbp	      4289	sequencer.c	FUNCTION_105
0x400da89	              0x53	                                push rbx	      4289	sequencer.c	FUNCTION_105
0x400da8a	    0x4881ec080100	                          sub rsp, 0x108	      4289	sequencer.c	FUNCTION_105
0x400da91	    0x64488b042528	                mov rax, qword fs:[0x28]	      4289	sequencer.c	FUNCTION_105
0x400da9a	    0x48898424f800	             mov qword [rsp + 0xf8], rax	      4289	sequencer.c	FUNCTION_105
0x400daa2	            0x31c0	                            xor eax, eax	      4289	sequencer.c	FUNCTION_105
0x400daa4	    0x488b05000000	            mov rax, qword [0x0400daab] 	        52	sequencer.c	CALL_8
0x400daab	          0x4885c0	                           test rax, rax	        52	sequencer.c	CALL_8
0x400daae	      0x4889442420	             mov qword [rsp + 0x20], rax	        52	sequencer.c	CALL_8
0x400dab3	     0xf848f070000	                            je 0x400e248	        52	sequencer.c	CALL_8
0x400dab9	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      4291	sequencer.c	FUNCTION_105
0x400dac1	            0x31c0	                            xor eax, eax	      4291	sequencer.c	FUNCTION_105
0x400dac3	      0xb90b000000	                            mov ecx, 0xb	      4291	sequencer.c	FUNCTION_105
0x400dac8	            0x31f6	                            xor esi, esi	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400daca	          0xf348ab	              rep stosq qword [rdi], rax	      4291	sequencer.c	FUNCTION_105
0x400dacd	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400dad2	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      4291	sequencer.c	FUNCTION_105
0x400dade	      0xe800000000	                          call 0x400dae3	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400dae3	            0x85c0	                           test eax, eax	      1958	sequencer.c	FUNCTION_59	IF_1
0x400dae5	            0x89c3	                            mov ebx, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400dae7	     0xf88d8080000	                            js 0x400e3c5	      1958	sequencer.c	FUNCTION_59	IF_1
0x400daed	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400daf5	            0x31d2	                            xor edx, edx	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400daf7	            0x89c6	                            mov esi, eax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400daf9	      0xe800000000	                          call 0x400dafe	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400dafe	            0x89df	                            mov edi, ebx	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400db00	          0x4889c5	                            mov rbp, rax	      1960	sequencer.c	FUNCTION_59	CALL_3
0x400db03	      0xe800000000	                          call 0x400db08	      1961	sequencer.c	FUNCTION_59	CALL_4
0x400db08	          0x4885ed	                           test rbp, rbp	      1962	sequencer.c	FUNCTION_59	IF_2
0x400db0b	     0xf888a080000	                            js 0x400e39b	      1962	sequencer.c	FUNCTION_59	IF_2
0x400db11	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400db19	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400db21	      0xe81a28ffff	              call sym.parse_insn_buffer	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400db26	            0x85c0	                           test eax, eax	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400db28	     0xf8849080000	                            js 0x400e377	      4298	sequencer.c	FUNCTION_105	IF_2	CALL_3
0x400db2e	    0x48638c24c000	         movsxd rcx, dword [rsp + 0xc0] 	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400db36	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400db3b	            0x31d2	                            xor edx, edx	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400db3d	      0xbe00000000	                              mov esi, 0	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400db42	    0x48bbffffffff	         movabs rbx, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400db4c	      0xe800000000	                          call 0x400db51	      4312	sequencer.c	FUNCTION_105	CALL_5
0x400db51	    0x48639424c000	         movsxd rdx, dword [rsp + 0xc0] 	      4314	sequencer.c	FUNCTION_105
0x400db59	          0x4839da	                            cmp rdx, rbx	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400db5c	     0xf8704080000	                            ja 0x400e366	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400db62	    0x488d3c950000	                        lea rdi, [rdx*4]	      4314	sequencer.c	FUNCTION_105
0x400db6a	      0xe800000000	                          call 0x400db6f	      4314	sequencer.c	FUNCTION_105
0x400db6f	    0x48639424c000	         movsxd rdx, dword [rsp + 0xc0] 	      4315	sequencer.c	FUNCTION_105
0x400db77	          0x4989c5	                            mov r13, rax	      4314	sequencer.c	FUNCTION_105
0x400db7a	          0x4839da	                            cmp rdx, rbx	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400db7d	     0xf87e3070000	                            ja 0x400e366	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400db83	    0x488d3c950000	                        lea rdi, [rdx*4]	      4315	sequencer.c	FUNCTION_105
0x400db8b	      0xe800000000	                          call 0x400db90	      4315	sequencer.c	FUNCTION_105
0x400db90	    0x48639424c000	         movsxd rdx, dword [rsp + 0xc0] 	      4316	sequencer.c	FUNCTION_105
0x400db98	        0x48890424	                    mov qword [rsp], rax	      4315	sequencer.c	FUNCTION_105
0x400db9c	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400dba6	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400dba9	     0xf87a6070000	                            ja 0x400e355	       795	git-compat-util.h	FUNCTION_132	IF_1
0x400dbaf	    0x488d3cd50000	                        lea rdi, [rdx*8]	      4316	sequencer.c	FUNCTION_105
0x400dbb7	            0x31db	                            xor ebx, ebx	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dbb9	            0x31ed	                            xor ebp, ebp	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dbbb	      0xe800000000	                          call 0x400dbc0	      4316	sequencer.c	FUNCTION_105
0x400dbc0	    0x8bbc24c00000	            mov edi, dword [rsp + 0xc0] 	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dbc7	      0x4889442408	                mov qword [rsp + 8], rax	      4316	sequencer.c	FUNCTION_105
0x400dbcc	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dbd4	            0x85ff	                           test edi, edi	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dbd6	     0xf8e04060000	                           jle 0x400e1e0	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dbdc	        0x4c8d245b	                  lea r12, [rbx + rbx*2]	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400dbe0	        0x488b0424	                    mov rax, qword [rsp]	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400dbe4	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400dbed	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400dbf6	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400dbff	        0x49c1e402	                              shl r12, 2	      4318	sequencer.c	FUNCTION_105	FOR_1
0x400dc03	          0x4d89e6	                            mov r14, r12	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dc06	    0x4c03b424b800	             add r14, qword [rsp + 0xb8]	      4319	sequencer.c	FUNCTION_105	FOR_1
0x400dc0e	    0xc70418ffffff	      mov dword [rax + rbx], 0xffffffff 	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400dc15	    0x41c7441d00ff	      mov dword [r13 + rbx], 0xffffffff 	      4325	sequencer.c	FUNCTION_105	FOR_1
0x400dc1e	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400dc22	          0x4885ff	                           test rdi, rdi	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400dc25	     0xf8452030000	                            je 0x400df7d	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400dc2b	          0x418b06	                    mov eax, dword [r14]	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400dc2e	          0x83f80b	                            cmp eax, 0xb	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400dc31	     0xf8446030000	                            je 0x400df7d	      4326	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400dc37	          0x83e804	                              sub eax, 4	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400dc3a	          0x83f801	                              cmp eax, 1	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400dc3d	     0xf86a4050000	                           jbe 0x400e1e7	      4331	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_6
0x400dc43	        0x4c897718	             mov qword [rdi + 0x18], r14	      4336	sequencer.c	FUNCTION_105	FOR_1
0x400dc47	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_106	CALL_1
0x400dc49	      0xe800000000	                          call 0x400dc4e	        75	commit.h	FUNCTION_106	CALL_1
0x400dc4e	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400dc52	            0x31f6	                            xor esi, esi	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400dc54	      0xe800000000	                          call 0x400dc59	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400dc59	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400dc5e	          0x4889c7	                            mov rdi, rax	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400dc61	          0x4989c7	                            mov r15, rax	      4339	sequencer.c	FUNCTION_105	FOR_1	CALL_10
0x400dc64	      0xe800000000	                          call 0x400dc69	      4340	sequencer.c	FUNCTION_105	FOR_1	CALL_11
0x400dc69	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400dc6e	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400dc73	      0xba00000000	                              mov edx, 0	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400dc78	      0xe800000000	                          call 0x400dc7d	      4341	sequencer.c	FUNCTION_105	FOR_1	CALL_12
0x400dc7d	      0x488d742438	                   lea rsi, [rsp + 0x38]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400dc82	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400dc87	      0xe800000000	                          call 0x400dc8c	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400dc8c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400dc91	          0x4c89fe	                            mov rsi, r15	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400dc94	        0x4889045f	            mov qword [rdi + rbx*2], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400dc98	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400dc9c	      0x4889442430	             mov qword [rsp + 0x30], rax	      4342	sequencer.c	FUNCTION_105	FOR_1	CALL_13
0x400dca1	      0xe800000000	                          call 0x400dca6	      4343	sequencer.c	FUNCTION_105	FOR_1	CALL_14
0x400dca6	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400dcab	      0xb800000000	                              mov eax, 0	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400dcb0	          0x4989cf	                            mov r15, rcx	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400dcb3	            0xeb15	                           jmp 0x400dcca	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400dcb5	           0xf1f00	                         nop dword [rax]	      4344	sequencer.c	FUNCTION_105	FOR_1	IF_5	CALL_15
0x400dcb8	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dcbc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dcc0	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dcc4	     0xf85c5020000	                           jne 0x400df8f	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dcca	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dccd	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dccf	            0x75e7	                           jne 0x400dcb8	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dcd1	        0x410fb63f	                   movzx edi, byte [r15]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dcd5	           0xf1f00	                         nop dword [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dcd8	        0x400fb6c7	                          movzx eax, dil	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dcdc	    0xf68000000000	                      test byte [rax], 1	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dce3	            0x753c	                           jne 0x400dd21	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dce5	            0x89fe	                            mov esi, edi	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dce7	          0x4c89fa	                            mov rdx, r15	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dcea	      0xb800000000	                              mov eax, 0	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dcef	            0xeb17	                           jmp 0x400dd08	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dcf1	     0xf1f80000000	                         nop dword [rax]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dcf8	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dcfc	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd00	          0x4038f1	                             cmp cl, sil	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd03	            0x752b	                           jne 0x400dd30	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd05	           0xfb632	                   movzx esi, byte [rdx]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd08	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd0b	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd0d	            0x75e9	                           jne 0x400dcf8	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd0f	            0x89f7	                            mov edi, esi	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd11	          0x4989d7	                            mov r15, rdx	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd14	        0x400fb6c7	                          movzx eax, dil	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dd18	    0xf68000000000	                      test byte [rax], 1	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dd1f	            0x74c4	                            je 0x400dce5	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dd21	      0x410fb67f01	               movzx edi, byte [r15 + 1]	      4349	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dd26	        0x4983c701	                              add r15, 1	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dd2a	            0xebac	                           jmp 0x400dcd8	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dd2c	         0xf1f4000	                         nop dword [rax]	      4350	sequencer.c	FUNCTION_105	FOR_1	IF_5	FOR_2	WHILE_1
0x400dd30	          0x4c89f9	                            mov rcx, r15	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd33	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd38	            0xeb16	                           jmp 0x400dd50	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd3a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd40	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd44	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd48	          0x4038fa	                             cmp dl, dil	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd4b	            0x7513	                           jne 0x400dd60	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd4d	           0xfb639	                   movzx edi, byte [rcx]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dd50	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd53	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd55	            0x75e9	                           jne 0x400dd40	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd57	          0x4989cf	                            mov r15, rcx	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd5a	      0xe979ffffff	                           jmp 0x400dcd8	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd5f	              0x90	                                     nop	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dd60	          0x4c89ff	                            mov rdi, r15	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400dd63	      0xe800000000	                          call 0x400dd68	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400dd68	      0x488d742440	                   lea rsi, [rsp + 0x40]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400dd6d	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400dd72	          0x4c89fa	                            mov rdx, r15	       308	hashmap.h	FUNCTION_210	CALL_2
0x400dd75	        0x89442448	             mov dword [rsp + 0x48], eax	       248	hashmap.h	FUNCTION_208
0x400dd79	    0x48c744244000	               mov qword [rsp + 0x40], 0	       249	hashmap.h	FUNCTION_208
0x400dd82	      0xe800000000	                          call 0x400dd87	       308	hashmap.h	FUNCTION_210	CALL_2
0x400dd87	          0x4885c0	                           test rax, rax	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400dd8a	     0xf84d9030000	                            je 0x400e169	      4356	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7	CALL_19
0x400dd90	          0x8b5010	            mov edx, dword [rax + 0x10] 	      4359	sequencer.c	FUNCTION_105	FOR_1	IF_5	IF_7
0x400dd93	            0x85d2	                           test edx, edx	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400dd95	     0xf8825040000	                            js 0x400e1c0	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400dd9b	          0x4863d2	                         movsxd rdx, edx	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400dd9e	        0x48c1e202	                              shl rdx, 2	      4377	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400dda2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400dda7	      0xbe00000000	                              mov esi, 0	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400ddac	    0x4c03a424b800	             add r12, qword [rsp + 0xb8]	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ddb4	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ddb9	      0xe800000000	                          call 0x400ddbe	      4380	sequencer.c	FUNCTION_105	FOR_1	IF_11	CALL_23
0x400ddbe	          0x83f801	                              cmp eax, 1	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ddc1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ddc6	            0x19c0	                            sbb eax, eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ddc8	            0xf7d0	                                 not eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ddca	          0x83c005	                              add eax, 5	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ddcd	        0x41890424	                    mov dword [r12], eax	      4379	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ddd1	      0x498d441500	                    lea rax, [r13 + rdx]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ddd6	            0x8b30	                    mov esi, dword [rax]	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ddd8	            0x85f6	                           test esi, esi	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400ddda	     0xf887e030000	                            js 0x400e15e	      4382	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400dde0	        0x48031424	                    add rdx, qword [rsp]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400dde4	          0x486302	                 movsxd rax, dword [rdx]	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400dde7	      0x41896c8500	            mov dword [r13 + rax*4], ebp	      4385	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400ddec	            0x892a	                    mov dword [rdx], ebp	      4386	sequencer.c	FUNCTION_105	FOR_1	IF_11	ELSE_3
0x400ddee	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4378	sequencer.c	FUNCTION_105	FOR_1	IF_11
0x400ddf6	    0x8b9424c00000	            mov edx, dword [rsp + 0xc0] 	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400ddfd	          0x83c501	                              add ebp, 1	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400de00	        0x4883c304	                              add rbx, 4	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400de04	            0x39ea	                            cmp edx, ebp	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400de06	     0xf8fd0fdffff	                            jg 0x400dbdc	      4317	sequencer.c	FUNCTION_105	FOR_1
0x400de0c	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      4396	sequencer.c	FUNCTION_105	IF_14
0x400de10	            0x85c9	                           test ecx, ecx	      4396	sequencer.c	FUNCTION_105	IF_14
0x400de12	     0xf84c8030000	                            je 0x400e1e0	      4396	sequencer.c	FUNCTION_105	IF_14
0x400de18	            0x85d2	                           test edx, edx	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400de1a	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400de23	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400de2c	    0x48c744246000	               mov qword [rsp + 0x60], 0	      4397	sequencer.c	FUNCTION_105	IF_14
0x400de35	     0xf8e08050000	                           jle 0x400e343	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400de3b	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400de40	          0x4531f6	                          xor r14d, r14d	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400de43	            0x31ed	                            xor ebp, ebp	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400de45	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400de4d	        0x428b3437	              mov esi, dword [rdi + r14]	      4400	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400de51	          0x8d46fc	                      lea eax, [rsi - 4]	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400de54	          0x83f801	                              cmp eax, 1	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400de57	     0xf86fd010000	                           jbe 0x400e05a	      4407	sequencer.c	FUNCTION_105	IF_14	FOR_4	IF_15	CALL_29
0x400de5d	            0x85ed	                           test ebp, ebp	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400de5f	     0xf88f5010000	                            js 0x400e05a	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400de65	            0x89e8	                            mov eax, ebp	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400de67	          0x4c63e5	                         movsxd r12, ebp	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400de6a	            0xeb6c	                           jmp 0x400ded8	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400de6c	        0x4b8d0c64	                  lea rcx, [r12 + r12*2]	      1938	sequencer.c	FUNCTION_56
0x400de70	          0x83c001	                              add eax, 1	      4414	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_31
0x400de73	        0x48c1e104	                              shl rcx, 4	      1938	sequencer.c	FUNCTION_56
0x400de77	      0x48634c0f28	   movsxd rcx, dword [rdi + rcx + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x400de7c	          0x4c01c1	                             add rcx, r8	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400de7f	            0x39d0	                            cmp eax, edx	      1937	sequencer.c	FUNCTION_56
0x400de81	            0x7d73	                           jge 0x400def6	      1937	sequencer.c	FUNCTION_56
0x400de83	            0x4898	                                    cdqe	      1938	sequencer.c	FUNCTION_56
0x400de85	        0x488d0440	                  lea rax, [rax + rax*2]	      1938	sequencer.c	FUNCTION_56
0x400de89	        0x48c1e004	                              shl rax, 4	      1938	sequencer.c	FUNCTION_56
0x400de8d	      0x4863440728	   movsxd rax, dword [rdi + rax + 0x28] 	      1937	sequencer.c	FUNCTION_56
0x400de92	          0x4901c0	                             add r8, rax	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400de95	          0x8d46fc	                      lea eax, [rsi - 4]	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400de98	          0x83f801	                              cmp eax, 1	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400de9b	            0x766c	                           jbe 0x400df09	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400de9d	          0x4c89c2	                             mov rdx, r8	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400dea0	          0x4889ce	                            mov rsi, rcx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400dea3	          0x4889df	                            mov rdi, rbx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400dea6	          0x4829ca	                            sub rdx, rcx	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400dea9	      0xe800000000	                          call 0x400deae	      4424	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_34
0x400deae	      0x438b44a500	            mov eax, dword [r13 + r12*4]	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400deb3	    0x8b9424c00000	            mov edx, dword [rsp + 0xc0] 	      4426	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400deba	            0x85c0	                           test eax, eax	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400debc	     0xf8898010000	                            js 0x400e05a	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400dec2	          0x4c63e0	                         movsxd r12, eax	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400dec5	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400decd	        0x4b8d0c64	                  lea rcx, [r12 + r12*2]	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400ded1	        0x48c1e104	                              shl rcx, 4	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400ded5	          0x8b340f	              mov esi, dword [rdi + rcx]	      4410	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2
0x400ded8	            0x39d0	                            cmp eax, edx	      1937	sequencer.c	FUNCTION_56
0x400deda	    0x4c8b8424b000	              mov r8, qword [rsp + 0xb0]	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400dee2	            0x7c88	                            jl 0x400de6c	      1937	sequencer.c	FUNCTION_56
0x400dee4	    0x48638c24a800	         movsxd rcx, dword [rsp + 0xa8] 	      1937	sequencer.c	FUNCTION_56
0x400deec	          0x83c001	                              add eax, 1	      4414	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	CALL_31
0x400deef	          0x4c01c1	                             add rcx, r8	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400def2	            0x39d0	                            cmp eax, edx	      1937	sequencer.c	FUNCTION_56
0x400def4	            0x7c8d	                            jl 0x400de83	      1937	sequencer.c	FUNCTION_56
0x400def6	    0x48638424a800	         movsxd rax, dword [rsp + 0xa8] 	      1937	sequencer.c	FUNCTION_56
0x400defe	          0x4901c0	                             add r8, rax	      1943	sequencer.c	FUNCTION_57	CALL_1
0x400df01	          0x8d46fc	                      lea eax, [rsi - 4]	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400df04	          0x83f801	                              cmp eax, 1	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400df07	            0x7794	                            ja 0x400de9d	      4418	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_32
0x400df09	            0x89f0	                            mov eax, esi	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400df0b	      0x4c89442428	              mov qword [rsp + 0x28], r8	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400df10	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400df15	        0x48c1e004	                              shl rax, 4	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400df19	    0x488bb0000000	                    mov rsi, qword [rax]	      4419	sequencer.c	FUNCTION_105	IF_14	FOR_4	WHILE_2	IF_16	CALL_33
0x400df20	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_111	CALL_2
0x400df23	      0x4889742410	             mov qword [rsp + 0x10], rsi	       279	strbuf.h	FUNCTION_111	CALL_2
0x400df28	      0xe800000000	                          call 0x400df2d	       279	strbuf.h	FUNCTION_111	CALL_2
0x400df2d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_111	CALL_2
0x400df32	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_111	CALL_2
0x400df35	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_111	CALL_2
0x400df38	      0xe800000000	                          call 0x400df3d	       279	strbuf.h	FUNCTION_111	CALL_2
0x400df3d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       961	string2.h	FUNCTION_222	WHILE_1
0x400df42	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       961	string2.h	FUNCTION_222	WHILE_1
0x400df47	           0xfb601	                   movzx eax, byte [rcx]	       961	string2.h	FUNCTION_222	WHILE_1
0x400df4a	            0xa8df	                           test al, 0xdf	       961	string2.h	FUNCTION_222	WHILE_1
0x400df4c	     0xf844bffffff	                            je 0x400de9d	       961	string2.h	FUNCTION_222	WHILE_1
0x400df52	            0x3c09	                               cmp al, 9	       962	string2.h	FUNCTION_222	WHILE_1
0x400df54	     0xf8443ffffff	                            je 0x400de9d	       962	string2.h	FUNCTION_222	WHILE_1
0x400df5a	        0x488d4101	                      lea rax, [rcx + 1]	       962	string2.h	FUNCTION_222	WHILE_1
0x400df5e	            0xeb0d	                           jmp 0x400df6d	       962	string2.h	FUNCTION_222	WHILE_1
0x400df60	        0x4883c001	                              add rax, 1	       962	string2.h	FUNCTION_222	WHILE_1
0x400df64	          0x80fa09	                               cmp dl, 9	       962	string2.h	FUNCTION_222	WHILE_1
0x400df67	     0xf8430ffffff	                            je 0x400de9d	       962	string2.h	FUNCTION_222	WHILE_1
0x400df6d	           0xfb610	                   movzx edx, byte [rax]	       961	string2.h	FUNCTION_222	WHILE_1
0x400df70	          0x4889c1	                            mov rcx, rax	       961	string2.h	FUNCTION_222	WHILE_1
0x400df73	          0xf6c2df	                           test dl, 0xdf	       961	string2.h	FUNCTION_222	WHILE_1
0x400df76	            0x75e8	                           jne 0x400df60	       961	string2.h	FUNCTION_222	WHILE_1
0x400df78	      0xe920ffffff	                           jmp 0x400de9d	       961	string2.h	FUNCTION_222	WHILE_1
0x400df7d	      0x488b442408	                mov rax, qword [rsp + 8]	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400df82	    0x48c704580000	              mov qword [rax + rbx*2], 0	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400df8a	      0xe967feffff	                           jmp 0x400ddf6	      4327	sequencer.c	FUNCTION_105	FOR_1	IF_3
0x400df8f	          0x4989cf	                            mov r15, rcx	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400df92	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400df97	            0xeb15	                           jmp 0x400dfae	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400df99	     0xf1f80000000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dfa0	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dfa4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dfa8	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dfac	            0x750c	                           jne 0x400dfba	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dfae	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dfb1	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dfb3	            0x75eb	                           jne 0x400dfa0	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dfb5	      0xe917fdffff	                           jmp 0x400dcd1	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x400dfba	          0x4989cc	                            mov r12, rcx	       488	git-compat-util.h	FUNCTION_124	DO_1
0x400dfbd	          0x4c89e7	                            mov rdi, r12	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400dfc0	      0xe800000000	                          call 0x400dfc5	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400dfc5	      0x488d742440	                   lea rsi, [rsp + 0x40]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400dfca	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       308	hashmap.h	FUNCTION_210	CALL_2
0x400dfcf	          0x4c89e2	                            mov rdx, r12	       308	hashmap.h	FUNCTION_210	CALL_2
0x400dfd2	        0x89442448	             mov dword [rsp + 0x48], eax	       248	hashmap.h	FUNCTION_208
0x400dfd6	    0x48c744244000	               mov qword [rsp + 0x40], 0	       249	hashmap.h	FUNCTION_208
0x400dfdf	      0xe800000000	                          call 0x400dfe4	       308	hashmap.h	FUNCTION_210	CALL_2
0x400dfe4	          0x4885c0	                           test rax, rax	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400dfe7	     0xf8509feffff	                           jne 0x400ddf6	      4387	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_24
0x400dfed	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400dff2	        0x4883fae7	             cmp rdx, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400dff6	     0xf8738030000	                            ja 0x400e334	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400dffc	     0xf841a030000	                            je 0x400e31c	       785	git-compat-util.h	FUNCTION_131	IF_1
0x400e002	        0x488d7219	                   lea rsi, [rdx + 0x19]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e006	      0xbf01000000	                              mov edi, 1	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e00b	      0x4889542410	             mov qword [rsp + 0x10], rdx	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e010	      0xe800000000	                          call 0x400e015	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e015	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_233	CALL_3
0x400e01a	        0x488d4814	                   lea rcx, [rax + 0x14]	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e01e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_233	CALL_3
0x400e023	          0x4989c4	                            mov r12, rax	      4389	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e026	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_233	CALL_3
0x400e029	      0xe800000000	                          call 0x400e02e	        53	string3.h	FUNCTION_233	CALL_3
0x400e02e	      0x41896c2410	             mov dword [r12 + 0x10], ebp	      4390	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13
0x400e033	          0x4889c7	                            mov rdi, rax	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_27
0x400e036	      0xe800000000	                          call 0x400e03b	      4391	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_27
0x400e03b	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e040	      0x4189442408	                mov dword [r12 + 8], eax	       248	hashmap.h	FUNCTION_208
0x400e045	    0x49c704240000	                      mov qword [r12], 0	       249	hashmap.h	FUNCTION_208
0x400e04d	          0x4c89e6	                            mov rsi, r12	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e050	      0xe800000000	                          call 0x400e055	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e055	      0xe99cfdffff	                           jmp 0x400ddf6	      4392	sequencer.c	FUNCTION_105	FOR_1	ELSE_3	ELSE_4	IF_13	CALL_28
0x400e05a	          0x83c501	                              add ebp, 1	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e05d	        0x4983c630	                           add r14, 0x30	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e061	            0x39d5	                            cmp ebp, edx	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e063	     0xf8cdcfdffff	                            jl 0x400de45	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e069	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e06e	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e073	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400e078	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400e07a	      0xbe01020000	                          mov esi, 0x201	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400e07f	      0x4889542410	             mov qword [rsp + 0x10], rdx	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400e084	      0xe800000000	                          call 0x400e089	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400e089	            0x85c0	                           test eax, eax	      4176	sequencer.c	FUNCTION_102	IF_1
0x400e08b	            0x89c5	                            mov ebp, eax	        53	fcntl2.h	FUNCTION_203	IF_2	CALL_9
0x400e08d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4176	sequencer.c	FUNCTION_102	IF_1
0x400e092	     0xf8878020000	                            js 0x400e310	      4176	sequencer.c	FUNCTION_102	IF_1
0x400e098	          0x4c89e6	                            mov rsi, r12	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400e09b	            0x89c7	                            mov edi, eax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400e09d	      0xe800000000	                          call 0x400e0a2	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400e0a2	          0x4885c0	                           test rax, rax	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400e0a5	     0xf8834020000	                            js 0x400e2df	      4178	sequencer.c	FUNCTION_102	IF_2	CALL_3
0x400e0ab	            0x89ef	                            mov edi, ebp	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400e0ad	      0xe800000000	                          call 0x400e0b2	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400e0b2	            0x85c0	                           test eax, eax	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400e0b4	     0xf85fb010000	                           jne 0x400e2b5	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400e0ba	            0x31ed	                            xor ebp, ebp	      4174	sequencer.c	FUNCTION_102
0x400e0bc	          0x4889df	                            mov rdi, rbx	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_36
0x400e0bf	      0xe800000000	                          call 0x400e0c4	      4431	sequencer.c	FUNCTION_105	IF_14	CALL_36
0x400e0c4	          0x4c89ef	                            mov rdi, r13	      4434	sequencer.c	FUNCTION_105	CALL_37
0x400e0c7	            0x31db	                            xor ebx, ebx	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e0c9	      0xe800000000	                          call 0x400e0ce	      4434	sequencer.c	FUNCTION_105	CALL_37
0x400e0ce	        0x488b3c24	                    mov rdi, qword [rsp]	      4435	sequencer.c	FUNCTION_105	CALL_38
0x400e0d2	      0xe800000000	                          call 0x400e0d7	      4435	sequencer.c	FUNCTION_105	CALL_38
0x400e0d7	    0x8b8424c00000	            mov eax, dword [rsp + 0xc0] 	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e0de	      0x4c8b642408	                mov r12, qword [rsp + 8]	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e0e3	            0x85c0	                           test eax, eax	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e0e5	            0x7e19	                           jle 0x400e100	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e0e7	        0x498b3c24	                    mov rdi, qword [r12]	      4437	sequencer.c	FUNCTION_105	CALL_39
0x400e0eb	          0x83c301	                              add ebx, 1	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e0ee	        0x4983c408	                              add r12, 8	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e0f2	      0xe800000000	                          call 0x400e0f7	      4437	sequencer.c	FUNCTION_105	CALL_39
0x400e0f7	    0x399c24c00000	            cmp dword [rsp + 0xc0], ebx 	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e0fe	            0x7fe7	                            jg 0x400e0e7	      4436	sequencer.c	FUNCTION_105	FOR_5
0x400e100	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4438	sequencer.c	FUNCTION_105	CALL_40
0x400e105	      0xe800000000	                          call 0x400e10a	      4438	sequencer.c	FUNCTION_105	CALL_40
0x400e10a	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400e10f	      0xbe01000000	                              mov esi, 1	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400e114	      0xe800000000	                          call 0x400e119	      4439	sequencer.c	FUNCTION_105	CALL_41
0x400e119	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400e121	      0xe800000000	                          call 0x400e126	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400e126	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      1792	sequencer.c	FUNCTION_51
0x400e12e	      0xe800000000	                          call 0x400e133	      1792	sequencer.c	FUNCTION_51
0x400e133	            0x89e8	                            mov eax, ebp	      4442	sequencer.c	FUNCTION_105
0x400e135	    0x488b9c24f800	            mov rbx, qword [rsp + 0xf8] 	      4443	sequencer.c	FUNCTION_105
0x400e13d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4443	sequencer.c	FUNCTION_105
0x400e146	     0xf8564010000	                           jne 0x400e2b0	      4443	sequencer.c	FUNCTION_105
0x400e14c	    0x4881c4080100	                          add rsp, 0x108	      4443	sequencer.c	FUNCTION_105
0x400e153	              0x5b	                                 pop rbx	      4443	sequencer.c	FUNCTION_105
0x400e154	              0x5d	                                 pop rbp	      4443	sequencer.c	FUNCTION_105
0x400e155	            0x415c	                                 pop r12	      4443	sequencer.c	FUNCTION_105
0x400e157	            0x415d	                                 pop r13	      4443	sequencer.c	FUNCTION_105
0x400e159	            0x415e	                                 pop r14	      4443	sequencer.c	FUNCTION_105
0x400e15b	            0x415f	                                 pop r15	      4443	sequencer.c	FUNCTION_105
0x400e15d	              0xc3	                                     ret	      4443	sequencer.c	FUNCTION_105
0x400e15e	            0x8928	                    mov dword [rax], ebp	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e160	        0x48031424	                    add rdx, qword [rsp]	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e164	      0xe983fcffff	                           jmp 0x400ddec	      4383	sequencer.c	FUNCTION_105	FOR_1	IF_11	IF_12
0x400e169	      0xbe20000000	                           mov esi, 0x20	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e16e	          0x4c89ff	                            mov rdi, r15	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e171	      0xe800000000	                          call 0x400e176	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e176	          0x4885c0	                           test rax, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e179	     0xf84f9000000	                            je 0x400e278	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e17f	            0x31d2	                            xor edx, edx	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e181	          0x83fd00	                              cmp ebp, 0	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e184	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e189	     0xf8ed4000000	                           jle 0x400e263	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e18f	          0x488b39	                    mov rdi, qword [rcx]	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e192	          0x4885ff	                           test rdi, rdi	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e195	            0x741e	                            je 0x400e1b5	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e197	          0x4c89fe	                            mov rsi, r15	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400e19a	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400e19f	        0x89542410	             mov dword [rsp + 0x10], edx	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400e1a3	      0xe800000000	                          call 0x400e1a8	      4371	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9	CALL_22
0x400e1a8	            0x85c0	                           test eax, eax	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e1aa	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e1ae	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e1b3	            0x7515	                           jne 0x400e1ca	      4370	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3	IF_9
0x400e1b5	          0x83c201	                              add edx, 1	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e1b8	        0x4883c108	                              add rcx, 8	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e1bc	            0x39d5	                            cmp ebp, edx	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e1be	            0x75cf	                           jne 0x400e18f	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e1c0	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e1c5	      0xe9f3fdffff	                           jmp 0x400dfbd	      4369	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	FOR_3
0x400e1ca	            0x39d5	                            cmp ebp, edx	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e1cc	     0xf85c1fbffff	                           jne 0x400dd93	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e1d2	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e1d7	      0xe9e1fdffff	                           jmp 0x400dfbd	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e1dc	         0xf1f4000	                         nop dword [rax]	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e1e0	            0x31ed	                            xor ebp, ebp	      4293	sequencer.c	FUNCTION_105
0x400e1e2	      0xe9ddfeffff	                           jmp 0x400e0c4	      4293	sequencer.c	FUNCTION_105
0x400e1e7	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400e1ef	      0xe800000000	                          call 0x400e1f4	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400e1f4	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      1792	sequencer.c	FUNCTION_51
0x400e1fc	      0xe800000000	                          call 0x400e201	      1792	sequencer.c	FUNCTION_51
0x400e201	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400e206	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400e20b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400e20d	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      1792	sequencer.c	FUNCTION_51
0x400e219	    0xc78424c40000	               mov dword [rsp + 0xc4], 0	      1793	sequencer.c	FUNCTION_51
0x400e224	    0xc78424c00000	               mov dword [rsp + 0xc0], 0	      1793	sequencer.c	FUNCTION_51
0x400e22f	      0xe800000000	                          call 0x400e234	        54	gettext.h	FUNCTION_164
0x400e234	          0x4889c7	                            mov rdi, rax	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400e237	            0x31c0	                            xor eax, eax	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400e239	      0xe800000000	                          call 0x400e23e	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400e23e	      0xb8ffffffff	                     mov eax, 0xffffffff	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400e243	      0xe9edfeffff	                           jmp 0x400e135	      4333	sequencer.c	FUNCTION_105	FOR_1	IF_4	CALL_8
0x400e248	      0xbf00000000	                              mov edi, 0	        52	sequencer.c	CALL_8
0x400e24d	      0xe800000000	                          call 0x400e252	        52	sequencer.c	CALL_8
0x400e252	      0x4889442420	             mov qword [rsp + 0x20], rax	        52	sequencer.c	CALL_8
0x400e257	    0x488905000000	            mov qword [0x0400e25e], rax 	        52	sequencer.c	CALL_8
0x400e25e	      0xe956f8ffff	                           jmp 0x400dab9	        52	sequencer.c	CALL_8
0x400e263	      0xba00000000	                              mov edx, 0	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e268	     0xf8534fbffff	                           jne 0x400dda2	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e26e	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e273	      0xe945fdffff	                           jmp 0x400dfbd	      4373	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_2	IF_10
0x400e278	          0x4c89ff	                            mov rdi, r15	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e27b	      0xe800000000	                          call 0x400e280	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e280	          0x4885c0	                           test rax, rax	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e283	     0xf84f6feffff	                            je 0x400e17f	      4360	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e289	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4363	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e28d	          0x4885c0	                           test rax, rax	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e290	     0xf84e9feffff	                            je 0x400e17f	      4362	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8	CALL_21
0x400e296	    0x482b8424b800	             sub rax, qword [rsp + 0xb8]	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e29e	          0x4889c2	                            mov rdx, rax	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e2a1	        0x48c1fa04	                              sar rdx, 4	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e2a5	    0x69d2abaaaaaa	               imul edx, edx, 0xaaaaaaab	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e2ab	      0xe9e3faffff	                           jmp 0x400dd93	      4365	sequencer.c	FUNCTION_105	FOR_1	IF_5	ELSE_1	IF_8
0x400e2b0	      0xe800000000	                          call 0x400e2b5	      4443	sequencer.c	FUNCTION_105
0x400e2b5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400e2ba	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400e2bf	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400e2c1	      0xbdffffffff	                     mov ebp, 0xffffffff	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400e2c6	      0xe800000000	                          call 0x400e2cb	        54	gettext.h	FUNCTION_164
0x400e2cb	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400e2d0	          0x4889c7	                            mov rdi, rax	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400e2d3	            0x31c0	                            xor eax, eax	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400e2d5	      0xe800000000	                          call 0x400e2da	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400e2da	      0xe9ddfdffff	                           jmp 0x400e0bc	      4181	sequencer.c	FUNCTION_102	CALL_6
0x400e2df	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400e2e4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400e2e9	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400e2eb	      0xe800000000	                          call 0x400e2f0	        54	gettext.h	FUNCTION_164
0x400e2f0	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400e2f5	          0x4889c7	                            mov rdi, rax	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400e2f8	            0x31c0	                            xor eax, eax	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400e2fa	      0xe800000000	                          call 0x400e2ff	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400e2ff	            0x89ef	                            mov edi, ebp	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400e301	      0xbdffffffff	                     mov ebp, 0xffffffff	      4179	sequencer.c	FUNCTION_102	CALL_4
0x400e306	      0xe800000000	                          call 0x400e30b	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400e30b	      0xe9acfdffff	                           jmp 0x400e0bc	      4180	sequencer.c	FUNCTION_102	IF_3	CALL_5
0x400e310	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400e315	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400e31a	            0xeba3	                           jmp 0x400e2bf	        54	gettext.h	FUNCTION_164
0x400e31c	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400e321	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400e328	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400e32d	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400e32f	      0xe800000000	                          call 0x400e334	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400e334	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400e339	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400e33e	      0xe800000000	                          call 0x400e343	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x400e343	    0x41bc00000000	                             mov r12d, 0	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e349	            0x31d2	                            xor edx, edx	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e34b	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e350	      0xe91efdffff	                           jmp 0x400e073	      4399	sequencer.c	FUNCTION_105	IF_14	FOR_4
0x400e355	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400e35a	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400e35f	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400e361	      0xe800000000	                          call 0x400e366	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400e366	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400e36b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400e370	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400e372	      0xe800000000	                          call 0x400e377	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0x400e377	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400e37f	      0xe800000000	                          call 0x400e384	      1791	sequencer.c	FUNCTION_51	CALL_1
0x400e384	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      1792	sequencer.c	FUNCTION_51
0x400e38c	      0xe800000000	                          call 0x400e391	      1792	sequencer.c	FUNCTION_51
0x400e391	      0xb8ffffffff	                     mov eax, 0xffffffff	      4300	sequencer.c	FUNCTION_105	IF_2
0x400e396	      0xe99afdffff	                           jmp 0x400e135	      4300	sequencer.c	FUNCTION_105	IF_2
0x400e39b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400e3a0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400e3a2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400e3a7	      0xe800000000	                          call 0x400e3ac	        54	gettext.h	FUNCTION_164
0x400e3ac	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400e3b1	          0x4889c7	                            mov rdi, rax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400e3b4	            0x31c0	                            xor eax, eax	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400e3b6	      0xe800000000	                          call 0x400e3bb	      1963	sequencer.c	FUNCTION_59	CALL_5
0x400e3bb	      0xb8ffffffff	                     mov eax, 0xffffffff	      4297	sequencer.c	FUNCTION_105	IF_1
0x400e3c0	      0xe970fdffff	                           jmp 0x400e135	      4297	sequencer.c	FUNCTION_105	IF_1
0x400e3c5	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_164
0x400e3c7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_164
0x400e3cc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_164
0x400e3d1	      0xe800000000	                          call 0x400e3d6	        54	gettext.h	FUNCTION_164
0x400e3d6	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400e3db	          0x4889c7	                            mov rdi, rax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400e3de	            0x31c0	                            xor eax, eax	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400e3e0	      0xe800000000	                          call 0x400e3e5	      1959	sequencer.c	FUNCTION_59	CALL_2
0x400e3e5	            0xebd4	                           jmp 0x400e3bb	      1959	sequencer.c	FUNCTION_59	CALL_2
