find_bisection	ELSE,0:WHILE,0:FOR,1:SWITCH,0:IF,4:functions,0:CALL,6:DO,0	353
0x4000710	            0x4157	                                push r15	       369	bisect.c	FUNCTION_11
0x4000712	            0x4156	                                push r14	       369	bisect.c	FUNCTION_11
0x4000714	            0x4155	                                push r13	       369	bisect.c	FUNCTION_11
0x4000716	            0x4154	                                push r12	       369	bisect.c	FUNCTION_11
0x4000718	          0x4189cd	                           mov r13d, ecx	       369	bisect.c	FUNCTION_11
0x400071b	              0x55	                                push rbp	       369	bisect.c	FUNCTION_11
0x400071c	              0x53	                                push rbx	       369	bisect.c	FUNCTION_11
0x400071d	          0x4989d4	                            mov r12, rdx	       369	bisect.c	FUNCTION_11
0x4000720	        0x4883ec58	                           sub rsp, 0x58	       369	bisect.c	FUNCTION_11
0x4000724	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	       369	bisect.c	FUNCTION_11
0x400072d	      0x48895c2448	             mov qword [rsp + 0x48], rbx	       369	bisect.c	FUNCTION_11
0x4000732	            0x31db	                            xor ebx, ebx	       369	bisect.c	FUNCTION_11
0x4000734	          0x488b1f	                    mov rbx, qword [rdi]	       380	bisect.c	FUNCTION_11	FOR_1
0x4000737	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       369	bisect.c	FUNCTION_11
0x400073c	      0x4889742418	             mov qword [rsp + 0x18], rsi	       369	bisect.c	FUNCTION_11
0x4000741	          0x4885db	                           test rbx, rbx	       380	bisect.c	FUNCTION_11	FOR_1
0x4000744	     0xf84e7020000	                            je 0x4000a31	       380	bisect.c	FUNCTION_11	FOR_1
0x400074a	            0x31ed	                            xor ebp, ebp	       380	bisect.c	FUNCTION_11	FOR_1
0x400074c	          0x4531f6	                          xor r14d, r14d	       380	bisect.c	FUNCTION_11	FOR_1
0x400074f	          0x4531ff	                          xor r15d, r15d	       380	bisect.c	FUNCTION_11	FOR_1
0x4000752	          0x4889df	                            mov rdi, rbx	       380	bisect.c	FUNCTION_11	FOR_1
0x4000755	            0xeb26	                           jmp 0x400077d	       380	bisect.c	FUNCTION_11	FOR_1
0x4000757	    0x660f1f840000	                    nop word [rax + rax]	       380	bisect.c	FUNCTION_11	FOR_1
0x4000760	          0x83e004	                              and eax, 4	       392	bisect.c	FUNCTION_11	FOR_1	IF_2
0x4000763	        0x48896f08	                mov qword [rdi + 8], rbp	       390	bisect.c	FUNCTION_11	FOR_1
0x4000767	          0x4889fd	                            mov rbp, rdi	       394	bisect.c	FUNCTION_11	FOR_1
0x400076a	          0x83f801	                              cmp eax, 1	       393	bisect.c	FUNCTION_11	FOR_1	IF_2
0x400076d	          0x4889df	                            mov rdi, rbx	       393	bisect.c	FUNCTION_11	FOR_1	IF_2
0x4000770	        0x4183d700	                             adc r15d, 0	       393	bisect.c	FUNCTION_11	FOR_1	IF_2
0x4000774	        0x4183c601	                             add r14d, 1	       394	bisect.c	FUNCTION_11	FOR_1
0x4000778	          0x4885db	                           test rbx, rbx	       380	bisect.c	FUNCTION_11	FOR_1
0x400077b	            0x7422	                            je 0x400079f	       380	bisect.c	FUNCTION_11	FOR_1
0x400077d	          0x488b07	                    mov rax, qword [rdi]	       383	bisect.c	FUNCTION_11	FOR_1
0x4000780	        0x488b5f08	                mov rbx, qword [rdi + 8]	       385	bisect.c	FUNCTION_11	FOR_1
0x4000784	            0x8b00	                    mov eax, dword [rax]	       383	bisect.c	FUNCTION_11	FOR_1
0x4000786	          0xc1e804	                              shr eax, 4	       383	bisect.c	FUNCTION_11	FOR_1
0x4000789	      0x25ffffff07	                      and eax, 0x7ffffff	       383	bisect.c	FUNCTION_11	FOR_1
0x400078e	            0xa802	                              test al, 2	       386	bisect.c	FUNCTION_11	FOR_1	IF_1
0x4000790	            0x74ce	                            je 0x4000760	       386	bisect.c	FUNCTION_11	FOR_1	IF_1
0x4000792	      0xe800000000	                          call 0x4000797	       387	bisect.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x4000797	          0x4885db	                           test rbx, rbx	       380	bisect.c	FUNCTION_11	FOR_1
0x400079a	          0x4889df	                            mov rdi, rbx	       380	bisect.c	FUNCTION_11	FOR_1
0x400079d	            0x75de	                           jne 0x400077d	       380	bisect.c	FUNCTION_11	FOR_1
0x400079f	        0x45893c24	                   mov dword [r12], r15d	       399	bisect.c	FUNCTION_11
0x40007a3	          0x4963fe	                        movsxd rdi, r14d	       400	bisect.c	FUNCTION_11	CALL_2
0x40007a6	      0xbe04000000	                              mov esi, 4	       400	bisect.c	FUNCTION_11	CALL_2
0x40007ab	      0xe800000000	                          call 0x40007b0	       400	bisect.c	FUNCTION_11	CALL_2
0x40007b0	          0x4885ed	                           test rbp, rbp	       264	bisect.c	FUNCTION_10	FOR_1
0x40007b3	          0x4989c4	                            mov r12, rax	       400	bisect.c	FUNCTION_11	CALL_2
0x40007b6	     0xf8443040000	                            je 0x4000bff	       264	bisect.c	FUNCTION_10	FOR_1
0x40007bc	          0x4989c2	                            mov r10, rax	       264	bisect.c	FUNCTION_10	FOR_1
0x40007bf	          0x4989e9	                             mov r9, rbp	       264	bisect.c	FUNCTION_10	FOR_1
0x40007c2	          0x4531c0	                            xor r8d, r8d	       264	bisect.c	FUNCTION_10	FOR_1
0x40007c5	           0xf1f00	                         nop dword [rax]	       264	bisect.c	FUNCTION_10	FOR_1
0x40007c8	          0x498b01	                     mov rax, qword [r9]	       265	bisect.c	FUNCTION_10	FOR_1
0x40007cb	            0x8b30	                    mov esi, dword [rax]	       266	bisect.c	FUNCTION_10	FOR_1
0x40007cd	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       266	bisect.c	FUNCTION_10	FOR_1
0x40007d1	        0x4c895018	             mov qword [rax + 0x18], r10	       268	bisect.c	FUNCTION_10	FOR_1
0x40007d5	          0xc1ee04	                              shr esi, 4	       266	bisect.c	FUNCTION_10	FOR_1
0x40007d8	    0x81e6ffffff07	                      and esi, 0x7ffffff	       266	bisect.c	FUNCTION_10	FOR_1
0x40007de	          0x4885d2	                           test rdx, rdx	        90	bisect.c	FUNCTION_5	FOR_1
0x40007e1	     0xf84bc010000	                            je 0x40009a3	        90	bisect.c	FUNCTION_5	FOR_1
0x40007e7	            0x31c9	                            xor ecx, ecx	        90	bisect.c	FUNCTION_5	FOR_1
0x40007e9	     0xf1f80000000	                         nop dword [rax]	        90	bisect.c	FUNCTION_5	FOR_1
0x40007f0	          0x488b02	                    mov rax, qword [rdx]	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40007f3	        0x488b5208	                mov rdx, qword [rdx + 8]	        90	bisect.c	FUNCTION_5	FOR_1
0x40007f7	            0x8b00	                    mov eax, dword [rax]	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40007f9	          0xc1e804	                              shr eax, 4	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40007fc	          0x83e002	                              and eax, 2	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x40007ff	          0x83f801	                              cmp eax, 1	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x4000802	           0xf92c0	                                 setb al	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x4000805	           0xfb6c0	                           movzx eax, al	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x4000808	             0x1c1	                            add ecx, eax	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x400080a	          0x4885d2	                           test rdx, rdx	        90	bisect.c	FUNCTION_5	FOR_1
0x400080d	            0x75e1	                           jne 0x40007f0	        90	bisect.c	FUNCTION_5	FOR_1
0x400080f	            0x85c9	                           test ecx, ecx	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x4000811	     0xf848c010000	                            je 0x40009a3	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x4000817	          0x83f901	                              cmp ecx, 1	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x400081a	     0xf8571010000	                           jne 0x4000991	       269	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	CALL_1
0x4000820	          0x498b01	                     mov rax, qword [r9]	        82	bisect.c	FUNCTION_4
0x4000823	        0x488b4018	            mov rax, qword [rax + 0x18] 	        82	bisect.c	FUNCTION_4
0x4000827	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        82	bisect.c	FUNCTION_4
0x400082d	        0x4d8b4908	                  mov r9, qword [r9 + 8]	       264	bisect.c	FUNCTION_10	FOR_1
0x4000831	        0x4983c204	                              add r10, 4	       264	bisect.c	FUNCTION_10	FOR_1
0x4000835	          0x4d85c9	                             test r9, r9	       264	bisect.c	FUNCTION_10	FOR_1
0x4000838	            0x758e	                           jne 0x40007c8	       264	bisect.c	FUNCTION_10	FOR_1
0x400083a	          0x4889eb	                            mov rbx, rbp	       264	bisect.c	FUNCTION_10	FOR_1
0x400083d	          0x4589c6	                           mov r14d, r8d	       264	bisect.c	FUNCTION_10	FOR_1
0x4000840	            0xeb0f	                           jmp 0x4000851	       264	bisect.c	FUNCTION_10	FOR_1
0x4000842	    0x660f1f440000	                    nop word [rax + rax]	       264	bisect.c	FUNCTION_10	FOR_1
0x4000848	        0x488b5b08	                mov rbx, qword [rbx + 8]	       307	bisect.c	FUNCTION_10	FOR_2
0x400084c	          0x4885db	                           test rbx, rbx	       307	bisect.c	FUNCTION_10	FOR_2
0x400084f	            0x745f	                            je 0x40008b0	       307	bisect.c	FUNCTION_10	FOR_2
0x4000851	          0x488b03	                    mov rax, qword [rbx]	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x4000854	          0xf60020	                   test byte [rax], 0x20	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x4000857	            0x75ef	                           jne 0x4000848	       308	bisect.c	FUNCTION_10	FOR_2	IF_2
0x4000859	        0x488b4018	            mov rax, qword [rax + 0x18] 	        77	bisect.c	FUNCTION_3
0x400085d	          0x8338fe	     cmp dword [rax], 0xfffffffffffffffe	       310	bisect.c	FUNCTION_10	FOR_2	IF_3	CALL_5
0x4000860	            0x75e6	                           jne 0x4000848	       310	bisect.c	FUNCTION_10	FOR_2	IF_3	CALL_5
0x4000862	          0x4889df	                            mov rdi, rbx	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x4000865	      0xe896f9ffff	                 call sym.count_distance	       312	bisect.c	FUNCTION_10	FOR_2	CALL_7
0x400086a	          0x488b13	                    mov rdx, qword [rbx]	        82	bisect.c	FUNCTION_4
0x400086d	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	        82	bisect.c	FUNCTION_4
0x4000871	            0x8902	                    mov dword [rdx], eax	        82	bisect.c	FUNCTION_4
0x4000873	          0x4889e8	                            mov rax, rbp	        82	bisect.c	FUNCTION_4
0x4000876	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        82	bisect.c	FUNCTION_4
0x4000880	          0x488b10	                    mov rdx, qword [rax]	        67	bisect.c	FUNCTION_2	WHILE_1
0x4000883	    0x8122ffffefff	             and dword [rdx], 0xffefffff	        68	bisect.c	FUNCTION_2	WHILE_1
0x4000889	        0x488b4008	                mov rax, qword [rax + 8]	        69	bisect.c	FUNCTION_2	WHILE_1
0x400088d	          0x4885c0	                           test rax, rax	        66	bisect.c	FUNCTION_2	WHILE_1
0x4000890	            0x75ee	                           jne 0x4000880	        66	bisect.c	FUNCTION_2	WHILE_1
0x4000892	          0x4585ed	                         test r13d, r13d	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x4000895	            0x750c	                           jne 0x40008a3	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x4000897	          0x488b3b	                    mov rdi, qword [rbx]	       316	bisect.c	FUNCTION_10	FOR_2	IF_4	CALL_9
0x400089a	          0xf60740	                   test byte [rdi], 0x40	       103	bisect.c	FUNCTION_6	IF_1
0x400089d	     0xf841f010000	                            je 0x40009c2	       103	bisect.c	FUNCTION_6	IF_1
0x40008a3	        0x4183c601	                             add r14d, 1	       318	bisect.c	FUNCTION_10	FOR_2
0x40008a7	        0x488b5b08	                mov rbx, qword [rbx + 8]	       307	bisect.c	FUNCTION_10	FOR_2
0x40008ab	          0x4885db	                           test rbx, rbx	       307	bisect.c	FUNCTION_10	FOR_2
0x40008ae	            0x75a1	                           jne 0x4000851	       307	bisect.c	FUNCTION_10	FOR_2
0x40008b0	          0x4589f0	                           mov r8d, r14d	       307	bisect.c	FUNCTION_10	FOR_2
0x40008b3	       0xf1f440000	                   nop dword [rax + rax]	       307	bisect.c	FUNCTION_10	FOR_2
0x40008b8	          0x4539c7	                           cmp r15d, r8d	       323	bisect.c	FUNCTION_10	WHILE_1
0x40008bb	     0xf8e21010000	                           jle 0x40009e2	       323	bisect.c	FUNCTION_10	WHILE_1
0x40008c1	          0x4885ed	                           test rbp, rbp	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008c4	          0x4889e9	                            mov rcx, rbp	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008c7	            0x7510	                           jne 0x40008d9	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008c9	            0xebed	                           jmp 0x40008b8	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008cb	       0xf1f440000	                   nop dword [rax + rax]	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008d0	        0x488b4908	                mov rcx, qword [rcx + 8]	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008d4	          0x4885c9	                           test rcx, rcx	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008d7	            0x74df	                            je 0x40008b8	       324	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008d9	          0x488b39	                    mov rdi, qword [rcx]	       326	bisect.c	FUNCTION_10	WHILE_1	FOR_3
0x40008dc	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	        77	bisect.c	FUNCTION_3
0x40008e0	            0x8b06	                    mov eax, dword [rsi]	       328	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5	CALL_10
0x40008e2	            0x85c0	                           test eax, eax	       328	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5	CALL_10
0x40008e4	            0x79ea	                           jns 0x40008d0	       328	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_5	CALL_10
0x40008e6	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x40008ea	          0x4885c0	                           test rax, rax	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x40008ed	            0x7512	                           jne 0x4000901	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x40008ef	            0xebdf	                           jmp 0x40008d0	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x40008f1	     0xf1f80000000	                         nop dword [rax]	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x40008f8	        0x488b4008	                mov rax, qword [rax + 8]	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x40008fc	          0x4885c0	                           test rax, rax	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x40008ff	            0x74cf	                            je 0x40008d0	       330	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4
0x4000901	          0x488b10	                    mov rdx, qword [rax]	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000904	          0xf60220	                   test byte [rdx], 0x20	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000907	            0x75ef	                           jne 0x40008f8	       331	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_6
0x4000909	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	        77	bisect.c	FUNCTION_3
0x400090d	            0x8b12	                    mov edx, dword [rdx]	        77	bisect.c	FUNCTION_3
0x400090f	            0x85d2	                           test edx, edx	       333	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7	CALL_11
0x4000911	            0x78e5	                            js 0x40008f8	       333	bisect.c	FUNCTION_10	WHILE_1	FOR_3	FOR_4	IF_7	CALL_11
0x4000913	          0xf60740	                   test byte [rdi], 0x40	       344	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x4000916	            0x7507	                           jne 0x400091f	       344	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x4000918	          0x83c201	                              add edx, 1	       345	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9	CALL_13
0x400091b	        0x4183c001	                              add r8d, 1	       346	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_9
0x400091f	          0x4585ed	                         test r13d, r13d	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000922	            0x8916	                    mov dword [rsi], edx	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000924	            0x75aa	                           jne 0x40008d0	       354	bisect.c	FUNCTION_10	WHILE_1	FOR_3	IF_10	CALL_16
0x4000926	          0xf60740	                   test byte [rdi], 0x40	       103	bisect.c	FUNCTION_6	IF_1
0x4000929	            0x75a5	                           jne 0x40008d0	       103	bisect.c	FUNCTION_6	IF_1
0x400092b	             0x1d2	                            add edx, edx	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x400092d	          0x4429fa	                           sub edx, r15d	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000930	          0x8d4201	                      lea eax, [rdx + 1]	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000933	          0x83f802	                              cmp eax, 2	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000936	            0x7798	                            ja 0x40008d0	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000938	        0x48897d00	                    mov qword [rbp], rdi	       406	bisect.c	FUNCTION_11	IF_3	IF_4
0x400093c	        0x488b7d08	                mov rdi, qword [rbp + 8]	       407	bisect.c	FUNCTION_11	IF_3	IF_4	CALL_4
0x4000940	      0xe800000000	                          call 0x4000945	       407	bisect.c	FUNCTION_11	IF_3	IF_4	CALL_4
0x4000945	        0x488b4500	                    mov rax, qword [rbp]	       407	bisect.c	FUNCTION_11	IF_3	IF_4	CALL_4
0x4000949	    0x48c745080000	                  mov qword [rbp + 8], 0	       409	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000951	        0x488b4018	            mov rax, qword [rax + 0x18] 	       409	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000955	            0x8b00	                    mov eax, dword [rax]	       409	bisect.c	FUNCTION_11	IF_3	IF_4
0x4000957	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       411	bisect.c	FUNCTION_11	IF_3	CALL_5
0x400095c	            0x8903	                    mov dword [rbx], eax	       411	bisect.c	FUNCTION_11	IF_3	CALL_5
0x400095e	          0x4c89e7	                            mov rdi, r12	       413	bisect.c	FUNCTION_11	CALL_6
0x4000961	      0xe800000000	                          call 0x4000966	       413	bisect.c	FUNCTION_11	CALL_6
0x4000966	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       414	bisect.c	FUNCTION_11
0x400096b	          0x488928	                    mov qword [rax], rbp	       414	bisect.c	FUNCTION_11
0x400096e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       415	bisect.c	FUNCTION_11
0x4000973	    0x644833042528	                xor rax, qword fs:[0x28]	       415	bisect.c	FUNCTION_11
0x400097c	     0xf8578020000	                           jne 0x4000bfa	       415	bisect.c	FUNCTION_11
0x4000982	        0x4883c458	                           add rsp, 0x58	       415	bisect.c	FUNCTION_11
0x4000986	              0x5b	                                 pop rbx	       415	bisect.c	FUNCTION_11
0x4000987	              0x5d	                                 pop rbp	       415	bisect.c	FUNCTION_11
0x4000988	            0x415c	                                 pop r12	       415	bisect.c	FUNCTION_11
0x400098a	            0x415d	                                 pop r13	       415	bisect.c	FUNCTION_11
0x400098c	            0x415e	                                 pop r14	       415	bisect.c	FUNCTION_11
0x400098e	            0x415f	                                 pop r15	       415	bisect.c	FUNCTION_11
0x4000990	              0xc3	                                     ret	       415	bisect.c	FUNCTION_11
0x4000991	          0x498b01	                     mov rax, qword [r9]	        82	bisect.c	FUNCTION_4
0x4000994	        0x488b4018	            mov rax, qword [rax + 0x18] 	        82	bisect.c	FUNCTION_4
0x4000998	    0xc700feffffff	            mov dword [rax], 0xfffffffe 	        82	bisect.c	FUNCTION_4
0x400099e	      0xe98afeffff	                           jmp 0x400082d	        82	bisect.c	FUNCTION_4
0x40009a3	          0x83e604	                              and esi, 4	       271	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1
0x40009a6	     0xf8581feffff	                           jne 0x400082d	       271	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1
0x40009ac	          0x498b01	                     mov rax, qword [r9]	        82	bisect.c	FUNCTION_4
0x40009af	        0x4183c001	                              add r8d, 1	       273	bisect.c	FUNCTION_10	FOR_1	SWITCH_1	IF_1
0x40009b3	        0x488b4018	            mov rax, qword [rax + 0x18] 	        82	bisect.c	FUNCTION_4
0x40009b7	    0xc70001000000	                      mov dword [rax], 1	        82	bisect.c	FUNCTION_4
0x40009bd	      0xe96bfeffff	                           jmp 0x400082d	        82	bisect.c	FUNCTION_4
0x40009c2	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        77	bisect.c	FUNCTION_3
0x40009c6	            0x8b00	                    mov eax, dword [rax]	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x40009c8	             0x1c0	                            add eax, eax	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x40009ca	          0x4429f8	                           sub eax, r15d	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x40009cd	          0x83c001	                              add eax, 1	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x40009d0	          0x83f802	                              cmp eax, 2	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x40009d3	     0xf865fffffff	                           jbe 0x4000938	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x40009d9	        0x4183c601	                             add r14d, 1	       318	bisect.c	FUNCTION_10	FOR_2
0x40009dd	      0xe9c5feffff	                           jmp 0x40008a7	       318	bisect.c	FUNCTION_10	FOR_2
0x40009e2	          0x4585ed	                         test r13d, r13d	       361	bisect.c	FUNCTION_10	IF_11
0x40009e5	     0xf8507020000	                           jne 0x4000bf2	       361	bisect.c	FUNCTION_10	IF_11
0x40009eb	          0x4885ed	                           test rbp, rbp	       167	bisect.c	FUNCTION_7	FOR_1
0x40009ee	     0xf846affffff	                            je 0x400095e	       167	bisect.c	FUNCTION_7	FOR_1
0x40009f4	          0x4889ef	                            mov rdi, rbp	       167	bisect.c	FUNCTION_7	FOR_1
0x40009f7	          0x4889e9	                            mov rcx, rbp	       167	bisect.c	FUNCTION_7	FOR_1
0x40009fa	      0xbeffffffff	                     mov esi, 0xffffffff	       167	bisect.c	FUNCTION_7	FOR_1
0x40009ff	          0x488b01	                    mov rax, qword [rcx]	       169	bisect.c	FUNCTION_7	FOR_1
0x4000a02	          0xf60040	                   test byte [rax], 0x40	       171	bisect.c	FUNCTION_7	FOR_1	IF_1
0x4000a05	            0x7519	                           jne 0x4000a20	       171	bisect.c	FUNCTION_7	FOR_1	IF_1
0x4000a07	        0x488b4018	            mov rax, qword [rax + 0x18] 	        77	bisect.c	FUNCTION_3
0x4000a0b	          0x4489fa	                           mov edx, r15d	       174	bisect.c	FUNCTION_7	FOR_1	IF_2
0x4000a0e	            0x8b00	                    mov eax, dword [rax]	        77	bisect.c	FUNCTION_3
0x4000a10	            0x29c2	                            sub edx, eax	       174	bisect.c	FUNCTION_7	FOR_1	IF_2
0x4000a12	            0x39d0	                            cmp eax, edx	       174	bisect.c	FUNCTION_7	FOR_1	IF_2
0x4000a14	           0xf4fc2	                          cmovg eax, edx	       174	bisect.c	FUNCTION_7	FOR_1	IF_2
0x4000a17	            0x39f0	                            cmp eax, esi	       176	bisect.c	FUNCTION_7	FOR_1	IF_3
0x4000a19	            0x7e05	                           jle 0x4000a20	       176	bisect.c	FUNCTION_7	FOR_1	IF_3
0x4000a1b	            0x89c6	                            mov esi, eax	       176	bisect.c	FUNCTION_7	FOR_1	IF_3
0x4000a1d	          0x4889cf	                            mov rdi, rcx	       176	bisect.c	FUNCTION_7	FOR_1	IF_3
0x4000a20	        0x488b4908	                mov rcx, qword [rcx + 8]	       167	bisect.c	FUNCTION_7	FOR_1
0x4000a24	          0x4885c9	                           test rcx, rcx	       167	bisect.c	FUNCTION_7	FOR_1
0x4000a27	            0x75d6	                           jne 0x40009ff	       167	bisect.c	FUNCTION_7	FOR_1
0x4000a29	          0x488b3f	                    mov rdi, qword [rdi]	       167	bisect.c	FUNCTION_7	FOR_1
0x4000a2c	      0xe907ffffff	                           jmp 0x4000938	       167	bisect.c	FUNCTION_7	FOR_1
0x4000a31	            0x31ff	                            xor edi, edi	       400	bisect.c	FUNCTION_11	CALL_2
0x4000a33	    0xc70200000000	                      mov dword [rdx], 0	       399	bisect.c	FUNCTION_11
0x4000a39	      0xbe04000000	                              mov esi, 4	       400	bisect.c	FUNCTION_11	CALL_2
0x4000a3e	      0xe800000000	                          call 0x4000a43	       400	bisect.c	FUNCTION_11	CALL_2
0x4000a43	          0x4585ed	                         test r13d, r13d	       361	bisect.c	FUNCTION_10	IF_11
0x4000a46	          0x4989c4	                            mov r12, rax	       400	bisect.c	FUNCTION_11	CALL_2
0x4000a49	     0xf849c010000	                            je 0x4000beb	       361	bisect.c	FUNCTION_10	IF_11
0x4000a4f	          0x4531ff	                          xor r15d, r15d	       380	bisect.c	FUNCTION_11	FOR_1
0x4000a52	      0xbe10000000	                           mov esi, 0x10	       204	bisect.c	FUNCTION_9	CALL_1
0x4000a57	          0x4963ff	                        movsxd rdi, r15d	       204	bisect.c	FUNCTION_9	CALL_1
0x4000a5a	          0x4531ed	                          xor r13d, r13d	       208	bisect.c	FUNCTION_9	FOR_1
0x4000a5d	      0xe800000000	                          call 0x4000a62	       204	bisect.c	FUNCTION_9	CALL_1
0x4000a62	          0x4885db	                           test rbx, rbx	       208	bisect.c	FUNCTION_9	FOR_1
0x4000a65	          0x4889c5	                            mov rbp, rax	       204	bisect.c	FUNCTION_9	CALL_1
0x4000a68	    0x48c744243000	               mov qword [rsp + 0x30], 0	       205	bisect.c	FUNCTION_9
0x4000a71	    0x48c744243800	               mov qword [rsp + 0x38], 0	       205	bisect.c	FUNCTION_9
0x4000a7a	    0x48c744244000	               mov qword [rsp + 0x40], 0	       205	bisect.c	FUNCTION_9
0x4000a83	          0x4889de	                            mov rsi, rbx	       208	bisect.c	FUNCTION_9	FOR_1
0x4000a86	     0xf8458010000	                            je 0x4000be4	       208	bisect.c	FUNCTION_9	FOR_1
0x4000a8c	          0x488b0e	                    mov rcx, qword [rsi]	       210	bisect.c	FUNCTION_9	FOR_1
0x4000a8f	          0xf60140	                   test byte [rcx], 0x40	       212	bisect.c	FUNCTION_9	FOR_1	IF_1
0x4000a92	            0x7524	                           jne 0x4000ab8	       212	bisect.c	FUNCTION_9	FOR_1	IF_1
0x4000a94	        0x488b4118	            mov rax, qword [rcx + 0x18] 	        77	bisect.c	FUNCTION_3
0x4000a98	          0x4489ff	                           mov edi, r15d	       215	bisect.c	FUNCTION_9	FOR_1	IF_2
0x4000a9b	            0x8b10	                    mov edx, dword [rax]	        77	bisect.c	FUNCTION_3
0x4000a9d	          0x4963c5	                        movsxd rax, r13d	       217	bisect.c	FUNCTION_9	FOR_1
0x4000aa0	        0x48c1e004	                              shl rax, 4	       217	bisect.c	FUNCTION_9	FOR_1
0x4000aa4	          0x4801e8	                            add rax, rbp	       217	bisect.c	FUNCTION_9	FOR_1
0x4000aa7	            0x29d7	                            sub edi, edx	       215	bisect.c	FUNCTION_9	FOR_1	IF_2
0x4000aa9	          0x488908	                    mov qword [rax], rcx	       217	bisect.c	FUNCTION_9	FOR_1
0x4000aac	            0x39fa	                            cmp edx, edi	       218	bisect.c	FUNCTION_9	FOR_1
0x4000aae	           0xf4fd7	                          cmovg edx, edi	       218	bisect.c	FUNCTION_9	FOR_1
0x4000ab1	        0x4183c501	                             add r13d, 1	       219	bisect.c	FUNCTION_9	FOR_1
0x4000ab5	          0x895008	                mov dword [rax + 8], edx	       218	bisect.c	FUNCTION_9	FOR_1
0x4000ab8	        0x488b7608	                mov rsi, qword [rsi + 8]	       208	bisect.c	FUNCTION_9	FOR_1
0x4000abc	          0x4885f6	                           test rsi, rsi	       208	bisect.c	FUNCTION_9	FOR_1
0x4000abf	            0x75cb	                           jne 0x4000a8c	       208	bisect.c	FUNCTION_9	FOR_1
0x4000ac1	        0x4183fd01	                             cmp r13d, 1	      1048	git-compat-util.h	FUNCTION_65	IF_1
0x4000ac5	     0xf8e06010000	                           jle 0x4000bd1	      1048	git-compat-util.h	FUNCTION_65	IF_1
0x4000acb	          0x4963f5	                        movsxd rsi, r13d	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x4000ace	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x4000ad3	      0xba10000000	                           mov edx, 0x10	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x4000ad8	          0x4889ef	                            mov rdi, rbp	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x4000adb	      0xe800000000	                          call 0x4000ae0	      1049	git-compat-util.h	FUNCTION_65	IF_1
0x4000ae0	        0x418d45ff	                      lea eax, [r13 - 1]	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000ae4	          0x4989de	                            mov r14, rbx	       208	bisect.c	FUNCTION_9	FOR_1
0x4000ae7	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000aec	          0x4531d2	                          xor r10d, r10d	       208	bisect.c	FUNCTION_9	FOR_1
0x4000aef	          0x4889eb	                            mov rbx, rbp	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000af2	        0x89442428	             mov dword [rsp + 0x28], eax	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000af6	            0xeb53	                           jmp 0x4000b4b	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000af8	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_70	IF_2
0x4000afb	          0x8b5308	                mov edx, dword [rbx + 8]	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x4000afe	      0x4c8d7c2430	                   lea r15, [rsp + 0x30]	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x4000b03	            0x31c0	                            xor eax, eax	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x4000b05	      0xbe00000000	                              mov esi, 0	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x4000b0a	      0x448954242c	            mov dword [rsp + 0x2c], r10d	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x4000b0f	          0x4c89ff	                            mov rdi, r15	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x4000b12	      0xe800000000	                          call 0x4000b17	       226	bisect.c	FUNCTION_9	FOR_2	CALL_3
0x4000b17	      0x488b542408	                mov rdx, qword [rsp + 8]	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x4000b1c	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x4000b21	            0x31ff	                            xor edi, edi	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x4000b23	      0xe800000000	                          call 0x4000b28	       227	bisect.c	FUNCTION_9	FOR_2	CALL_4
0x4000b28	      0x448b54242c	           mov r10d, dword [rsp + 0x2c] 	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000b2d	      0x4439542428	           cmp dword [rsp + 0x28], r10d 	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000b32	          0x488b03	                    mov rax, qword [rbx]	       229	bisect.c	FUNCTION_9	FOR_2
0x4000b35	          0x498906	                    mov qword [r14], rax	       229	bisect.c	FUNCTION_9	FOR_2
0x4000b38	            0x7e04	                           jle 0x4000b3e	       230	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000b3a	        0x4d8b7608	                mov r14, qword [r14 + 8]	       231	bisect.c	FUNCTION_9	FOR_2	IF_3
0x4000b3e	        0x4183c201	                             add r10d, 1	       222	bisect.c	FUNCTION_9	FOR_2
0x4000b42	        0x4883c310	                           add rbx, 0x10	       222	bisect.c	FUNCTION_9	FOR_2
0x4000b46	          0x4539ea	                          cmp r10d, r13d	       222	bisect.c	FUNCTION_9	FOR_2
0x4000b49	            0x7445	                            je 0x4000b90	       222	bisect.c	FUNCTION_9	FOR_2
0x4000b4b	          0x488b03	                    mov rax, qword [rbx]	       223	bisect.c	FUNCTION_9	FOR_2
0x4000b4e	    0x48c744243800	               mov qword [rsp + 0x38], 0	       164	strbuf.h	FUNCTION_70
0x4000b57	      0x4889442408	                mov qword [rsp + 8], rax	       223	bisect.c	FUNCTION_9	FOR_2
0x4000b5c	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       165	strbuf.h	FUNCTION_70	IF_2
0x4000b61	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_70	IF_2
0x4000b67	            0x758f	                           jne 0x4000af8	       165	strbuf.h	FUNCTION_70	IF_2
0x4000b69	    0x803d00000000	                cmp byte [0x04000b70], 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000b70	            0x7489	                            je 0x4000afb	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000b72	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000b77	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000b7c	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000b81	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000b86	      0xe800000000	                          call 0x4000b8b	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000b8b	       0xf1f440000	                   nop dword [rax + rax]	       168	strbuf.h	FUNCTION_70	CALL_2
0x4000b90	          0x4d85f6	                           test r14, r14	       233	bisect.c	FUNCTION_9	IF_4
0x4000b93	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       233	bisect.c	FUNCTION_9	IF_4
0x4000b98	            0x7411	                            je 0x4000bab	       233	bisect.c	FUNCTION_9	IF_4
0x4000b9a	        0x498b7e08	                mov rdi, qword [r14 + 8]	       234	bisect.c	FUNCTION_9	IF_4	CALL_5
0x4000b9e	      0xe800000000	                          call 0x4000ba3	       234	bisect.c	FUNCTION_9	IF_4	CALL_5
0x4000ba3	    0x49c746080000	                  mov qword [r14 + 8], 0	       235	bisect.c	FUNCTION_9	IF_4
0x4000bab	          0x4c89ff	                            mov rdi, r15	       237	bisect.c	FUNCTION_9	CALL_6
0x4000bae	      0xe800000000	                          call 0x4000bb3	       237	bisect.c	FUNCTION_9	CALL_6
0x4000bb3	          0x4889ef	                            mov rdi, rbp	       238	bisect.c	FUNCTION_9	CALL_7
0x4000bb6	      0xe800000000	                          call 0x4000bbb	       238	bisect.c	FUNCTION_9	CALL_7
0x4000bbb	          0x4885db	                           test rbx, rbx	       404	bisect.c	FUNCTION_11	IF_3
0x4000bbe	            0x742b	                            je 0x4000beb	       404	bisect.c	FUNCTION_11	IF_3
0x4000bc0	          0x488b03	                    mov rax, qword [rbx]	       404	bisect.c	FUNCTION_11	IF_3
0x4000bc3	          0x4889dd	                            mov rbp, rbx	       404	bisect.c	FUNCTION_11	IF_3
0x4000bc6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       404	bisect.c	FUNCTION_11	IF_3
0x4000bca	            0x8b00	                    mov eax, dword [rax]	       404	bisect.c	FUNCTION_11	IF_3
0x4000bcc	      0xe986fdffff	                           jmp 0x4000957	       404	bisect.c	FUNCTION_11	IF_3
0x4000bd1	          0x4585ed	                         test r13d, r13d	       222	bisect.c	FUNCTION_9	FOR_2
0x4000bd4	     0xf8506ffffff	                           jne 0x4000ae0	       222	bisect.c	FUNCTION_9	FOR_2
0x4000bda	          0x4989de	                            mov r14, rbx	       222	bisect.c	FUNCTION_9	FOR_2
0x4000bdd	      0x4c8d7c2430	                   lea r15, [rsp + 0x30]	       222	bisect.c	FUNCTION_9	FOR_2
0x4000be2	            0xebb6	                           jmp 0x4000b9a	       222	bisect.c	FUNCTION_9	FOR_2
0x4000be4	      0x4c8d7c2430	                   lea r15, [rsp + 0x30]	       222	bisect.c	FUNCTION_9	FOR_2
0x4000be9	            0xebc0	                           jmp 0x4000bab	       222	bisect.c	FUNCTION_9	FOR_2
0x4000beb	            0x31ed	                            xor ebp, ebp	       361	bisect.c	FUNCTION_10	IF_11
0x4000bed	      0xe96cfdffff	                           jmp 0x400095e	       361	bisect.c	FUNCTION_10	IF_11
0x4000bf2	          0x4889eb	                            mov rbx, rbp	       361	bisect.c	FUNCTION_10	IF_11
0x4000bf5	      0xe958feffff	                           jmp 0x4000a52	       361	bisect.c	FUNCTION_10	IF_11
0x4000bfa	      0xe800000000	                          call 0x4000bff	       415	bisect.c	FUNCTION_11
0x4000bff	          0x4531c0	                            xor r8d, r8d	       262	bisect.c	FUNCTION_10
0x4000c02	      0xe9b1fcffff	                           jmp 0x40008b8	       262	bisect.c	FUNCTION_10
read_bisect_terms	ELSE,2:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0:CALL,9:DO,0	69
0x4000fb0	            0x4155	                                push r13	       910	bisect.c	FUNCTION_34
0x4000fb2	            0x4154	                                push r12	       910	bisect.c	FUNCTION_34
0x4000fb4	          0x4989fd	                            mov r13, rdi	       910	bisect.c	FUNCTION_34
0x4000fb7	              0x55	                                push rbp	       910	bisect.c	FUNCTION_34
0x4000fb8	              0x53	                                push rbx	       910	bisect.c	FUNCTION_34
0x4000fb9	          0x4989f4	                            mov r12, rsi	       910	bisect.c	FUNCTION_34
0x4000fbc	        0x4883ec28	                           sub rsp, 0x28	       910	bisect.c	FUNCTION_34
0x4000fc0	    0x488b2d000000	            mov rbp, qword [0x04000fc7] 	       449	bisect.c	CALL_12
0x4000fc7	    0x64488b042528	                mov rax, qword fs:[0x28]	       910	bisect.c	FUNCTION_34
0x4000fd0	      0x4889442418	             mov qword [rsp + 0x18], rax	       910	bisect.c	FUNCTION_34
0x4000fd5	            0x31c0	                            xor eax, eax	       910	bisect.c	FUNCTION_34
0x4000fd7	    0x48c704240000	                      mov qword [rsp], 0	       911	bisect.c	FUNCTION_34
0x4000fdf	    0x48c744240800	                  mov qword [rsp + 8], 0	       911	bisect.c	FUNCTION_34
0x4000fe8	          0x4885ed	                           test rbp, rbp	       449	bisect.c	CALL_12
0x4000feb	    0x48c744241000	               mov qword [rsp + 0x10], 0	       911	bisect.c	FUNCTION_34
0x4000ff4	     0xf8496000000	                            je 0x4001090	       449	bisect.c	CALL_12
0x4000ffa	      0xbe00000000	                              mov esi, 0	       913	bisect.c	FUNCTION_34
0x4000fff	          0x4889ef	                            mov rdi, rbp	       913	bisect.c	FUNCTION_34
0x4001002	      0xe800000000	                          call 0x4001007	       913	bisect.c	FUNCTION_34
0x4001007	          0x4885c0	                           test rax, rax	       915	bisect.c	FUNCTION_34	IF_1
0x400100a	          0x4889c3	                            mov rbx, rax	       913	bisect.c	FUNCTION_34
0x400100d	            0x7461	                            je 0x4001070	       915	bisect.c	FUNCTION_34	IF_1
0x400100f	          0x4889c6	                            mov rsi, rax	       924	bisect.c	FUNCTION_34	ELSE_2	CALL_4
0x4001012	          0x4889e7	                            mov rdi, rsp	       924	bisect.c	FUNCTION_34	ELSE_2	CALL_4
0x4001015	      0xe800000000	                          call 0x400101a	       924	bisect.c	FUNCTION_34	ELSE_2	CALL_4
0x400101a	            0x31f6	                            xor esi, esi	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x400101c	          0x4889e7	                            mov rdi, rsp	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x400101f	      0xe800000000	                          call 0x4001024	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x4001024	          0x4889de	                            mov rsi, rbx	       926	bisect.c	FUNCTION_34	ELSE_2	CALL_6
0x4001027	          0x4889e7	                            mov rdi, rsp	       926	bisect.c	FUNCTION_34	ELSE_2	CALL_6
0x400102a	        0x49894500	                    mov qword [r13], rax	       925	bisect.c	FUNCTION_34	ELSE_2	CALL_5
0x400102e	      0xe800000000	                          call 0x4001033	       926	bisect.c	FUNCTION_34	ELSE_2	CALL_6
0x4001033	            0x31f6	                            xor esi, esi	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x4001035	          0x4889e7	                            mov rdi, rsp	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x4001038	      0xe800000000	                          call 0x400103d	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x400103d	          0x4889e7	                            mov rdi, rsp	       929	bisect.c	FUNCTION_34	CALL_8
0x4001040	        0x49890424	                    mov qword [r12], rax	       927	bisect.c	FUNCTION_34	ELSE_2	CALL_7
0x4001044	      0xe800000000	                          call 0x4001049	       929	bisect.c	FUNCTION_34	CALL_8
0x4001049	          0x4889df	                            mov rdi, rbx	       930	bisect.c	FUNCTION_34	CALL_9
0x400104c	      0xe800000000	                          call 0x4001051	       930	bisect.c	FUNCTION_34	CALL_9
0x4001051	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       931	bisect.c	FUNCTION_34
0x4001056	    0x644833042528	                xor rax, qword fs:[0x28]	       931	bisect.c	FUNCTION_34
0x400105f	            0x7548	                           jne 0x40010a9	       931	bisect.c	FUNCTION_34
0x4001061	        0x4883c428	                           add rsp, 0x28	       931	bisect.c	FUNCTION_34
0x4001065	              0x5b	                                 pop rbx	       931	bisect.c	FUNCTION_34
0x4001066	              0x5d	                                 pop rbp	       931	bisect.c	FUNCTION_34
0x4001067	            0x415c	                                 pop r12	       931	bisect.c	FUNCTION_34
0x4001069	            0x415d	                                 pop r13	       931	bisect.c	FUNCTION_34
0x400106b	              0xc3	                                     ret	       931	bisect.c	FUNCTION_34
0x400106c	         0xf1f4000	                         nop dword [rax]	       931	bisect.c	FUNCTION_34
0x4001070	      0xe800000000	                          call 0x4001075	       916	bisect.c	FUNCTION_34	IF_1	IF_2
0x4001075	          0x833802	                      cmp dword [rax], 2	       916	bisect.c	FUNCTION_34	IF_1	IF_2
0x4001078	            0x7534	                           jne 0x40010ae	       916	bisect.c	FUNCTION_34	IF_1	IF_2
0x400107a	    0x49c745000000	                      mov qword [r13], 0	       917	bisect.c	FUNCTION_34	IF_1	IF_2
0x4001082	    0x49c704240000	                      mov qword [r12], 0	       918	bisect.c	FUNCTION_34	IF_1	IF_2
0x400108a	            0xebc5	                           jmp 0x4001051	       918	bisect.c	FUNCTION_34	IF_1	IF_2
0x400108c	         0xf1f4000	                         nop dword [rax]	       918	bisect.c	FUNCTION_34	IF_1	IF_2
0x4001090	      0xbf00000000	                              mov edi, 0	       449	bisect.c	CALL_12
0x4001095	      0xe800000000	                          call 0x400109a	       449	bisect.c	CALL_12
0x400109a	          0x4889c5	                            mov rbp, rax	       449	bisect.c	CALL_12
0x400109d	    0x488905000000	            mov qword [0x040010a4], rax 	       449	bisect.c	CALL_12
0x40010a4	      0xe951ffffff	                           jmp 0x4000ffa	       449	bisect.c	CALL_12
0x40010a9	      0xe800000000	                          call 0x40010ae	       931	bisect.c	FUNCTION_34
0x40010ae	      0xbf00000000	                              mov edi, 0	       931	bisect.c	FUNCTION_34
0x40010b3	      0xe808f1ffff	                       call sym._.part.6	       931	bisect.c	FUNCTION_34
0x40010b8	          0x4889ee	                            mov rsi, rbp	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40010bb	          0x4889c7	                            mov rdi, rax	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40010be	            0x31c0	                            xor eax, eax	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
0x40010c0	      0xe800000000	                          call 0x40010c5	       921	bisect.c	FUNCTION_34	IF_1	ELSE_1	CALL_3
mark_for_removal	ELSE,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,2:DO,0	12
0x4000160	              0x53	                                push rbx	      1052	bisect.c	FUNCTION_39
0x4000161	          0x4889fe	                            mov rsi, rdi	      1052	bisect.c	FUNCTION_39
0x4000164	          0x4889cb	                            mov rbx, rcx	      1052	bisect.c	FUNCTION_39
0x4000167	      0xbf00000000	                              mov edi, 0	      1054	bisect.c	FUNCTION_39	CALL_1
0x400016c	            0x31c0	                            xor eax, eax	      1054	bisect.c	FUNCTION_39	CALL_1
0x400016e	      0xe800000000	                          call 0x4000173	      1054	bisect.c	FUNCTION_39	CALL_1
0x4000173	          0x4889df	                            mov rdi, rbx	      1055	bisect.c	FUNCTION_39	CALL_2
0x4000176	          0x4889c6	                            mov rsi, rax	      1055	bisect.c	FUNCTION_39	CALL_2
0x4000179	      0xe800000000	                          call 0x400017e	      1055	bisect.c	FUNCTION_39	CALL_2
0x400017e	            0x31c0	                            xor eax, eax	      1057	bisect.c	FUNCTION_39
0x4000180	              0x5b	                                 pop rbx	      1057	bisect.c	FUNCTION_39
0x4000181	              0xc3	                                     ret	      1057	bisect.c	FUNCTION_39
bisect_clean_state	ELSE,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0:CALL,21:DO,0	123
0x4002240	              0x53	                                push rbx	      1060	bisect.c	FUNCTION_40
0x4002241	      0xbe00000000	                              mov esi, 0	      1065	bisect.c	FUNCTION_40	CALL_1
0x4002246	      0xbf00000000	                              mov edi, 0	      1065	bisect.c	FUNCTION_40	CALL_1
0x400224b	        0x4883ec30	                           sub rsp, 0x30	      1060	bisect.c	FUNCTION_40
0x400224f	          0x4889e2	                            mov rdx, rsp	      1065	bisect.c	FUNCTION_40	CALL_1
0x4002252	      0x80642410fe	             and byte [rsp + 0x10], 0xfe	      1064	bisect.c	FUNCTION_40
0x4002257	    0x48c704240000	                      mov qword [rsp], 0	      1064	bisect.c	FUNCTION_40
0x400225f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1060	bisect.c	FUNCTION_40
0x4002268	      0x4889442428	             mov qword [rsp + 0x28], rax	      1060	bisect.c	FUNCTION_40
0x400226d	            0x31c0	                            xor eax, eax	      1060	bisect.c	FUNCTION_40
0x400226f	    0xc74424080000	                  mov dword [rsp + 8], 0	      1064	bisect.c	FUNCTION_40
0x4002277	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1064	bisect.c	FUNCTION_40
0x400227f	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1064	bisect.c	FUNCTION_40
0x4002288	      0xe800000000	                          call 0x400228d	      1065	bisect.c	FUNCTION_40	CALL_1
0x400228d	      0xbf00000000	                              mov edi, 0	      1066	bisect.c	FUNCTION_40	CALL_3
0x4002292	      0xe800000000	                          call 0x4002297	      1066	bisect.c	FUNCTION_40	CALL_3
0x4002297	          0x4889e7	                            mov rdi, rsp	      1066	bisect.c	FUNCTION_40	CALL_3
0x400229a	          0x4889c6	                            mov rsi, rax	      1066	bisect.c	FUNCTION_40	CALL_3
0x400229d	      0xe800000000	                          call 0x40022a2	      1066	bisect.c	FUNCTION_40	CALL_3
0x40022a2	      0xba01000000	                              mov edx, 1	      1067	bisect.c	FUNCTION_40	CALL_4
0x40022a7	          0x4889e6	                            mov rsi, rsp	      1067	bisect.c	FUNCTION_40	CALL_4
0x40022aa	      0xbf00000000	                              mov edi, 0	      1067	bisect.c	FUNCTION_40	CALL_4
0x40022af	      0xe800000000	                          call 0x40022b4	      1067	bisect.c	FUNCTION_40	CALL_4
0x40022b4	            0x31f6	                            xor esi, esi	      1069	bisect.c	FUNCTION_40	CALL_5
0x40022b6	          0x4889e7	                            mov rdi, rsp	      1069	bisect.c	FUNCTION_40	CALL_5
0x40022b9	      0x804c241001	                 or byte [rsp + 0x10], 1	      1068	bisect.c	FUNCTION_40
0x40022be	            0x89c3	                            mov ebx, eax	      1067	bisect.c	FUNCTION_40	CALL_4
0x40022c0	      0xe800000000	                          call 0x40022c5	      1069	bisect.c	FUNCTION_40	CALL_5
0x40022c5	    0x488b3d000000	            mov rdi, qword [0x040022cc] 	       444	bisect.c	CALL_7
0x40022cc	          0x4885ff	                           test rdi, rdi	       444	bisect.c	CALL_7
0x40022cf	     0xf84cb000000	                            je 0x40023a0	       444	bisect.c	CALL_7
0x40022d5	      0xe800000000	                          call 0x40022da	      1070	bisect.c	FUNCTION_40	CALL_7
0x40022da	    0x488b3d000000	            mov rdi, qword [0x040022e1] 	       445	bisect.c	CALL_8
0x40022e1	          0x4885ff	                           test rdi, rdi	       445	bisect.c	CALL_8
0x40022e4	     0xf84d6000000	                            je 0x40023c0	       445	bisect.c	CALL_8
0x40022ea	      0xe800000000	                          call 0x40022ef	      1071	bisect.c	FUNCTION_40	CALL_9
0x40022ef	    0x488b3d000000	            mov rdi, qword [0x040022f6] 	       448	bisect.c	CALL_11
0x40022f6	          0x4885ff	                           test rdi, rdi	       448	bisect.c	CALL_11
0x40022f9	     0xf84e1000000	                            je 0x40023e0	       448	bisect.c	CALL_11
0x40022ff	      0xe800000000	                          call 0x4002304	      1072	bisect.c	FUNCTION_40	CALL_11
0x4002304	    0x488b3d000000	            mov rdi, qword [0x0400230b] 	       443	bisect.c	CALL_6
0x400230b	          0x4885ff	                           test rdi, rdi	       443	bisect.c	CALL_6
0x400230e	     0xf84ec000000	                            je 0x4002400	       443	bisect.c	CALL_6
0x4002314	      0xe800000000	                          call 0x4002319	      1073	bisect.c	FUNCTION_40	CALL_13
0x4002319	    0x488b3d000000	            mov rdi, qword [0x04002320] 	       446	bisect.c	CALL_9
0x4002320	          0x4885ff	                           test rdi, rdi	       446	bisect.c	CALL_9
0x4002323	     0xf84f7000000	                            je 0x4002420	       446	bisect.c	CALL_9
0x4002329	      0xe800000000	                          call 0x400232e	      1074	bisect.c	FUNCTION_40	CALL_15
0x400232e	    0x488b3d000000	            mov rdi, qword [0x04002335] 	       449	bisect.c	CALL_12
0x4002335	          0x4885ff	                           test rdi, rdi	       449	bisect.c	CALL_12
0x4002338	     0xf8402010000	                            je 0x4002440	       449	bisect.c	CALL_12
0x400233e	      0xe800000000	                          call 0x4002343	      1075	bisect.c	FUNCTION_40	CALL_17
0x4002343	    0x488b3d000000	            mov rdi, qword [0x0400234a] 	       450	bisect.c	CALL_13
0x400234a	          0x4885ff	                           test rdi, rdi	       450	bisect.c	CALL_13
0x400234d	     0xf840d010000	                            je 0x4002460	       450	bisect.c	CALL_13
0x4002353	      0xe800000000	                          call 0x4002358	      1077	bisect.c	FUNCTION_40	CALL_19
0x4002358	    0x488b3d000000	            mov rdi, qword [0x0400235f] 	       447	bisect.c	CALL_10
0x400235f	          0x4885ff	                           test rdi, rdi	       447	bisect.c	CALL_10
0x4002362	            0x7424	                            je 0x4002388	       447	bisect.c	CALL_10
0x4002364	      0xe800000000	                          call 0x4002369	      1082	bisect.c	FUNCTION_40	CALL_21
0x4002369	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1085	bisect.c	FUNCTION_40
0x400236e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1085	bisect.c	FUNCTION_40
0x4002377	            0x89d8	                            mov eax, ebx	      1085	bisect.c	FUNCTION_40
0x4002379	     0xf85fc000000	                           jne 0x400247b	      1085	bisect.c	FUNCTION_40
0x400237f	        0x4883c430	                           add rsp, 0x30	      1085	bisect.c	FUNCTION_40
0x4002383	              0x5b	                                 pop rbx	      1085	bisect.c	FUNCTION_40
0x4002384	              0xc3	                                     ret	      1085	bisect.c	FUNCTION_40
0x4002385	           0xf1f00	                         nop dword [rax]	      1085	bisect.c	FUNCTION_40
0x4002388	      0xbf00000000	                              mov edi, 0	       447	bisect.c	CALL_10
0x400238d	            0x31c0	                            xor eax, eax	       447	bisect.c	CALL_10
0x400238f	      0xe800000000	                          call 0x4002394	       447	bisect.c	CALL_10
0x4002394	          0x4889c7	                            mov rdi, rax	       447	bisect.c	CALL_10
0x4002397	    0x488905000000	            mov qword [0x0400239e], rax 	       447	bisect.c	CALL_10
0x400239e	            0xebc4	                           jmp 0x4002364	       447	bisect.c	CALL_10
0x40023a0	      0xbf00000000	                              mov edi, 0	       444	bisect.c	CALL_7
0x40023a5	            0x31c0	                            xor eax, eax	       444	bisect.c	CALL_7
0x40023a7	      0xe800000000	                          call 0x40023ac	       444	bisect.c	CALL_7
0x40023ac	          0x4889c7	                            mov rdi, rax	       444	bisect.c	CALL_7
0x40023af	    0x488905000000	            mov qword [0x040023b6], rax 	       444	bisect.c	CALL_7
0x40023b6	      0xe91affffff	                           jmp 0x40022d5	       444	bisect.c	CALL_7
0x40023bb	       0xf1f440000	                   nop dword [rax + rax]	       444	bisect.c	CALL_7
0x40023c0	      0xbf00000000	                              mov edi, 0	       445	bisect.c	CALL_8
0x40023c5	            0x31c0	                            xor eax, eax	       445	bisect.c	CALL_8
0x40023c7	      0xe800000000	                          call 0x40023cc	       445	bisect.c	CALL_8
0x40023cc	          0x4889c7	                            mov rdi, rax	       445	bisect.c	CALL_8
0x40023cf	    0x488905000000	            mov qword [0x040023d6], rax 	       445	bisect.c	CALL_8
0x40023d6	      0xe90fffffff	                           jmp 0x40022ea	       445	bisect.c	CALL_8
0x40023db	       0xf1f440000	                   nop dword [rax + rax]	       445	bisect.c	CALL_8
0x40023e0	      0xbf00000000	                              mov edi, 0	       448	bisect.c	CALL_11
0x40023e5	            0x31c0	                            xor eax, eax	       448	bisect.c	CALL_11
0x40023e7	      0xe800000000	                          call 0x40023ec	       448	bisect.c	CALL_11
0x40023ec	          0x4889c7	                            mov rdi, rax	       448	bisect.c	CALL_11
0x40023ef	    0x488905000000	            mov qword [0x040023f6], rax 	       448	bisect.c	CALL_11
0x40023f6	      0xe904ffffff	                           jmp 0x40022ff	       448	bisect.c	CALL_11
0x40023fb	       0xf1f440000	                   nop dword [rax + rax]	       448	bisect.c	CALL_11
0x4002400	      0xbf00000000	                              mov edi, 0	       443	bisect.c	CALL_6
0x4002405	            0x31c0	                            xor eax, eax	       443	bisect.c	CALL_6
0x4002407	      0xe800000000	                          call 0x400240c	       443	bisect.c	CALL_6
0x400240c	          0x4889c7	                            mov rdi, rax	       443	bisect.c	CALL_6
0x400240f	    0x488905000000	            mov qword [0x04002416], rax 	       443	bisect.c	CALL_6
0x4002416	      0xe9f9feffff	                           jmp 0x4002314	       443	bisect.c	CALL_6
0x400241b	       0xf1f440000	                   nop dword [rax + rax]	       443	bisect.c	CALL_6
0x4002420	      0xbf00000000	                              mov edi, 0	       446	bisect.c	CALL_9
0x4002425	            0x31c0	                            xor eax, eax	       446	bisect.c	CALL_9
0x4002427	      0xe800000000	                          call 0x400242c	       446	bisect.c	CALL_9
0x400242c	          0x4889c7	                            mov rdi, rax	       446	bisect.c	CALL_9
0x400242f	    0x488905000000	            mov qword [0x04002436], rax 	       446	bisect.c	CALL_9
0x4002436	      0xe9eefeffff	                           jmp 0x4002329	       446	bisect.c	CALL_9
0x400243b	       0xf1f440000	                   nop dword [rax + rax]	       446	bisect.c	CALL_9
0x4002440	      0xbf00000000	                              mov edi, 0	       449	bisect.c	CALL_12
0x4002445	            0x31c0	                            xor eax, eax	       449	bisect.c	CALL_12
0x4002447	      0xe800000000	                          call 0x400244c	       449	bisect.c	CALL_12
0x400244c	          0x4889c7	                            mov rdi, rax	       449	bisect.c	CALL_12
0x400244f	    0x488905000000	            mov qword [0x04002456], rax 	       449	bisect.c	CALL_12
0x4002456	      0xe9e3feffff	                           jmp 0x400233e	       449	bisect.c	CALL_12
0x400245b	       0xf1f440000	                   nop dword [rax + rax]	       449	bisect.c	CALL_12
0x4002460	      0xbf00000000	                              mov edi, 0	       450	bisect.c	CALL_13
0x4002465	            0x31c0	                            xor eax, eax	       450	bisect.c	CALL_13
0x4002467	      0xe800000000	                          call 0x400246c	       450	bisect.c	CALL_13
0x400246c	          0x4889c7	                            mov rdi, rax	       450	bisect.c	CALL_13
0x400246f	    0x488905000000	            mov qword [0x04002476], rax 	       450	bisect.c	CALL_13
0x4002476	      0xe9d8feffff	                           jmp 0x4002353	       450	bisect.c	CALL_13
0x400247b	      0xe800000000	               call obj.argv_show_branch	      1085	bisect.c	FUNCTION_40
register_ref	ELSE,2:WHILE,0:FOR,0:SWITCH,0:IF,3:functions,0:CALL,10:DO,0	70
0x4000040	            0x4154	                                push r12	       419	bisect.c	FUNCTION_12
0x4000042	              0x55	                                push rbp	       419	bisect.c	FUNCTION_12
0x4000043	          0x4889fd	                            mov rbp, rdi	       419	bisect.c	FUNCTION_12
0x4000046	              0x53	                                push rbx	       419	bisect.c	FUNCTION_12
0x4000047	          0x4989f4	                            mov r12, rsi	       419	bisect.c	FUNCTION_12
0x400004a	        0x4883ec20	                           sub rsp, 0x20	       419	bisect.c	FUNCTION_12
0x400004e	    0x488b1d000000	            mov rbx, qword [0x04000055] 	       421	bisect.c	FUNCTION_12	CALL_1
0x4000055	    0x64488b042528	                mov rax, qword fs:[0x28]	       419	bisect.c	FUNCTION_12
0x400005e	      0x4889442418	             mov qword [rsp + 0x18], rax	       419	bisect.c	FUNCTION_12
0x4000063	            0x31c0	                            xor eax, eax	       419	bisect.c	FUNCTION_12
0x4000065	    0x48c704240000	                      mov qword [rsp], 0	       420	bisect.c	FUNCTION_12
0x400006d	    0x48c744240800	                  mov qword [rsp + 8], 0	       420	bisect.c	FUNCTION_12
0x4000076	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000079	    0x48c744241000	               mov qword [rsp + 0x10], 0	       420	bisect.c	FUNCTION_12
0x4000082	      0xe800000000	                          call 0x4000087	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000087	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_72	CALL_2
0x400008a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_72	CALL_2
0x400008d	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000090	      0xe800000000	                          call 0x4000095	       279	strbuf.h	FUNCTION_72	CALL_2
0x4000095	      0xba01000000	                              mov edx, 1	       279	strbuf.h	FUNCTION_72	CALL_2
0x400009a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_72	CALL_2
0x400009f	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_72	CALL_2
0x40000a2	      0xe800000000	                          call 0x40000a7	       279	strbuf.h	FUNCTION_72	CALL_2
0x40000a7	    0x488b35000000	            mov rsi, qword [0x040000ae] 	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x40000ae	          0x4889ef	                            mov rdi, rbp	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x40000b1	      0xe800000000	                          call 0x40000b6	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x40000b6	            0x85c0	                           test eax, eax	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x40000b8	            0x7476	                            je 0x4000130	       424	bisect.c	FUNCTION_12	IF_1	CALL_3
0x40000ba	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x40000bf	          0x4889ef	                            mov rdi, rbp	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x40000c2	      0xe800000000	                          call 0x40000c7	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x40000c7	            0x85c0	                           test eax, eax	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x40000c9	            0x754d	                           jne 0x4000118	       427	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_6
0x40000cb	      0xbe00000000	                              mov esi, 0	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x40000d0	          0x4889ef	                            mov rdi, rbp	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x40000d3	      0xe800000000	                          call 0x40000d8	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x40000d8	            0x85c0	                           test eax, eax	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x40000da	            0x7414	                            je 0x40000f0	       429	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_8
0x40000dc	          0x4c89e6	                            mov rsi, r12	       430	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_9
0x40000df	      0xbf00000000	                              mov edi, 0	       430	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_9
0x40000e4	      0xe800000000	                          call 0x40000e9	       430	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_9
0x40000e9	     0xf1f80000000	                         nop dword [rax]	       430	bisect.c	FUNCTION_12	ELSE_2	IF_3	CALL_9
0x40000f0	          0x4889e7	                            mov rdi, rsp	       433	bisect.c	FUNCTION_12	CALL_10
0x40000f3	      0xe800000000	                          call 0x40000f8	       433	bisect.c	FUNCTION_12	CALL_10
0x40000f8	            0x31c0	                            xor eax, eax	       436	bisect.c	FUNCTION_12
0x40000fa	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       436	bisect.c	FUNCTION_12
0x40000ff	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       436	bisect.c	FUNCTION_12
0x4000108	            0x7551	                           jne 0x400015b	       436	bisect.c	FUNCTION_12
0x400010a	        0x4883c420	                           add rsp, 0x20	       436	bisect.c	FUNCTION_12
0x400010e	              0x5b	                                 pop rbx	       436	bisect.c	FUNCTION_12
0x400010f	              0x5d	                                 pop rbp	       436	bisect.c	FUNCTION_12
0x4000110	            0x415c	                                 pop r12	       436	bisect.c	FUNCTION_12
0x4000112	              0xc3	                                     ret	       436	bisect.c	FUNCTION_12
0x4000113	       0xf1f440000	                   nop dword [rax + rax]	       436	bisect.c	FUNCTION_12
0x4000118	          0x4c89e6	                            mov rsi, r12	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x400011b	      0xbf00000000	                              mov edi, 0	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000120	      0xe800000000	                          call 0x4000125	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000125	            0xebc9	                           jmp 0x40000f0	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000127	    0x660f1f840000	                    nop word [rax + rax]	       428	bisect.c	FUNCTION_12	ELSE_1	IF_2	CALL_7
0x4000130	      0xbf14000000	                           mov edi, 0x14	       425	bisect.c	FUNCTION_12	IF_1	CALL_4
0x4000135	      0xe800000000	                          call 0x400013a	       425	bisect.c	FUNCTION_12	IF_1	CALL_4
0x400013a	        0x498b1424	                    mov rdx, qword [r12]	        53	string3.h	FUNCTION_79	CALL_3
0x400013e	    0x488905000000	            mov qword [0x04000145], rax 	       425	bisect.c	FUNCTION_12	IF_1	CALL_4
0x4000145	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_79	CALL_3
0x4000148	      0x498b542408	                mov rdx, qword [r12 + 8]	        53	string3.h	FUNCTION_79	CALL_3
0x400014d	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_79	CALL_3
0x4000151	      0x418b542410	            mov edx, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_79	CALL_3
0x4000156	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_79	CALL_3
0x4000159	            0xeb95	                           jmp 0x40000f0	        53	string3.h	FUNCTION_79	CALL_3
0x400015b	      0xe800000000	               call sym.mark_for_removal	       436	bisect.c	FUNCTION_12
