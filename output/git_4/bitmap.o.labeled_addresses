bitmap_set	ELSE,0:WHILE,0:functions,0:SWITCH,0:IF,1:FOR,0:CALL,1:DO,0	36
0x4000070	            0x4155	                                push r13	        34	bitmap.c	FUNCTION_2
0x4000072	            0x4154	                                push r12	        34	bitmap.c	FUNCTION_2
0x4000074	          0x4989f5	                            mov r13, rsi	        34	bitmap.c	FUNCTION_2
0x4000077	              0x55	                                push rbp	        34	bitmap.c	FUNCTION_2
0x4000078	              0x53	                                push rbx	        34	bitmap.c	FUNCTION_2
0x4000079	          0x4889f5	                            mov rbp, rsi	        35	bitmap.c	FUNCTION_2
0x400007c	        0x48c1ed06	                              shr rbp, 6	        35	bitmap.c	FUNCTION_2
0x4000080	          0x4889fb	                            mov rbx, rdi	        34	bitmap.c	FUNCTION_2
0x4000083	        0x4883ec08	                              sub rsp, 8	        34	bitmap.c	FUNCTION_2
0x4000087	        0x4c8b6708	                mov r12, qword [rdi + 8]	        37	bitmap.c	FUNCTION_2	IF_1
0x400008b	          0x4c39e5	                            cmp rbp, r12	        37	bitmap.c	FUNCTION_2	IF_1
0x400008e	            0x7231	                            jb 0x40000c1	        37	bitmap.c	FUNCTION_2	IF_1
0x4000090	      0x488d442d00	                    lea rax, [rbp + rbp]	        39	bitmap.c	FUNCTION_2	IF_1
0x4000095	          0x4889ee	                            mov rsi, rbp	        40	bitmap.c	FUNCTION_2	IF_1
0x4000098	        0x48c1e604	                              shl rsi, 4	        40	bitmap.c	FUNCTION_2	IF_1
0x400009c	        0x48894708	                mov qword [rdi + 8], rax	        39	bitmap.c	FUNCTION_2	IF_1
0x40000a0	          0x488b3f	                    mov rdi, qword [rdi]	        40	bitmap.c	FUNCTION_2	IF_1
0x40000a3	      0xe800000000	                          call 0x40000a8	        40	bitmap.c	FUNCTION_2	IF_1
0x40000a8	        0x488b5308	                mov rdx, qword [rbx + 8]	        90	string3.h	FUNCTION_17	CALL_6
0x40000ac	        0x4a8d3ce0	                  lea rdi, [rax + r12*8]	        90	string3.h	FUNCTION_17	CALL_6
0x40000b0	          0x488903	                    mov qword [rbx], rax	        40	bitmap.c	FUNCTION_2	IF_1
0x40000b3	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_17	CALL_6
0x40000b5	          0x4c29e2	                            sub rdx, r12	        90	string3.h	FUNCTION_17	CALL_6
0x40000b8	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_17	CALL_6
0x40000bc	      0xe800000000	                          call 0x40000c1	        90	string3.h	FUNCTION_17	CALL_6
0x40000c1	          0x488b13	                    mov rdx, qword [rbx]	        45	bitmap.c	FUNCTION_2
0x40000c4	          0x4489e9	                           mov ecx, r13d	        45	bitmap.c	FUNCTION_2
0x40000c7	      0xb801000000	                              mov eax, 1	        45	bitmap.c	FUNCTION_2
0x40000cc	          0x48d3e0	                             shl rax, cl	        45	bitmap.c	FUNCTION_2
0x40000cf	        0x480904ea	             or qword [rdx + rbp*8], rax	        45	bitmap.c	FUNCTION_2
0x40000d3	        0x4883c408	                              add rsp, 8	        46	bitmap.c	FUNCTION_2
0x40000d7	              0x5b	                                 pop rbx	        46	bitmap.c	FUNCTION_2
0x40000d8	              0x5d	                                 pop rbp	        46	bitmap.c	FUNCTION_2
0x40000d9	            0x415c	                                 pop r12	        46	bitmap.c	FUNCTION_2
0x40000db	            0x415d	                                 pop r13	        46	bitmap.c	FUNCTION_2
0x40000dd	              0xc3	                                     ret	        46	bitmap.c	FUNCTION_2
bitmap_reset	ELSE,0:WHILE,0:functions,0:SWITCH,0:IF,0:FOR,0:CALL,1:DO,0	5
0x40008f0	        0x488b4708	                mov rax, qword [rdi + 8]	        90	string3.h	FUNCTION_17	CALL_6
0x40008f4	          0x488b3f	                    mov rdi, qword [rdi]	        90	string3.h	FUNCTION_17	CALL_6
0x40008f7	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_17	CALL_6
0x40008f9	    0x488d14c50000	                        lea rdx, [rax*8]	        90	string3.h	FUNCTION_17	CALL_6
0x4000901	      0xe900000000	                           jmp 0x4000906	        90	string3.h	FUNCTION_17	CALL_6
bitmap_free	ELSE,0:WHILE,0:functions,0:SWITCH,0:IF,1:FOR,0:CALL,2:DO,0	11
0x4000910	          0x4885ff	                           test rdi, rdi	       207	bitmap.c	FUNCTION_13	IF_1
0x4000913	            0x741b	                            je 0x4000930	       207	bitmap.c	FUNCTION_13	IF_1
0x4000915	              0x53	                                push rbx	       206	bitmap.c	FUNCTION_13
0x4000916	          0x4889fb	                            mov rbx, rdi	       206	bitmap.c	FUNCTION_13
0x4000919	          0x488b3f	                    mov rdi, qword [rdi]	       210	bitmap.c	FUNCTION_13	CALL_1
0x400091c	      0xe800000000	                          call 0x4000921	       210	bitmap.c	FUNCTION_13	CALL_1
0x4000921	          0x4889df	                            mov rdi, rbx	       211	bitmap.c	FUNCTION_13	CALL_2
0x4000924	              0x5b	                                 pop rbx	       212	bitmap.c	FUNCTION_13
0x4000925	      0xe900000000	                           jmp 0x400092a	       211	bitmap.c	FUNCTION_13	CALL_2
0x400092a	    0x660f1f440000	                    nop word [rax + rax]	       211	bitmap.c	FUNCTION_13	CALL_2
0x4000930	            0xf3c3	                                     ret	       211	bitmap.c	FUNCTION_13	CALL_2
bitmap_and_not	ELSE,0:WHILE,0:functions,0:SWITCH,0:IF,0:FOR,1:CALL,0:DO,0	65
0x40002e0	        0x488b4f08	                mov rcx, qword [rdi + 8]	       110	bitmap.c	FUNCTION_7
0x40002e4	        0x48394e08	                cmp qword [rsi + 8], rcx	       110	bitmap.c	FUNCTION_7
0x40002e8	      0x480f464e08	             cmovbe rcx, qword [rsi + 8]	       110	bitmap.c	FUNCTION_7
0x40002ed	          0x4885c9	                           test rcx, rcx	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002f0	     0xf84ac000000	                            je 0x40003a2	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002f6	          0x488b17	                    mov rdx, qword [rdi]	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002f9	          0x488b3e	                    mov rdi, qword [rsi]	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002fc	        0x488d4710	                   lea rax, [rdi + 0x10]	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000300	          0x4839c2	                            cmp rdx, rax	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000303	        0x488d4210	                   lea rax, [rdx + 0x10]	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000307	        0x400f93c6	                               setae sil	       115	bitmap.c	FUNCTION_7	FOR_1
0x400030b	          0x4839c7	                            cmp rdi, rax	       115	bitmap.c	FUNCTION_7	FOR_1
0x400030e	           0xf93c0	                                setae al	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000311	          0x4008c6	                              or sil, al	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000314	     0xf848e000000	                            je 0x40003a8	       115	bitmap.c	FUNCTION_7	FOR_1
0x400031a	        0x4883f907	                              cmp rcx, 7	       115	bitmap.c	FUNCTION_7	FOR_1
0x400031e	     0xf8684000000	                           jbe 0x40003a8	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000324	          0x4889d0	                            mov rax, rdx	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000327	              0x53	                                push rbx	       109	bitmap.c	FUNCTION_7
0x4000328	        0x48c1e03c	                           shl rax, 0x3c	       109	bitmap.c	FUNCTION_7
0x400032c	        0x48c1e83f	                           shr rax, 0x3f	       109	bitmap.c	FUNCTION_7
0x4000330	          0x4839c8	                            cmp rax, rcx	       109	bitmap.c	FUNCTION_7
0x4000333	        0x480f47c1	                          cmova rax, rcx	       109	bitmap.c	FUNCTION_7
0x4000337	          0x4531d2	                          xor r10d, r10d	       115	bitmap.c	FUNCTION_7	FOR_1
0x400033a	          0x4885c0	                           test rax, rax	       115	bitmap.c	FUNCTION_7	FOR_1
0x400033d	            0x740f	                            je 0x400034e	       115	bitmap.c	FUNCTION_7	FOR_1
0x400033f	          0x488b37	                    mov rsi, qword [rdi]	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000342	    0x41ba01000000	                             mov r10d, 1	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000348	          0x48f7d6	                                 not rsi	       116	bitmap.c	FUNCTION_7	FOR_1
0x400034b	          0x482132	                    and qword [rdx], rsi	       116	bitmap.c	FUNCTION_7	FOR_1
0x400034e	          0x4829c1	                            sub rcx, rax	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000351	        0x48c1e003	                              shl rax, 3	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000355	            0x31f6	                            xor esi, esi	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000357	        0x4c8d49fe	                       lea r9, [rcx - 2]	       115	bitmap.c	FUNCTION_7	FOR_1
0x400035b	        0x4c8d1c02	                    lea r11, [rdx + rax]	       115	bitmap.c	FUNCTION_7	FOR_1
0x400035f	          0x4531c0	                            xor r8d, r8d	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000362	          0x4801f8	                            add rax, rdi	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000365	          0x49d1e9	                               shr r9, 1	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000368	        0x4983c101	                               add r9, 1	       115	bitmap.c	FUNCTION_7	FOR_1
0x400036c	        0x4b8d1c09	                      lea rbx, [r9 + r9]	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000370	      0xf30f6f0430	        movdqu xmm0, xmmword [rax + rsi]	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000375	        0x4983c001	                               add r8, 1	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000379	    0x66410fdf0433	         pandn xmm0, xmmword [r11 + rsi]	       116	bitmap.c	FUNCTION_7	FOR_1
0x400037f	      0x410f290433	        movaps xmmword [r11 + rsi], xmm0	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000384	        0x4883c610	                           add rsi, 0x10	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000388	          0x4d39c8	                              cmp r8, r9	       116	bitmap.c	FUNCTION_7	FOR_1
0x400038b	            0x72e3	                            jb 0x4000370	       116	bitmap.c	FUNCTION_7	FOR_1
0x400038d	          0x4839d9	                            cmp rcx, rbx	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000390	        0x498d041a	                    lea rax, [r10 + rbx]	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000394	            0x740b	                            je 0x40003a1	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000396	        0x488b0cc7	            mov rcx, qword [rdi + rax*8]	       116	bitmap.c	FUNCTION_7	FOR_1
0x400039a	          0x48f7d1	                                 not rcx	       116	bitmap.c	FUNCTION_7	FOR_1
0x400039d	        0x48210cc2	            and qword [rdx + rax*8], rcx	       116	bitmap.c	FUNCTION_7	FOR_1
0x40003a1	              0x5b	                                 pop rbx	       117	bitmap.c	FUNCTION_7
0x40003a2	            0xf3c3	                                     ret	       117	bitmap.c	FUNCTION_7
0x40003a4	         0xf1f4000	                         nop dword [rax]	       117	bitmap.c	FUNCTION_7
0x40003a8	            0x31c0	                            xor eax, eax	       115	bitmap.c	FUNCTION_7	FOR_1
0x40003aa	    0x660f1f440000	                    nop word [rax + rax]	       115	bitmap.c	FUNCTION_7	FOR_1
0x40003b0	        0x488b34c7	            mov rsi, qword [rdi + rax*8]	       116	bitmap.c	FUNCTION_7	FOR_1
0x40003b4	          0x48f7d6	                                 not rsi	       116	bitmap.c	FUNCTION_7	FOR_1
0x40003b7	        0x482134c2	            and qword [rdx + rax*8], rsi	       116	bitmap.c	FUNCTION_7	FOR_1
0x40003bb	        0x4883c001	                              add rax, 1	       115	bitmap.c	FUNCTION_7	FOR_1
0x40003bf	          0x4839c1	                            cmp rcx, rax	       115	bitmap.c	FUNCTION_7	FOR_1
0x40003c2	            0x75ec	                           jne 0x40003b0	       115	bitmap.c	FUNCTION_7	FOR_1
0x40003c4	            0xf3c3	                                     ret	       115	bitmap.c	FUNCTION_7	FOR_1
bitmap_equals	ELSE,1:WHILE,0:functions,0:SWITCH,0:IF,3:FOR,2:CALL,0:DO,0	43
0x4000860	        0x488b4708	                mov rax, qword [rdi + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x4000864	        0x4c8b4608	                 mov r8, qword [rsi + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x4000868	          0x4c39c0	                             cmp rax, r8	       179	bitmap.c	FUNCTION_11	IF_1
0x400086b	          0x4889c2	                            mov rdx, rax	       179	bitmap.c	FUNCTION_11	IF_1
0x400086e	            0x720f	                            jb 0x400087f	       179	bitmap.c	FUNCTION_11	IF_1
0x4000870	          0x4c89c2	                             mov rdx, r8	       179	bitmap.c	FUNCTION_11	IF_1
0x4000873	          0x4989c0	                             mov r8, rax	       179	bitmap.c	FUNCTION_11	IF_1
0x4000876	          0x4889f0	                            mov rax, rsi	       179	bitmap.c	FUNCTION_11	IF_1
0x4000879	          0x4889fe	                            mov rsi, rdi	       179	bitmap.c	FUNCTION_11	IF_1
0x400087c	          0x4889c7	                            mov rdi, rax	       179	bitmap.c	FUNCTION_11	IF_1
0x400087f	          0x4885d2	                           test rdx, rdx	       187	bitmap.c	FUNCTION_11	FOR_1
0x4000882	            0x742f	                            je 0x40008b3	       187	bitmap.c	FUNCTION_11	FOR_1
0x4000884	          0x488b0f	                    mov rcx, qword [rdi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000887	          0x488b3e	                    mov rdi, qword [rsi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400088a	          0x488b07	                    mov rax, qword [rdi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400088d	          0x483901	                    cmp qword [rcx], rax	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000890	            0x754e	                           jne 0x40008e0	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000892	            0x31c0	                            xor eax, eax	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000894	            0xeb14	                           jmp 0x40008aa	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008a0	        0x4c8b0cc7	             mov r9, qword [rdi + rax*8]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008a4	        0x4c390cc1	            cmp qword [rcx + rax*8], r9 	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008a8	            0x7536	                           jne 0x40008e0	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008aa	        0x4883c001	                              add rax, 1	       187	bitmap.c	FUNCTION_11	FOR_1
0x40008ae	          0x4839d0	                            cmp rax, rdx	       187	bitmap.c	FUNCTION_11	FOR_1
0x40008b1	            0x75ed	                           jne 0x40008a0	       187	bitmap.c	FUNCTION_11	FOR_1
0x40008b3	          0x4c39c2	                             cmp rdx, r8	       192	bitmap.c	FUNCTION_11	FOR_2
0x40008b6	            0x7320	                           jae 0x40008d8	       192	bitmap.c	FUNCTION_11	FOR_2
0x40008b8	          0x488b06	                    mov rax, qword [rsi]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x40008bb	      0x48833cd000	              cmp qword [rax + rdx*8], 0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x40008c0	            0x740d	                            je 0x40008cf	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x40008c2	            0xeb1c	                           jmp 0x40008e0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x40008c4	         0xf1f4000	                         nop dword [rax]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x40008c8	      0x48833cd000	              cmp qword [rax + rdx*8], 0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x40008cd	            0x7511	                           jne 0x40008e0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x40008cf	        0x4883c201	                              add rdx, 1	       192	bitmap.c	FUNCTION_11	FOR_2
0x40008d3	          0x4c39c2	                             cmp rdx, r8	       192	bitmap.c	FUNCTION_11	FOR_2
0x40008d6	            0x72f0	                            jb 0x40008c8	       192	bitmap.c	FUNCTION_11	FOR_2
0x40008d8	      0xb801000000	                              mov eax, 1	       197	bitmap.c	FUNCTION_11
0x40008dd	              0xc3	                                     ret	       197	bitmap.c	FUNCTION_11
0x40008de	            0x6690	                                     nop	       197	bitmap.c	FUNCTION_11
0x40008e0	            0x31c0	                            xor eax, eax	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40008e2	              0xc3	                                     ret	       198	bitmap.c	FUNCTION_11
bitmap_popcount	ELSE,0:WHILE,0:functions,0:SWITCH,0:IF,0:FOR,1:CALL,1:DO,0	200
0x4000550	        0x4c8b4708	                 mov r8, qword [rdi + 8]	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000554	          0x4d85c0	                             test r8, r8	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000557	     0xf84f3020000	                            je 0x4000850	       168	bitmap.c	FUNCTION_10	FOR_1
0x400055d	              0x55	                                push rbp	       165	bitmap.c	FUNCTION_10
0x400055e	              0x53	                                push rbx	       165	bitmap.c	FUNCTION_10
0x400055f	          0x4c8b1f	                    mov r11, qword [rdi]	       165	bitmap.c	FUNCTION_10
0x4000562	          0x4c89df	                            mov rdi, r11	       165	bitmap.c	FUNCTION_10
0x4000565	        0x48c1e73c	                           shl rdi, 0x3c	       165	bitmap.c	FUNCTION_10
0x4000569	        0x48c1ef3f	                           shr rdi, 0x3f	       165	bitmap.c	FUNCTION_10
0x400056d	          0x4c39c7	                             cmp rdi, r8	       165	bitmap.c	FUNCTION_10
0x4000570	        0x490f47f8	                           cmova rdi, r8	       165	bitmap.c	FUNCTION_10
0x4000574	        0x4983f804	                               cmp r8, 4	       165	bitmap.c	FUNCTION_10
0x4000578	     0xf87e2010000	                            ja 0x4000760	       165	bitmap.c	FUNCTION_10
0x400057e	          0x4c89c7	                             mov rdi, r8	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000581	          0x498b03	                    mov rax, qword [r11]	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000584	    0x48be55555555	          movabs rsi, 0x5555555555555555	        34	ewok.h	FUNCTION_26
0x400058e	    0x49ba33333333	          movabs r10, 0x3333333333333333	        35	ewok.h	FUNCTION_26
0x4000598	    0x49b90f0f0f0f	            movabs r9, 0xf0f0f0f0f0f0f0f	        36	ewok.h	FUNCTION_26
0x40005a2	    0x48bb01010101	           movabs rbx, 0x101010101010101	        37	ewok.h	FUNCTION_26
0x40005ac	      0xbd01000000	                              mov ebp, 1	       168	bitmap.c	FUNCTION_10	FOR_1
0x40005b1	          0x4889c2	                            mov rdx, rax	        34	ewok.h	FUNCTION_26
0x40005b4	          0x4821f0	                            and rax, rsi	        34	ewok.h	FUNCTION_26
0x40005b7	          0x48d1ea	                              shr rdx, 1	        34	ewok.h	FUNCTION_26
0x40005ba	          0x4821f2	                            and rdx, rsi	        34	ewok.h	FUNCTION_26
0x40005bd	          0x4801c2	                            add rdx, rax	        34	ewok.h	FUNCTION_26
0x40005c0	          0x4889d0	                            mov rax, rdx	        35	ewok.h	FUNCTION_26
0x40005c3	        0x48c1ea02	                              shr rdx, 2	        35	ewok.h	FUNCTION_26
0x40005c7	          0x4c21d2	                            and rdx, r10	        35	ewok.h	FUNCTION_26
0x40005ca	          0x4c21d0	                            and rax, r10	        35	ewok.h	FUNCTION_26
0x40005cd	          0x4801d0	                            add rax, rdx	        35	ewok.h	FUNCTION_26
0x40005d0	          0x4889c2	                            mov rdx, rax	        36	ewok.h	FUNCTION_26
0x40005d3	        0x48c1e804	                              shr rax, 4	        36	ewok.h	FUNCTION_26
0x40005d7	          0x4c21ca	                             and rdx, r9	        36	ewok.h	FUNCTION_26
0x40005da	          0x4c21c8	                             and rax, r9	        36	ewok.h	FUNCTION_26
0x40005dd	          0x4801d0	                            add rax, rdx	        37	ewok.h	FUNCTION_26
0x40005e0	        0x480fafc3	                           imul rax, rbx	        37	ewok.h	FUNCTION_26
0x40005e4	        0x48c1e838	                           shr rax, 0x38	        37	ewok.h	FUNCTION_26
0x40005e8	        0x4883ff01	                              cmp rdi, 1	        37	ewok.h	FUNCTION_26
0x40005ec	     0xf84d9000000	                            je 0x40006cb	        37	ewok.h	FUNCTION_26
0x40005f2	        0x498b5308	                mov rdx, qword [r11 + 8]	       169	bitmap.c	FUNCTION_10	CALL_1
0x40005f6	      0xbd02000000	                              mov ebp, 2	       168	bitmap.c	FUNCTION_10	FOR_1
0x40005fb	          0x4889d1	                            mov rcx, rdx	        34	ewok.h	FUNCTION_26
0x40005fe	          0x4821f2	                            and rdx, rsi	        34	ewok.h	FUNCTION_26
0x4000601	          0x48d1e9	                              shr rcx, 1	        34	ewok.h	FUNCTION_26
0x4000604	          0x4821f1	                            and rcx, rsi	        34	ewok.h	FUNCTION_26
0x4000607	          0x4801d1	                            add rcx, rdx	        34	ewok.h	FUNCTION_26
0x400060a	          0x4889ca	                            mov rdx, rcx	        35	ewok.h	FUNCTION_26
0x400060d	        0x48c1e902	                              shr rcx, 2	        35	ewok.h	FUNCTION_26
0x4000611	          0x4c21d1	                            and rcx, r10	        35	ewok.h	FUNCTION_26
0x4000614	          0x4c21d2	                            and rdx, r10	        35	ewok.h	FUNCTION_26
0x4000617	          0x4801ca	                            add rdx, rcx	        35	ewok.h	FUNCTION_26
0x400061a	          0x4889d1	                            mov rcx, rdx	        36	ewok.h	FUNCTION_26
0x400061d	        0x48c1ea04	                              shr rdx, 4	        36	ewok.h	FUNCTION_26
0x4000621	          0x4c21c9	                             and rcx, r9	        36	ewok.h	FUNCTION_26
0x4000624	          0x4c21ca	                             and rdx, r9	        36	ewok.h	FUNCTION_26
0x4000627	          0x4801ca	                            add rdx, rcx	       169	bitmap.c	FUNCTION_10	CALL_1
0x400062a	        0x480fafd3	                           imul rdx, rbx	       169	bitmap.c	FUNCTION_10	CALL_1
0x400062e	        0x48c1ea38	                           shr rdx, 0x38	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000632	          0x4801d0	                            add rax, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000635	        0x4883ff02	                              cmp rdi, 2	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000639	     0xf848c000000	                            je 0x40006cb	       169	bitmap.c	FUNCTION_10	CALL_1
0x400063f	        0x498b5310	            mov rdx, qword [r11 + 0x10] 	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000643	      0xbd03000000	                              mov ebp, 3	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000648	          0x4889d1	                            mov rcx, rdx	        34	ewok.h	FUNCTION_26
0x400064b	          0x4821f2	                            and rdx, rsi	        34	ewok.h	FUNCTION_26
0x400064e	          0x48d1e9	                              shr rcx, 1	        34	ewok.h	FUNCTION_26
0x4000651	          0x4821f1	                            and rcx, rsi	        34	ewok.h	FUNCTION_26
0x4000654	          0x4801d1	                            add rcx, rdx	        34	ewok.h	FUNCTION_26
0x4000657	          0x4889ca	                            mov rdx, rcx	        35	ewok.h	FUNCTION_26
0x400065a	        0x48c1e902	                              shr rcx, 2	        35	ewok.h	FUNCTION_26
0x400065e	          0x4c21d1	                            and rcx, r10	        35	ewok.h	FUNCTION_26
0x4000661	          0x4c21d2	                            and rdx, r10	        35	ewok.h	FUNCTION_26
0x4000664	          0x4801ca	                            add rdx, rcx	        35	ewok.h	FUNCTION_26
0x4000667	          0x4889d1	                            mov rcx, rdx	        36	ewok.h	FUNCTION_26
0x400066a	        0x48c1ea04	                              shr rdx, 4	        36	ewok.h	FUNCTION_26
0x400066e	          0x4c21c9	                             and rcx, r9	        36	ewok.h	FUNCTION_26
0x4000671	          0x4c21ca	                             and rdx, r9	        36	ewok.h	FUNCTION_26
0x4000674	          0x4801ca	                            add rdx, rcx	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000677	        0x480fafd3	                           imul rdx, rbx	       169	bitmap.c	FUNCTION_10	CALL_1
0x400067b	        0x48c1ea38	                           shr rdx, 0x38	       169	bitmap.c	FUNCTION_10	CALL_1
0x400067f	          0x4801d0	                            add rax, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000682	        0x4883ff04	                              cmp rdi, 4	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000686	            0x7543	                           jne 0x40006cb	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000688	        0x498b4b18	            mov rcx, qword [r11 + 0x18] 	       169	bitmap.c	FUNCTION_10	CALL_1
0x400068c	      0xbd04000000	                              mov ebp, 4	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000691	          0x4889ca	                            mov rdx, rcx	        34	ewok.h	FUNCTION_26
0x4000694	          0x48d1ea	                              shr rdx, 1	        34	ewok.h	FUNCTION_26
0x4000697	          0x4821f2	                            and rdx, rsi	        34	ewok.h	FUNCTION_26
0x400069a	          0x4821ce	                            and rsi, rcx	        34	ewok.h	FUNCTION_26
0x400069d	          0x4801d6	                            add rsi, rdx	        34	ewok.h	FUNCTION_26
0x40006a0	          0x4889f2	                            mov rdx, rsi	        35	ewok.h	FUNCTION_26
0x40006a3	        0x48c1ee02	                              shr rsi, 2	        35	ewok.h	FUNCTION_26
0x40006a7	          0x4c21d2	                            and rdx, r10	        35	ewok.h	FUNCTION_26
0x40006aa	          0x4c21d6	                            and rsi, r10	        35	ewok.h	FUNCTION_26
0x40006ad	          0x4801d6	                            add rsi, rdx	        35	ewok.h	FUNCTION_26
0x40006b0	          0x4889f2	                            mov rdx, rsi	        36	ewok.h	FUNCTION_26
0x40006b3	        0x48c1ee04	                              shr rsi, 4	        36	ewok.h	FUNCTION_26
0x40006b7	          0x4c21ca	                             and rdx, r9	        36	ewok.h	FUNCTION_26
0x40006ba	          0x4921f1	                             and r9, rsi	        36	ewok.h	FUNCTION_26
0x40006bd	          0x4901d1	                             add r9, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006c0	        0x490fafd9	                            imul rbx, r9	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006c4	        0x48c1eb38	                           shr rbx, 0x38	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006c8	          0x4801d8	                            add rax, rbx	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006cb	          0x4939f8	                             cmp r8, rdi	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006ce	     0xf8484000000	                            je 0x4000758	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006d4	          0x4929f8	                             sub r8, rdi	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006d7	        0x498d70fe	                       lea rsi, [r8 - 2]	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006db	          0x48d1ee	                              shr rsi, 1	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006de	        0x4883c601	                              add rsi, 1	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006e2	        0x4983f801	                               cmp r8, 1	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006e6	        0x4c8d0c36	                     lea r9, [rsi + rsi]	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006ea	     0xf858c000000	                           jne 0x400077c	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006f0	        0x498b14eb	            mov rdx, qword [r11 + rbp*8]	       169	bitmap.c	FUNCTION_10	CALL_1
0x40006f4	    0x48be55555555	          movabs rsi, 0x5555555555555555	        34	ewok.h	FUNCTION_26
0x40006fe	    0x48b933333333	          movabs rcx, 0x3333333333333333	        35	ewok.h	FUNCTION_26
0x4000708	          0x4889d7	                            mov rdi, rdx	        34	ewok.h	FUNCTION_26
0x400070b	          0x48d1ef	                              shr rdi, 1	        34	ewok.h	FUNCTION_26
0x400070e	          0x4821f7	                            and rdi, rsi	        34	ewok.h	FUNCTION_26
0x4000711	          0x4821d6	                            and rsi, rdx	        34	ewok.h	FUNCTION_26
0x4000714	        0x488d1437	                    lea rdx, [rdi + rsi]	        34	ewok.h	FUNCTION_26
0x4000718	          0x4889d6	                            mov rsi, rdx	        35	ewok.h	FUNCTION_26
0x400071b	        0x48c1ea02	                              shr rdx, 2	        35	ewok.h	FUNCTION_26
0x400071f	          0x4821ce	                            and rsi, rcx	        35	ewok.h	FUNCTION_26
0x4000722	          0x4821d1	                            and rcx, rdx	        35	ewok.h	FUNCTION_26
0x4000725	        0x488d140e	                    lea rdx, [rsi + rcx]	        35	ewok.h	FUNCTION_26
0x4000729	    0x48b90f0f0f0f	           movabs rcx, 0xf0f0f0f0f0f0f0f	        36	ewok.h	FUNCTION_26
0x4000733	          0x4889d6	                            mov rsi, rdx	        36	ewok.h	FUNCTION_26
0x4000736	        0x48c1ea04	                              shr rdx, 4	        36	ewok.h	FUNCTION_26
0x400073a	          0x4821ce	                            and rsi, rcx	        36	ewok.h	FUNCTION_26
0x400073d	          0x4821ca	                            and rdx, rcx	        36	ewok.h	FUNCTION_26
0x4000740	    0x48b901010101	           movabs rcx, 0x101010101010101	       169	bitmap.c	FUNCTION_10	CALL_1
0x400074a	          0x4801f2	                            add rdx, rsi	       169	bitmap.c	FUNCTION_10	CALL_1
0x400074d	        0x480fafd1	                           imul rdx, rcx	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000751	        0x48c1ea38	                           shr rdx, 0x38	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000755	          0x4801d0	                            add rax, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000758	              0x5b	                                 pop rbx	       172	bitmap.c	FUNCTION_10
0x4000759	              0x5d	                                 pop rbp	       172	bitmap.c	FUNCTION_10
0x400075a	              0xc3	                                     ret	       172	bitmap.c	FUNCTION_10
0x400075b	       0xf1f440000	                   nop dword [rax + rax]	       172	bitmap.c	FUNCTION_10
0x4000760	          0x4885ff	                           test rdi, rdi	       172	bitmap.c	FUNCTION_10
0x4000763	     0xf85ea000000	                           jne 0x4000853	       172	bitmap.c	FUNCTION_10
0x4000769	        0x498d70fe	                       lea rsi, [r8 - 2]	       172	bitmap.c	FUNCTION_10
0x400076d	            0x31ed	                            xor ebp, ebp	       168	bitmap.c	FUNCTION_10	FOR_1
0x400076f	            0x31c0	                            xor eax, eax	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000771	          0x48d1ee	                              shr rsi, 1	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000774	        0x4883c601	                              add rsi, 1	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000778	        0x4c8d0c36	                     lea r9, [rsi + rsi]	       168	bitmap.c	FUNCTION_10	FOR_1
0x400077c	        0x660fefe4	                         pxor xmm4, xmm4	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000780	        0x498d0cfb	                  lea rcx, [r11 + rdi*8]	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000784	            0x31d2	                            xor edx, edx	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000786	    0x660f6f3d0000	       movdqa xmm7, xmmword [0x0400078e]	       168	bitmap.c	FUNCTION_10	FOR_1
0x400078e	    0x660f6f350000	       movdqa xmm6, xmmword [0x04000796]	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000796	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x0400079e]	       168	bitmap.c	FUNCTION_10	FOR_1
0x400079e	        0x4883c201	                              add rdx, 1	       168	bitmap.c	FUNCTION_10	FOR_1
0x40007a2	        0x4883c110	                           add rcx, 0x10	       168	bitmap.c	FUNCTION_10	FOR_1
0x40007a6	      0x660f6f59f0	       movdqa xmm3, xmmword [rcx - 0x10]	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007ab	          0x4839f2	                            cmp rdx, rsi	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007ae	        0x660f6fd3	                       movdqa xmm2, xmm3	        34	ewok.h	FUNCTION_26
0x40007b2	        0x660fdbdf	                         pand xmm3, xmm7	        34	ewok.h	FUNCTION_26
0x40007b6	      0x660f73d201	                           psrlq xmm2, 1	        34	ewok.h	FUNCTION_26
0x40007bb	        0x660fdbd7	                         pand xmm2, xmm7	        34	ewok.h	FUNCTION_26
0x40007bf	        0x660fd4d3	                        paddq xmm2, xmm3	        34	ewok.h	FUNCTION_26
0x40007c3	        0x660f6fca	                       movdqa xmm1, xmm2	        35	ewok.h	FUNCTION_26
0x40007c7	        0x660fdbd6	                         pand xmm2, xmm6	        35	ewok.h	FUNCTION_26
0x40007cb	      0x660f73d102	                           psrlq xmm1, 2	        35	ewok.h	FUNCTION_26
0x40007d0	        0x660fdbce	                         pand xmm1, xmm6	        35	ewok.h	FUNCTION_26
0x40007d4	        0x660fd4ca	                        paddq xmm1, xmm2	        35	ewok.h	FUNCTION_26
0x40007d8	        0x660f6fc1	                       movdqa xmm0, xmm1	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007dc	        0x660fdbcd	                         pand xmm1, xmm5	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007e0	      0x660f73d004	                           psrlq xmm0, 4	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007e5	        0x660fdbc5	                         pand xmm0, xmm5	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007e9	        0x660fd4c1	                        paddq xmm0, xmm1	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007ed	        0x660f6fc8	                       movdqa xmm1, xmm0	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007f1	      0x660f73f108	                           psllq xmm1, 8	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007f6	        0x660fd4c1	                        paddq xmm0, xmm1	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007fa	        0x660f6fc8	                       movdqa xmm1, xmm0	       169	bitmap.c	FUNCTION_10	CALL_1
0x40007fe	      0x660f73f110	                        psllq xmm1, 0x10	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000803	        0x660fd4c1	                        paddq xmm0, xmm1	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000807	        0x660f6fc8	                       movdqa xmm1, xmm0	       169	bitmap.c	FUNCTION_10	CALL_1
0x400080b	      0x660f73f120	                        psllq xmm1, 0x20	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000810	        0x660fd4c1	                        paddq xmm0, xmm1	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000814	      0x660f73d038	                        psrlq xmm0, 0x38	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000819	        0x660fd4e0	                        paddq xmm4, xmm0	       169	bitmap.c	FUNCTION_10	CALL_1
0x400081d	     0xf827bffffff	                            jb 0x400079e	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000823	        0x660f6fc4	                       movdqa xmm0, xmm4	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000827	          0x4c01cd	                             add rbp, r9	       169	bitmap.c	FUNCTION_10	CALL_1
0x400082a	      0x660f73d808	                          psrldq xmm0, 8	       169	bitmap.c	FUNCTION_10	CALL_1
0x400082f	        0x660fd4e0	                        paddq xmm4, xmm0	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000833	      0x66480f7ee2	                          movq rdx, xmm4	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000838	          0x4801d0	                            add rax, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x400083b	          0x4d39c8	                              cmp r8, r9	       169	bitmap.c	FUNCTION_10	CALL_1
0x400083e	     0xf85acfeffff	                           jne 0x40006f0	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000844	              0x5b	                                 pop rbx	       172	bitmap.c	FUNCTION_10
0x4000845	              0x5d	                                 pop rbp	       172	bitmap.c	FUNCTION_10
0x4000846	              0xc3	                                     ret	       172	bitmap.c	FUNCTION_10
0x4000847	    0x660f1f840000	                    nop word [rax + rax]	       172	bitmap.c	FUNCTION_10
0x4000850	            0x31c0	                            xor eax, eax	       166	bitmap.c	FUNCTION_10
0x4000852	              0xc3	                                     ret	       172	bitmap.c	FUNCTION_10
0x4000853	      0xbf01000000	                              mov edi, 1	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000858	      0xe924fdffff	                           jmp 0x4000581	       168	bitmap.c	FUNCTION_10	FOR_1
bitmap_or_ewah	ELSE,0:WHILE,1:functions,0:SWITCH,0:IF,1:FOR,0:CALL,3:DO,0	51
0x40003d0	            0x4154	                                push r12	       120	bitmap.c	FUNCTION_8
0x40003d2	              0x55	                                push rbp	       120	bitmap.c	FUNCTION_8
0x40003d3	          0x4989f4	                            mov r12, rsi	       120	bitmap.c	FUNCTION_8
0x40003d6	              0x53	                                push rbx	       120	bitmap.c	FUNCTION_8
0x40003d7	          0x4889fd	                            mov rbp, rdi	       120	bitmap.c	FUNCTION_8
0x40003da	        0x4883ec60	                           sub rsp, 0x60	       120	bitmap.c	FUNCTION_8
0x40003de	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       122	bitmap.c	FUNCTION_8
0x40003e2	        0x488b5f08	                mov rbx, qword [rdi + 8]	       121	bitmap.c	FUNCTION_8
0x40003e6	    0x64488b042528	                mov rax, qword fs:[0x28]	       120	bitmap.c	FUNCTION_8
0x40003ef	      0x4889442458	             mov qword [rsp + 0x58], rax	       120	bitmap.c	FUNCTION_8
0x40003f4	            0x31c0	                            xor eax, eax	       120	bitmap.c	FUNCTION_8
0x40003f6	        0x48c1ee06	                              shr rsi, 6	       122	bitmap.c	FUNCTION_8
0x40003fa	        0x4883c601	                              add rsi, 1	       122	bitmap.c	FUNCTION_8
0x40003fe	          0x4839f3	                            cmp rbx, rsi	       127	bitmap.c	FUNCTION_8	IF_1
0x4000401	            0x732a	                           jae 0x400042d	       127	bitmap.c	FUNCTION_8	IF_1
0x4000403	        0x48897708	                mov qword [rdi + 8], rsi	       128	bitmap.c	FUNCTION_8	IF_1
0x4000407	          0x488b3f	                    mov rdi, qword [rdi]	       129	bitmap.c	FUNCTION_8	IF_1
0x400040a	        0x48c1e603	                              shl rsi, 3	       129	bitmap.c	FUNCTION_8	IF_1
0x400040e	      0xe800000000	                          call 0x4000413	       129	bitmap.c	FUNCTION_8	IF_1
0x4000413	        0x488b5508	                mov rdx, qword [rbp + 8]	        90	string3.h	FUNCTION_17	CALL_6
0x4000417	        0x488d3cd8	                  lea rdi, [rax + rbx*8]	        90	string3.h	FUNCTION_17	CALL_6
0x400041b	        0x48894500	                    mov qword [rbp], rax	       129	bitmap.c	FUNCTION_8	IF_1
0x400041f	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_17	CALL_6
0x4000421	          0x4829da	                            sub rdx, rbx	        90	string3.h	FUNCTION_17	CALL_6
0x4000424	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_17	CALL_6
0x4000428	      0xe800000000	                          call 0x400042d	        90	string3.h	FUNCTION_17	CALL_6
0x400042d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       134	bitmap.c	FUNCTION_8	CALL_2
0x4000432	          0x4c89e6	                            mov rsi, r12	       134	bitmap.c	FUNCTION_8	CALL_2
0x4000435	            0x31db	                            xor ebx, ebx	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000437	      0xe800000000	                          call 0x400043c	       134	bitmap.c	FUNCTION_8	CALL_2
0x400043c	            0xeb15	                           jmp 0x4000453	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x400043e	            0x6690	                                     nop	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000440	          0x4889d8	                            mov rax, rbx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000443	        0x48034500	                    add rax, qword [rbp]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000447	      0x488b542408	                mov rdx, qword [rsp + 8]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x400044c	        0x4883c308	                              add rbx, 8	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000450	          0x480910	                     or qword [rax], rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000453	      0x488d742410	                   lea rsi, [rsp + 0x10]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000458	      0x488d7c2408	                      lea rdi, [rsp + 8]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x400045d	      0xe800000000	                          call 0x4000462	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000462	            0x85c0	                           test eax, eax	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000464	            0x75da	                           jne 0x4000440	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_3
0x4000466	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       138	bitmap.c	FUNCTION_8
0x400046b	    0x644833042528	                xor rax, qword fs:[0x28]	       138	bitmap.c	FUNCTION_8
0x4000474	            0x7509	                           jne 0x400047f	       138	bitmap.c	FUNCTION_8
0x4000476	        0x4883c460	                           add rsp, 0x60	       138	bitmap.c	FUNCTION_8
0x400047a	              0x5b	                                 pop rbx	       138	bitmap.c	FUNCTION_8
0x400047b	              0x5d	                                 pop rbp	       138	bitmap.c	FUNCTION_8
0x400047c	            0x415c	                                 pop r12	       138	bitmap.c	FUNCTION_8
0x400047e	              0xc3	                                     ret	       138	bitmap.c	FUNCTION_8
0x400047f	      0xe800000000	                          call 0x4000484	       138	bitmap.c	FUNCTION_8
bitmap_to_ewah	ELSE,0:WHILE,0:functions,0:SWITCH,0:IF,3:FOR,1:CALL,4:DO,0	55
0x4000130	            0x4156	                                push r14	        64	bitmap.c	FUNCTION_5
0x4000132	            0x4155	                                push r13	        64	bitmap.c	FUNCTION_5
0x4000134	          0x4989fe	                            mov r14, rdi	        64	bitmap.c	FUNCTION_5
0x4000137	            0x4154	                                push r12	        64	bitmap.c	FUNCTION_5
0x4000139	              0x55	                                push rbp	        64	bitmap.c	FUNCTION_5
0x400013a	              0x53	                                push rbx	        64	bitmap.c	FUNCTION_5
0x400013b	      0xe800000000	                          call 0x4000140	        65	bitmap.c	FUNCTION_5	CALL_1
0x4000140	        0x498b5608	                mov rdx, qword [r14 + 8]	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000144	          0x4989c5	                            mov r13, rax	        65	bitmap.c	FUNCTION_5	CALL_1
0x4000147	          0x4885d2	                           test rdx, rdx	        69	bitmap.c	FUNCTION_5	FOR_1
0x400014a	     0xf847c000000	                            je 0x40001cc	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000150	          0x498b06	                    mov rax, qword [r14]	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000153	            0x31f6	                            xor esi, esi	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000155	            0x31ed	                            xor ebp, ebp	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000157	            0x31db	                            xor ebx, ebx	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000159	            0xeb12	                           jmp 0x400016d	        69	bitmap.c	FUNCTION_5	FOR_1
0x400015b	       0xf1f440000	                   nop dword [rax + rax]	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000160	        0x4883c301	                              add rbx, 1	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000164	        0x4883c501	                              add rbp, 1	        71	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000168	          0x4839d3	                            cmp rbx, rdx	        69	bitmap.c	FUNCTION_5	FOR_1
0x400016b	            0x732f	                           jae 0x400019c	        69	bitmap.c	FUNCTION_5	FOR_1
0x400016d	      0x48833cd800	              cmp qword [rax + rbx*8], 0	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000172	    0x4c8d24dd0000	                        lea r12, [rbx*8]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400017a	            0x74e4	                            je 0x4000160	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400017c	          0x4885f6	                           test rsi, rsi	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x400017f	            0x752f	                           jne 0x40001b0	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x4000181	          0x4885ed	                           test rbp, rbp	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x4000184	            0x7537	                           jne 0x40001bd	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x4000186	        0x498b5608	                mov rdx, qword [r14 + 8]	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x400018a	          0x498b06	                    mov rax, qword [r14]	        83	bitmap.c	FUNCTION_5	FOR_1
0x400018d	        0x4883c301	                              add rbx, 1	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000191	            0x31ed	                            xor ebp, ebp	        83	bitmap.c	FUNCTION_5	FOR_1
0x4000193	          0x4839d3	                            cmp rbx, rdx	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000196	        0x4a8b3420	              mov rsi, qword [rax + r12]	        83	bitmap.c	FUNCTION_5	FOR_1
0x400019a	            0x72d1	                            jb 0x400016d	        69	bitmap.c	FUNCTION_5	FOR_1
0x400019c	          0x4c89ef	                            mov rdi, r13	        86	bitmap.c	FUNCTION_5	CALL_4
0x400019f	      0xe800000000	                          call 0x40001a4	        86	bitmap.c	FUNCTION_5	CALL_4
0x40001a4	              0x5b	                                 pop rbx	        88	bitmap.c	FUNCTION_5
0x40001a5	          0x4c89e8	                            mov rax, r13	        88	bitmap.c	FUNCTION_5
0x40001a8	              0x5d	                                 pop rbp	        88	bitmap.c	FUNCTION_5
0x40001a9	            0x415c	                                 pop r12	        88	bitmap.c	FUNCTION_5
0x40001ab	            0x415d	                                 pop r13	        88	bitmap.c	FUNCTION_5
0x40001ad	            0x415e	                                 pop r14	        88	bitmap.c	FUNCTION_5
0x40001af	              0xc3	                                     ret	        88	bitmap.c	FUNCTION_5
0x40001b0	          0x4c89ef	                            mov rdi, r13	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x40001b3	      0xe800000000	                          call 0x40001b8	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x40001b8	          0x4885ed	                           test rbp, rbp	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x40001bb	            0x74c9	                            je 0x4000186	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x40001bd	          0x4889ea	                            mov rdx, rbp	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001c0	            0x31f6	                            xor esi, esi	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001c2	          0x4c89ef	                            mov rdi, r13	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001c5	      0xe800000000	                          call 0x40001ca	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001ca	            0xebba	                           jmp 0x4000186	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001cc	            0x31f6	                            xor esi, esi	        67	bitmap.c	FUNCTION_5
0x40001ce	            0xebcc	                           jmp 0x400019c	        67	bitmap.c	FUNCTION_5
bitmap_each_bit	ELSE,1:WHILE,0:functions,0:SWITCH,0:IF,2:FOR,3:CALL,2:DO,0	61
0x4000490	            0x4157	                                push r15	       141	bitmap.c	FUNCTION_9
0x4000492	            0x4156	                                push r14	       141	bitmap.c	FUNCTION_9
0x4000494	            0x4155	                                push r13	       141	bitmap.c	FUNCTION_9
0x4000496	            0x4154	                                push r12	       141	bitmap.c	FUNCTION_9
0x4000498	              0x55	                                push rbp	       141	bitmap.c	FUNCTION_9
0x4000499	              0x53	                                push rbx	       141	bitmap.c	FUNCTION_9
0x400049a	        0x4883ec18	                           sub rsp, 0x18	       141	bitmap.c	FUNCTION_9
0x400049e	      0x48837f0800	                  cmp qword [rdi + 8], 0	       144	bitmap.c	FUNCTION_9	FOR_1
0x40004a3	      0x48897c2408	                mov qword [rsp + 8], rdi	       141	bitmap.c	FUNCTION_9
0x40004a8	    0x48c704240000	                      mov qword [rsp], 0	       144	bitmap.c	FUNCTION_9	FOR_1
0x40004b0	            0x746e	                            je 0x4000520	       144	bitmap.c	FUNCTION_9	FOR_1
0x40004b2	          0x4989f4	                            mov r12, rsi	       144	bitmap.c	FUNCTION_9	FOR_1
0x40004b5	          0x4889d5	                            mov rbp, rdx	       144	bitmap.c	FUNCTION_9	FOR_1
0x40004b8	    0x41bd40000000	                          mov r13d, 0x40	       144	bitmap.c	FUNCTION_9	FOR_1
0x40004be	            0x6690	                                     nop	       144	bitmap.c	FUNCTION_9	FOR_1
0x40004c0	      0x488b742408	                mov rsi, qword [rsp + 8]	       145	bitmap.c	FUNCTION_9	FOR_1
0x40004c5	        0x488b0424	                    mov rax, qword [rsp]	       145	bitmap.c	FUNCTION_9	FOR_1
0x40004c9	            0x31c9	                            xor ecx, ecx	       145	bitmap.c	FUNCTION_9	FOR_1
0x40004cb	          0x488b16	                    mov rdx, qword [rsi]	       145	bitmap.c	FUNCTION_9	FOR_1
0x40004ce	          0x4989c7	                            mov r15, rax	       145	bitmap.c	FUNCTION_9	FOR_1
0x40004d1	        0x49c1e706	                              shl r15, 6	       145	bitmap.c	FUNCTION_9	FOR_1
0x40004d5	        0x488b1cc2	            mov rbx, qword [rdx + rax*8]	       145	bitmap.c	FUNCTION_9	FOR_1
0x40004d9	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x40004dd	            0x7451	                            je 0x4000530	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x40004df	              0x90	                                     nop	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x40004e0	          0x4889da	                            mov rdx, rbx	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40004e3	          0x48d3ea	                             shr rdx, cl	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40004e6	          0x4885d2	                           test rdx, rdx	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40004e9	            0x741d	                            je 0x4000508	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x40004eb	      0xf3480fbcd2	                          tzcnt rdx, rdx	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40004f0	          0x4889ee	                            mov rsi, rbp	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40004f3	          0x8d3c11	                    lea edi, [rcx + rdx]	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40004f6	          0x4989fe	                            mov r14, rdi	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x40004f9	          0x4c01ff	                            add rdi, r15	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40004fc	          0x41ffd4	                                call r12	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x40004ff	        0x418d4e01	                      lea ecx, [r14 + 1]	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000503	          0x83f93f	                           cmp ecx, 0x3f	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000506	            0x76d8	                           jbe 0x40004e0	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000508	      0x488b742408	                mov rsi, qword [rsp + 8]	       144	bitmap.c	FUNCTION_9	FOR_1
0x400050d	      0x4883042401	                      add qword [rsp], 1	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000512	        0x4983c540	                           add r13, 0x40	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000516	        0x488b0424	                    mov rax, qword [rsp]	       144	bitmap.c	FUNCTION_9	FOR_1
0x400051a	        0x48394608	                cmp qword [rsi + 8], rax	       144	bitmap.c	FUNCTION_9	FOR_1
0x400051e	            0x77a0	                            ja 0x40004c0	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000520	        0x4883c418	                           add rsp, 0x18	       162	bitmap.c	FUNCTION_9
0x4000524	              0x5b	                                 pop rbx	       162	bitmap.c	FUNCTION_9
0x4000525	              0x5d	                                 pop rbp	       162	bitmap.c	FUNCTION_9
0x4000526	            0x415c	                                 pop r12	       162	bitmap.c	FUNCTION_9
0x4000528	            0x415d	                                 pop r13	       162	bitmap.c	FUNCTION_9
0x400052a	            0x415e	                                 pop r14	       162	bitmap.c	FUNCTION_9
0x400052c	            0x415f	                                 pop r15	       162	bitmap.c	FUNCTION_9
0x400052e	              0xc3	                                     ret	       162	bitmap.c	FUNCTION_9
0x400052f	              0x90	                                     nop	       162	bitmap.c	FUNCTION_9
0x4000530	        0x498d5f01	                      lea rbx, [r15 + 1]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000534	          0x4c89ff	                            mov rdi, r15	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000537	          0x4889ee	                            mov rsi, rbp	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x400053a	          0x41ffd4	                                call r12	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x400053d	          0x4939dd	                            cmp r13, rbx	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x4000540	          0x4989df	                            mov r15, rbx	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x4000543	            0x75eb	                           jne 0x4000530	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x4000545	            0xebc1	                           jmp 0x4000508	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
bitmap_clear	ELSE,0:WHILE,0:functions,0:SWITCH,0:IF,1:FOR,0:CALL,0:DO,0	11
0x40000e0	          0x4889f2	                            mov rdx, rsi	        50	bitmap.c	FUNCTION_3
0x40000e3	        0x48c1ea06	                              shr rdx, 6	        50	bitmap.c	FUNCTION_3
0x40000e7	        0x483b5708	                cmp rdx, qword [rdi + 8]	        52	bitmap.c	FUNCTION_3	IF_1
0x40000eb	            0x7314	                           jae 0x4000101	        52	bitmap.c	FUNCTION_3	IF_1
0x40000ed	          0x488b3f	                    mov rdi, qword [rdi]	        53	bitmap.c	FUNCTION_3	IF_1
0x40000f0	      0xb801000000	                              mov eax, 1	        53	bitmap.c	FUNCTION_3	IF_1
0x40000f5	            0x89f1	                            mov ecx, esi	        53	bitmap.c	FUNCTION_3	IF_1
0x40000f7	          0x48d3e0	                             shl rax, cl	        53	bitmap.c	FUNCTION_3	IF_1
0x40000fa	          0x48f7d0	                                 not rax	        53	bitmap.c	FUNCTION_3	IF_1
0x40000fd	        0x482104d7	            and qword [rdi + rdx*8], rax	        53	bitmap.c	FUNCTION_3	IF_1
0x4000101	            0xf3c3	                                     ret	        53	bitmap.c	FUNCTION_3	IF_1
bitmap_get	ELSE,0:WHILE,0:functions,0:SWITCH,0:IF,0:FOR,0:CALL,0:DO,0	11
0x4000110	          0x4889f2	                            mov rdx, rsi	        58	bitmap.c	FUNCTION_4
0x4000113	            0x31c0	                            xor eax, eax	        59	bitmap.c	FUNCTION_4
0x4000115	        0x48c1ea06	                              shr rdx, 6	        58	bitmap.c	FUNCTION_4
0x4000119	        0x483b5708	                cmp rdx, qword [rdi + 8]	        59	bitmap.c	FUNCTION_4
0x400011d	            0x730f	                           jae 0x400012e	        59	bitmap.c	FUNCTION_4
0x400011f	          0x488b07	                    mov rax, qword [rdi]	        60	bitmap.c	FUNCTION_4
0x4000122	            0x89f1	                            mov ecx, esi	        59	bitmap.c	FUNCTION_4
0x4000124	        0x488b04d0	            mov rax, qword [rax + rdx*8]	        59	bitmap.c	FUNCTION_4
0x4000128	          0x48d3e8	                             shr rax, cl	        59	bitmap.c	FUNCTION_4
0x400012b	          0x83e001	                              and eax, 1	        59	bitmap.c	FUNCTION_4
0x400012e	            0xf3c3	                                     ret	        61	bitmap.c	FUNCTION_4
ewah_to_bitmap	ELSE,0:WHILE,1:functions,0:SWITCH,0:IF,0:FOR,0:CALL,4:DO,0	68
0x40001d0	            0x4155	                                push r13	        91	bitmap.c	FUNCTION_6
0x40001d2	            0x4154	                                push r12	        91	bitmap.c	FUNCTION_6
0x40001d4	          0x4531ed	                          xor r13d, r13d	        95	bitmap.c	FUNCTION_6
0x40001d7	              0x55	                                push rbp	        91	bitmap.c	FUNCTION_6
0x40001d8	              0x53	                                push rbx	        91	bitmap.c	FUNCTION_6
0x40001d9	          0x4889fd	                            mov rbp, rdi	        91	bitmap.c	FUNCTION_6
0x40001dc	      0xbf10000000	                           mov edi, 0x10	        27	bitmap.c	FUNCTION_1	CALL_1
0x40001e1	    0x49bcffffffff	         movabs r12, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_41	IF_1
0x40001eb	        0x4883ec68	                           sub rsp, 0x68	        91	bitmap.c	FUNCTION_6
0x40001ef	    0x64488b042528	                mov rax, qword fs:[0x28]	        91	bitmap.c	FUNCTION_6
0x40001f8	      0x4889442458	             mov qword [rsp + 0x58], rax	        91	bitmap.c	FUNCTION_6
0x40001fd	            0x31c0	                            xor eax, eax	        91	bitmap.c	FUNCTION_6
0x40001ff	      0xe800000000	                          call 0x4000204	        27	bitmap.c	FUNCTION_1	CALL_1
0x4000204	      0xbe08000000	                              mov esi, 8	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000209	      0xbf20000000	                           mov edi, 0x20	        28	bitmap.c	FUNCTION_1	CALL_2
0x400020e	          0x4889c3	                            mov rbx, rax	        27	bitmap.c	FUNCTION_1	CALL_1
0x4000211	      0xe800000000	                          call 0x4000216	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000216	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        97	bitmap.c	FUNCTION_6	CALL_2
0x400021b	          0x4889ee	                            mov rsi, rbp	        97	bitmap.c	FUNCTION_6	CALL_2
0x400021e	          0x488903	                    mov qword [rbx], rax	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000221	    0x48c743082000	               mov qword [rbx + 8], 0x20	        29	bitmap.c	FUNCTION_1
0x4000229	            0x31ed	                            xor ebp, ebp	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400022b	      0xe800000000	                          call 0x4000230	        97	bitmap.c	FUNCTION_6	CALL_2
0x4000230	            0xeb16	                           jmp 0x4000248	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000232	    0x660f1f440000	                    nop word [rax + rax]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000238	          0x488b03	                    mov rax, qword [rbx]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400023b	      0x488b542408	                mov rdx, qword [rsp + 8]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000240	        0x48891428	              mov qword [rax + rbp], rdx	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000244	        0x4883c508	                              add rbp, 8	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000248	      0x488d742410	                   lea rsi, [rsp + 0x10]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400024d	      0x488d7c2408	                      lea rdi, [rsp + 8]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000252	      0xe800000000	                          call 0x4000257	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000257	            0x85c0	                           test eax, eax	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000259	            0x7445	                            je 0x40002a0	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400025b	        0x488b4308	                mov rax, qword [rbx + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400025f	        0x4983c501	                              add r13, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000263	          0x4939c5	                            cmp r13, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000266	            0x76d0	                           jbe 0x4000238	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000268	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400026d	          0x48d1ee	                              shr rsi, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000270	          0x4c39ee	                            cmp rsi, r13	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000273	          0x4889f2	                            mov rdx, rsi	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000276	        0x490f42d5	                          cmovb rdx, r13	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400027a	          0x4c39e2	                            cmp rdx, r12	       795	git-compat-util.h	FUNCTION_41	IF_1
0x400027d	        0x48895308	                mov qword [rbx + 8], rdx	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4000281	            0x773f	                            ja 0x40002c2	       795	git-compat-util.h	FUNCTION_41	IF_1
0x4000283	          0x488b3b	                    mov rdi, qword [rbx]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000286	    0x488d34d50000	                        lea rsi, [rdx*8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400028e	      0xe800000000	                          call 0x4000293	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000293	          0x488903	                    mov qword [rbx], rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000296	            0xeba3	                           jmp 0x400023b	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000298	     0xf1f84000000	                   nop dword [rax + rax]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40002a0	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       106	bitmap.c	FUNCTION_6
0x40002a5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       106	bitmap.c	FUNCTION_6
0x40002ae	        0x4c896b08	                mov qword [rbx + 8], r13	       104	bitmap.c	FUNCTION_6
0x40002b2	          0x4889d8	                            mov rax, rbx	       106	bitmap.c	FUNCTION_6
0x40002b5	            0x751c	                           jne 0x40002d3	       106	bitmap.c	FUNCTION_6
0x40002b7	        0x4883c468	                           add rsp, 0x68	       106	bitmap.c	FUNCTION_6
0x40002bb	              0x5b	                                 pop rbx	       106	bitmap.c	FUNCTION_6
0x40002bc	              0x5d	                                 pop rbp	       106	bitmap.c	FUNCTION_6
0x40002bd	            0x415c	                                 pop r12	       106	bitmap.c	FUNCTION_6
0x40002bf	            0x415d	                                 pop r13	       106	bitmap.c	FUNCTION_6
0x40002c1	              0xc3	                                     ret	       106	bitmap.c	FUNCTION_6
0x40002c2	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x40002c7	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x40002cc	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x40002ce	      0xe800000000	                          call 0x40002d3	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x40002d3	      0xe800000000	                          call 0x40002d8	       106	bitmap.c	FUNCTION_6
