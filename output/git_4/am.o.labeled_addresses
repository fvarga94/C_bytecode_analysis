stgit_patch_to_mail	FOR,0:IF,4:SWITCH,0:DO,0:WHILE,2:ELSE,4:CALL,8:functions,0	116
0x4000950	            0x4154	                                push r12	       803	am.c	FUNCTION_27
0x4000952	              0x55	                                push rbp	       803	am.c	FUNCTION_27
0x4000953	          0x4531e4	                          xor r12d, r12d	       805	am.c	FUNCTION_27
0x4000956	              0x53	                                push rbx	       803	am.c	FUNCTION_27
0x4000957	          0x4889fd	                            mov rbp, rdi	       803	am.c	FUNCTION_27
0x400095a	          0x4889f3	                            mov rbx, rsi	       803	am.c	FUNCTION_27
0x400095d	        0x4883ec20	                           sub rsp, 0x20	       803	am.c	FUNCTION_27
0x4000961	    0x64488b042528	                mov rax, qword fs:[0x28]	       803	am.c	FUNCTION_27
0x400096a	      0x4889442418	             mov qword [rsp + 0x18], rax	       803	am.c	FUNCTION_27
0x400096f	            0x31c0	                            xor eax, eax	       803	am.c	FUNCTION_27
0x4000971	    0x48c704240000	                      mov qword [rsp], 0	       804	am.c	FUNCTION_27
0x4000979	    0x48c744240800	                  mov qword [rsp + 8], 0	       804	am.c	FUNCTION_27
0x4000982	    0x48c744241000	               mov qword [rsp + 0x10], 0	       804	am.c	FUNCTION_27
0x400098b	       0xf1f440000	                   nop dword [rax + rax]	       804	am.c	FUNCTION_27
0x4000990	          0x4889de	                            mov rsi, rbx	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4000993	          0x4889e7	                            mov rdi, rsp	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x4000996	      0xe800000000	                          call 0x400099b	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x400099b	            0x85c0	                           test eax, eax	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x400099d	     0xf85a0000000	                           jne 0x4000a43	       807	am.c	FUNCTION_27	WHILE_1	CALL_1
0x40009a3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       810	am.c	FUNCTION_27	WHILE_1	IF_1	CALL_2
0x40009a8	           0xfb607	                   movzx eax, byte [rdi]	        65	am.c	FUNCTION_3	FOR_1
0x40009ab	            0x84c0	                             test al, al	        65	am.c	FUNCTION_3	FOR_1
0x40009ad	            0x74e1	                            je 0x4000990	        65	am.c	FUNCTION_3	FOR_1
0x40009af	    0xf68000000000	                      test byte [rax], 1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009b6	            0x741c	                            je 0x40009d4	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009b8	          0x4889fa	                            mov rdx, rdi	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009bb	       0xf1f440000	                   nop dword [rax + rax]	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009c0	        0x4883c201	                              add rdx, 1	        65	am.c	FUNCTION_3	FOR_1
0x40009c4	           0xfb602	                   movzx eax, byte [rdx]	        65	am.c	FUNCTION_3	FOR_1
0x40009c7	            0x84c0	                             test al, al	        65	am.c	FUNCTION_3	FOR_1
0x40009c9	            0x74c5	                            je 0x4000990	        65	am.c	FUNCTION_3	FOR_1
0x40009cb	    0xf68000000000	                      test byte [rax], 1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009d2	            0x75ec	                           jne 0x40009c0	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009d4	          0x4889f9	                            mov rcx, rdi	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009d7	      0xb800000000	                              mov eax, 0	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009dc	            0xeb13	                           jmp 0x40009f1	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009de	            0x6690	                                     nop	        66	am.c	FUNCTION_3	FOR_1	IF_1
0x40009e0	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_79	DO_1
0x40009e4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_79	DO_1
0x40009e8	          0x3a51ff	                  cmp dl, byte [rcx - 1]	       488	git-compat-util.h	FUNCTION_79	DO_1
0x40009eb	     0xf857f000000	                           jne 0x4000a70	       488	git-compat-util.h	FUNCTION_79	DO_1
0x40009f1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_79	DO_1	IF_1
0x40009f4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_79	DO_1	IF_1
0x40009f6	            0x75e8	                           jne 0x40009e0	       484	git-compat-util.h	FUNCTION_79	DO_1	IF_1
0x40009f8	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_174
0x40009fd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_174
0x4000a02	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_174
0x4000a05	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_174
0x4000a07	      0xe800000000	                          call 0x4000a0c	        97	stdio2.h	CALL_174
0x4000a0c	            0xeb82	                           jmp 0x4000990	        97	stdio2.h	CALL_174
0x4000a0e	            0x6690	                                     nop	        97	stdio2.h	CALL_174
0x4000a10	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4000a13	          0x4889da	                            mov rdx, rbx	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4000a16	      0xbe00200000	                         mov esi, 0x2000	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4000a1b	          0x4889e7	                            mov rdi, rsp	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4000a1e	      0xe800000000	                          call 0x4000a23	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4000a23	          0x4885c0	                           test rax, rax	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4000a26	     0xf84b2000000	                            je 0x4000ade	       826	am.c	FUNCTION_27	WHILE_2	CALL_6
0x4000a2c	      0x488b542408	                mov rdx, qword [rsp + 8]	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4000a31	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4000a36	          0x4889e9	                            mov rcx, rbp	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4000a39	      0xbe01000000	                              mov esi, 1	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4000a3e	      0xe800000000	                          call 0x4000a43	       827	am.c	FUNCTION_27	WHILE_2	CALL_7
0x4000a43	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_64	IF_2
0x4000a48	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4000a51	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4000a57	            0x75b7	                           jne 0x4000a10	       165	strbuf.h	FUNCTION_64	IF_2
0x4000a59	    0x803d00000000	                cmp byte [0x04000a60], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x4000a60	            0x74b1	                            je 0x4000a13	       168	strbuf.h	FUNCTION_64	CALL_2
0x4000a62	      0xe800000000	                          call 0x4000a67	       168	strbuf.h	FUNCTION_64	CALL_2
0x4000a67	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_64	CALL_2
0x4000a70	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a75	      0xe800000000	                          call 0x4000a7a	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a7a	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a7c	            0x7542	                           jne 0x4000ac0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a7e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a83	      0xbe00000000	                              mov esi, 0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a88	      0xe800000000	                          call 0x4000a8d	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a8d	            0x85c0	                           test eax, eax	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a8f	            0x752f	                           jne 0x4000ac0	       814	am.c	FUNCTION_27	WHILE_1	ELSE_2	IF_3	CALL_5
0x4000a91	          0x4585e4	                         test r12d, r12d	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4000a94	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        97	stdio2.h	CALL_174
0x4000a99	            0x7566	                           jne 0x4000b01	       816	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4000a9b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_174
0x4000aa0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_174
0x4000aa5	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_174
0x4000aa8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_174
0x4000aaa	    0x41bc01000000	                             mov r12d, 1	       818	am.c	FUNCTION_27	WHILE_1	ELSE_3	IF_4
0x4000ab0	      0xe800000000	                          call 0x4000ab5	        97	stdio2.h	CALL_174
0x4000ab5	      0xe9d6feffff	                           jmp 0x4000990	        97	stdio2.h	CALL_174
0x4000aba	    0x660f1f440000	                    nop word [rax + rax]	        97	stdio2.h	CALL_174
0x4000ac0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	        97	stdio2.h	CALL_174
0x4000ac5	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_174
0x4000aca	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_174
0x4000acf	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_174
0x4000ad2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_174
0x4000ad4	      0xe800000000	                          call 0x4000ad9	        97	stdio2.h	CALL_174
0x4000ad9	      0xe9b2feffff	                           jmp 0x4000990	        97	stdio2.h	CALL_174
0x4000ade	          0x4889e7	                            mov rdi, rsp	       831	am.c	FUNCTION_27	CALL_8
0x4000ae1	      0xe800000000	                          call 0x4000ae6	       831	am.c	FUNCTION_27	CALL_8
0x4000ae6	            0x31c0	                            xor eax, eax	       833	am.c	FUNCTION_27
0x4000ae8	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       833	am.c	FUNCTION_27
0x4000aed	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       833	am.c	FUNCTION_27
0x4000af6	            0x7522	                           jne 0x4000b1a	       833	am.c	FUNCTION_27
0x4000af8	        0x4883c420	                           add rsp, 0x20	       833	am.c	FUNCTION_27
0x4000afc	              0x5b	                                 pop rbx	       833	am.c	FUNCTION_27
0x4000afd	              0x5d	                                 pop rbp	       833	am.c	FUNCTION_27
0x4000afe	            0x415c	                                 pop r12	       833	am.c	FUNCTION_27
0x4000b00	              0xc3	                                     ret	       833	am.c	FUNCTION_27
0x4000b01	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_174
0x4000b06	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_174
0x4000b0b	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_174
0x4000b0e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_174
0x4000b10	      0xe800000000	                          call 0x4000b15	        97	stdio2.h	CALL_174
0x4000b15	      0xe929ffffff	                           jmp 0x4000a43	        97	stdio2.h	CALL_174
0x4000b1a	      0xe800000000	                          call 0x4000b1f	       833	am.c	FUNCTION_27
parse_opt_patchformat	FOR,0:IF,5:SWITCH,0:DO,0:WHILE,0:ELSE,5:CALL,6:functions,0	75
0x4001810	      0xb905000000	                              mov ecx, 5	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4001815	        0x4c8b4710	              mov r8, qword [rdi + 0x10]	      2161	am.c	FUNCTION_59
0x4001819	      0xbf00000000	                              mov edi, 0	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x400181e	          0x4889f2	                            mov rdx, rsi	      2160	am.c	FUNCTION_59
0x4001821	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4001823	           0xf97c0	                                 seta al	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4001826	           0xf92c1	                                 setb cl	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4001829	            0x29c8	                            sub eax, ecx	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x400182b	           0xfbec0	                           movsx eax, al	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x400182e	            0x85c0	                           test eax, eax	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4001830	            0x746e	                            je 0x40018a0	      2163	am.c	FUNCTION_59	IF_1	CALL_1
0x4001832	      0xb906000000	                              mov ecx, 6	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4001837	      0xbf00000000	                              mov edi, 0	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400183c	          0x4889d6	                            mov rsi, rdx	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400183f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4001841	           0xf97c0	                                 seta al	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4001844	           0xf92c1	                                 setb cl	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4001847	            0x29c8	                            sub eax, ecx	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4001849	           0xfbec0	                           movsx eax, al	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400184c	            0x85c0	                           test eax, eax	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x400184e	            0x7440	                            je 0x4001890	      2165	am.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x4001850	      0xb90d000000	                            mov ecx, 0xd	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4001855	      0xbf00000000	                              mov edi, 0	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400185a	          0x4889d6	                            mov rsi, rdx	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400185d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400185f	           0xf97c0	                                 seta al	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4001862	           0xf92c1	                                 setb cl	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4001865	            0x29c8	                            sub eax, ecx	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x4001867	           0xfbec0	                           movsx eax, al	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400186a	            0x85c0	                           test eax, eax	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400186c	            0x7472	                            je 0x40018e0	      2167	am.c	FUNCTION_59	ELSE_2	IF_3	CALL_3
0x400186e	          0x803a68	                    cmp byte [rdx], 0x68	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4001871	            0x753d	                           jne 0x40018b0	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4001873	        0x807a0167	                cmp byte [rdx + 1], 0x67	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4001877	            0x7537	                           jne 0x40018b0	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x4001879	        0x807a0200	                   cmp byte [rdx + 2], 0	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x400187d	            0x7531	                           jne 0x40018b0	      2169	am.c	FUNCTION_59	ELSE_3	IF_4	CALL_4
0x400187f	    0x41c700040000	                       mov dword [r8], 4	      2170	am.c	FUNCTION_59	ELSE_3	IF_4
0x4001886	            0x31c0	                            xor eax, eax	      2175	am.c	FUNCTION_59
0x4001888	              0xc3	                                     ret	      2175	am.c	FUNCTION_59
0x4001889	     0xf1f80000000	                         nop dword [rax]	      2175	am.c	FUNCTION_59
0x4001890	    0x41c700020000	                       mov dword [r8], 2	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4001897	              0xc3	                                     ret	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x4001898	     0xf1f84000000	                   nop dword [rax + rax]	      2166	am.c	FUNCTION_59	ELSE_1	IF_2
0x40018a0	    0x41c700010000	                       mov dword [r8], 1	      2164	am.c	FUNCTION_59	IF_1
0x40018a7	              0xc3	                                     ret	      2176	am.c	FUNCTION_59
0x40018a8	     0xf1f84000000	                   nop dword [rax + rax]	      2176	am.c	FUNCTION_59
0x40018b0	      0xb907000000	                              mov ecx, 7	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018b5	      0xbf00000000	                              mov edi, 0	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018ba	          0x4889d6	                            mov rsi, rdx	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018bd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018bf	           0xf97c0	                                 seta al	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018c2	           0xf92c1	                                 setb cl	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018c5	            0x29c8	                            sub eax, ecx	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018c7	           0xfbec0	                           movsx eax, al	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018ca	            0x85c0	                           test eax, eax	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018cc	            0x751a	                           jne 0x40018e8	      2171	am.c	FUNCTION_59	ELSE_4	IF_5	CALL_5
0x40018ce	    0x41c700050000	                       mov dword [r8], 5	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x40018d5	              0xc3	                                     ret	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x40018d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2172	am.c	FUNCTION_59	ELSE_4	IF_5
0x40018e0	    0x41c700030000	                       mov dword [r8], 3	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x40018e7	              0xc3	                                     ret	      2168	am.c	FUNCTION_59	ELSE_2	IF_3
0x40018e8	              0x53	                                push rbx	      2160	am.c	FUNCTION_59
0x40018e9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_114
0x40018ee	          0x4889d3	                            mov rbx, rdx	        54	gettext.h	FUNCTION_114
0x40018f1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_114
0x40018f3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_114
0x40018f8	      0xe800000000	                          call 0x40018fd	        54	gettext.h	FUNCTION_114
0x40018fd	          0x4889de	                            mov rsi, rbx	      2174	am.c	FUNCTION_59	CALL_6
0x4001900	          0x4889c7	                            mov rdi, rax	      2174	am.c	FUNCTION_59	CALL_6
0x4001903	            0x31c0	                            xor eax, eax	      2174	am.c	FUNCTION_59	CALL_6
0x4001905	      0xe800000000	                          call 0x400190a	      2174	am.c	FUNCTION_59	CALL_6
0x400190a	      0xb8ffffffff	                     mov eax, 0xffffffff	      2174	am.c	FUNCTION_59	CALL_6
0x400190f	              0x5b	                                 pop rbx	      2176	am.c	FUNCTION_59
0x4001910	              0xc3	                                     ret	      2176	am.c	FUNCTION_59
merge_tree	FOR,0:IF,3:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,9:functions,0	62
0x40005f0	              0x55	                                push rbp	      1956	am.c	FUNCTION_52
0x40005f1	              0x53	                                push rbx	      1956	am.c	FUNCTION_52
0x40005f2	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_133	CALL_1
0x40005f4	          0x4889fb	                            mov rbx, rdi	      1956	am.c	FUNCTION_52
0x40005f7	    0x4881ec580300	                          sub rsp, 0x358	      1956	am.c	FUNCTION_52
0x40005fe	    0x64488b042528	                mov rax, qword fs:[0x28]	      1956	am.c	FUNCTION_52
0x4000607	    0x488984244803	            mov qword [rsp + 0x348], rax	      1956	am.c	FUNCTION_52
0x400060f	            0x31c0	                            xor eax, eax	      1956	am.c	FUNCTION_52
0x4000611	    0x48c704240000	                      mov qword [rsp], 0	      1957	am.c	FUNCTION_52
0x4000619	      0xe800000000	                          call 0x400061e	        22	tree.h	FUNCTION_133	CALL_1
0x400061e	            0x85c0	                           test eax, eax	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x4000620	     0xf85ba000000	                           jne 0x40006e0	      1961	am.c	FUNCTION_52	IF_1	CALL_1
0x4000626	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	        90	string3.h	FUNCTION_103	CALL_6
0x400062b	      0xbe01000000	                              mov esi, 1	      1964	am.c	FUNCTION_52	CALL_2
0x4000630	          0x4889e7	                            mov rdi, rsp	      1964	am.c	FUNCTION_52	CALL_2
0x4000633	      0xe800000000	                          call 0x4000638	      1964	am.c	FUNCTION_52	CALL_2
0x4000638	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_103	CALL_6
0x400063a	      0xb960000000	                           mov ecx, 0x60	        90	string3.h	FUNCTION_103	CALL_6
0x400063f	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_103	CALL_6
0x4000642	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_103	CALL_6
0x4000645	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1972	am.c	FUNCTION_52	CALL_4
0x4000649	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1972	am.c	FUNCTION_52	CALL_4
0x400064d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1972	am.c	FUNCTION_52	CALL_4
0x4000652	    0xc78424400200	              mov dword [rsp + 0x240], 1	      1967	am.c	FUNCTION_52
0x400065d	    0x48c784246002	              mov qword [rsp + 0x260], 0	      1968	am.c	FUNCTION_52
0x4000669	    0x48c784245802	              mov qword [rsp + 0x258], 0	      1969	am.c	FUNCTION_52
0x4000675	    0xc74424440100	               mov dword [rsp + 0x44], 1	      1970	am.c	FUNCTION_52
0x400067d	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	      1971	am.c	FUNCTION_52
0x4000689	      0xe800000000	                          call 0x400068e	      1972	am.c	FUNCTION_52	CALL_4
0x400068e	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4000693	          0x4889ea	                            mov rdx, rbp	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x4000696	      0xbf01000000	                              mov edi, 1	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x400069b	      0xe800000000	                          call 0x40006a0	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40006a0	            0x85c0	                           test eax, eax	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40006a2	            0x754c	                           jne 0x40006f0	      1974	am.c	FUNCTION_52	IF_2	CALL_5
0x40006a4	      0xba01000000	                              mov edx, 1	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40006a9	          0x4889e6	                            mov rsi, rsp	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40006ac	      0xbf00000000	                              mov edi, 0	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40006b1	      0xe800000000	                          call 0x40006b6	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40006b6	            0x85c0	                           test eax, eax	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40006b8	            0x754a	                           jne 0x4000704	      1979	am.c	FUNCTION_52	IF_3	CALL_7
0x40006ba	    0x488b8c244803	           mov rcx, qword [rsp + 0x348] 	      1983	am.c	FUNCTION_52
0x40006c2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1983	am.c	FUNCTION_52
0x40006cb	            0x7532	                           jne 0x40006ff	      1983	am.c	FUNCTION_52
0x40006cd	    0x4881c4580300	                          add rsp, 0x358	      1983	am.c	FUNCTION_52
0x40006d4	              0x5b	                                 pop rbx	      1983	am.c	FUNCTION_52
0x40006d5	              0x5d	                                 pop rbp	      1983	am.c	FUNCTION_52
0x40006d6	              0xc3	                                     ret	      1983	am.c	FUNCTION_52
0x40006d7	    0x660f1f840000	                    nop word [rax + rax]	      1983	am.c	FUNCTION_52
0x40006e0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1962	am.c	FUNCTION_52	IF_1
0x40006e5	            0xebd3	                           jmp 0x40006ba	      1962	am.c	FUNCTION_52	IF_1
0x40006e7	    0x660f1f840000	                    nop word [rax + rax]	      1962	am.c	FUNCTION_52	IF_1
0x40006f0	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_143	CALL_1
0x40006f3	      0xe800000000	                          call 0x40006f8	       304	lockfile.h	FUNCTION_143	CALL_1
0x40006f8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1976	am.c	FUNCTION_52	IF_2
0x40006fd	            0xebbb	                           jmp 0x40006ba	      1976	am.c	FUNCTION_52	IF_2
0x40006ff	      0xe800000000	                          call 0x4000704	      1983	am.c	FUNCTION_52
0x4000704	      0xbf00000000	                              mov edi, 0	      1983	am.c	FUNCTION_52
0x4000709	      0xe8d2fcffff	                       call sym._.part.6	      1983	am.c	FUNCTION_52
0x400070e	          0x4889c7	                            mov rdi, rax	      1980	am.c	FUNCTION_52	CALL_9
0x4000711	            0x31c0	                            xor eax, eax	      1980	am.c	FUNCTION_52	CALL_9
0x4000713	      0xe800000000	                          call 0x4000718	      1980	am.c	FUNCTION_52	CALL_9
do_commit	FOR,0:IF,7:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,27:functions,0	179
0x4000b20	            0x4155	                                push r13	      1619	am.c	FUNCTION_46
0x4000b22	            0x4154	                                push r12	      1619	am.c	FUNCTION_46
0x4000b24	            0x31d2	                            xor edx, edx	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4000b26	              0x55	                                push rbp	      1619	am.c	FUNCTION_46
0x4000b27	              0x53	                                push rbx	      1619	am.c	FUNCTION_46
0x4000b28	      0xbe00000000	                              mov esi, 0	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4000b2d	          0x4889fb	                            mov rbx, rdi	      1619	am.c	FUNCTION_46
0x4000b30	            0x31ff	                            xor edi, edi	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4000b32	    0x4881eca80000	                           sub rsp, 0xa8	      1619	am.c	FUNCTION_46
0x4000b39	    0x64488b042528	                mov rax, qword fs:[0x28]	      1619	am.c	FUNCTION_46
0x4000b42	    0x488984249800	             mov qword [rsp + 0x98], rax	      1619	am.c	FUNCTION_46
0x4000b4a	            0x31c0	                            xor eax, eax	      1619	am.c	FUNCTION_46
0x4000b4c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1622	am.c	FUNCTION_46
0x4000b55	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1624	am.c	FUNCTION_46
0x4000b5e	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1624	am.c	FUNCTION_46
0x4000b67	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1624	am.c	FUNCTION_46
0x4000b70	      0xe800000000	                          call 0x4000b75	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4000b75	            0x85c0	                           test eax, eax	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4000b77	     0xf8579020000	                           jne 0x4000df6	      1626	am.c	FUNCTION_46	IF_1	CALL_1
0x4000b7d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4000b82	            0x31d2	                            xor edx, edx	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4000b84	            0x31f6	                            xor esi, esi	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4000b86	      0xe800000000	                          call 0x4000b8b	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4000b8b	            0x85c0	                           test eax, eax	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4000b8d	     0xf854f020000	                           jne 0x4000de2	      1629	am.c	FUNCTION_46	IF_2	CALL_3
0x4000b93	      0x488d742460	                   lea rsi, [rsp + 0x60]	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4000b98	      0xbf00000000	                              mov edi, 0	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4000b9d	      0xe800000000	                          call 0x4000ba2	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4000ba2	            0x85c0	                           test eax, eax	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4000ba4	     0xf84fe010000	                            je 0x4000da8	      1632	am.c	FUNCTION_46	IF_3	CALL_6
0x4000baa	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_114
0x4000baf	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_114
0x4000bb4	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_114
0x4000bb6	      0xe800000000	                          call 0x4000bbb	        54	gettext.h	FUNCTION_114
0x4000bbb	    0x488b35000000	            mov rsi, qword [0x04000bc2] 	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4000bc2	          0x4889c2	                            mov rdx, rax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4000bc5	          0x4889df	                            mov rdi, rbx	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4000bc8	            0x31c0	                            xor eax, eax	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4000bca	            0x31ed	                            xor ebp, ebp	      1636	am.c	FUNCTION_46	ELSE_1
0x4000bcc	      0xe8fff6ffff	                            call sym.say	      1637	am.c	FUNCTION_46	ELSE_1	CALL_10
0x4000bd1	    0x448b8b8c0000	            mov r9d, dword [rbx + 0x8c] 	      1640	am.c	FUNCTION_46	CALL_11
0x4000bd8	            0x31d2	                            xor edx, edx	      1640	am.c	FUNCTION_46	CALL_11
0x4000bda	          0x4585c9	                           test r9d, r9d	      1640	am.c	FUNCTION_46	CALL_11
0x4000bdd	            0x7504	                           jne 0x4000be3	      1640	am.c	FUNCTION_46	CALL_11
0x4000bdf	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1640	am.c	FUNCTION_46	CALL_11
0x4000be3	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1640	am.c	FUNCTION_46	CALL_11
0x4000be7	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1640	am.c	FUNCTION_46	CALL_11
0x4000beb	      0xb901000000	                              mov ecx, 1	      1640	am.c	FUNCTION_46	CALL_11
0x4000bf0	      0xe800000000	                          call 0x4000bf5	      1640	am.c	FUNCTION_46	CALL_11
0x4000bf5	    0x448b83880000	            mov r8d, dword [rbx + 0x88] 	      1644	am.c	FUNCTION_46	IF_4
0x4000bfc	          0x4989c1	                             mov r9, rax	      1640	am.c	FUNCTION_46	CALL_11
0x4000bff	          0x4585c0	                           test r8d, r8d	      1644	am.c	FUNCTION_46	IF_4
0x4000c02	            0x742c	                            je 0x4000c30	      1644	am.c	FUNCTION_46	IF_4
0x4000c04	    0x8bbb8c000000	            mov edi, dword [rbx + 0x8c] 	      1645	am.c	FUNCTION_46	IF_4
0x4000c0a	      0xbe00000000	                              mov esi, 0	      1645	am.c	FUNCTION_46	IF_4
0x4000c0f	            0x85ff	                           test edi, edi	      1645	am.c	FUNCTION_46	IF_4
0x4000c11	            0x7504	                           jne 0x4000c17	      1645	am.c	FUNCTION_46	IF_4
0x4000c13	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      1645	am.c	FUNCTION_46	IF_4
0x4000c17	      0xba01000000	                              mov edx, 1	      1645	am.c	FUNCTION_46	IF_4
0x4000c1c	      0xbf00000000	                              mov edi, 0	      1645	am.c	FUNCTION_46	IF_4
0x4000c21	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1645	am.c	FUNCTION_46	IF_4
0x4000c26	      0xe800000000	                          call 0x4000c2b	      1645	am.c	FUNCTION_46	IF_4
0x4000c2b	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1645	am.c	FUNCTION_46	IF_4
0x4000c30	        0x4883ec08	                              sub rsp, 8	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c34	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c38	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c3c	    0xffb398000000	                 push qword [rbx + 0x98]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c42	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c47	    0x4c8d84249000	                    lea r8, [rsp + 0x90]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c4f	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c54	      0xe800000000	                          call 0x4000c59	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c59	            0x85c0	                           test eax, eax	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c5b	              0x5a	                                 pop rdx	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c5c	              0x59	                                 pop rcx	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c5d	     0xf8566010000	                           jne 0x4000dc9	      1648	am.c	FUNCTION_46	IF_5	CALL_12
0x4000c63	      0xbf00000000	                              mov edi, 0	      1652	am.c	FUNCTION_46	CALL_15
0x4000c68	      0xe800000000	                          call 0x4000c6d	      1652	am.c	FUNCTION_46	CALL_15
0x4000c6d	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      1656	am.c	FUNCTION_46	CALL_17
0x4000c71	          0x4885c0	                           test rax, rax	      1654	am.c	FUNCTION_46	IF_6
0x4000c74	          0x4989c4	                            mov r12, rax	      1652	am.c	FUNCTION_46	CALL_15
0x4000c77	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2
0x4000c7c	      0xb800000000	                              mov eax, 0	      1654	am.c	FUNCTION_46	IF_6
0x4000c81	        0x4c0f44e0	                          cmove r12, rax	      1654	am.c	FUNCTION_46	IF_6
0x4000c85	          0x4c89ef	                            mov rdi, r13	        57	am.c	FUNCTION_2
0x4000c88	      0xe800000000	                          call 0x4000c8d	        57	am.c	FUNCTION_2
0x4000c8d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1656	am.c	FUNCTION_46	CALL_17
0x4000c92	          0x4c29e8	                            sub rax, r13	      1656	am.c	FUNCTION_46	CALL_17
0x4000c95	          0x4d89e8	                             mov r8, r13	      1656	am.c	FUNCTION_46	CALL_17
0x4000c98	          0x4889c1	                            mov rcx, rax	      1656	am.c	FUNCTION_46	CALL_17
0x4000c9b	          0x4c89e2	                            mov rdx, r12	      1656	am.c	FUNCTION_46	CALL_17
0x4000c9e	            0x31c0	                            xor eax, eax	      1656	am.c	FUNCTION_46	CALL_17
0x4000ca0	      0xbe00000000	                              mov esi, 0	      1656	am.c	FUNCTION_46	CALL_17
0x4000ca5	      0xe800000000	                          call 0x4000caa	      1656	am.c	FUNCTION_46	CALL_17
0x4000caa	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1659	am.c	FUNCTION_46	CALL_18
0x4000caf	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      1659	am.c	FUNCTION_46	CALL_18
0x4000cb7	          0x4531c0	                            xor r8d, r8d	      1659	am.c	FUNCTION_46	CALL_18
0x4000cba	    0x41b901000000	                              mov r9d, 1	      1659	am.c	FUNCTION_46	CALL_18
0x4000cc0	          0x4889e9	                            mov rcx, rbp	      1659	am.c	FUNCTION_46	CALL_18
0x4000cc3	      0xbe00000000	                              mov esi, 0	      1659	am.c	FUNCTION_46	CALL_18
0x4000cc8	      0xe800000000	                          call 0x4000ccd	      1659	am.c	FUNCTION_46	CALL_18
0x4000ccd	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1662	am.c	FUNCTION_46	IF_7
0x4000cd3	            0x85c0	                           test eax, eax	      1662	am.c	FUNCTION_46	IF_7
0x4000cd5	     0xf848d000000	                            je 0x4000d68	      1662	am.c	FUNCTION_46	IF_7
0x4000cdb	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4000cde	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000ce3	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4000ce8	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4000cea	        0x4883c338	                           add rbx, 0x38	       990	cache.h	FUNCTION_154	CALL_1
0x4000cee	      0xe800000000	                          call 0x4000cf3	       183	am.c	FUNCTION_6	CALL_1
0x4000cf3	      0xbe00000000	                              mov esi, 0	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4000cf8	          0x4889c7	                            mov rdi, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4000cfb	      0xe800000000	                          call 0x4000d00	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4000d00	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_151	CALL_1
0x4000d05	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_151	CALL_1
0x4000d0a	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_151	CALL_1
0x4000d0d	          0x4889c5	                            mov rbp, rax	      1663	am.c	FUNCTION_46	IF_7	CALL_20
0x4000d10	      0xe800000000	                          call 0x4000d15	       975	cache.h	FUNCTION_151	CALL_1
0x4000d15	            0x85c0	                           test eax, eax	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4000d17	     0xf84e3000000	                            je 0x4000e00	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4000d1d	          0x4889df	                            mov rdi, rbx	      1666	am.c	FUNCTION_46	IF_7	CALL_23
0x4000d20	      0xe800000000	                          call 0x4000d25	      1666	am.c	FUNCTION_46	IF_7	CALL_23
0x4000d25	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_174
0x4000d2a	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_174
0x4000d2d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_174
0x4000d32	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_174
0x4000d35	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_174
0x4000d37	      0xe800000000	                          call 0x4000d3c	        97	stdio2.h	CALL_174
0x4000d3c	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      1667	am.c	FUNCTION_46	IF_7	CALL_24
0x4000d44	      0xe800000000	                          call 0x4000d49	      1667	am.c	FUNCTION_46	IF_7	CALL_24
0x4000d49	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_174
0x4000d4c	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_174
0x4000d4f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_174
0x4000d54	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_174
0x4000d59	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_174
0x4000d5b	      0xe800000000	                          call 0x4000d60	        97	stdio2.h	CALL_174
0x4000d60	          0x4889ef	                            mov rdi, rbp	      1668	am.c	FUNCTION_46	IF_7	CALL_25
0x4000d63	      0xe800000000	                          call 0x4000d68	      1668	am.c	FUNCTION_46	IF_7	CALL_25
0x4000d68	            0x31d2	                            xor edx, edx	      1671	am.c	FUNCTION_46	CALL_26
0x4000d6a	            0x31ff	                            xor edi, edi	      1671	am.c	FUNCTION_46	CALL_26
0x4000d6c	      0xbe00000000	                              mov esi, 0	      1671	am.c	FUNCTION_46	CALL_26
0x4000d71	            0x31c0	                            xor eax, eax	      1671	am.c	FUNCTION_46	CALL_26
0x4000d73	      0xe800000000	                          call 0x4000d78	      1671	am.c	FUNCTION_46	CALL_26
0x4000d78	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1673	am.c	FUNCTION_46	CALL_27
0x4000d7d	      0xe800000000	                          call 0x4000d82	      1673	am.c	FUNCTION_46	CALL_27
0x4000d82	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1674	am.c	FUNCTION_46
0x4000d8a	    0x644833042528	                xor rax, qword fs:[0x28]	      1674	am.c	FUNCTION_46
0x4000d93	            0x7548	                           jne 0x4000ddd	      1674	am.c	FUNCTION_46
0x4000d95	    0x4881c4a80000	                           add rsp, 0xa8	      1674	am.c	FUNCTION_46
0x4000d9c	              0x5b	                                 pop rbx	      1674	am.c	FUNCTION_46
0x4000d9d	              0x5d	                                 pop rbp	      1674	am.c	FUNCTION_46
0x4000d9e	            0x415c	                                 pop r12	      1674	am.c	FUNCTION_46
0x4000da0	            0x415d	                                 pop r13	      1674	am.c	FUNCTION_46
0x4000da2	              0xc3	                                     ret	      1674	am.c	FUNCTION_46
0x4000da3	       0xf1f440000	                   nop dword [rax + rax]	      1674	am.c	FUNCTION_46
0x4000da8	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4000dad	      0x488d6c2460	                   lea rbp, [rsp + 0x60]	      1633	am.c	FUNCTION_46	IF_3
0x4000db2	      0xe800000000	                          call 0x4000db7	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4000db7	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4000dbc	          0x4889c7	                            mov rdi, rax	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4000dbf	      0xe800000000	                          call 0x4000dc4	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4000dc4	      0xe908feffff	                           jmp 0x4000bd1	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4000dc9	      0xbf00000000	                              mov edi, 0	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4000dce	      0xe80df6ffff	                       call sym._.part.6	      1634	am.c	FUNCTION_46	IF_3	CALL_8
0x4000dd3	          0x4889c7	                            mov rdi, rax	      1650	am.c	FUNCTION_46	CALL_14
0x4000dd6	            0x31c0	                            xor eax, eax	      1650	am.c	FUNCTION_46	CALL_14
0x4000dd8	      0xe800000000	                          call 0x4000ddd	      1650	am.c	FUNCTION_46	CALL_14
0x4000ddd	      0xe800000000	                          call 0x4000de2	      1674	am.c	FUNCTION_46
0x4000de2	      0xbf00000000	                              mov edi, 0	      1674	am.c	FUNCTION_46
0x4000de7	      0xe8f4f5ffff	                       call sym._.part.6	      1674	am.c	FUNCTION_46
0x4000dec	          0x4889c7	                            mov rdi, rax	      1630	am.c	FUNCTION_46	CALL_5
0x4000def	            0x31c0	                            xor eax, eax	      1630	am.c	FUNCTION_46	CALL_5
0x4000df1	      0xe800000000	                          call 0x4000df6	      1630	am.c	FUNCTION_46	CALL_5
0x4000df6	      0xbf01000000	                              mov edi, 1	      1627	am.c	FUNCTION_46	CALL_2
0x4000dfb	      0xe800000000	                          call 0x4000e00	      1627	am.c	FUNCTION_46	CALL_2
0x4000e00	      0xb900000000	                              mov ecx, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4000e05	      0xba81060000	                          mov edx, 0x681	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4000e0a	      0xbe00000000	                              mov esi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4000e0f	      0xbf00000000	                              mov edi, 0	      1665	am.c	FUNCTION_46	IF_7	CALL_22
0x4000e14	      0xe800000000	                          call 0x4000e19	      1665	am.c	FUNCTION_46	IF_7	CALL_22
am_next	FOR,0:IF,1:SWITCH,0:DO,0:WHILE,0:ELSE,1:CALL,13:functions,0	100
0x4001000	              0x55	                                push rbp	      1100	am.c	FUNCTION_32
0x4001001	              0x53	                                push rbx	      1100	am.c	FUNCTION_32
0x4001002	          0x4889fb	                            mov rbx, rdi	      1100	am.c	FUNCTION_32
0x4001005	        0x4883ec28	                           sub rsp, 0x28	      1100	am.c	FUNCTION_32
0x4001009	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      1103	am.c	FUNCTION_32
0x400100d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1100	am.c	FUNCTION_32
0x4001016	      0x4889442418	             mov qword [rsp + 0x18], rax	      1100	am.c	FUNCTION_32
0x400101b	            0x31c0	                            xor eax, eax	      1100	am.c	FUNCTION_32
0x400101d	      0xe800000000	                          call 0x4001022	      1103	am.c	FUNCTION_32
0x4001022	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1104	am.c	FUNCTION_32
0x4001026	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1103	am.c	FUNCTION_32
0x400102e	      0xe800000000	                          call 0x4001033	      1104	am.c	FUNCTION_32
0x4001033	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1105	am.c	FUNCTION_32
0x4001037	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1104	am.c	FUNCTION_32
0x400103f	      0xe800000000	                          call 0x4001044	      1105	am.c	FUNCTION_32
0x4001044	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      1106	am.c	FUNCTION_32
0x4001048	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1105	am.c	FUNCTION_32
0x4001050	      0xe800000000	                          call 0x4001055	      1106	am.c	FUNCTION_32
0x4001055	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001058	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400105d	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001062	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001064	    0x48c743280000	               mov qword [rbx + 0x28], 0	      1106	am.c	FUNCTION_32
0x400106c	    0x48c743300000	               mov qword [rbx + 0x30], 0	      1107	am.c	FUNCTION_32
0x4001074	      0xe800000000	                          call 0x4001079	       183	am.c	FUNCTION_6	CALL_1
0x4001079	          0x4889c7	                            mov rdi, rax	      1109	am.c	FUNCTION_32	CALL_2
0x400107c	      0xe800000000	                          call 0x4001081	      1109	am.c	FUNCTION_32	CALL_2
0x4001081	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001084	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001089	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400108e	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001090	      0xe800000000	                          call 0x4001095	       183	am.c	FUNCTION_6	CALL_1
0x4001095	          0x4889c7	                            mov rdi, rax	      1110	am.c	FUNCTION_32	CALL_4
0x4001098	      0xe800000000	                          call 0x400109d	      1110	am.c	FUNCTION_32	CALL_4
0x400109d	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40010a0	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40010a5	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40010aa	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40010ac	    0x48c743380000	               mov qword [rbx + 0x38], 0	        90	string3.h	FUNCTION_103	CALL_6
0x40010b4	    0x48c743400000	               mov qword [rbx + 0x40], 0	        90	string3.h	FUNCTION_103	CALL_6
0x40010bc	    0xc74348000000	               mov dword [rbx + 0x48], 0	        90	string3.h	FUNCTION_103	CALL_6
0x40010c3	      0xe800000000	                          call 0x40010c8	       183	am.c	FUNCTION_6	CALL_1
0x40010c8	          0x4889c7	                            mov rdi, rax	      1113	am.c	FUNCTION_32	CALL_7
0x40010cb	      0xe800000000	                          call 0x40010d0	      1113	am.c	FUNCTION_32	CALL_7
0x40010d0	            0x31d2	                            xor edx, edx	      1114	am.c	FUNCTION_32	CALL_8
0x40010d2	            0x31ff	                            xor edi, edi	      1114	am.c	FUNCTION_32	CALL_8
0x40010d4	      0xb901000000	                              mov ecx, 1	      1114	am.c	FUNCTION_32	CALL_8
0x40010d9	      0xbe00000000	                              mov esi, 0	      1114	am.c	FUNCTION_32	CALL_8
0x40010de	      0xe800000000	                          call 0x40010e3	      1114	am.c	FUNCTION_32	CALL_8
0x40010e3	          0x4889e6	                            mov rsi, rsp	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40010e6	      0xbf00000000	                              mov edi, 0	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40010eb	      0xe800000000	                          call 0x40010f0	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40010f0	            0x85c0	                           test eax, eax	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40010f2	            0x7474	                            je 0x4001168	      1116	am.c	FUNCTION_32	IF_1	CALL_9
0x40010f4	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40010f7	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40010fc	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001101	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001103	      0xe800000000	                          call 0x4001108	       183	am.c	FUNCTION_6	CALL_1
0x4001108	      0xba00000000	                              mov edx, 0	       192	am.c	FUNCTION_7	CALL_2
0x400110d	          0x4889c7	                            mov rdi, rax	       192	am.c	FUNCTION_7	CALL_2
0x4001110	      0xbe00000000	                              mov esi, 0	       192	am.c	FUNCTION_7	CALL_2
0x4001115	            0x31c0	                            xor eax, eax	       192	am.c	FUNCTION_7	CALL_2
0x4001117	      0xe800000000	                          call 0x400111c	       192	am.c	FUNCTION_7	CALL_2
0x400111c	          0x8b4308	                mov eax, dword [rbx + 8]	      1121	am.c	FUNCTION_32
0x400111f	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001122	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001127	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x400112c	          0x8d6801	                      lea ebp, [rax + 1]	      1121	am.c	FUNCTION_32
0x400112f	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001131	          0x896b08	                mov dword [rbx + 8], ebp	      1121	am.c	FUNCTION_32
0x4001134	      0xe800000000	                          call 0x4001139	       183	am.c	FUNCTION_6	CALL_1
0x4001139	            0x89ea	                            mov edx, ebp	       198	am.c	FUNCTION_8	CALL_2
0x400113b	          0x4889c7	                            mov rdi, rax	       198	am.c	FUNCTION_8	CALL_2
0x400113e	      0xbe00000000	                              mov esi, 0	       198	am.c	FUNCTION_8	CALL_2
0x4001143	            0x31c0	                            xor eax, eax	       198	am.c	FUNCTION_8	CALL_2
0x4001145	      0xe800000000	                          call 0x400114a	       198	am.c	FUNCTION_8	CALL_2
0x400114a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1123	am.c	FUNCTION_32
0x400114f	    0x644833042528	                xor rax, qword fs:[0x28]	      1123	am.c	FUNCTION_32
0x4001158	            0x7541	                           jne 0x400119b	      1123	am.c	FUNCTION_32
0x400115a	        0x4883c428	                           add rsp, 0x28	      1123	am.c	FUNCTION_32
0x400115e	              0x5b	                                 pop rbx	      1123	am.c	FUNCTION_32
0x400115f	              0x5d	                                 pop rbp	      1123	am.c	FUNCTION_32
0x4001160	              0xc3	                                     ret	      1123	am.c	FUNCTION_32
0x4001161	     0xf1f80000000	                         nop dword [rax]	      1123	am.c	FUNCTION_32
0x4001168	          0x4889e7	                            mov rdi, rsp	      1117	am.c	FUNCTION_32	CALL_11
0x400116b	      0xe800000000	                          call 0x4001170	      1117	am.c	FUNCTION_32	CALL_11
0x4001170	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001173	          0x4889c5	                            mov rbp, rax	      1117	am.c	FUNCTION_32	CALL_11
0x4001176	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400117b	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001180	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001182	      0xe800000000	                          call 0x4001187	       183	am.c	FUNCTION_6	CALL_1
0x4001187	          0x4889ea	                            mov rdx, rbp	       192	am.c	FUNCTION_7	CALL_2
0x400118a	          0x4889c7	                            mov rdi, rax	       192	am.c	FUNCTION_7	CALL_2
0x400118d	      0xbe00000000	                              mov esi, 0	       192	am.c	FUNCTION_7	CALL_2
0x4001192	            0x31c0	                            xor eax, eax	       192	am.c	FUNCTION_7	CALL_2
0x4001194	      0xe800000000	                          call 0x4001199	       192	am.c	FUNCTION_7	CALL_2
0x4001199	            0xeb81	                           jmp 0x400111c	       192	am.c	FUNCTION_7	CALL_2
0x400119b	      0xe800000000	             call sym.fall_back_threeway	      1123	am.c	FUNCTION_32
write_commit_patch	FOR,0:IF,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,6:functions,0	45
0x40001e0	              0x55	                                push rbp	      1369	am.c	FUNCTION_40
0x40001e1	              0x53	                                push rbx	      1369	am.c	FUNCTION_40
0x40001e2	          0x4889f3	                            mov rbx, rsi	      1369	am.c	FUNCTION_40
0x40001e5	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40001ea	    0x4881ecc80800	                          sub rsp, 0x8c8	      1369	am.c	FUNCTION_40
0x40001f1	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x40001f4	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40001f9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1369	am.c	FUNCTION_40
0x4000202	    0x48898424b808	            mov qword [rsp + 0x8b8], rax	      1369	am.c	FUNCTION_40
0x400020a	            0x31c0	                            xor eax, eax	      1369	am.c	FUNCTION_40
0x400020c	      0xe800000000	                          call 0x4000211	       183	am.c	FUNCTION_6	CALL_1
0x4000211	      0xbe00000000	                              mov esi, 0	      1373	am.c	FUNCTION_40	CALL_2
0x4000216	          0x4889c7	                            mov rdi, rax	      1373	am.c	FUNCTION_40	CALL_2
0x4000219	      0xe800000000	                          call 0x400021e	      1373	am.c	FUNCTION_40	CALL_2
0x400021e	            0x31f6	                            xor esi, esi	      1374	am.c	FUNCTION_40	CALL_3
0x4000220	          0x4889e7	                            mov rdi, rsp	      1374	am.c	FUNCTION_40	CALL_3
0x4000223	          0x4889c5	                            mov rbp, rax	      1373	am.c	FUNCTION_40	CALL_2
0x4000226	      0xe800000000	                          call 0x400022b	      1374	am.c	FUNCTION_40	CALL_3
0x400022b	       0xfb6542479	           movzx edx, byte [rsp + 0x79] 	      1380	am.c	FUNCTION_40
0x4000230	          0x4889de	                            mov rsi, rbx	      1386	am.c	FUNCTION_40	CALL_4
0x4000233	          0x4889e7	                            mov rdi, rsp	      1386	am.c	FUNCTION_40	CALL_4
0x4000236	      0x804c247b80	              or byte [rsp + 0x7b], 0x80	      1377	am.c	FUNCTION_40
0x400023b	    0x808c24300500	             or byte [rsp + 0x530], 0x14	      1382	am.c	FUNCTION_40
0x4000243	    0xc78424a00000	               mov dword [rsp + 0xa0], 0	      1376	am.c	FUNCTION_40
0x400024e	    0xc78424580500	          mov dword [rsp + 0x558], 0x10 	      1379	am.c	FUNCTION_40
0x4000259	    0xc78424380500	              mov dword [rsp + 0x538], 0	      1383	am.c	FUNCTION_40
0x4000264	    0x4889ac24f805	            mov qword [rsp + 0x5f8], rbp	      1384	am.c	FUNCTION_40
0x400026c	          0x83ca0d	                             or edx, 0xd	      1380	am.c	FUNCTION_40
0x400026f	        0x88542479	               mov byte [rsp + 0x79], dl	      1380	am.c	FUNCTION_40
0x4000273	      0xba00000000	                              mov edx, 0	      1386	am.c	FUNCTION_40	CALL_4
0x4000278	    0xc78424000600	              mov dword [rsp + 0x600], 1	      1385	am.c	FUNCTION_40
0x4000283	      0xe800000000	                          call 0x4000288	      1386	am.c	FUNCTION_40	CALL_4
0x4000288	    0x488dbc24f804	                  lea rdi, [rsp + 0x4f8]	      1387	am.c	FUNCTION_40	CALL_5
0x4000290	      0xe800000000	                          call 0x4000295	      1387	am.c	FUNCTION_40	CALL_5
0x4000295	          0x4889de	                            mov rsi, rbx	      1388	am.c	FUNCTION_40	CALL_6
0x4000298	          0x4889e7	                            mov rdi, rsp	      1388	am.c	FUNCTION_40	CALL_6
0x400029b	      0xe800000000	                          call 0x40002a0	      1388	am.c	FUNCTION_40	CALL_6
0x40002a0	    0x488b8424b808	           mov rax, qword [rsp + 0x8b8] 	      1389	am.c	FUNCTION_40
0x40002a8	    0x644833042528	                xor rax, qword fs:[0x28]	      1389	am.c	FUNCTION_40
0x40002b1	            0x750a	                           jne 0x40002bd	      1389	am.c	FUNCTION_40
0x40002b3	    0x4881c4c80800	                          add rsp, 0x8c8	      1389	am.c	FUNCTION_40
0x40002ba	              0x5b	                                 pop rbx	      1389	am.c	FUNCTION_40
0x40002bb	              0x5d	                                 pop rbp	      1389	am.c	FUNCTION_40
0x40002bc	              0xc3	                                     ret	      1389	am.c	FUNCTION_40
0x40002bd	      0xe800000000	                          call 0x40002c2	      1389	am.c	FUNCTION_40
say	FOR,0:IF,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,4:functions,0	42
0x40002d0	              0x53	                                push rbx	       212	am.c	FUNCTION_10
0x40002d1	          0x4889f3	                            mov rbx, rsi	       212	am.c	FUNCTION_10
0x40002d4	    0x4881ecd00000	                           sub rsp, 0xd0	       212	am.c	FUNCTION_10
0x40002db	            0x84c0	                             test al, al	       212	am.c	FUNCTION_10
0x40002dd	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       212	am.c	FUNCTION_10
0x40002e2	      0x4c89442440	              mov qword [rsp + 0x40], r8	       212	am.c	FUNCTION_10
0x40002e7	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       212	am.c	FUNCTION_10
0x40002ec	            0x7437	                            je 0x4000325	       212	am.c	FUNCTION_10
0x40002ee	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       212	am.c	FUNCTION_10
0x40002f3	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       212	am.c	FUNCTION_10
0x40002f8	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       212	am.c	FUNCTION_10
0x40002fd	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       212	am.c	FUNCTION_10
0x4000305	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       212	am.c	FUNCTION_10
0x400030d	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       212	am.c	FUNCTION_10
0x4000315	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       212	am.c	FUNCTION_10
0x400031d	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       212	am.c	FUNCTION_10
0x4000325	    0x64488b042528	                mov rax, qword fs:[0x28]	       212	am.c	FUNCTION_10
0x400032e	      0x4889442418	             mov qword [rsp + 0x18], rax	       212	am.c	FUNCTION_10
0x4000333	            0x31c0	                            xor eax, eax	       212	am.c	FUNCTION_10
0x4000335	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       215	am.c	FUNCTION_10	CALL_1
0x400033d	      0x4889442408	                mov qword [rsp + 8], rax	       215	am.c	FUNCTION_10	CALL_1
0x4000342	      0x488d442420	                   lea rax, [rsp + 0x20]	       215	am.c	FUNCTION_10	CALL_1
0x4000347	    0xc70424180000	                   mov dword [rsp], 0x18	       215	am.c	FUNCTION_10	CALL_1
0x400034e	    0xc74424043000	               mov dword [rsp + 4], 0x30	       215	am.c	FUNCTION_10	CALL_1
0x4000356	      0x4889442410	             mov qword [rsp + 0x10], rax	       215	am.c	FUNCTION_10	CALL_1
0x400035b	          0x8b4758	            mov eax, dword [rdi + 0x58] 	       216	am.c	FUNCTION_10	IF_1
0x400035e	            0x85c0	                           test eax, eax	       216	am.c	FUNCTION_10	IF_1
0x4000360	            0x751d	                           jne 0x400037f	       216	am.c	FUNCTION_10	IF_1
0x4000362	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_121	CALL_1
0x4000367	          0x4889df	                            mov rdi, rbx	       127	stdio2.h	FUNCTION_121	CALL_1
0x400036a	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_121	CALL_1
0x400036d	      0xe800000000	                          call 0x4000372	       127	stdio2.h	FUNCTION_121	CALL_1
0x4000372	          0x4889de	                            mov rsi, rbx	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x4000375	      0xbf0a000000	                            mov edi, 0xa	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x400037a	      0xe800000000	                          call 0x400037f	       218	am.c	FUNCTION_10	IF_1	CALL_3
0x400037f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       221	am.c	FUNCTION_10
0x4000384	    0x644833042528	                xor rax, qword fs:[0x28]	       221	am.c	FUNCTION_10
0x400038d	            0x7509	                           jne 0x4000398	       221	am.c	FUNCTION_10
0x400038f	    0x4881c4d00000	                           add rsp, 0xd0	       221	am.c	FUNCTION_10
0x4000396	              0x5b	                                 pop rbx	       221	am.c	FUNCTION_10
0x4000397	              0xc3	                                     ret	       221	am.c	FUNCTION_10
0x4000398	      0xe800000000	                          call 0x400039d	       221	am.c	FUNCTION_10
clean_index	FOR,0:IF,7:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,14:functions,0	76
0x4001700	            0x4154	                                push r12	      1990	am.c	FUNCTION_53
0x4001702	              0x55	                                push rbp	      1990	am.c	FUNCTION_53
0x4001703	          0x4989f4	                            mov r12, rsi	      1990	am.c	FUNCTION_53
0x4001706	              0x53	                                push rbx	      1990	am.c	FUNCTION_53
0x4001707	          0x4889fd	                            mov rbp, rdi	      1990	am.c	FUNCTION_53
0x400170a	        0x4883ec20	                           sub rsp, 0x20	      1990	am.c	FUNCTION_53
0x400170e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1990	am.c	FUNCTION_53
0x4001717	      0x4889442418	             mov qword [rsp + 0x18], rax	      1990	am.c	FUNCTION_53
0x400171c	            0x31c0	                            xor eax, eax	      1990	am.c	FUNCTION_53
0x400171e	      0xe800000000	                          call 0x4001723	      1994	am.c	FUNCTION_53	CALL_1
0x4001723	          0x4885c0	                           test rax, rax	      1995	am.c	FUNCTION_53	IF_1
0x4001726	     0xf8495000000	                            je 0x40017c1	      1995	am.c	FUNCTION_53	IF_1
0x400172c	          0x4c89e7	                            mov rdi, r12	      1998	am.c	FUNCTION_53	CALL_4
0x400172f	          0x4889c3	                            mov rbx, rax	      1998	am.c	FUNCTION_53	CALL_4
0x4001732	      0xe800000000	                          call 0x4001737	      1998	am.c	FUNCTION_53	CALL_4
0x4001737	          0x4885c0	                           test rax, rax	      1999	am.c	FUNCTION_53	IF_2
0x400173a	          0x4889c5	                            mov rbp, rax	      1998	am.c	FUNCTION_53	CALL_4
0x400173d	     0xf84b4000000	                            je 0x40017f7	      1999	am.c	FUNCTION_53	IF_2
0x4001743	      0xbf00000000	                              mov edi, 0	      2002	am.c	FUNCTION_53
0x4001748	      0xe800000000	                          call 0x400174d	      2002	am.c	FUNCTION_53
0x400174d	      0xba01000000	                              mov edx, 1	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4001752	          0x4889de	                            mov rsi, rbx	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4001755	          0x4889df	                            mov rdi, rbx	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4001758	      0xe813edffff	                call sym.fast_forward_to	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x400175d	            0x85c0	                           test eax, eax	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x400175f	     0xf858b000000	                           jne 0x40017f0	      2004	am.c	FUNCTION_53	IF_3	CALL_7
0x4001765	            0x31d2	                            xor edx, edx	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001767	            0x31f6	                            xor esi, esi	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001769	          0x4889e7	                            mov rdi, rsp	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x400176c	      0xe800000000	                          call 0x4001771	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001771	            0x85c0	                           test eax, eax	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001773	            0x757b	                           jne 0x40017f0	      2007	am.c	FUNCTION_53	IF_4	CALL_8
0x4001775	          0x4889e7	                            mov rdi, rsp	      2010	am.c	FUNCTION_53	CALL_9
0x4001778	      0xe800000000	                          call 0x400177d	      2010	am.c	FUNCTION_53	CALL_9
0x400177d	          0x4885c0	                           test rax, rax	      2011	am.c	FUNCTION_53	IF_5
0x4001780	            0x747a	                            je 0x40017fc	      2011	am.c	FUNCTION_53	IF_5
0x4001782	            0x31d2	                            xor edx, edx	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001784	          0x4889ee	                            mov rsi, rbp	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001787	          0x4889c7	                            mov rdi, rax	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x400178a	      0xe8e1ecffff	                call sym.fast_forward_to	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x400178f	            0x85c0	                           test eax, eax	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001791	            0x755d	                           jne 0x40017f0	      2014	am.c	FUNCTION_53	IF_6	CALL_12
0x4001793	          0x4889ef	                            mov rdi, rbp	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x4001796	      0xe855eeffff	                     call sym.merge_tree	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x400179b	            0x85c0	                           test eax, eax	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x400179d	            0x89c3	                            mov ebx, eax	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x400179f	            0x754f	                           jne 0x40017f0	      2017	am.c	FUNCTION_53	IF_7	CALL_13
0x40017a1	      0xe800000000	                          call 0x40017a6	      2020	am.c	FUNCTION_53	CALL_14
0x40017a6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2023	am.c	FUNCTION_53
0x40017ab	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2023	am.c	FUNCTION_53
0x40017b4	            0x89d8	                            mov eax, ebx	      2023	am.c	FUNCTION_53
0x40017b6	            0x7549	                           jne 0x4001801	      2023	am.c	FUNCTION_53
0x40017b8	        0x4883c420	                           add rsp, 0x20	      2023	am.c	FUNCTION_53
0x40017bc	              0x5b	                                 pop rbx	      2023	am.c	FUNCTION_53
0x40017bd	              0x5d	                                 pop rbp	      2023	am.c	FUNCTION_53
0x40017be	            0x415c	                                 pop r12	      2023	am.c	FUNCTION_53
0x40017c0	              0xc3	                                     ret	      2023	am.c	FUNCTION_53
0x40017c1	          0x4889ef	                            mov rdi, rbp	      1996	am.c	FUNCTION_53	CALL_3
0x40017c4	      0xe800000000	                          call 0x40017c9	      2012	am.c	FUNCTION_53	CALL_11
0x40017c9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_114
0x40017ce	          0x4889c3	                            mov rbx, rax	      2012	am.c	FUNCTION_53	CALL_11
0x40017d1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_114
0x40017d3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_114
0x40017d8	      0xe800000000	                          call 0x40017dd	        54	gettext.h	FUNCTION_114
0x40017dd	          0x4889de	                            mov rsi, rbx	      2012	am.c	FUNCTION_53	CALL_11
0x40017e0	          0x4889c7	                            mov rdi, rax	      2012	am.c	FUNCTION_53	CALL_11
0x40017e3	            0x31c0	                            xor eax, eax	      2012	am.c	FUNCTION_53	CALL_11
0x40017e5	      0xe800000000	                          call 0x40017ea	      2012	am.c	FUNCTION_53	CALL_11
0x40017ea	    0x660f1f440000	                    nop word [rax + rax]	      2012	am.c	FUNCTION_53	CALL_11
0x40017f0	      0xbbffffffff	                     mov ebx, 0xffffffff	      2012	am.c	FUNCTION_53	CALL_11
0x40017f5	            0xebaf	                           jmp 0x40017a6	      2012	am.c	FUNCTION_53	CALL_11
0x40017f7	          0x4c89e7	                            mov rdi, r12	      2000	am.c	FUNCTION_53	CALL_6
0x40017fa	            0xebc8	                           jmp 0x40017c4	      2000	am.c	FUNCTION_53	CALL_6
0x40017fc	          0x4889e7	                            mov rdi, rsp	      2012	am.c	FUNCTION_53	CALL_11
0x40017ff	            0xebc3	                           jmp 0x40017c4	      2012	am.c	FUNCTION_53	CALL_11
0x4001801	      0xe800000000	                          call 0x4001806	      2023	am.c	FUNCTION_53
am_load	FOR,0:IF,11:SWITCH,0:DO,0:WHILE,0:ELSE,6:CALL,45:functions,0	716
0x4001920	            0x4157	                                push r15	       402	am.c	FUNCTION_18
0x4001922	            0x4156	                                push r14	       402	am.c	FUNCTION_18
0x4001924	            0x4155	                                push r13	       402	am.c	FUNCTION_18
0x4001926	            0x4154	                                push r12	       402	am.c	FUNCTION_18
0x4001928	              0x55	                                push rbp	       402	am.c	FUNCTION_18
0x4001929	              0x53	                                push rbx	       402	am.c	FUNCTION_18
0x400192a	        0x4883ec78	                           sub rsp, 0x78	       402	am.c	FUNCTION_18
0x400192e	    0x64488b042528	                mov rax, qword fs:[0x28]	       402	am.c	FUNCTION_18
0x4001937	      0x4889442468	             mov qword [rsp + 0x68], rax	       402	am.c	FUNCTION_18
0x400193c	            0x31c0	                            xor eax, eax	       402	am.c	FUNCTION_18
0x400193e	    0x803d00000000	                cmp byte [0x04001945], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x4001945	    0x48c704240000	                      mov qword [rsp], 0	       403	am.c	FUNCTION_18
0x400194d	    0x48c744240800	                  mov qword [rsp + 8], 0	       403	am.c	FUNCTION_18
0x4001956	    0x48c744241000	               mov qword [rsp + 0x10], 0	       403	am.c	FUNCTION_18
0x400195f	     0xf85180a0000	                           jne 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x4001965	          0x488b37	                    mov rsi, qword [rdi]	       183	am.c	FUNCTION_6	CALL_1
0x4001968	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400196d	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x400196f	          0x4889fb	                            mov rbx, rdi	       183	am.c	FUNCTION_6	CALL_1
0x4001972	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001977	      0xe800000000	                          call 0x400197c	       183	am.c	FUNCTION_6	CALL_1
0x400197c	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x400197e	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001981	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001984	      0xe800000000	                          call 0x4001989	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001989	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x400198c	     0xf88c6070000	                            js 0x4002158	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001992	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001995	      0xe800000000	                          call 0x400199a	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x400199a	        0x8b742408	                mov esi, dword [rsp + 8]	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x400199e	            0x85f6	                           test esi, esi	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40019a0	     0xf88c0070000	                            js 0x4002166	       405	am.c	FUNCTION_18	IF_1	CALL_1
0x40019a6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       407	am.c	FUNCTION_18	CALL_3
0x40019ab	            0x31f6	                            xor esi, esi	       407	am.c	FUNCTION_18	CALL_3
0x40019ad	      0xba0a000000	                            mov edx, 0xa	       407	am.c	FUNCTION_18	CALL_3
0x40019b2	      0xe800000000	                          call 0x40019b7	       407	am.c	FUNCTION_18	CALL_3
0x40019b7	          0x894308	                mov dword [rbx + 8], eax	       407	am.c	FUNCTION_18	CALL_3
0x40019ba	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_64	IF_2
0x40019bf	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x40019c8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x40019ce	     0xf849c090000	                            je 0x4002370	       165	strbuf.h	FUNCTION_64	IF_2
0x40019d4	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x40019d7	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40019da	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40019df	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40019e4	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40019e6	      0xe800000000	                          call 0x40019eb	       183	am.c	FUNCTION_6	CALL_1
0x40019eb	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40019ed	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40019f0	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40019f3	      0xe800000000	                          call 0x40019f8	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40019f8	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40019fb	     0xf8837070000	                            js 0x4002138	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001a01	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001a04	      0xe800000000	                          call 0x4001a09	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001a09	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001a0d	            0x85c9	                           test ecx, ecx	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001a0f	     0xf8831070000	                            js 0x4002146	       409	am.c	FUNCTION_18	IF_2	CALL_4
0x4001a15	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       411	am.c	FUNCTION_18	CALL_6
0x4001a1a	            0x31f6	                            xor esi, esi	       411	am.c	FUNCTION_18	CALL_6
0x4001a1c	      0xba0a000000	                            mov edx, 0xa	       411	am.c	FUNCTION_18	CALL_6
0x4001a21	      0xe800000000	                          call 0x4001a26	       411	am.c	FUNCTION_18	CALL_6
0x4001a26	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001a29	          0x89430c	              mov dword [rbx + 0xc], eax	       411	am.c	FUNCTION_18	CALL_6
0x4001a2c	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001a31	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001a33	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001a38	      0xe800000000	                          call 0x4001a3d	       183	am.c	FUNCTION_6	CALL_1
0x4001a3d	      0x804c245001	                 or byte [rsp + 0x50], 1	       308	am.c	FUNCTION_14
0x4001a42	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       312	am.c	FUNCTION_14	CALL_2
0x4001a47	          0x4989c4	                            mov r12, rax	       183	am.c	FUNCTION_6	CALL_1
0x4001a4a	    0x48c744242000	               mov qword [rsp + 0x20], 0	       307	am.c	FUNCTION_14
0x4001a53	    0x48c744242800	               mov qword [rsp + 0x28], 0	       307	am.c	FUNCTION_14
0x4001a5c	    0x48c744243000	               mov qword [rsp + 0x30], 0	       307	am.c	FUNCTION_14
0x4001a65	    0x48c744244000	               mov qword [rsp + 0x40], 0	       308	am.c	FUNCTION_14
0x4001a6e	    0xc74424480000	               mov dword [rsp + 0x48], 0	       308	am.c	FUNCTION_14
0x4001a76	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       308	am.c	FUNCTION_14
0x4001a7e	    0x48c744245800	               mov qword [rsp + 0x58], 0	       308	am.c	FUNCTION_14
0x4001a87	     0xf855c0a0000	                           jne 0x40024e9	       312	am.c	FUNCTION_14	CALL_2
0x4001a8d	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       313	am.c	FUNCTION_14	CALL_3
0x4001a92	     0xf85380a0000	                           jne 0x40024d0	       313	am.c	FUNCTION_14	CALL_3
0x4001a98	      0x48837b2000	               cmp qword [rbx + 0x20], 0	       314	am.c	FUNCTION_14	CALL_4
0x4001a9d	     0xf85140a0000	                           jne 0x40024b7	       314	am.c	FUNCTION_14	CALL_4
0x4001aa3	            0x31f6	                            xor esi, esi	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x4001aa5	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x4001aa8	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x4001aaa	      0xe800000000	                          call 0x4001aaf	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x4001aaf	            0x85c0	                           test eax, eax	       317	am.c	FUNCTION_14	IF_1
0x4001ab1	            0x89c5	                            mov ebp, eax	        53	fcntl2.h	FUNCTION_172	IF_2	CALL_9
0x4001ab3	     0xf88d7000000	                            js 0x4001b90	       317	am.c	FUNCTION_14	IF_1
0x4001ab9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       322	am.c	FUNCTION_14	CALL_8
0x4001abe	            0x31d2	                            xor edx, edx	       322	am.c	FUNCTION_14	CALL_8
0x4001ac0	            0x89c6	                            mov esi, eax	       322	am.c	FUNCTION_14	CALL_8
0x4001ac2	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	       322	am.c	FUNCTION_14	CALL_8
0x4001ac7	      0xe800000000	                          call 0x4001acc	       322	am.c	FUNCTION_14	CALL_8
0x4001acc	            0x89ef	                            mov edi, ebp	       323	am.c	FUNCTION_14	CALL_9
0x4001ace	      0xe800000000	                          call 0x4001ad3	       323	am.c	FUNCTION_14	CALL_9
0x4001ad3	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	       324	am.c	FUNCTION_14	IF_3	CALL_10
0x4001ad8	        0x807d0000	                       cmp byte [rbp], 0	       268	am.c	FUNCTION_13	WHILE_1
0x4001adc	            0x7569	                           jne 0x4001b47	       268	am.c	FUNCTION_13	WHILE_1
0x4001ade	      0xe9e5070000	                           jmp 0x40022c8	       268	am.c	FUNCTION_13	WHILE_1
0x4001ae3	       0xf1f440000	                   nop dword [rax + rax]	       268	am.c	FUNCTION_13	WHILE_1
0x4001ae8	      0xbe0a000000	                            mov esi, 0xa	       274	am.c	FUNCTION_13	WHILE_1
0x4001aed	          0x4889c7	                            mov rdi, rax	       274	am.c	FUNCTION_13	WHILE_1
0x4001af0	      0x4d8d742401	                      lea r14, [r12 + 1]	       275	am.c	FUNCTION_13	WHILE_1
0x4001af5	      0xe800000000	                          call 0x4001afa	       274	am.c	FUNCTION_13	WHILE_1
0x4001afa	          0x4889ee	                            mov rsi, rbp	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4001afd	          0x4989c5	                            mov r13, rax	       274	am.c	FUNCTION_13	WHILE_1
0x4001b00	      0x41c6042400	                       mov byte [r12], 0	       275	am.c	FUNCTION_13	WHILE_1
0x4001b05	          0x4c89ff	                            mov rdi, r15	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4001b08	            0x31ed	                            xor ebp, ebp	       278	am.c	FUNCTION_13	WHILE_1
0x4001b0a	      0xe800000000	                          call 0x4001b0f	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4001b0f	      0x41807d000a	                     cmp byte [r13], 0xa	       278	am.c	FUNCTION_13	WHILE_1
0x4001b14	          0x4c89f7	                            mov rdi, r14	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x4001b17	      0x41c6450000	                       mov byte [r13], 0	       279	am.c	FUNCTION_13	WHILE_1
0x4001b1c	          0x4989c4	                            mov r12, rax	       276	am.c	FUNCTION_13	WHILE_1	CALL_2
0x4001b1f	        0x400f94c5	                                sete bpl	       278	am.c	FUNCTION_13	WHILE_1
0x4001b23	          0x4c01ed	                            add rbp, r13	       278	am.c	FUNCTION_13	WHILE_1
0x4001b26	      0xe800000000	                          call 0x4001b2b	       280	am.c	FUNCTION_13	WHILE_1	CALL_3
0x4001b2b	          0x4885c0	                           test rax, rax	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0x4001b2e	            0x742c	                            je 0x4001b5c	       281	am.c	FUNCTION_13	WHILE_1	IF_2
0x4001b30	          0x4889c7	                            mov rdi, rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4001b33	      0xe800000000	                          call 0x4001b38	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4001b38	      0x4989442408	                mov qword [r12 + 8], rax	       283	am.c	FUNCTION_13	WHILE_1	CALL_4
0x4001b3d	        0x807d0000	                       cmp byte [rbp], 0	       268	am.c	FUNCTION_13	WHILE_1
0x4001b41	     0xf8481070000	                            je 0x40022c8	       268	am.c	FUNCTION_13	WHILE_1
0x4001b47	      0xbe3d000000	                           mov esi, 0x3d	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4001b4c	          0x4889ef	                            mov rdi, rbp	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4001b4f	      0xe800000000	                          call 0x4001b54	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4001b54	          0x4885c0	                           test rax, rax	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0x4001b57	          0x4989c4	                            mov r12, rax	       271	am.c	FUNCTION_13	WHILE_1	CALL_1
0x4001b5a	            0x758c	                           jne 0x4001ae8	       272	am.c	FUNCTION_13	WHILE_1	IF_1
0x4001b5c	      0xbe01000000	                              mov esi, 1	       337	am.c	FUNCTION_14	CALL_14
0x4001b61	          0x4c89ff	                            mov rdi, r15	       337	am.c	FUNCTION_14	CALL_14
0x4001b64	      0xe800000000	                          call 0x4001b69	       337	am.c	FUNCTION_14	CALL_14
0x4001b69	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       338	am.c	FUNCTION_14	CALL_15
0x4001b6e	      0xe800000000	                          call 0x4001b73	       338	am.c	FUNCTION_14	CALL_15
0x4001b73	      0xbf00000000	                              mov edi, 0	       338	am.c	FUNCTION_14	CALL_15
0x4001b78	      0xe863e8ffff	                       call sym._.part.6	       338	am.c	FUNCTION_14	CALL_15
0x4001b7d	          0x4889c7	                            mov rdi, rax	       414	am.c	FUNCTION_18	CALL_9
0x4001b80	            0x31c0	                            xor eax, eax	       414	am.c	FUNCTION_18	CALL_9
0x4001b82	      0xe800000000	                          call 0x4001b87	       414	am.c	FUNCTION_18	CALL_9
0x4001b87	    0x660f1f840000	                    nop word [rax + rax]	       414	am.c	FUNCTION_18	CALL_9
0x4001b90	      0xe800000000	                          call 0x4001b95	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4001b95	          0x833802	                      cmp dword [rax], 2	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4001b98	     0xf8569090000	                           jne 0x4002507	       318	am.c	FUNCTION_14	IF_1	IF_2
0x4001b9e	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       378	am.c	FUNCTION_16	CALL_1
0x4001ba3	    0x48c744244000	               mov qword [rsp + 0x40], 0	       376	am.c	FUNCTION_16
0x4001bac	    0x48c744244800	               mov qword [rsp + 0x48], 0	       376	am.c	FUNCTION_16
0x4001bb5	    0x48c744245000	               mov qword [rsp + 0x50], 0	       376	am.c	FUNCTION_16
0x4001bbe	     0xf85ac080000	                           jne 0x4002470	       378	am.c	FUNCTION_16	CALL_1
0x4001bc4	    0x803d00000000	                cmp byte [0x04001bcb], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x4001bcb	     0xf85ac070000	                           jne 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x4001bd1	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001bd4	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001bd9	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001bde	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001be3	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001be5	      0xe800000000	                          call 0x4001bea	       183	am.c	FUNCTION_6	CALL_1
0x4001bea	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001bec	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001bef	          0x4c89ff	                            mov rdi, r15	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001bf2	      0xe800000000	                          call 0x4001bf7	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001bf7	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001bfa	     0xf88a8050000	                            js 0x40021a8	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001c00	        0x8b542448	            mov edx, dword [rsp + 0x48] 	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4001c04	            0x85d2	                           test edx, edx	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4001c06	     0xf88aa050000	                            js 0x40021b6	       380	am.c	FUNCTION_16	IF_1	CALL_2
0x4001c0c	        0x488d7330	                   lea rsi, [rbx + 0x30]	       385	am.c	FUNCTION_16	CALL_4
0x4001c10	          0x4c89ff	                            mov rdi, r15	       385	am.c	FUNCTION_16	CALL_4
0x4001c13	      0xe800000000	                          call 0x4001c18	       385	am.c	FUNCTION_16	CALL_4
0x4001c18	        0x48894328	             mov qword [rbx + 0x28], rax	       385	am.c	FUNCTION_16	CALL_4
0x4001c1c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_64	IF_2
0x4001c21	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001c2a	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001c30	     0xf84d2070000	                            je 0x4002408	       165	strbuf.h	FUNCTION_64	IF_2
0x4001c36	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001c39	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001c3c	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001c41	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001c46	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001c48	      0xe800000000	                          call 0x4001c4d	       183	am.c	FUNCTION_6	CALL_1
0x4001c4d	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001c4f	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001c52	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001c55	      0xe800000000	                          call 0x4001c5a	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001c5a	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001c5d	     0xf8815050000	                            js 0x4002178	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001c63	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001c66	      0xe800000000	                          call 0x4001c6b	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001c6b	        0x8b442408	                mov eax, dword [rsp + 8]	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4001c6f	            0x85c0	                           test eax, eax	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4001c71	     0xf880f050000	                            js 0x4002186	       418	am.c	FUNCTION_18	IF_4	CALL_11
0x4001c77	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x4001c7c	        0x488d7338	                   lea rsi, [rbx + 0x38]	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x4001c80	      0xe800000000	                          call 0x4001c85	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x4001c85	            0x85c0	                           test eax, eax	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x4001c87	     0xf88ab080000	                            js 0x4002538	       420	am.c	FUNCTION_18	ELSE_1	IF_5	CALL_13
0x4001c8d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_64	IF_2
0x4001c92	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001c9b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001ca1	     0xf8479070000	                            je 0x4002420	       165	strbuf.h	FUNCTION_64	IF_2
0x4001ca7	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001caa	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001cad	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001cb2	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001cb7	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001cb9	      0xe800000000	                          call 0x4001cbe	       183	am.c	FUNCTION_6	CALL_1
0x4001cbe	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001cc0	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001cc3	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001cc6	      0xe800000000	                          call 0x4001ccb	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001ccb	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001cce	     0xf88f4040000	                            js 0x40021c8	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001cd4	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001cd7	      0xe800000000	                          call 0x4001cdc	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001cdc	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       424	am.c	FUNCTION_18	CALL_18
0x4001ce1	      0xb874000000	                           mov eax, 0x74	       424	am.c	FUNCTION_18	CALL_18
0x4001ce6	           0xfb60a	                   movzx ecx, byte [rdx]	       424	am.c	FUNCTION_18	CALL_18
0x4001ce9	            0x29c8	                            sub eax, ecx	       424	am.c	FUNCTION_18	CALL_18
0x4001ceb	            0x7506	                           jne 0x4001cf3	       424	am.c	FUNCTION_18	CALL_18
0x4001ced	         0xfb64201	               movzx eax, byte [rdx + 1]	       424	am.c	FUNCTION_18	CALL_18
0x4001cf1	            0xf7d8	                                 neg eax	       424	am.c	FUNCTION_18	CALL_18
0x4001cf3	            0x85c0	                           test eax, eax	       424	am.c	FUNCTION_18	CALL_18
0x4001cf5	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001cfe	           0xf94c0	                                 sete al	       424	am.c	FUNCTION_18	CALL_18
0x4001d01	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001d08	           0xfb6c0	                           movzx eax, al	       424	am.c	FUNCTION_18	CALL_18
0x4001d0b	          0x894354	             mov dword [rbx + 0x54], eax	       424	am.c	FUNCTION_18	CALL_18
0x4001d0e	     0xf84bc060000	                            je 0x40023d0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001d14	          0xc60200	                       mov byte [rdx], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001d17	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001d1a	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001d1f	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001d24	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001d26	      0xe800000000	                          call 0x4001d2b	       183	am.c	FUNCTION_6	CALL_1
0x4001d2b	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001d2d	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001d30	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001d33	      0xe800000000	                          call 0x4001d38	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001d38	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001d3b	     0xf88e7040000	                            js 0x4002228	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001d41	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001d44	      0xe800000000	                          call 0x4001d49	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001d49	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       427	am.c	FUNCTION_18	CALL_20
0x4001d4e	      0xb874000000	                           mov eax, 0x74	       427	am.c	FUNCTION_18	CALL_20
0x4001d53	           0xfb60a	                   movzx ecx, byte [rdx]	       427	am.c	FUNCTION_18	CALL_20
0x4001d56	            0x29c8	                            sub eax, ecx	       427	am.c	FUNCTION_18	CALL_20
0x4001d58	            0x7506	                           jne 0x4001d60	       427	am.c	FUNCTION_18	CALL_20
0x4001d5a	         0xfb64201	               movzx eax, byte [rdx + 1]	       427	am.c	FUNCTION_18	CALL_20
0x4001d5e	            0xf7d8	                                 neg eax	       427	am.c	FUNCTION_18	CALL_20
0x4001d60	            0x85c0	                           test eax, eax	       427	am.c	FUNCTION_18	CALL_20
0x4001d62	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001d6b	           0xf94c0	                                 sete al	       427	am.c	FUNCTION_18	CALL_20
0x4001d6e	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001d75	           0xfb6c0	                           movzx eax, al	       427	am.c	FUNCTION_18	CALL_20
0x4001d78	          0x894358	             mov dword [rbx + 0x58], eax	       427	am.c	FUNCTION_18	CALL_20
0x4001d7b	     0xf843f060000	                            je 0x40023c0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001d81	          0xc60200	                       mov byte [rdx], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001d84	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001d87	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001d8c	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001d91	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001d93	      0xe800000000	                          call 0x4001d98	       183	am.c	FUNCTION_6	CALL_1
0x4001d98	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001d9a	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001d9d	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001da0	      0xe800000000	                          call 0x4001da5	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001da5	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001da8	     0xf885a040000	                            js 0x4002208	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001dae	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001db1	      0xe800000000	                          call 0x4001db6	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001db6	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       430	am.c	FUNCTION_18	CALL_22
0x4001dbb	      0xb874000000	                           mov eax, 0x74	       430	am.c	FUNCTION_18	CALL_22
0x4001dc0	           0xfb60a	                   movzx ecx, byte [rdx]	       430	am.c	FUNCTION_18	CALL_22
0x4001dc3	            0x29c8	                            sub eax, ecx	       430	am.c	FUNCTION_18	CALL_22
0x4001dc5	            0x7506	                           jne 0x4001dcd	       430	am.c	FUNCTION_18	CALL_22
0x4001dc7	         0xfb64201	               movzx eax, byte [rdx + 1]	       430	am.c	FUNCTION_18	CALL_22
0x4001dcb	            0xf7d8	                                 neg eax	       430	am.c	FUNCTION_18	CALL_22
0x4001dcd	            0x85c0	                           test eax, eax	       430	am.c	FUNCTION_18	CALL_22
0x4001dcf	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001dd8	           0xf94c0	                                 sete al	       430	am.c	FUNCTION_18	CALL_22
0x4001ddb	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001de2	           0xfb6c0	                           movzx eax, al	       430	am.c	FUNCTION_18	CALL_22
0x4001de5	          0x89435c	             mov dword [rbx + 0x5c], eax	       430	am.c	FUNCTION_18	CALL_22
0x4001de8	     0xf84c2050000	                            je 0x40023b0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001dee	          0xc60200	                       mov byte [rdx], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001df1	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001df4	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001df9	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001dfe	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001e00	      0xe800000000	                          call 0x4001e05	       183	am.c	FUNCTION_6	CALL_1
0x4001e05	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001e07	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001e0a	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001e0d	      0xe800000000	                          call 0x4001e12	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001e12	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001e15	     0xf88cd030000	                            js 0x40021e8	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001e1b	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001e1e	      0xe800000000	                          call 0x4001e23	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001e23	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       433	am.c	FUNCTION_18	CALL_24
0x4001e28	      0xb874000000	                           mov eax, 0x74	       433	am.c	FUNCTION_18	CALL_24
0x4001e2d	           0xfb611	                   movzx edx, byte [rcx]	       433	am.c	FUNCTION_18	CALL_24
0x4001e30	            0x29d0	                            sub eax, edx	       433	am.c	FUNCTION_18	CALL_24
0x4001e32	            0x7506	                           jne 0x4001e3a	       433	am.c	FUNCTION_18	CALL_24
0x4001e34	         0xfb64101	               movzx eax, byte [rcx + 1]	       433	am.c	FUNCTION_18	CALL_24
0x4001e38	            0xf7d8	                                 neg eax	       433	am.c	FUNCTION_18	CALL_24
0x4001e3a	            0x85c0	                           test eax, eax	       433	am.c	FUNCTION_18	CALL_24
0x4001e3c	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001e3f	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001e44	           0xf94c0	                                 sete al	       433	am.c	FUNCTION_18	CALL_24
0x4001e47	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001e4c	           0xfb6c0	                           movzx eax, al	       433	am.c	FUNCTION_18	CALL_24
0x4001e4f	          0x894360	             mov dword [rbx + 0x60], eax	       433	am.c	FUNCTION_18	CALL_24
0x4001e52	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001e54	      0xe800000000	                          call 0x4001e59	       183	am.c	FUNCTION_6	CALL_1
0x4001e59	          0x4889c7	                            mov rdi, rax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x4001e5c	      0xe800000000	                          call 0x4001e61	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x4001e61	            0x85c0	                           test eax, eax	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x4001e63	     0xf8557020000	                           jne 0x40020c0	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x4001e69	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       435	am.c	FUNCTION_18	IF_6	CALL_26
0x4001e6e	    0xc78390000000	               mov dword [rbx + 0x90], 0	       440	am.c	FUNCTION_18	ELSE_2
0x4001e78	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001e7e	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001e87	     0xf8413050000	                            je 0x40023a0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001e8d	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001e90	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001e93	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001e98	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001e9d	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001e9f	      0xe800000000	                          call 0x4001ea4	       183	am.c	FUNCTION_6	CALL_1
0x4001ea4	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001ea6	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001ea9	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001eac	      0xe800000000	                          call 0x4001eb1	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001eb1	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001eb4	     0xf88ae030000	                            js 0x4002268	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001eba	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001ebd	      0xe800000000	                          call 0x4001ec2	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001ec2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001ec7	           0xfb610	                   movzx edx, byte [rax]	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001eca	          0x83fa74	                           cmp edx, 0x74	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001ecd	     0xf85ad010000	                           jne 0x4002080	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001ed3	        0x80780100	                   cmp byte [rax + 1], 0	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001ed7	     0xf8573040000	                           jne 0x4002350	       444	am.c	FUNCTION_18	IF_7	CALL_30
0x4001edd	    0xc74364010000	               mov dword [rbx + 0x64], 1	       445	am.c	FUNCTION_18	IF_7
0x4001ee4	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001eea	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001ef3	     0xf848f040000	                            je 0x4002388	       165	strbuf.h	FUNCTION_64	IF_2
0x4001ef9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001efc	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001eff	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001f04	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001f09	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001f0b	      0xe800000000	                          call 0x4001f10	       183	am.c	FUNCTION_6	CALL_1
0x4001f10	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f12	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f15	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f18	      0xe800000000	                          call 0x4001f1d	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f1d	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f20	     0xf8822030000	                            js 0x4002248	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f26	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001f29	      0xe800000000	                          call 0x4001f2e	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001f2e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       452	am.c	FUNCTION_18	CALL_33
0x4001f33	      0xb874000000	                           mov eax, 0x74	       452	am.c	FUNCTION_18	CALL_33
0x4001f38	           0xfb60a	                   movzx ecx, byte [rdx]	       452	am.c	FUNCTION_18	CALL_33
0x4001f3b	            0x29c8	                            sub eax, ecx	       452	am.c	FUNCTION_18	CALL_33
0x4001f3d	            0x7506	                           jne 0x4001f45	       452	am.c	FUNCTION_18	CALL_33
0x4001f3f	         0xfb64201	               movzx eax, byte [rdx + 1]	       452	am.c	FUNCTION_18	CALL_33
0x4001f43	            0xf7d8	                                 neg eax	       452	am.c	FUNCTION_18	CALL_33
0x4001f45	            0x85c0	                           test eax, eax	       452	am.c	FUNCTION_18	CALL_33
0x4001f47	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001f50	           0xf94c0	                                 sete al	       452	am.c	FUNCTION_18	CALL_33
0x4001f53	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001f5a	           0xfb6c0	                           movzx eax, al	       452	am.c	FUNCTION_18	CALL_33
0x4001f5d	          0x894368	             mov dword [rbx + 0x68], eax	       452	am.c	FUNCTION_18	CALL_33
0x4001f60	     0xf847a040000	                            je 0x40023e0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001f66	          0xc60200	                       mov byte [rdx], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001f69	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001f6c	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001f71	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001f76	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001f78	      0xe800000000	                          call 0x4001f7d	       183	am.c	FUNCTION_6	CALL_1
0x4001f7d	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f7f	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f82	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f85	      0xe800000000	                          call 0x4001f8a	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f8a	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f8d	     0xf88f5020000	                            js 0x4002288	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001f93	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001f96	      0xe800000000	                          call 0x4001f9b	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4001f9b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001fa0	           0xfb610	                   movzx edx, byte [rax]	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001fa3	          0x83fa74	                           cmp edx, 0x74	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001fa6	     0xf85f4000000	                           jne 0x40020a0	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001fac	        0x80780100	                   cmp byte [rax + 1], 0	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001fb0	     0xf85aa030000	                           jne 0x4002360	       455	am.c	FUNCTION_18	IF_9	CALL_35
0x4001fb6	    0xc7436c010000	               mov dword [rbx + 0x6c], 1	       456	am.c	FUNCTION_18	IF_9
0x4001fbd	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001fc3	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x4001fcc	     0xf841e040000	                            je 0x40023f0	       165	strbuf.h	FUNCTION_64	IF_2
0x4001fd2	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x4001fd5	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001fd8	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001fdd	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001fe2	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001fe4	      0xe800000000	                          call 0x4001fe9	       183	am.c	FUNCTION_6	CALL_1
0x4001fe9	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001feb	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001fee	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001ff1	      0xe800000000	                          call 0x4001ff6	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001ff6	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001ff9	     0xf88a9020000	                            js 0x40022a8	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4001fff	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4002002	      0xe800000000	                          call 0x4002007	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x4002007	        0x488d6b70	                   lea rbp, [rbx + 0x70]	       463	am.c	FUNCTION_18	CALL_38
0x400200b	          0x4889ef	                            mov rdi, rbp	       463	am.c	FUNCTION_18	CALL_38
0x400200e	      0xe800000000	                          call 0x4002013	       463	am.c	FUNCTION_18	CALL_38
0x4002013	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4002018	          0x4889ee	                            mov rsi, rbp	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x400201b	      0xe800000000	                          call 0x4002020	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4002020	            0x85c0	                           test eax, eax	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4002022	     0xf8861040000	                            js 0x4002489	       464	am.c	FUNCTION_18	IF_11	CALL_39
0x4002028	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x400202b	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002030	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002035	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4002037	      0xe800000000	                          call 0x400203c	       183	am.c	FUNCTION_6	CALL_1
0x400203c	          0x4889c7	                            mov rdi, rax	       467	am.c	FUNCTION_18	CALL_44
0x400203f	      0xe800000000	                          call 0x4002044	       467	am.c	FUNCTION_18	CALL_44
0x4002044	            0x85c0	                           test eax, eax	       467	am.c	FUNCTION_18	CALL_44
0x4002046	          0x4889e7	                            mov rdi, rsp	       469	am.c	FUNCTION_18	CALL_45
0x4002049	           0xf95c0	                                setne al	       467	am.c	FUNCTION_18	CALL_44
0x400204c	           0xfb6c0	                           movzx eax, al	       467	am.c	FUNCTION_18	CALL_44
0x400204f	    0x8983a0000000	             mov dword [rbx + 0xa0], eax	       467	am.c	FUNCTION_18	CALL_44
0x4002055	      0xe800000000	                          call 0x400205a	       469	am.c	FUNCTION_18	CALL_45
0x400205a	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       470	am.c	FUNCTION_18
0x400205f	    0x644833042528	                xor rax, qword fs:[0x28]	       470	am.c	FUNCTION_18
0x4002068	     0xf8594040000	                           jne 0x4002502	       470	am.c	FUNCTION_18
0x400206e	        0x4883c478	                           add rsp, 0x78	       470	am.c	FUNCTION_18
0x4002072	              0x5b	                                 pop rbx	       470	am.c	FUNCTION_18
0x4002073	              0x5d	                                 pop rbp	       470	am.c	FUNCTION_18
0x4002074	            0x415c	                                 pop r12	       470	am.c	FUNCTION_18
0x4002076	            0x415d	                                 pop r13	       470	am.c	FUNCTION_18
0x4002078	            0x415e	                                 pop r14	       470	am.c	FUNCTION_18
0x400207a	            0x415f	                                 pop r15	       470	am.c	FUNCTION_18
0x400207c	              0xc3	                                     ret	       470	am.c	FUNCTION_18
0x400207d	           0xf1f00	                         nop dword [rax]	       470	am.c	FUNCTION_18
0x4002080	          0x83fa62	                           cmp edx, 0x62	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4002083	     0xf85c7020000	                           jne 0x4002350	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4002089	        0x80780100	                   cmp byte [rax + 1], 0	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x400208d	     0xf85bd020000	                           jne 0x4002350	       446	am.c	FUNCTION_18	ELSE_3	IF_8	CALL_31
0x4002093	    0xc74364020000	               mov dword [rbx + 0x64], 2	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x400209a	      0xe945feffff	                           jmp 0x4001ee4	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x400209f	              0x90	                                     nop	       447	am.c	FUNCTION_18	ELSE_3	IF_8
0x40020a0	          0x83fa66	                           cmp edx, 0x66	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x40020a3	     0xf85b7020000	                           jne 0x4002360	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x40020a9	        0x80780100	                   cmp byte [rax + 1], 0	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x40020ad	     0xf85ad020000	                           jne 0x4002360	       457	am.c	FUNCTION_18	ELSE_5	IF_10	CALL_36
0x40020b3	    0xc7436c000000	               mov dword [rbx + 0x6c], 0	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x40020ba	      0xe9fefeffff	                           jmp 0x4001fbd	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x40020bf	              0x90	                                     nop	       458	am.c	FUNCTION_18	ELSE_5	IF_10
0x40020c0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_64	IF_2
0x40020c5	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_64
0x40020ce	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_64	IF_2
0x40020d4	     0xf847e030000	                            je 0x4002458	       165	strbuf.h	FUNCTION_64	IF_2
0x40020da	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_64	IF_2
0x40020dd	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40020e0	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40020e5	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40020ea	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40020ec	      0xe800000000	                          call 0x40020f1	       183	am.c	FUNCTION_6	CALL_1
0x40020f1	            0x31d2	                            xor edx, edx	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40020f3	          0x4889c6	                            mov rsi, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40020f6	          0x4889e7	                            mov rdi, rsp	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40020f9	      0xe800000000	                          call 0x40020fe	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x40020fe	          0x4885c0	                           test rax, rax	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4002101	     0xf8831030000	                            js 0x4002438	       249	am.c	FUNCTION_12	IF_1	CALL_2
0x4002107	          0x4889e7	                            mov rdi, rsp	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x400210a	      0xe800000000	                          call 0x400210f	       251	am.c	FUNCTION_12	IF_1	CALL_3
0x400210f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4002114	      0xba02000000	                              mov edx, 2	       438	am.c	FUNCTION_18	IF_6
0x4002119	          0x803874	                    cmp byte [rax], 0x74	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x400211c	            0x7509	                           jne 0x4002127	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x400211e	        0x80780101	                   cmp byte [rax + 1], 1	       438	am.c	FUNCTION_18	IF_6
0x4002122	            0x19d2	                            sbb edx, edx	       438	am.c	FUNCTION_18	IF_6
0x4002124	          0x83c202	                              add edx, 2	       438	am.c	FUNCTION_18	IF_6
0x4002127	    0x899390000000	             mov dword [rbx + 0x90], edx	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x400212d	      0xe946fdffff	                           jmp 0x4001e78	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4002132	    0x660f1f440000	                    nop word [rax + rax]	       437	am.c	FUNCTION_18	IF_6	CALL_28
0x4002138	      0xe800000000	                          call 0x400213d	       256	am.c	FUNCTION_12	IF_3
0x400213d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002140	     0xf85d8030000	                           jne 0x400251e	       256	am.c	FUNCTION_12	IF_3
0x4002146	      0xbf00000000	                              mov edi, 0	       410	am.c	FUNCTION_18	CALL_5
0x400214b	            0x31c0	                            xor eax, eax	       410	am.c	FUNCTION_18	CALL_5
0x400214d	      0xe800000000	                          call 0x4002152	       410	am.c	FUNCTION_18	CALL_5
0x4002152	    0x660f1f440000	                    nop word [rax + rax]	       410	am.c	FUNCTION_18	CALL_5
0x4002158	      0xe800000000	                          call 0x400215d	       256	am.c	FUNCTION_12	IF_3
0x400215d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002160	     0xf85c5030000	                           jne 0x400252b	       256	am.c	FUNCTION_12	IF_3
0x4002166	      0xbf00000000	                              mov edi, 0	       406	am.c	FUNCTION_18	CALL_2
0x400216b	            0x31c0	                            xor eax, eax	       406	am.c	FUNCTION_18	CALL_2
0x400216d	      0xe800000000	                          call 0x4002172	       406	am.c	FUNCTION_18	CALL_2
0x4002172	    0x660f1f440000	                    nop word [rax + rax]	       406	am.c	FUNCTION_18	CALL_2
0x4002178	      0xe800000000	                          call 0x400217d	       256	am.c	FUNCTION_12	IF_3
0x400217d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002180	     0xf85bc030000	                           jne 0x4002542	       256	am.c	FUNCTION_12	IF_3
0x4002186	    0x48c743380000	               mov qword [rbx + 0x38], 0	        90	string3.h	FUNCTION_103	CALL_6
0x400218e	    0x48c743400000	               mov qword [rbx + 0x40], 0	        90	string3.h	FUNCTION_103	CALL_6
0x4002196	    0xc74348000000	               mov dword [rbx + 0x48], 0	        90	string3.h	FUNCTION_103	CALL_6
0x400219d	      0xe9ebfaffff	                           jmp 0x4001c8d	        90	string3.h	FUNCTION_103	CALL_6
0x40021a2	    0x660f1f440000	                    nop word [rax + rax]	        90	string3.h	FUNCTION_103	CALL_6
0x40021a8	      0xe800000000	                          call 0x40021ad	       256	am.c	FUNCTION_12	IF_3
0x40021ad	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x40021b0	     0xf8599030000	                           jne 0x400254f	       256	am.c	FUNCTION_12	IF_3
0x40021b6	          0x4c89ff	                            mov rdi, r15	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x40021b9	      0xe800000000	                          call 0x40021be	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x40021be	      0xe959faffff	                           jmp 0x4001c1c	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x40021c3	       0xf1f440000	                   nop dword [rax + rax]	       381	am.c	FUNCTION_16	IF_1	CALL_3
0x40021c8	      0xe800000000	                          call 0x40021cd	       256	am.c	FUNCTION_12	IF_3
0x40021cd	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x40021d0	     0xf8406fbffff	                            je 0x4001cdc	       256	am.c	FUNCTION_12	IF_3
0x40021d6	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x40021db	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x40021de	      0xe800000000	                          call 0x40021e3	       256	am.c	FUNCTION_12	IF_3
0x40021e3	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x40021e8	      0xe800000000	                          call 0x40021ed	       256	am.c	FUNCTION_12	IF_3
0x40021ed	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x40021f0	     0xf842dfcffff	                            je 0x4001e23	       256	am.c	FUNCTION_12	IF_3
0x40021f6	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x40021fb	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x40021fe	      0xe800000000	                          call 0x4002203	       256	am.c	FUNCTION_12	IF_3
0x4002203	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x4002208	      0xe800000000	                          call 0x400220d	       256	am.c	FUNCTION_12	IF_3
0x400220d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002210	     0xf84a0fbffff	                            je 0x4001db6	       256	am.c	FUNCTION_12	IF_3
0x4002216	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x400221b	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x400221e	      0xe800000000	                          call 0x4002223	       256	am.c	FUNCTION_12	IF_3
0x4002223	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x4002228	      0xe800000000	                          call 0x400222d	       256	am.c	FUNCTION_12	IF_3
0x400222d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002230	     0xf8413fbffff	                            je 0x4001d49	       256	am.c	FUNCTION_12	IF_3
0x4002236	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x400223b	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x400223e	      0xe800000000	                          call 0x4002243	       256	am.c	FUNCTION_12	IF_3
0x4002243	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x4002248	      0xe800000000	                          call 0x400224d	       256	am.c	FUNCTION_12	IF_3
0x400224d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002250	     0xf84d8fcffff	                            je 0x4001f2e	       256	am.c	FUNCTION_12	IF_3
0x4002256	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x400225b	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x400225e	      0xe800000000	                          call 0x4002263	       256	am.c	FUNCTION_12	IF_3
0x4002263	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x4002268	      0xe800000000	                          call 0x400226d	       256	am.c	FUNCTION_12	IF_3
0x400226d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002270	     0xf844cfcffff	                            je 0x4001ec2	       256	am.c	FUNCTION_12	IF_3
0x4002276	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x400227b	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x400227e	      0xe800000000	                          call 0x4002283	       256	am.c	FUNCTION_12	IF_3
0x4002283	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x4002288	      0xe800000000	                          call 0x400228d	       256	am.c	FUNCTION_12	IF_3
0x400228d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002290	     0xf8405fdffff	                            je 0x4001f9b	       256	am.c	FUNCTION_12	IF_3
0x4002296	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x400229b	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x400229e	      0xe800000000	                          call 0x40022a3	       256	am.c	FUNCTION_12	IF_3
0x40022a3	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x40022a8	      0xe800000000	                          call 0x40022ad	       256	am.c	FUNCTION_12	IF_3
0x40022ad	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x40022b0	     0xf8451fdffff	                            je 0x4002007	       256	am.c	FUNCTION_12	IF_3
0x40022b6	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x40022bb	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x40022be	      0xe800000000	                          call 0x40022c3	       256	am.c	FUNCTION_12	IF_3
0x40022c3	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x40022c8	      0x837c244803	               cmp dword [rsp + 0x48], 3	       327	am.c	FUNCTION_14	IF_4
0x40022cd	     0xf8589f8ffff	                           jne 0x4001b5c	       327	am.c	FUNCTION_14	IF_4
0x40022d3	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022d8	      0xbf00000000	                              mov edi, 0	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022dd	      0xb910000000	                           mov ecx, 0x10	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022e2	          0x488b30	                    mov rsi, qword [rax]	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       327	am.c	FUNCTION_14	IF_4
0x40022e7	     0xf856ff8ffff	                           jne 0x4001b5c	       327	am.c	FUNCTION_14	IF_4
0x40022ed	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022f1	      0xbf00000000	                              mov edi, 0	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022f6	      0xb911000000	                           mov ecx, 0x11	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x40022fb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x40022fd	     0xf8559f8ffff	                           jne 0x4001b5c	       328	am.c	FUNCTION_14	IF_4	CALL_11
0x4002303	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4002307	      0xbf00000000	                              mov edi, 0	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x400230c	      0xb910000000	                           mov ecx, 0x10	       330	am.c	FUNCTION_14	IF_4	CALL_13
0x4002311	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4002313	     0xf8543f8ffff	                           jne 0x4001b5c	       329	am.c	FUNCTION_14	IF_4	CALL_12
0x4002319	        0x488b5008	                mov rdx, qword [rax + 8]	       332	am.c	FUNCTION_14
0x400231d	          0x4c89ff	                            mov rdi, r15	       337	am.c	FUNCTION_14	CALL_14
0x4002320	            0x31f6	                            xor esi, esi	       337	am.c	FUNCTION_14	CALL_14
0x4002322	        0x48895310	             mov qword [rbx + 0x10], rdx	       332	am.c	FUNCTION_14
0x4002326	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       333	am.c	FUNCTION_14
0x400232a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       334	am.c	FUNCTION_14
0x400232e	        0x48895318	             mov qword [rbx + 0x18], rdx	       333	am.c	FUNCTION_14
0x4002332	        0x48894320	             mov qword [rbx + 0x20], rax	       334	am.c	FUNCTION_14
0x4002336	      0xe800000000	                          call 0x400233b	       337	am.c	FUNCTION_14	CALL_14
0x400233b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       338	am.c	FUNCTION_14	CALL_15
0x4002340	      0xe800000000	                          call 0x4002345	       338	am.c	FUNCTION_14	CALL_15
0x4002345	      0xe954f8ffff	                           jmp 0x4001b9e	       338	am.c	FUNCTION_14	CALL_15
0x400234a	    0x660f1f440000	                    nop word [rax + rax]	       338	am.c	FUNCTION_14	CALL_15
0x4002350	    0xc74364000000	               mov dword [rbx + 0x64], 0	       449	am.c	FUNCTION_18	ELSE_4
0x4002357	      0xe988fbffff	                           jmp 0x4001ee4	       449	am.c	FUNCTION_18	ELSE_4
0x400235c	         0xf1f4000	                         nop dword [rax]	       449	am.c	FUNCTION_18	ELSE_4
0x4002360	    0xc7436cffffff	     mov dword [rbx + 0x6c], 0xffffffff 	       460	am.c	FUNCTION_18	ELSE_6
0x4002367	      0xe951fcffff	                           jmp 0x4001fbd	       460	am.c	FUNCTION_18	ELSE_6
0x400236c	         0xf1f4000	                         nop dword [rax]	       460	am.c	FUNCTION_18	ELSE_6
0x4002370	    0x803d00000000	                cmp byte [0x04002377], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002377	     0xf845af6ffff	                            je 0x40019d7	       168	strbuf.h	FUNCTION_64	CALL_2
0x400237d	      0xe800000000	                          call 0x4002382	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002382	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002388	    0x803d00000000	                cmp byte [0x0400238f], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x400238f	     0xf8467fbffff	                            je 0x4001efc	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002395	            0xebe6	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002397	    0x660f1f840000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023a0	    0x803d00000000	                cmp byte [0x040023a7], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023a7	     0xf84e3faffff	                            je 0x4001e90	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023ad	            0xebce	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023af	              0x90	                                     nop	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023b0	    0x803d00000000	                cmp byte [0x040023b7], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023b7	     0xf8434faffff	                            je 0x4001df1	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023bd	            0xebbe	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023bf	              0x90	                                     nop	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023c0	    0x803d00000000	                cmp byte [0x040023c7], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023c7	     0xf84b7f9ffff	                            je 0x4001d84	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023cd	            0xebae	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023cf	              0x90	                                     nop	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023d0	    0x803d00000000	                cmp byte [0x040023d7], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023d7	     0xf843af9ffff	                            je 0x4001d17	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023dd	            0xeb9e	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023df	              0x90	                                     nop	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023e0	    0x803d00000000	                cmp byte [0x040023e7], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023e7	     0xf847cfbffff	                            je 0x4001f69	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023ed	            0xeb8e	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023ef	              0x90	                                     nop	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023f0	    0x803d00000000	                cmp byte [0x040023f7], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023f7	     0xf84d8fbffff	                            je 0x4001fd5	       168	strbuf.h	FUNCTION_64	CALL_2
0x40023fd	      0xe97bffffff	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002402	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002408	    0x803d00000000	                cmp byte [0x0400240f], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x400240f	     0xf8424f8ffff	                            je 0x4001c39	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002415	      0xe963ffffff	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x400241a	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002420	    0x803d00000000	                cmp byte [0x04002427], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002427	     0xf847df8ffff	                            je 0x4001caa	       168	strbuf.h	FUNCTION_64	CALL_2
0x400242d	      0xe94bffffff	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002432	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002438	      0xe800000000	                          call 0x400243d	       256	am.c	FUNCTION_12	IF_3
0x400243d	          0x833802	                      cmp dword [rax], 2	       256	am.c	FUNCTION_12	IF_3
0x4002440	     0xf84c9fcffff	                            je 0x400210f	       256	am.c	FUNCTION_12	IF_3
0x4002446	      0xbe00000000	                              mov esi, 0	       256	am.c	FUNCTION_12	IF_3
0x400244b	          0x4889df	                            mov rdi, rbx	       256	am.c	FUNCTION_12	IF_3
0x400244e	      0xe800000000	                          call 0x4002453	       256	am.c	FUNCTION_12	IF_3
0x4002453	       0xf1f440000	                   nop dword [rax + rax]	       256	am.c	FUNCTION_12	IF_3
0x4002458	    0x803d00000000	                cmp byte [0x0400245f], 0	       168	strbuf.h	FUNCTION_64	CALL_2
0x400245f	     0xf8478fcffff	                            je 0x40020dd	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002465	      0xe913ffffff	                           jmp 0x400237d	       168	strbuf.h	FUNCTION_64	CALL_2
0x400246a	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_64	CALL_2
0x4002470	      0xb900000000	                              mov ecx, 0	       378	am.c	FUNCTION_16	CALL_1
0x4002475	      0xba7a010000	                          mov edx, 0x17a	       378	am.c	FUNCTION_16	CALL_1
0x400247a	      0xbe00000000	                              mov esi, 0	       378	am.c	FUNCTION_16	CALL_1
0x400247f	      0xbf00000000	                              mov edi, 0	       378	am.c	FUNCTION_16	CALL_1
0x4002484	      0xe800000000	                          call 0x4002489	       378	am.c	FUNCTION_16	CALL_1
0x4002489	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400248e	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4002491	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002496	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4002498	      0xe800000000	                          call 0x400249d	       183	am.c	FUNCTION_6	CALL_1
0x400249d	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40024a2	          0x4889c3	                            mov rbx, rax	       183	am.c	FUNCTION_6	CALL_1
0x40024a5	      0xe836dfffff	                       call sym._.part.6	       183	am.c	FUNCTION_6	CALL_1
0x40024aa	          0x4889de	                            mov rsi, rbx	       465	am.c	FUNCTION_18	CALL_42
0x40024ad	          0x4889c7	                            mov rdi, rax	       465	am.c	FUNCTION_18	CALL_42
0x40024b0	            0x31c0	                            xor eax, eax	       465	am.c	FUNCTION_18	CALL_42
0x40024b2	      0xe800000000	                          call 0x40024b7	       465	am.c	FUNCTION_18	CALL_42
0x40024b7	      0xb900000000	                              mov ecx, 0	       314	am.c	FUNCTION_14	CALL_4
0x40024bc	      0xba3a010000	                          mov edx, 0x13a	       314	am.c	FUNCTION_14	CALL_4
0x40024c1	      0xbe00000000	                              mov esi, 0	       314	am.c	FUNCTION_14	CALL_4
0x40024c6	      0xbf00000000	                              mov edi, 0	       314	am.c	FUNCTION_14	CALL_4
0x40024cb	      0xe800000000	                          call 0x40024d0	       314	am.c	FUNCTION_14	CALL_4
0x40024d0	      0xb900000000	                              mov ecx, 0	       313	am.c	FUNCTION_14	CALL_3
0x40024d5	      0xba39010000	                          mov edx, 0x139	       313	am.c	FUNCTION_14	CALL_3
0x40024da	      0xbe00000000	                              mov esi, 0	       313	am.c	FUNCTION_14	CALL_3
0x40024df	      0xbf00000000	                              mov edi, 0	       313	am.c	FUNCTION_14	CALL_3
0x40024e4	      0xe800000000	                          call 0x40024e9	       313	am.c	FUNCTION_14	CALL_3
0x40024e9	      0xb900000000	                              mov ecx, 0	       312	am.c	FUNCTION_14	CALL_2
0x40024ee	      0xba38010000	                          mov edx, 0x138	       312	am.c	FUNCTION_14	CALL_2
0x40024f3	      0xbe00000000	                              mov esi, 0	       312	am.c	FUNCTION_14	CALL_2
0x40024f8	      0xbf00000000	                              mov edi, 0	       312	am.c	FUNCTION_14	CALL_2
0x40024fd	      0xe800000000	                          call 0x4002502	       312	am.c	FUNCTION_14	CALL_2
0x4002502	      0xe800000000	                          call 0x4002507	       470	am.c	FUNCTION_18
0x4002507	      0xbf00000000	                              mov edi, 0	       470	am.c	FUNCTION_18
0x400250c	      0xe8cfdeffff	                       call sym._.part.6	       470	am.c	FUNCTION_18
0x4002511	          0x4c89e6	                            mov rsi, r12	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002514	          0x4889c7	                            mov rdi, rax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002517	            0x31c0	                            xor eax, eax	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002519	      0xe800000000	                          call 0x400251e	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x400251e	      0xbe00000000	                              mov esi, 0	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002523	          0x4889df	                            mov rdi, rbx	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002526	      0xe800000000	                          call 0x400252b	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x400252b	      0xbe00000000	                              mov esi, 0	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002530	          0x4889df	                            mov rdi, rbx	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002533	      0xe800000000	                          call 0x4002538	       320	am.c	FUNCTION_14	IF_1	CALL_7
0x4002538	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400253d	      0xe94cffffff	                           jmp 0x400248e	       183	am.c	FUNCTION_6	CALL_1
0x4002542	      0xbe00000000	                              mov esi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002547	          0x4889df	                            mov rdi, rbx	       183	am.c	FUNCTION_6	CALL_1
0x400254a	      0xe800000000	                          call 0x400254f	       183	am.c	FUNCTION_6	CALL_1
0x400254f	      0xbe00000000	                              mov esi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4002554	          0x4889df	                            mov rdi, rbx	       183	am.c	FUNCTION_6	CALL_1
0x4002557	      0xe800000000	                          call 0x400255c	       183	am.c	FUNCTION_6	CALL_1
fast_forward_to	FOR,0:IF,3:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,11:functions,0	85
0x4000470	            0x4155	                                push r13	      1917	am.c	FUNCTION_51
0x4000472	            0x4154	                                push r12	      1917	am.c	FUNCTION_51
0x4000474	          0x4189d5	                           mov r13d, edx	      1917	am.c	FUNCTION_51
0x4000477	              0x55	                                push rbp	      1917	am.c	FUNCTION_51
0x4000478	              0x53	                                push rbx	      1917	am.c	FUNCTION_51
0x4000479	          0x4889f5	                            mov rbp, rsi	      1917	am.c	FUNCTION_51
0x400047c	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_133	CALL_1
0x400047e	          0x4889fb	                            mov rbx, rdi	      1917	am.c	FUNCTION_51
0x4000481	    0x4881ec780300	                          sub rsp, 0x378	      1917	am.c	FUNCTION_51
0x4000488	    0x64488b042528	                mov rax, qword fs:[0x28]	      1917	am.c	FUNCTION_51
0x4000491	    0x488984246803	            mov qword [rsp + 0x368], rax	      1917	am.c	FUNCTION_51
0x4000499	            0x31c0	                            xor eax, eax	      1917	am.c	FUNCTION_51
0x400049b	    0x48c704240000	                      mov qword [rsp], 0	      1918	am.c	FUNCTION_51
0x40004a3	      0xe800000000	                          call 0x40004a8	        22	tree.h	FUNCTION_133	CALL_1
0x40004a8	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40004aa	     0xf8500010000	                           jne 0x40005b0	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40004b0	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_133	CALL_1
0x40004b2	          0x4889ef	                            mov rdi, rbp	        22	tree.h	FUNCTION_133	CALL_1
0x40004b5	      0xe800000000	                          call 0x40004ba	        22	tree.h	FUNCTION_133	CALL_1
0x40004ba	            0x85c0	                           test eax, eax	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40004bc	     0xf85ee000000	                           jne 0x40005b0	      1922	am.c	FUNCTION_51	IF_1	CALL_2
0x40004c2	      0xbe01000000	                              mov esi, 1	      1925	am.c	FUNCTION_51	CALL_3
0x40004c7	          0x4889e7	                            mov rdi, rsp	      1925	am.c	FUNCTION_51	CALL_3
0x40004ca	      0x4c8d642460	                   lea r12, [rsp + 0x60]	        90	string3.h	FUNCTION_103	CALL_6
0x40004cf	      0xe800000000	                          call 0x40004d4	      1925	am.c	FUNCTION_51	CALL_3
0x40004d4	          0x4531c0	                            xor r8d, r8d	      1927	am.c	FUNCTION_51
0x40004d7	            0x31c9	                            xor ecx, ecx	      1927	am.c	FUNCTION_51
0x40004d9	            0x31d2	                            xor edx, edx	      1927	am.c	FUNCTION_51
0x40004db	      0xbe04000000	                              mov esi, 4	      1927	am.c	FUNCTION_51
0x40004e0	      0xbf00000000	                              mov edi, 0	      1927	am.c	FUNCTION_51
0x40004e5	      0xe800000000	                          call 0x40004ea	      1927	am.c	FUNCTION_51
0x40004ea	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_103	CALL_6
0x40004ec	      0xb960000000	                           mov ecx, 0x60	        90	string3.h	FUNCTION_103	CALL_6
0x40004f1	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_103	CALL_6
0x40004f4	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_103	CALL_6
0x40004f7	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1937	am.c	FUNCTION_51	CALL_5
0x40004fb	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1937	am.c	FUNCTION_51	CALL_5
0x40004ff	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1937	am.c	FUNCTION_51	CALL_5
0x4000504	    0xc78424600200	              mov dword [rsp + 0x260], 1	      1930	am.c	FUNCTION_51
0x400050f	    0x48c784248002	              mov qword [rsp + 0x280], 0	      1931	am.c	FUNCTION_51
0x400051b	    0x48c784247802	              mov qword [rsp + 0x278], 0	      1932	am.c	FUNCTION_51
0x4000527	    0xc74424680100	               mov dword [rsp + 0x68], 1	      1933	am.c	FUNCTION_51
0x400052f	    0xc74424640100	               mov dword [rsp + 0x64], 1	      1934	am.c	FUNCTION_51
0x4000537	      0x44896c2460	            mov dword [rsp + 0x60], r13d	      1935	am.c	FUNCTION_51
0x400053c	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	      1936	am.c	FUNCTION_51
0x4000548	      0xe800000000	                          call 0x400054d	      1937	am.c	FUNCTION_51	CALL_5
0x400054d	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	      1938	am.c	FUNCTION_51	CALL_6
0x4000551	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	      1938	am.c	FUNCTION_51	CALL_6
0x4000555	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      1938	am.c	FUNCTION_51	CALL_6
0x400055a	      0xe800000000	                          call 0x400055f	      1938	am.c	FUNCTION_51	CALL_6
0x400055f	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000564	          0x4c89e2	                            mov rdx, r12	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000567	      0xbf02000000	                              mov edi, 2	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x400056c	      0xe800000000	                          call 0x4000571	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000571	            0x85c0	                           test eax, eax	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000573	            0x754b	                           jne 0x40005c0	      1940	am.c	FUNCTION_51	IF_2	CALL_7
0x4000575	      0xba01000000	                              mov edx, 1	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x400057a	          0x4889e6	                            mov rsi, rsp	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x400057d	      0xbf00000000	                              mov edi, 0	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000582	      0xe800000000	                          call 0x4000587	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000587	            0x85c0	                           test eax, eax	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x4000589	            0x7549	                           jne 0x40005d4	      1945	am.c	FUNCTION_51	IF_3	CALL_9
0x400058b	    0x488b8c246803	           mov rcx, qword [rsp + 0x368] 	      1949	am.c	FUNCTION_51
0x4000593	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1949	am.c	FUNCTION_51
0x400059c	            0x7531	                           jne 0x40005cf	      1949	am.c	FUNCTION_51
0x400059e	    0x4881c4780300	                          add rsp, 0x378	      1949	am.c	FUNCTION_51
0x40005a5	              0x5b	                                 pop rbx	      1949	am.c	FUNCTION_51
0x40005a6	              0x5d	                                 pop rbp	      1949	am.c	FUNCTION_51
0x40005a7	            0x415c	                                 pop r12	      1949	am.c	FUNCTION_51
0x40005a9	            0x415d	                                 pop r13	      1949	am.c	FUNCTION_51
0x40005ab	              0xc3	                                     ret	      1949	am.c	FUNCTION_51
0x40005ac	         0xf1f4000	                         nop dword [rax]	      1949	am.c	FUNCTION_51
0x40005b0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1923	am.c	FUNCTION_51	IF_1
0x40005b5	            0xebd4	                           jmp 0x400058b	      1923	am.c	FUNCTION_51	IF_1
0x40005b7	    0x660f1f840000	                    nop word [rax + rax]	      1923	am.c	FUNCTION_51	IF_1
0x40005c0	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_143	CALL_1
0x40005c3	      0xe800000000	                          call 0x40005c8	       304	lockfile.h	FUNCTION_143	CALL_1
0x40005c8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1942	am.c	FUNCTION_51	IF_2
0x40005cd	            0xebbc	                           jmp 0x400058b	      1942	am.c	FUNCTION_51	IF_2
0x40005cf	      0xe800000000	                          call 0x40005d4	      1949	am.c	FUNCTION_51
0x40005d4	      0xbf00000000	                              mov edi, 0	      1949	am.c	FUNCTION_51
0x40005d9	      0xe802feffff	                       call sym._.part.6	      1949	am.c	FUNCTION_51
0x40005de	          0x4889c7	                            mov rdi, rax	      1946	am.c	FUNCTION_51	CALL_11
0x40005e1	            0x31c0	                            xor eax, eax	      1946	am.c	FUNCTION_51	CALL_11
0x40005e3	      0xe800000000	                          call 0x40005e8	      1946	am.c	FUNCTION_51	CALL_11
fall_back_threeway	FOR,0:IF,8:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,25:functions,0	288
0x40011a0	            0x4155	                                push r13	      1537	am.c	FUNCTION_45
0x40011a2	            0x4154	                                push r12	      1537	am.c	FUNCTION_45
0x40011a4	              0x55	                                push rbp	      1537	am.c	FUNCTION_45
0x40011a5	              0x53	                                push rbx	      1537	am.c	FUNCTION_45
0x40011a6	          0x4889f5	                            mov rbp, rsi	      1537	am.c	FUNCTION_45
0x40011a9	          0x4889fb	                            mov rbx, rdi	      1537	am.c	FUNCTION_45
0x40011ac	      0xbf00000000	                              mov edi, 0	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x40011b1	    0x4881eca80a00	                          sub rsp, 0xaa8	      1537	am.c	FUNCTION_45
0x40011b8	    0x4c8dac248001	                  lea r13, [rsp + 0x180]	      1539	am.c	FUNCTION_45
0x40011c0	    0x488db424c001	                  lea rsi, [rsp + 0x1c0]	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x40011c8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1537	am.c	FUNCTION_45
0x40011d1	    0x48898424980a	            mov qword [rsp + 0xa98], rax	      1537	am.c	FUNCTION_45
0x40011d9	            0x31c0	                            xor eax, eax	      1537	am.c	FUNCTION_45
0x40011db	    0x4c89ac247001	            mov qword [rsp + 0x170], r13	      1539	am.c	FUNCTION_45
0x40011e3	      0xe800000000	                          call 0x40011e8	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x40011e8	            0x85c0	                           test eax, eax	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x40011ea	     0xf8898030000	                            js 0x4001588	      1544	am.c	FUNCTION_45	IF_1	CALL_1
0x40011f0	      0x4c8d642438	                   lea r12, [rsp + 0x38]	      1522	am.c	FUNCTION_44	CALL_1
0x40011f5	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1519	am.c	FUNCTION_44
0x40011fa	            0x31c0	                            xor eax, eax	      1519	am.c	FUNCTION_44
0x40011fc	      0xb90c000000	                            mov ecx, 0xc	      1519	am.c	FUNCTION_44
0x4001201	      0xbe00000000	                              mov esi, 0	      1522	am.c	FUNCTION_44	CALL_1
0x4001206	          0xf348ab	              rep stosq qword [rdi], rax	      1519	am.c	FUNCTION_44
0x4001209	          0x4c89e7	                            mov rdi, r12	      1522	am.c	FUNCTION_44	CALL_1
0x400120c	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1519	am.c	FUNCTION_44
0x4001215	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1519	am.c	FUNCTION_44
0x400121e	      0xc644247808	                mov byte [rsp + 0x78], 8	      1521	am.c	FUNCTION_44
0x4001223	      0xe800000000	                          call 0x4001228	      1522	am.c	FUNCTION_44	CALL_1
0x4001228	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	      1523	am.c	FUNCTION_44	CALL_2
0x400122c	          0x4c89e7	                            mov rdi, r12	      1523	am.c	FUNCTION_44	CALL_2
0x400122f	      0xe800000000	                          call 0x4001234	      1523	am.c	FUNCTION_44	CALL_2
0x4001234	            0x31c0	                            xor eax, eax	      1524	am.c	FUNCTION_44	CALL_3
0x4001236	          0x4889ea	                            mov rdx, rbp	      1524	am.c	FUNCTION_44	CALL_3
0x4001239	      0xbe00000000	                              mov esi, 0	      1524	am.c	FUNCTION_44	CALL_3
0x400123e	          0x4c89e7	                            mov rdi, r12	      1524	am.c	FUNCTION_44	CALL_3
0x4001241	      0xe800000000	                          call 0x4001246	      1524	am.c	FUNCTION_44	CALL_3
0x4001246	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x4001249	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x400124e	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x4001253	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x4001255	      0xe800000000	                          call 0x400125a	       183	am.c	FUNCTION_6	CALL_1
0x400125a	          0x4c89e7	                            mov rdi, r12	      1525	am.c	FUNCTION_44	CALL_5
0x400125d	          0x4889c6	                            mov rsi, rax	      1525	am.c	FUNCTION_44	CALL_5
0x4001260	      0xe800000000	                          call 0x4001265	      1525	am.c	FUNCTION_44	CALL_5
0x4001265	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x400126a	      0xe800000000	                          call 0x400126f	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x400126f	            0x85c0	                           test eax, eax	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x4001271	     0xf85f1030000	                           jne 0x4001668	      1527	am.c	FUNCTION_44	IF_1	CALL_6
0x4001277	      0xbf00000000	                              mov edi, 0	      1550	am.c	FUNCTION_45
0x400127c	      0xe800000000	                          call 0x4001281	      1550	am.c	FUNCTION_45
0x4001281	      0xe800000000	                          call 0x4001286	      1551	am.c	FUNCTION_45
0x4001286	          0x4889ee	                            mov rsi, rbp	      1551	am.c	FUNCTION_45
0x4001289	          0x4889c2	                            mov rdx, rax	      1551	am.c	FUNCTION_45
0x400128c	      0xbf00000000	                              mov edi, 0	      1551	am.c	FUNCTION_45
0x4001291	      0xe800000000	                          call 0x4001296	      1551	am.c	FUNCTION_45
0x4001296	          0x4531c0	                            xor r8d, r8d	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x4001299	            0x31c9	                            xor ecx, ecx	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x400129b	          0x4889ea	                            mov rdx, rbp	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x400129e	      0xbe00000000	                              mov esi, 0	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40012a3	          0x4c89ef	                            mov rdi, r13	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40012a6	      0xe800000000	                          call 0x40012ab	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40012ab	            0x85c0	                           test eax, eax	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40012ad	     0xf85cd030000	                           jne 0x4001680	      1553	am.c	FUNCTION_45	IF_3	CALL_4
0x40012b3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_114
0x40012b5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_114
0x40012ba	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_114
0x40012bf	      0xe800000000	                          call 0x40012c4	        54	gettext.h	FUNCTION_114
0x40012c4	    0x488b35000000	            mov rsi, qword [0x040012cb] 	      1556	am.c	FUNCTION_45	CALL_7
0x40012cb	          0x4889c2	                            mov rdx, rax	      1556	am.c	FUNCTION_45	CALL_7
0x40012ce	          0x4889df	                            mov rdi, rbx	      1556	am.c	FUNCTION_45	CALL_7
0x40012d1	            0x31c0	                            xor eax, eax	      1556	am.c	FUNCTION_45	CALL_7
0x40012d3	      0xe8f8efffff	                            call sym.say	      1556	am.c	FUNCTION_45	CALL_7
0x40012d8	          0x8b4b58	            mov ecx, dword [rbx + 0x58] 	      1558	am.c	FUNCTION_45	IF_4
0x40012db	            0x85c9	                           test ecx, ecx	      1558	am.c	FUNCTION_45	IF_4
0x40012dd	     0xf84dd020000	                            je 0x40015c0	      1558	am.c	FUNCTION_45	IF_4
0x40012e3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x40012e8	            0x31f6	                            xor esi, esi	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x40012ea	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1458	am.c	FUNCTION_43
0x40012f3	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1458	am.c	FUNCTION_43
0x40012fb	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1458	am.c	FUNCTION_43
0x4001303	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1459	am.c	FUNCTION_43
0x400130c	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1459	am.c	FUNCTION_43
0x4001314	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      1459	am.c	FUNCTION_43
0x400131c	    0xc74424080000	                  mov dword [rsp + 8], 0	      1462	am.c	FUNCTION_43
0x4001324	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1463	am.c	FUNCTION_43
0x400132c	      0xe800000000	                          call 0x4001331	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4001331	            0x85c0	                           test eax, eax	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4001333	     0xf85a5030000	                           jne 0x40016de	      1465	am.c	FUNCTION_43	IF_1	CALL_1
0x4001339	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1468	am.c	FUNCTION_43	CALL_3
0x400133e	      0xbe00000000	                              mov esi, 0	      1468	am.c	FUNCTION_43	CALL_3
0x4001343	      0xe800000000	                          call 0x4001348	      1468	am.c	FUNCTION_43	CALL_3
0x4001348	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	      1469	am.c	FUNCTION_43	CALL_4
0x400134c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1469	am.c	FUNCTION_43	CALL_4
0x4001351	      0xe800000000	                          call 0x4001356	      1469	am.c	FUNCTION_43	CALL_4
0x4001356	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1471	am.c	FUNCTION_43	CALL_5
0x400135b	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      1471	am.c	FUNCTION_43	CALL_5
0x400135f	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1471	am.c	FUNCTION_43	CALL_5
0x4001364	      0x488d4c2408	                      lea rcx, [rsp + 8]	      1471	am.c	FUNCTION_43	CALL_5
0x4001369	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1471	am.c	FUNCTION_43	CALL_5
0x400136e	          0x4531c9	                            xor r9d, r9d	      1471	am.c	FUNCTION_43	CALL_5
0x4001371	      0xe800000000	                          call 0x4001376	      1471	am.c	FUNCTION_43	CALL_5
0x4001376	            0x85c0	                           test eax, eax	      1475	am.c	FUNCTION_43	IF_2
0x4001378	     0xf8571030000	                           jne 0x40016ef	      1475	am.c	FUNCTION_43	IF_2
0x400137e	          0x4885ed	                           test rbp, rbp	      1478	am.c	FUNCTION_43	IF_3
0x4001381	     0xf84b9020000	                            je 0x4001640	      1478	am.c	FUNCTION_43	IF_3
0x4001387	    0x4889ac248000	             mov qword [rsp + 0x80], rbp	      1479	am.c	FUNCTION_43	IF_3
0x400138f	    0xc74424440100	               mov dword [rsp + 0x44], 1	      1480	am.c	FUNCTION_43	IF_3
0x4001397	        0x8b742408	                mov esi, dword [rsp + 8]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x400139b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x40013a0	      0xe800000000	                          call 0x40013a5	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x40013a5	            0x85c0	                           test eax, eax	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x40013a7	     0xf8525030000	                           jne 0x40016d2	      1491	am.c	FUNCTION_43	IF_5	CALL_7
0x40013ad	          0x488b33	                    mov rsi, qword [rbx]	       183	am.c	FUNCTION_6	CALL_1
0x40013b0	      0xba00000000	                              mov edx, 0	       183	am.c	FUNCTION_6	CALL_1
0x40013b5	      0xbf00000000	                              mov edi, 0	       183	am.c	FUNCTION_6	CALL_1
0x40013ba	            0x31c0	                            xor eax, eax	       183	am.c	FUNCTION_6	CALL_1
0x40013bc	      0xe800000000	                          call 0x40013c1	       183	am.c	FUNCTION_6	CALL_1
0x40013c1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1494	am.c	FUNCTION_43	CALL_10
0x40013c6	          0x4889c6	                            mov rsi, rax	      1494	am.c	FUNCTION_43	CALL_10
0x40013c9	      0xe800000000	                          call 0x40013ce	      1494	am.c	FUNCTION_43	CALL_10
0x40013ce	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1496	am.c	FUNCTION_43	CALL_11
0x40013d2	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1496	am.c	FUNCTION_43	CALL_11
0x40013d7	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1496	am.c	FUNCTION_43	CALL_11
0x40013dc	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1496	am.c	FUNCTION_43	CALL_11
0x40013e0	      0xe800000000	                          call 0x40013e5	      1496	am.c	FUNCTION_43	CALL_11
0x40013e5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1498	am.c	FUNCTION_43	CALL_12
0x40013ea	          0x4189c4	                           mov r12d, eax	      1496	am.c	FUNCTION_43	CALL_11
0x40013ed	      0xe800000000	                          call 0x40013f2	      1498	am.c	FUNCTION_43	CALL_12
0x40013f2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1499	am.c	FUNCTION_43	CALL_13
0x40013f7	      0xe800000000	                          call 0x40013fc	      1499	am.c	FUNCTION_43	CALL_13
0x40013fc	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1500	am.c	FUNCTION_43	CALL_14
0x4001401	      0xe800000000	                          call 0x4001406	      1500	am.c	FUNCTION_43	CALL_14
0x4001406	          0x4585e4	                         test r12d, r12d	      1502	am.c	FUNCTION_43	IF_6
0x4001409	     0xf8551010000	                           jne 0x4001560	      1502	am.c	FUNCTION_43	IF_6
0x400140f	          0x4885ed	                           test rbp, rbp	      1505	am.c	FUNCTION_43	IF_7
0x4001412	            0x741f	                            je 0x4001433	      1505	am.c	FUNCTION_43	IF_7
0x4001414	      0xbf00000000	                              mov edi, 0	      1507	am.c	FUNCTION_43	IF_7
0x4001419	      0xe800000000	                          call 0x400141e	      1507	am.c	FUNCTION_43	IF_7
0x400141e	      0xe800000000	                          call 0x4001423	      1508	am.c	FUNCTION_43	IF_7
0x4001423	          0x4889ee	                            mov rsi, rbp	      1508	am.c	FUNCTION_43	IF_7
0x4001426	          0x4889c2	                            mov rdx, rax	      1508	am.c	FUNCTION_43	IF_7
0x4001429	      0xbf00000000	                              mov edi, 0	      1508	am.c	FUNCTION_43	IF_7
0x400142e	      0xe800000000	                          call 0x4001433	      1508	am.c	FUNCTION_43	IF_7
0x4001433	    0x488dbc24a001	                  lea rdi, [rsp + 0x1a0]	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400143b	          0x4531c0	                            xor r8d, r8d	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400143e	            0x31c9	                            xor ecx, ecx	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4001440	          0x4889ea	                            mov rdx, rbp	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4001443	      0xbe00000000	                              mov esi, 0	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4001448	      0xe800000000	                          call 0x400144d	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400144d	            0x85c0	                           test eax, eax	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x400144f	     0xf853b020000	                           jne 0x4001690	      1578	am.c	FUNCTION_45	IF_6	CALL_15
0x4001455	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_114
0x4001457	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_114
0x400145c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_114
0x4001461	      0xe800000000	                          call 0x4001466	        54	gettext.h	FUNCTION_114
0x4001466	    0x488b35000000	            mov rsi, qword [0x0400146d] 	      1581	am.c	FUNCTION_45	CALL_17
0x400146d	          0x4889c2	                            mov rdx, rax	      1581	am.c	FUNCTION_45	CALL_17
0x4001470	          0x4889df	                            mov rdi, rbx	      1581	am.c	FUNCTION_45	CALL_17
0x4001473	            0x31c0	                            xor eax, eax	      1581	am.c	FUNCTION_45	CALL_17
0x4001475	      0xe856eeffff	                            call sym.say	      1581	am.c	FUNCTION_45	CALL_17
0x400147a	      0xbf00000000	                              mov edi, 0	      1583	am.c	FUNCTION_45
0x400147f	      0xe800000000	                          call 0x4001484	      1583	am.c	FUNCTION_45
0x4001484	      0xbf00000000	                              mov edi, 0	      1584	am.c	FUNCTION_45
0x4001489	      0xe800000000	                          call 0x400148e	      1584	am.c	FUNCTION_45
0x400148e	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      1594	am.c	FUNCTION_45	CALL_18
0x4001496	      0xe800000000	                          call 0x400149b	      1594	am.c	FUNCTION_45	CALL_18
0x400149b	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      1597	am.c	FUNCTION_45	CALL_20
0x400149f	      0xbe0a000000	                            mov esi, 0xa	        57	am.c	FUNCTION_2
0x40014a4	    0x48c78424e801	              mov qword [rsp + 0x1e8], 0	      1596	am.c	FUNCTION_45
0x40014b0	          0x4889ef	                            mov rdi, rbp	        57	am.c	FUNCTION_2
0x40014b3	      0xe800000000	                          call 0x40014b8	        57	am.c	FUNCTION_2
0x40014b8	          0x4829e8	                            sub rax, rbp	      1597	am.c	FUNCTION_45	CALL_20
0x40014bb	          0x4889ea	                            mov rdx, rbp	      1597	am.c	FUNCTION_45	CALL_20
0x40014be	      0xbf00000000	                              mov edi, 0	      1597	am.c	FUNCTION_45	CALL_20
0x40014c3	          0x4889c6	                            mov rsi, rax	      1597	am.c	FUNCTION_45	CALL_20
0x40014c6	            0x31c0	                            xor eax, eax	      1597	am.c	FUNCTION_45	CALL_20
0x40014c8	      0xe800000000	                          call 0x40014cd	      1597	am.c	FUNCTION_45	CALL_20
0x40014cd	          0x4989c4	                            mov r12, rax	      1597	am.c	FUNCTION_45	CALL_20
0x40014d0	    0x48898424f001	            mov qword [rsp + 0x1f0], rax	      1598	am.c	FUNCTION_45
0x40014d8	          0x8b4358	            mov eax, dword [rbx + 0x58] 	      1600	am.c	FUNCTION_45	IF_7
0x40014db	            0x85c0	                           test eax, eax	      1600	am.c	FUNCTION_45	IF_7
0x40014dd	            0x7571	                           jne 0x4001550	      1600	am.c	FUNCTION_45	IF_7
0x40014df	      0x4c8d4c2430	                    lea r9, [rsp + 0x30]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40014e4	    0x4c8d84247001	                   lea r8, [rsp + 0x170]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40014ec	    0x488d9424a001	                  lea rdx, [rsp + 0x1a0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40014f4	    0x488db424c001	                  lea rsi, [rsp + 0x1c0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x40014fc	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001504	      0xb901000000	                              mov ecx, 1	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001509	      0xe800000000	                          call 0x400150e	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x400150e	            0x85c0	                           test eax, eax	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001510	            0x89c5	                            mov ebp, eax	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001512	     0xf8598010000	                           jne 0x40016b0	      1603	am.c	FUNCTION_45	IF_8	CALL_21
0x4001518	          0x4c89e7	                            mov rdi, r12	      1609	am.c	FUNCTION_45	CALL_25
0x400151b	      0xe800000000	                          call 0x4001520	      1609	am.c	FUNCTION_45	CALL_25
0x4001520	    0x488b8c24980a	           mov rcx, qword [rsp + 0xa98] 	      1611	am.c	FUNCTION_45
0x4001528	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1611	am.c	FUNCTION_45
0x4001531	            0x89e8	                            mov eax, ebp	      1611	am.c	FUNCTION_45
0x4001533	     0xf85b1010000	                           jne 0x40016ea	      1611	am.c	FUNCTION_45
0x4001539	    0x4881c4a80a00	                          add rsp, 0xaa8	      1611	am.c	FUNCTION_45
0x4001540	              0x5b	                                 pop rbx	      1611	am.c	FUNCTION_45
0x4001541	              0x5d	                                 pop rbp	      1611	am.c	FUNCTION_45
0x4001542	            0x415c	                                 pop r12	      1611	am.c	FUNCTION_45
0x4001544	            0x415d	                                 pop r13	      1611	am.c	FUNCTION_45
0x4001546	              0xc3	                                     ret	      1611	am.c	FUNCTION_45
0x4001547	    0x660f1f840000	                    nop word [rax + rax]	      1611	am.c	FUNCTION_45
0x4001550	    0xc78424180200	              mov dword [rsp + 0x218], 0	      1601	am.c	FUNCTION_45	IF_7
0x400155b	            0xeb82	                           jmp 0x40014df	      1601	am.c	FUNCTION_45	IF_7
0x400155d	           0xf1f00	                         nop dword [rax]	      1601	am.c	FUNCTION_45	IF_7
0x4001560	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_114
0x4001565	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_114
0x400156a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_114
0x400156c	      0xbdffffffff	                     mov ebp, 0xffffffff	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4001571	      0xe800000000	                          call 0x4001576	        54	gettext.h	FUNCTION_114
0x4001576	          0x4889c7	                            mov rdi, rax	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4001579	            0x31c0	                            xor eax, eax	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x400157b	      0xe800000000	                          call 0x4001580	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4001580	            0xeb9e	                           jmp 0x4001520	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4001582	    0x660f1f440000	                    nop word [rax + rax]	      1575	am.c	FUNCTION_45	IF_5	CALL_14
0x4001588	    0x488b05000000	            mov rax, qword [0x0400158f] 	        53	string3.h	FUNCTION_100	CALL_3
0x400158f	    0x48898424c001	            mov qword [rsp + 0x1c0], rax	        53	string3.h	FUNCTION_100	CALL_3
0x4001597	    0x488b05000000	            mov rax, qword [0x0400159e] 	        53	string3.h	FUNCTION_100	CALL_3
0x400159e	    0x48898424c801	            mov qword [rsp + 0x1c8], rax	        53	string3.h	FUNCTION_100	CALL_3
0x40015a6	    0x8b0500000000	            mov eax, dword [0x040015ac] 	        53	string3.h	FUNCTION_100	CALL_3
0x40015ac	    0x898424d00100	            mov dword [rsp + 0x1d0], eax	        53	string3.h	FUNCTION_100	CALL_3
0x40015b3	      0xe938fcffff	                           jmp 0x40011f0	        53	string3.h	FUNCTION_100	CALL_3
0x40015b8	     0xf1f84000000	                   nop dword [rax + rax]	        53	string3.h	FUNCTION_100	CALL_3
0x40015c0	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x40015c8	            0x31f6	                            xor esi, esi	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x40015ca	    0x4c8da424d806	                  lea r12, [rsp + 0x6d8]	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40015d2	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1564	am.c	FUNCTION_45	IF_4
0x40015db	      0xe800000000	                          call 0x40015e0	      1566	am.c	FUNCTION_45	IF_4	CALL_8
0x40015e0	    0x488b8c242002	           mov rcx, qword [rsp + 0x220] 	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40015e8	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40015ed	          0x4c89e7	                            mov rdi, r12	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40015f0	      0xba01000000	                              mov edx, 1	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x40015f5	    0xc78424380700	         mov dword [rsp + 0x738], 0x200 	      1567	am.c	FUNCTION_45	IF_4
0x4001600	      0xe800000000	                          call 0x4001605	      1568	am.c	FUNCTION_45	IF_4	CALL_9
0x4001605	    0x488d9424c001	                  lea rdx, [rsp + 0x1c0]	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x400160d	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x4001615	            0x31c9	                            xor ecx, ecx	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x4001617	      0xbe00000000	                              mov esi, 0	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x400161c	      0xe800000000	                          call 0x4001621	      1569	am.c	FUNCTION_45	IF_4	CALL_10
0x4001621	          0x4c89e7	                            mov rdi, r12	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x4001624	      0xe800000000	                          call 0x4001629	      1570	am.c	FUNCTION_45	IF_4	CALL_11
0x4001629	    0x488dbc24e001	                  lea rdi, [rsp + 0x1e0]	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x4001631	      0xbe01000000	                              mov esi, 1	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x4001636	      0xe800000000	                          call 0x400163b	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x400163b	      0xe9a3fcffff	                           jmp 0x40012e3	      1571	am.c	FUNCTION_45	IF_4	CALL_12
0x4001640	          0x8b5354	            mov edx, dword [rbx + 0x54] 	      1488	am.c	FUNCTION_43	IF_4
0x4001643	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      1482	am.c	FUNCTION_43	ELSE_1
0x400164b	            0x85d2	                           test edx, edx	      1488	am.c	FUNCTION_43	IF_4
0x400164d	     0xf8444fdffff	                            je 0x4001397	      1488	am.c	FUNCTION_43	IF_4
0x4001653	    0xc78424880000	     mov dword [rsp + 0x88], 0xffffffff 	      1489	am.c	FUNCTION_43	IF_4
0x400165e	      0xe934fdffff	                           jmp 0x4001397	      1489	am.c	FUNCTION_43	IF_4
0x4001663	       0xf1f440000	                   nop dword [rax + rax]	      1489	am.c	FUNCTION_43	IF_4
0x4001668	      0xbf00000000	                              mov edi, 0	      1548	am.c	FUNCTION_45	IF_2
0x400166d	            0x31c0	                            xor eax, eax	      1548	am.c	FUNCTION_45	IF_2
0x400166f	      0xbdffffffff	                     mov ebp, 0xffffffff	      1548	am.c	FUNCTION_45	IF_2
0x4001674	      0xe800000000	                          call 0x4001679	      1548	am.c	FUNCTION_45	IF_2
0x4001679	      0xe9a2feffff	                           jmp 0x4001520	      1548	am.c	FUNCTION_45	IF_2
0x400167e	            0x6690	                                     nop	      1548	am.c	FUNCTION_45	IF_2
0x4001680	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_114
0x4001685	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_114
0x400168a	      0xe9dbfeffff	                           jmp 0x400156a	        54	gettext.h	FUNCTION_114
0x400168f	              0x90	                                     nop	        54	gettext.h	FUNCTION_114
0x4001690	      0xbf00000000	                              mov edi, 0	      1579	am.c	FUNCTION_45	IF_6
0x4001695	            0x31c0	                            xor eax, eax	      1579	am.c	FUNCTION_45	IF_6
0x4001697	      0xbdffffffff	                     mov ebp, 0xffffffff	      1579	am.c	FUNCTION_45	IF_6
0x400169c	      0xe800000000	                          call 0x40016a1	      1579	am.c	FUNCTION_45	IF_6
0x40016a1	      0xe97afeffff	                           jmp 0x4001520	      1579	am.c	FUNCTION_45	IF_6
0x40016a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1579	am.c	FUNCTION_45	IF_6
0x40016b0	    0x8bbb90000000	            mov edi, dword [rbx + 0x90] 	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x40016b6	      0xe800000000	                          call 0x40016bb	      1604	am.c	FUNCTION_45	IF_8	CALL_22
0x40016bb	          0x4c89e7	                            mov rdi, r12	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x40016be	      0xe800000000	                          call 0x40016c3	      1605	am.c	FUNCTION_45	IF_8	CALL_23
0x40016c3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_114
0x40016c8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_114
0x40016cd	      0xe998feffff	                           jmp 0x400156a	        54	gettext.h	FUNCTION_114
0x40016d2	      0xbf00000000	                              mov edi, 0	      1492	am.c	FUNCTION_43	CALL_8
0x40016d7	            0x31c0	                            xor eax, eax	      1492	am.c	FUNCTION_43	CALL_8
0x40016d9	      0xe800000000	                          call 0x40016de	      1492	am.c	FUNCTION_43	CALL_8
0x40016de	      0xbf00000000	                              mov edi, 0	      1466	am.c	FUNCTION_43	CALL_2
0x40016e3	            0x31c0	                            xor eax, eax	      1466	am.c	FUNCTION_43	CALL_2
0x40016e5	      0xe800000000	                          call 0x40016ea	      1466	am.c	FUNCTION_43	CALL_2
0x40016ea	      0xe800000000	                          call 0x40016ef	      1611	am.c	FUNCTION_45
0x40016ef	      0xbf00000000	                              mov edi, 0	      1476	am.c	FUNCTION_43	CALL_6
0x40016f4	            0x31c0	                            xor eax, eax	      1476	am.c	FUNCTION_43	CALL_6
0x40016f6	      0xe800000000	                          call 0x40016fb	      1476	am.c	FUNCTION_43	CALL_6
split_mail_mbox	FOR,0:IF,3:SWITCH,0:DO,0:WHILE,0:ELSE,0:CALL,11:functions,0	99
0x4000040	            0x4156	                                push r14	       708	am.c	FUNCTION_25
0x4000042	            0x4155	                                push r13	       708	am.c	FUNCTION_25
0x4000044	          0x4189cd	                           mov r13d, ecx	       708	am.c	FUNCTION_25
0x4000047	            0x4154	                                push r12	       708	am.c	FUNCTION_25
0x4000049	              0x55	                                push rbp	       708	am.c	FUNCTION_25
0x400004a	          0x4889fd	                            mov rbp, rdi	       708	am.c	FUNCTION_25
0x400004d	              0x53	                                push rbx	       708	am.c	FUNCTION_25
0x400004e	      0xb90c000000	                            mov ecx, 0xc	       709	am.c	FUNCTION_25
0x4000053	          0x4989f4	                            mov r12, rsi	       708	am.c	FUNCTION_25
0x4000056	      0xbe00000000	                              mov esi, 0	       714	am.c	FUNCTION_25	CALL_1
0x400005b	          0x4189d6	                           mov r14d, edx	       708	am.c	FUNCTION_25
0x400005e	    0x4881ec900000	                           sub rsp, 0x90	       708	am.c	FUNCTION_25
0x4000065	    0x64488b042528	                mov rax, qword fs:[0x28]	       708	am.c	FUNCTION_25
0x400006e	    0x488984248800	             mov qword [rsp + 0x88], rax	       708	am.c	FUNCTION_25
0x4000076	            0x31c0	                            xor eax, eax	       708	am.c	FUNCTION_25
0x4000078	      0x488d5c2428	                   lea rbx, [rsp + 0x28]	       714	am.c	FUNCTION_25	CALL_1
0x400007d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       709	am.c	FUNCTION_25
0x4000082	    0x48c704240000	                      mov qword [rsp], 0	       710	am.c	FUNCTION_25
0x400008a	    0x48c744240800	                  mov qword [rsp + 8], 0	       710	am.c	FUNCTION_25
0x4000093	    0x48c744241000	               mov qword [rsp + 0x10], 0	       710	am.c	FUNCTION_25
0x400009c	          0xf348ab	              rep stosq qword [rdi], rax	       709	am.c	FUNCTION_25
0x400009f	          0x4889df	                            mov rdi, rbx	       714	am.c	FUNCTION_25	CALL_1
0x40000a2	    0x48c744242800	               mov qword [rsp + 0x28], 0	       709	am.c	FUNCTION_25
0x40000ab	    0x48c744243800	               mov qword [rsp + 0x38], 0	       709	am.c	FUNCTION_25
0x40000b4	      0xc644246808	                mov byte [rsp + 0x68], 8	       713	am.c	FUNCTION_25
0x40000b9	      0xe800000000	                          call 0x40000be	       714	am.c	FUNCTION_25	CALL_1
0x40000be	          0x8b554c	            mov edx, dword [rbp + 0x4c] 	       715	am.c	FUNCTION_25	CALL_2
0x40000c1	            0x31c0	                            xor eax, eax	       715	am.c	FUNCTION_25	CALL_2
0x40000c3	      0xbe00000000	                              mov esi, 0	       715	am.c	FUNCTION_25	CALL_2
0x40000c8	          0x4889df	                            mov rdi, rbx	       715	am.c	FUNCTION_25	CALL_2
0x40000cb	      0xe800000000	                          call 0x40000d0	       715	am.c	FUNCTION_25	CALL_2
0x40000d0	        0x488b5500	                    mov rdx, qword [rbp]	       716	am.c	FUNCTION_25	CALL_3
0x40000d4	            0x31c0	                            xor eax, eax	       716	am.c	FUNCTION_25	CALL_3
0x40000d6	      0xbe00000000	                              mov esi, 0	       716	am.c	FUNCTION_25	CALL_3
0x40000db	          0x4889df	                            mov rdi, rbx	       716	am.c	FUNCTION_25	CALL_3
0x40000de	      0xe800000000	                          call 0x40000e3	       716	am.c	FUNCTION_25	CALL_3
0x40000e3	      0xbe00000000	                              mov esi, 0	       717	am.c	FUNCTION_25	CALL_4
0x40000e8	          0x4889df	                            mov rdi, rbx	       717	am.c	FUNCTION_25	CALL_4
0x40000eb	      0xe800000000	                          call 0x40000f0	       717	am.c	FUNCTION_25	CALL_4
0x40000f0	          0x4585f6	                         test r14d, r14d	       718	am.c	FUNCTION_25	IF_1
0x40000f3	     0xf8587000000	                           jne 0x4000180	       718	am.c	FUNCTION_25	IF_1
0x40000f9	          0x4585ed	                         test r13d, r13d	       720	am.c	FUNCTION_25	IF_2
0x40000fc	     0xf8594000000	                           jne 0x4000196	       720	am.c	FUNCTION_25	IF_2
0x4000102	      0x488d5c2428	                   lea rbx, [rsp + 0x28]	       722	am.c	FUNCTION_25	CALL_7
0x4000107	      0xbe00000000	                              mov esi, 0	       722	am.c	FUNCTION_25	CALL_7
0x400010c	          0x4889df	                            mov rdi, rbx	       722	am.c	FUNCTION_25	CALL_7
0x400010f	      0xe800000000	                          call 0x4000114	       722	am.c	FUNCTION_25	CALL_7
0x4000114	          0x4889df	                            mov rdi, rbx	       723	am.c	FUNCTION_25	CALL_8
0x4000117	          0x4c89e6	                            mov rsi, r12	       723	am.c	FUNCTION_25	CALL_8
0x400011a	      0xe800000000	                          call 0x400011f	       723	am.c	FUNCTION_25	CALL_8
0x400011f	        0x4883ec08	                              sub rsp, 8	       112	run-command.h	FUNCTION_171	CALL_1
0x4000123	            0x31d2	                            xor edx, edx	       112	run-command.h	FUNCTION_171	CALL_1
0x4000125	          0x4531c9	                            xor r9d, r9d	       112	run-command.h	FUNCTION_171	CALL_1
0x4000128	            0x6a00	                                  push 0	       112	run-command.h	FUNCTION_171	CALL_1
0x400012a	            0x31f6	                            xor esi, esi	       112	run-command.h	FUNCTION_171	CALL_1
0x400012c	    0x41b808000000	                              mov r8d, 8	       112	run-command.h	FUNCTION_171	CALL_1
0x4000132	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       112	run-command.h	FUNCTION_171	CALL_1
0x4000137	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       112	run-command.h	FUNCTION_171	CALL_1
0x400013c	      0xe800000000	                          call 0x4000141	       112	run-command.h	FUNCTION_171	CALL_1
0x4000141	            0x89c3	                            mov ebx, eax	       112	run-command.h	FUNCTION_171	CALL_1
0x4000143	            0x85db	                           test ebx, ebx	       726	am.c	FUNCTION_25	IF_3
0x4000145	              0x58	                                 pop rax	       726	am.c	FUNCTION_25	IF_3
0x4000146	              0x5a	                                 pop rdx	       726	am.c	FUNCTION_25	IF_3
0x4000147	            0x7467	                            je 0x40001b0	       726	am.c	FUNCTION_25	IF_3
0x4000149	          0x4889e7	                            mov rdi, rsp	       733	am.c	FUNCTION_25	CALL_11
0x400014c	      0xbbffffffff	                     mov ebx, 0xffffffff	       734	am.c	FUNCTION_25
0x4000151	      0xe800000000	                          call 0x4000156	       733	am.c	FUNCTION_25	CALL_11
0x4000156	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	       735	am.c	FUNCTION_25
0x400015e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       735	am.c	FUNCTION_25
0x4000167	            0x89d8	                            mov eax, ebx	       735	am.c	FUNCTION_25
0x4000169	            0x756a	                           jne 0x40001d5	       735	am.c	FUNCTION_25
0x400016b	    0x4881c4900000	                           add rsp, 0x90	       735	am.c	FUNCTION_25
0x4000172	              0x5b	                                 pop rbx	       735	am.c	FUNCTION_25
0x4000173	              0x5d	                                 pop rbp	       735	am.c	FUNCTION_25
0x4000174	            0x415c	                                 pop r12	       735	am.c	FUNCTION_25
0x4000176	            0x415d	                                 pop r13	       735	am.c	FUNCTION_25
0x4000178	            0x415e	                                 pop r14	       735	am.c	FUNCTION_25
0x400017a	              0xc3	                                     ret	       735	am.c	FUNCTION_25
0x400017b	       0xf1f440000	                   nop dword [rax + rax]	       735	am.c	FUNCTION_25
0x4000180	      0xbe00000000	                              mov esi, 0	       719	am.c	FUNCTION_25	CALL_5
0x4000185	          0x4889df	                            mov rdi, rbx	       719	am.c	FUNCTION_25	CALL_5
0x4000188	      0xe800000000	                          call 0x400018d	       719	am.c	FUNCTION_25	CALL_5
0x400018d	          0x4585ed	                         test r13d, r13d	       720	am.c	FUNCTION_25	IF_2
0x4000190	     0xf846cffffff	                            je 0x4000102	       720	am.c	FUNCTION_25	IF_2
0x4000196	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       721	am.c	FUNCTION_25	CALL_6
0x400019b	      0xbe00000000	                              mov esi, 0	       721	am.c	FUNCTION_25	CALL_6
0x40001a0	      0xe800000000	                          call 0x40001a5	       721	am.c	FUNCTION_25	CALL_6
0x40001a5	      0xe958ffffff	                           jmp 0x4000102	       721	am.c	FUNCTION_25	CALL_6
0x40001aa	    0x660f1f440000	                    nop word [rax + rax]	       721	am.c	FUNCTION_25	CALL_6
0x40001b0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       730	am.c	FUNCTION_25	CALL_10
0x40001b5	    0xc74508010000	                  mov dword [rbp + 8], 1	       729	am.c	FUNCTION_25
0x40001bc	      0xba0a000000	                            mov edx, 0xa	       730	am.c	FUNCTION_25	CALL_10
0x40001c1	            0x31f6	                            xor esi, esi	       730	am.c	FUNCTION_25	CALL_10
0x40001c3	      0xe800000000	                          call 0x40001c8	       730	am.c	FUNCTION_25	CALL_10
0x40001c8	          0x4889e7	                            mov rdi, rsp	       733	am.c	FUNCTION_25	CALL_11
0x40001cb	          0x89450c	              mov dword [rbp + 0xc], eax	       730	am.c	FUNCTION_25	CALL_10
0x40001ce	      0xe800000000	                          call 0x40001d3	       733	am.c	FUNCTION_25	CALL_11
0x40001d3	            0xeb81	                           jmp 0x4000156	       733	am.c	FUNCTION_25	CALL_11
0x40001d5	      0xe800000000	                          call 0x40001da	       735	am.c	FUNCTION_25
