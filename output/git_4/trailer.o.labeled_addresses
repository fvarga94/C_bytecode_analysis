format_trailers_from_commit	functions,0:WHILE,0:FOR,0:ELSE,0:SWITCH,0:IF,0:DO,0:CALL,3	149
0x4002c00	            0x4157	                                push r15	      1158	trailer.c	FUNCTION_52
0x4002c02	            0x4156	                                push r14	      1158	trailer.c	FUNCTION_52
0x4002c04	            0x4155	                                push r13	      1158	trailer.c	FUNCTION_52
0x4002c06	            0x4154	                                push r12	      1158	trailer.c	FUNCTION_52
0x4002c08	              0x55	                                push rbp	      1158	trailer.c	FUNCTION_52
0x4002c09	              0x53	                                push rbx	      1158	trailer.c	FUNCTION_52
0x4002c0a	          0x4889d3	                            mov rbx, rdx	      1158	trailer.c	FUNCTION_52
0x4002c0d	    0x4881ec980000	                           sub rsp, 0x98	      1158	trailer.c	FUNCTION_52
0x4002c14	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1158	trailer.c	FUNCTION_52
0x4002c19	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1161	trailer.c	FUNCTION_52	CALL_1
0x4002c1e	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1158	trailer.c	FUNCTION_52
0x4002c23	    0x64488b042528	                mov rax, qword fs:[0x28]	      1158	trailer.c	FUNCTION_52
0x4002c2c	    0x488984248800	             mov qword [rsp + 0x88], rax	      1158	trailer.c	FUNCTION_52
0x4002c34	            0x31c0	                            xor eax, eax	      1158	trailer.c	FUNCTION_52
0x4002c36	      0xe800000000	                          call 0x4002c3b	      1161	trailer.c	FUNCTION_52	CALL_1
0x4002c3b	          0x8b7308	                mov esi, dword [rbx + 8]	      1127	trailer.c	FUNCTION_51	IF_1
0x4002c3e	            0x85f6	                           test esi, esi	      1127	trailer.c	FUNCTION_51	IF_1
0x4002c40	            0x750b	                           jne 0x4002c4d	      1127	trailer.c	FUNCTION_51	IF_1
0x4002c42	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      1127	trailer.c	FUNCTION_51	IF_1
0x4002c45	            0x85c9	                           test ecx, ecx	      1127	trailer.c	FUNCTION_51	IF_1
0x4002c47	     0xf8402020000	                            je 0x4002e4f	      1127	trailer.c	FUNCTION_51	IF_1
0x4002c4d	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002c55	          0x4531f6	                          xor r14d, r14d	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002c58	      0x4c8b6c2478	            mov r13, qword [rsp + 0x78] 	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002c5d	          0x4885c0	                           test rax, rax	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002c60	      0x4889442408	                mov qword [rsp + 8], rax	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002c65	     0xf84ba000000	                            je 0x4002d25	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002c6b	       0xf1f440000	                   nop dword [rax + rax]	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002c70	      0x4f8b64f500	            mov r12, qword [r13 + r14*8]	      1134	trailer.c	FUNCTION_51	FOR_1
0x4002c75	    0x488b2d000000	            mov rbp, qword [0x04002c7c] 	      1135	trailer.c	FUNCTION_51	FOR_1	CALL_2
0x4002c7c	      0x410fbe3424	                   movsx esi, byte [r12]	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c81	          0x4084f6	                           test sil, sil	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c84	            0x7454	                            je 0x4002cda	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c86	          0x4d89e7	                            mov r15, r12	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c89	            0x31db	                            xor ebx, ebx	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c8b	            0xeb15	                           jmp 0x4002ca2	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c8d	           0xf1f00	                         nop dword [rax]	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c90	      0xbb01000000	                              mov ebx, 1	       616	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4002c95	        0x4983c701	                              add r15, 1	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c99	        0x410fbe37	                   movsx esi, byte [r15]	       610	trailer.c	FUNCTION_32	FOR_1
0x4002c9d	          0x4084f6	                           test sil, sil	       610	trailer.c	FUNCTION_32	FOR_1
0x4002ca0	            0x7438	                            je 0x4002cda	       610	trailer.c	FUNCTION_32	FOR_1
0x4002ca2	          0x4889ef	                            mov rdi, rbp	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002ca5	      0xe800000000	                          call 0x4002caa	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002caa	          0x4885c0	                           test rax, rax	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002cad	     0xf85ad000000	                           jne 0x4002d60	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002cb3	            0x85db	                           test ebx, ebx	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4002cb5	            0x7512	                           jne 0x4002cc9	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4002cb7	        0x410fb617	                   movzx edx, byte [r15]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4002cbb	    0xf68200000000	                      test byte [rdx], 6	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4002cc2	            0x75d1	                           jne 0x4002c95	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4002cc4	          0x80fa2d	                            cmp dl, 0x2d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4002cc7	            0x74cc	                            je 0x4002c95	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4002cc9	          0x4d39fc	                            cmp r12, r15	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4002ccc	            0x740c	                            je 0x4002cda	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4002cce	        0x410fb607	                   movzx eax, byte [r15]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4002cd2	            0x3c20	                            cmp al, 0x20	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4002cd4	            0x74ba	                            je 0x4002c90	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4002cd6	            0x3c09	                               cmp al, 9	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4002cd8	            0x74b6	                            je 0x4002c90	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4002cda	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x4002cdf	          0x8b4008	                mov eax, dword [rax + 8]	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x4002ce2	            0x85c0	                           test eax, eax	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x4002ce4	     0xf8436010000	                            je 0x4002e20	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x4002cea	        0x4983c601	                              add r14, 1	      1149	trailer.c	FUNCTION_51	FOR_1	ELSE_1	IF_4
0x4002cee	      0x4c3b742408	                cmp r14, qword [rsp + 8]	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002cf3	     0xf8277ffffff	                            jb 0x4002c70	      1133	trailer.c	FUNCTION_51	FOR_1
0x4002cf9	    0x48837c240800	                  cmp qword [rsp + 8], 0	      1115	trailer.c	FUNCTION_50	FOR_1
0x4002cff	            0x7424	                            je 0x4002d25	      1115	trailer.c	FUNCTION_50	FOR_1
0x4002d01	            0x31db	                            xor ebx, ebx	      1115	trailer.c	FUNCTION_50	FOR_1
0x4002d03	       0xf1f440000	                   nop dword [rax + rax]	      1115	trailer.c	FUNCTION_50	FOR_1
0x4002d08	      0x498b7cdd00	            mov rdi, qword [r13 + rbx*8]	      1116	trailer.c	FUNCTION_50	CALL_1
0x4002d0d	        0x4883c301	                              add rbx, 1	      1116	trailer.c	FUNCTION_50	CALL_1
0x4002d11	      0xe800000000	                          call 0x4002d16	      1116	trailer.c	FUNCTION_50	CALL_1
0x4002d16	    0x48399c248000	            cmp qword [rsp + 0x80], rbx 	      1115	trailer.c	FUNCTION_50	FOR_1
0x4002d1e	      0x4c8b6c2478	            mov r13, qword [rsp + 0x78] 	      1115	trailer.c	FUNCTION_50	FOR_1
0x4002d23	            0x77e3	                            ja 0x4002d08	      1115	trailer.c	FUNCTION_50	FOR_1
0x4002d25	          0x4c89ef	                            mov rdi, r13	      1117	trailer.c	FUNCTION_50	CALL_2
0x4002d28	      0xe800000000	                          call 0x4002d2d	      1117	trailer.c	FUNCTION_50	CALL_2
0x4002d2d	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1164	trailer.c	FUNCTION_52
0x4002d35	    0x644833042528	                xor rax, qword fs:[0x28]	      1164	trailer.c	FUNCTION_52
0x4002d3e	     0xf8539010000	                           jne 0x4002e7d	      1164	trailer.c	FUNCTION_52
0x4002d44	    0x4881c4980000	                           add rsp, 0x98	      1164	trailer.c	FUNCTION_52
0x4002d4b	              0x5b	                                 pop rbx	      1164	trailer.c	FUNCTION_52
0x4002d4c	              0x5d	                                 pop rbp	      1164	trailer.c	FUNCTION_52
0x4002d4d	            0x415c	                                 pop r12	      1164	trailer.c	FUNCTION_52
0x4002d4f	            0x415d	                                 pop r13	      1164	trailer.c	FUNCTION_52
0x4002d51	            0x415e	                                 pop r14	      1164	trailer.c	FUNCTION_52
0x4002d53	            0x415f	                                 pop r15	      1164	trailer.c	FUNCTION_52
0x4002d55	              0xc3	                                     ret	      1164	trailer.c	FUNCTION_52
0x4002d56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1164	trailer.c	FUNCTION_52
0x4002d60	          0x4d89f8	                             mov r8, r15	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x4002d63	          0x4d29e0	                             sub r8, r12	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x4002d66	          0x4585c0	                           test r8d, r8d	      1137	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002d69	     0xf8e6bffffff	                           jle 0x4002cda	      1137	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002d6f	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x4002d74	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x4002d79	            0x31d2	                            xor edx, edx	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x4002d7b	          0x4c89e1	                            mov rcx, r12	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x4002d7e	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002d87	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002d90	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1138	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002d99	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002da2	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002dab	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1139	trailer.c	FUNCTION_51	FOR_1	IF_2
0x4002db4	      0xe887d2ffff	                  call sym.parse_trailer	      1141	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_3
0x4002db9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4002dbe	          0x8b5010	            mov edx, dword [rax + 0x10] 	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4002dc1	            0x85d2	                           test edx, edx	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4002dc3	            0x754b	                           jne 0x4002e10	      1142	trailer.c	FUNCTION_51	FOR_1	IF_2	IF_3
0x4002dc5	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002dca	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002dcf	            0x31c0	                            xor eax, eax	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002dd1	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002dd6	      0xbe00000000	                              mov esi, 0	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002ddb	      0xe800000000	                          call 0x4002de0	      1145	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_5
0x4002de0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x4002de5	      0xe800000000	                          call 0x4002dea	      1146	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_6
0x4002dea	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002def	      0xe800000000	                          call 0x4002df4	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002df4	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002dfc	      0x4c8b6c2478	            mov r13, qword [rsp + 0x78] 	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002e01	      0x4889442408	                mov qword [rsp + 8], rax	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002e06	      0xe9dffeffff	                           jmp 0x4002cea	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002e0b	       0xf1f440000	                   nop dword [rax + rax]	      1147	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_7
0x4002e10	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x4002e15	      0xe8d6d3ffff	                   call sym.unfold_value	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x4002e1a	            0xeba9	                           jmp 0x4002dc5	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x4002e1c	         0xf1f4000	                         nop dword [rax]	      1143	trailer.c	FUNCTION_51	FOR_1	IF_2	CALL_4
0x4002e20	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e23	      0xe800000000	                          call 0x4002e28	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e28	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e2d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e30	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e33	      0xe800000000	                          call 0x4002e38	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e38	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e40	      0x4c8b6c2478	            mov r13, qword [rsp + 0x78] 	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e45	      0x4889442408	                mov qword [rsp + 8], rax	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e4a	      0xe99bfeffff	                           jmp 0x4002cea	       279	strbuf.h	FUNCTION_57	CALL_2
0x4002e4f	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      1129	trailer.c	FUNCTION_51	IF_1
0x4002e54	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002e59	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002e5e	          0x4829f2	                            sub rdx, rsi	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002e61	      0xe800000000	                          call 0x4002e66	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002e66	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002e6e	      0x4c8b6c2478	            mov r13, qword [rsp + 0x78] 	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002e73	      0x4889442408	                mov qword [rsp + 8], rax	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002e78	      0xe97cfeffff	                           jmp 0x4002cf9	      1128	trailer.c	FUNCTION_51	IF_1	CALL_1
0x4002e7d	      0xe800000000	                  call section_end..text	      1164	trailer.c	FUNCTION_52
parse_trailer	functions,0:WHILE,0:FOR,0:ELSE,1:SWITCH,0:IF,4:DO,0:CALL,12	120
0x4000040	        0x4183f8ff	            cmp r8d, 0xffffffffffffffff 	        50	gettext.h	
0x4000044	            0x4156	                                push r14	        54	gettext.h	FUNCTION_66
0x4000046	            0x4155	                                push r13	        54	gettext.h	FUNCTION_66
0x4000048	          0x4989d5	                            mov r13, rdx	        54	gettext.h	FUNCTION_66
0x400004b	            0x4154	                                push r12	        54	gettext.h	FUNCTION_66
0x400004d	          0x4989fc	                            mov r12, rdi	        54	gettext.h	FUNCTION_66
0x4000050	              0x55	                                push rbp	       634	trailer.c	FUNCTION_33
0x4000051	          0x4889cd	                            mov rbp, rcx	       634	trailer.c	FUNCTION_33
0x4000054	              0x53	                                push rbx	       634	trailer.c	FUNCTION_33
0x4000055	     0xf844d010000	                            je 0x40001a8	       639	trailer.c	FUNCTION_33	IF_1
0x400005b	          0x4963d8	                         movsxd rbx, r8d	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x400005e	          0x4989f6	                            mov r14, rsi	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000061	          0x4889ce	                            mov rsi, rcx	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000064	          0x4889da	                            mov rdx, rbx	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000067	      0x488d5c1d01	                lea rbx, [rbp + rbx + 1]	       642	trailer.c	FUNCTION_33	IF_1	CALL_3
0x400006c	      0xe800000000	                          call 0x4000071	       640	trailer.c	FUNCTION_33	IF_1	CALL_1
0x4000071	          0x4c89e7	                            mov rdi, r12	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x4000074	      0xe800000000	                          call 0x4000079	       641	trailer.c	FUNCTION_33	IF_1	CALL_2
0x4000079	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_57	CALL_2
0x400007c	      0xe800000000	                          call 0x4000081	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000081	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000084	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000087	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_57	CALL_2
0x400008a	      0xe800000000	                          call 0x400008f	       279	strbuf.h	FUNCTION_57	CALL_2
0x400008f	          0x4c89f7	                            mov rdi, r14	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x4000092	      0xe800000000	                          call 0x4000097	       643	trailer.c	FUNCTION_33	IF_1	CALL_4
0x4000097	      0x498b6c2408	                mov rbp, qword [r12 + 8]	       650	trailer.c	FUNCTION_33	CALL_7
0x400009c	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       650	trailer.c	FUNCTION_33	CALL_7
0x40000a1	          0x4885ed	                           test rbp, rbp	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000a4	     0xf842d010000	                            je 0x40001d7	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000aa	       0xfb6542eff	         movzx edx, byte [rsi + rbp - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000af	        0x488d45ff	                      lea rax, [rbp - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000b3	    0xf68200000000	                      test byte [rdx], 6	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000ba	            0x7421	                            je 0x40000dd	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000bc	      0xe91d010000	                           jmp 0x40001de	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000c1	     0xf1f80000000	                         nop dword [rax]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000c8	       0xfb65406ff	         movzx edx, byte [rsi + rax - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000cd	        0x488d48ff	                      lea rcx, [rax - 1]	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000d1	    0xf68200000000	                      test byte [rdx], 6	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000d8	            0x7508	                           jne 0x40000e2	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000da	          0x4889c8	                            mov rax, rcx	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000dd	          0x4885c0	                           test rax, rax	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000e0	            0x75e6	                           jne 0x40000c8	        74	trailer.c	FUNCTION_2	WHILE_1
0x40000e2	          0x4d85ed	                           test r13, r13	       651	trailer.c	FUNCTION_33	IF_2
0x40000e5	            0x7408	                            je 0x40000ef	       651	trailer.c	FUNCTION_33	IF_2
0x40000e7	    0x49c745000000	                      mov qword [r13], 0	       652	trailer.c	FUNCTION_33	IF_2
0x40000ef	    0x488b1d000000	            mov rbx, qword [0x040000f6] 	       653	trailer.c	FUNCTION_33
0x40000f6	    0x4881fb000000	                              cmp rbx, 0	       653	trailer.c	FUNCTION_33
0x40000fd	     0xf8495000000	                            je 0x4000198	       653	trailer.c	FUNCTION_33
0x4000103	      0x4d8b742410	            mov r14, qword [r12 + 0x10] 	       653	trailer.c	FUNCTION_33
0x4000108	          0x4863e8	                         movsxd rbp, eax	       653	trailer.c	FUNCTION_33
0x400010b	            0xeb27	                           jmp 0x4000134	       653	trailer.c	FUNCTION_33
0x400010d	           0xf1f00	                         nop dword [rax]	       653	trailer.c	FUNCTION_33
0x4000110	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       592	trailer.c	FUNCTION_31	CALL_2
0x4000114	          0x4885f6	                           test rsi, rsi	       592	trailer.c	FUNCTION_31	CALL_2
0x4000117	            0x740f	                            je 0x4000128	       592	trailer.c	FUNCTION_31	CALL_2
0x4000119	          0x4889ea	                            mov rdx, rbp	       592	trailer.c	FUNCTION_31	CALL_2
0x400011c	          0x4c89f7	                            mov rdi, r14	       592	trailer.c	FUNCTION_31	CALL_2
0x400011f	      0xe800000000	                          call 0x4000124	       592	trailer.c	FUNCTION_31	CALL_2
0x4000124	            0x85c0	                           test eax, eax	       592	trailer.c	FUNCTION_31	CALL_2
0x4000126	            0x741f	                            je 0x4000147	       592	trailer.c	FUNCTION_31	CALL_2
0x4000128	          0x488b1b	                    mov rbx, qword [rbx]	       653	trailer.c	FUNCTION_33
0x400012b	    0x4881fb000000	                              cmp rbx, 0	       653	trailer.c	FUNCTION_33
0x4000132	            0x7464	                            je 0x4000198	       653	trailer.c	FUNCTION_33
0x4000134	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000138	          0x4889ea	                            mov rdx, rbp	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x400013b	          0x4c89f7	                            mov rdi, r14	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x400013e	      0xe800000000	                          call 0x4000143	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000143	            0x85c0	                           test eax, eax	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000145	            0x75c9	                           jne 0x4000110	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x4000147	            0x31f6	                            xor esi, esi	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x4000149	          0x4c89e7	                            mov rdi, r12	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x400014c	      0xe800000000	                          call 0x4000151	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x4000151	          0x4d85ed	                           test r13, r13	       657	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000154	          0x4889c5	                            mov rbp, rax	       656	trailer.c	FUNCTION_33	IF_3	CALL_9
0x4000157	            0x7408	                            je 0x4000161	       657	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000159	        0x488d4320	                   lea rax, [rbx + 0x20]	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x400015d	        0x49894500	                    mov qword [r13], rax	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000161	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000165	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	       658	trailer.c	FUNCTION_33	IF_3	IF_4
0x4000169	          0x4885db	                           test rbx, rbx	       581	trailer.c	FUNCTION_30	IF_1
0x400016c	            0x745d	                            je 0x40001cb	       581	trailer.c	FUNCTION_30	IF_1
0x400016e	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000171	      0xe800000000	                          call 0x4000176	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000176	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000179	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_57	CALL_2
0x400017c	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_57	CALL_2
0x400017f	      0xe800000000	                          call 0x4000184	       279	strbuf.h	FUNCTION_57	CALL_2
0x4000184	              0x5b	                                 pop rbx	       664	trailer.c	FUNCTION_33
0x4000185	          0x4889ef	                            mov rdi, rbp	       660	trailer.c	FUNCTION_33	IF_3	CALL_12
0x4000188	              0x5d	                                 pop rbp	       664	trailer.c	FUNCTION_33
0x4000189	            0x415c	                                 pop r12	       664	trailer.c	FUNCTION_33
0x400018b	            0x415d	                                 pop r13	       664	trailer.c	FUNCTION_33
0x400018d	            0x415e	                                 pop r14	       664	trailer.c	FUNCTION_33
0x400018f	      0xe900000000	                           jmp 0x4000194	       660	trailer.c	FUNCTION_33	IF_3	CALL_12
0x4000194	         0xf1f4000	                         nop dword [rax]	       660	trailer.c	FUNCTION_33	IF_3	CALL_12
0x4000198	              0x5b	                                 pop rbx	       664	trailer.c	FUNCTION_33
0x4000199	              0x5d	                                 pop rbp	       664	trailer.c	FUNCTION_33
0x400019a	            0x415c	                                 pop r12	       664	trailer.c	FUNCTION_33
0x400019c	            0x415d	                                 pop r13	       664	trailer.c	FUNCTION_33
0x400019e	            0x415e	                                 pop r14	       664	trailer.c	FUNCTION_33
0x40001a0	              0xc3	                                     ret	       664	trailer.c	FUNCTION_33
0x40001a1	     0xf1f80000000	                         nop dword [rax]	       664	trailer.c	FUNCTION_33
0x40001a8	          0x4889cf	                            mov rdi, rcx	       279	strbuf.h	FUNCTION_57	CALL_2
0x40001ab	      0xe800000000	                          call 0x40001b0	       279	strbuf.h	FUNCTION_57	CALL_2
0x40001b0	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_57	CALL_2
0x40001b3	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_57	CALL_2
0x40001b6	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_57	CALL_2
0x40001b9	      0xe800000000	                          call 0x40001be	       279	strbuf.h	FUNCTION_57	CALL_2
0x40001be	          0x4c89e7	                            mov rdi, r12	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x40001c1	      0xe800000000	                          call 0x40001c6	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x40001c6	      0xe9ccfeffff	                           jmp 0x4000097	       646	trailer.c	FUNCTION_33	ELSE_1	CALL_6
0x40001cb	          0x4885ed	                           test rbp, rbp	       583	trailer.c	FUNCTION_30	IF_2
0x40001ce	        0x480f45c5	                         cmovne rax, rbp	       583	trailer.c	FUNCTION_30	IF_2
0x40001d2	          0x4889c3	                            mov rbx, rax	       583	trailer.c	FUNCTION_30	IF_2
0x40001d5	            0xeb97	                           jmp 0x400016e	       583	trailer.c	FUNCTION_30	IF_2
0x40001d7	            0x31c0	                            xor eax, eax	        74	trailer.c	FUNCTION_2	WHILE_1
0x40001d9	      0xe904ffffff	                           jmp 0x40000e2	        74	trailer.c	FUNCTION_2	WHILE_1
0x40001de	            0x89e8	                            mov eax, ebp	        74	trailer.c	FUNCTION_2	WHILE_1
0x40001e0	      0xe9fdfeffff	                           jmp 0x40000e2	        74	trailer.c	FUNCTION_2	WHILE_1
trailer_info_get	functions,0:WHILE,0:FOR,1:ELSE,0:SWITCH,0:IF,1:DO,0:CALL,15	554
0x4000f20	            0x4157	                                push r15	      1070	trailer.c	FUNCTION_49
0x4000f22	            0x4156	                                push r14	      1070	trailer.c	FUNCTION_49
0x4000f24	            0x4155	                                push r13	      1070	trailer.c	FUNCTION_49
0x4000f26	            0x4154	                                push r12	      1070	trailer.c	FUNCTION_49
0x4000f28	              0x55	                                push rbp	      1070	trailer.c	FUNCTION_49
0x4000f29	              0x53	                                push rbx	      1070	trailer.c	FUNCTION_49
0x4000f2a	        0x4883ec78	                           sub rsp, 0x78	      1070	trailer.c	FUNCTION_49
0x4000f2e	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1070	trailer.c	FUNCTION_49
0x4000f33	    0x8b3500000000	            mov esi, dword [0x04000f39] 	       567	trailer.c	FUNCTION_29	IF_1
0x4000f39	    0x64488b042528	                mov rax, qword fs:[0x28]	      1070	trailer.c	FUNCTION_49
0x4000f42	      0x4889442468	             mov qword [rsp + 0x68], rax	      1070	trailer.c	FUNCTION_49
0x4000f47	            0x31c0	                            xor eax, eax	      1070	trailer.c	FUNCTION_49
0x4000f49	      0x48897c2440	             mov qword [rsp + 0x40], rdi	      1070	trailer.c	FUNCTION_49
0x4000f4e	            0x85f6	                           test esi, esi	       567	trailer.c	FUNCTION_29	IF_1
0x4000f50	     0xf848c060000	                            je 0x40015e2	       567	trailer.c	FUNCTION_29	IF_1
0x4000f56	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f5b	          0x803800	                       cmp byte [rax], 0	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f5e	          0x4889c3	                            mov rbx, rax	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f61	            0x752b	                           jne 0x4000f8e	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f63	      0xe9fa070000	                           jmp 0x4001762	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f68	     0xf1f84000000	                   nop dword [rax + rax]	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f70	          0x4889df	                            mov rdi, rbx	       759	trailer.c	FUNCTION_38
0x4000f73	      0xbe0a000000	                            mov esi, 0xa	       759	trailer.c	FUNCTION_38
0x4000f78	      0xe800000000	                          call 0x4000f7d	       759	trailer.c	FUNCTION_38
0x4000f7d	            0x31d2	                            xor edx, edx	       760	trailer.c	FUNCTION_38
0x4000f7f	          0x803800	                       cmp byte [rax], 0	       760	trailer.c	FUNCTION_38
0x4000f82	           0xf95c2	                                setne dl	       760	trailer.c	FUNCTION_38
0x4000f85	        0x488d1c10	                    lea rbx, [rax + rdx]	       760	trailer.c	FUNCTION_38
0x4000f89	          0x803b00	                       cmp byte [rbx], 0	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f8c	            0x7411	                            je 0x4000f9f	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4000f8e	      0xbe00000000	                              mov esi, 0	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f93	          0x4889df	                            mov rdi, rbx	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f96	      0xe800000000	                          call 0x4000f9b	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f9b	            0x85c0	                           test eax, eax	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f9d	            0x74d1	                            je 0x4000f70	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000f9f	      0x482b5c2418	             sub rbx, qword [rsp + 0x18]	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000fa4	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000fa9	          0x4863f3	                         movsxd rsi, ebx	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000fac	            0x89f3	                            mov ebx, esi	       796	trailer.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4000fae	          0x4c89f7	                            mov rdi, r14	       904	trailer.c	FUNCTION_42	CALL_1
0x4000fb1	      0xe800000000	                          call 0x4000fb6	       904	trailer.c	FUNCTION_42	CALL_1
0x4000fb6	            0x29c3	                            sub ebx, eax	       904	trailer.c	FUNCTION_42	CALL_1
0x4000fb8	          0x4863c3	                         movsxd rax, ebx	      1081	trailer.c	FUNCTION_49	CALL_4
0x4000fbb	        0x895c244c	             mov dword [rsp + 0x4c], ebx	       904	trailer.c	FUNCTION_42	CALL_1
0x4000fbf	          0x4889c7	                            mov rdi, rax	      1081	trailer.c	FUNCTION_49	CALL_4
0x4000fc2	      0x4889442430	             mov qword [rsp + 0x30], rax	      1081	trailer.c	FUNCTION_49	CALL_4
0x4000fc7	          0x4c89f0	                            mov rax, r14	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fca	          0x4801f8	                            add rax, rdi	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fcd	          0x4939c6	                            cmp r14, rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fd0	      0x4889442438	             mov qword [rsp + 0x38], rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fd5	     0xf830c070000	                           jae 0x40016e7	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fdb	     0xfb61d000000	           movzx ebx, byte [0x04000fe2] 	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fe2	          0x4c89f7	                            mov rdi, r14	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fe5	          0x4889c5	                            mov rbp, rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000fe8	     0xf1f84000000	                   nop dword [rax + rax]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4000ff0	           0xfb617	                   movzx edx, byte [rdi]	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4000ff3	            0x38da	                              cmp dl, bl	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4000ff5	            0x743e	                            je 0x4001035	       823	trailer.c	FUNCTION_41	FOR_1	IF_1
0x4000ff7	            0x84d2	                             test dl, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000ff9	            0x7431	                            je 0x400102c	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000ffb	          0x80fa0a	                             cmp dl, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x4000ffe	            0x742c	                            je 0x400102c	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001000	           0xfb6c2	                           movzx eax, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001003	    0xf68000000000	                      test byte [rax], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x400100a	            0x7420	                            je 0x400102c	       106	trailer.c	FUNCTION_6	WHILE_1
0x400100c	          0x4889f9	                            mov rcx, rdi	       106	trailer.c	FUNCTION_6	WHILE_1
0x400100f	              0x90	                                     nop	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001010	        0x4883c101	                              add rcx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x4001014	           0xfb611	                   movzx edx, byte [rcx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001017	            0x84d2	                             test dl, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001019	            0x7411	                            je 0x400102c	       106	trailer.c	FUNCTION_6	WHILE_1
0x400101b	          0x80fa0a	                             cmp dl, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x400101e	            0x740c	                            je 0x400102c	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001020	           0xfb6f2	                           movzx esi, dl	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001023	    0xf68600000000	                      test byte [rsi], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x400102a	            0x75e4	                           jne 0x4001010	       106	trailer.c	FUNCTION_6	WHILE_1
0x400102c	            0x84d2	                             test dl, dl	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x400102e	            0x7420	                            je 0x4001050	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x4001030	          0x80fa0a	                             cmp dl, 0xa	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x4001033	            0x741b	                            je 0x4001050	       825	trailer.c	FUNCTION_41	FOR_1	IF_2	CALL_2
0x4001035	      0xbe0a000000	                            mov esi, 0xa	       759	trailer.c	FUNCTION_38
0x400103a	      0xe800000000	                          call 0x400103f	       759	trailer.c	FUNCTION_38
0x400103f	            0x31d2	                            xor edx, edx	       760	trailer.c	FUNCTION_38
0x4001041	          0x803800	                       cmp byte [rax], 0	       760	trailer.c	FUNCTION_38
0x4001044	           0xf95c2	                                setne dl	       760	trailer.c	FUNCTION_38
0x4001047	        0x488d3c10	                    lea rdi, [rax + rdx]	       760	trailer.c	FUNCTION_38
0x400104b	          0x4839ef	                            cmp rdi, rbp	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x400104e	            0x72a0	                            jb 0x4000ff0	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001050	            0x89f8	                            mov eax, edi	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001052	        0x2b442418	             sub eax, dword [rsp + 0x18]	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001056	    0x48837c243000	               cmp qword [rsp + 0x30], 0	       769	trailer.c	FUNCTION_39	IF_1
0x400105c	        0x89442408	                mov dword [rsp + 8], eax	       769	trailer.c	FUNCTION_39	IF_1
0x4001060	      0xb8ffffffff	                     mov eax, 0xffffffff	       770	trailer.c	FUNCTION_39	IF_1
0x4001065	            0x7440	                            je 0x40010a7	       769	trailer.c	FUNCTION_39	IF_1
0x4001067	            0x31c0	                            xor eax, eax	       772	trailer.c	FUNCTION_39	IF_2
0x4001069	    0x48837c243001	               cmp qword [rsp + 0x30], 1	       771	trailer.c	FUNCTION_39	IF_2
0x400106f	            0x7436	                            je 0x40010a7	       771	trailer.c	FUNCTION_39	IF_2
0x4001071	        0x8b54244c	            mov edx, dword [rsp + 0x4c] 	       780	trailer.c	FUNCTION_39	FOR_1
0x4001075	          0x83ea02	                              sub edx, 2	       780	trailer.c	FUNCTION_39	FOR_1
0x4001078	            0x782d	                            js 0x40010a7	       780	trailer.c	FUNCTION_39	FOR_1
0x400107a	          0x4863c2	                         movsxd rax, edx	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400107d	      0x4803442418	             add rax, qword [rsp + 0x18]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001082	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001085	            0x7516	                           jne 0x400109d	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001087	      0xe93a060000	                           jmp 0x40016c6	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400108c	         0xf1f4000	                         nop dword [rax]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001090	        0x4883e801	                              sub rax, 1	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001094	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001097	     0xf8429060000	                            je 0x40016c6	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400109d	          0x83ea01	                              sub edx, 1	       780	trailer.c	FUNCTION_39	FOR_1
0x40010a0	          0x83faff	             cmp edx, 0xffffffffffffffff	       780	trailer.c	FUNCTION_39	FOR_1
0x40010a3	            0x75eb	                           jne 0x4001090	       780	trailer.c	FUNCTION_39	FOR_1
0x40010a5	            0x31c0	                            xor eax, eax	       772	trailer.c	FUNCTION_39	IF_2
0x40010a7	        0x3b442408	                cmp eax, dword [rsp + 8]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010ab	     0xf8c49010000	                            jl 0x40011fa	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010b1	    0xc74424280000	               mov dword [rsp + 0x28], 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010b9	    0xc74424100000	               mov dword [rsp + 0x10], 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010c1	      0xbe01000000	                              mov esi, 1	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010c6	    0xc70424000000	                      mov dword [rsp], 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010cd	    0xc74424200000	               mov dword [rsp + 0x20], 0	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40010d5	          0x4863d8	                         movsxd rbx, eax	       839	trailer.c	FUNCTION_41	FOR_2
0x40010d8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       839	trailer.c	FUNCTION_41	FOR_2
0x40010dd	        0x488d2c18	                    lea rbp, [rax + rbx]	       839	trailer.c	FUNCTION_41	FOR_2
0x40010e1	      0x440fb67d00	                  movzx r15d, byte [rbp]	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x40010e6	    0x443a3d000000	            cmp r15b, byte [0x040010ed] 	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x40010ed	     0xf841a040000	                            je 0x400150d	       843	trailer.c	FUNCTION_41	FOR_2	IF_3
0x40010f3	          0x4584ff	                         test r15b, r15b	       106	trailer.c	FUNCTION_6	WHILE_1
0x40010f6	     0xf842b050000	                            je 0x4001627	       106	trailer.c	FUNCTION_6	WHILE_1
0x40010fc	        0x4180ff0a	                           cmp r15b, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001100	     0xf8421050000	                            je 0x4001627	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001106	        0x410fb6c7	                         movzx eax, r15b	       106	trailer.c	FUNCTION_6	WHILE_1
0x400110a	          0x4889ea	                            mov rdx, rbp	       106	trailer.c	FUNCTION_6	WHILE_1
0x400110d	    0xf68000000000	                      test byte [rax], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001114	     0xf840d050000	                            je 0x4001627	       106	trailer.c	FUNCTION_6	WHILE_1
0x400111a	    0x660f1f440000	                    nop word [rax + rax]	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001120	        0x4883c201	                              add rdx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x4001124	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001127	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001129	            0x7410	                            je 0x400113b	       106	trailer.c	FUNCTION_6	WHILE_1
0x400112b	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x400112d	            0x740c	                            je 0x400113b	       106	trailer.c	FUNCTION_6	WHILE_1
0x400112f	           0xfb6c8	                           movzx ecx, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001132	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x4001139	            0x75e5	                           jne 0x4001120	       106	trailer.c	FUNCTION_6	WHILE_1
0x400113b	            0x84c0	                             test al, al	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x400113d	     0xf8458030000	                            je 0x400149b	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x4001143	            0x3c0a	                             cmp al, 0xa	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x4001145	     0xf8450030000	                            je 0x400149b	       848	trailer.c	FUNCTION_41	FOR_2	IF_4	CALL_5
0x400114b	    0x488b35000000	            mov rsi, qword [0x04001152] 	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001152	    0x41bc00000000	                             mov r12d, 0	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001158	          0x4885f6	                           test rsi, rsi	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400115b	            0x751c	                           jne 0x4001179	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400115d	      0xe9c3030000	                           jmp 0x4001525	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001162	    0x660f1f440000	                    nop word [rax + rax]	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001168	        0x4983c408	                              add r12, 8	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x400116c	        0x498b3424	                    mov rsi, qword [r12]	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001170	          0x4885f6	                           test rsi, rsi	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001173	     0xf84a7030000	                            je 0x4001520	       861	trailer.c	FUNCTION_41	FOR_2	FOR_3
0x4001179	          0x4889ef	                            mov rdi, rbp	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x400117c	      0xe800000000	                          call 0x4001181	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x4001181	            0x85c0	                           test eax, eax	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x4001183	            0x74e3	                            je 0x4001168	       862	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8	CALL_8
0x4001185	      0x8344242801	               add dword [rsp + 0x28], 1	       863	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x400118a	    0xc70424000000	                      mov dword [rsp], 0	       864	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x4001191	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x4001193	    0xc74424100100	               mov dword [rsp + 0x10], 1	       865	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x400119b	       0xf1f440000	                   nop dword [rax + rax]	       865	trailer.c	FUNCTION_41	FOR_2	FOR_3	IF_8
0x40011a0	          0x4885db	                           test rbx, rbx	       769	trailer.c	FUNCTION_39	IF_1
0x40011a3	      0xb8ffffffff	                     mov eax, 0xffffffff	       770	trailer.c	FUNCTION_39	IF_1
0x40011a8	            0x7446	                            je 0x40011f0	       769	trailer.c	FUNCTION_39	IF_1
0x40011aa	            0x31c0	                            xor eax, eax	       772	trailer.c	FUNCTION_39	IF_2
0x40011ac	        0x4883fb01	                              cmp rbx, 1	       771	trailer.c	FUNCTION_39	IF_2
0x40011b0	            0x743e	                            je 0x40011f0	       771	trailer.c	FUNCTION_39	IF_2
0x40011b2	          0x83eb02	                              sub ebx, 2	       780	trailer.c	FUNCTION_39	FOR_1
0x40011b5	            0x7839	                            js 0x40011f0	       780	trailer.c	FUNCTION_39	FOR_1
0x40011b7	          0x4863c3	                         movsxd rax, ebx	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011ba	      0x4803442418	             add rax, qword [rsp + 0x18]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011bf	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011c2	            0x7519	                           jne 0x40011dd	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011c4	      0xe9fc030000	                           jmp 0x40015c5	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011c9	     0xf1f80000000	                         nop dword [rax]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011d0	        0x4883e801	                              sub rax, 1	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011d4	          0x80380a	                     cmp byte [rax], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011d7	     0xf84e8030000	                            je 0x40015c5	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40011dd	          0x83eb01	                              sub ebx, 1	       780	trailer.c	FUNCTION_39	FOR_1
0x40011e0	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       780	trailer.c	FUNCTION_39	FOR_1
0x40011e3	            0x75eb	                           jne 0x40011d0	       780	trailer.c	FUNCTION_39	FOR_1
0x40011e5	            0x31c0	                            xor eax, eax	       772	trailer.c	FUNCTION_39	IF_2
0x40011e7	    0x660f1f840000	                    nop word [rax + rax]	       772	trailer.c	FUNCTION_39	IF_2
0x40011f0	        0x3b442408	                cmp eax, dword [rsp + 8]	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40011f4	     0xf8ddbfeffff	                           jge 0x40010d5	       836	trailer.c	FUNCTION_41	FOR_2	CALL_3
0x40011fa	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x40011ff	            0x31f6	                            xor esi, esi	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x4001201	      0x4889442428	             mov qword [rsp + 0x28], rax	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x4001206	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       822	trailer.c	FUNCTION_41	FOR_1	CALL_1
0x400120b	            0x31c9	                            xor ecx, ecx	      1083	trailer.c	FUNCTION_49	CALL_5
0x400120d	      0xba0a000000	                            mov edx, 0xa	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001212	      0xe800000000	                          call 0x4001217	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001217	          0x488b38	                    mov rdi, qword [rax]	      1087	trailer.c	FUNCTION_49	FOR_1
0x400121a	      0x4889442420	             mov qword [rsp + 0x20], rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x400121f	          0x4885ff	                           test rdi, rdi	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001222	     0xf8428050000	                            je 0x4001750	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001228	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      1087	trailer.c	FUNCTION_49	FOR_1
0x400122d	          0x4531ed	                          xor r13d, r13d	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001230	    0x48c744240800	                  mov qword [rsp + 8], 0	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001239	            0x31db	                            xor ebx, ebx	      1087	trailer.c	FUNCTION_49	FOR_1
0x400123b	    0x48c704240000	                      mov qword [rsp], 0	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001243	       0xf1f440000	                   nop dword [rax + rax]	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001248	          0x4d85ed	                           test r13, r13	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x400124b	            0x7414	                            je 0x4001261	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x400124d	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001251	           0xfb600	                   movzx eax, byte [rax]	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001254	    0xf68000000000	                      test byte [rax], 1	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x400125b	     0xf85bf010000	                           jne 0x4001420	      1088	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001261	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001266	        0x488d4301	                      lea rax, [rbx + 1]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400126a	      0x4889442410	             mov qword [rsp + 0x10], rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400126f	          0x4839c8	                            cmp rax, rcx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001272	            0x763f	                           jbe 0x40012b3	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001274	      0x4c8d7c4930	          lea r15, [rcx + rcx*2 + 0x30] 	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001279	          0x49d1ef	                              shr r15, 1	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400127c	          0x4c39f8	                            cmp rax, r15	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400127f	        0x4c0f43f8	                         cmovae r15, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001283	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_82	IF_1
0x400128d	          0x4939c7	                            cmp r15, rax	       795	git-compat-util.h	FUNCTION_82	IF_1
0x4001290	      0x4c897c2408	                mov qword [rsp + 8], r15	       795	git-compat-util.h	FUNCTION_82	IF_1
0x4001295	     0xf87e5040000	                            ja 0x4001780	       795	git-compat-util.h	FUNCTION_82	IF_1
0x400129b	        0x488b3c24	                    mov rdi, qword [rsp]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400129f	    0x4a8d34fd0000	                        lea rsi, [r15*8]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012a7	      0xe800000000	                          call 0x40012ac	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012ac	          0x498b3e	                    mov rdi, qword [r14]	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012af	        0x48890424	                    mov qword [rsp], rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x40012b3	        0x488b0424	                    mov rax, qword [rsp]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012b7	            0x31f6	                            xor esi, esi	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012b9	        0x4c8d2cd8	                  lea r13, [rax + rbx*8]	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012bd	      0xe800000000	                          call 0x40012c2	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012c2	        0x49894500	                    mov qword [r13], rax	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012c6	           0xfbe30	                   movsx esi, byte [rax]	       610	trailer.c	FUNCTION_32	FOR_1
0x40012c9	          0x4989c4	                            mov r12, rax	      1096	trailer.c	FUNCTION_49	FOR_1	CALL_12
0x40012cc	    0x488b2d000000	            mov rbp, qword [0x040012d3] 	      1097	trailer.c	FUNCTION_49	FOR_1	CALL_13
0x40012d3	          0x4084f6	                           test sil, sil	       610	trailer.c	FUNCTION_32	FOR_1
0x40012d6	            0x7452	                            je 0x400132a	       610	trailer.c	FUNCTION_32	FOR_1
0x40012d8	          0x4989c7	                            mov r15, rax	       610	trailer.c	FUNCTION_32	FOR_1
0x40012db	            0x31db	                            xor ebx, ebx	       610	trailer.c	FUNCTION_32	FOR_1
0x40012dd	            0xeb13	                           jmp 0x40012f2	       610	trailer.c	FUNCTION_32	FOR_1
0x40012df	              0x90	                                     nop	       610	trailer.c	FUNCTION_32	FOR_1
0x40012e0	      0xbb01000000	                              mov ebx, 1	       616	trailer.c	FUNCTION_32	FOR_1	IF_3
0x40012e5	        0x4983c701	                              add r15, 1	       610	trailer.c	FUNCTION_32	FOR_1
0x40012e9	        0x410fbe37	                   movsx esi, byte [r15]	       610	trailer.c	FUNCTION_32	FOR_1
0x40012ed	          0x4084f6	                           test sil, sil	       610	trailer.c	FUNCTION_32	FOR_1
0x40012f0	            0x7438	                            je 0x400132a	       610	trailer.c	FUNCTION_32	FOR_1
0x40012f2	          0x4889ef	                            mov rdi, rbp	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40012f5	      0xe800000000	                          call 0x40012fa	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40012fa	          0x4885c0	                           test rax, rax	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40012fd	     0xf857d010000	                           jne 0x4001480	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001303	            0x85db	                           test ebx, ebx	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001305	            0x7512	                           jne 0x4001319	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001307	        0x410fb617	                   movzx edx, byte [r15]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400130b	    0xf68200000000	                      test byte [rdx], 6	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001312	            0x75d1	                           jne 0x40012e5	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001314	          0x80fa2d	                            cmp dl, 0x2d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001317	            0x74cc	                            je 0x40012e5	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001319	          0x4d39fc	                            cmp r12, r15	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400131c	            0x740c	                            je 0x400132a	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400131e	        0x410fb607	                   movzx eax, byte [r15]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001322	            0x3c20	                            cmp al, 0x20	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001324	            0x74ba	                            je 0x40012e0	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001326	            0x3c09	                               cmp al, 9	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001328	            0x74b6	                            je 0x40012e0	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400132a	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400132f	          0x4531ed	                          xor r13d, r13d	      1099	trailer.c	FUNCTION_49	FOR_1
0x4001332	        0x4983c608	                              add r14, 8	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001336	          0x498b3e	                    mov rdi, qword [r14]	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001339	          0x4885ff	                           test rdi, rdi	      1087	trailer.c	FUNCTION_49	FOR_1
0x400133c	     0xf8506ffffff	                           jne 0x4001248	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001342	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001347	      0xe800000000	                          call 0x400134c	      1102	trailer.c	FUNCTION_49	CALL_14
0x400134c	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       769	trailer.c	FUNCTION_39	IF_1
0x4001351	            0x31c0	                            xor eax, eax	       911	trailer.c	FUNCTION_43	IF_1
0x4001353	          0x4885c9	                           test rcx, rcx	       769	trailer.c	FUNCTION_39	IF_1
0x4001356	            0x747a	                            je 0x40013d2	       769	trailer.c	FUNCTION_39	IF_1
0x4001358	            0x31d2	                            xor edx, edx	       771	trailer.c	FUNCTION_39	IF_2
0x400135a	        0x4883f901	                              cmp rcx, 1	       771	trailer.c	FUNCTION_39	IF_2
0x400135e	            0x7437	                            je 0x4001397	       771	trailer.c	FUNCTION_39	IF_2
0x4001360	            0x89c8	                            mov eax, ecx	       780	trailer.c	FUNCTION_39	FOR_1
0x4001362	          0x83e802	                              sub eax, 2	       780	trailer.c	FUNCTION_39	FOR_1
0x4001365	            0x7830	                            js 0x4001397	       780	trailer.c	FUNCTION_39	FOR_1
0x4001367	          0x4863d0	                         movsxd rdx, eax	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400136a	      0x4803542418	             add rdx, qword [rsp + 0x18]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400136f	          0x803a0a	                     cmp byte [rdx], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001372	            0x7519	                           jne 0x400138d	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001374	      0xe955030000	                           jmp 0x40016ce	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001379	     0xf1f80000000	                         nop dword [rax]	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001380	        0x4883ea01	                              sub rdx, 1	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001384	          0x803a0a	                     cmp byte [rdx], 0xa	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x4001387	     0xf8441030000	                            je 0x40016ce	       781	trailer.c	FUNCTION_39	FOR_1	IF_3
0x400138d	          0x83e801	                              sub eax, 1	       780	trailer.c	FUNCTION_39	FOR_1
0x4001390	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       780	trailer.c	FUNCTION_39	FOR_1
0x4001393	            0x75eb	                           jne 0x4001380	       780	trailer.c	FUNCTION_39	FOR_1
0x4001395	            0x31d2	                            xor edx, edx	       780	trailer.c	FUNCTION_39	FOR_1
0x4001397	      0x4803542418	             add rdx, qword [rsp + 0x18]	       912	trailer.c	FUNCTION_43	CALL_2
0x400139c	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x400139f	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013a1	            0x7510	                           jne 0x40013b3	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013a3	            0xeb1e	                           jmp 0x40013c3	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013a5	           0xf1f00	                         nop dword [rax]	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013a8	        0x4883c201	                              add rdx, 1	       107	trailer.c	FUNCTION_6	WHILE_1
0x40013ac	           0xfb602	                   movzx eax, byte [rdx]	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013af	            0x84c0	                             test al, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b1	            0x7410	                            je 0x40013c3	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b3	            0x3c0a	                             cmp al, 0xa	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b5	            0x740c	                            je 0x40013c3	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013b7	           0xfb6c8	                           movzx ecx, al	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013ba	    0xf68100000000	                      test byte [rcx], 1	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013c1	            0x75e5	                           jne 0x40013a8	       106	trailer.c	FUNCTION_6	WHILE_1
0x40013c3	            0x84c0	                             test al, al	       108	trailer.c	FUNCTION_6
0x40013c5	           0xf94c2	                                 sete dl	       108	trailer.c	FUNCTION_6
0x40013c8	            0x3c0a	                             cmp al, 0xa	       108	trailer.c	FUNCTION_6
0x40013ca	           0xf94c0	                                 sete al	       108	trailer.c	FUNCTION_6
0x40013cd	             0x9d0	                             or eax, edx	       108	trailer.c	FUNCTION_6
0x40013cf	           0xfb6c0	                           movzx eax, al	       108	trailer.c	FUNCTION_6
0x40013d2	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      1104	trailer.c	FUNCTION_49	CALL_15
0x40013d7	            0x8901	                    mov dword [rcx], eax	      1104	trailer.c	FUNCTION_49	CALL_15
0x40013d9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1106	trailer.c	FUNCTION_49
0x40013de	        0x48895920	             mov qword [rcx + 0x20], rbx	      1109	trailer.c	FUNCTION_49
0x40013e2	        0x48894108	                mov qword [rcx + 8], rax	      1106	trailer.c	FUNCTION_49
0x40013e6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1107	trailer.c	FUNCTION_49
0x40013eb	        0x48894110	             mov qword [rcx + 0x10], rax	      1107	trailer.c	FUNCTION_49
0x40013ef	        0x488b0424	                    mov rax, qword [rsp]	      1108	trailer.c	FUNCTION_49
0x40013f3	        0x48894118	             mov qword [rcx + 0x18], rax	      1108	trailer.c	FUNCTION_49
0x40013f7	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1110	trailer.c	FUNCTION_49
0x40013fc	    0x644833042528	                xor rax, qword fs:[0x28]	      1110	trailer.c	FUNCTION_49
0x4001405	     0xf8570030000	                           jne 0x400177b	      1110	trailer.c	FUNCTION_49
0x400140b	        0x4883c478	                           add rsp, 0x78	      1110	trailer.c	FUNCTION_49
0x400140f	              0x5b	                                 pop rbx	      1110	trailer.c	FUNCTION_49
0x4001410	              0x5d	                                 pop rbp	      1110	trailer.c	FUNCTION_49
0x4001411	            0x415c	                                 pop r12	      1110	trailer.c	FUNCTION_49
0x4001413	            0x415d	                                 pop r13	      1110	trailer.c	FUNCTION_49
0x4001415	            0x415e	                                 pop r14	      1110	trailer.c	FUNCTION_49
0x4001417	            0x415f	                                 pop r15	      1110	trailer.c	FUNCTION_49
0x4001419	              0xc3	                                     ret	      1110	trailer.c	FUNCTION_49
0x400141a	    0x660f1f440000	                    nop word [rax + rax]	      1110	trailer.c	FUNCTION_49
0x4001420	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001429	        0x498b6d00	                    mov rbp, qword [r13]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400142d	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x4001436	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1089	trailer.c	FUNCTION_49	FOR_1	IF_1
0x400143f	          0x4889ef	                            mov rdi, rbp	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001442	      0xe800000000	                          call 0x4001447	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001447	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400144c	          0x4889c1	                            mov rcx, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400144f	          0x4889c2	                            mov rdx, rax	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001452	          0x4889ee	                            mov rsi, rbp	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x4001455	      0xe800000000	                          call 0x400145a	      1090	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_8
0x400145a	          0x498b36	                    mov rsi, qword [r14]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x400145d	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x4001462	      0xe800000000	                          call 0x4001467	      1091	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_9
0x4001467	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x400146c	            0x31f6	                            xor esi, esi	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x400146e	      0xe800000000	                          call 0x4001473	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x4001473	        0x49894500	                    mov qword [r13], rax	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x4001477	      0xe9b6feffff	                           jmp 0x4001332	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x400147c	         0xf1f4000	                         nop dword [rax]	      1092	trailer.c	FUNCTION_49	FOR_1	IF_1	CALL_10
0x4001480	          0x4c89fa	                            mov rdx, r15	      1099	trailer.c	FUNCTION_49	FOR_1
0x4001483	      0xb800000000	                              mov eax, 0	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001488	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400148d	          0x4c29e2	                            sub rdx, r12	      1099	trailer.c	FUNCTION_49	FOR_1
0x4001490	            0x85d2	                           test edx, edx	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001492	        0x4c0f4ee8	                         cmovle r13, rax	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x4001496	      0xe997feffff	                           jmp 0x4001332	      1095	trailer.c	FUNCTION_49	FOR_1	CALL_11
0x400149b	            0x85f6	                           test esi, esi	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x400149d	     0xf8518010000	                           jne 0x40015bb	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x40014a3	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014a7	        0x448b3424	                   mov r14d, dword [rsp]	       851	trailer.c	FUNCTION_41	FOR_2	IF_4
0x40014ab	      0x4403742420	            add r14d, dword [rsp + 0x20]	       851	trailer.c	FUNCTION_41	FOR_2	IF_4
0x40014b0	            0x85c9	                           test ecx, ecx	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014b2	     0xf8515010000	                           jne 0x40015cd	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40014b8	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014bc	            0x85d2	                           test edx, edx	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014be	     0xf8436fdffff	                            je 0x40011fa	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014c4	          0x4585f6	                         test r14d, r14d	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014c7	     0xf852dfdffff	                           jne 0x40011fa	       855	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014cd	      0xbe0a000000	                            mov esi, 0xa	       759	trailer.c	FUNCTION_38
0x40014d2	          0x4889ef	                            mov rdi, rbp	       759	trailer.c	FUNCTION_38
0x40014d5	      0xe800000000	                          call 0x40014da	       759	trailer.c	FUNCTION_38
0x40014da	            0x31d2	                            xor edx, edx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014dc	          0x803800	                       cmp byte [rax], 0	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014df	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014e4	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014e8	           0xf95c2	                                setne dl	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014eb	          0x4801d0	                            add rax, rdx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014ee	          0x4829c8	                            sub rax, rcx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014f1	            0x29c6	                            sub esi, eax	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014f3	            0x4898	                                    cdqe	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014f5	          0x4801c1	                            add rcx, rax	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014f8	          0x4863f6	                         movsxd rsi, esi	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x40014fb	      0x4889442430	             mov qword [rsp + 0x30], rax	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x4001500	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x4001505	          0x4889cf	                            mov rdi, rcx	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x4001508	      0xe9fefcffff	                           jmp 0x400120b	       856	trailer.c	FUNCTION_41	FOR_2	IF_4	ELSE_1	IF_7
0x400150d	          0x8b0c24	                    mov ecx, dword [rsp]	       844	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001510	    0xc70424000000	                      mov dword [rsp], 0	       845	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001517	         0x14c2420	             add dword [rsp + 0x20], ecx	       844	trailer.c	FUNCTION_41	FOR_2	IF_3
0x400151b	      0xe980fcffff	                           jmp 0x40011a0	       844	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001520	      0x440fb67d00	                  movzx r15d, byte [rbp]	       844	trailer.c	FUNCTION_41	FOR_2	IF_3
0x4001525	          0x4584ff	                         test r15b, r15b	       610	trailer.c	FUNCTION_32	FOR_1
0x4001528	    0x4c8b2d000000	            mov r13, qword [0x0400152f] 	       870	trailer.c	FUNCTION_41	FOR_2	CALL_9
0x400152f	            0x745b	                            je 0x400158c	       610	trailer.c	FUNCTION_32	FOR_1
0x4001531	          0x4989ee	                            mov r14, rbp	       610	trailer.c	FUNCTION_32	FOR_1
0x4001534	        0x410fbef7	                         movsx esi, r15b	       610	trailer.c	FUNCTION_32	FOR_1
0x4001538	          0x4531e4	                          xor r12d, r12d	       610	trailer.c	FUNCTION_32	FOR_1
0x400153b	            0xeb16	                           jmp 0x4001553	       610	trailer.c	FUNCTION_32	FOR_1
0x400153d	           0xf1f00	                         nop dword [rax]	       610	trailer.c	FUNCTION_32	FOR_1
0x4001540	    0x41bc01000000	                             mov r12d, 1	       616	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001546	        0x4983c601	                              add r14, 1	       610	trailer.c	FUNCTION_32	FOR_1
0x400154a	        0x410fbe36	                   movsx esi, byte [r14]	       610	trailer.c	FUNCTION_32	FOR_1
0x400154e	          0x4084f6	                           test sil, sil	       610	trailer.c	FUNCTION_32	FOR_1
0x4001551	            0x7439	                            je 0x400158c	       610	trailer.c	FUNCTION_32	FOR_1
0x4001553	          0x4c89ef	                            mov rdi, r13	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001556	      0xe800000000	                          call 0x400155b	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x400155b	          0x4885c0	                           test rax, rax	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x400155e	     0xf85d6000000	                           jne 0x400163a	       611	trailer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4001564	          0x4585e4	                         test r12d, r12d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001567	            0x7512	                           jne 0x400157b	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001569	        0x410fb616	                   movzx edx, byte [r14]	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400156d	    0xf68200000000	                      test byte [rdx], 6	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001574	            0x75d0	                           jne 0x4001546	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001576	          0x80fa2d	                            cmp dl, 0x2d	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x4001579	            0x74cb	                            je 0x4001546	       613	trailer.c	FUNCTION_32	FOR_1	IF_2
0x400157b	          0x4c39f5	                            cmp rbp, r14	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400157e	            0x740c	                            je 0x400158c	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001580	        0x410fb606	                   movzx eax, byte [r14]	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001584	            0x3c20	                            cmp al, 0x20	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001586	            0x74b8	                            je 0x4001540	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x4001588	            0x3c09	                               cmp al, 9	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400158a	            0x74b4	                            je 0x4001540	       615	trailer.c	FUNCTION_32	FOR_1	IF_3
0x400158c	        0x450fb6c7	                         movzx r8d, r15b	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x4001590	    0x41f680000000	                       test byte [r8], 1	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x4001598	     0xf8591000000	                           jne 0x400162f	       887	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x400159e	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015a2	          0x8b0c24	                    mov ecx, dword [rsp]	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015a5	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x40015a7	    0xc70424000000	                      mov dword [rsp], 0	       892	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015ae	        0x8d440801	                lea eax, [rax + rcx + 1]	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015b2	        0x89442420	             mov dword [rsp + 0x20], eax	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015b6	      0xe9e5fbffff	                           jmp 0x40011a0	       891	trailer.c	FUNCTION_41	FOR_2	ELSE_3
0x40015bb	      0xbe01000000	                              mov esi, 1	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x40015c0	      0xe9dbfbffff	                           jmp 0x40011a0	       849	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_5
0x40015c5	          0x8d4301	                      lea eax, [rbx + 1]	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40015c8	      0xe923fcffff	                           jmp 0x40011f0	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40015cd	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40015d1	          0x8d0440	                  lea eax, [rax + rax*2]	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40015d4	          0x4139c6	                           cmp r14d, eax	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40015d7	     0xf8fdbfeffff	                            jg 0x40014b8	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40015dd	      0xe9ebfeffff	                           jmp 0x40014cd	       852	trailer.c	FUNCTION_41	FOR_2	IF_4	IF_6
0x40015e2	            0x31f6	                            xor esi, esi	       574	trailer.c	FUNCTION_29	CALL_1
0x40015e4	      0xbf00000000	                              mov edi, 0	       574	trailer.c	FUNCTION_29	CALL_1
0x40015e9	    0xc70500000000	               mov dword [0x040015f3], 1	       571	trailer.c	FUNCTION_29
0x40015f3	    0xc70500000000	               mov dword [0x040015fd], 1	       572	trailer.c	FUNCTION_29
0x40015fd	    0xc70500000000	               mov dword [0x04001607], 1	       573	trailer.c	FUNCTION_29
0x4001607	      0xe800000000	                          call 0x400160c	       574	trailer.c	FUNCTION_29	CALL_1
0x400160c	            0x31f6	                            xor esi, esi	       575	trailer.c	FUNCTION_29	CALL_2
0x400160e	      0xbf00000000	                              mov edi, 0	       575	trailer.c	FUNCTION_29	CALL_2
0x4001613	      0xe800000000	                          call 0x4001618	       575	trailer.c	FUNCTION_29	CALL_2
0x4001618	    0xc70500000000	               mov dword [0x04001622], 1	       576	trailer.c	FUNCTION_29
0x4001622	      0xe92ff9ffff	                           jmp 0x4000f56	       576	trailer.c	FUNCTION_29
0x4001627	          0x4489f8	                           mov eax, r15d	       106	trailer.c	FUNCTION_6	WHILE_1
0x400162a	      0xe90cfbffff	                           jmp 0x400113b	       106	trailer.c	FUNCTION_6	WHILE_1
0x400162f	        0x83042401	                      add dword [rsp], 1	       888	trailer.c	FUNCTION_41	FOR_2	ELSE_2	IF_12
0x4001633	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x4001635	      0xe966fbffff	                           jmp 0x40011a0	       859	trailer.c	FUNCTION_41	FOR_2
0x400163a	          0x4c89f2	                            mov rdx, r14	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x400163d	          0x4829ea	                            sub rdx, rbp	       612	trailer.c	FUNCTION_32	FOR_1	IF_1
0x4001640	            0x85d2	                           test edx, edx	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001642	     0xf8e44ffffff	                           jle 0x400158c	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001648	        0x450fb6c7	                         movzx r8d, r15b	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400164c	    0x41f680000000	                       test byte [r8], 1	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001654	            0x75d9	                           jne 0x400162f	       871	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001656	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x400165a	      0x8344242801	               add dword [rsp + 0x28], 1	       874	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400165f	            0x85c0	                           test eax, eax	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x4001661	            0x754d	                           jne 0x40016b0	       876	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_10
0x4001663	    0x4c8b2d000000	            mov r13, qword [0x0400166a] 	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400166a	    0x4981fd000000	                              cmp r13, 0	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001671	            0x7466	                            je 0x40016d9	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001673	          0x4c63e2	                         movsxd r12, edx	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001676	            0xeb25	                           jmp 0x400169d	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001678	        0x498b7528	            mov rsi, qword [r13 + 0x28] 	       592	trailer.c	FUNCTION_31	CALL_2
0x400167c	          0x4885f6	                           test rsi, rsi	       592	trailer.c	FUNCTION_31	CALL_2
0x400167f	            0x740f	                            je 0x4001690	       592	trailer.c	FUNCTION_31	CALL_2
0x4001681	          0x4c89e2	                            mov rdx, r12	       592	trailer.c	FUNCTION_31	CALL_2
0x4001684	          0x4889ef	                            mov rdi, rbp	       592	trailer.c	FUNCTION_31	CALL_2
0x4001687	      0xe800000000	                          call 0x400168c	       592	trailer.c	FUNCTION_31	CALL_2
0x400168c	            0x85c0	                           test eax, eax	       592	trailer.c	FUNCTION_31	CALL_2
0x400168e	            0x7420	                            je 0x40016b0	       592	trailer.c	FUNCTION_31	CALL_2
0x4001690	        0x4d8b6d00	                    mov r13, qword [r13]	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x4001694	    0x4981fd000000	                              cmp r13, 0	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400169b	            0x743c	                            je 0x40016d9	       878	trailer.c	FUNCTION_41	FOR_2	IF_9
0x400169d	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x40016a1	          0x4c89e2	                            mov rdx, r12	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x40016a4	          0x4889ef	                            mov rdi, rbp	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x40016a7	      0xe800000000	                          call 0x40016ac	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x40016ac	            0x85c0	                           test eax, eax	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x40016ae	            0x75c8	                           jne 0x4001678	       590	trailer.c	FUNCTION_31	IF_1	CALL_1
0x40016b0	    0xc70424000000	                      mov dword [rsp], 0	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x40016b7	    0xc74424100100	               mov dword [rsp + 0x10], 1	       883	trailer.c	FUNCTION_41	FOR_2	IF_9	IF_11
0x40016bf	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x40016c1	      0xe9dafaffff	                           jmp 0x40011a0	       859	trailer.c	FUNCTION_41	FOR_2
0x40016c6	          0x8d4201	                      lea eax, [rdx + 1]	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40016c9	      0xe9d9f9ffff	                           jmp 0x40010a7	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40016ce	          0x8d5001	                      lea edx, [rax + 1]	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40016d1	          0x4863d2	                         movsxd rdx, edx	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40016d4	      0xe9befcffff	                           jmp 0x4001397	       782	trailer.c	FUNCTION_39	FOR_1	IF_3
0x40016d9	    0xc70424000000	                      mov dword [rsp], 0	       875	trailer.c	FUNCTION_41	FOR_2	IF_9
0x40016e0	            0x31f6	                            xor esi, esi	       859	trailer.c	FUNCTION_41	FOR_2
0x40016e2	      0xe9b9faffff	                           jmp 0x40011a0	       859	trailer.c	FUNCTION_41	FOR_2
0x40016e7	    0x48837c243000	               cmp qword [rsp + 0x30], 0	       769	trailer.c	FUNCTION_39	IF_1
0x40016ed	            0x757f	                           jne 0x400176e	       769	trailer.c	FUNCTION_39	IF_1
0x40016ef	            0x31c9	                            xor ecx, ecx	      1083	trailer.c	FUNCTION_49	CALL_5
0x40016f1	            0x31f6	                            xor esi, esi	      1083	trailer.c	FUNCTION_49	CALL_5
0x40016f3	          0x4889c7	                            mov rdi, rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x40016f6	      0xba0a000000	                            mov edx, 0xa	      1083	trailer.c	FUNCTION_49	CALL_5
0x40016fb	          0x4889c3	                            mov rbx, rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x40016fe	      0xe800000000	                          call 0x4001703	      1083	trailer.c	FUNCTION_49	CALL_5
0x4001703	          0x488b38	                    mov rdi, qword [rax]	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001706	      0x4889442420	             mov qword [rsp + 0x20], rax	      1083	trailer.c	FUNCTION_49	CALL_5
0x400170b	      0x48895c2428	             mov qword [rsp + 0x28], rbx	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001710	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001719	          0x4885ff	                           test rdi, rdi	      1087	trailer.c	FUNCTION_49	FOR_1
0x400171c	     0xf8506fbffff	                           jne 0x4001228	      1087	trailer.c	FUNCTION_49	FOR_1
0x4001722	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1102	trailer.c	FUNCTION_49	CALL_14
0x4001727	            0x31db	                            xor ebx, ebx	      1074	trailer.c	FUNCTION_49
0x4001729	      0xe800000000	                          call 0x400172e	      1102	trailer.c	FUNCTION_49	CALL_14
0x400172e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1102	trailer.c	FUNCTION_49	CALL_14
0x4001733	    0x48c704240000	                      mov qword [rsp], 0	      1073	trailer.c	FUNCTION_49
0x400173b	      0x4889442428	             mov qword [rsp + 0x28], rax	      1102	trailer.c	FUNCTION_49	CALL_14
0x4001740	            0x31c0	                            xor eax, eax	       911	trailer.c	FUNCTION_43	IF_1
0x4001742	      0xe98bfcffff	                           jmp 0x40013d2	       911	trailer.c	FUNCTION_43	IF_1
0x4001747	    0x660f1f840000	                    nop word [rax + rax]	       911	trailer.c	FUNCTION_43	IF_1
0x4001750	            0x31db	                            xor ebx, ebx	      1074	trailer.c	FUNCTION_49
0x4001752	    0x48c704240000	                      mov qword [rsp], 0	      1073	trailer.c	FUNCTION_49
0x400175a	          0x4889c7	                            mov rdi, rax	      1073	trailer.c	FUNCTION_49
0x400175d	      0xe9e5fbffff	                           jmp 0x4001347	      1073	trailer.c	FUNCTION_49
0x4001762	            0x31db	                            xor ebx, ebx	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4001764	            0x31f6	                            xor esi, esi	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4001766	          0x4989c6	                            mov r14, rax	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x4001769	      0xe940f8ffff	                           jmp 0x4000fae	       795	trailer.c	FUNCTION_40	FOR_1	CALL_1
0x400176e	    0xc74424080000	                  mov dword [rsp + 8], 0	       769	trailer.c	FUNCTION_39	IF_1
0x4001776	      0xe9ecf8ffff	                           jmp 0x4001067	       769	trailer.c	FUNCTION_39	IF_1
0x400177b	      0xe800000000	                          call 0x4001780	      1110	trailer.c	FUNCTION_49
0x4001780	          0x4c89fa	                            mov rdx, r15	       796	git-compat-util.h	FUNCTION_82	IF_1	CALL_1
0x4001783	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_82	IF_1	CALL_1
0x4001788	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_82	IF_1	CALL_1
0x400178d	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_82	IF_1	CALL_1
0x400178f	      0xe800000000	                          call 0x4001794	       796	git-compat-util.h	FUNCTION_82	IF_1	CALL_1
git_trailer_config	functions,0:WHILE,0:FOR,1:ELSE,0:SWITCH,1:IF,9:DO,0:CALL,22	265
0x4000620	            0x4156	                                push r14	       505	trailer.c	FUNCTION_28
0x4000622	      0xb800000000	                              mov eax, 0	       505	trailer.c	FUNCTION_28
0x4000627	            0x4155	                                push r13	       505	trailer.c	FUNCTION_28
0x4000629	            0x4154	                                push r12	       505	trailer.c	FUNCTION_28
0x400062b	              0x55	                                push rbp	       505	trailer.c	FUNCTION_28
0x400062c	              0x53	                                push rbx	       505	trailer.c	FUNCTION_28
0x400062d	          0x4889fb	                            mov rbx, rdi	       505	trailer.c	FUNCTION_28
0x4000630	            0xeb17	                           jmp 0x4000649	       505	trailer.c	FUNCTION_28
0x4000632	    0x660f1f440000	                    nop word [rax + rax]	       505	trailer.c	FUNCTION_28
0x4000638	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_74	DO_1
0x400063c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_74	DO_1
0x4000640	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_74	DO_1
0x4000643	     0xf858a000000	                           jne 0x40006d3	       488	git-compat-util.h	FUNCTION_74	DO_1
0x4000649	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x400064c	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x400064e	            0x75e8	                           jne 0x4000638	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x4000650	          0x4989f5	                            mov r13, rsi	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x4000653	          0x4989fc	                            mov r12, rdi	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x4000656	      0xbe2e000000	                           mov esi, 0x2e	       516	trailer.c	FUNCTION_28	CALL_2
0x400065b	          0x4889df	                            mov rdi, rbx	       516	trailer.c	FUNCTION_28	CALL_2
0x400065e	      0xe800000000	                          call 0x4000663	       516	trailer.c	FUNCTION_28	CALL_2
0x4000663	          0x4885c0	                           test rax, rax	       517	trailer.c	FUNCTION_28	IF_2
0x4000666	            0x746b	                            je 0x40006d3	       517	trailer.c	FUNCTION_28	IF_2
0x4000668	        0x4883c001	                              add rax, 1	       520	trailer.c	FUNCTION_28
0x400066c	      0xbe00000000	                              mov esi, 0	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000671	      0xb904000000	                              mov ecx, 4	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000676	          0x4889c7	                            mov rdi, rax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000679	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x400067b	            0x7463	                            je 0x40006e0	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x400067d	      0xbe00000000	                              mov esi, 0	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000682	      0xb908000000	                              mov ecx, 8	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000687	          0x4889c7	                            mov rdi, rax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x400068a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x400068c	     0xf8424030000	                            je 0x40009b6	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000692	      0xbe00000000	                              mov esi, 0	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x4000697	      0xb906000000	                              mov ecx, 6	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x400069c	          0x4889c7	                            mov rdi, rax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x400069f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006a1	     0xf84b3000000	                            je 0x400075a	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006a7	      0xbe00000000	                              mov esi, 0	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006ac	      0xb909000000	                              mov ecx, 9	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006b1	          0x4889c7	                            mov rdi, rax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006b4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006b6	     0xf8414030000	                            je 0x40009d0	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006bc	      0xbe00000000	                              mov esi, 0	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006c1	      0xb90a000000	                            mov ecx, 0xa	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006c6	          0x4889c7	                            mov rdi, rax	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006c9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006cb	    0x41be04000000	                             mov r14d, 4	       521	trailer.c	FUNCTION_28	FOR_1
0x40006d1	            0x7410	                            je 0x40006e3	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006d3	              0x5b	                                 pop rbx	       563	trailer.c	FUNCTION_28
0x40006d4	            0x31c0	                            xor eax, eax	       563	trailer.c	FUNCTION_28
0x40006d6	              0x5d	                                 pop rbp	       563	trailer.c	FUNCTION_28
0x40006d7	            0x415c	                                 pop r12	       563	trailer.c	FUNCTION_28
0x40006d9	            0x415d	                                 pop r13	       563	trailer.c	FUNCTION_28
0x40006db	            0x415e	                                 pop r14	       563	trailer.c	FUNCTION_28
0x40006dd	              0xc3	                                     ret	       563	trailer.c	FUNCTION_28
0x40006de	            0x6690	                                     nop	       563	trailer.c	FUNCTION_28
0x40006e0	          0x4531f6	                          xor r14d, r14d	       522	trailer.c	FUNCTION_28	FOR_1	IF_3	CALL_3
0x40006e3	          0x4829d8	                            sub rax, rbx	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x40006e6	          0x4889df	                            mov rdi, rbx	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x40006e9	        0x49c1e604	                              shl r14, 4	       525	trailer.c	FUNCTION_28	FOR_1
0x40006ed	        0x488d70ff	                      lea rsi, [rax - 1]	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x40006f1	      0xe800000000	                          call 0x40006f6	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x40006f6	          0x4885c0	                           test rax, rax	       529	trailer.c	FUNCTION_28	IF_4
0x40006f9	          0x4889c5	                            mov rbp, rax	       524	trailer.c	FUNCTION_28	FOR_1	CALL_4
0x40006fc	    0x458bb6000000	                   mov r14d, dword [r14]	       525	trailer.c	FUNCTION_28	FOR_1
0x4000703	            0x74ce	                            je 0x40006d3	       529	trailer.c	FUNCTION_28	IF_4
0x4000705	    0x488b1d000000	            mov rbx, qword [0x0400070c] 	       443	trailer.c	FUNCTION_26
0x400070c	    0x4881fb000000	                              cmp rbx, 0	       443	trailer.c	FUNCTION_26
0x4000713	            0x751b	                           jne 0x4000730	       443	trailer.c	FUNCTION_26
0x4000715	      0xe9de010000	                           jmp 0x40008f8	       443	trailer.c	FUNCTION_26
0x400071a	    0x660f1f440000	                    nop word [rax + rax]	       443	trailer.c	FUNCTION_26
0x4000720	          0x488b1b	                    mov rbx, qword [rbx]	       443	trailer.c	FUNCTION_26
0x4000723	    0x4881fb000000	                              cmp rbx, 0	       443	trailer.c	FUNCTION_26
0x400072a	     0xf84c8010000	                            je 0x40008f8	       443	trailer.c	FUNCTION_26
0x4000730	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000734	          0x4889ee	                            mov rsi, rbp	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000737	      0xe800000000	                          call 0x400073c	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x400073c	            0x85c0	                           test eax, eax	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x400073e	            0x75e0	                           jne 0x4000720	       445	trailer.c	FUNCTION_26	IF_1	CALL_1
0x4000740	          0x4889ef	                            mov rdi, rbp	       534	trailer.c	FUNCTION_28	CALL_6
0x4000743	      0xe800000000	                          call 0x4000748	       534	trailer.c	FUNCTION_28	CALL_6
0x4000748	        0x4183fe04	                             cmp r14d, 4	       536	trailer.c	FUNCTION_28	SWITCH_1
0x400074c	     0xf876f020000	                            ja 0x40009c1	       536	trailer.c	FUNCTION_28	SWITCH_1
0x4000752	    0x42ff24f50000	                       jmp qword [r14*8]	       536	trailer.c	FUNCTION_28	SWITCH_1
0x400075a	    0x41be02000000	                             mov r14d, 2	       521	trailer.c	FUNCTION_28	FOR_1
0x4000760	            0xeb81	                           jmp 0x40006e3	       521	trailer.c	FUNCTION_28	FOR_1
0x4000762	          0x4d85ed	                           test r13, r13	       399	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x4000765	     0xf84ea020000	                            je 0x4000a55	       399	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x400076b	          0x4c89ee	                            mov rsi, r13	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x400076e	      0xbf00000000	                              mov edi, 0	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x4000773	      0xe800000000	                          call 0x4000778	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x4000778	            0x85c0	                           test eax, eax	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x400077a	     0xf8473020000	                            je 0x40009f3	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x4000780	          0x4c89ee	                            mov rsi, r13	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x4000783	      0xbf00000000	                              mov edi, 0	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x4000788	      0xe800000000	                          call 0x400078d	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x400078d	            0x85c0	                           test eax, eax	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x400078f	     0xf849c020000	                            je 0x4000a31	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x4000795	          0x4c89ee	                            mov rsi, r13	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000798	      0xbf00000000	                              mov edi, 0	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x400079d	      0xe800000000	                          call 0x40007a2	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x40007a2	            0x85c0	                           test eax, eax	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x40007a4	     0xf849f020000	                            je 0x4000a49	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x40007aa	          0x4c89ee	                            mov rsi, r13	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x40007ad	      0xbf00000000	                              mov edi, 0	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x40007b2	      0xe800000000	                          call 0x40007b7	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x40007b7	            0x85c0	                           test eax, eax	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x40007b9	     0xf84ba020000	                            je 0x4000a79	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x40007bf	          0x4c89ee	                            mov rsi, r13	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x40007c2	      0xbf00000000	                              mov edi, 0	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x40007c7	      0xe800000000	                          call 0x40007cc	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x40007cc	            0x85c0	                           test eax, eax	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x40007ce	     0xf852b020000	                           jne 0x40009ff	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x40007d4	    0xc7433c050000	               mov dword [rbx + 0x3c], 5	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x40007db	      0xe9f3feffff	                           jmp 0x40006d3	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x40007e0	          0x4d85ed	                           test r13, r13	       382	trailer.c	FUNCTION_22	IF_1
0x40007e3	     0xf8478020000	                            je 0x4000a61	       382	trailer.c	FUNCTION_22	IF_1
0x40007e9	          0x4c89ee	                            mov rsi, r13	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x40007ec	      0xbf00000000	                              mov edi, 0	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x40007f1	      0xe800000000	                          call 0x40007f6	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x40007f6	            0x85c0	                           test eax, eax	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x40007f8	     0xf84e9010000	                            je 0x40009e7	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x40007fe	          0x4c89ee	                            mov rsi, r13	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000801	      0xbf00000000	                              mov edi, 0	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000806	      0xe800000000	                          call 0x400080b	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x400080b	            0x85c0	                           test eax, eax	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x400080d	     0xf8412020000	                            je 0x4000a25	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000813	          0x4c89ee	                            mov rsi, r13	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000816	      0xbf00000000	                              mov edi, 0	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x400081b	      0xe800000000	                          call 0x4000820	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000820	            0x85c0	                           test eax, eax	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000822	     0xf8415020000	                            je 0x4000a3d	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000828	          0x4c89ee	                            mov rsi, r13	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x400082b	      0xbf00000000	                              mov edi, 0	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000830	      0xe800000000	                          call 0x4000835	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000835	            0x85c0	                           test eax, eax	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000837	     0xf85c2010000	                           jne 0x40009ff	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x400083d	    0xc74338040000	               mov dword [rbx + 0x38], 4	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x4000844	      0xe98afeffff	                           jmp 0x40006d3	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x4000849	      0x48837b3000	               cmp qword [rbx + 0x30], 0	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x400084e	            0x741e	                            je 0x400086e	       543	trailer.c	FUNCTION_28	SWITCH_1	IF_6
0x4000850	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_66
0x4000855	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_66
0x4000857	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_66
0x400085c	      0xe800000000	                          call 0x4000861	        54	gettext.h	FUNCTION_66
0x4000861	          0x4c89e6	                            mov rsi, r12	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000864	          0x4889c7	                            mov rdi, rax	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000867	            0x31c0	                            xor eax, eax	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x4000869	      0xe800000000	                          call 0x400086e	       544	trailer.c	FUNCTION_28	SWITCH_1	CALL_11
0x400086e	          0x4c89ef	                            mov rdi, r13	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x4000871	      0xe800000000	                          call 0x4000876	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x4000876	        0x48894330	             mov qword [rbx + 0x30], rax	       545	trailer.c	FUNCTION_28	SWITCH_1	CALL_12
0x400087a	      0xe954feffff	                           jmp 0x40006d3	       546	trailer.c	FUNCTION_28	SWITCH_1
0x400087f	      0x48837b2800	               cmp qword [rbx + 0x28], 0	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x4000884	            0x741e	                            je 0x40008a4	       538	trailer.c	FUNCTION_28	SWITCH_1	IF_5
0x4000886	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_66
0x400088b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_66
0x400088d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_66
0x4000892	      0xe800000000	                          call 0x4000897	        54	gettext.h	FUNCTION_66
0x4000897	          0x4c89e6	                            mov rsi, r12	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x400089a	          0x4889c7	                            mov rdi, rax	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x400089d	            0x31c0	                            xor eax, eax	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x400089f	      0xe800000000	                          call 0x40008a4	       539	trailer.c	FUNCTION_28	SWITCH_1	CALL_8
0x40008a4	          0x4c89ef	                            mov rdi, r13	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x40008a7	      0xe800000000	                          call 0x40008ac	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x40008ac	        0x48894328	             mov qword [rbx + 0x28], rax	       540	trailer.c	FUNCTION_28	SWITCH_1	CALL_9
0x40008b0	      0xe91efeffff	                           jmp 0x40006d3	       541	trailer.c	FUNCTION_28	SWITCH_1
0x40008b5	          0x4d85ed	                           test r13, r13	       418	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x40008b8	     0xf84af010000	                            je 0x4000a6d	       418	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x40008be	          0x4c89ee	                            mov rsi, r13	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x40008c1	      0xbf00000000	                              mov edi, 0	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x40008c6	      0xe800000000	                          call 0x40008cb	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x40008cb	            0x85c0	                           test eax, eax	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x40008cd	     0xf8408010000	                            je 0x40009db	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x40008d3	          0x4c89ee	                            mov rsi, r13	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x40008d6	      0xbf00000000	                              mov edi, 0	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x40008db	      0xe800000000	                          call 0x40008e0	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x40008e0	            0x85c0	                           test eax, eax	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x40008e2	     0xf8517010000	                           jne 0x40009ff	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x40008e8	    0xc74340010000	               mov dword [rbx + 0x40], 1	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x40008ef	      0xe9dffdffff	                           jmp 0x40006d3	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x40008f4	         0xf1f4000	                         nop dword [rax]	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x40008f8	      0xbe01000000	                              mov esi, 1	       450	trailer.c	FUNCTION_26	CALL_2
0x40008fd	      0xbf48000000	                           mov edi, 0x48	       450	trailer.c	FUNCTION_26	CALL_2
0x4000902	      0xe800000000	                          call 0x4000907	       450	trailer.c	FUNCTION_26	CALL_2
0x4000907	          0x4889c3	                            mov rbx, rax	       450	trailer.c	FUNCTION_26	CALL_2
0x400090a	    0x488b05000000	            mov rax, qword [0x04000911] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000911	        0x48894320	             mov qword [rbx + 0x20], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000915	    0x488b05000000	            mov rax, qword [0x0400091c] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x400091c	        0x48894328	             mov qword [rbx + 0x28], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000920	    0x488b05000000	            mov rax, qword [0x04000927] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000927	        0x48894330	             mov qword [rbx + 0x30], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x400092b	    0x488b05000000	            mov rax, qword [0x04000932] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000932	        0x48894338	             mov qword [rbx + 0x38], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000936	    0x488b05000000	            mov rax, qword [0x0400093d] 	       431	trailer.c	ELSE_3	FUNCTION_25
0x400093d	        0x48894340	             mov qword [rbx + 0x40], rax	       431	trailer.c	ELSE_3	FUNCTION_25
0x4000941	    0x488b05000000	            mov rax, qword [0x04000948] 	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x4000948	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x400094b	            0x7408	                            je 0x4000955	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x400094d	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x4000950	      0xe800000000	                          call 0x4000955	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x4000955	        0x48894320	             mov qword [rbx + 0x20], rax	       432	trailer.c	ELSE_3	FUNCTION_25	CALL_1
0x4000959	    0x488b05000000	            mov rax, qword [0x04000960] 	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x4000960	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x4000963	            0x7408	                            je 0x400096d	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x4000965	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x4000968	      0xe800000000	                          call 0x400096d	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x400096d	        0x48894328	             mov qword [rbx + 0x28], rax	       433	trailer.c	ELSE_3	FUNCTION_25	CALL_2
0x4000971	    0x488b05000000	            mov rax, qword [0x04000978] 	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x4000978	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x400097b	            0x7408	                            je 0x4000985	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x400097d	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x4000980	      0xe800000000	                          call 0x4000985	       924	git-compat-util.h	FUNCTION_86	CALL_1
0x4000985	        0x48894330	             mov qword [rbx + 0x30], rax	       434	trailer.c	ELSE_3	FUNCTION_25	CALL_3
0x4000989	          0x4889ef	                            mov rdi, rbp	       452	trailer.c	FUNCTION_26	CALL_4
0x400098c	      0xe800000000	                          call 0x4000991	       452	trailer.c	FUNCTION_26	CALL_4
0x4000991	        0x48894320	             mov qword [rbx + 0x20], rax	       452	trailer.c	FUNCTION_26	CALL_4
0x4000995	    0x488b05000000	            mov rax, qword [0x0400099c] 	        63	list.h	FUNCTION_96
0x400099c	          0x488918	                    mov qword [rax], rbx	        63	list.h	FUNCTION_96
0x400099f	    0x48c703000000	                      mov qword [rbx], 0	        64	list.h	FUNCTION_96
0x40009a6	        0x48894308	                mov qword [rbx + 8], rax	        65	list.h	FUNCTION_96
0x40009aa	    0x48891d000000	            mov qword [0x040009b1], rbx 	        66	list.h	FUNCTION_96
0x40009b1	      0xe98afdffff	                           jmp 0x4000740	        66	list.h	FUNCTION_96
0x40009b6	    0x41be01000000	                             mov r14d, 1	       521	trailer.c	FUNCTION_28	FOR_1
0x40009bc	      0xe922fdffff	                           jmp 0x40006e3	       521	trailer.c	FUNCTION_28	FOR_1
0x40009c1	          0x4489f6	                           mov esi, r14d	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x40009c4	      0xbf00000000	                              mov edi, 0	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x40009c9	            0x31c0	                            xor eax, eax	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x40009cb	      0xe800000000	                          call 0x40009d0	       560	trailer.c	FUNCTION_28	SWITCH_1	CALL_22
0x40009d0	    0x41be03000000	                             mov r14d, 3	       521	trailer.c	FUNCTION_28	FOR_1
0x40009d6	      0xe908fdffff	                           jmp 0x40006e3	       521	trailer.c	FUNCTION_28	FOR_1
0x40009db	    0xc74340020000	               mov dword [rbx + 0x40], 2	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x40009e2	      0xe9ecfcffff	                           jmp 0x40006d3	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x40009e7	    0xc74338020000	               mov dword [rbx + 0x38], 2	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x40009ee	      0xe9e0fcffff	                           jmp 0x40006d3	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x40009f3	    0xc7433c020000	               mov dword [rbx + 0x3c], 2	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x40009fa	      0xe9d4fcffff	                           jmp 0x40006d3	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x40009ff	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_66
0x4000a01	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_66
0x4000a06	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_66
0x4000a0b	      0xe800000000	                          call 0x4000a10	        54	gettext.h	FUNCTION_66
0x4000a10	          0x4c89e2	                            mov rdx, r12	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000a13	          0x4889c7	                            mov rdi, rax	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000a16	          0x4c89ee	                            mov rsi, r13	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000a19	            0x31c0	                            xor eax, eax	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000a1b	      0xe800000000	                          call 0x4000a20	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000a20	      0xe9aefcffff	                           jmp 0x40006d3	       549	trailer.c	FUNCTION_28	SWITCH_1	CALL_15
0x4000a25	    0xc74338030000	               mov dword [rbx + 0x38], 3	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x4000a2c	      0xe9a2fcffff	                           jmp 0x40006d3	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x4000a31	    0xc7433c010000	               mov dword [rbx + 0x3c], 1	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x4000a38	      0xe996fcffff	                           jmp 0x40006d3	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x4000a3d	    0xc74338010000	               mov dword [rbx + 0x38], 1	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x4000a44	      0xe98afcffff	                           jmp 0x40006d3	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x4000a49	    0xc7433c030000	               mov dword [rbx + 0x3c], 3	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x4000a50	      0xe97efcffff	                           jmp 0x40006d3	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x4000a55	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	       400	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x4000a5c	      0xe972fcffff	                           jmp 0x40006d3	       400	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x4000a61	    0xc74338000000	               mov dword [rbx + 0x38], 0	       383	trailer.c	FUNCTION_22	IF_1
0x4000a68	      0xe966fcffff	                           jmp 0x40006d3	       383	trailer.c	FUNCTION_22	IF_1
0x4000a6d	    0xc74340000000	               mov dword [rbx + 0x40], 0	       419	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x4000a74	      0xe95afcffff	                           jmp 0x40006d3	       419	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x4000a79	    0xc7433c040000	               mov dword [rbx + 0x3c], 4	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
0x4000a80	      0xe94efcffff	                           jmp 0x40006d3	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
git_trailer_default_config	functions,0:WHILE,0:FOR,0:ELSE,3:SWITCH,0:IF,9:DO,0:CALL,16	150
0x4000a90	            0x4154	                                push r12	       474	trailer.c	FUNCTION_27
0x4000a92	      0xb800000000	                              mov eax, 0	       474	trailer.c	FUNCTION_27
0x4000a97	              0x55	                                push rbp	       474	trailer.c	FUNCTION_27
0x4000a98	              0x53	                                push rbx	       474	trailer.c	FUNCTION_27
0x4000a99	          0x4889fb	                            mov rbx, rdi	       474	trailer.c	FUNCTION_27
0x4000a9c	            0xeb0f	                           jmp 0x4000aad	       474	trailer.c	FUNCTION_27
0x4000a9e	            0x6690	                                     nop	       474	trailer.c	FUNCTION_27
0x4000aa0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_74	DO_1
0x4000aa4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_74	DO_1
0x4000aa8	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_74	DO_1
0x4000aab	            0x751f	                           jne 0x4000acc	       488	git-compat-util.h	FUNCTION_74	DO_1
0x4000aad	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x4000ab0	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x4000ab2	            0x75ec	                           jne 0x4000aa0	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x4000ab4	          0x4989f4	                            mov r12, rsi	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x4000ab7	          0x4889fd	                            mov rbp, rdi	       484	git-compat-util.h	FUNCTION_74	DO_1	IF_1
0x4000aba	      0xbe2e000000	                           mov esi, 0x2e	       480	trailer.c	FUNCTION_27	CALL_2
0x4000abf	          0x4889df	                            mov rdi, rbx	       480	trailer.c	FUNCTION_27	CALL_2
0x4000ac2	      0xe800000000	                          call 0x4000ac7	       480	trailer.c	FUNCTION_27	CALL_2
0x4000ac7	          0x4885c0	                           test rax, rax	       481	trailer.c	FUNCTION_27	IF_2
0x4000aca	            0x740c	                            je 0x4000ad8	       481	trailer.c	FUNCTION_27	IF_2
0x4000acc	              0x5b	                                 pop rbx	       502	trailer.c	FUNCTION_27
0x4000acd	            0x31c0	                            xor eax, eax	       502	trailer.c	FUNCTION_27
0x4000acf	              0x5d	                                 pop rbp	       502	trailer.c	FUNCTION_27
0x4000ad0	            0x415c	                                 pop r12	       502	trailer.c	FUNCTION_27
0x4000ad2	              0xc3	                                     ret	       502	trailer.c	FUNCTION_27
0x4000ad3	       0xf1f440000	                   nop dword [rax + rax]	       502	trailer.c	FUNCTION_27
0x4000ad8	      0xbf00000000	                              mov edi, 0	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000add	      0xb906000000	                              mov ecx, 6	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000ae2	          0x4889de	                            mov rsi, rbx	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000ae5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000ae7	     0xf848a000000	                            je 0x4000b77	       482	trailer.c	FUNCTION_27	IF_2	IF_3	CALL_3
0x4000aed	      0xbf00000000	                              mov edi, 0	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000af2	      0xb909000000	                              mov ecx, 9	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000af7	          0x4889de	                            mov rsi, rbx	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000afa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000afc	     0xf84e1000000	                            je 0x4000be3	       487	trailer.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_7
0x4000b02	      0xbf00000000	                              mov edi, 0	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000b07	      0xb90a000000	                            mov ecx, 0xa	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000b0c	          0x4889de	                            mov rsi, rbx	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000b0f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000b11	            0x7422	                            je 0x4000b35	       492	trailer.c	FUNCTION_27	IF_2	ELSE_2	IF_7	CALL_11
0x4000b13	      0xbf00000000	                              mov edi, 0	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000b18	      0xb90b000000	                            mov ecx, 0xb	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000b1d	          0x4889de	                            mov rsi, rbx	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000b20	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000b22	            0x75a8	                           jne 0x4000acc	       497	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_15
0x4000b24	          0x4c89e7	                            mov rdi, r12	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000b27	      0xe800000000	                          call 0x4000b2c	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000b2c	    0x488905000000	            mov qword [0x04000b33], rax 	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000b33	            0xeb97	                           jmp 0x4000acc	       498	trailer.c	FUNCTION_27	IF_2	ELSE_3	IF_9	CALL_16
0x4000b35	          0x4d85e4	                           test r12, r12	       418	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x4000b38	     0xf84de010000	                            je 0x4000d1c	       418	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x4000b3e	          0x4c89e6	                            mov rsi, r12	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000b41	      0xbf00000000	                              mov edi, 0	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000b46	      0xe800000000	                          call 0x4000b4b	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000b4b	            0x85c0	                           test eax, eax	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000b4d	     0xf8460010000	                            je 0x4000cb3	       420	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2	CALL_1
0x4000b53	          0x4c89e6	                            mov rsi, r12	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000b56	      0xbf00000000	                              mov edi, 0	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000b5b	      0xe800000000	                          call 0x4000b60	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000b60	            0x85c0	                           test eax, eax	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000b62	     0xf8507010000	                           jne 0x4000c6f	       422	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3	CALL_2
0x4000b68	    0xc70500000000	               mov dword [0x04000b72], 1	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x4000b72	      0xe955ffffff	                           jmp 0x4000acc	       423	trailer.c	ELSE_6	FUNCTION_24	ELSE_2	IF_3
0x4000b77	          0x4d85e4	                           test r12, r12	       382	trailer.c	FUNCTION_22	IF_1
0x4000b7a	     0xf846f010000	                            je 0x4000cef	       382	trailer.c	FUNCTION_22	IF_1
0x4000b80	          0x4c89e6	                            mov rsi, r12	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x4000b83	      0xbf00000000	                              mov edi, 0	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x4000b88	      0xe800000000	                          call 0x4000b8d	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x4000b8d	            0x85c0	                           test eax, eax	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x4000b8f	     0xf84cb000000	                            je 0x4000c60	       384	trailer.c	FUNCTION_22	ELSE_1	IF_2	CALL_1
0x4000b95	          0x4c89e6	                            mov rsi, r12	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000b98	      0xbf00000000	                              mov edi, 0	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000b9d	      0xe800000000	                          call 0x4000ba2	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000ba2	            0x85c0	                           test eax, eax	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000ba4	     0xf84fa000000	                            je 0x4000ca4	       386	trailer.c	FUNCTION_22	ELSE_2	IF_3	CALL_2
0x4000baa	          0x4c89e6	                            mov rsi, r12	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000bad	      0xbf00000000	                              mov edi, 0	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000bb2	      0xe800000000	                          call 0x4000bb7	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000bb7	            0x85c0	                           test eax, eax	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000bb9	     0xf8412010000	                            je 0x4000cd1	       388	trailer.c	FUNCTION_22	ELSE_3	IF_4	CALL_3
0x4000bbf	          0x4c89e6	                            mov rsi, r12	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000bc2	      0xbf00000000	                              mov edi, 0	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000bc7	      0xe800000000	                          call 0x4000bcc	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000bcc	            0x85c0	                           test eax, eax	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000bce	     0xf859b000000	                           jne 0x4000c6f	       390	trailer.c	FUNCTION_22	ELSE_4	IF_5	CALL_4
0x4000bd4	    0xc70500000000	               mov dword [0x04000bde], 4	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x4000bde	      0xe9e9feffff	                           jmp 0x4000acc	       391	trailer.c	FUNCTION_22	ELSE_4	IF_5
0x4000be3	          0x4d85e4	                           test r12, r12	       399	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x4000be6	     0xf8421010000	                            je 0x4000d0d	       399	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x4000bec	          0x4c89e6	                            mov rsi, r12	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x4000bef	      0xbf00000000	                              mov edi, 0	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x4000bf4	      0xe800000000	                          call 0x4000bf9	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x4000bf9	            0x85c0	                           test eax, eax	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x4000bfb	     0xf8494000000	                            je 0x4000c95	       401	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2	CALL_1
0x4000c01	          0x4c89e6	                            mov rsi, r12	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x4000c04	      0xbf00000000	                              mov edi, 0	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x4000c09	      0xe800000000	                          call 0x4000c0e	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x4000c0e	            0x85c0	                           test eax, eax	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x4000c10	     0xf84ac000000	                            je 0x4000cc2	       403	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3	CALL_2
0x4000c16	          0x4c89e6	                            mov rsi, r12	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000c19	      0xbf00000000	                              mov edi, 0	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000c1e	      0xe800000000	                          call 0x4000c23	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000c23	            0x85c0	                           test eax, eax	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000c25	     0xf84b5000000	                            je 0x4000ce0	       405	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4	CALL_3
0x4000c2b	          0x4c89e6	                            mov rsi, r12	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000c2e	      0xbf00000000	                              mov edi, 0	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000c33	      0xe800000000	                          call 0x4000c38	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000c38	            0x85c0	                           test eax, eax	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000c3a	     0xf84be000000	                            je 0x4000cfe	       407	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5	CALL_4
0x4000c40	          0x4c89e6	                            mov rsi, r12	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000c43	      0xbf00000000	                              mov edi, 0	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000c48	      0xe800000000	                          call 0x4000c4d	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000c4d	            0x85c0	                           test eax, eax	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000c4f	            0x751e	                           jne 0x4000c6f	       409	trailer.c	FUNCTION_23	IF_6	CALL_5
0x4000c51	    0xc70500000000	               mov dword [0x04000c5b], 5	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x4000c5b	      0xe96cfeffff	                           jmp 0x4000acc	       410	trailer.c	FUNCTION_23	IF_6	ELSE_5
0x4000c60	    0xc70500000000	               mov dword [0x04000c6a], 2	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x4000c6a	      0xe95dfeffff	                           jmp 0x4000acc	       385	trailer.c	FUNCTION_22	ELSE_1	IF_2
0x4000c6f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_66
0x4000c71	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_66
0x4000c76	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_66
0x4000c7b	      0xe800000000	                          call 0x4000c80	        54	gettext.h	FUNCTION_66
0x4000c80	          0x4889ea	                            mov rdx, rbp	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000c83	          0x4889c7	                            mov rdi, rax	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000c86	          0x4c89e6	                            mov rsi, r12	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000c89	            0x31c0	                            xor eax, eax	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000c8b	      0xe800000000	                          call 0x4000c90	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000c90	      0xe937feffff	                           jmp 0x4000acc	       485	trailer.c	FUNCTION_27	IF_2	IF_3	IF_4	CALL_6
0x4000c95	    0xc70500000000	               mov dword [0x04000c9f], 2	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x4000c9f	      0xe928feffff	                           jmp 0x4000acc	       402	trailer.c	ELSE_5	FUNCTION_23	ELSE_1	IF_2
0x4000ca4	    0xc70500000000	               mov dword [0x04000cae], 3	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x4000cae	      0xe919feffff	                           jmp 0x4000acc	       387	trailer.c	FUNCTION_22	ELSE_2	IF_3
0x4000cb3	    0xc70500000000	               mov dword [0x04000cbd], 2	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x4000cbd	      0xe90afeffff	                           jmp 0x4000acc	       421	trailer.c	ELSE_6	FUNCTION_24	ELSE_1	IF_2
0x4000cc2	    0xc70500000000	               mov dword [0x04000ccc], 1	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x4000ccc	      0xe9fbfdffff	                           jmp 0x4000acc	       404	trailer.c	ELSE_5	FUNCTION_23	ELSE_2	IF_3
0x4000cd1	    0xc70500000000	               mov dword [0x04000cdb], 1	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x4000cdb	      0xe9ecfdffff	                           jmp 0x4000acc	       389	trailer.c	FUNCTION_22	ELSE_3	IF_4
0x4000ce0	    0xc70500000000	               mov dword [0x04000cea], 3	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x4000cea	      0xe9ddfdffff	                           jmp 0x4000acc	       406	trailer.c	ELSE_5	FUNCTION_23	ELSE_3	IF_4
0x4000cef	    0xc70500000000	               mov dword [0x04000cf9], 0	       383	trailer.c	FUNCTION_22	IF_1
0x4000cf9	      0xe9cefdffff	                           jmp 0x4000acc	       383	trailer.c	FUNCTION_22	IF_1
0x4000cfe	    0xc70500000000	               mov dword [0x04000d08], 4	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
0x4000d08	      0xe9bffdffff	                           jmp 0x4000acc	       408	trailer.c	ELSE_5	FUNCTION_23	ELSE_4	IF_5
0x4000d0d	    0xc70500000000	               mov dword [0x04000d17], 0	       400	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x4000d17	      0xe9b0fdffff	                           jmp 0x4000acc	       400	trailer.c	ELSE_5	FUNCTION_23	IF_1
0x4000d1c	    0xc70500000000	               mov dword [0x04000d26], 0	       419	trailer.c	ELSE_6	FUNCTION_24	IF_1
0x4000d26	      0xe9a1fdffff	                           jmp 0x4000acc	       419	trailer.c	ELSE_6	FUNCTION_24	IF_1
unfold_value	functions,0:WHILE,2:FOR,0:ELSE,1:SWITCH,0:IF,1:DO,0:CALL,6	115
0x40001f0	            0x4154	                                push r12	       916	trailer.c	FUNCTION_44
0x40001f2	              0x55	                                push rbp	       916	trailer.c	FUNCTION_44
0x40001f3	          0x4989fc	                            mov r12, rdi	       916	trailer.c	FUNCTION_44
0x40001f6	              0x53	                                push rbx	       916	trailer.c	FUNCTION_44
0x40001f7	            0x31db	                            xor ebx, ebx	       921	trailer.c	FUNCTION_44
0x40001f9	        0x4883ec40	                           sub rsp, 0x40	       916	trailer.c	FUNCTION_44
0x40001fd	        0x488b7708	                mov rsi, qword [rdi + 8]	       920	trailer.c	FUNCTION_44	CALL_1
0x4000201	          0x4889e7	                            mov rdi, rsp	       920	trailer.c	FUNCTION_44	CALL_1
0x4000204	    0x48c704240000	                      mov qword [rsp], 0	       917	trailer.c	FUNCTION_44
0x400020c	    0x48c744240800	                  mov qword [rsp + 8], 0	       917	trailer.c	FUNCTION_44
0x4000215	    0x64488b042528	                mov rax, qword fs:[0x28]	       916	trailer.c	FUNCTION_44
0x400021e	      0x4889442438	             mov qword [rsp + 0x38], rax	       916	trailer.c	FUNCTION_44
0x4000223	            0x31c0	                            xor eax, eax	       916	trailer.c	FUNCTION_44
0x4000225	    0x48c744241000	               mov qword [rsp + 0x10], 0	       917	trailer.c	FUNCTION_44
0x400022e	      0xe800000000	                          call 0x4000233	       920	trailer.c	FUNCTION_44	CALL_1
0x4000233	       0xf1f440000	                   nop dword [rax + rax]	       920	trailer.c	FUNCTION_44	CALL_1
0x4000238	      0x498b542408	                mov rdx, qword [r12 + 8]	       922	trailer.c	FUNCTION_44	WHILE_1
0x400023d	          0x4839d3	                            cmp rbx, rdx	       922	trailer.c	FUNCTION_44	WHILE_1
0x4000240	     0xf839d000000	                           jae 0x40002e3	       922	trailer.c	FUNCTION_44	WHILE_1
0x4000246	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	       923	trailer.c	FUNCTION_44	WHILE_1
0x400024b	        0x488d6b01	                      lea rbp, [rbx + 1]	       923	trailer.c	FUNCTION_44	WHILE_1
0x400024f	         0xfb61c19	             movzx ebx, byte [rcx + rbx]	       923	trailer.c	FUNCTION_44	WHILE_1
0x4000253	          0x80fb0a	                             cmp bl, 0xa	       924	trailer.c	FUNCTION_44	WHILE_1	IF_1
0x4000256	     0xf8504010000	                           jne 0x4000360	       924	trailer.c	FUNCTION_44	WHILE_1	IF_1
0x400025c	          0x4839ea	                            cmp rdx, rbp	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400025f	     0xf867b010000	                           jbe 0x40003e0	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000265	         0xfb60429	             movzx eax, byte [rcx + rbp]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000269	          0x4889eb	                            mov rbx, rbp	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400026c	    0xf68000000000	                      test byte [rax], 1	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000273	            0x7518	                           jne 0x400028d	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000275	            0xeb1f	                           jmp 0x4000296	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000277	    0x660f1f840000	                    nop word [rax + rax]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000280	         0xfb60419	             movzx eax, byte [rcx + rbx]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000284	    0xf68000000000	                      test byte [rax], 1	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400028b	            0x7409	                            je 0x4000296	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400028d	        0x4883c301	                              add rbx, 1	       927	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000291	          0x4839da	                            cmp rdx, rbx	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000294	            0x77ea	                            ja 0x4000280	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x4000296	        0x488b0424	                    mov rax, qword [rsp]	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x400029a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_54
0x400029d	     0xf851d010000	                           jne 0x40003c0	       141	strbuf.h	FUNCTION_54
0x40002a3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_56	CALL_2
0x40002a8	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_56	CALL_2
0x40002ab	      0xe800000000	                          call 0x40002b0	       228	strbuf.h	FUNCTION_56	CALL_2
0x40002b0	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_56	CALL_2
0x40002b5	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_56
0x40002b9	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_56
0x40002be	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_56
0x40002c3	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_56
0x40002c7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_56
0x40002cc	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_56
0x40002d1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_56
0x40002d5	      0x498b542408	                mov rdx, qword [r12 + 8]	       922	trailer.c	FUNCTION_44	WHILE_1
0x40002da	          0x4839d3	                            cmp rbx, rdx	       922	trailer.c	FUNCTION_44	WHILE_1
0x40002dd	     0xf8263ffffff	                            jb 0x4000246	       922	trailer.c	FUNCTION_44	WHILE_1
0x40002e3	          0x4889e7	                            mov rdi, rsp	       935	trailer.c	FUNCTION_44	CALL_4
0x40002e6	      0xe800000000	                          call 0x40002eb	       935	trailer.c	FUNCTION_44	CALL_4
0x40002eb	        0x498b3424	                    mov rsi, qword [r12]	        53	string3.h	FUNCTION_109	CALL_3
0x40002ef	        0x488b0c24	                    mov rcx, qword [rsp]	        53	string3.h	FUNCTION_109	CALL_3
0x40002f3	          0x4889e7	                            mov rdi, rsp	       939	trailer.c	FUNCTION_44	CALL_6
0x40002f6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_109	CALL_3
0x40002fb	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_109	CALL_3
0x4000300	        0x48893424	                    mov qword [rsp], rsi	        53	string3.h	FUNCTION_109	CALL_3
0x4000304	      0x498b742408	                mov rsi, qword [r12 + 8]	        53	string3.h	FUNCTION_109	CALL_3
0x4000309	        0x49890c24	                    mov qword [r12], rcx	        53	string3.h	FUNCTION_109	CALL_3
0x400030d	      0x4989542408	                mov qword [r12 + 8], rdx	        53	string3.h	FUNCTION_109	CALL_3
0x4000312	      0x4889442430	             mov qword [rsp + 0x30], rax	        53	string3.h	FUNCTION_109	CALL_3
0x4000317	      0x48894c2420	             mov qword [rsp + 0x20], rcx	        53	string3.h	FUNCTION_109	CALL_3
0x400031c	      0x4889742408	                mov qword [rsp + 8], rsi	        53	string3.h	FUNCTION_109	CALL_3
0x4000321	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_109	CALL_3
0x4000326	      0x4989442410	             mov qword [r12 + 0x10], rax	        53	string3.h	FUNCTION_109	CALL_3
0x400032b	      0x4889542428	             mov qword [rsp + 0x28], rdx	        53	string3.h	FUNCTION_109	CALL_3
0x4000330	      0x4889742410	             mov qword [rsp + 0x10], rsi	        53	string3.h	FUNCTION_109	CALL_3
0x4000335	      0xe800000000	                          call 0x400033a	       939	trailer.c	FUNCTION_44	CALL_6
0x400033a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       940	trailer.c	FUNCTION_44
0x400033f	    0x644833042528	                xor rax, qword fs:[0x28]	       940	trailer.c	FUNCTION_44
0x4000348	     0xf859a000000	                           jne 0x40003e8	       940	trailer.c	FUNCTION_44
0x400034e	        0x4883c440	                           add rsp, 0x40	       940	trailer.c	FUNCTION_44
0x4000352	              0x5b	                                 pop rbx	       940	trailer.c	FUNCTION_44
0x4000353	              0x5d	                                 pop rbp	       940	trailer.c	FUNCTION_44
0x4000354	            0x415c	                                 pop r12	       940	trailer.c	FUNCTION_44
0x4000356	              0xc3	                                     ret	       940	trailer.c	FUNCTION_44
0x4000357	    0x660f1f840000	                    nop word [rax + rax]	       940	trailer.c	FUNCTION_44
0x4000360	        0x488b0424	                    mov rax, qword [rsp]	       940	trailer.c	FUNCTION_44
0x4000364	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_54
0x4000367	            0x753f	                           jne 0x40003a8	       141	strbuf.h	FUNCTION_54
0x4000369	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_56	CALL_2
0x400036e	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_56	CALL_2
0x4000371	      0xe800000000	                          call 0x4000376	       228	strbuf.h	FUNCTION_56	CALL_2
0x4000376	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_56	CALL_2
0x400037b	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_56
0x400037f	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_56
0x4000384	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_56
0x4000389	          0x881c10	                mov byte [rax + rdx], bl	       229	strbuf.h	FUNCTION_56
0x400038c	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_56
0x4000391	          0x4889eb	                            mov rbx, rbp	       923	trailer.c	FUNCTION_44	WHILE_1
0x4000394	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_56
0x4000399	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_56
0x400039d	      0xe996feffff	                           jmp 0x4000238	       230	strbuf.h	FUNCTION_56
0x40003a2	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_56
0x40003a8	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_54
0x40003ad	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003b1	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003b4	            0x75c5	                           jne 0x400037b	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003b6	            0xebb1	                           jmp 0x4000369	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003b8	     0xf1f84000000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003c0	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_54
0x40003c5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003c9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003cc	     0xf85e3feffff	                           jne 0x40002b5	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003d2	      0xe9ccfeffff	                           jmp 0x40002a3	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003d7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_56	IF_1	CALL_1
0x40003e0	          0x4889eb	                            mov rbx, rbp	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40003e3	      0xe9aefeffff	                           jmp 0x4000296	       926	trailer.c	FUNCTION_44	WHILE_1	IF_1	WHILE_2
0x40003e8	      0xe800000000	                          call 0x40003ed	       940	trailer.c	FUNCTION_44
