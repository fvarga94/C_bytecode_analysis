remove_nonexistent_theirs_shallow	DO,0:IF,2:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,2:FOR,1	53
0x4000f80	            0x4156	                                push r14	       417	shallow.c	FUNCTION_18
0x4000f82	            0x4155	                                push r13	       417	shallow.c	FUNCTION_18
0x4000f84	    0x48ba00000000	                 movabs rdx, 0x100000000	       420	shallow.c	FUNCTION_18	CALL_1
0x4000f8e	            0x4154	                                push r12	       417	shallow.c	FUNCTION_18
0x4000f90	              0x55	                                push rbp	       417	shallow.c	FUNCTION_18
0x4000f91	          0x4989fe	                            mov r14, rdi	       417	shallow.c	FUNCTION_18
0x4000f94	              0x53	                                push rbx	       417	shallow.c	FUNCTION_18
0x4000f95	          0x488b07	                    mov rax, qword [rdi]	       418	shallow.c	FUNCTION_18
0x4000f98	          0x4c8b28	                    mov r13, qword [rax]	       418	shallow.c	FUNCTION_18
0x4000f9b	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fa5	    0x482305000000	             and rax, qword [0x04000fac]	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fac	          0x4839d0	                            cmp rax, rdx	       420	shallow.c	FUNCTION_18	CALL_1
0x4000faf	            0x741b	                            je 0x4000fcc	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fb1	      0xb900000000	                              mov ecx, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fb6	      0xba00000000	                              mov edx, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fbb	      0xbea4010000	                          mov esi, 0x1a4	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fc0	      0xbf00000000	                              mov edi, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fc5	            0x31c0	                            xor eax, eax	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fc7	      0xe800000000	                          call 0x4000fcc	       420	shallow.c	FUNCTION_18	CALL_1
0x4000fcc	        0x418b4620	            mov eax, dword [r14 + 0x20] 	       421	shallow.c	FUNCTION_18	FOR_1
0x4000fd0	            0x85c0	                           test eax, eax	       421	shallow.c	FUNCTION_18	FOR_1
0x4000fd2	            0x7e59	                           jle 0x400102d	       421	shallow.c	FUNCTION_18	FOR_1
0x4000fd4	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       421	shallow.c	FUNCTION_18	FOR_1
0x4000fd8	            0x31db	                            xor ebx, ebx	       421	shallow.c	FUNCTION_18	FOR_1
0x4000fda	            0x31ed	                            xor ebp, ebp	       421	shallow.c	FUNCTION_18	FOR_1
0x4000fdc	            0xeb19	                           jmp 0x4000ff7	       421	shallow.c	FUNCTION_18	FOR_1
0x4000fde	            0x6690	                                     nop	       421	shallow.c	FUNCTION_18	FOR_1
0x4000fe0	            0x39c5	                            cmp ebp, eax	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4000fe2	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4000fe6	            0x740b	                            je 0x4000ff3	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4000fe8	      0x428b4c2004	         mov ecx, dword [rax + r12 + 4] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4000fed	          0x4863d5	                         movsxd rdx, ebp	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4000ff0	          0x890c90	            mov dword [rax + rdx*4], ecx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4000ff3	        0x4883c301	                              add rbx, 1	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4000ff7	        0x48630498	         movsxd rax, dword [rax + rbx*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4000ffb	    0x4c8d249d0000	                        lea r12, [rbx*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001003	        0x488d0480	                  lea rax, [rax + rax*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001007	      0x498d7c8500	                  lea rdi, [r13 + rax*4]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x400100c	      0xe800000000	                          call 0x4001011	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x4001011	          0x83f801	                              cmp eax, 1	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x4001014	          0x8d4301	                      lea eax, [rbx + 1]	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x4001017	          0x83ddff	             sbb ebp, 0xffffffffffffffff	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x400101a	        0x41394620	            cmp dword [r14 + 0x20], eax 	       421	shallow.c	FUNCTION_18	FOR_1
0x400101e	            0x7fc0	                            jg 0x4000fe0	       421	shallow.c	FUNCTION_18	FOR_1
0x4001020	              0x5b	                                 pop rbx	       428	shallow.c	FUNCTION_18
0x4001021	        0x41896e20	             mov dword [r14 + 0x20], ebp	       427	shallow.c	FUNCTION_18
0x4001025	              0x5d	                                 pop rbp	       428	shallow.c	FUNCTION_18
0x4001026	            0x415c	                                 pop r12	       428	shallow.c	FUNCTION_18
0x4001028	            0x415d	                                 pop r13	       428	shallow.c	FUNCTION_18
0x400102a	            0x415e	                                 pop r14	       428	shallow.c	FUNCTION_18
0x400102c	              0xc3	                                     ret	       428	shallow.c	FUNCTION_18
0x400102d	            0x31ed	                            xor ebp, ebp	       421	shallow.c	FUNCTION_18	FOR_1
0x400102f	            0xebef	                           jmp 0x4001020	       421	shallow.c	FUNCTION_18	FOR_1
get_shallow_commits_by_rev_list	DO,0:IF,4:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,12:FOR,4	142
0x4000850	            0x4156	                                push r14	       156	shallow.c	FUNCTION_6
0x4000852	            0x4155	                                push r13	       156	shallow.c	FUNCTION_6
0x4000854	          0x4189fd	                           mov r13d, edi	       156	shallow.c	FUNCTION_6
0x4000857	            0x4154	                                push r12	       156	shallow.c	FUNCTION_6
0x4000859	              0x55	                                push rbp	       156	shallow.c	FUNCTION_6
0x400085a	          0x4989f6	                            mov r14, rsi	       156	shallow.c	FUNCTION_6
0x400085d	              0x53	                                push rbx	       156	shallow.c	FUNCTION_6
0x400085e	            0x89d3	                            mov ebx, edx	       160	shallow.c	FUNCTION_6
0x4000860	            0x89d5	                            mov ebp, edx	       156	shallow.c	FUNCTION_6
0x4000862	             0x9cb	                             or ebx, ecx	       160	shallow.c	FUNCTION_6
0x4000864	          0x4189cc	                           mov r12d, ecx	       156	shallow.c	FUNCTION_6
0x4000867	    0x4881ecd00800	                          sub rsp, 0x8d0	       156	shallow.c	FUNCTION_6
0x400086e	            0x89df	                            mov edi, ebx	       166	shallow.c	FUNCTION_6	CALL_1
0x4000870	    0x64488b042528	                mov rax, qword fs:[0x28]	       156	shallow.c	FUNCTION_6
0x4000879	    0x48898424c808	            mov qword [rsp + 0x8c8], rax	       156	shallow.c	FUNCTION_6
0x4000881	            0x31c0	                            xor eax, eax	       156	shallow.c	FUNCTION_6
0x4000883	    0x48c704240000	                      mov qword [rsp], 0	       157	shallow.c	FUNCTION_6
0x400088b	    0x48c744240800	                  mov qword [rsp + 8], 0	       158	shallow.c	FUNCTION_6
0x4000894	      0xe800000000	                          call 0x4000899	       166	shallow.c	FUNCTION_6	CALL_1
0x4000899	      0xe800000000	                          call 0x400089e	       168	shallow.c	FUNCTION_6	CALL_2
0x400089e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       170	shallow.c	FUNCTION_6	CALL_3
0x40008a3	            0x31f6	                            xor esi, esi	       170	shallow.c	FUNCTION_6	CALL_3
0x40008a5	      0xe800000000	                          call 0x40008aa	       170	shallow.c	FUNCTION_6	CALL_3
0x40008aa	      0x488d542410	                   lea rdx, [rsp + 0x10]	       172	shallow.c	FUNCTION_6	CALL_4
0x40008af	            0x31c9	                            xor ecx, ecx	       172	shallow.c	FUNCTION_6	CALL_4
0x40008b1	          0x4c89f6	                            mov rsi, r14	       172	shallow.c	FUNCTION_6	CALL_4
0x40008b4	          0x4489ef	                           mov edi, r13d	       172	shallow.c	FUNCTION_6	CALL_4
0x40008b7	    0xc70500000000	               mov dword [0x040008c1], 0	       171	shallow.c	FUNCTION_6
0x40008c1	      0xe800000000	                          call 0x40008c6	       172	shallow.c	FUNCTION_6	CALL_4
0x40008c6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008cb	      0xe800000000	                          call 0x40008d0	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008d0	            0x85c0	                           test eax, eax	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008d2	     0xf8567010000	                           jne 0x4000a3f	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008d8	      0x488d4c2408	                      lea rcx, [rsp + 8]	       176	shallow.c	FUNCTION_6	CALL_7
0x40008dd	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       176	shallow.c	FUNCTION_6	CALL_7
0x40008e2	            0x31d2	                            xor edx, edx	       176	shallow.c	FUNCTION_6	CALL_7
0x40008e4	      0xbe00000000	                              mov esi, 0	       176	shallow.c	FUNCTION_6	CALL_7
0x40008e9	      0xe800000000	                          call 0x40008ee	       176	shallow.c	FUNCTION_6	CALL_7
0x40008ee	      0x4c8b742408	                mov r14, qword [rsp + 8]	       179	shallow.c	FUNCTION_6	FOR_1
0x40008f3	          0x4d85f6	                           test r14, r14	       179	shallow.c	FUNCTION_6	FOR_1
0x40008f6	     0xf8424010000	                            je 0x4000a20	       179	shallow.c	FUNCTION_6	FOR_1
0x40008fc	          0x4c89f1	                            mov rcx, r14	       179	shallow.c	FUNCTION_6	FOR_1
0x40008ff	              0x90	                                     nop	       179	shallow.c	FUNCTION_6	FOR_1
0x4000900	          0x488b31	                    mov rsi, qword [rcx]	       180	shallow.c	FUNCTION_6	FOR_1
0x4000903	            0x8b06	                    mov eax, dword [rsi]	       180	shallow.c	FUNCTION_6	FOR_1
0x4000905	            0x89c2	                            mov edx, eax	       180	shallow.c	FUNCTION_6	FOR_1
0x4000907	      0x250f000080	                     and eax, 0x8000000f	       180	shallow.c	FUNCTION_6	FOR_1
0x400090c	          0xc1ea04	                              shr edx, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x400090f	          0x4409e2	                            or edx, r12d	       180	shallow.c	FUNCTION_6	FOR_1
0x4000912	    0x81e2ffffff07	                      and edx, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x4000918	          0xc1e204	                              shl edx, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x400091b	             0x9d0	                             or eax, edx	       180	shallow.c	FUNCTION_6	FOR_1
0x400091d	            0x8906	                    mov dword [rsi], eax	       180	shallow.c	FUNCTION_6	FOR_1
0x400091f	        0x488b4908	                mov rcx, qword [rcx + 8]	       179	shallow.c	FUNCTION_6	FOR_1
0x4000923	          0x4885c9	                           test rcx, rcx	       179	shallow.c	FUNCTION_6	FOR_1
0x4000926	            0x75d8	                           jne 0x4000900	       179	shallow.c	FUNCTION_6	FOR_1
0x4000928	     0xf1f84000000	                   nop dword [rax + rax]	       179	shallow.c	FUNCTION_6	FOR_1
0x4000930	          0x4d8b2e	                    mov r13, qword [r14]	       190	shallow.c	FUNCTION_6	FOR_2
0x4000933	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_27	CALL_1
0x4000935	          0x4c89ef	                            mov rdi, r13	        75	commit.h	FUNCTION_27	CALL_1
0x4000938	      0xe800000000	                          call 0x400093d	        75	commit.h	FUNCTION_27	CALL_1
0x400093d	            0x85c0	                           test eax, eax	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x400093f	     0xf85e2000000	                           jne 0x4000a27	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x4000945	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000949	          0x4885d2	                           test rdx, rdx	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x400094c	            0x750b	                           jne 0x4000959	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x400094e	            0xeb45	                           jmp 0x4000995	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000950	        0x488b5208	                mov rdx, qword [rdx + 8]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000954	          0x4885d2	                           test rdx, rdx	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000957	            0x743c	                            je 0x4000995	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000959	          0x488b02	                    mov rax, qword [rdx]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400095c	            0x8b00	                    mov eax, dword [rax]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400095e	          0xc1e804	                              shr eax, 4	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000961	      0x25ffffff07	                      and eax, 0x7ffffff	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000966	          0x4485e0	                          test eax, r12d	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000969	            0x75e5	                           jne 0x4000950	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400096b	        0x418b4500	                    mov eax, dword [r13]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400096f	          0x4889e6	                            mov rsi, rsp	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000972	          0x4c89ef	                            mov rdi, r13	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000975	            0x89c2	                            mov edx, eax	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000977	      0x250f000080	                     and eax, 0x8000000f	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400097c	          0xc1ea04	                              shr edx, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400097f	             0x9ea	                             or edx, ebp	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000981	    0x81e2ffffff07	                      and edx, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000987	          0xc1e204	                              shl edx, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400098a	             0x9d0	                             or eax, edx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x400098c	        0x41894500	                    mov dword [r13], eax	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000990	      0xe800000000	                          call 0x4000995	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000995	        0x4d8b7608	                mov r14, qword [r14 + 8]	       189	shallow.c	FUNCTION_6	FOR_2
0x4000999	          0x4d85f6	                           test r14, r14	       189	shallow.c	FUNCTION_6	FOR_2
0x400099c	            0x7592	                           jne 0x4000930	       189	shallow.c	FUNCTION_6	FOR_2
0x400099e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       189	shallow.c	FUNCTION_6	FOR_2
0x40009a3	      0xe800000000	                          call 0x40009a8	       204	shallow.c	FUNCTION_6	CALL_12
0x40009a8	        0x488b0424	                    mov rax, qword [rsp]	       210	shallow.c	FUNCTION_6	FOR_4
0x40009ac	          0x41f7d4	                                not r12d	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009af	          0x4885c0	                           test rax, rax	       210	shallow.c	FUNCTION_6	FOR_4
0x40009b2	          0x4889c1	                            mov rcx, rax	       210	shallow.c	FUNCTION_6	FOR_4
0x40009b5	            0x7512	                           jne 0x40009c9	       210	shallow.c	FUNCTION_6	FOR_4
0x40009b7	            0xeb44	                           jmp 0x40009fd	       210	shallow.c	FUNCTION_6	FOR_4
0x40009b9	     0xf1f80000000	                         nop dword [rax]	       210	shallow.c	FUNCTION_6	FOR_4
0x40009c0	        0x488b4908	                mov rcx, qword [rcx + 8]	       210	shallow.c	FUNCTION_6	FOR_4
0x40009c4	          0x4885c9	                           test rcx, rcx	       210	shallow.c	FUNCTION_6	FOR_4
0x40009c7	            0x7434	                            je 0x40009fd	       210	shallow.c	FUNCTION_6	FOR_4
0x40009c9	          0x488b39	                    mov rdi, qword [rcx]	       211	shallow.c	FUNCTION_6	FOR_4
0x40009cc	          0x4189d8	                            mov r8d, ebx	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009cf	            0x8b37	                    mov esi, dword [rdi]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009d1	            0x89f2	                            mov edx, esi	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009d3	          0xc1ea04	                              shr edx, 4	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009d6	    0x81e2ffffff07	                      and edx, 0x7ffffff	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009dc	          0x4121d0	                            and r8d, edx	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009df	          0x4439c3	                            cmp ebx, r8d	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009e2	            0x75dc	                           jne 0x40009c0	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009e4	          0x4421e2	                           and edx, r12d	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009e7	    0x81e60f000080	                     and esi, 0x8000000f	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009ed	          0xc1e204	                              shl edx, 4	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009f0	             0x9f2	                             or edx, esi	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009f2	            0x8917	                    mov dword [rdi], edx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x40009f4	        0x488b4908	                mov rcx, qword [rcx + 8]	       210	shallow.c	FUNCTION_6	FOR_4
0x40009f8	          0x4885c9	                           test rcx, rcx	       210	shallow.c	FUNCTION_6	FOR_4
0x40009fb	            0x75cc	                           jne 0x40009c9	       210	shallow.c	FUNCTION_6	FOR_4
0x40009fd	    0x488b9c24c808	           mov rbx, qword [rsp + 0x8c8] 	       216	shallow.c	FUNCTION_6
0x4000a05	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       216	shallow.c	FUNCTION_6
0x4000a0e	            0x753b	                           jne 0x4000a4b	       216	shallow.c	FUNCTION_6
0x4000a10	    0x4881c4d00800	                          add rsp, 0x8d0	       216	shallow.c	FUNCTION_6
0x4000a17	              0x5b	                                 pop rbx	       216	shallow.c	FUNCTION_6
0x4000a18	              0x5d	                                 pop rbp	       216	shallow.c	FUNCTION_6
0x4000a19	            0x415c	                                 pop r12	       216	shallow.c	FUNCTION_6
0x4000a1b	            0x415d	                                 pop r13	       216	shallow.c	FUNCTION_6
0x4000a1d	            0x415e	                                 pop r14	       216	shallow.c	FUNCTION_6
0x4000a1f	              0xc3	                                     ret	       216	shallow.c	FUNCTION_6
0x4000a20	            0x31ff	                            xor edi, edi	       179	shallow.c	FUNCTION_6	FOR_1
0x4000a22	      0xe97cffffff	                           jmp 0x40009a3	       179	shallow.c	FUNCTION_6	FOR_1
0x4000a27	        0x498d7d04	                      lea rdi, [r13 + 4]	       195	shallow.c	FUNCTION_6	FOR_2	CALL_10
0x4000a2b	      0xe800000000	                          call 0x4000a30	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000a30	      0xbf00000000	                              mov edi, 0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000a35	          0x4889c6	                            mov rsi, rax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000a38	            0x31c0	                            xor eax, eax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000a3a	      0xe800000000	                          call 0x4000a3f	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x4000a3f	      0xbf00000000	                              mov edi, 0	       175	shallow.c	FUNCTION_6	CALL_6
0x4000a44	            0x31c0	                            xor eax, eax	       175	shallow.c	FUNCTION_6	CALL_6
0x4000a46	      0xe800000000	                          call 0x4000a4b	       175	shallow.c	FUNCTION_6	CALL_6
0x4000a4b	      0xe800000000	          call sym.write_shallow_commits	       216	shallow.c	FUNCTION_6
mark_uninteresting	DO,0:IF,1:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,2:FOR,0	12
0x4000080	        0x4883ec08	                              sub rsp, 8	       535	shallow.c	FUNCTION_21
0x4000084	          0x4889f7	                            mov rdi, rsi	       535	shallow.c	FUNCTION_21
0x4000087	      0xbe01000000	                              mov esi, 1	       536	shallow.c	FUNCTION_21	CALL_1
0x400008c	      0xe800000000	                          call 0x4000091	       536	shallow.c	FUNCTION_21	CALL_1
0x4000091	          0x4885c0	                           test rax, rax	       537	shallow.c	FUNCTION_21	IF_1
0x4000094	            0x740b	                            je 0x40000a1	       537	shallow.c	FUNCTION_21	IF_1
0x4000096	          0x830820	                    or dword [rax], 0x20	       539	shallow.c	FUNCTION_21
0x4000099	          0x4889c7	                            mov rdi, rax	       540	shallow.c	FUNCTION_21	CALL_2
0x400009c	      0xe800000000	                          call 0x40000a1	       540	shallow.c	FUNCTION_21	CALL_2
0x40000a1	            0x31c0	                            xor eax, eax	       542	shallow.c	FUNCTION_21
0x40000a3	        0x4883c408	                              add rsp, 8	       542	shallow.c	FUNCTION_21
0x40000a7	              0xc3	                                     ret	       542	shallow.c	FUNCTION_21
setup_alternate_shallow	DO,0:IF,2:functions,0:WHILE,0:SWITCH,0:ELSE,1:CALL,9:FOR,0	70
0x4000b30	            0x4155	                                push r13	       314	shallow.c	FUNCTION_12
0x4000b32	            0x4154	                                push r12	       314	shallow.c	FUNCTION_12
0x4000b34	          0x4989f4	                            mov r12, rsi	       314	shallow.c	FUNCTION_12
0x4000b37	              0x55	                                push rbp	       314	shallow.c	FUNCTION_12
0x4000b38	              0x53	                                push rbx	       314	shallow.c	FUNCTION_12
0x4000b39	          0x4889fb	                            mov rbx, rdi	       314	shallow.c	FUNCTION_12
0x4000b3c	          0x4889d5	                            mov rbp, rdx	       314	shallow.c	FUNCTION_12
0x4000b3f	        0x4883ec28	                           sub rsp, 0x28	       314	shallow.c	FUNCTION_12
0x4000b43	    0x64488b042528	                mov rax, qword fs:[0x28]	       314	shallow.c	FUNCTION_12
0x4000b4c	      0x4889442418	             mov qword [rsp + 0x18], rax	       314	shallow.c	FUNCTION_12
0x4000b51	            0x31c0	                            xor eax, eax	       314	shallow.c	FUNCTION_12
0x4000b53	    0x48c704240000	                      mov qword [rsp], 0	       315	shallow.c	FUNCTION_12
0x4000b5b	    0x48c744240800	                  mov qword [rsp + 8], 0	       315	shallow.c	FUNCTION_12
0x4000b64	    0x48c744241000	               mov qword [rsp + 0x10], 0	       315	shallow.c	FUNCTION_12
0x4000b6d	      0xe800000000	                          call 0x4000b72	       318	shallow.c	FUNCTION_12	CALL_2
0x4000b72	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000b74	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000b79	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000b7c	          0x4889df	                            mov rdi, rbx	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000b7f	      0xe800000000	                          call 0x4000b84	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000b84	    0x833d00000000	cmp dword [0x04000b8b], 0xffffffffffffffff	       220	shallow.c	FUNCTION_7	IF_1
0x4000b8b	     0xf848e000000	                            je 0x4000c1f	       220	shallow.c	FUNCTION_7	IF_1
0x4000b91	          0x4189c5	                           mov r13d, eax	       220	shallow.c	FUNCTION_7	IF_1
0x4000b94	      0xe800000000	                          call 0x4000b99	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000b99	      0xbf00000000	                              mov edi, 0	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000b9e	          0x4889c6	                            mov rsi, rax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000ba1	      0xe800000000	                          call 0x4000ba6	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000ba6	            0x85c0	                           test eax, eax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000ba8	            0x746b	                            je 0x4000c15	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000baa	            0x31c9	                            xor ecx, ecx	       286	shallow.c	FUNCTION_10	CALL_1
0x4000bac	            0x31f6	                            xor esi, esi	       286	shallow.c	FUNCTION_10	CALL_1
0x4000bae	          0x4889ea	                            mov rdx, rbp	       286	shallow.c	FUNCTION_10	CALL_1
0x4000bb1	          0x4889e7	                            mov rdi, rsp	       286	shallow.c	FUNCTION_10	CALL_1
0x4000bb4	      0xe8c7f6ffff	        call sym.write_shallow_commits_1	       286	shallow.c	FUNCTION_10	CALL_1
0x4000bb9	            0x85c0	                           test eax, eax	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000bbb	            0x7533	                           jne 0x4000bf0	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000bbd	    0x49c704240000	                      mov qword [r12], 0	       331	shallow.c	FUNCTION_12	ELSE_1
0x4000bc5	          0x4889e7	                            mov rdi, rsp	       332	shallow.c	FUNCTION_12	CALL_9
0x4000bc8	      0xe800000000	                          call 0x4000bcd	       332	shallow.c	FUNCTION_12	CALL_9
0x4000bcd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       333	shallow.c	FUNCTION_12
0x4000bd2	    0x644833042528	                xor rax, qword fs:[0x28]	       333	shallow.c	FUNCTION_12
0x4000bdb	            0x754e	                           jne 0x4000c2b	       333	shallow.c	FUNCTION_12
0x4000bdd	        0x4883c428	                           add rsp, 0x28	       333	shallow.c	FUNCTION_12
0x4000be1	              0x5b	                                 pop rbx	       333	shallow.c	FUNCTION_12
0x4000be2	              0x5d	                                 pop rbp	       333	shallow.c	FUNCTION_12
0x4000be3	            0x415c	                                 pop r12	       333	shallow.c	FUNCTION_12
0x4000be5	            0x415d	                                 pop r13	       333	shallow.c	FUNCTION_12
0x4000be7	              0xc3	                                     ret	       333	shallow.c	FUNCTION_12
0x4000be8	     0xf1f84000000	                   nop dword [rax + rax]	       333	shallow.c	FUNCTION_12
0x4000bf0	      0x488b542408	                mov rdx, qword [rsp + 8]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000bf5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000bfa	          0x4489ef	                           mov edi, r13d	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000bfd	      0xe800000000	                          call 0x4000c02	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c02	          0x4885c0	                           test rax, rax	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c05	          0x488b3b	                    mov rdi, qword [rbx]	       220	lockfile.h	FUNCTION_31	CALL_1
0x4000c08	            0x7826	                            js 0x4000c30	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000c0a	      0xe800000000	                          call 0x4000c0f	       220	lockfile.h	FUNCTION_31	CALL_1
0x4000c0f	        0x49890424	                    mov qword [r12], rax	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000c13	            0xebb0	                           jmp 0x4000bc5	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000c15	      0xbf00000000	                              mov edi, 0	       224	shallow.c	FUNCTION_7	CALL_4
0x4000c1a	      0xe800000000	                          call 0x4000c1f	       224	shallow.c	FUNCTION_7	CALL_4
0x4000c1f	      0xbf00000000	                              mov edi, 0	       221	shallow.c	FUNCTION_7	CALL_1
0x4000c24	            0x31c0	                            xor eax, eax	       221	shallow.c	FUNCTION_7	CALL_1
0x4000c26	      0xe800000000	                          call 0x4000c2b	       221	shallow.c	FUNCTION_7	CALL_1
0x4000c2b	      0xe800000000	                          call 0x4000c30	       333	shallow.c	FUNCTION_12
0x4000c30	      0xe800000000	                          call 0x4000c35	       220	lockfile.h	FUNCTION_31	CALL_1
0x4000c35	      0xbf00000000	                              mov edi, 0	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000c3a	          0x4889c6	                            mov rsi, rax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000c3d	            0x31c0	                            xor eax, eax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000c3f	      0xe800000000	                          call 0x4000c44	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
setup_temporary_shallow	DO,0:IF,2:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,9:FOR,0	53
0x4000a60	              0x53	                                push rbx	       290	shallow.c	FUNCTION_11
0x4000a61	          0x4889fa	                            mov rdx, rdi	       290	shallow.c	FUNCTION_11
0x4000a64	            0x31c9	                            xor ecx, ecx	       286	shallow.c	FUNCTION_10	CALL_1
0x4000a66	            0x31f6	                            xor esi, esi	       286	shallow.c	FUNCTION_10	CALL_1
0x4000a68	        0x4883ec20	                           sub rsp, 0x20	       290	shallow.c	FUNCTION_11
0x4000a6c	          0x4889e7	                            mov rdi, rsp	       286	shallow.c	FUNCTION_10	CALL_1
0x4000a6f	    0x48c704240000	                      mov qword [rsp], 0	       292	shallow.c	FUNCTION_11
0x4000a77	    0x48c744240800	                  mov qword [rsp + 8], 0	       292	shallow.c	FUNCTION_11
0x4000a80	    0x64488b042528	                mov rax, qword fs:[0x28]	       290	shallow.c	FUNCTION_11
0x4000a89	      0x4889442418	             mov qword [rsp + 0x18], rax	       290	shallow.c	FUNCTION_11
0x4000a8e	            0x31c0	                            xor eax, eax	       290	shallow.c	FUNCTION_11
0x4000a90	    0x48c744241000	               mov qword [rsp + 0x10], 0	       292	shallow.c	FUNCTION_11
0x4000a99	      0xe8e2f7ffff	        call sym.write_shallow_commits_1	       286	shallow.c	FUNCTION_10	CALL_1
0x4000a9e	            0x85c0	                           test eax, eax	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000aa0	      0xba00000000	                              mov edx, 0	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000aa5	            0x7519	                           jne 0x4000ac0	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000aa7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       309	shallow.c	FUNCTION_11
0x4000aac	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	shallow.c	FUNCTION_11
0x4000ab5	          0x4889d0	                            mov rax, rdx	       309	shallow.c	FUNCTION_11
0x4000ab8	            0x7571	                           jne 0x4000b2b	       309	shallow.c	FUNCTION_11
0x4000aba	        0x4883c420	                           add rsp, 0x20	       309	shallow.c	FUNCTION_11
0x4000abe	              0x5b	                                 pop rbx	       309	shallow.c	FUNCTION_11
0x4000abf	              0xc3	                                     ret	       309	shallow.c	FUNCTION_11
0x4000ac0	      0xbf00000000	                              mov edi, 0	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000ac5	            0x31c0	                            xor eax, eax	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000ac7	      0xe800000000	                          call 0x4000acc	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000acc	      0xbe80010000	                          mov esi, 0x180	       189	tempfile.h	FUNCTION_44	CALL_1
0x4000ad1	          0x4889c7	                            mov rdi, rax	       189	tempfile.h	FUNCTION_44	CALL_1
0x4000ad4	      0xe800000000	                          call 0x4000ad9	       189	tempfile.h	FUNCTION_44	CALL_1
0x4000ad9	      0x488b542408	                mov rdx, qword [rsp + 8]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000ade	          0x8b7814	            mov edi, dword [rax + 0x14] 	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000ae1	          0x4889c3	                            mov rbx, rax	       189	tempfile.h	FUNCTION_44	CALL_1
0x4000ae4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000ae9	      0xe800000000	                          call 0x4000aee	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000aee	          0x4885c0	                           test rax, rax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000af1	            0x7821	                            js 0x4000b14	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000af3	          0x4889df	                            mov rdi, rbx	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000af6	      0xe800000000	                          call 0x4000afb	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000afb	            0x85c0	                           test eax, eax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000afd	            0x7815	                            js 0x4000b14	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000aff	          0x4889e7	                            mov rdi, rsp	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000b02	      0xe800000000	                          call 0x4000b07	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000b07	          0x4889df	                            mov rdi, rbx	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000b0a	      0xe800000000	                          call 0x4000b0f	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000b0f	          0x4889c2	                            mov rdx, rax	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000b12	            0xeb93	                           jmp 0x4000aa7	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000b14	          0x4889df	                            mov rdi, rbx	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000b17	      0xe800000000	                          call 0x4000b1c	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000b1c	      0xbf00000000	                              mov edi, 0	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000b21	          0x4889c6	                            mov rsi, rax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000b24	            0x31c0	                            xor eax, eax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000b26	      0xe800000000	                          call 0x4000b2b	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000b2b	      0xe800000000	        call sym.setup_alternate_shallow	       309	shallow.c	FUNCTION_11
assign_shallow_commits_to_refs	DO,0:IF,3:functions,0:WHILE,0:SWITCH,0:ELSE,1:CALL,18:FOR,7	947
0x4001040	            0x4157	                                push r15	       563	shallow.c	FUNCTION_22
0x4001042	            0x4156	                                push r14	       563	shallow.c	FUNCTION_22
0x4001044	            0x4155	                                push r13	       563	shallow.c	FUNCTION_22
0x4001046	            0x4154	                                push r12	       563	shallow.c	FUNCTION_22
0x4001048	              0x55	                                push rbp	       563	shallow.c	FUNCTION_22
0x4001049	              0x53	                                push rbx	       563	shallow.c	FUNCTION_22
0x400104a	    0x4881ecf80000	                           sub rsp, 0xf8	       563	shallow.c	FUNCTION_22
0x4001051	          0x488b07	                    mov rax, qword [rdi]	       564	shallow.c	FUNCTION_22
0x4001054	    0x488994248800	             mov qword [rsp + 0x88], rdx	       563	shallow.c	FUNCTION_22
0x400105c	    0x48ba00000000	                 movabs rdx, 0x100000000	       570	shallow.c	FUNCTION_22	CALL_1
0x4001066	      0x48897c2460	             mov qword [rsp + 0x60], rdi	       563	shallow.c	FUNCTION_22
0x400106b	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	       563	shallow.c	FUNCTION_22
0x4001074	    0x48899c24e800	             mov qword [rsp + 0xe8], rbx	       563	shallow.c	FUNCTION_22
0x400107c	            0x31db	                            xor ebx, ebx	       563	shallow.c	FUNCTION_22
0x400107e	          0x488b00	                    mov rax, qword [rax]	       564	shallow.c	FUNCTION_22
0x4001081	      0x4889742470	             mov qword [rsp + 0x70], rsi	       563	shallow.c	FUNCTION_22
0x4001086	      0x4889442468	             mov qword [rsp + 0x68], rax	       564	shallow.c	FUNCTION_22
0x400108b	        0x488b4728	            mov rax, qword [rdi + 0x28] 	       565	shallow.c	FUNCTION_22
0x400108f	      0x4889442458	             mov qword [rsp + 0x58], rax	       565	shallow.c	FUNCTION_22
0x4001094	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       570	shallow.c	FUNCTION_22	CALL_1
0x400109e	    0x482305000000	             and rax, qword [0x040010a5]	       570	shallow.c	FUNCTION_22	CALL_1
0x40010a5	          0x4839d0	                            cmp rax, rdx	       570	shallow.c	FUNCTION_22	CALL_1
0x40010a8	            0x741b	                            je 0x40010c5	       570	shallow.c	FUNCTION_22	CALL_1
0x40010aa	      0xb900000000	                              mov ecx, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x40010af	      0xba00000000	                              mov edx, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x40010b4	      0xbe3a020000	                          mov esi, 0x23a	       570	shallow.c	FUNCTION_22	CALL_1
0x40010b9	      0xbf00000000	                              mov edi, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x40010be	            0x31c0	                            xor eax, eax	       570	shallow.c	FUNCTION_22	CALL_1
0x40010c0	      0xe800000000	                          call 0x40010c5	       570	shallow.c	FUNCTION_22	CALL_1
0x40010c5	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       571	shallow.c	FUNCTION_22
0x40010ca	          0x8b5020	            mov edx, dword [rax + 0x20] 	       571	shallow.c	FUNCTION_22
0x40010cd	           0x35010	             add edx, dword [rax + 0x10]	       571	shallow.c	FUNCTION_22
0x40010d0	    0x48b8ffffffff	         movabs rax, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_60	IF_1
0x40010da	          0x4863d2	                         movsxd rdx, edx	       571	shallow.c	FUNCTION_22
0x40010dd	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_60	IF_1
0x40010e0	     0xf87a80e0000	                            ja 0x4001f8e	       795	git-compat-util.h	FUNCTION_60	IF_1
0x40010e6	    0x488d3c950000	                        lea rdi, [rdx*4]	       571	shallow.c	FUNCTION_22
0x40010ee	      0xe800000000	                          call 0x40010f3	       571	shallow.c	FUNCTION_22
0x40010f3	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	       572	shallow.c	FUNCTION_22	FOR_1
0x40010f8	          0x4889c7	                            mov rdi, rax	       571	shallow.c	FUNCTION_22
0x40010fb	    0x488984248000	             mov qword [rsp + 0x80], rax	       571	shallow.c	FUNCTION_22
0x4001103	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	       572	shallow.c	FUNCTION_22	FOR_1
0x4001106	            0x85c9	                           test ecx, ecx	       572	shallow.c	FUNCTION_22	FOR_1
0x4001108	     0xf84550e0000	                            je 0x4001f63	       572	shallow.c	FUNCTION_22	FOR_1
0x400110e	        0x488b4b08	                mov rcx, qword [rbx + 8]	       572	shallow.c	FUNCTION_22	FOR_1
0x4001112	            0x31c0	                            xor eax, eax	       572	shallow.c	FUNCTION_22	FOR_1
0x4001114	            0x31d2	                            xor edx, edx	       572	shallow.c	FUNCTION_22	FOR_1
0x4001116	          0x4989d8	                             mov r8, rbx	       572	shallow.c	FUNCTION_22	FOR_1
0x4001119	     0xf1f80000000	                         nop dword [rax]	       572	shallow.c	FUNCTION_22	FOR_1
0x4001120	          0x8b3401	              mov esi, dword [rcx + rax]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001123	          0x83c201	                              add edx, 1	       573	shallow.c	FUNCTION_22	FOR_1
0x4001126	          0x893407	              mov dword [rdi + rax], esi	       573	shallow.c	FUNCTION_22	FOR_1
0x4001129	        0x4883c004	                              add rax, 4	       573	shallow.c	FUNCTION_22	FOR_1
0x400112d	        0x41395010	              cmp dword [r8 + 0x10], edx	       572	shallow.c	FUNCTION_22	FOR_1
0x4001131	            0x77ed	                            ja 0x4001120	       572	shallow.c	FUNCTION_22	FOR_1
0x4001133	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	       572	shallow.c	FUNCTION_22	FOR_1
0x4001138	        0x8954247c	             mov dword [rsp + 0x7c], edx	       572	shallow.c	FUNCTION_22	FOR_1
0x400113c	        0x418b5020	              mov edx, dword [r8 + 0x20]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001140	            0x85d2	                           test edx, edx	       574	shallow.c	FUNCTION_22	FOR_2
0x4001142	     0xf84320e0000	                            je 0x4001f7a	       574	shallow.c	FUNCTION_22	FOR_2
0x4001148	        0x8b4c247c	            mov ecx, dword [rsp + 0x7c] 	       574	shallow.c	FUNCTION_22	FOR_2
0x400114c	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	       574	shallow.c	FUNCTION_22	FOR_2
0x4001154	        0x498b7018	              mov rsi, qword [r8 + 0x18]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001158	          0x4863c1	                         movsxd rax, ecx	       574	shallow.c	FUNCTION_22	FOR_2
0x400115b	        0x488d1483	                  lea rdx, [rbx + rax*4]	       574	shallow.c	FUNCTION_22	FOR_2
0x400115f	            0x31c0	                            xor eax, eax	       574	shallow.c	FUNCTION_22	FOR_2
0x4001161	     0xf1f80000000	                         nop dword [rax]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001168	            0x89c7	                            mov edi, eax	       575	shallow.c	FUNCTION_22	FOR_2
0x400116a	          0x83c101	                              add ecx, 1	       575	shallow.c	FUNCTION_22	FOR_2
0x400116d	          0x83c001	                              add eax, 1	       574	shallow.c	FUNCTION_22	FOR_2
0x4001170	          0x8b3cbe	            mov edi, dword [rsi + rdi*4]	       575	shallow.c	FUNCTION_22	FOR_2
0x4001173	        0x4883c204	                              add rdx, 4	       575	shallow.c	FUNCTION_22	FOR_2
0x4001177	          0x897afc	                mov dword [rdx - 4], edi	       575	shallow.c	FUNCTION_22	FOR_2
0x400117a	        0x41394020	              cmp dword [r8 + 0x20], eax	       574	shallow.c	FUNCTION_22	FOR_2
0x400117e	            0x77e8	                            ja 0x4001168	       574	shallow.c	FUNCTION_22	FOR_2
0x4001180	        0x894c247c	             mov dword [rsp + 0x7c], ecx	       574	shallow.c	FUNCTION_22	FOR_2
0x4001184	      0xe800000000	                          call 0x4001189	       581	shallow.c	FUNCTION_22	CALL_2
0x4001189	            0x85c0	                           test eax, eax	       582	shallow.c	FUNCTION_22	FOR_3
0x400118b	            0x89c3	                            mov ebx, eax	       581	shallow.c	FUNCTION_22	CALL_2
0x400118d	     0xf846c0d0000	                            je 0x4001eff	       582	shallow.c	FUNCTION_22	FOR_3
0x4001193	            0x31ed	                            xor ebp, ebp	       574	shallow.c	FUNCTION_22	FOR_2
0x4001195	            0xeb10	                           jmp 0x40011a7	       574	shallow.c	FUNCTION_22	FOR_2
0x4001197	    0x660f1f840000	                    nop word [rax + rax]	       574	shallow.c	FUNCTION_22	FOR_2
0x40011a0	          0x83c501	                              add ebp, 1	       582	shallow.c	FUNCTION_22	FOR_3
0x40011a3	            0x39dd	                            cmp ebp, ebx	       582	shallow.c	FUNCTION_22	FOR_3
0x40011a5	            0x7424	                            je 0x40011cb	       582	shallow.c	FUNCTION_22	FOR_3
0x40011a7	            0x89ef	                            mov edi, ebp	       583	shallow.c	FUNCTION_22	FOR_3	CALL_3
0x40011a9	      0xe800000000	                          call 0x40011ae	       583	shallow.c	FUNCTION_22	FOR_3	CALL_3
0x40011ae	          0x4885c0	                           test rax, rax	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011b1	            0x74ed	                            je 0x40011a0	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011b3	           0xfb610	                   movzx edx, byte [rax]	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011b6	          0x83e20e	                            and edx, 0xe	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011b9	          0x80fa02	                               cmp dl, 2	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011bc	            0x75e2	                           jne 0x40011a0	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x40011be	          0x83c501	                              add ebp, 1	       582	shallow.c	FUNCTION_22	FOR_3
0x40011c1	    0x8120cfbfffff	             and dword [rax], 0xffffbfcf	       587	shallow.c	FUNCTION_22	FOR_3
0x40011c7	            0x39dd	                            cmp ebp, ebx	       582	shallow.c	FUNCTION_22	FOR_3
0x40011c9	            0x75dc	                           jne 0x40011a7	       582	shallow.c	FUNCTION_22	FOR_3
0x40011cb	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	        90	string3.h	FUNCTION_76	CALL_6
0x40011d3	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_76	CALL_6
0x40011d5	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_76	CALL_6
0x40011da	            0x31f6	                            xor esi, esi	       599	shallow.c	FUNCTION_22	CALL_6
0x40011dc	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_76	CALL_6
0x40011df	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_76	CALL_6
0x40011e2	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       592	shallow.c	FUNCTION_22
0x40011e7	      0xbf00000000	                              mov edi, 0	       599	shallow.c	FUNCTION_22	CALL_6
0x40011ec	    0xc78424a40000	               mov dword [rsp + 0xa4], 1	       430	shallow.c	CALL_2
0x40011f7	    0xc78424a00000	         mov dword [rsp + 0xa0], 0xfffc 	       430	shallow.c	CALL_2
0x4001202	          0x8b5808	                mov ebx, dword [rax + 8]	       592	shallow.c	FUNCTION_22
0x4001205	    0x899c24b80000	             mov dword [rsp + 0xb8], ebx	       592	shallow.c	FUNCTION_22
0x400120c	      0xe800000000	                          call 0x4001211	       599	shallow.c	FUNCTION_22	CALL_6
0x4001211	            0x31f6	                            xor esi, esi	       600	shallow.c	FUNCTION_22	CALL_7
0x4001213	      0xbf00000000	                              mov edi, 0	       600	shallow.c	FUNCTION_22	CALL_7
0x4001218	      0xe800000000	                          call 0x400121d	       600	shallow.c	FUNCTION_22	CALL_7
0x400121d	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	       603	shallow.c	FUNCTION_22	FOR_4
0x4001221	            0x85c0	                           test eax, eax	       603	shallow.c	FUNCTION_22	FOR_4
0x4001223	            0x743c	                            je 0x4001261	       603	shallow.c	FUNCTION_22	FOR_4
0x4001225	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	       574	shallow.c	FUNCTION_22	FOR_2
0x400122a	    0x4c8bac248000	            mov r13, qword [rsp + 0x80] 	       574	shallow.c	FUNCTION_22	FOR_2
0x4001232	            0x31ed	                            xor ebp, ebp	       574	shallow.c	FUNCTION_22	FOR_2
0x4001234	      0x448b74247c	           mov r14d, dword [rsp + 0x7c] 	       574	shallow.c	FUNCTION_22	FOR_2
0x4001239	     0xf1f80000000	                         nop dword [rax]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001240	      0x496344ad00	         movsxd rax, dword [r13 + rbp*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001245	        0x4883c501	                              add rbp, 1	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001249	        0x488d0480	                  lea rax, [rax + rax*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x400124d	        0x498d3c84	                  lea rdi, [r12 + rax*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001251	      0xe800000000	                          call 0x4001256	       604	shallow.c	FUNCTION_22	FOR_4	CALL_8
0x4001256	    0x810800400000	                  or dword [rax], 0x4000	       605	shallow.c	FUNCTION_22	FOR_4
0x400125c	          0x4139ee	                           cmp r14d, ebp	       603	shallow.c	FUNCTION_22	FOR_4
0x400125f	            0x77df	                            ja 0x4001240	       603	shallow.c	FUNCTION_22	FOR_4
0x4001261	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       608	shallow.c	FUNCTION_22	FOR_5
0x4001266	        0x448b7808	               mov r15d, dword [rax + 8]	       608	shallow.c	FUNCTION_22	FOR_5
0x400126a	          0x4585ff	                         test r15d, r15d	       608	shallow.c	FUNCTION_22	FOR_5
0x400126d	     0xf8479050000	                            je 0x40017ec	       608	shallow.c	FUNCTION_22	FOR_5
0x4001273	    0xc74424280000	               mov dword [rsp + 0x28], 0	       608	shallow.c	FUNCTION_22	FOR_5
0x400127b	       0xf1f440000	                   nop dword [rax + rax]	       608	shallow.c	FUNCTION_22	FOR_5
0x4001280	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       609	shallow.c	FUNCTION_22	CALL_9
0x4001284	      0xbe01000000	                              mov esi, 1	       474	shallow.c	FUNCTION_20	CALL_2
0x4001289	        0x488d1480	                  lea rdx, [rax + rax*4]	       609	shallow.c	FUNCTION_22	CALL_9
0x400128d	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       609	shallow.c	FUNCTION_22	CALL_9
0x4001292	          0x488b00	                    mov rax, qword [rax]	       609	shallow.c	FUNCTION_22	CALL_9
0x4001295	    0x48c784249000	               mov qword [rsp + 0x90], 0	       471	shallow.c	FUNCTION_20
0x40012a1	        0x488d3c90	                  lea rdi, [rax + rdx*4]	       609	shallow.c	FUNCTION_22	CALL_9
0x40012a5	      0xe800000000	                          call 0x40012aa	       474	shallow.c	FUNCTION_20	CALL_2
0x40012aa	          0x4885c0	                           test rax, rax	       478	shallow.c	FUNCTION_20	IF_1
0x40012ad	          0x4989c5	                            mov r13, rax	       474	shallow.c	FUNCTION_20	CALL_2
0x40012b0	     0xf84be040000	                            je 0x4001774	       478	shallow.c	FUNCTION_20	IF_1
0x40012b6	        0x448d631f	                  lea r12d, [rbx + 0x1f]	       472	shallow.c	FUNCTION_20
0x40012ba	        0x41c1ec05	                             shr r12d, 5	       472	shallow.c	FUNCTION_20
0x40012be	          0x4589e6	                          mov r14d, r12d	       798	git-compat-util.h	FUNCTION_60
0x40012c1	    0x4a8d04b50000	                        lea rax, [r14*4]	       798	git-compat-util.h	FUNCTION_60
0x40012c9	          0x4889c7	                            mov rdi, rax	       481	shallow.c	FUNCTION_20	CALL_3
0x40012cc	      0x4889442410	             mov qword [rsp + 0x10], rax	       798	git-compat-util.h	FUNCTION_60
0x40012d1	      0xe800000000	                          call 0x40012d6	       481	shallow.c	FUNCTION_20	CALL_3
0x40012d6	    0x448bbc24d800	           mov r15d, dword [rsp + 0xd8] 	       447	shallow.c	FUNCTION_19	IF_1
0x40012de	          0x4889c3	                            mov rbx, rax	       481	shallow.c	FUNCTION_20	CALL_3
0x40012e1	    0x428d0ca50000	                        lea ecx, [r12*4]	       445	shallow.c	FUNCTION_19
0x40012e9	          0x4585ff	                         test r15d, r15d	       447	shallow.c	FUNCTION_19	IF_1
0x40012ec	            0x741a	                            je 0x4001308	       447	shallow.c	FUNCTION_19	IF_1
0x40012ee	    0x488bac24c800	            mov rbp, qword [rsp + 0xc8] 	       447	shallow.c	FUNCTION_19	IF_1
0x40012f6	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	       447	shallow.c	FUNCTION_19	IF_1
0x40012fe	            0x89c8	                            mov eax, ecx	       447	shallow.c	FUNCTION_19	IF_1
0x4001300	          0x4829ea	                            sub rdx, rbp	       447	shallow.c	FUNCTION_19	IF_1
0x4001303	          0x4839d0	                            cmp rax, rdx	       447	shallow.c	FUNCTION_19	IF_1
0x4001306	            0x7e61	                           jle 0x4001369	       447	shallow.c	FUNCTION_19	IF_1
0x4001308	    0x81f900000800	                        cmp ecx, 0x80000	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x400130e	     0xf879a0c0000	                            ja 0x4001fae	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x4001314	        0x418d4701	                      lea eax, [r15 + 1]	       451	shallow.c	FUNCTION_19	IF_1
0x4001318	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	       452	shallow.c	FUNCTION_19	IF_1
0x4001320	          0x890c24	                    mov dword [rsp], ecx	       452	shallow.c	FUNCTION_19	IF_1
0x4001323	    0x488d34c50000	                        lea rsi, [rax*8]	       452	shallow.c	FUNCTION_19	IF_1
0x400132b	    0x898424d80000	             mov dword [rsp + 0xd8], eax	       451	shallow.c	FUNCTION_19	IF_1
0x4001332	      0xe800000000	                          call 0x4001337	       452	shallow.c	FUNCTION_19	IF_1
0x4001337	      0xbf00000800	                        mov edi, 0x80000	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400133c	          0x4889c5	                            mov rbp, rax	       452	shallow.c	FUNCTION_19	IF_1
0x400133f	    0x48898424c000	             mov qword [rsp + 0xc0], rax	       452	shallow.c	FUNCTION_19	IF_1
0x4001347	      0xe800000000	                          call 0x400134c	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400134c	          0x4489fa	                           mov edx, r15d	       454	shallow.c	FUNCTION_19	IF_1
0x400134f	      0x488944d500	            mov qword [rbp + rdx*8], rax	       454	shallow.c	FUNCTION_19	IF_1
0x4001354	    0x488d90000008	                lea rdx, [rax + 0x80000]	       455	shallow.c	FUNCTION_19	IF_1
0x400135b	          0x4889c5	                            mov rbp, rax	       455	shallow.c	FUNCTION_19	IF_1
0x400135e	          0x8b0424	                    mov eax, dword [rsp]	       455	shallow.c	FUNCTION_19	IF_1
0x4001361	    0x48899424d000	             mov qword [rsp + 0xd0], rdx	       455	shallow.c	FUNCTION_19	IF_1
0x4001369	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        90	string3.h	FUNCTION_76	CALL_6
0x400136e	          0x4801e8	                            add rax, rbp	       458	shallow.c	FUNCTION_19
0x4001371	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_76	CALL_6
0x4001373	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_76	CALL_6
0x4001376	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       458	shallow.c	FUNCTION_19
0x400137e	      0xe800000000	                          call 0x4001383	        90	string3.h	FUNCTION_76	CALL_6
0x4001383	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	       484	shallow.c	FUNCTION_20
0x4001387	      0xba01000000	                              mov edx, 1	       484	shallow.c	FUNCTION_20
0x400138c	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       485	shallow.c	FUNCTION_20	CALL_6
0x4001394	          0x4c89ef	                            mov rdi, r13	       485	shallow.c	FUNCTION_20	CALL_6
0x4001397	          0x4989dd	                            mov r13, rbx	       485	shallow.c	FUNCTION_20	CALL_6
0x400139a	            0x89c8	                            mov eax, ecx	       484	shallow.c	FUNCTION_20
0x400139c	            0xd3e2	                             shl edx, cl	       484	shallow.c	FUNCTION_20
0x400139e	          0xc1e805	                              shr eax, 5	       484	shallow.c	FUNCTION_20
0x40013a1	         0x9548500	             or dword [rbp + rax*4], edx	       484	shallow.c	FUNCTION_20
0x40013a5	      0xe800000000	                          call 0x40013aa	       485	shallow.c	FUNCTION_20	CALL_6
0x40013aa	        0x488d4310	                   lea rax, [rbx + 0x10]	       485	shallow.c	FUNCTION_20	CALL_6
0x40013ae	      0x4489642418	            mov dword [rsp + 0x18], r12d	       485	shallow.c	FUNCTION_20	CALL_6
0x40013b3	          0x4839c5	                            cmp rbp, rax	       485	shallow.c	FUNCTION_20	CALL_6
0x40013b6	        0x488d4510	                   lea rax, [rbp + 0x10]	       485	shallow.c	FUNCTION_20	CALL_6
0x40013ba	           0xf93c2	                                setae dl	       485	shallow.c	FUNCTION_20	CALL_6
0x40013bd	          0x4839c3	                            cmp rbx, rax	       485	shallow.c	FUNCTION_20	CALL_6
0x40013c0	           0xf93c0	                                setae al	       485	shallow.c	FUNCTION_20	CALL_6
0x40013c3	             0x9d0	                             or eax, edx	       485	shallow.c	FUNCTION_20	CALL_6
0x40013c5	        0x4183fc06	                             cmp r12d, 6	       485	shallow.c	FUNCTION_20	CALL_6
0x40013c9	           0xf97c2	                                 seta dl	       485	shallow.c	FUNCTION_20	CALL_6
0x40013cc	        0x4183e50f	                           and r13d, 0xf	       485	shallow.c	FUNCTION_20	CALL_6
0x40013d0	        0x49c1ed02	                              shr r13, 2	       485	shallow.c	FUNCTION_20	CALL_6
0x40013d4	            0x21d0	                            and eax, edx	       485	shallow.c	FUNCTION_20	CALL_6
0x40013d6	          0x49f7dd	                                 neg r13	       485	shallow.c	FUNCTION_20	CALL_6
0x40013d9	        0x88442420	               mov byte [rsp + 0x20], al	       485	shallow.c	FUNCTION_20	CALL_6
0x40013dd	          0x4489e0	                           mov eax, r12d	       485	shallow.c	FUNCTION_20	CALL_6
0x40013e0	        0x4183e503	                             and r13d, 3	       485	shallow.c	FUNCTION_20	CALL_6
0x40013e4	          0x4539e5	                          cmp r13d, r12d	       485	shallow.c	FUNCTION_20	CALL_6
0x40013e7	        0x450f47ec	                        cmova r13d, r12d	       485	shallow.c	FUNCTION_20	CALL_6
0x40013eb	          0x4429e8	                           sub eax, r13d	       485	shallow.c	FUNCTION_20	CALL_6
0x40013ee	      0x44896c2450	            mov dword [rsp + 0x50], r13d	       485	shallow.c	FUNCTION_20	CALL_6
0x40013f3	        0x89442478	             mov dword [rsp + 0x78], eax	       485	shallow.c	FUNCTION_20	CALL_6
0x40013f7	          0x83e804	                              sub eax, 4	       485	shallow.c	FUNCTION_20	CALL_6
0x40013fa	          0xc1e802	                              shr eax, 2	       485	shallow.c	FUNCTION_20	CALL_6
0x40013fd	          0x83c001	                              add eax, 1	       485	shallow.c	FUNCTION_20	CALL_6
0x4001400	        0x89442430	             mov dword [rsp + 0x30], eax	       485	shallow.c	FUNCTION_20	CALL_6
0x4001404	          0xc1e002	                              shl eax, 2	       485	shallow.c	FUNCTION_20	CALL_6
0x4001407	        0x89442454	             mov dword [rsp + 0x54], eax	       485	shallow.c	FUNCTION_20	CALL_6
0x400140b	      0x418d4424ff	                      lea eax, [r12 - 1]	       485	shallow.c	FUNCTION_20	CALL_6
0x4001410	          0x4429e8	                           sub eax, r13d	       485	shallow.c	FUNCTION_20	CALL_6
0x4001413	        0x89442438	             mov dword [rsp + 0x38], eax	       485	shallow.c	FUNCTION_20	CALL_6
0x4001417	          0x4489e8	                           mov eax, r13d	       485	shallow.c	FUNCTION_20	CALL_6
0x400141a	        0x48c1e002	                              shl rax, 2	       485	shallow.c	FUNCTION_20	CALL_6
0x400141e	        0x488d3c03	                    lea rdi, [rbx + rax]	       485	shallow.c	FUNCTION_20	CALL_6
0x4001422	          0x4801e8	                            add rax, rbp	       485	shallow.c	FUNCTION_20	CALL_6
0x4001425	      0x4889442440	             mov qword [rsp + 0x40], rax	       485	shallow.c	FUNCTION_20	CALL_6
0x400142a	      0x48897c2448	             mov qword [rsp + 0x48], rdi	       485	shallow.c	FUNCTION_20	CALL_6
0x400142f	              0x90	                                     nop	       485	shallow.c	FUNCTION_20	CALL_6
0x4001430	    0x4883bc249000	               cmp qword [rsp + 0x90], 0	       486	shallow.c	FUNCTION_20	WHILE_1
0x4001439	     0xf8475030000	                            je 0x40017b4	       486	shallow.c	FUNCTION_20	WHILE_1
0x400143f	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001447	      0xe800000000	                          call 0x400144c	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x400144c	        0x448b7820	           mov r15d, dword [rax + 0x20] 	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001450	    0x448b8c24a000	            mov r9d, dword [rsp + 0xa0] 	       430	shallow.c	CALL_2
0x4001458	            0x31d2	                            xor edx, edx	       430	shallow.c	CALL_2
0x400145a	          0x4989c4	                            mov r12, rax	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x400145d	    0x448bac24a800	           mov r13d, dword [rsp + 0xa8] 	       430	shallow.c	CALL_2
0x4001465	          0x4489f8	                           mov eax, r15d	       430	shallow.c	CALL_2
0x4001468	          0x41f7f1	                                 div r9d	       430	shallow.c	CALL_2
0x400146b	          0x4189c6	                           mov r14d, eax	       430	shallow.c	CALL_2
0x400146e	          0x4539ee	                          cmp r14d, r13d	       430	shallow.c	CALL_2
0x4001471	     0xf8399010000	                           jae 0x4001610	       430	shallow.c	CALL_2
0x4001477	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       430	shallow.c	CALL_2
0x400147f	        0x4e8d34f0	                  lea r14, [rax + r14*8]	       430	shallow.c	CALL_2
0x4001483	          0x498b3e	                    mov rdi, qword [r14]	       430	shallow.c	CALL_2
0x4001486	          0x4885ff	                           test rdi, rdi	       430	shallow.c	CALL_2
0x4001489	     0xf84e4010000	                            je 0x4001673	       430	shallow.c	CALL_2
0x400148f	    0x448bac24a400	           mov r13d, dword [rsp + 0xa4] 	       430	shallow.c	CALL_2
0x4001497	        0x418b3424	                    mov esi, dword [r12]	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x400149b	            0x89f1	                            mov ecx, esi	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x400149d	          0xc1e904	                              shr ecx, 4	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x40014a0	    0x81e1ffffff07	                      and ecx, 0x7ffffff	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x40014a6	          0xf6c103	                              test cl, 3	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x40014a9	            0x7585	                           jne 0x4001430	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x40014ab	            0x31d2	                            xor edx, edx	       430	shallow.c	CALL_2
0x40014ad	          0x4489f8	                           mov eax, r15d	       430	shallow.c	CALL_2
0x40014b0	          0x83c901	                               or ecx, 1	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x40014b3	          0x41f7f1	                                 div r9d	       430	shallow.c	CALL_2
0x40014b6	    0x81e60f000080	                     and esi, 0x8000000f	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x40014bc	            0x89c8	                            mov eax, ecx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x40014be	          0xc1e004	                              shl eax, 4	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x40014c1	            0x89f1	                            mov ecx, esi	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x40014c3	             0x9c1	                             or ecx, eax	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x40014c5	        0x41890c24	                    mov dword [r12], ecx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x40014c9	        0x440fafea	                          imul r13d, edx	       430	shallow.c	CALL_2
0x40014cd	        0x4e8d2cef	                  lea r13, [rdi + r13*8]	       430	shallow.c	CALL_2
0x40014d1	        0x498b7500	                    mov rsi, qword [r13]	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x40014d5	          0x4885f6	                           test rsi, rsi	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x40014d8	     0xf84c2010000	                            je 0x40016a0	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x40014de	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_73	CALL_3
0x40014e3	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_73	CALL_3
0x40014e6	      0xe800000000	                          call 0x40014eb	        53	string3.h	FUNCTION_73	CALL_3
0x40014eb	      0x448b742418	           mov r14d, dword [rsp + 0x18] 	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40014f0	          0x4585f6	                         test r14d, r14d	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40014f3	     0xf84a4000000	                            je 0x400159d	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40014f9	      0x807c242000	                cmp byte [rsp + 0x20], 0	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40014fe	     0xf8494020000	                            je 0x4001798	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001504	        0x8b742450	            mov esi, dword [rsp + 0x50] 	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001508	            0x31c0	                            xor eax, eax	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400150a	            0x85f6	                           test esi, esi	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400150c	            0x742a	                            je 0x4001538	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400150e	          0x8b4500	                    mov eax, dword [rbp]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001511	             0x903	                     or dword [rbx], eax	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001513	          0x83fe01	                              cmp esi, 1	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001516	      0xb801000000	                              mov eax, 1	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400151b	            0x741b	                            je 0x4001538	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400151d	          0x8b4504	                mov eax, dword [rbp + 4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001520	           0x94304	                 or dword [rbx + 4], eax	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001523	          0x83fe03	                              cmp esi, 3	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001526	      0xb802000000	                              mov eax, 2	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400152b	            0x750b	                           jne 0x4001538	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400152d	          0x8b4508	                mov eax, dword [rbp + 8]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001530	           0x94308	                 or dword [rbx + 8], eax	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001533	      0xb803000000	                              mov eax, 3	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001538	      0x837c243802	               cmp dword [rsp + 0x38], 2	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400153d	            0x7635	                           jbe 0x4001574	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400153f	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001544	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001549	            0x31d2	                            xor edx, edx	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400154b	            0x31c9	                            xor ecx, ecx	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400154d	      0xf30f6f0417	        movdqu xmm0, xmmword [rdi + rdx]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001552	          0x83c101	                              add ecx, 1	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001555	      0x660feb0416	           por xmm0, xmmword [rsi + rdx]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400155a	         0xf290416	        movaps xmmword [rsi + rdx], xmm0	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400155e	        0x4883c210	                           add rdx, 0x10	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001562	        0x394c2430	            cmp dword [rsp + 0x30], ecx 	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001566	            0x77e5	                            ja 0x400154d	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001568	        0x8b7c2454	            mov edi, dword [rsp + 0x54] 	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400156c	             0x1f8	                            add eax, edi	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400156e	        0x3b7c2478	            cmp edi, dword [rsp + 0x78] 	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001572	            0x7429	                            je 0x400159d	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001574	            0x89c2	                            mov edx, eax	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001576	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400157a	        0x8b4c9500	            mov ecx, dword [rbp + rdx*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400157e	           0x90c93	             or dword [rbx + rdx*4], ecx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001581	          0x8d5001	                      lea edx, [rax + 1]	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001584	            0x39d7	                            cmp edi, edx	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001586	            0x7615	                           jbe 0x400159d	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001588	          0x83c002	                              add eax, 2	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400158b	        0x8b4c9500	            mov ecx, dword [rbp + rdx*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400158f	           0x90c93	             or dword [rbx + rdx*4], ecx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001592	            0x39c7	                            cmp edi, eax	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001594	            0x7607	                           jbe 0x400159d	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x4001596	        0x8b548500	            mov edx, dword [rbp + rax*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400159a	           0x91483	             or dword [rbx + rax*4], edx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400159d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40015a2	          0x4889df	                            mov rdi, rbx	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40015a5	        0x498b7500	                    mov rsi, qword [r13]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40015a9	      0xe800000000	                          call 0x40015ae	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40015ae	            0x85c0	                           test eax, eax	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40015b0	     0xf85fa000000	                           jne 0x40016b0	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x40015b6	    0x41f704240040	                test dword [r12], 0x4000	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x40015be	     0xf856cfeffff	                           jne 0x4001430	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x40015c4	            0x31f6	                            xor esi, esi	        75	commit.h	FUNCTION_27	CALL_1
0x40015c6	          0x4c89e7	                            mov rdi, r12	        75	commit.h	FUNCTION_27	CALL_1
0x40015c9	      0xe800000000	                          call 0x40015ce	        75	commit.h	FUNCTION_27	CALL_1
0x40015ce	            0x85c0	                           test eax, eax	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x40015d0	     0xf85e6090000	                           jne 0x4001fbc	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x40015d6	      0x4d8b6c2430	            mov r13, qword [r12 + 0x30] 	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40015db	          0x4d85ed	                           test r13, r13	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40015de	            0x7515	                           jne 0x40015f5	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40015e0	      0xe94bfeffff	                           jmp 0x4001430	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40015e5	           0xf1f00	                         nop dword [rax]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40015e8	        0x4d8b6d08	                mov r13, qword [r13 + 8]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40015ec	          0x4d85ed	                           test r13, r13	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40015ef	     0xf843bfeffff	                            je 0x4001430	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x40015f5	        0x498b7d00	                    mov rdi, qword [r13]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x40015f9	          0xf60710	                   test byte [rdi], 0x10	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x40015fc	            0x75ea	                           jne 0x40015e8	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x40015fe	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001606	      0xe800000000	                          call 0x400160b	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x400160b	            0xebdb	                           jmp 0x40015e8	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x400160d	           0xf1f00	                         nop dword [rax]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001610	        0x418d7601	                      lea esi, [r14 + 1]	       430	shallow.c	CALL_2
0x4001614	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	       430	shallow.c	CALL_2
0x400161c	      0x44894c240c	              mov dword [rsp + 0xc], r9d	       430	shallow.c	CALL_2
0x4001621	          0x893424	                    mov dword [rsp], esi	       430	shallow.c	CALL_2
0x4001624	        0x48c1e603	                              shl rsi, 3	       430	shallow.c	CALL_2
0x4001628	      0xe800000000	                          call 0x400162d	       430	shallow.c	CALL_2
0x400162d	    0x830500000000	               add dword [0x04001634], 1	       430	shallow.c	CALL_2
0x4001634	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	       430	shallow.c	CALL_2
0x4001639	          0x8b1424	                    mov edx, dword [rsp]	       430	shallow.c	CALL_2
0x400163c	    0x48898424b000	             mov qword [rsp + 0xb0], rax	       430	shallow.c	CALL_2
0x4001644	         0xf1f4000	                         nop dword [rax]	       430	shallow.c	CALL_2
0x4001648	          0x4489e9	                           mov ecx, r13d	       430	shallow.c	CALL_2
0x400164b	        0x4183c501	                             add r13d, 1	       430	shallow.c	CALL_2
0x400164f	          0x4539ee	                          cmp r14d, r13d	       430	shallow.c	CALL_2
0x4001652	    0x48c704c80000	              mov qword [rax + rcx*8], 0	       430	shallow.c	CALL_2
0x400165a	            0x73ec	                           jae 0x4001648	       430	shallow.c	CALL_2
0x400165c	        0x4e8d34f0	                  lea r14, [rax + r14*8]	       430	shallow.c	CALL_2
0x4001660	    0x899424a80000	             mov dword [rsp + 0xa8], edx	       430	shallow.c	CALL_2
0x4001667	          0x498b3e	                    mov rdi, qword [r14]	       430	shallow.c	CALL_2
0x400166a	          0x4885ff	                           test rdi, rdi	       430	shallow.c	CALL_2
0x400166d	     0xf851cfeffff	                           jne 0x400148f	       430	shallow.c	CALL_2
0x4001673	    0x8bb424a40000	            mov esi, dword [rsp + 0xa4] 	       430	shallow.c	CALL_2
0x400167a	          0x4489cf	                            mov edi, r9d	       430	shallow.c	CALL_2
0x400167d	        0x44890c24	                    mov dword [rsp], r9d	       430	shallow.c	CALL_2
0x4001681	          0x4989f5	                            mov r13, rsi	       430	shallow.c	CALL_2
0x4001684	        0x48c1e603	                              shl rsi, 3	       430	shallow.c	CALL_2
0x4001688	      0xe800000000	                          call 0x400168d	       430	shallow.c	CALL_2
0x400168d	        0x448b0c24	                    mov r9d, dword [rsp]	       430	shallow.c	CALL_2
0x4001691	          0x498906	                    mov qword [r14], rax	       430	shallow.c	CALL_2
0x4001694	          0x4889c7	                            mov rdi, rax	       430	shallow.c	CALL_2
0x4001697	      0xe9fbfdffff	                           jmp 0x4001497	       430	shallow.c	CALL_2
0x400169c	         0xf1f4000	                         nop dword [rax]	       430	shallow.c	CALL_2
0x40016a0	        0x49896d00	                    mov qword [r13], rbp	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x40016a4	      0xe90dffffff	                           jmp 0x40015b6	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x40016a9	     0xf1f80000000	                         nop dword [rax]	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x40016b0	    0x8b8424b80000	            mov eax, dword [rsp + 0xb8] 	       445	shallow.c	FUNCTION_19
0x40016b7	    0x448bbc24d800	           mov r15d, dword [rsp + 0xd8] 	       447	shallow.c	FUNCTION_19	IF_1
0x40016bf	        0x448d701f	                  lea r14d, [rax + 0x1f]	       445	shallow.c	FUNCTION_19
0x40016c3	        0x41c1ee05	                             shr r14d, 5	       445	shallow.c	FUNCTION_19
0x40016c7	        0x41c1e602	                             shl r14d, 2	       445	shallow.c	FUNCTION_19
0x40016cb	          0x4585ff	                         test r15d, r15d	       447	shallow.c	FUNCTION_19	IF_1
0x40016ce	            0x741b	                            je 0x40016eb	       447	shallow.c	FUNCTION_19	IF_1
0x40016d0	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	       447	shallow.c	FUNCTION_19	IF_1
0x40016d8	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	       447	shallow.c	FUNCTION_19	IF_1
0x40016e0	          0x4489f0	                           mov eax, r14d	       447	shallow.c	FUNCTION_19	IF_1
0x40016e3	          0x4829fa	                            sub rdx, rdi	       447	shallow.c	FUNCTION_19	IF_1
0x40016e6	          0x4839d0	                            cmp rax, rdx	       447	shallow.c	FUNCTION_19	IF_1
0x40016e9	            0x7e60	                           jle 0x400174b	       447	shallow.c	FUNCTION_19	IF_1
0x40016eb	    0x4181fe000008	                       cmp r14d, 0x80000	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x40016f2	     0xf87a7080000	                            ja 0x4001f9f	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x40016f8	        0x418d4701	                      lea eax, [r15 + 1]	       451	shallow.c	FUNCTION_19	IF_1
0x40016fc	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	       452	shallow.c	FUNCTION_19	IF_1
0x4001704	    0x488d34c50000	                        lea rsi, [rax*8]	       452	shallow.c	FUNCTION_19	IF_1
0x400170c	    0x898424d80000	             mov dword [rsp + 0xd8], eax	       451	shallow.c	FUNCTION_19	IF_1
0x4001713	      0xe800000000	                          call 0x4001718	       452	shallow.c	FUNCTION_19	IF_1
0x4001718	      0xbf00000800	                        mov edi, 0x80000	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400171d	    0x48898424c000	             mov qword [rsp + 0xc0], rax	       452	shallow.c	FUNCTION_19	IF_1
0x4001725	        0x48890424	                    mov qword [rsp], rax	       452	shallow.c	FUNCTION_19	IF_1
0x4001729	      0xe800000000	                          call 0x400172e	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400172e	        0x488b1424	                    mov rdx, qword [rsp]	       454	shallow.c	FUNCTION_19	IF_1
0x4001732	          0x4889c7	                            mov rdi, rax	       455	shallow.c	FUNCTION_19	IF_1
0x4001735	        0x4a8904fa	            mov qword [rdx + r15*8], rax	       454	shallow.c	FUNCTION_19	IF_1
0x4001739	    0x488d90000008	                lea rdx, [rax + 0x80000]	       455	shallow.c	FUNCTION_19	IF_1
0x4001740	          0x4489f0	                           mov eax, r14d	       455	shallow.c	FUNCTION_19	IF_1
0x4001743	    0x48899424d000	             mov qword [rsp + 0xd0], rdx	       455	shallow.c	FUNCTION_19	IF_1
0x400174b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_73	CALL_3
0x4001750	          0x4801f8	                            add rax, rdi	       458	shallow.c	FUNCTION_19
0x4001753	        0x49897d00	                    mov qword [r13], rdi	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001757	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_73	CALL_3
0x400175a	    0x48898424c800	             mov qword [rsp + 0xc8], rax	       458	shallow.c	FUNCTION_19
0x4001762	      0xe800000000	                          call 0x4001767	        53	string3.h	FUNCTION_73	CALL_3
0x4001767	      0xe94afeffff	                           jmp 0x40015b6	        53	string3.h	FUNCTION_73	CALL_3
0x400176c	          0x4889df	                            mov rdi, rbx	       530	shallow.c	FUNCTION_20	CALL_19
0x400176f	      0xe800000000	                          call 0x4001774	       530	shallow.c	FUNCTION_20	CALL_19
0x4001774	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	       608	shallow.c	FUNCTION_22	FOR_5
0x4001779	      0x8344242801	               add dword [rsp + 0x28], 1	       608	shallow.c	FUNCTION_22	FOR_5
0x400177e	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       608	shallow.c	FUNCTION_22	FOR_5
0x4001782	          0x394308	                cmp dword [rbx + 8], eax	       608	shallow.c	FUNCTION_22	FOR_5
0x4001785	            0x7665	                           jbe 0x40017ec	       608	shallow.c	FUNCTION_22	FOR_5
0x4001787	    0x8b9c24b80000	            mov ebx, dword [rsp + 0xb8] 	       608	shallow.c	FUNCTION_22	FOR_5
0x400178e	      0xe9edfaffff	                           jmp 0x4001280	       608	shallow.c	FUNCTION_22	FOR_5
0x4001793	       0xf1f440000	                   nop dword [rax + rax]	       608	shallow.c	FUNCTION_22	FOR_5
0x4001798	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400179c	            0x31c0	                            xor eax, eax	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x400179e	            0x6690	                                     nop	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40017a0	        0x8b548500	            mov edx, dword [rbp + rax*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40017a4	           0x91483	             or dword [rbx + rax*4], edx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40017a7	        0x4883c001	                              add rax, 1	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40017ab	            0x39c1	                            cmp ecx, eax	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40017ad	            0x77f1	                            ja 0x40017a0	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40017af	      0xe9e9fdffff	                           jmp 0x400159d	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40017b4	      0xe800000000	                          call 0x40017b9	       523	shallow.c	FUNCTION_20	CALL_17
0x40017b9	            0x31ed	                            xor ebp, ebp	       524	shallow.c	FUNCTION_20	FOR_3
0x40017bb	            0x85c0	                           test eax, eax	       524	shallow.c	FUNCTION_20	FOR_3
0x40017bd	          0x4189c4	                           mov r12d, eax	       523	shallow.c	FUNCTION_20	CALL_17
0x40017c0	            0x750e	                           jne 0x40017d0	       524	shallow.c	FUNCTION_20	FOR_3
0x40017c2	            0xeba8	                           jmp 0x400176c	       524	shallow.c	FUNCTION_20	FOR_3
0x40017c4	         0xf1f4000	                         nop dword [rax]	       524	shallow.c	FUNCTION_20	FOR_3
0x40017c8	          0x83c501	                              add ebp, 1	       524	shallow.c	FUNCTION_20	FOR_3
0x40017cb	          0x4139ec	                           cmp r12d, ebp	       524	shallow.c	FUNCTION_20	FOR_3
0x40017ce	            0x749c	                            je 0x400176c	       524	shallow.c	FUNCTION_20	FOR_3
0x40017d0	            0x89ef	                            mov edi, ebp	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x40017d2	      0xe800000000	                          call 0x40017d7	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x40017d7	          0x4885c0	                           test rax, rax	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40017da	            0x74ec	                            je 0x40017c8	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40017dc	           0xfb610	                   movzx edx, byte [rax]	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40017df	          0x83e20e	                            and edx, 0xe	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40017e2	          0x80fa02	                               cmp dl, 2	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40017e5	            0x75e1	                           jne 0x40017c8	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40017e7	          0x8320ef	             and dword [rax], 0xffffffef	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40017ea	            0xebdc	                           jmp 0x40017c8	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x40017ec	    0x48837c247000	               cmp qword [rsp + 0x70], 0	       611	shallow.c	FUNCTION_22	IF_2
0x40017f2	     0xf843a020000	                            je 0x4001a32	       611	shallow.c	FUNCTION_22	IF_2
0x40017f8	    0x8b8424b80000	            mov eax, dword [rsp + 0xb8] 	       612	shallow.c	FUNCTION_22	IF_2
0x40017ff	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	        90	string3.h	FUNCTION_76	CALL_6
0x4001804	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_76	CALL_6
0x4001806	        0x448d681f	                  lea r13d, [rax + 0x1f]	       612	shallow.c	FUNCTION_22	IF_2
0x400180a	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       613	shallow.c	FUNCTION_22	IF_2	CALL_10
0x400180f	        0x41c1ed05	                             shr r13d, 5	       612	shallow.c	FUNCTION_22	IF_2
0x4001813	          0x488b00	                    mov rax, qword [rax]	       613	shallow.c	FUNCTION_22	IF_2	CALL_10
0x4001816	        0x41c1e502	                             shl r13d, 2	       612	shallow.c	FUNCTION_22	IF_2
0x400181a	        0x48635008	            movsxd rdx, dword [rax + 8] 	        90	string3.h	FUNCTION_76	CALL_6
0x400181e	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_76	CALL_6
0x4001822	      0xe800000000	                          call 0x4001827	        90	string3.h	FUNCTION_76	CALL_6
0x4001827	      0x448b5c247c	           mov r11d, dword [rsp + 0x7c] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400182c	    0x488b9c24b000	            mov rbx, qword [rsp + 0xb0] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001834	          0x4585db	                         test r11d, r11d	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001837	     0xf8417010000	                            je 0x4001954	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400183d	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001844	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400184c	            0x89c7	                            mov edi, eax	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400184e	        0x8944240c	              mov dword [rsp + 0xc], eax	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001852	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001859	          0x4889f5	                            mov rbp, rsi	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400185c	        0x89442410	             mov dword [rsp + 0x10], eax	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001860	        0x48c1e003	                              shl rax, 3	       430	shallow.c	CALL_2
0x4001864	      0x4889442420	             mov qword [rsp + 0x20], rax	       430	shallow.c	CALL_2
0x4001869	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	       430	shallow.c	CALL_2
0x400186d	          0x83e801	                              sub eax, 1	       430	shallow.c	CALL_2
0x4001870	      0x488d448604	              lea rax, [rsi + rax*4 + 4]	       430	shallow.c	CALL_2
0x4001875	        0x48890424	                    mov qword [rsp], rax	       430	shallow.c	CALL_2
0x4001879	            0x89f8	                            mov eax, edi	       430	shallow.c	CALL_2
0x400187b	      0x4889442428	             mov qword [rsp + 0x28], rax	       430	shallow.c	CALL_2
0x4001880	          0x4489e8	                           mov eax, r13d	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001883	      0x4889442418	             mov qword [rsp + 0x18], rax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001888	     0xf1f84000000	                   nop dword [rax + rax]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001890	        0x48634500	                 movsxd rax, dword [rbp]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4001894	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4001899	        0x488d0480	                  lea rax, [rax + rax*4]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x400189d	        0x488d3c86	                  lea rdi, [rsi + rax*4]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x40018a1	      0xe800000000	                          call 0x40018a6	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x40018a6	          0x8b4020	            mov eax, dword [rax + 0x20] 	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x40018a9	            0x31d2	                            xor edx, edx	       430	shallow.c	CALL_2
0x40018ab	    0x448bac24a800	           mov r13d, dword [rsp + 0xa8] 	       430	shallow.c	CALL_2
0x40018b3	        0xf774240c	                   div dword [rsp + 0xc]	       430	shallow.c	CALL_2
0x40018b7	          0x4439e8	                           cmp eax, r13d	       430	shallow.c	CALL_2
0x40018ba	          0x4189d4	                           mov r12d, edx	       430	shallow.c	CALL_2
0x40018bd	          0x4189c6	                           mov r14d, eax	       430	shallow.c	CALL_2
0x40018c0	            0x7245	                            jb 0x4001907	       430	shallow.c	CALL_2
0x40018c2	          0x8d7001	                      lea esi, [rax + 1]	       430	shallow.c	CALL_2
0x40018c5	          0x4889df	                            mov rdi, rbx	       430	shallow.c	CALL_2
0x40018c8	          0x4989f7	                            mov r15, rsi	       430	shallow.c	CALL_2
0x40018cb	        0x48c1e603	                              shl rsi, 3	       430	shallow.c	CALL_2
0x40018cf	      0xe800000000	                          call 0x40018d4	       430	shallow.c	CALL_2
0x40018d4	    0x830500000000	               add dword [0x040018db], 1	       430	shallow.c	CALL_2
0x40018db	    0x48898424b000	             mov qword [rsp + 0xb0], rax	       430	shallow.c	CALL_2
0x40018e3	       0xf1f440000	                   nop dword [rax + rax]	       430	shallow.c	CALL_2
0x40018e8	          0x4489ea	                           mov edx, r13d	       430	shallow.c	CALL_2
0x40018eb	        0x4183c501	                             add r13d, 1	       430	shallow.c	CALL_2
0x40018ef	          0x4539ee	                          cmp r14d, r13d	       430	shallow.c	CALL_2
0x40018f2	    0x48c704d00000	              mov qword [rax + rdx*8], 0	       430	shallow.c	CALL_2
0x40018fa	            0x73ec	                           jae 0x40018e8	       430	shallow.c	CALL_2
0x40018fc	    0x4489bc24a800	            mov dword [rsp + 0xa8], r15d	       430	shallow.c	CALL_2
0x4001904	          0x4889c3	                            mov rbx, rax	       430	shallow.c	CALL_2
0x4001907	          0x4589f0	                           mov r8d, r14d	       430	shallow.c	CALL_2
0x400190a	        0x4a8d0cc3	                   lea rcx, [rbx + r8*8]	       430	shallow.c	CALL_2
0x400190e	          0x488b01	                    mov rax, qword [rcx]	       430	shallow.c	CALL_2
0x4001911	          0x4885c0	                           test rax, rax	       430	shallow.c	CALL_2
0x4001914	     0xf84f7000000	                            je 0x4001a11	       430	shallow.c	CALL_2
0x400191a	          0x4489e2	                           mov edx, r12d	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x400191d	       0xfaf542410	            imul edx, dword [rsp + 0x10]	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x4001922	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x4001926	          0x4885ff	                           test rdi, rdi	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x4001929	            0x741b	                            je 0x4001946	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x400192b	        0x48634500	                 movsxd rax, dword [rbp]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x400192f	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001934	        0x4c8d24c6	                  lea r12, [rsi + rax*8]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001938	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x400193d	      0xe800000000	                          call 0x4001942	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001942	        0x49890424	                    mov qword [r12], rax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x4001946	        0x4883c504	                              add rbp, 4	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x400194a	        0x483b2c24	                    cmp rbp, qword [rsp]	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400194e	     0xf853cffffff	                           jne 0x4001890	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001954	    0x8b8424a80000	            mov eax, dword [rsp + 0xa8] 	       430	shallow.c	CALL_2
0x400195b	            0x85c0	                           test eax, eax	       430	shallow.c	CALL_2
0x400195d	            0x7423	                            je 0x4001982	       430	shallow.c	CALL_2
0x400195f	          0x83e801	                              sub eax, 1	       430	shallow.c	CALL_2
0x4001962	          0x4889dd	                            mov rbp, rbx	       430	shallow.c	CALL_2
0x4001965	      0x4c8d64c308	              lea r12, [rbx + rax*8 + 8]	       430	shallow.c	CALL_2
0x400196a	    0x660f1f440000	                    nop word [rax + rax]	       430	shallow.c	CALL_2
0x4001970	        0x488b7d00	                    mov rdi, qword [rbp]	       430	shallow.c	CALL_2
0x4001974	        0x4883c508	                              add rbp, 8	       430	shallow.c	CALL_2
0x4001978	      0xe800000000	                          call 0x400197d	       430	shallow.c	CALL_2
0x400197d	          0x4c39e5	                            cmp rbp, r12	       430	shallow.c	CALL_2
0x4001980	            0x75ee	                           jne 0x4001970	       430	shallow.c	CALL_2
0x4001982	          0x4889df	                            mov rdi, rbx	       430	shallow.c	CALL_2
0x4001985	    0xc78424a80000	               mov dword [rsp + 0xa8], 0	       430	shallow.c	CALL_2
0x4001990	            0x31db	                            xor ebx, ebx	       630	shallow.c	FUNCTION_22	FOR_7
0x4001992	      0xe800000000	                          call 0x4001997	       430	shallow.c	CALL_2
0x4001997	    0x448ba424d800	           mov r12d, dword [rsp + 0xd8] 	       630	shallow.c	FUNCTION_22	FOR_7
0x400199f	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       430	shallow.c	CALL_2
0x40019ab	    0x488bac24c000	            mov rbp, qword [rsp + 0xc0] 	       430	shallow.c	CALL_2
0x40019b3	          0x4585e4	                         test r12d, r12d	       630	shallow.c	FUNCTION_22	FOR_7
0x40019b6	     0xf849a050000	                            je 0x4001f56	       630	shallow.c	FUNCTION_22	FOR_7
0x40019bc	         0xf1f4000	                         nop dword [rax]	       630	shallow.c	FUNCTION_22	FOR_7
0x40019c0	      0x488b7cdd00	            mov rdi, qword [rbp + rbx*8]	       631	shallow.c	FUNCTION_22	CALL_16
0x40019c5	        0x4883c301	                              add rbx, 1	       631	shallow.c	FUNCTION_22	CALL_16
0x40019c9	      0xe800000000	                          call 0x40019ce	       631	shallow.c	FUNCTION_22	CALL_16
0x40019ce	          0x4139dc	                           cmp r12d, ebx	       630	shallow.c	FUNCTION_22	FOR_7
0x40019d1	            0x77ed	                            ja 0x40019c0	       630	shallow.c	FUNCTION_22	FOR_7
0x40019d3	          0x4889ef	                            mov rdi, rbp	       632	shallow.c	FUNCTION_22	CALL_17
0x40019d6	      0xe800000000	                          call 0x40019db	       632	shallow.c	FUNCTION_22	CALL_17
0x40019db	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       633	shallow.c	FUNCTION_22	CALL_18
0x40019e3	      0xe800000000	                          call 0x40019e8	       633	shallow.c	FUNCTION_22	CALL_18
0x40019e8	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	       634	shallow.c	FUNCTION_22
0x40019f0	    0x644833042528	                xor rax, qword fs:[0x28]	       634	shallow.c	FUNCTION_22
0x40019f9	     0xf85d6050000	                           jne 0x4001fd5	       634	shallow.c	FUNCTION_22
0x40019ff	    0x4881c4f80000	                           add rsp, 0xf8	       634	shallow.c	FUNCTION_22
0x4001a06	              0x5b	                                 pop rbx	       634	shallow.c	FUNCTION_22
0x4001a07	              0x5d	                                 pop rbp	       634	shallow.c	FUNCTION_22
0x4001a08	            0x415c	                                 pop r12	       634	shallow.c	FUNCTION_22
0x4001a0a	            0x415d	                                 pop r13	       634	shallow.c	FUNCTION_22
0x4001a0c	            0x415e	                                 pop r14	       634	shallow.c	FUNCTION_22
0x4001a0e	            0x415f	                                 pop r15	       634	shallow.c	FUNCTION_22
0x4001a10	              0xc3	                                     ret	       634	shallow.c	FUNCTION_22
0x4001a11	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       430	shallow.c	CALL_2
0x4001a16	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       430	shallow.c	CALL_2
0x4001a1b	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       430	shallow.c	CALL_2
0x4001a20	      0xe800000000	                          call 0x4001a25	       430	shallow.c	CALL_2
0x4001a25	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       430	shallow.c	CALL_2
0x4001a2a	          0x488901	                    mov qword [rcx], rax	       430	shallow.c	CALL_2
0x4001a2d	      0xe9e8feffff	                           jmp 0x400191a	       430	shallow.c	CALL_2
0x4001a32	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	       669	shallow.c	FUNCTION_25
0x4001a37	          0x488b03	                    mov rax, qword [rbx]	       669	shallow.c	FUNCTION_25
0x4001a3a	          0x488b00	                    mov rax, qword [rax]	       669	shallow.c	FUNCTION_25
0x4001a3d	      0x4889442418	             mov qword [rsp + 0x18], rax	       669	shallow.c	FUNCTION_25
0x4001a42	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       673	shallow.c	FUNCTION_25
0x4001a46	          0x8b4008	                mov eax, dword [rax + 8]	       673	shallow.c	FUNCTION_25
0x4001a49	          0x8d503e	                   lea edx, [rax + 0x3e]	       673	shallow.c	FUNCTION_25
0x4001a4c	          0x83c01f	                           add eax, 0x1f	       673	shallow.c	FUNCTION_25
0x4001a4f	           0xf48c2	                          cmovs eax, edx	       673	shallow.c	FUNCTION_25
0x4001a52	    0x48ba00000000	                 movabs rdx, 0x100000000	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a5c	          0xc1f805	                              sar eax, 5	       673	shallow.c	FUNCTION_25
0x4001a5f	        0x8944240c	              mov dword [rsp + 0xc], eax	       673	shallow.c	FUNCTION_25
0x4001a63	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a6d	    0x482305000000	             and rax, qword [0x04001a74]	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a74	          0x4839d0	                            cmp rax, rdx	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a77	            0x741b	                            je 0x4001a94	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a79	      0xb900000000	                              mov ecx, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a7e	      0xba00000000	                              mov edx, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a83	      0xbea4020000	                          mov esi, 0x2a4	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a88	      0xbf00000000	                              mov edi, 0	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a8d	            0x31c0	                            xor eax, eax	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a8f	      0xe800000000	                          call 0x4001a94	       676	shallow.c	FUNCTION_25	CALL_1
0x4001a94	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       677	shallow.c	FUNCTION_25	IF_1
0x4001a9c	          0x4885ff	                           test rdi, rdi	       677	shallow.c	FUNCTION_25	IF_1
0x4001a9f	            0x7418	                            je 0x4001ab9	       677	shallow.c	FUNCTION_25	IF_1
0x4001aa1	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       678	shallow.c	FUNCTION_25	CALL_2
0x4001aa6	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_76	CALL_6
0x4001aa8	        0x488b4028	            mov rax, qword [rax + 0x28] 	       678	shallow.c	FUNCTION_25	CALL_2
0x4001aac	        0x48635008	            movsxd rdx, dword [rax + 8] 	        90	string3.h	FUNCTION_76	CALL_6
0x4001ab0	        0x48c1e202	                              shl rdx, 2	        90	string3.h	FUNCTION_76	CALL_6
0x4001ab4	      0xe800000000	                          call 0x4001ab9	        90	string3.h	FUNCTION_76	CALL_6
0x4001ab9	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001abe	          0x4531f6	                          xor r14d, r14d	       681	shallow.c	FUNCTION_25	FOR_1
0x4001ac1	    0x488b9c24b000	            mov rbx, qword [rsp + 0xb0] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001ac9	        0x448b5020	           mov r10d, dword [rax + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001acd	          0x4585d2	                         test r10d, r10d	       681	shallow.c	FUNCTION_25	FOR_1
0x4001ad0	     0xf8ec2010000	                           jle 0x4001c98	       681	shallow.c	FUNCTION_25	FOR_1
0x4001ad6	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001add	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       681	shallow.c	FUNCTION_25	FOR_1
0x4001ae1	          0x4531e4	                          xor r12d, r12d	       430	shallow.c	CALL_2
0x4001ae4	    0x448bbc24a000	           mov r15d, dword [rsp + 0xa0] 	       430	shallow.c	CALL_2
0x4001aec	    0x488b9c24b000	            mov rbx, qword [rsp + 0xb0] 	       430	shallow.c	CALL_2
0x4001af4	          0x4531ed	                          xor r13d, r13d	       430	shallow.c	CALL_2
0x4001af7	    0x488bac248800	            mov rbp, qword [rsp + 0x88] 	       430	shallow.c	CALL_2
0x4001aff	          0x4531f6	                          xor r14d, r14d	       430	shallow.c	CALL_2
0x4001b02	            0x89c2	                            mov edx, eax	       430	shallow.c	CALL_2
0x4001b04	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       430	shallow.c	CALL_2
0x4001b09	    0x488d34d50000	                        lea rsi, [rdx*8]	       430	shallow.c	CALL_2
0x4001b11	        0x89542410	             mov dword [rsp + 0x10], edx	       430	shallow.c	CALL_2
0x4001b15	          0x8d57ff	                      lea edx, [rdi - 1]	       430	shallow.c	CALL_2
0x4001b18	          0x4489ff	                           mov edi, r15d	       430	shallow.c	CALL_2
0x4001b1b	      0x44897c2450	            mov dword [rsp + 0x50], r15d	       430	shallow.c	CALL_2
0x4001b20	          0x4d89e7	                            mov r15, r12	       430	shallow.c	CALL_2
0x4001b23	        0x48893424	                    mov qword [rsp], rsi	       430	shallow.c	CALL_2
0x4001b27	        0x488b4018	            mov rax, qword [rax + 0x18] 	       430	shallow.c	CALL_2
0x4001b2b	    0x488d34950400	                    lea rsi, [rdx*4 + 4]	       430	shallow.c	CALL_2
0x4001b33	      0x48897c2430	             mov qword [rsp + 0x30], rdi	       430	shallow.c	CALL_2
0x4001b38	      0x4889742420	             mov qword [rsp + 0x20], rsi	       430	shallow.c	CALL_2
0x4001b3d	        0x4a630438	           movsxd rax, dword [rax + r15]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001b41	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001b46	        0x488d0480	                  lea rax, [rax + rax*4]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001b4a	        0x488d3c86	                  lea rdi, [rsi + rax*4]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001b4e	      0xe800000000	                          call 0x4001b53	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001b53	          0x8b4020	            mov eax, dword [rax + 0x20] 	       684	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4001b56	            0x31d2	                            xor edx, edx	       430	shallow.c	CALL_2
0x4001b58	        0xf7742450	                  div dword [rsp + 0x50]	       430	shallow.c	CALL_2
0x4001b5c	        0x89542428	             mov dword [rsp + 0x28], edx	       430	shallow.c	CALL_2
0x4001b60	    0x8b9424a80000	            mov edx, dword [rsp + 0xa8] 	       430	shallow.c	CALL_2
0x4001b67	          0x4189c4	                           mov r12d, eax	       430	shallow.c	CALL_2
0x4001b6a	            0x39d0	                            cmp eax, edx	       430	shallow.c	CALL_2
0x4001b6c	        0x89542440	             mov dword [rsp + 0x40], edx	       430	shallow.c	CALL_2
0x4001b70	            0x724b	                            jb 0x4001bbd	       430	shallow.c	CALL_2
0x4001b72	          0x8d7001	                      lea esi, [rax + 1]	       430	shallow.c	CALL_2
0x4001b75	          0x4889df	                            mov rdi, rbx	       430	shallow.c	CALL_2
0x4001b78	        0x89742438	             mov dword [rsp + 0x38], esi	       430	shallow.c	CALL_2
0x4001b7c	        0x48c1e603	                              shl rsi, 3	       430	shallow.c	CALL_2
0x4001b80	      0xe800000000	                          call 0x4001b85	       430	shallow.c	CALL_2
0x4001b85	    0x830500000000	               add dword [0x04001b8c], 1	       430	shallow.c	CALL_2
0x4001b8c	      0x448b542438	           mov r10d, dword [rsp + 0x38] 	       430	shallow.c	CALL_2
0x4001b91	        0x8b542440	            mov edx, dword [rsp + 0x40] 	       430	shallow.c	CALL_2
0x4001b95	    0x48898424b000	             mov qword [rsp + 0xb0], rax	       430	shallow.c	CALL_2
0x4001b9d	           0xf1f00	                         nop dword [rax]	       430	shallow.c	CALL_2
0x4001ba0	            0x89d1	                            mov ecx, edx	       430	shallow.c	CALL_2
0x4001ba2	          0x83c201	                              add edx, 1	       430	shallow.c	CALL_2
0x4001ba5	          0x4139d4	                           cmp r12d, edx	       430	shallow.c	CALL_2
0x4001ba8	    0x48c704c80000	              mov qword [rax + rcx*8], 0	       430	shallow.c	CALL_2
0x4001bb0	            0x73ee	                           jae 0x4001ba0	       430	shallow.c	CALL_2
0x4001bb2	    0x44899424a800	            mov dword [rsp + 0xa8], r10d	       430	shallow.c	CALL_2
0x4001bba	          0x4889c3	                            mov rbx, rax	       430	shallow.c	CALL_2
0x4001bbd	          0x4489e1	                           mov ecx, r12d	       430	shallow.c	CALL_2
0x4001bc0	        0x4c8d24cb	                  lea r12, [rbx + rcx*8]	       430	shallow.c	CALL_2
0x4001bc4	        0x498b0424	                    mov rax, qword [r12]	       430	shallow.c	CALL_2
0x4001bc8	          0x4885c0	                           test rax, rax	       430	shallow.c	CALL_2
0x4001bcb	     0xf84e2020000	                            je 0x4001eb3	       430	shallow.c	CALL_2
0x4001bd1	      0x448b642428	           mov r12d, dword [rsp + 0x28] 	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4001bd6	    0x440faf642410	           imul r12d, dword [rsp + 0x10]	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4001bdc	        0x4a8b34e0	            mov rsi, qword [rax + r12*8]	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4001be0	          0x4885f6	                           test rsi, rsi	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4001be3	            0x743b	                            je 0x4001c20	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4001be5	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001bea	          0x4585c9	                           test r9d, r9d	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001bed	            0x7e31	                           jle 0x4001c20	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001bef	          0x448b06	                    mov r8d, dword [rsi]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001bf2	          0x4585c0	                           test r8d, r8d	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001bf5	            0x7555	                           jne 0x4001c4c	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001bf7	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001bfc	        0x488d4604	                      lea rax, [rsi + 4]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c00	        0x488d143e	                    lea rdx, [rsi + rdi]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c04	            0xeb15	                           jmp 0x4001c1b	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c10	        0x4883c004	                              add rax, 4	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c14	          0x8b78fc	                mov edi, dword [rax - 4]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c17	            0x85ff	                           test edi, edi	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c19	            0x7531	                           jne 0x4001c4c	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c1b	          0x4839d0	                            cmp rax, rdx	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001c1e	            0x75f0	                           jne 0x4001c10	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4001c20	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001c25	        0x4183c501	                             add r13d, 1	       681	shallow.c	FUNCTION_25	FOR_1
0x4001c29	        0x443b6820	           cmp r13d, dword [rax + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001c2d	            0x7d69	                           jge 0x4001c98	       681	shallow.c	FUNCTION_25	FOR_1
0x4001c2f	          0x4539f5	                          cmp r13d, r14d	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001c32	        0x488b4018	            mov rax, qword [rax + 0x18] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001c36	            0x740b	                            je 0x4001c43	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001c38	      0x428b4c3804	         mov ecx, dword [rax + r15 + 4] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001c3d	          0x4963d6	                        movsxd rdx, r14d	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001c40	          0x890c90	            mov dword [rax + rdx*4], ecx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001c43	        0x4983c704	                              add r15, 4	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001c47	      0xe9f1feffff	                           jmp 0x4001b3d	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4001c4c	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x4001c51	          0x4885ed	                           test rbp, rbp	       655	shallow.c	FUNCTION_24	IF_1
0x4001c54	        0x488b4028	            mov rax, qword [rax + 0x28] 	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x4001c58	          0x8b7808	                mov edi, dword [rax + 8]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_5
0x4001c5b	            0x7428	                            je 0x4001c85	       655	shallow.c	FUNCTION_24	IF_1
0x4001c5d	            0x85ff	                           test edi, edi	       657	shallow.c	FUNCTION_24	FOR_1
0x4001c5f	            0x7424	                            je 0x4001c85	       657	shallow.c	FUNCTION_24	FOR_1
0x4001c61	            0x31c9	                            xor ecx, ecx	       657	shallow.c	FUNCTION_24	FOR_1
0x4001c63	    0x41ba01000000	                             mov r10d, 1	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c69	            0x89c8	                            mov eax, ecx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c6b	          0x4489d2	                           mov edx, r10d	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c6e	          0xc1e805	                              shr eax, 5	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c71	            0xd3e2	                             shl edx, cl	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c73	          0x851486	          test dword [rsi + rax*4], edx 	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c76	            0x7405	                            je 0x4001c7d	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c78	      0x83448d0001	              add dword [rbp + rcx*4], 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c7d	        0x4883c101	                              add rcx, 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001c81	            0x39cf	                            cmp edi, ecx	       657	shallow.c	FUNCTION_24	FOR_1
0x4001c83	            0x77e4	                            ja 0x4001c69	       657	shallow.c	FUNCTION_24	FOR_1
0x4001c85	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001c8a	        0x4183c601	                             add r14d, 1	       691	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4001c8e	        0x4183c501	                             add r13d, 1	       681	shallow.c	FUNCTION_25	FOR_1
0x4001c92	        0x443b6820	           cmp r13d, dword [rax + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x4001c96	            0x7c97	                            jl 0x4001c2f	       681	shallow.c	FUNCTION_25	FOR_1
0x4001c98	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	       695	shallow.c	FUNCTION_25
0x4001c9d	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       698	shallow.c	FUNCTION_25	CALL_7
0x4001ca5	      0xbf00000000	                              mov edi, 0	       698	shallow.c	FUNCTION_25	CALL_7
0x4001caa	    0x48c784249000	               mov qword [rsp + 0x90], 0	        90	string3.h	FUNCTION_76	CALL_6
0x4001cb6	    0x48c784249800	               mov qword [rsp + 0x98], 0	        90	string3.h	FUNCTION_76	CALL_6
0x4001cc2	        0x45897720	            mov dword [r15 + 0x20], r14d	       695	shallow.c	FUNCTION_25
0x4001cc6	      0xe800000000	                          call 0x4001ccb	       698	shallow.c	FUNCTION_25	CALL_7
0x4001ccb	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       699	shallow.c	FUNCTION_25	CALL_8
0x4001cd3	      0xbf00000000	                              mov edi, 0	       699	shallow.c	FUNCTION_25	CALL_8
0x4001cd8	      0xe800000000	                          call 0x4001cdd	       699	shallow.c	FUNCTION_25	CALL_8
0x4001cdd	        0x418b4f10	            mov ecx, dword [r15 + 0x10] 	       702	shallow.c	FUNCTION_25	FOR_3
0x4001ce1	            0x85c9	                           test ecx, ecx	       702	shallow.c	FUNCTION_25	FOR_3
0x4001ce3	     0xf8ef8010000	                           jle 0x4001ee1	       702	shallow.c	FUNCTION_25	FOR_3
0x4001ce9	    0x8b9424a40000	            mov edx, dword [rsp + 0xa4] 	       702	shallow.c	FUNCTION_25	FOR_3
0x4001cf0	    0x8bb424a00000	            mov esi, dword [rsp + 0xa0] 	       702	shallow.c	FUNCTION_25	FOR_3
0x4001cf7	          0x4531f6	                          xor r14d, r14d	       430	shallow.c	CALL_2
0x4001cfa	        0x498b4708	                mov rax, qword [r15 + 8]	       430	shallow.c	CALL_2
0x4001cfe	    0x48c744241000	               mov qword [rsp + 0x10], 0	       430	shallow.c	CALL_2
0x4001d07	    0xc70424000000	                      mov dword [rsp], 0	       430	shallow.c	CALL_2
0x4001d0e	    0x488d3cd50000	                        lea rdi, [rdx*8]	       430	shallow.c	CALL_2
0x4001d16	        0x89742428	             mov dword [rsp + 0x28], esi	       430	shallow.c	CALL_2
0x4001d1a	        0x89542430	             mov dword [rsp + 0x30], edx	       430	shallow.c	CALL_2
0x4001d1e	      0x4889742438	             mov qword [rsp + 0x38], rsi	       430	shallow.c	CALL_2
0x4001d23	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       430	shallow.c	CALL_2
0x4001d28	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       430	shallow.c	CALL_2
0x4001d2c	          0x8d6fff	                      lea ebp, [rdi - 1]	       430	shallow.c	CALL_2
0x4001d2f	        0x48c1e502	                              shl rbp, 2	       430	shallow.c	CALL_2
0x4001d33	          0x4989ed	                            mov r13, rbp	       430	shallow.c	CALL_2
0x4001d36	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001d3b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001d40	        0x48630430	           movsxd rax, dword [rax + rsi]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001d44	        0x488d0480	                  lea rax, [rax + rax*4]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001d48	        0x488d3c87	                  lea rdi, [rdi + rax*4]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001d4c	      0xe800000000	                          call 0x4001d51	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001d51	          0x4989c4	                            mov r12, rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001d54	          0x8b4020	            mov eax, dword [rax + 0x20] 	       705	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4001d57	            0x31d2	                            xor edx, edx	       430	shallow.c	CALL_2
0x4001d59	        0xf7742428	                  div dword [rsp + 0x28]	       430	shallow.c	CALL_2
0x4001d5d	        0x89542450	             mov dword [rsp + 0x50], edx	       430	shallow.c	CALL_2
0x4001d61	    0x8b9424a80000	            mov edx, dword [rsp + 0xa8] 	       430	shallow.c	CALL_2
0x4001d68	          0x4189c7	                           mov r15d, eax	       430	shallow.c	CALL_2
0x4001d6b	            0x39d0	                            cmp eax, edx	       430	shallow.c	CALL_2
0x4001d6d	        0x89542440	             mov dword [rsp + 0x40], edx	       430	shallow.c	CALL_2
0x4001d71	            0x7249	                            jb 0x4001dbc	       430	shallow.c	CALL_2
0x4001d73	          0x8d7001	                      lea esi, [rax + 1]	       430	shallow.c	CALL_2
0x4001d76	          0x4889df	                            mov rdi, rbx	       430	shallow.c	CALL_2
0x4001d79	          0x4889f5	                            mov rbp, rsi	       430	shallow.c	CALL_2
0x4001d7c	        0x48c1e603	                              shl rsi, 3	       430	shallow.c	CALL_2
0x4001d80	      0xe800000000	                          call 0x4001d85	       430	shallow.c	CALL_2
0x4001d85	    0x830500000000	               add dword [0x04001d8c], 1	       430	shallow.c	CALL_2
0x4001d8c	        0x8b542440	            mov edx, dword [rsp + 0x40] 	       430	shallow.c	CALL_2
0x4001d90	    0x48898424b000	             mov qword [rsp + 0xb0], rax	       430	shallow.c	CALL_2
0x4001d98	     0xf1f84000000	                   nop dword [rax + rax]	       430	shallow.c	CALL_2
0x4001da0	            0x89d1	                            mov ecx, edx	       430	shallow.c	CALL_2
0x4001da2	          0x83c201	                              add edx, 1	       430	shallow.c	CALL_2
0x4001da5	          0x4139d7	                           cmp r15d, edx	       430	shallow.c	CALL_2
0x4001da8	    0x48c704c80000	              mov qword [rax + rcx*8], 0	       430	shallow.c	CALL_2
0x4001db0	            0x73ee	                           jae 0x4001da0	       430	shallow.c	CALL_2
0x4001db2	    0x89ac24a80000	             mov dword [rsp + 0xa8], ebp	       430	shallow.c	CALL_2
0x4001db9	          0x4889c3	                            mov rbx, rax	       430	shallow.c	CALL_2
0x4001dbc	          0x4489f9	                           mov ecx, r15d	       430	shallow.c	CALL_2
0x4001dbf	        0x4c8d3ccb	                  lea r15, [rbx + rcx*8]	       430	shallow.c	CALL_2
0x4001dc3	          0x498b07	                    mov rax, qword [r15]	       430	shallow.c	CALL_2
0x4001dc6	          0x4885c0	                           test rax, rax	       430	shallow.c	CALL_2
0x4001dc9	     0xf84fb000000	                            je 0x4001eca	       430	shallow.c	CALL_2
0x4001dcf	        0x8b6c2450	            mov ebp, dword [rsp + 0x50] 	       430	shallow.c	CALL_2
0x4001dd3	       0xfaf6c2430	            imul ebp, dword [rsp + 0x30]	       430	shallow.c	CALL_2
0x4001dd8	        0x4c8d3ce8	                  lea r15, [rax + rbp*8]	       430	shallow.c	CALL_2
0x4001ddc	          0x498b07	                    mov rax, qword [r15]	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x4001ddf	          0x4885c0	                           test rax, rax	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x4001de2	     0xf8493000000	                            je 0x4001e7b	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x4001de8	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001dec	            0x85d2	                           test edx, edx	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001dee	     0xf8e87000000	                           jle 0x4001e7b	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001df4	            0x31ed	                            xor ebp, ebp	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001df6	            0xeb14	                           jmp 0x4001e0c	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001df8	     0xf1f84000000	                   nop dword [rax + rax]	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001e00	          0x4939ed	                            cmp r13, rbp	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001e03	            0x7476	                            je 0x4001e7b	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001e05	          0x498b07	                    mov rax, qword [r15]	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001e08	        0x4883c504	                              add rbp, 4	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4001e0c	          0x8b0428	              mov eax, dword [rax + rbp]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001e0f	            0x85c0	                           test eax, eax	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001e11	            0x74ed	                            je 0x4001e00	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001e13	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001e1b	    0x8bb424980000	            mov esi, dword [rsp + 0x98] 	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001e22	          0x4c89e7	                            mov rdi, r12	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001e25	      0xe800000000	                          call 0x4001e2a	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x4001e2a	            0x85c0	                           test eax, eax	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001e2c	            0x75d2	                           jne 0x4001e00	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001e2e	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x4001e33	    0x4883bc248800	               cmp qword [rsp + 0x88], 0	       655	shallow.c	FUNCTION_24	IF_1
0x4001e3c	          0x4d8b0f	                     mov r9, qword [r15]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x4001e3f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x4001e43	          0x8b7008	                mov esi, dword [rax + 8]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x4001e46	            0x742f	                            je 0x4001e77	       655	shallow.c	FUNCTION_24	IF_1
0x4001e48	            0x85f6	                           test esi, esi	       657	shallow.c	FUNCTION_24	FOR_1
0x4001e4a	            0x742b	                            je 0x4001e77	       657	shallow.c	FUNCTION_24	FOR_1
0x4001e4c	    0x4c8b84248800	              mov r8, qword [rsp + 0x88]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e54	            0x31c9	                            xor ecx, ecx	       657	shallow.c	FUNCTION_24	FOR_1
0x4001e56	      0xbf01000000	                              mov edi, 1	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e5b	            0x89c8	                            mov eax, ecx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e5d	            0x89fa	                            mov edx, edi	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e5f	          0xc1e805	                              shr eax, 5	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e62	            0xd3e2	                             shl edx, cl	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e64	        0x41851481	           test dword [r9 + rax*4], edx 	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e68	            0x7405	                            je 0x4001e6f	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e6a	      0x4183048801	               add dword [r8 + rcx*4], 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e6f	        0x4883c101	                              add rcx, 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4001e73	            0x39ce	                            cmp esi, ecx	       657	shallow.c	FUNCTION_24	FOR_1
0x4001e75	            0x77e4	                            ja 0x4001e5b	       657	shallow.c	FUNCTION_24	FOR_1
0x4001e77	        0x4183c601	                             add r14d, 1	       714	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4001e7b	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       702	shallow.c	FUNCTION_25	FOR_3
0x4001e80	        0x83042401	                      add dword [rsp], 1	       702	shallow.c	FUNCTION_25	FOR_3
0x4001e84	          0x8b0424	                    mov eax, dword [rsp]	       702	shallow.c	FUNCTION_25	FOR_3
0x4001e87	          0x3b4710	            cmp eax, dword [rdi + 0x10] 	       702	shallow.c	FUNCTION_25	FOR_3
0x4001e8a	          0x4889f8	                            mov rax, rdi	       702	shallow.c	FUNCTION_25	FOR_3
0x4001e8d	            0x7d5a	                           jge 0x4001ee9	       702	shallow.c	FUNCTION_25	FOR_3
0x4001e8f	        0x44393424	                   cmp dword [rsp], r14d	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001e93	        0x488b4008	                mov rax, qword [rax + 8]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001e97	            0x740f	                            je 0x4001ea8	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001e99	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001e9e	          0x4963d6	                        movsxd rdx, r14d	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001ea1	        0x8b4c3004	         mov ecx, dword [rax + rsi + 4] 	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001ea5	          0x890c90	            mov dword [rax + rdx*4], ecx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001ea8	    0x488344241004	               add qword [rsp + 0x10], 4	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001eae	      0xe983feffff	                           jmp 0x4001d36	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4001eb3	        0x488b3424	                    mov rsi, qword [rsp]	       430	shallow.c	CALL_2
0x4001eb7	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       430	shallow.c	CALL_2
0x4001ebc	      0xe800000000	                          call 0x4001ec1	       430	shallow.c	CALL_2
0x4001ec1	        0x49890424	                    mov qword [r12], rax	       430	shallow.c	CALL_2
0x4001ec5	      0xe907fdffff	                           jmp 0x4001bd1	       430	shallow.c	CALL_2
0x4001eca	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       430	shallow.c	CALL_2
0x4001ecf	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       430	shallow.c	CALL_2
0x4001ed4	      0xe800000000	                          call 0x4001ed9	       430	shallow.c	CALL_2
0x4001ed9	          0x498907	                    mov qword [r15], rax	       430	shallow.c	CALL_2
0x4001edc	      0xe9eefeffff	                           jmp 0x4001dcf	       430	shallow.c	CALL_2
0x4001ee1	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       430	shallow.c	CALL_2
0x4001ee6	          0x4531f6	                          xor r14d, r14d	       702	shallow.c	FUNCTION_25	FOR_3
0x4001ee9	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	       720	shallow.c	FUNCTION_25	CALL_13
0x4001ef1	        0x44897010	            mov dword [rax + 0x10], r14d	       718	shallow.c	FUNCTION_25
0x4001ef5	      0xe800000000	                          call 0x4001efa	       720	shallow.c	FUNCTION_25	CALL_13
0x4001efa	      0xe955faffff	                           jmp 0x4001954	       720	shallow.c	FUNCTION_25	CALL_13
0x4001eff	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	        90	string3.h	FUNCTION_76	CALL_6
0x4001f07	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_76	CALL_6
0x4001f09	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_76	CALL_6
0x4001f0e	            0x31f6	                            xor esi, esi	       599	shallow.c	FUNCTION_22	CALL_6
0x4001f10	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_76	CALL_6
0x4001f13	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_76	CALL_6
0x4001f16	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       592	shallow.c	FUNCTION_22
0x4001f1b	      0xbf00000000	                              mov edi, 0	       599	shallow.c	FUNCTION_22	CALL_6
0x4001f20	    0xc78424a40000	               mov dword [rsp + 0xa4], 1	       430	shallow.c	CALL_2
0x4001f2b	    0xc78424a00000	         mov dword [rsp + 0xa0], 0xfffc 	       430	shallow.c	CALL_2
0x4001f36	          0x8b5808	                mov ebx, dword [rax + 8]	       592	shallow.c	FUNCTION_22
0x4001f39	    0x899c24b80000	             mov dword [rsp + 0xb8], ebx	       592	shallow.c	FUNCTION_22
0x4001f40	      0xe800000000	                          call 0x4001f45	       599	shallow.c	FUNCTION_22	CALL_6
0x4001f45	            0x31f6	                            xor esi, esi	       600	shallow.c	FUNCTION_22	CALL_7
0x4001f47	      0xbf00000000	                              mov edi, 0	       600	shallow.c	FUNCTION_22	CALL_7
0x4001f4c	      0xe800000000	                          call 0x4001f51	       600	shallow.c	FUNCTION_22	CALL_7
0x4001f51	      0xe9cff2ffff	                           jmp 0x4001225	       600	shallow.c	FUNCTION_22	CALL_7
0x4001f56	    0x488bac24c000	            mov rbp, qword [rsp + 0xc0] 	       600	shallow.c	FUNCTION_22	CALL_7
0x4001f5e	      0xe970faffff	                           jmp 0x40019d3	       600	shallow.c	FUNCTION_22	CALL_7
0x4001f63	          0x4989d8	                             mov r8, rbx	       600	shallow.c	FUNCTION_22	CALL_7
0x4001f66	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	       567	shallow.c	FUNCTION_22
0x4001f6e	        0x418b5020	              mov edx, dword [r8 + 0x20]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001f72	            0x85d2	                           test edx, edx	       574	shallow.c	FUNCTION_22	FOR_2
0x4001f74	     0xf85cef1ffff	                           jne 0x4001148	       574	shallow.c	FUNCTION_22	FOR_2
0x4001f7a	      0xe800000000	                          call 0x4001f7f	       581	shallow.c	FUNCTION_22	CALL_2
0x4001f7f	            0x85c0	                           test eax, eax	       582	shallow.c	FUNCTION_22	FOR_3
0x4001f81	            0x89c3	                            mov ebx, eax	       581	shallow.c	FUNCTION_22	CALL_2
0x4001f83	     0xf850af2ffff	                           jne 0x4001193	       582	shallow.c	FUNCTION_22	FOR_3
0x4001f89	      0xe93df2ffff	                           jmp 0x40011cb	       582	shallow.c	FUNCTION_22	FOR_3
0x4001f8e	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4001f93	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4001f98	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4001f9a	      0xe800000000	                          call 0x4001f9f	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4001f9f	          0x4489f6	                           mov esi, r14d	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001fa2	      0xbf00000000	                              mov edi, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001fa7	            0x31c0	                            xor eax, eax	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001fa9	      0xe800000000	                          call 0x4001fae	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001fae	            0x89ce	                            mov esi, ecx	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001fb0	      0xbf00000000	                              mov edi, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001fb5	            0x31c0	                            xor eax, eax	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001fb7	      0xe800000000	                          call 0x4001fbc	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001fbc	      0x498d7c2404	                      lea rdi, [r12 + 4]	       514	shallow.c	FUNCTION_20	WHILE_1	CALL_15
0x4001fc1	      0xe800000000	                          call 0x4001fc6	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001fc6	      0xbf00000000	                              mov edi, 0	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001fcb	          0x4889c6	                            mov rsi, rax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001fce	            0x31c0	                            xor eax, eax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001fd0	      0xe800000000	                          call 0x4001fd5	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001fd5	      0xe800000000	                          call 0x4001fda	       634	shallow.c	FUNCTION_22
advertise_shallow_grafts_cb	DO,0:IF,1:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,2:FOR,0	16
0x4000050	        0x837f14ff	cmp dword [rdi + 0x14], 0xffffffffffffffff	       338	shallow.c	FUNCTION_13	IF_1
0x4000054	            0x740a	                            je 0x4000060	       338	shallow.c	FUNCTION_13	IF_1
0x4000056	            0x31c0	                            xor eax, eax	       341	shallow.c	FUNCTION_13
0x4000058	              0xc3	                                     ret	       341	shallow.c	FUNCTION_13
0x4000059	     0xf1f80000000	                         nop dword [rax]	       341	shallow.c	FUNCTION_13
0x4000060	              0x53	                                push rbx	       336	shallow.c	FUNCTION_13
0x4000061	            0x8b1e	                    mov ebx, dword [rsi]	       337	shallow.c	FUNCTION_13
0x4000063	      0xe800000000	                          call 0x4000068	       339	shallow.c	FUNCTION_13	CALL_2
0x4000068	            0x89df	                            mov edi, ebx	       339	shallow.c	FUNCTION_13	CALL_2
0x400006a	          0x4889c2	                            mov rdx, rax	       339	shallow.c	FUNCTION_13	CALL_2
0x400006d	      0xbe00000000	                              mov esi, 0	       339	shallow.c	FUNCTION_13	CALL_2
0x4000072	            0x31c0	                            xor eax, eax	       339	shallow.c	FUNCTION_13	CALL_2
0x4000074	      0xe800000000	                          call 0x4000079	       339	shallow.c	FUNCTION_13	CALL_2
0x4000079	            0x31c0	                            xor eax, eax	       341	shallow.c	FUNCTION_13
0x400007b	              0x5b	                                 pop rbx	       341	shallow.c	FUNCTION_13
0x400007c	              0xc3	                                     ret	       341	shallow.c	FUNCTION_13
prepare_shallow_info	DO,0:IF,3:functions,0:WHILE,0:SWITCH,0:ELSE,1:CALL,4:FOR,1	94
0x4000e00	            0x4155	                                push r13	       387	shallow.c	FUNCTION_16
0x4000e02	            0x4154	                                push r12	       387	shallow.c	FUNCTION_16
0x4000e04	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e0e	              0x55	                                push rbp	       387	shallow.c	FUNCTION_16
0x4000e0f	              0x53	                                push rbx	       387	shallow.c	FUNCTION_16
0x4000e10	    0x48ba00000000	                 movabs rdx, 0x100000000	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e1a	          0x4889fd	                            mov rbp, rdi	       387	shallow.c	FUNCTION_16
0x4000e1d	          0x4989f5	                            mov r13, rsi	       387	shallow.c	FUNCTION_16
0x4000e20	        0x4883ec08	                              sub rsp, 8	       387	shallow.c	FUNCTION_16
0x4000e24	    0x482305000000	             and rax, qword [0x04000e2b]	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e2b	          0x4839d0	                            cmp rax, rdx	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e2e	            0x741b	                            je 0x4000e4b	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e30	      0xb900000000	                              mov ecx, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e35	      0xba00000000	                              mov edx, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e3a	      0xbe85010000	                          mov esi, 0x185	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e3f	      0xbf00000000	                              mov edi, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e44	            0x31c0	                            xor eax, eax	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e46	      0xe800000000	                          call 0x4000e4b	       389	shallow.c	FUNCTION_16	CALL_1
0x4000e4b	        0x488d7d08	                      lea rdi, [rbp + 8]	        90	string3.h	FUNCTION_76	CALL_6
0x4000e4f	          0x4889e9	                            mov rcx, rbp	        90	string3.h	FUNCTION_76	CALL_6
0x4000e52	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_76	CALL_6
0x4000e54	    0x48c745580000	               mov qword [rbp + 0x58], 0	        90	string3.h	FUNCTION_76	CALL_6
0x4000e5c	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_76	CALL_6
0x4000e60	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_76	CALL_6
0x4000e63	          0x83c160	                           add ecx, 0x60	        90	string3.h	FUNCTION_76	CALL_6
0x4000e66	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_76	CALL_6
0x4000e69	          0x4d85ed	                           test r13, r13	       392	shallow.c	FUNCTION_16	IF_1
0x4000e6c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_76	CALL_6
0x4000e6f	        0x4c896d00	                    mov qword [rbp], r13	       391	shallow.c	FUNCTION_16
0x4000e73	     0xf84bb000000	                            je 0x4000f34	       392	shallow.c	FUNCTION_16	IF_1
0x4000e79	        0x49635508	            movsxd rdx, dword [r13 + 8] 	       394	shallow.c	FUNCTION_16
0x4000e7d	    0x48bbffffffff	         movabs rbx, 0x3fffffffffffffff 	       795	git-compat-util.h	FUNCTION_60	IF_1
0x4000e87	          0x4839da	                            cmp rdx, rbx	       795	git-compat-util.h	FUNCTION_60	IF_1
0x4000e8a	     0xf87af000000	                            ja 0x4000f3f	       795	git-compat-util.h	FUNCTION_60	IF_1
0x4000e90	    0x488d3c950000	                        lea rdi, [rdx*4]	       394	shallow.c	FUNCTION_16
0x4000e98	      0xe800000000	                          call 0x4000e9d	       394	shallow.c	FUNCTION_16
0x4000e9d	        0x49635508	            movsxd rdx, dword [r13 + 8] 	       395	shallow.c	FUNCTION_16
0x4000ea1	        0x48894508	                mov qword [rbp + 8], rax	       394	shallow.c	FUNCTION_16
0x4000ea5	          0x4839da	                            cmp rdx, rbx	       795	git-compat-util.h	FUNCTION_60	IF_1
0x4000ea8	     0xf87a0000000	                            ja 0x4000f4e	       795	git-compat-util.h	FUNCTION_60	IF_1
0x4000eae	    0x488d3c950000	                        lea rdi, [rdx*4]	       395	shallow.c	FUNCTION_16
0x4000eb6	      0xe800000000	                          call 0x4000ebb	       395	shallow.c	FUNCTION_16
0x4000ebb	        0x418b5508	                mov edx, dword [r13 + 8]	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ebf	        0x48894518	            mov qword [rbp + 0x18], rax 	       395	shallow.c	FUNCTION_16
0x4000ec3	            0x85d2	                           test edx, edx	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ec5	            0x7e6d	                           jle 0x4000f34	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ec7	          0x4531e4	                          xor r12d, r12d	       396	shallow.c	FUNCTION_16	FOR_1
0x4000eca	            0x31db	                            xor ebx, ebx	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ecc	            0xeb20	                           jmp 0x4000eee	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ece	            0x6690	                                     nop	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ed0	        0x48634520	         movsxd rax, dword [rbp + 0x20] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000ed4	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000ed8	          0x8d4801	                      lea ecx, [rax + 1]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000edb	          0x894d20	            mov dword [rbp + 0x20], ecx 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000ede	          0x891c82	            mov dword [rdx + rax*4], ebx	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x4000ee1	          0x83c301	                              add ebx, 1	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ee4	        0x4983c414	                           add r12, 0x14	       396	shallow.c	FUNCTION_16	FOR_1
0x4000ee8	        0x41395d08	                cmp dword [r13 + 8], ebx	       396	shallow.c	FUNCTION_16	FOR_1
0x4000eec	            0x7e46	                           jle 0x4000f34	       396	shallow.c	FUNCTION_16	FOR_1
0x4000eee	          0x4c89e7	                            mov rdi, r12	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000ef1	        0x49037d00	                    add rdi, qword [r13]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000ef5	      0xe800000000	                          call 0x4000efa	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000efa	            0x85c0	                           test eax, eax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000efc	            0x74d2	                            je 0x4000ed0	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4000efe	          0x4c89e7	                            mov rdi, r12	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x4000f01	        0x49037d00	                    add rdi, qword [r13]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x4000f05	      0xe800000000	                          call 0x4000f0a	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_4
0x4000f0a	          0x4885c0	                           test rax, rax	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f0d	            0x7407	                            je 0x4000f16	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f0f	          0x8b4014	            mov eax, dword [rax + 0x14] 	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f12	            0x85c0	                           test eax, eax	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f14	            0x78cb	                            js 0x4000ee1	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4000f16	        0x48634510	         movsxd rax, dword [rbp + 0x10] 	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f1a	        0x488b5508	                mov rdx, qword [rbp + 8]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f1e	        0x4983c414	                           add r12, 0x14	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f22	          0x8d4801	                      lea ecx, [rax + 1]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f25	          0x894d10	            mov dword [rbp + 0x10], ecx 	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f28	          0x891c82	            mov dword [rdx + rax*4], ebx	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x4000f2b	          0x83c301	                              add ebx, 1	       396	shallow.c	FUNCTION_16	FOR_1
0x4000f2e	        0x41395d08	                cmp dword [r13 + 8], ebx	       396	shallow.c	FUNCTION_16	FOR_1
0x4000f32	            0x7fba	                            jg 0x4000eee	       396	shallow.c	FUNCTION_16	FOR_1
0x4000f34	        0x4883c408	                              add rsp, 8	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000f38	              0x5b	                                 pop rbx	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000f39	              0x5d	                                 pop rbp	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000f3a	            0x415c	                                 pop r12	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000f3c	            0x415d	                                 pop r13	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000f3e	              0xc3	                                     ret	       406	shallow.c	FUNCTION_16	ELSE_1
0x4000f3f	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000f44	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000f49	      0xe800000000	                          call 0x4000f4e	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000f4e	      0xbe04000000	                              mov esi, 4	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000f53	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000f58	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000f5a	      0xe800000000	                          call 0x4000f5f	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
add_ref	DO,0:IF,1:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,2:FOR,0	51
0x40000b0	            0x4154	                                push r12	       643	shallow.c	FUNCTION_23
0x40000b2	              0x55	                                push rbp	       643	shallow.c	FUNCTION_23
0x40000b3	          0x4889f5	                            mov rbp, rsi	       643	shallow.c	FUNCTION_23
0x40000b6	              0x53	                                push rbx	       643	shallow.c	FUNCTION_23
0x40000b7	          0x4889cb	                            mov rbx, rcx	       643	shallow.c	FUNCTION_23
0x40000ba	        0x48634908	            movsxd rcx, dword [rcx + 8] 	       645	shallow.c	FUNCTION_23	CALL_1
0x40000be	          0x8b430c	              mov eax, dword [rbx + 0xc]	       645	shallow.c	FUNCTION_23	CALL_1
0x40000c1	            0x39c1	                            cmp ecx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40000c3	            0x7c7b	                            jl 0x4000140	       645	shallow.c	FUNCTION_23	CALL_1
0x40000c5	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       645	shallow.c	FUNCTION_23	CALL_1
0x40000c9	            0x89c6	                            mov esi, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40000cb	          0xc1ee1f	                           shr esi, 0x1f	       645	shallow.c	FUNCTION_23	CALL_1
0x40000ce	             0x1c6	                            add esi, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40000d0	          0x8d4101	                      lea eax, [rcx + 1]	       645	shallow.c	FUNCTION_23	CALL_1
0x40000d3	            0xd1fe	                              sar esi, 1	       645	shallow.c	FUNCTION_23	CALL_1
0x40000d5	            0x39f1	                            cmp ecx, esi	       645	shallow.c	FUNCTION_23	CALL_1
0x40000d7	           0xf4df0	                         cmovge esi, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x40000da	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_60	IF_1
0x40000e4	          0x4863d6	                         movsxd rdx, esi	       645	shallow.c	FUNCTION_23	CALL_1
0x40000e7	          0x89730c	              mov dword [rbx + 0xc], esi	       645	shallow.c	FUNCTION_23	CALL_1
0x40000ea	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_60	IF_1
0x40000ed	            0x7756	                            ja 0x4000145	       795	git-compat-util.h	FUNCTION_60	IF_1
0x40000ef	          0x488b3b	                    mov rdi, qword [rbx]	       645	shallow.c	FUNCTION_23	CALL_1
0x40000f2	    0x488d34d50000	                        lea rsi, [rdx*8]	       645	shallow.c	FUNCTION_23	CALL_1
0x40000fa	      0xe800000000	                          call 0x40000ff	       645	shallow.c	FUNCTION_23	CALL_1
0x40000ff	        0x48634b08	            movsxd rcx, dword [rbx + 8] 	       645	shallow.c	FUNCTION_23	CALL_1
0x4000103	          0x488903	                    mov qword [rbx], rax	       645	shallow.c	FUNCTION_23	CALL_1
0x4000106	        0x4c8d24c8	                  lea r12, [rax + rcx*8]	       646	shallow.c	FUNCTION_23	CALL_2
0x400010a	      0xbe01000000	                              mov esi, 1	       646	shallow.c	FUNCTION_23	CALL_2
0x400010f	          0x4889ef	                            mov rdi, rbp	       646	shallow.c	FUNCTION_23	CALL_2
0x4000112	      0xe800000000	                          call 0x4000117	       646	shallow.c	FUNCTION_23	CALL_2
0x4000117	        0x48634b08	            movsxd rcx, dword [rbx + 8] 	       647	shallow.c	FUNCTION_23	IF_1
0x400011b	        0x49890424	                    mov qword [r12], rax	       646	shallow.c	FUNCTION_23	CALL_2
0x400011f	          0x488b13	                    mov rdx, qword [rbx]	       647	shallow.c	FUNCTION_23	IF_1
0x4000122	      0x48833cca00	              cmp qword [rdx + rcx*8], 0	       647	shallow.c	FUNCTION_23	IF_1
0x4000127	          0x4889c8	                            mov rax, rcx	       647	shallow.c	FUNCTION_23	IF_1
0x400012a	            0x7406	                            je 0x4000132	       647	shallow.c	FUNCTION_23	IF_1
0x400012c	          0x83c001	                              add eax, 1	       648	shallow.c	FUNCTION_23	IF_1
0x400012f	          0x894308	                mov dword [rbx + 8], eax	       648	shallow.c	FUNCTION_23	IF_1
0x4000132	              0x5b	                                 pop rbx	       650	shallow.c	FUNCTION_23
0x4000133	            0x31c0	                            xor eax, eax	       650	shallow.c	FUNCTION_23
0x4000135	              0x5d	                                 pop rbp	       650	shallow.c	FUNCTION_23
0x4000136	            0x415c	                                 pop r12	       650	shallow.c	FUNCTION_23
0x4000138	              0xc3	                                     ret	       650	shallow.c	FUNCTION_23
0x4000139	     0xf1f80000000	                         nop dword [rax]	       650	shallow.c	FUNCTION_23
0x4000140	          0x488b03	                    mov rax, qword [rbx]	       650	shallow.c	FUNCTION_23
0x4000143	            0xebc1	                           jmp 0x4000106	       650	shallow.c	FUNCTION_23
0x4000145	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x400014a	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x400014f	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
0x4000151	      0xe800000000	                          call 0x4000156	       796	git-compat-util.h	FUNCTION_60	IF_1	CALL_1
set_alternate_shallow_file	DO,0:IF,2:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,3:FOR,0	24
0x40003a0	    0x833d00000000	cmp dword [0x040003a7], 0xffffffffffffffff	        22	shallow.c	FUNCTION_1	IF_1
0x40003a7	              0x53	                                push rbx	        21	shallow.c	FUNCTION_1
0x40003a8	            0x7533	                           jne 0x40003dd	        22	shallow.c	FUNCTION_1	IF_1
0x40003aa	          0x4889fb	                            mov rbx, rdi	        22	shallow.c	FUNCTION_1	IF_1
0x40003ad	    0x488b3d000000	            mov rdi, qword [0x040003b4] 	        24	shallow.c	FUNCTION_1	IF_2
0x40003b4	          0x4885ff	                           test rdi, rdi	        24	shallow.c	FUNCTION_1	IF_2
0x40003b7	            0x7407	                            je 0x40003c0	        24	shallow.c	FUNCTION_1	IF_2
0x40003b9	            0x85f6	                           test esi, esi	        24	shallow.c	FUNCTION_1	IF_2
0x40003bb	            0x7503	                           jne 0x40003c0	        24	shallow.c	FUNCTION_1	IF_2
0x40003bd	              0x5b	                                 pop rbx	        28	shallow.c	FUNCTION_1
0x40003be	              0xc3	                                     ret	        28	shallow.c	FUNCTION_1
0x40003bf	              0x90	                                     nop	        28	shallow.c	FUNCTION_1
0x40003c0	      0xe800000000	                          call 0x40003c5	        26	shallow.c	FUNCTION_1	CALL_2
0x40003c5	            0x31c0	                            xor eax, eax	       924	git-compat-util.h	FUNCTION_64	CALL_1
0x40003c7	          0x4885db	                           test rbx, rbx	       924	git-compat-util.h	FUNCTION_64	CALL_1
0x40003ca	            0x7408	                            je 0x40003d4	       924	git-compat-util.h	FUNCTION_64	CALL_1
0x40003cc	          0x4889df	                            mov rdi, rbx	       924	git-compat-util.h	FUNCTION_64	CALL_1
0x40003cf	      0xe800000000	                          call 0x40003d4	       924	git-compat-util.h	FUNCTION_64	CALL_1
0x40003d4	    0x488905000000	            mov qword [0x040003db], rax 	        27	shallow.c	FUNCTION_1	CALL_3
0x40003db	              0x5b	                                 pop rbx	        28	shallow.c	FUNCTION_1
0x40003dc	              0xc3	                                     ret	        28	shallow.c	FUNCTION_1
0x40003dd	      0xbf00000000	                              mov edi, 0	        23	shallow.c	FUNCTION_1	CALL_1
0x40003e2	            0x31c0	                            xor eax, eax	        23	shallow.c	FUNCTION_1	CALL_1
0x40003e4	      0xe800000000	                          call 0x40003e9	        23	shallow.c	FUNCTION_1	CALL_1
show_commit	DO,0:IF,0:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,1:FOR,0	1
0x4000040	      0xe900000000	                           jmp 0x4000045	       144	shallow.c	FUNCTION_5	CALL_1
advertise_shallow_grafts	DO,0:IF,1:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,2:FOR,0	10
0x4000c50	        0x4883ec18	                           sub rsp, 0x18	       344	shallow.c	FUNCTION_14
0x4000c54	        0x897c240c	              mov dword [rsp + 0xc], edi	       344	shallow.c	FUNCTION_14
0x4000c58	      0xe800000000	                          call 0x4000c5d	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000c5d	            0x85c0	                           test eax, eax	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000c5f	            0x740f	                            je 0x4000c70	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4000c61	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       347	shallow.c	FUNCTION_14	CALL_2
0x4000c66	      0xbf00000000	                              mov edi, 0	       347	shallow.c	FUNCTION_14	CALL_2
0x4000c6b	      0xe800000000	                          call 0x4000c70	       347	shallow.c	FUNCTION_14	CALL_2
0x4000c70	        0x4883c418	                           add rsp, 0x18	       348	shallow.c	FUNCTION_14
0x4000c74	              0xc3	                                     ret	       348	shallow.c	FUNCTION_14
prune_shallow	DO,0:IF,3:functions,0:WHILE,0:SWITCH,0:ELSE,1:CALL,14:FOR,0	81
0x4000c80	              0x53	                                push rbx	       355	shallow.c	FUNCTION_15
0x4000c81	        0x4883ec40	                           sub rsp, 0x40	       355	shallow.c	FUNCTION_15
0x4000c85	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	shallow.c	FUNCTION_15
0x4000c8e	      0x4889442438	             mov qword [rsp + 0x38], rax	       355	shallow.c	FUNCTION_15
0x4000c93	            0x31c0	                            xor eax, eax	       355	shallow.c	FUNCTION_15
0x4000c95	            0x85ff	                           test edi, edi	       360	shallow.c	FUNCTION_15	IF_1
0x4000c97	    0x48c704240000	                      mov qword [rsp], 0	       357	shallow.c	FUNCTION_15
0x4000c9f	    0x48c744240800	                  mov qword [rsp + 8], 0	       357	shallow.c	FUNCTION_15
0x4000ca8	    0x48c744241000	               mov qword [rsp + 0x10], 0	       357	shallow.c	FUNCTION_15
0x4000cb1	     0xf85d9000000	                           jne 0x4000d90	       360	shallow.c	FUNCTION_15	IF_1
0x4000cb7	      0xe800000000	                          call 0x4000cbc	       365	shallow.c	FUNCTION_15	CALL_4
0x4000cbc	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000cbe	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000cc3	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000cc6	      0xbf00000000	                              mov edi, 0	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000ccb	      0xe800000000	                          call 0x4000cd0	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000cd0	    0x833d00000000	cmp dword [0x04000cd7], 0xffffffffffffffff	       220	shallow.c	FUNCTION_7	IF_1
0x4000cd7	            0x89c3	                            mov ebx, eax	       175	lockfile.h	FUNCTION_28	CALL_1
0x4000cd9	     0xf84f6000000	                            je 0x4000dd5	       220	shallow.c	FUNCTION_7	IF_1
0x4000cdf	      0xe800000000	                          call 0x4000ce4	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000ce4	      0xbf00000000	                              mov edi, 0	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000ce9	          0x4889c6	                            mov rsi, rax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000cec	      0xe800000000	                          call 0x4000cf1	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000cf1	            0x85c0	                           test eax, eax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000cf3	     0xf84d2000000	                            je 0x4000dcb	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000cf9	      0x488d742420	                   lea rsi, [rsp + 0x20]	       272	shallow.c	FUNCTION_9	CALL_1
0x4000cfe	      0xbf00000000	                              mov edi, 0	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d03	      0x4889642420	             mov qword [rsp + 0x20], rsp	       268	shallow.c	FUNCTION_9
0x4000d08	    0xc74424280000	               mov dword [rsp + 0x28], 0	       269	shallow.c	FUNCTION_9
0x4000d10	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       270	shallow.c	FUNCTION_9
0x4000d18	    0xc74424300100	               mov dword [rsp + 0x30], 1	       271	shallow.c	FUNCTION_9
0x4000d20	      0xe800000000	                          call 0x4000d25	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d25	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x4000d29	            0x85c0	                           test eax, eax	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x4000d2b	            0x753b	                           jne 0x4000d68	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x4000d2d	      0xe800000000	                          call 0x4000d32	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000d32	          0x4889c7	                            mov rdi, rax	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000d35	      0xe800000000	                          call 0x4000d3a	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4000d3a	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_37	CALL_1
0x4000d3f	      0xe800000000	                          call 0x4000d44	       304	lockfile.h	FUNCTION_37	CALL_1
0x4000d44	          0x4889e7	                            mov rdi, rsp	       377	shallow.c	FUNCTION_15	CALL_14
0x4000d47	      0xe800000000	                          call 0x4000d4c	       377	shallow.c	FUNCTION_15	CALL_14
0x4000d4c	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       378	shallow.c	FUNCTION_15
0x4000d51	    0x644833042528	                xor rax, qword fs:[0x28]	       378	shallow.c	FUNCTION_15
0x4000d5a	            0x756a	                           jne 0x4000dc6	       378	shallow.c	FUNCTION_15
0x4000d5c	        0x4883c440	                           add rsp, 0x40	       378	shallow.c	FUNCTION_15
0x4000d60	              0x5b	                                 pop rbx	       378	shallow.c	FUNCTION_15
0x4000d61	              0xc3	                                     ret	       378	shallow.c	FUNCTION_15
0x4000d62	    0x660f1f440000	                    nop word [rax + rax]	       378	shallow.c	FUNCTION_15
0x4000d68	      0x488b542408	                mov rdx, qword [rsp + 8]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000d6d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000d72	            0x89df	                            mov edi, ebx	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000d74	      0xe800000000	                          call 0x4000d79	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000d79	          0x4885c0	                           test rax, rax	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000d7c	            0x7863	                            js 0x4000de1	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4000d7e	      0xbf00000000	                              mov edi, 0	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000d83	      0xe800000000	                          call 0x4000d88	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000d88	            0xebba	                           jmp 0x4000d44	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000d8a	    0x660f1f440000	                    nop word [rax + rax]	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4000d90	      0x488d742420	                   lea rsi, [rsp + 0x20]	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d95	      0xbf00000000	                              mov edi, 0	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d9a	      0x4889642420	             mov qword [rsp + 0x20], rsp	       268	shallow.c	FUNCTION_9
0x4000d9f	    0xc74424280000	               mov dword [rsp + 0x28], 0	       269	shallow.c	FUNCTION_9
0x4000da7	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       270	shallow.c	FUNCTION_9
0x4000daf	    0xc74424300300	               mov dword [rsp + 0x30], 3	       271	shallow.c	FUNCTION_9
0x4000db7	      0xe800000000	                          call 0x4000dbc	       272	shallow.c	FUNCTION_9	CALL_1
0x4000dbc	          0x4889e7	                            mov rdi, rsp	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000dbf	      0xe800000000	                          call 0x4000dc4	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000dc4	            0xeb86	                           jmp 0x4000d4c	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x4000dc6	      0xe800000000	                          call 0x4000dcb	       378	shallow.c	FUNCTION_15
0x4000dcb	      0xbf00000000	                              mov edi, 0	       224	shallow.c	FUNCTION_7	CALL_4
0x4000dd0	      0xe800000000	                          call 0x4000dd5	       224	shallow.c	FUNCTION_7	CALL_4
0x4000dd5	      0xbf00000000	                              mov edi, 0	       221	shallow.c	FUNCTION_7	CALL_1
0x4000dda	            0x31c0	                            xor eax, eax	       221	shallow.c	FUNCTION_7	CALL_1
0x4000ddc	      0xe800000000	                          call 0x4000de1	       221	shallow.c	FUNCTION_7	CALL_1
0x4000de1	    0x488b3d000000	            mov rdi, qword [0x04000de8] 	       220	lockfile.h	FUNCTION_31	CALL_1
0x4000de8	      0xe800000000	                          call 0x4000ded	       220	lockfile.h	FUNCTION_31	CALL_1
0x4000ded	      0xbf00000000	                              mov edi, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000df2	          0x4889c6	                            mov rsi, rax	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000df5	            0x31c0	                            xor eax, eax	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000df7	      0xe800000000	                          call 0x4000dfc	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
clear_shallow_info	DO,0:IF,0:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,2:FOR,0	7
0x4000f60	              0x53	                                push rbx	       409	shallow.c	ELSE_1	FUNCTION_17
0x4000f61	          0x4889fb	                            mov rbx, rdi	       409	shallow.c	ELSE_1	FUNCTION_17
0x4000f64	        0x488b7f08	                mov rdi, qword [rdi + 8]	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x4000f68	      0xe800000000	                          call 0x4000f6d	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x4000f6d	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x4000f71	              0x5b	                                 pop rbx	       412	shallow.c	ELSE_1	FUNCTION_17
0x4000f72	      0xe900000000	                           jmp 0x4000f77	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
get_shallow_commits	DO,0:IF,8:functions,0:WHILE,1:SWITCH,0:ELSE,3:CALL,9:FOR,1	171
0x40005c0	            0x4157	                                push r15	        79	shallow.c	FUNCTION_4
0x40005c2	            0x4156	                                push r14	        79	shallow.c	FUNCTION_4
0x40005c4	          0x4531ff	                          xor r15d, r15d	        80	shallow.c	FUNCTION_4
0x40005c7	            0x4155	                                push r13	        79	shallow.c	FUNCTION_4
0x40005c9	            0x4154	                                push r12	        79	shallow.c	FUNCTION_4
0x40005cb	          0x4189d5	                           mov r13d, edx	        79	shallow.c	FUNCTION_4
0x40005ce	              0x55	                                push rbp	        79	shallow.c	FUNCTION_4
0x40005cf	              0x53	                                push rbx	        79	shallow.c	FUNCTION_4
0x40005d0	            0x89f5	                            mov ebp, esi	        79	shallow.c	FUNCTION_4
0x40005d2	          0x4531f6	                          xor r14d, r14d	        83	shallow.c	FUNCTION_4
0x40005d5	          0x4531e4	                          xor r12d, r12d	        80	shallow.c	FUNCTION_4
0x40005d8	        0x4883ec48	                           sub rsp, 0x48	        79	shallow.c	FUNCTION_4
0x40005dc	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	shallow.c	FUNCTION_4
0x40005e5	      0x4889442438	             mov qword [rsp + 0x38], rax	        79	shallow.c	FUNCTION_4
0x40005ea	            0x31c0	                            xor eax, eax	        79	shallow.c	FUNCTION_4
0x40005ec	      0x48897c2408	                mov qword [rsp + 8], rdi	        79	shallow.c	FUNCTION_4
0x40005f1	        0x894c2404	                mov dword [rsp + 4], ecx	        79	shallow.c	FUNCTION_4
0x40005f5	    0x48c744241800	               mov qword [rsp + 0x18], 0	        81	shallow.c	FUNCTION_4
0x40005fe	    0xc74424200000	               mov dword [rsp + 0x20], 0	        82	shallow.c	FUNCTION_4
0x4000606	    0xc74424240000	               mov dword [rsp + 0x24], 0	        82	shallow.c	FUNCTION_4
0x400060e	    0x48c744242800	               mov qword [rsp + 0x28], 0	        82	shallow.c	FUNCTION_4
0x4000617	    0x660f1f840000	                    nop word [rax + rax]	        82	shallow.c	FUNCTION_4
0x4000620	          0x4d85f6	                           test r14, r14	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000623	            0x7444	                            je 0x4000669	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000625	        0x4183c701	                             add r15d, 1	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000629	          0x4c89f7	                            mov rdi, r14	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x400062c	      0xe800000000	                          call 0x4000631	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x4000631	    0x81fdffffff7f	                     cmp ebp, 0x7fffffff	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000637	            0x7477	                            je 0x40006b0	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000639	          0x4439fd	                           cmp ebp, r15d	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400063c	            0x7f72	                            jg 0x40006b0	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400063e	      0x488d742418	                   lea rsi, [rsp + 0x18]	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x4000643	          0x4c89f7	                            mov rdi, r14	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x4000646	      0xe800000000	                          call 0x400064b	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x400064b	          0x418b06	                    mov eax, dword [r14]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400064e	            0x89c2	                            mov edx, eax	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000650	      0x250f000080	                     and eax, 0x8000000f	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000655	          0xc1ea04	                              shr edx, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000658	          0x4409ea	                            or edx, r13d	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400065b	    0x81e2ffffff07	                      and edx, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000661	          0xc1e204	                              shl edx, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000664	             0x9d0	                             or eax, edx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000666	          0x418906	                    mov dword [r14], eax	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000669	      0x488b442408	                mov rax, qword [rsp + 8]	        86	shallow.c	FUNCTION_4	WHILE_1
0x400066e	          0x443920	                   cmp dword [rax], r12d	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000671	     0xf873f010000	                            ja 0x40007b6	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000677	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        86	shallow.c	FUNCTION_4	WHILE_1
0x400067b	            0x85c0	                           test eax, eax	        86	shallow.c	FUNCTION_4	WHILE_1
0x400067d	     0xf8491010000	                            je 0x4000814	        86	shallow.c	FUNCTION_4	WHILE_1
0x4000683	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000688	      0xe800000000	                          call 0x400068d	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x400068d	          0x4989c6	                            mov r14, rax	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000690	        0x488b4018	            mov rax, qword [rax + 0x18] 	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000694	          0x4c89f7	                            mov rdi, r14	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x4000697	          0x448b00	                    mov r8d, dword [rax]	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x400069a	        0x458d7801	                      lea r15d, [r8 + 1]	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x400069e	      0xe800000000	                          call 0x40006a3	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x40006a3	    0x81fdffffff7f	                     cmp ebp, 0x7fffffff	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006a9	            0x758e	                           jne 0x4000639	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006ab	       0xf1f440000	                   nop dword [rax + rax]	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006b0	      0xe800000000	                          call 0x40006b5	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x40006b5	            0x85c0	                           test eax, eax	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006b7	        0x498b5e30	            mov rbx, qword [r14 + 0x30] 	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x40006bb	     0xf84bf000000	                            je 0x4000780	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006c1	          0x4885db	                           test rbx, rbx	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x40006c4	     0xf848f000000	                            je 0x4000759	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x40006ca	          0x418b06	                    mov eax, dword [r14]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006cd	            0x89c2	                            mov edx, eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006cf	      0x250f000080	                     and eax, 0x8000000f	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006d4	          0xc1ea04	                              shr edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006d7	         0xb542404	                 or edx, dword [rsp + 4]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006db	    0x81e2ffffff07	                      and edx, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006e1	          0xc1e204	                              shl edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006e4	             0x9d0	                             or eax, edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006e6	          0x418906	                    mov dword [r14], eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006e9	            0xeb21	                           jmp 0x400070c	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006eb	       0xf1f440000	                   nop dword [rax + rax]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006f0	      0x488d542420	                   lea rdx, [rsp + 0x20]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x40006f5	            0x31f6	                            xor esi, esi	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x40006f7	          0x4c89f7	                            mov rdi, r14	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x40006fa	      0xe800000000	                          call 0x40006ff	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x40006ff	        0x488b5b08	                mov rbx, qword [rbx + 8]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000703	          0x4885db	                           test rbx, rbx	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000706	     0xf845dffffff	                            je 0x4000669	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x400070c	          0x488b3b	                    mov rdi, qword [rbx]	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400070f	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000713	          0x4885d2	                           test rdx, rdx	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000716	            0x7428	                            je 0x4000740	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000718	          0x44393a	                   cmp dword [rdx], r15d	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x400071b	            0x7ee2	                           jle 0x40006ff	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x400071d	          0x44893a	                   mov dword [rdx], r15d	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x4000720	          0x4989fe	                            mov r14, rdi	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x4000723	      0x48837b0800	                  cmp qword [rbx + 8], 0	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x4000728	            0x75c6	                           jne 0x40006f0	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x400072a	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x400072e	          0x448b38	                   mov r15d, dword [rax]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x4000731	      0xe9eafeffff	                           jmp 0x4000620	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x4000736	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x4000740	      0xbf04000000	                              mov edi, 4	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x4000745	      0xe800000000	                          call 0x400074a	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x400074a	          0x488b3b	                    mov rdi, qword [rbx]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400074d	        0x48894718	             mov qword [rdi + 0x18], rax	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000751	          0x4989fe	                            mov r14, rdi	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000754	          0x448938	                   mov dword [rax], r15d	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000757	            0xebca	                           jmp 0x4000723	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000759	        0x498d7e04	                      lea rdi, [r14 + 4]	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x400075d	      0xe800000000	                          call 0x4000762	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000762	          0x4885c0	                           test rax, rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000765	            0x740b	                            je 0x4000772	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000767	          0x8b5014	            mov edx, dword [rax + 0x14] 	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x400076a	            0x85d2	                           test edx, edx	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x400076c	     0xf88ccfeffff	                            js 0x400063e	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000772	        0x498b5e30	            mov rbx, qword [r14 + 0x30] 	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000776	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000780	          0x418b06	                    mov eax, dword [r14]	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000783	            0x89c2	                            mov edx, eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000785	      0x250f000080	                     and eax, 0x8000000f	       117	shallow.c	FUNCTION_4	WHILE_1
0x400078a	          0xc1ea04	                              shr edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x400078d	         0xb542404	                 or edx, dword [rsp + 4]	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000791	    0x81e2ffffff07	                      and edx, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x4000797	          0xc1e204	                              shl edx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x400079a	             0x9d0	                             or eax, edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x400079c	          0x4885db	                           test rbx, rbx	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x400079f	          0x418906	                    mov dword [r14], eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x40007a2	     0xf8564ffffff	                           jne 0x400070c	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40007a8	      0x488b442408	                mov rax, qword [rsp + 8]	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007ad	          0x443920	                   cmp dword [rax], r12d	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007b0	     0xf86c1feffff	                           jbe 0x4000677	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007b6	          0x4889c1	                            mov rcx, rax	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007b9	      0x418d5c2401	                      lea ebx, [r12 + 1]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007be	        0x49c1e405	                              shl r12, 5	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007c2	          0x4c89e0	                            mov rax, r12	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007c5	        0x48034108	                add rax, qword [rcx + 8]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007c9	            0x31d2	                            xor edx, edx	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007cb	            0x31f6	                            xor esi, esi	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007cd	          0x488b38	                    mov rdi, qword [rax]	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007d0	      0xe800000000	                          call 0x40007d5	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007d5	          0x4885c0	                           test rax, rax	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40007d8	          0x4989c6	                            mov r14, rax	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007db	            0x742f	                            je 0x400080c	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40007dd	        0x410fb606	                   movzx eax, byte [r14]	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40007e1	          0x4c63e3	                         movsxd r12, ebx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x40007e4	          0x83e00e	                            and eax, 0xe	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40007e7	            0x3c02	                               cmp al, 2	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40007e9	     0xf857afeffff	                           jne 0x4000669	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40007ef	        0x498b4618	            mov rax, qword [r14 + 0x18] 	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x40007f3	          0x4885c0	                           test rax, rax	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x40007f6	            0x7440	                            je 0x4000838	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x40007f8	    0xc70000000000	                      mov dword [rax], 0	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40007fe	          0x4c63e3	                         movsxd r12, ebx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000801	    0x41bf01000000	                             mov r15d, 1	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000807	      0xe91dfeffff	                           jmp 0x4000629	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x400080c	          0x4c63e3	                         movsxd r12, ebx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x400080f	      0xe955feffff	                           jmp 0x4000669	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000814	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       140	shallow.c	FUNCTION_4
0x4000819	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       140	shallow.c	FUNCTION_4
0x4000822	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       140	shallow.c	FUNCTION_4
0x4000827	            0x751f	                           jne 0x4000848	       140	shallow.c	FUNCTION_4
0x4000829	        0x4883c448	                           add rsp, 0x48	       140	shallow.c	FUNCTION_4
0x400082d	              0x5b	                                 pop rbx	       140	shallow.c	FUNCTION_4
0x400082e	              0x5d	                                 pop rbp	       140	shallow.c	FUNCTION_4
0x400082f	            0x415c	                                 pop r12	       140	shallow.c	FUNCTION_4
0x4000831	            0x415d	                                 pop r13	       140	shallow.c	FUNCTION_4
0x4000833	            0x415e	                                 pop r14	       140	shallow.c	FUNCTION_4
0x4000835	            0x415f	                                 pop r15	       140	shallow.c	FUNCTION_4
0x4000837	              0xc3	                                     ret	       140	shallow.c	FUNCTION_4
0x4000838	      0xbf04000000	                              mov edi, 4	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x400083d	      0xe800000000	                          call 0x4000842	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x4000842	        0x49894618	             mov qword [r14 + 0x18], rax	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x4000846	            0xebb0	                           jmp 0x40007f8	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x4000848	      0xe800000000	                          call 0x400084d	       140	shallow.c	FUNCTION_4
write_one_shallow	DO,0:IF,5:functions,0:WHILE,0:SWITCH,0:ELSE,1:CALL,6:FOR,0	81
0x4000160	            0x4154	                                push r12	       238	shallow.c	FUNCTION_8
0x4000162	              0x55	                                push rbp	       238	shallow.c	FUNCTION_8
0x4000163	          0x4889f5	                            mov rbp, rsi	       238	shallow.c	FUNCTION_8
0x4000166	              0x53	                                push rbx	       238	shallow.c	FUNCTION_8
0x4000167	          0x4889fb	                            mov rbx, rdi	       238	shallow.c	FUNCTION_8
0x400016a	      0xe800000000	                          call 0x400016f	       240	shallow.c	FUNCTION_8	CALL_1
0x400016f	        0x837b14ff	cmp dword [rbx + 0x14], 0xffffffffffffffff	       241	shallow.c	FUNCTION_8	IF_1
0x4000173	            0x740b	                            je 0x4000180	       241	shallow.c	FUNCTION_8	IF_1
0x4000175	              0x5b	                                 pop rbx	       260	shallow.c	FUNCTION_8
0x4000176	            0x31c0	                            xor eax, eax	       260	shallow.c	FUNCTION_8
0x4000178	              0x5d	                                 pop rbp	       260	shallow.c	FUNCTION_8
0x4000179	            0x415c	                                 pop r12	       260	shallow.c	FUNCTION_8
0x400017b	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
0x400017c	         0xf1f4000	                         nop dword [rax]	       260	shallow.c	FUNCTION_8
0x4000180	        0xf6451001	               test byte [rbp + 0x10], 1	       243	shallow.c	FUNCTION_8	IF_2
0x4000184	          0x4989c4	                            mov r12, rax	       243	shallow.c	FUNCTION_8	IF_2
0x4000187	     0xf858b000000	                           jne 0x4000218	       243	shallow.c	FUNCTION_8	IF_2
0x400018d	          0x8b4508	                mov eax, dword [rbp + 8]	       253	shallow.c	FUNCTION_8	IF_5
0x4000190	        0x83450c01	                add dword [rbp + 0xc], 1	       252	shallow.c	FUNCTION_8
0x4000194	            0x85c0	                           test eax, eax	       253	shallow.c	FUNCTION_8	IF_5
0x4000196	            0x7560	                           jne 0x40001f8	       253	shallow.c	FUNCTION_8	IF_5
0x4000198	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_106	CALL_2
0x400019b	      0xe800000000	                          call 0x40001a0	       279	strbuf.h	FUNCTION_106	CALL_2
0x40001a0	        0x488b7d00	                    mov rdi, qword [rbp]	       279	strbuf.h	FUNCTION_106	CALL_2
0x40001a4	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_106	CALL_2
0x40001a7	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_106	CALL_2
0x40001aa	      0xe800000000	                          call 0x40001af	       279	strbuf.h	FUNCTION_106	CALL_2
0x40001af	        0x488b5d00	                    mov rbx, qword [rbp]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x40001b3	          0x488b03	                    mov rax, qword [rbx]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x40001b6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_103
0x40001b9	     0xf85a1000000	                           jne 0x4000260	       141	strbuf.h	FUNCTION_103
0x40001bf	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_105	CALL_2
0x40001c4	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_105	CALL_2
0x40001c7	      0xe800000000	                          call 0x40001cc	       228	strbuf.h	FUNCTION_105	CALL_2
0x40001cc	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_105	CALL_2
0x40001d0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_105
0x40001d4	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_105
0x40001d8	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_105
0x40001dc	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_105
0x40001e0	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_105
0x40001e4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_105
0x40001e8	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_105
0x40001ec	            0x31c0	                            xor eax, eax	       260	shallow.c	FUNCTION_8
0x40001ee	              0x5b	                                 pop rbx	       260	shallow.c	FUNCTION_8
0x40001ef	              0x5d	                                 pop rbp	       260	shallow.c	FUNCTION_8
0x40001f0	            0x415c	                                 pop r12	       260	shallow.c	FUNCTION_8
0x40001f2	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
0x40001f3	       0xf1f440000	                   nop dword [rax + rax]	       260	shallow.c	FUNCTION_8
0x40001f8	        0x488b7d00	                    mov rdi, qword [rbp]	       254	shallow.c	FUNCTION_8	CALL_4
0x40001fc	          0x4c89e2	                            mov rdx, r12	       254	shallow.c	FUNCTION_8	CALL_4
0x40001ff	            0x31c0	                            xor eax, eax	       254	shallow.c	FUNCTION_8	CALL_4
0x4000201	      0xbe00000000	                              mov esi, 0	       254	shallow.c	FUNCTION_8	CALL_4
0x4000206	      0xe800000000	                          call 0x400020b	       254	shallow.c	FUNCTION_8	CALL_4
0x400020b	              0x5b	                                 pop rbx	       260	shallow.c	FUNCTION_8
0x400020c	            0x31c0	                            xor eax, eax	       260	shallow.c	FUNCTION_8
0x400020e	              0x5d	                                 pop rbp	       260	shallow.c	FUNCTION_8
0x400020f	            0x415c	                                 pop r12	       260	shallow.c	FUNCTION_8
0x4000211	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
0x4000212	    0x660f1f440000	                    nop word [rax + rax]	       260	shallow.c	FUNCTION_8
0x4000218	          0x4889df	                            mov rdi, rbx	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x400021b	      0xe800000000	                          call 0x4000220	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x4000220	          0x4885c0	                           test rax, rax	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000223	            0x7409	                            je 0x400022e	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000225	          0xf60010	                   test byte [rax], 0x10	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000228	     0xf855fffffff	                           jne 0x400018d	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x400022e	        0xf6451002	               test byte [rbp + 0x10], 2	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000232	     0xf843dffffff	                            je 0x4000175	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000238	        0x488d7804	                      lea rdi, [rax + 4]	       248	shallow.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x400023c	      0xe800000000	                          call 0x4000241	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000241	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_207
0x4000246	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_207
0x4000249	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_207
0x400024e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_207
0x4000250	      0xe800000000	                          call 0x4000255	       104	stdio2.h	CALL_207
0x4000255	      0xe91bffffff	                           jmp 0x4000175	       104	stdio2.h	CALL_207
0x400025a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_207
0x4000260	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_103
0x4000264	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_105	IF_1	CALL_1
0x4000268	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_105	IF_1	CALL_1
0x400026b	     0xf855fffffff	                           jne 0x40001d0	       227	strbuf.h	FUNCTION_105	IF_1	CALL_1
0x4000271	      0xe949ffffff	                           jmp 0x40001bf	       227	strbuf.h	FUNCTION_105	IF_1	CALL_1
is_repository_shallow	DO,0:IF,4:functions,0:WHILE,1:SWITCH,0:ELSE,0:CALL,9:FOR,0	84
0x4000450	              0x55	                                push rbp	        44	shallow.c	FUNCTION_3
0x4000451	              0x53	                                push rbx	        44	shallow.c	FUNCTION_3
0x4000452	    0x4881ec380400	                          sub rsp, 0x438	        44	shallow.c	FUNCTION_3
0x4000459	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	shallow.c	FUNCTION_3
0x4000462	    0x488984242804	            mov qword [rsp + 0x428], rax	        44	shallow.c	FUNCTION_3
0x400046a	            0x31c0	                            xor eax, eax	        44	shallow.c	FUNCTION_3
0x400046c	    0x8b0500000000	            mov eax, dword [0x04000472] 	        49	shallow.c	FUNCTION_3	IF_1
0x4000472	            0x85c0	                           test eax, eax	        49	shallow.c	FUNCTION_3	IF_1
0x4000474	            0x782a	                            js 0x40004a0	        49	shallow.c	FUNCTION_3	IF_1
0x4000476	    0x488b8c242804	           mov rcx, qword [rsp + 0x428] 	        75	shallow.c	FUNCTION_3
0x400047e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        75	shallow.c	FUNCTION_3
0x4000487	     0xf852c010000	                           jne 0x40005b9	        75	shallow.c	FUNCTION_3
0x400048d	    0x4881c4380400	                          add rsp, 0x438	        75	shallow.c	FUNCTION_3
0x4000494	              0x5b	                                 pop rbx	        75	shallow.c	FUNCTION_3
0x4000495	              0x5d	                                 pop rbp	        75	shallow.c	FUNCTION_3
0x4000496	              0xc3	                                     ret	        75	shallow.c	FUNCTION_3
0x4000497	    0x660f1f840000	                    nop word [rax + rax]	        75	shallow.c	FUNCTION_3
0x40004a0	    0x488b3d000000	            mov rdi, qword [0x040004a7] 	        47	shallow.c	FUNCTION_3
0x40004a7	          0x4885ff	                           test rdi, rdi	        52	shallow.c	FUNCTION_3	IF_2
0x40004aa	     0xf84eb000000	                            je 0x400059b	        52	shallow.c	FUNCTION_3	IF_2
0x40004b0	          0x803f00	                       cmp byte [rdi], 0	        59	shallow.c	FUNCTION_3	IF_3
0x40004b3	     0xf84c7000000	                            je 0x4000580	        59	shallow.c	FUNCTION_3	IF_3
0x40004b9	      0xbe00000000	                              mov esi, 0	        59	shallow.c	FUNCTION_3	IF_3
0x40004be	      0xe800000000	                          call 0x40004c3	        59	shallow.c	FUNCTION_3	IF_3
0x40004c3	          0x4885c0	                           test rax, rax	        59	shallow.c	FUNCTION_3	IF_3
0x40004c6	          0x4889c5	                            mov rbp, rax	        59	shallow.c	FUNCTION_3	IF_3
0x40004c9	     0xf84b1000000	                            je 0x4000580	        59	shallow.c	FUNCTION_3	IF_3
0x40004cf	          0x4889c7	                            mov rdi, rax	        64	shallow.c	FUNCTION_3	CALL_4
0x40004d2	      0xe800000000	                          call 0x40004d7	        64	shallow.c	FUNCTION_3	CALL_4
0x40004d7	      0xbf00000000	                              mov edi, 0	        64	shallow.c	FUNCTION_3	CALL_4
0x40004dc	            0x89c6	                            mov esi, eax	        64	shallow.c	FUNCTION_3	CALL_4
0x40004de	      0xe800000000	                          call 0x40004e3	        64	shallow.c	FUNCTION_3	CALL_4
0x40004e3	    0xc70500000000	               mov dword [0x040004ed], 1	        65	shallow.c	FUNCTION_3
0x40004ed	            0xeb65	                           jmp 0x4000554	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004ef	              0x90	                                     nop	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004f0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40004f5	          0x4889e6	                            mov rsi, rsp	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40004f8	      0xe800000000	                          call 0x40004fd	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40004fd	            0x85c0	                           test eax, eax	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x40004ff	     0xf85a3000000	                           jne 0x40005a8	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x4000505	      0xbf18000000	                           mov edi, 0x18	        32	shallow.c	FUNCTION_2
0x400050a	      0xe800000000	                          call 0x400050f	        32	shallow.c	FUNCTION_2
0x400050f	          0x4889e7	                            mov rdi, rsp	        34	shallow.c	FUNCTION_2	CALL_2
0x4000512	          0x4889c3	                            mov rbx, rax	        32	shallow.c	FUNCTION_2
0x4000515	      0xe800000000	                          call 0x400051a	        34	shallow.c	FUNCTION_2	CALL_2
0x400051a	        0x488b1424	                    mov rdx, qword [rsp]	        53	string3.h	FUNCTION_73	CALL_3
0x400051e	          0x4885c0	                           test rax, rax	        38	shallow.c	FUNCTION_2	IF_1
0x4000521	          0x488913	                    mov qword [rbx], rdx	        53	string3.h	FUNCTION_73	CALL_3
0x4000524	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_73	CALL_3
0x4000529	        0x48895308	                mov qword [rbx + 8], rdx	        53	string3.h	FUNCTION_73	CALL_3
0x400052d	        0x8b542410	            mov edx, dword [rsp + 0x10] 	        53	string3.h	FUNCTION_73	CALL_3
0x4000531	    0xc74314ffffff	     mov dword [rbx + 0x14], 0xffffffff 	        37	shallow.c	FUNCTION_2
0x4000538	          0x895310	             mov dword [rbx + 0x10], edx	        53	string3.h	FUNCTION_73	CALL_3
0x400053b	            0x740d	                            je 0x400054a	        38	shallow.c	FUNCTION_2	IF_1
0x400053d	          0xf60001	                      test byte [rax], 1	        38	shallow.c	FUNCTION_2	IF_1
0x4000540	            0x7408	                            je 0x400054a	        38	shallow.c	FUNCTION_2	IF_1
0x4000542	    0x48c740300000	               mov qword [rax + 0x30], 0	        39	shallow.c	FUNCTION_2	IF_1
0x400054a	            0x31f6	                            xor esi, esi	        40	shallow.c	FUNCTION_2	CALL_4
0x400054c	          0x4889df	                            mov rdi, rbx	        40	shallow.c	FUNCTION_2	CALL_4
0x400054f	      0xe800000000	                          call 0x4000554	        40	shallow.c	FUNCTION_2	CALL_4
0x4000554	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       263	stdio2.h	FUNCTION_98	CALL_8
0x4000559	          0x4889ea	                            mov rdx, rbp	       263	stdio2.h	FUNCTION_98	CALL_8
0x400055c	      0xbe00040000	                          mov esi, 0x400	       263	stdio2.h	FUNCTION_98	CALL_8
0x4000561	      0xe800000000	                          call 0x4000566	       263	stdio2.h	FUNCTION_98	CALL_8
0x4000566	          0x4885c0	                           test rax, rax	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x4000569	            0x7585	                           jne 0x40004f0	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x400056b	          0x4889ef	                            mov rdi, rbp	        73	shallow.c	FUNCTION_3	CALL_9
0x400056e	      0xe800000000	                          call 0x4000573	        73	shallow.c	FUNCTION_3	CALL_9
0x4000573	    0x8b0500000000	            mov eax, dword [0x04000579] 	        74	shallow.c	FUNCTION_3
0x4000579	      0xe9f8feffff	                           jmp 0x4000476	        74	shallow.c	FUNCTION_3
0x400057e	            0x6690	                                     nop	        74	shallow.c	FUNCTION_3
0x4000580	      0xbf00000000	                              mov edi, 0	        60	shallow.c	FUNCTION_3	IF_3	CALL_2
0x4000585	      0xe800000000	                          call 0x400058a	        60	shallow.c	FUNCTION_3	IF_3	CALL_2
0x400058a	    0xc70500000000	               mov dword [0x04000594], 0	        61	shallow.c	FUNCTION_3	IF_3
0x4000594	            0x31c0	                            xor eax, eax	        62	shallow.c	FUNCTION_3	IF_3
0x4000596	      0xe9dbfeffff	                           jmp 0x4000476	        62	shallow.c	FUNCTION_3	IF_3
0x400059b	      0xe800000000	                          call 0x40005a0	        53	shallow.c	FUNCTION_3	CALL_1
0x40005a0	          0x4889c7	                            mov rdi, rax	        53	shallow.c	FUNCTION_3	CALL_1
0x40005a3	      0xe908ffffff	                           jmp 0x40004b0	        53	shallow.c	FUNCTION_3	CALL_1
0x40005a8	      0x488d742420	                   lea rsi, [rsp + 0x20]	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x40005ad	      0xbf00000000	                              mov edi, 0	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x40005b2	            0x31c0	                            xor eax, eax	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x40005b4	      0xe800000000	                          call 0x40005b9	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x40005b9	      0xe800000000	                          call 0x40005be	        75	shallow.c	FUNCTION_3
delayed_reachability_test	DO,0:IF,2:functions,0:WHILE,0:SWITCH,0:ELSE,0:CALL,5:FOR,0	59
0x4001fe0	            0x4155	                                push r13	       725	shallow.c	FUNCTION_26
0x4001fe2	            0x4154	                                push r12	       725	shallow.c	FUNCTION_26
0x4001fe4	          0x4989fc	                            mov r12, rdi	       725	shallow.c	FUNCTION_26
0x4001fe7	              0x55	                                push rbp	       725	shallow.c	FUNCTION_26
0x4001fe8	              0x53	                                push rbx	       725	shallow.c	FUNCTION_26
0x4001fe9	          0x4863de	                         movsxd rbx, esi	       726	shallow.c	FUNCTION_26	IF_1
0x4001fec	        0x4883ec28	                           sub rsp, 0x28	       725	shallow.c	FUNCTION_26
0x4001ff0	    0x64488b042528	                mov rax, qword fs:[0x28]	       725	shallow.c	FUNCTION_26
0x4001ff9	      0x4889442418	             mov qword [rsp + 0x18], rax	       725	shallow.c	FUNCTION_26
0x4001ffe	            0x31c0	                            xor eax, eax	       725	shallow.c	FUNCTION_26
0x4002000	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       726	shallow.c	FUNCTION_26	IF_1
0x4002004	          0x8b0498	            mov eax, dword [rax + rbx*4]	       726	shallow.c	FUNCTION_26	IF_1
0x4002007	            0x85c0	                           test eax, eax	       726	shallow.c	FUNCTION_26	IF_1
0x4002009	            0x752d	                           jne 0x4002038	       726	shallow.c	FUNCTION_26	IF_1
0x400200b	      0x498b442440	            mov rax, qword [r12 + 0x40] 	       744	shallow.c	FUNCTION_26
0x4002010	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       745	shallow.c	FUNCTION_26
0x4002015	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       745	shallow.c	FUNCTION_26
0x400201e	          0x8b0498	            mov eax, dword [rax + rbx*4]	       744	shallow.c	FUNCTION_26
0x4002021	     0xf85a0000000	                           jne 0x40020c7	       745	shallow.c	FUNCTION_26
0x4002027	        0x4883c428	                           add rsp, 0x28	       745	shallow.c	FUNCTION_26
0x400202b	              0x5b	                                 pop rbx	       745	shallow.c	FUNCTION_26
0x400202c	              0x5d	                                 pop rbp	       745	shallow.c	FUNCTION_26
0x400202d	            0x415c	                                 pop r12	       745	shallow.c	FUNCTION_26
0x400202f	            0x415d	                                 pop r13	       745	shallow.c	FUNCTION_26
0x4002031	              0xc3	                                     ret	       745	shallow.c	FUNCTION_26
0x4002032	    0x660f1f440000	                    nop word [rax + rax]	       745	shallow.c	FUNCTION_26
0x4002038	          0x488b07	                    mov rax, qword [rdi]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x400203b	    0x488d2c9d0000	                        lea rbp, [rbx*4]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002043	      0x488d541d00	                    lea rdx, [rbp + rbx]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002048	          0x488b00	                    mov rax, qword [rax]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x400204b	        0x488d3c90	                  lea rdi, [rax + rdx*4]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x400204f	      0xe800000000	                          call 0x4002054	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002054	      0x498b542450	            mov rdx, qword [r12 + 0x50] 	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4002059	          0x4989c5	                            mov r13, rax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x400205c	          0x4885d2	                           test rdx, rdx	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x400205f	            0x7427	                            je 0x4002088	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4002061	      0x418b742458	            mov esi, dword [r12 + 0x58] 	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4002066	      0x49036c2440	             add rbp, qword [r12 + 0x40]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x400206b	          0x4c89ef	                            mov rdi, r13	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x400206e	      0xe800000000	                          call 0x4002073	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4002073	          0x894500	                    mov dword [rbp], eax	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4002076	      0x498b442438	            mov rax, qword [r12 + 0x38] 	       742	shallow.c	FUNCTION_26	IF_1
0x400207b	    0xc70498000000	              mov dword [rax + rbx*4], 0	       742	shallow.c	FUNCTION_26	IF_1
0x4002082	            0xeb87	                           jmp 0x400200b	       742	shallow.c	FUNCTION_26	IF_1
0x4002084	         0xf1f4000	                         nop dword [rax]	       742	shallow.c	FUNCTION_26	IF_1
0x4002088	          0x4889e6	                            mov rsi, rsp	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x400208b	      0xbf00000000	                              mov edi, 0	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x4002090	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_76	CALL_6
0x4002098	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_76	CALL_6
0x40020a1	      0xe800000000	                          call 0x40020a6	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x40020a6	          0x4889e6	                            mov rsi, rsp	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x40020a9	      0xbf00000000	                              mov edi, 0	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x40020ae	      0xe800000000	                          call 0x40020b3	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x40020b3	        0x488b1424	                    mov rdx, qword [rsp]	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x40020b7	        0x8b742408	                mov esi, dword [rsp + 8]	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x40020bb	      0x4989542450	             mov qword [r12 + 0x50], rdx	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x40020c0	      0x4189742458	             mov dword [r12 + 0x58], esi	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x40020c5	            0xeb9f	                           jmp 0x4002066	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x40020c7	      0xe800000000	                  call section_end..text	       745	shallow.c	FUNCTION_26
