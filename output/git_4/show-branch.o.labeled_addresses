append_one_rev	WHILE,0:DO,0:IF,3:functions,0:CALL,10:SWITCH,0:FOR,0:ELSE,0	121
0x4000560	            0x4155	                                push r13	       515	show-branch.c	FUNCTION_24
0x4000562	            0x4154	                                push r12	       515	show-branch.c	FUNCTION_24
0x4000564	              0x55	                                push rbp	       515	show-branch.c	FUNCTION_24
0x4000565	              0x53	                                push rbx	       515	show-branch.c	FUNCTION_24
0x4000566	          0x4889fd	                            mov rbp, rdi	       515	show-branch.c	FUNCTION_24
0x4000569	        0x4883ec28	                           sub rsp, 0x28	       515	show-branch.c	FUNCTION_24
0x400056d	          0x4889e6	                            mov rsi, rsp	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000570	    0x64488b042528	                mov rax, qword fs:[0x28]	       515	show-branch.c	FUNCTION_24
0x4000579	      0x4889442418	             mov qword [rsp + 0x18], rax	       515	show-branch.c	FUNCTION_24
0x400057e	            0x31c0	                            xor eax, eax	       515	show-branch.c	FUNCTION_24
0x4000580	      0xe800000000	                          call 0x4000585	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000585	            0x85c0	                           test eax, eax	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x4000587	     0xf84d3000000	                            je 0x4000660	       517	show-branch.c	FUNCTION_24	IF_1	CALL_1
0x400058d	      0xbe2a000000	                           mov esi, 0x2a	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000592	          0x4889ef	                            mov rdi, rbp	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000595	      0xe800000000	                          call 0x400059a	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400059a	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400059d	     0xf847d000000	                            je 0x4000620	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x40005a3	          0x4889ef	                            mov rdi, rbp	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005a6	    0x48631d000000	         movsxd rbx, dword [0x040005ad] 	       523	show-branch.c	FUNCTION_24	IF_2
0x40005ad	    0x48892d000000	            mov qword [0x040005b4], rbp 	       525	show-branch.c	FUNCTION_24	IF_2
0x40005b4	      0xe800000000	                          call 0x40005b9	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005b9	            0x31f6	                            xor esi, esi	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005bb	      0xbf00000000	                              mov edi, 0	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005c0	    0x890500000000	            mov dword [0x040005c6], eax 	       526	show-branch.c	FUNCTION_24	IF_2	CALL_6
0x40005c6	      0xe800000000	                          call 0x40005cb	       527	show-branch.c	FUNCTION_24	IF_2	CALL_7
0x40005cb	    0x8b3500000000	            mov esi, dword [0x040005d1] 	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005d1	          0x83fe18	                           cmp esi, 0x18	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005d4	            0x7f08	                            jg 0x40005de	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005d6	            0x39f3	                            cmp ebx, esi	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005d8	     0xf84da000000	                            je 0x40006b8	       528	show-branch.c	FUNCTION_24	IF_2	IF_3
0x40005de	            0x29de	                            sub esi, ebx	       357	show-branch.c	FUNCTION_14
0x40005e0	          0x4863f6	                         movsxd rsi, esi	       357	show-branch.c	FUNCTION_14
0x40005e3	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_53	IF_1
0x40005e7	            0x7617	                           jbe 0x4000600	      1048	git-compat-util.h	FUNCTION_53	IF_1
0x40005e9	    0x488d3cdd0000	                        lea rdi, [rbx*8]	      1049	git-compat-util.h	FUNCTION_53	IF_1
0x40005f1	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_53	IF_1
0x40005f6	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_53	IF_1
0x40005fb	      0xe800000000	                          call 0x4000600	      1049	git-compat-util.h	FUNCTION_53	IF_1
0x4000600	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       535	show-branch.c	FUNCTION_24
0x4000605	    0x644833042528	                xor rax, qword fs:[0x28]	       535	show-branch.c	FUNCTION_24
0x400060e	     0xf853f010000	                           jne 0x4000753	       535	show-branch.c	FUNCTION_24
0x4000614	        0x4883c428	                           add rsp, 0x28	       535	show-branch.c	FUNCTION_24
0x4000618	              0x5b	                                 pop rbx	       535	show-branch.c	FUNCTION_24
0x4000619	              0x5d	                                 pop rbp	       535	show-branch.c	FUNCTION_24
0x400061a	            0x415c	                                 pop r12	       535	show-branch.c	FUNCTION_24
0x400061c	            0x415d	                                 pop r13	       535	show-branch.c	FUNCTION_24
0x400061e	              0xc3	                                     ret	       535	show-branch.c	FUNCTION_24
0x400061f	              0x90	                                     nop	       535	show-branch.c	FUNCTION_24
0x4000620	      0xbe3f000000	                           mov esi, 0x3f	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000625	          0x4889ef	                            mov rdi, rbp	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000628	      0xe800000000	                          call 0x400062d	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400062d	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000630	     0xf856dffffff	                           jne 0x40005a3	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000636	      0xbe5b000000	                           mov esi, 0x5b	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400063b	          0x4889ef	                            mov rdi, rbp	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400063e	      0xe800000000	                          call 0x4000643	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000643	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x4000646	     0xf8557ffffff	                           jne 0x40005a3	       521	show-branch.c	FUNCTION_24	IF_2	CALL_5
0x400064c	          0x4889ee	                            mov rsi, rbp	       534	show-branch.c	FUNCTION_24	CALL_10
0x400064f	      0xbf00000000	                              mov edi, 0	       534	show-branch.c	FUNCTION_24	CALL_10
0x4000654	            0x31c0	                            xor eax, eax	       534	show-branch.c	FUNCTION_24	CALL_10
0x4000656	      0xe800000000	                          call 0x400065b	       534	show-branch.c	FUNCTION_24	CALL_10
0x400065b	       0xf1f440000	                   nop dword [rax + rax]	       534	show-branch.c	FUNCTION_24	CALL_10
0x4000660	      0xbe01000000	                              mov esi, 1	       363	show-branch.c	FUNCTION_15	CALL_1
0x4000665	          0x4889e7	                            mov rdi, rsp	       363	show-branch.c	FUNCTION_15	CALL_1
0x4000668	      0xe800000000	                          call 0x400066d	       363	show-branch.c	FUNCTION_15	CALL_1
0x400066d	          0x4885c0	                           test rax, rax	       366	show-branch.c	FUNCTION_15	IF_1
0x4000670	            0x748e	                            je 0x4000600	       366	show-branch.c	FUNCTION_15	IF_1
0x4000672	    0x4c632d000000	         movsxd r13, dword [0x04000679] 	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x4000679	          0x4585ed	                         test r13d, r13d	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x400067c	            0x7e70	                           jle 0x40006ee	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x400067e	        0x418d45ff	                      lea eax, [r13 - 1]	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x4000682	      0xbb00000000	                              mov ebx, 0	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x4000687	    0x4c8d24c50000	                        lea r12, [rax*8]	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x400068f	            0xeb10	                           jmp 0x40006a1	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x4000691	     0xf1f80000000	                         nop dword [rax]	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x4000698	        0x4883c308	                              add rbx, 8	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x400069c	          0x4c39e3	                            cmp rbx, r12	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x400069f	            0x7447	                            je 0x40006e8	       371	show-branch.c	FUNCTION_15	IF_2	FOR_1
0x40006a1	          0x488b33	                    mov rsi, qword [rbx]	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40006a4	          0x4889ef	                            mov rdi, rbp	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40006a7	      0xe800000000	                          call 0x40006ac	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40006ac	            0x85c0	                           test eax, eax	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40006ae	            0x75e8	                           jne 0x4000698	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40006b0	      0xe94bffffff	                           jmp 0x4000600	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40006b5	           0xf1f00	                         nop dword [rax]	       372	show-branch.c	FUNCTION_15	IF_2	FOR_1	IF_3	CALL_2
0x40006b8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_58
0x40006bd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_58
0x40006c2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_58
0x40006c4	      0xe800000000	                          call 0x40006c9	        54	gettext.h	FUNCTION_58
0x40006c9	          0x4889ee	                            mov rsi, rbp	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40006cc	          0x4889c7	                            mov rdi, rax	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40006cf	            0x31c0	                            xor eax, eax	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40006d1	      0xe800000000	                          call 0x40006d6	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40006d6	    0x8b3500000000	            mov esi, dword [0x040006dc] 	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40006dc	      0xe9fdfeffff	                           jmp 0x40005de	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40006e1	     0xf1f80000000	                         nop dword [rax]	       530	show-branch.c	FUNCTION_24	IF_2	CALL_8
0x40006e8	        0x4183fd18	                          cmp r13d, 0x18	       375	show-branch.c	FUNCTION_15	IF_4
0x40006ec	            0x7f32	                            jg 0x4000720	       375	show-branch.c	FUNCTION_15	IF_4
0x40006ee	        0x418d4501	                      lea eax, [r13 + 1]	       381	show-branch.c	FUNCTION_15	CALL_5
0x40006f2	          0x4889ef	                            mov rdi, rbp	       381	show-branch.c	FUNCTION_15	CALL_5
0x40006f5	    0x890500000000	            mov dword [0x040006fb], eax 	       381	show-branch.c	FUNCTION_15	CALL_5
0x40006fb	      0xe800000000	                          call 0x4000700	       381	show-branch.c	FUNCTION_15	CALL_5
0x4000700	    0x4a8904ed0000	                  mov qword [r13*8], rax	       381	show-branch.c	FUNCTION_15	CALL_5
0x4000708	    0x486305000000	         movsxd rax, dword [0x0400070f] 	       382	show-branch.c	FUNCTION_15
0x400070f	    0x48c704c50000	                    mov qword [rax*8], 0	       382	show-branch.c	FUNCTION_15
0x400071b	      0xe9e0feffff	                           jmp 0x4000600	       382	show-branch.c	FUNCTION_15
0x4000720	            0x31ff	                            xor edi, edi	        62	gettext.h	FUNCTION_59
0x4000722	    0x41b805000000	                              mov r8d, 5	        62	gettext.h	FUNCTION_59
0x4000728	      0xb919000000	                           mov ecx, 0x19	        62	gettext.h	FUNCTION_59
0x400072d	      0xba00000000	                              mov edx, 0	        62	gettext.h	FUNCTION_59
0x4000732	      0xbe00000000	                              mov esi, 0	        62	gettext.h	FUNCTION_59
0x4000737	      0xe800000000	                          call 0x400073c	        62	gettext.h	FUNCTION_59
0x400073c	      0xba19000000	                           mov edx, 0x19	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000741	          0x4889c7	                            mov rdi, rax	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000744	          0x4889ee	                            mov rsi, rbp	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000747	            0x31c0	                            xor eax, eax	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000749	      0xe800000000	                          call 0x400074e	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x400074e	      0xe9adfeffff	                           jmp 0x4000600	       376	show-branch.c	FUNCTION_15	IF_4	CALL_4
0x4000753	      0xe800000000	                          call 0x4000758	       535	show-branch.c	FUNCTION_24
compare_ref_name	WHILE,0:DO,0:IF,0:functions,0:CALL,1:SWITCH,0:FOR,0:ELSE,0	77
0x4000040	          0x488b36	                    mov rsi, qword [rsi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000043	          0x488b3f	                    mov rdi, qword [rdi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000046	           0xfbe16	                   movsx edx, byte [rsi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000049	           0xfbe0f	                   movsx ecx, byte [rdi]	       352	show-branch.c	FUNCTION_13	CALL_1
0x400004c	          0x8d41d0	                   lea eax, [rcx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400004f	            0x3c09	                               cmp al, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000051	     0xf87cc000000	                            ja 0x4000123	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000057	            0x31c0	                            xor eax, eax	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000059	     0xf1f80000000	                         nop dword [rax]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000060	          0x8d0480	                  lea eax, [rax + rax*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x4000063	        0x4883c701	                              add rdi, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x4000067	        0x8d4441d0	           lea eax, [rcx + rax*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x400006b	           0xfbe0f	                   movsx ecx, byte [rdi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400006e	        0x448d41d0	                   lea r8d, [rcx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000072	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000076	            0x76e8	                           jbe 0x4000060	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000078	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400007b	          0x80f909	                               cmp cl, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x400007e	     0xf87b2000000	                            ja 0x4000136	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000084	            0x31c9	                            xor ecx, ecx	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000086	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000090	          0x8d0c89	                  lea ecx, [rcx + rcx*4]	       314	show-branch.c	FUNCTION_11	FOR_1
0x4000093	        0x4883c601	                              add rsi, 1	       313	show-branch.c	FUNCTION_11	FOR_1
0x4000097	        0x8d4c4ad0	           lea ecx, [rdx + rcx*2 - 0x30]	       314	show-branch.c	FUNCTION_11	FOR_1
0x400009b	           0xfbe16	                   movsx edx, byte [rsi]	       312	show-branch.c	FUNCTION_11	FOR_1
0x400009e	        0x448d42d0	                   lea r8d, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a2	        0x4180f809	                              cmp r8b, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a6	            0x76e8	                           jbe 0x4000090	       312	show-branch.c	FUNCTION_11	FOR_1
0x40000a8	            0x39c1	                            cmp ecx, eax	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000aa	            0x7574	                           jne 0x4000120	       327	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x40000ac	           0xfbe0f	                   movsx ecx, byte [rdi]	       331	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000af	           0xfbe16	                   movsx edx, byte [rsi]	       332	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000b2	        0x440fbec1	                           movsx r8d, cl	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000b6	        0x440fbeca	                           movsx r9d, dl	       332	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000ba	        0x418d40d0	                    lea eax, [r8 - 0x30]	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000be	          0x83f809	                              cmp eax, 9	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000c1	        0x418d41d0	                    lea eax, [r9 - 0x30]	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000c5	            0x7621	                           jbe 0x40000e8	       333	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x40000c7	          0x83f809	                              cmp eax, 9	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000ca	          0x4489c0	                            mov eax, r8d	       331	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000cd	            0x7631	                           jbe 0x4000100	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000cf	          0x4539c8	                            cmp r8d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x40000d2	            0x7534	                           jne 0x4000108	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x40000d4	          0x4585c0	                           test r8d, r8d	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x40000d7	            0x7414	                            je 0x40000ed	       339	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_5
0x40000d9	        0x4883c701	                              add rdi, 1	       341	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000dd	        0x4883c601	                              add rsi, 1	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e1	            0xebc9	                           jmp 0x40000ac	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e3	       0xf1f440000	                   nop dword [rax + rax]	       342	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2
0x40000e8	          0x83f809	                              cmp eax, 9	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000eb	            0x7723	                            ja 0x4000110	       335	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_3
0x40000ed	            0x89c8	                            mov eax, ecx	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000ef	             0x8d0	                               or al, dl	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000f1	     0xf8555ffffff	                           jne 0x400004c	       344	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000f7	            0x31c0	                            xor eax, eax	       345	show-branch.c	FUNCTION_12	WHILE_1	IF_6
0x40000f9	              0xc3	                                     ret	       352	show-branch.c	FUNCTION_13	CALL_1
0x40000fa	    0x660f1f440000	                    nop word [rax + rax]	       352	show-branch.c	FUNCTION_13	CALL_1
0x4000100	          0x4585c0	                           test r8d, r8d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000103	            0x74e8	                            je 0x40000ed	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000105	          0x4531c9	                            xor r9d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000108	          0x4429c8	                            sub eax, r9d	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400010b	              0xc3	                                     ret	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x400010c	         0xf1f4000	                         nop dword [rax]	       338	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000110	          0x4585c9	                           test r9d, r9d	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000113	            0x74d8	                            je 0x40000ed	       337	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_4
0x4000115	            0x31c0	                            xor eax, eax	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000117	            0xebef	                           jmp 0x4000108	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000119	     0xf1f80000000	                         nop dword [rax]	       334	show-branch.c	FUNCTION_12	WHILE_1	WHILE_2	IF_2
0x4000120	            0x29c8	                            sub eax, ecx	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x4000122	              0xc3	                                     ret	       328	show-branch.c	FUNCTION_12	WHILE_1	IF_1
0x4000123	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000126	            0x31c0	                            xor eax, eax	       311	show-branch.c	FUNCTION_11	FOR_1
0x4000128	          0x80f909	                               cmp cl, 9	       312	show-branch.c	FUNCTION_11	FOR_1
0x400012b	     0xf8653ffffff	                           jbe 0x4000084	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000131	      0xe976ffffff	                           jmp 0x40000ac	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000136	            0x31c9	                            xor ecx, ecx	       312	show-branch.c	FUNCTION_11	FOR_1
0x4000138	      0xe96bffffff	                           jmp 0x40000a8	       312	show-branch.c	FUNCTION_11	FOR_1
parse_reflog_param	WHILE,0:DO,0:IF,4:functions,0:CALL,1:SWITCH,0:FOR,0:ELSE,2	47
0x4000140	              0x55	                                push rbp	       585	show-branch.c	FUNCTION_27
0x4000141	              0x53	                                push rbx	       585	show-branch.c	FUNCTION_27
0x4000142	          0x4889f3	                            mov rbx, rsi	       585	show-branch.c	FUNCTION_27
0x4000145	      0xba0a000000	                            mov edx, 0xa	       590	show-branch.c	FUNCTION_27	CALL_1
0x400014a	        0x4883ec18	                           sub rsp, 0x18	       585	show-branch.c	FUNCTION_27
0x400014e	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	       587	show-branch.c	FUNCTION_27
0x4000152	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	show-branch.c	FUNCTION_27
0x400015b	      0x4889442408	                mov qword [rsp + 8], rax	       585	show-branch.c	FUNCTION_27
0x4000160	            0x31c0	                            xor eax, eax	       585	show-branch.c	FUNCTION_27
0x4000162	          0x4885f6	                           test rsi, rsi	       589	show-branch.c	FUNCTION_27	IF_1
0x4000165	      0xb800000000	                              mov eax, 0	       589	show-branch.c	FUNCTION_27	IF_1
0x400016a	          0x4889e6	                            mov rsi, rsp	       590	show-branch.c	FUNCTION_27	CALL_1
0x400016d	        0x480f44d8	                          cmove rbx, rax	       589	show-branch.c	FUNCTION_27	IF_1
0x4000171	          0x4889df	                            mov rdi, rbx	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000174	      0xe800000000	                          call 0x4000179	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000179	          0x4889c2	                            mov rdx, rax	       590	show-branch.c	FUNCTION_27	CALL_1
0x400017c	    0x890500000000	            mov dword [0x04000182], eax 	       590	show-branch.c	FUNCTION_27	CALL_1
0x4000182	        0x488b0424	                    mov rax, qword [rsp]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000186	           0xfb608	                   movzx ecx, byte [rax]	       591	show-branch.c	FUNCTION_27	IF_2
0x4000189	          0x80f92c	                            cmp cl, 0x2c	       591	show-branch.c	FUNCTION_27	IF_2
0x400018c	            0x743a	                            je 0x40001c8	       591	show-branch.c	FUNCTION_27	IF_2
0x400018e	            0x84c9	                             test cl, cl	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000190	            0x7546	                           jne 0x40001d8	       593	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x4000192	    0x48c745000000	                      mov qword [rbp], 0	       596	show-branch.c	FUNCTION_27	ELSE_2
0x400019a	            0x31c0	                            xor eax, eax	       599	show-branch.c	FUNCTION_27
0x400019c	            0x85d2	                           test edx, edx	       597	show-branch.c	FUNCTION_27	IF_4
0x400019e	            0x7f0a	                            jg 0x40001aa	       597	show-branch.c	FUNCTION_27	IF_4
0x40001a0	    0xc70500000000	               mov dword [0x040001aa], 4	       598	show-branch.c	FUNCTION_27	IF_4
0x40001aa	      0x488b742408	                mov rsi, qword [rsp + 8]	       600	show-branch.c	FUNCTION_27
0x40001af	    0x644833342528	                xor rsi, qword fs:[0x28]	       600	show-branch.c	FUNCTION_27
0x40001b8	            0x7534	                           jne 0x40001ee	       600	show-branch.c	FUNCTION_27
0x40001ba	        0x4883c418	                           add rsp, 0x18	       600	show-branch.c	FUNCTION_27
0x40001be	              0x5b	                                 pop rbx	       600	show-branch.c	FUNCTION_27
0x40001bf	              0x5d	                                 pop rbp	       600	show-branch.c	FUNCTION_27
0x40001c0	              0xc3	                                     ret	       600	show-branch.c	FUNCTION_27
0x40001c1	     0xf1f80000000	                         nop dword [rax]	       600	show-branch.c	FUNCTION_27
0x40001c8	        0x4883c001	                              add rax, 1	       592	show-branch.c	FUNCTION_27	IF_2
0x40001cc	        0x48894500	                    mov qword [rbp], rax	       592	show-branch.c	FUNCTION_27	IF_2
0x40001d0	            0xebc8	                           jmp 0x400019a	       592	show-branch.c	FUNCTION_27	IF_2
0x40001d2	    0x660f1f440000	                    nop word [rax + rax]	       592	show-branch.c	FUNCTION_27	IF_2
0x40001d8	          0x4889de	                            mov rsi, rbx	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001db	      0xbf00000000	                              mov edi, 0	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001e0	            0x31c0	                            xor eax, eax	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001e2	      0xe800000000	                          call 0x40001e7	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001e7	      0xb8ffffffff	                     mov eax, 0xffffffff	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001ec	            0xebbc	                           jmp 0x40001aa	       594	show-branch.c	FUNCTION_27	ELSE_1	IF_3
0x40001ee	      0xe800000000	                          call 0x40001f3	       600	show-branch.c	FUNCTION_27
