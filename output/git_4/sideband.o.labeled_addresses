recv_sideband	ELSE,2:functions,0:SWITCH,1:FOR,0:IF,7:WHILE,2:CALL,15:DO,0	226
0x4000040	            0x4157	                                push r15	        22	sideband.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        22	sideband.c	FUNCTION_1
0x4000044	          0x4989fe	                            mov r14, rdi	        22	sideband.c	FUNCTION_1
0x4000047	            0x4155	                                push r13	        22	sideband.c	FUNCTION_1
0x4000049	            0x4154	                                push r12	        22	sideband.c	FUNCTION_1
0x400004b	      0xbf02000000	                              mov edi, 2	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000050	              0x55	                                push rbp	        22	sideband.c	FUNCTION_1
0x4000051	              0x53	                                push rbx	        22	sideband.c	FUNCTION_1
0x4000052	          0x4189f5	                           mov r13d, esi	        22	sideband.c	FUNCTION_1
0x4000055	    0x4881ec380001	                        sub rsp, 0x10038	        22	sideband.c	FUNCTION_1
0x400005c	    0x64488b042528	                mov rax, qword fs:[0x28]	        22	sideband.c	FUNCTION_1
0x4000065	    0x488984242800	         mov qword [rsp + 0x10028], rax 	        22	sideband.c	FUNCTION_1
0x400006d	            0x31c0	                            xor eax, eax	        22	sideband.c	FUNCTION_1
0x400006f	        0x8954240c	              mov dword [rsp + 0xc], edx	        22	sideband.c	FUNCTION_1
0x4000073	    0x48c744241000	               mov qword [rsp + 0x10], 0	        25	sideband.c	FUNCTION_1
0x400007c	    0x48c744241800	               mov qword [rsp + 0x18], 0	        25	sideband.c	FUNCTION_1
0x4000085	    0x48c744242000	               mov qword [rsp + 0x20], 0	        25	sideband.c	FUNCTION_1
0x400008e	      0xe800000000	                          call 0x4000093	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000093	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000095	     0xf8555030000	                           jne 0x40003f0	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x400009b	    0x41bc00000000	                             mov r12d, 0	        31	sideband.c	FUNCTION_1	ELSE_1
0x40000a1	     0xf1f80000000	                         nop dword [rax]	        31	sideband.c	FUNCTION_1	ELSE_1
0x40000a8	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000ad	          0x4531c9	                            xor r9d, r9d	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000b0	            0x31d2	                            xor edx, edx	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000b2	            0x31f6	                            xor esi, esi	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000b4	    0x41b8f0ff0000	                         mov r8d, 0xfff0	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000ba	          0x4489ef	                           mov edi, r13d	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000bd	      0xe800000000	                          call 0x40000c2	        36	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_3
0x40000c2	          0x83f800	                              cmp eax, 0	        37	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_2
0x40000c5	     0xf8419030000	                            je 0x40003e4	        37	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_2
0x40000cb	     0xf8ede020000	                           jle 0x40003af	        39	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40000d1	    0x440fb6442430	           movzx r8d, byte [rsp + 0x30] 	        46	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000d7	          0x4863d0	                         movsxd rdx, eax	        47	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000da	      0xc644143000	          mov byte [rsp + rdx + 0x30], 0	        47	sideband.c	FUNCTION_1	ELSE_1	WHILE_1
0x40000df	        0x4183f802	                              cmp r8d, 2	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000e3	     0xf8485000000	                            je 0x400016e	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000e9	        0x4183f803	                              cmp r8d, 3	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000ed	     0xf841e020000	                            je 0x4000311	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000f3	        0x4183f801	                              cmp r8d, 1	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000f7	     0xf84fb010000	                            je 0x40002f8	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x40000fd	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000103	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000108	      0xb800000000	                              mov eax, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x400010d	      0xba00000000	                              mov edx, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000112	          0x4c89f1	                            mov rcx, r14	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000115	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x400011a	          0x4889df	                            mov rdi, rbx	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x400011d	      0xbdfeffffff	                     mov ebp, 0xfffffffe	        93	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000122	        0x480f44d0	                          cmove rdx, rax	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000126	            0x31c0	                            xor eax, eax	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x4000128	      0xe800000000	                          call 0x400012d	        91	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_12
0x400012d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        98	sideband.c	FUNCTION_1	IF_7
0x4000132	          0x4885c0	                           test rax, rax	        98	sideband.c	FUNCTION_1	IF_7
0x4000135	     0xf851b020000	                           jne 0x4000356	        98	sideband.c	FUNCTION_1	IF_7
0x400013b	          0x4889df	                            mov rdi, rbx	       102	sideband.c	FUNCTION_1	CALL_15
0x400013e	      0xe800000000	                          call 0x4000143	       102	sideband.c	FUNCTION_1	CALL_15
0x4000143	    0x488bbc242800	         mov rdi, qword [rsp + 0x10028] 	       104	sideband.c	FUNCTION_1
0x400014b	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       104	sideband.c	FUNCTION_1
0x4000154	            0x89e8	                            mov eax, ebp	       104	sideband.c	FUNCTION_1
0x4000156	     0xf85be020000	                           jne 0x400041a	       104	sideband.c	FUNCTION_1
0x400015c	    0x4881c4380001	                        add rsp, 0x10038	       104	sideband.c	FUNCTION_1
0x4000163	              0x5b	                                 pop rbx	       104	sideband.c	FUNCTION_1
0x4000164	              0x5d	                                 pop rbp	       104	sideband.c	FUNCTION_1
0x4000165	            0x415c	                                 pop r12	       104	sideband.c	FUNCTION_1
0x4000167	            0x415d	                                 pop r13	       104	sideband.c	FUNCTION_1
0x4000169	            0x415e	                                 pop r14	       104	sideband.c	FUNCTION_1
0x400016b	            0x415f	                                 pop r15	       104	sideband.c	FUNCTION_1
0x400016d	              0xc3	                                     ret	       104	sideband.c	FUNCTION_1
0x400016e	      0x488d4c2431	                   lea rcx, [rsp + 0x31]	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000173	       0xf1f440000	                   nop dword [rax + rax]	        49	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000178	           0xfb619	                   movzx ebx, byte [rcx]	      1103	string2.h	FUNCTION_15	WHILE_1
0x400017b	            0x84db	                             test bl, bl	      1103	string2.h	FUNCTION_15	WHILE_1
0x400017d	     0xf8425ffffff	                            je 0x40000a8	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000183	           0xfbec3	                           movsx eax, bl	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000186	          0x4889cd	                            mov rbp, rcx	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000189	          0x83f80d	                            cmp eax, 0xd	      1103	string2.h	FUNCTION_15	WHILE_1
0x400018c	            0x750a	                           jne 0x4000198	      1103	string2.h	FUNCTION_15	WHILE_1
0x400018e	            0xeb48	                           jmp 0x40001d8	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000190	           0xfbec3	                           movsx eax, bl	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000193	          0x83f80d	                            cmp eax, 0xd	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000196	            0x7440	                            je 0x40001d8	      1103	string2.h	FUNCTION_15	WHILE_1
0x4000198	          0x83f80a	                            cmp eax, 0xa	      1103	string2.h	FUNCTION_15	WHILE_1
0x400019b	            0x743b	                            je 0x40001d8	      1103	string2.h	FUNCTION_15	WHILE_1
0x400019d	        0x4883c501	                              add rbp, 1	      1104	string2.h	FUNCTION_15	WHILE_1
0x40001a1	         0xfb65d00	                   movzx ebx, byte [rbp]	      1103	string2.h	FUNCTION_15	WHILE_1
0x40001a5	            0x84db	                             test bl, bl	      1103	string2.h	FUNCTION_15	WHILE_1
0x40001a7	            0x75e7	                           jne 0x4000190	      1103	string2.h	FUNCTION_15	WHILE_1
0x40001a9	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001af	      0xb800000000	                              mov eax, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001b4	      0xba00000000	                              mov edx, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001b9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001be	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001c3	        0x480f44d0	                          cmove rdx, rax	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001c7	            0x31c0	                            xor eax, eax	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001c9	      0xe800000000	                          call 0x40001ce	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001ce	      0xe9d5feffff	                           jmp 0x40000a8	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001d3	       0xf1f440000	                   nop dword [rax + rax]	        84	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_10
0x40001d8	          0x4989ef	                            mov r15, rbp	        67	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x40001db	          0x4929cf	                            sub r15, rcx	        67	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x40001de	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        69	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x40001e4	            0x745a	                            je 0x4000240	        69	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x40001e6	          0x4585ff	                         test r15d, r15d	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40001e9	            0x7e7a	                           jle 0x4000265	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x40001eb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001f0	        0x440fbecb	                           movsx r9d, bl	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001f4	          0x4d89e0	                             mov r8, r12	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001f7	          0x4489fa	                           mov edx, r15d	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001fa	      0xbe00000000	                              mov esi, 0	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x40001ff	            0x31c0	                            xor eax, eax	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x4000201	      0xe800000000	                          call 0x4000206	        72	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_7
0x4000206	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_9
0x400020b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_9
0x4000210	      0xbf02000000	                              mov edi, 2	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_9
0x4000215	      0xe800000000	                          call 0x400021a	        77	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_9
0x400021a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       165	strbuf.h	FUNCTION_23	IF_2
0x400021f	    0x48c744241800	               mov qword [rsp + 0x18], 0	       164	strbuf.h	FUNCTION_23
0x4000228	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_23	IF_2
0x400022e	     0xf847c000000	                            je 0x40002b0	       165	strbuf.h	FUNCTION_23	IF_2
0x4000234	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_23	IF_2
0x4000237	        0x488d4d01	                      lea rcx, [rbp + 1]	        80	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x400023b	      0xe938ffffff	                           jmp 0x4000178	        80	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x4000240	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       279	strbuf.h	FUNCTION_25	CALL_2
0x4000245	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_25	CALL_2
0x400024a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_25	CALL_2
0x400024f	        0x48890c24	                    mov qword [rsp], rcx	       279	strbuf.h	FUNCTION_25	CALL_2
0x4000253	      0xe800000000	                          call 0x4000258	       279	strbuf.h	FUNCTION_25	CALL_2
0x4000258	          0x4585ff	                         test r15d, r15d	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x400025b	         0xfb65d00	                   movzx ebx, byte [rbp]	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x400025f	        0x488b0c24	                    mov rcx, qword [rsp]	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x4000263	            0x7f86	                            jg 0x40001eb	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x4000265	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        71	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x400026a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_22
0x400026d	            0x7571	                           jne 0x40002e0	       141	strbuf.h	FUNCTION_22
0x400026f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000274	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000279	      0xe800000000	                          call 0x400027e	       228	strbuf.h	FUNCTION_24	CALL_2
0x400027e	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000283	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_24
0x4000287	      0x4889442418	             mov qword [rsp + 0x18], rax	       229	strbuf.h	FUNCTION_24
0x400028c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_24
0x4000291	          0x881c10	                mov byte [rax + rdx], bl	       229	strbuf.h	FUNCTION_24
0x4000294	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_24
0x4000299	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_24
0x400029e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_24
0x40002a2	      0xe95fffffff	                           jmp 0x4000206	       230	strbuf.h	FUNCTION_24
0x40002a7	    0x660f1f840000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_24
0x40002b0	    0x803d00000000	                cmp byte [0x040002b7], 0	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002b7	     0xf847affffff	                            je 0x4000237	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002bd	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002c2	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002c7	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002cc	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002d1	      0xe800000000	                          call 0x40002d6	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       168	strbuf.h	FUNCTION_23	CALL_2
0x40002e0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       141	strbuf.h	FUNCTION_22
0x40002e5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002e9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002ec	            0x7595	                           jne 0x4000283	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002ee	      0xe97cffffff	                           jmp 0x400026f	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002f3	       0xf1f440000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x40002f8	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x40002fc	          0x83e801	                              sub eax, 1	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x40002ff	      0x488d742431	                   lea rsi, [rsp + 0x31]	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x4000304	          0x4863d0	                         movsxd rdx, eax	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x4000307	      0xe800000000	                          call 0x400030c	        88	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_11
0x400030c	      0xe997fdffff	                           jmp 0x40000a8	        89	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x4000311	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000317	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400031c	      0xb800000000	                              mov eax, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000321	      0xba00000000	                              mov edx, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000326	      0x4c8d442431	                    lea r8, [rsp + 0x31]	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x400032b	      0xb900000000	                              mov ecx, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000330	      0xbe00000000	                              mov esi, 0	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000335	          0x4889df	                            mov rdi, rbx	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000338	      0xbdffffffff	                     mov ebp, 0xffffffff	        53	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1
0x400033d	        0x480f44d0	                          cmove rdx, rax	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000341	            0x31c0	                            xor eax, eax	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000343	      0xe800000000	                          call 0x4000348	        51	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x4000348	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        98	sideband.c	FUNCTION_1	IF_7
0x400034d	          0x4885c0	                           test rax, rax	        98	sideband.c	FUNCTION_1	IF_7
0x4000350	     0xf84e5fdffff	                            je 0x400013b	        98	sideband.c	FUNCTION_1	IF_7
0x4000356	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        98	sideband.c	FUNCTION_1	IF_7
0x400035b	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_22
0x400035e	     0xf85a4000000	                           jne 0x4000408	       141	strbuf.h	FUNCTION_22
0x4000364	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000369	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_24	CALL_2
0x400036c	      0xe800000000	                          call 0x4000371	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000371	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       228	strbuf.h	FUNCTION_24	CALL_2
0x4000376	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_24
0x400037a	      0xbf02000000	                              mov edi, 2	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x400037f	      0x4889542418	             mov qword [rsp + 0x18], rdx	       229	strbuf.h	FUNCTION_24
0x4000384	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       229	strbuf.h	FUNCTION_24
0x4000389	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_24
0x400038d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       230	strbuf.h	FUNCTION_24
0x4000392	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	strbuf.h	FUNCTION_24
0x4000397	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_24
0x400039b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x40003a0	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x40003a5	      0xe800000000	                          call 0x40003aa	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x40003aa	      0xe98cfdffff	                           jmp 0x400013b	       100	sideband.c	FUNCTION_1	IF_7	CALL_14
0x40003af	    0x48837c241800	               cmp qword [rsp + 0x18], 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003b5	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003ba	      0xb800000000	                              mov eax, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003bf	      0xba00000000	                              mov edx, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003c4	          0x4c89f1	                            mov rcx, r14	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003c7	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003cc	          0x4889df	                            mov rdi, rbx	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003cf	      0xbdfeffffff	                     mov ebp, 0xfffffffe	        43	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003d4	        0x480f44d0	                          cmove rdx, rax	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003d8	            0x31c0	                            xor eax, eax	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003da	      0xe800000000	                          call 0x40003df	        40	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3	CALL_4
0x40003df	      0xe949fdffff	                           jmp 0x400012d	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003e4	            0x31ed	                            xor ebp, ebp	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003e6	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003eb	      0xe93dfdffff	                           jmp 0x400012d	        44	sideband.c	FUNCTION_1	ELSE_1	WHILE_1	IF_3
0x40003f0	      0xe800000000	                          call 0x40003f5	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x40003f5	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x40003f7	    0x41bc00000000	                             mov r12d, 0	        29	sideband.c	FUNCTION_1	IF_1
0x40003fd	     0xf84a5fcffff	                            je 0x40000a8	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000403	      0xe993fcffff	                           jmp 0x400009b	        28	sideband.c	FUNCTION_1	IF_1	CALL_2
0x4000408	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x400040c	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x400040f	     0xf8561ffffff	                           jne 0x4000376	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x4000415	      0xe94affffff	                           jmp 0x4000364	       227	strbuf.h	FUNCTION_24	IF_1	CALL_1
0x400041a	      0xe800000000	                          call 0x400041f	       104	sideband.c	FUNCTION_1
send_sideband	ELSE,1:functions,0:SWITCH,0:FOR,0:IF,2:WHILE,1:CALL,5:DO,0	77
0x4000420	            0x4157	                                push r15	       111	sideband.c	FUNCTION_2
0x4000422	            0x4156	                                push r14	       111	sideband.c	FUNCTION_2
0x4000424	            0x4155	                                push r13	       111	sideband.c	FUNCTION_2
0x4000426	            0x4154	                                push r12	       111	sideband.c	FUNCTION_2
0x4000428	              0x55	                                push rbp	       111	sideband.c	FUNCTION_2
0x4000429	              0x53	                                push rbx	       111	sideband.c	FUNCTION_2
0x400042a	        0x4883ec18	                           sub rsp, 0x18	       111	sideband.c	FUNCTION_2
0x400042e	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	sideband.c	FUNCTION_2
0x4000437	      0x4889442408	                mov qword [rsp + 8], rax	       111	sideband.c	FUNCTION_2
0x400043c	            0x31c0	                            xor eax, eax	       111	sideband.c	FUNCTION_2
0x400043e	          0x4885c9	                           test rcx, rcx	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000441	            0x746b	                            je 0x40004ae	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000443	            0x85f6	                           test esi, esi	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000445	          0x4189fd	                           mov r13d, edi	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000448	          0x4189f6	                           mov r14d, esi	       114	sideband.c	FUNCTION_2	WHILE_1
0x400044b	          0x4889d5	                            mov rbp, rdx	       114	sideband.c	FUNCTION_2	WHILE_1
0x400044e	          0x4989cf	                            mov r15, rcx	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000451	        0x458d60fb	                      lea r12d, [r8 - 5]	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000455	            0x7879	                            js 0x40004d0	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000457	    0x660f1f840000	                    nop word [rax + rax]	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000460	          0x4539e7	                          cmp r15d, r12d	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000463	          0x4489e3	                           mov ebx, r12d	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000466	      0xba00000000	                              mov edx, 0	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x400046b	        0x410f46df	                        cmovbe ebx, r15d	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x400046f	      0xbe05000000	                              mov esi, 5	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000474	          0x4889e7	                            mov rdi, rsp	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000477	          0x8d4b05	                      lea ecx, [rbx + 5]	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x400047a	            0x31c0	                            xor eax, eax	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x400047c	            0x89db	                            mov ebx, ebx	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x400047e	      0xe800000000	                          call 0x4000483	       122	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_1
0x4000483	      0xba05000000	                              mov edx, 5	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000488	          0x4889e6	                            mov rsi, rsp	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x400048b	          0x4489ef	                           mov edi, r13d	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x400048e	      0x4488742404	                mov byte [rsp + 4], r14b	       123	sideband.c	FUNCTION_2	WHILE_1	IF_2
0x4000493	      0xe800000000	                          call 0x4000498	       124	sideband.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000498	          0x4889ee	                            mov rsi, rbp	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x400049b	          0x4889da	                            mov rdx, rbx	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x400049e	          0x4489ef	                           mov edi, r13d	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x40004a1	      0xe800000000	                          call 0x40004a6	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x40004a6	          0x4801dd	                            add rbp, rbx	       130	sideband.c	FUNCTION_2	WHILE_1
0x40004a9	          0x4929df	                            sub r15, rbx	       114	sideband.c	FUNCTION_2	WHILE_1
0x40004ac	            0x75b2	                           jne 0x4000460	       114	sideband.c	FUNCTION_2	WHILE_1
0x40004ae	      0x488b442408	                mov rax, qword [rsp + 8]	       133	sideband.c	FUNCTION_2
0x40004b3	    0x644833042528	                xor rax, qword fs:[0x28]	       133	sideband.c	FUNCTION_2
0x40004bc	            0x755d	                           jne 0x400051b	       133	sideband.c	FUNCTION_2
0x40004be	        0x4883c418	                           add rsp, 0x18	       133	sideband.c	FUNCTION_2
0x40004c2	              0x5b	                                 pop rbx	       133	sideband.c	FUNCTION_2
0x40004c3	              0x5d	                                 pop rbp	       133	sideband.c	FUNCTION_2
0x40004c4	            0x415c	                                 pop r12	       133	sideband.c	FUNCTION_2
0x40004c6	            0x415d	                                 pop r13	       133	sideband.c	FUNCTION_2
0x40004c8	            0x415e	                                 pop r14	       133	sideband.c	FUNCTION_2
0x40004ca	            0x415f	                                 pop r15	       133	sideband.c	FUNCTION_2
0x40004cc	              0xc3	                                     ret	       133	sideband.c	FUNCTION_2
0x40004cd	           0xf1f00	                         nop dword [rax]	       133	sideband.c	FUNCTION_2
0x40004d0	          0x4539e7	                          cmp r15d, r12d	       133	sideband.c	FUNCTION_2
0x40004d3	          0x4489e3	                           mov ebx, r12d	       133	sideband.c	FUNCTION_2
0x40004d6	      0xba00000000	                              mov edx, 0	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004db	        0x410f46df	                        cmovbe ebx, r15d	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004df	      0xbe05000000	                              mov esi, 5	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004e4	          0x4889e7	                            mov rdi, rsp	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004e7	          0x8d4b04	                      lea ecx, [rbx + 4]	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004ea	            0x31c0	                            xor eax, eax	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004ec	            0x89db	                            mov ebx, ebx	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x40004ee	      0xe800000000	                          call 0x40004f3	       126	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_3
0x40004f3	      0xba04000000	                              mov edx, 4	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004f8	          0x4889e6	                            mov rsi, rsp	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004fb	          0x4489ef	                           mov edi, r13d	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x40004fe	      0xe800000000	                          call 0x4000503	       127	sideband.c	FUNCTION_2	WHILE_1	ELSE_1	CALL_4
0x4000503	          0x4889ee	                            mov rsi, rbp	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000506	          0x4889da	                            mov rdx, rbx	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000509	          0x4489ef	                           mov edi, r13d	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x400050c	      0xe800000000	                          call 0x4000511	       129	sideband.c	FUNCTION_2	WHILE_1	CALL_5
0x4000511	          0x4801dd	                            add rbp, rbx	       130	sideband.c	FUNCTION_2	WHILE_1
0x4000514	          0x4929df	                            sub r15, rbx	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000517	            0x75b7	                           jne 0x40004d0	       114	sideband.c	FUNCTION_2	WHILE_1
0x4000519	            0xeb93	                           jmp 0x40004ae	       114	sideband.c	FUNCTION_2	WHILE_1
0x400051b	      0xe800000000	                          call 0x4000520	       133	sideband.c	FUNCTION_2
