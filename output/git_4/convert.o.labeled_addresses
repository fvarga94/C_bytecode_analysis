cascade_filter_fn	DO,0:WHILE,1:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,8	141
0x40001c0	            0x4157	                                push r15	      1684	convert.c	FUNCTION_50
0x40001c2	            0x4156	                                push r14	      1684	convert.c	FUNCTION_50
0x40001c4	            0x4155	                                push r13	      1684	convert.c	FUNCTION_50
0x40001c6	            0x4154	                                push r12	      1684	convert.c	FUNCTION_50
0x40001c8	              0x55	                                push rbp	      1684	convert.c	FUNCTION_50
0x40001c9	              0x53	                                push rbx	      1684	convert.c	FUNCTION_50
0x40001ca	          0x4889fb	                            mov rbx, rdi	      1684	convert.c	FUNCTION_50
0x40001cd	        0x4883ec48	                           sub rsp, 0x48	      1684	convert.c	FUNCTION_50
0x40001d1	          0x4d8b20	                     mov r12, qword [r8]	      1687	convert.c	FUNCTION_50
0x40001d4	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      1684	convert.c	FUNCTION_50
0x40001dd	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      1684	convert.c	FUNCTION_50
0x40001e2	            0x31ff	                            xor edi, edi	      1684	convert.c	FUNCTION_50
0x40001e4	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1684	convert.c	FUNCTION_50
0x40001e9	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1684	convert.c	FUNCTION_50
0x40001ee	          0x4d85e4	                           test r12, r12	      1693	convert.c	FUNCTION_50	WHILE_1
0x40001f1	     0xf84f3010000	                            je 0x40003ea	      1693	convert.c	FUNCTION_50	WHILE_1
0x40001f7	        0x488d4318	                   lea rax, [rbx + 0x18]	      1715	convert.c	FUNCTION_50	WHILE_1	IF_4
0x40001fb	            0x31ed	                            xor ebp, ebp	      1693	convert.c	FUNCTION_50	WHILE_1
0x40001fd	          0x4989f7	                            mov r15, rsi	      1693	convert.c	FUNCTION_50	WHILE_1
0x4000200	          0x4989ee	                            mov r14, rbp	      1717	convert.c	FUNCTION_50	WHILE_1
0x4000203	          0x4889d5	                            mov rbp, rdx	      1717	convert.c	FUNCTION_50	WHILE_1
0x4000206	      0x4889442408	                mov qword [rsp + 8], rax	      1715	convert.c	FUNCTION_50	WHILE_1	IF_4
0x400020b	      0xe97e000000	                           jmp 0x400028e	      1715	convert.c	FUNCTION_50	WHILE_1	IF_4
0x4000210	          0x4d85ff	                           test r15, r15	      1709	convert.c	FUNCTION_50	WHILE_1
0x4000213	     0xf8427010000	                            je 0x4000340	      1709	convert.c	FUNCTION_50	WHILE_1
0x4000219	        0x488b4500	                    mov rax, qword [rbp]	      1709	convert.c	FUNCTION_50	WHILE_1
0x400021d	          0x4885c0	                           test rax, rax	      1710	convert.c	FUNCTION_50	WHILE_1	IF_3
0x4000220	      0x4889442428	             mov qword [rsp + 0x28], rax	      1709	convert.c	FUNCTION_50	WHILE_1
0x4000225	     0xf84d5000000	                            je 0x4000300	      1710	convert.c	FUNCTION_50	WHILE_1	IF_3
0x400022b	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1713	convert.c	FUNCTION_50	WHILE_1	IF_4	CALL_2
0x400022f	    0x48c744243000	          mov qword [rsp + 0x30], 0x400 	      1712	convert.c	FUNCTION_50	WHILE_1
0x4000238	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      1964	convert.c	FUNCTION_60	CALL_1
0x400023d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1964	convert.c	FUNCTION_60	CALL_1
0x4000242	      0x488d542428	                   lea rdx, [rsp + 0x28]	      1964	convert.c	FUNCTION_60	CALL_1
0x4000247	          0x4c89fe	                            mov rsi, r15	      1964	convert.c	FUNCTION_60	CALL_1
0x400024a	          0x488b07	                    mov rax, qword [rdi]	      1964	convert.c	FUNCTION_60	CALL_1
0x400024d	            0xff10	                        call qword [rax]	      1964	convert.c	FUNCTION_60	CALL_1
0x400024f	            0x85c0	                           test eax, eax	      1713	convert.c	FUNCTION_50	WHILE_1	IF_4	CALL_2
0x4000251	     0xf8589010000	                           jne 0x40003e0	      1713	convert.c	FUNCTION_50	WHILE_1	IF_4	CALL_2
0x4000257	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1720	convert.c	FUNCTION_50	WHILE_1	IF_5
0x400025c	        0x488b4500	                    mov rax, qword [rbp]	      1720	convert.c	FUNCTION_50	WHILE_1	IF_5
0x4000260	      0xb900040000	                          mov ecx, 0x400	      1717	convert.c	FUNCTION_50	WHILE_1
0x4000265	        0x2b4c2430	             sub ecx, dword [rsp + 0x30]	      1717	convert.c	FUNCTION_50	WHILE_1
0x4000269	    0xc7831c040000	              mov dword [rbx + 0x41c], 0	      1718	convert.c	FUNCTION_50	WHILE_1
0x4000273	          0x4829d0	                            sub rax, rdx	      1720	convert.c	FUNCTION_50	WHILE_1	IF_5
0x4000276	          0x4901c7	                            add r15, rax	      1726	convert.c	FUNCTION_50	WHILE_1	IF_6
0x4000279	    0x898b18040000	            mov dword [rbx + 0x418], ecx	      1717	convert.c	FUNCTION_50	WHILE_1
0x400027f	        0x48895500	                    mov qword [rbp], rdx	      1721	convert.c	FUNCTION_50	WHILE_1	IF_5
0x4000283	     0xf8400010000	                            je 0x4000389	      1726	convert.c	FUNCTION_50	WHILE_1	IF_6
0x4000289	          0x4d39f4	                            cmp r12, r14	      1693	convert.c	FUNCTION_50	WHILE_1
0x400028c	            0x7672	                           jbe 0x4000300	      1693	convert.c	FUNCTION_50	WHILE_1
0x400028e	    0x4863b31c0400	        movsxd rsi, dword [rbx + 0x41c] 	      1697	convert.c	FUNCTION_50	WHILE_1	IF_1
0x4000295	    0x8b8318040000	           mov eax, dword [rbx + 0x418] 	      1697	convert.c	FUNCTION_50	WHILE_1	IF_1
0x400029b	          0x4d89e5	                            mov r13, r12	      1694	convert.c	FUNCTION_50	WHILE_1
0x400029e	          0x4d29f5	                            sub r13, r14	      1694	convert.c	FUNCTION_50	WHILE_1
0x40002a1	      0x4c896c2430	             mov qword [rsp + 0x30], r13	      1694	convert.c	FUNCTION_50	WHILE_1
0x40002a6	            0x39c6	                            cmp esi, eax	      1697	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002a8	     0xf8d62ffffff	                           jge 0x4000210	      1697	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002ae	            0x29f0	                            sub eax, esi	      1698	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002b0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1699	convert.c	FUNCTION_50	WHILE_1	IF_1	IF_2	CALL_1
0x40002b4	      0x4803742408	                add rsi, qword [rsp + 8]	      1964	convert.c	FUNCTION_60	CALL_1
0x40002b9	            0x4898	                                    cdqe	      1698	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002bb	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      1964	convert.c	FUNCTION_60	CALL_1
0x40002c0	      0x488d542428	                   lea rdx, [rsp + 0x28]	      1964	convert.c	FUNCTION_60	CALL_1
0x40002c5	      0x4889442428	             mov qword [rsp + 0x28], rax	      1698	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002ca	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1964	convert.c	FUNCTION_60	CALL_1
0x40002cf	        0x4a8d0c30	                    lea rcx, [rax + r14]	      1964	convert.c	FUNCTION_60	CALL_1
0x40002d3	          0x488b07	                    mov rax, qword [rdi]	      1964	convert.c	FUNCTION_60	CALL_1
0x40002d6	            0xff10	                        call qword [rax]	      1964	convert.c	FUNCTION_60	CALL_1
0x40002d8	            0x85c0	                           test eax, eax	      1699	convert.c	FUNCTION_50	WHILE_1	IF_1	IF_2	CALL_1
0x40002da	     0xf8500010000	                           jne 0x40003e0	      1699	convert.c	FUNCTION_50	WHILE_1	IF_1	IF_2	CALL_1
0x40002e0	          0x4d89e6	                            mov r14, r12	      1704	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002e3	      0x4c2b742430	             sub r14, qword [rsp + 0x30]	      1704	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002e8	    0x8b8318040000	           mov eax, dword [rbx + 0x418] 	      1703	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002ee	        0x2b442428	             sub eax, dword [rsp + 0x28]	      1703	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002f2	          0x4d39f4	                            cmp r12, r14	      1693	convert.c	FUNCTION_50	WHILE_1
0x40002f5	    0x89831c040000	            mov dword [rbx + 0x41c], eax	      1703	convert.c	FUNCTION_50	WHILE_1	IF_1
0x40002fb	            0x7791	                            ja 0x400028e	      1693	convert.c	FUNCTION_50	WHILE_1
0x40002fd	           0xf1f00	                         nop dword [rax]	      1693	convert.c	FUNCTION_50	WHILE_1
0x4000300	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1693	convert.c	FUNCTION_50	WHILE_1
0x4000305	          0x4c89f5	                            mov rbp, r14	      1693	convert.c	FUNCTION_50	WHILE_1
0x4000308	          0x488b00	                    mov rax, qword [rax]	      1693	convert.c	FUNCTION_50	WHILE_1
0x400030b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1740	convert.c	FUNCTION_50
0x4000310	          0x4829e8	                            sub rax, rbp	      1740	convert.c	FUNCTION_50
0x4000313	          0x488907	                    mov qword [rdi], rax	      1740	convert.c	FUNCTION_50
0x4000316	            0x31c0	                            xor eax, eax	      1741	convert.c	FUNCTION_50
0x4000318	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1742	convert.c	FUNCTION_50
0x400031d	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1742	convert.c	FUNCTION_50
0x4000326	     0xf85c7000000	                           jne 0x40003f3	      1742	convert.c	FUNCTION_50
0x400032c	        0x4883c448	                           add rsp, 0x48	      1742	convert.c	FUNCTION_50
0x4000330	              0x5b	                                 pop rbx	      1742	convert.c	FUNCTION_50
0x4000331	              0x5d	                                 pop rbp	      1742	convert.c	FUNCTION_50
0x4000332	            0x415c	                                 pop r12	      1742	convert.c	FUNCTION_50
0x4000334	            0x415d	                                 pop r13	      1742	convert.c	FUNCTION_50
0x4000336	            0x415e	                                 pop r14	      1742	convert.c	FUNCTION_50
0x4000338	            0x415f	                                 pop r15	      1742	convert.c	FUNCTION_50
0x400033a	              0xc3	                                     ret	      1742	convert.c	FUNCTION_50
0x400033b	       0xf1f440000	                   nop dword [rax + rax]	      1742	convert.c	FUNCTION_50
0x4000340	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1713	convert.c	FUNCTION_50	WHILE_1	IF_4	CALL_2
0x4000344	            0x31f6	                            xor esi, esi	      1964	convert.c	FUNCTION_60	CALL_1
0x4000346	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1709	convert.c	FUNCTION_50	WHILE_1
0x400034f	    0x48c744243000	          mov qword [rsp + 0x30], 0x400 	      1712	convert.c	FUNCTION_50	WHILE_1
0x4000358	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      1964	convert.c	FUNCTION_60	CALL_1
0x400035d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1964	convert.c	FUNCTION_60	CALL_1
0x4000362	      0x488d542428	                   lea rdx, [rsp + 0x28]	      1964	convert.c	FUNCTION_60	CALL_1
0x4000367	          0x488b07	                    mov rax, qword [rdi]	      1964	convert.c	FUNCTION_60	CALL_1
0x400036a	            0xff10	                        call qword [rax]	      1964	convert.c	FUNCTION_60	CALL_1
0x400036c	            0x85c0	                           test eax, eax	      1713	convert.c	FUNCTION_50	WHILE_1	IF_4	CALL_2
0x400036e	            0x7570	                           jne 0x40003e0	      1713	convert.c	FUNCTION_50	WHILE_1	IF_4	CALL_2
0x4000370	      0xb900040000	                          mov ecx, 0x400	      1717	convert.c	FUNCTION_50	WHILE_1
0x4000375	        0x2b4c2430	             sub ecx, dword [rsp + 0x30]	      1717	convert.c	FUNCTION_50	WHILE_1
0x4000379	    0xc7831c040000	              mov dword [rbx + 0x41c], 0	      1718	convert.c	FUNCTION_50	WHILE_1
0x4000383	    0x898b18040000	            mov dword [rbx + 0x418], ecx	      1717	convert.c	FUNCTION_50	WHILE_1
0x4000389	          0x4531ff	                          xor r15d, r15d	      1717	convert.c	FUNCTION_50	WHILE_1
0x400038c	            0x85c9	                           test ecx, ecx	      1726	convert.c	FUNCTION_50	WHILE_1	IF_6
0x400038e	     0xf85f5feffff	                           jne 0x4000289	      1726	convert.c	FUNCTION_50	WHILE_1	IF_6
0x4000394	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1964	convert.c	FUNCTION_60	CALL_1
0x4000399	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1732	convert.c	FUNCTION_50	WHILE_1	IF_7	CALL_3
0x400039d	            0x31f6	                            xor esi, esi	      1964	convert.c	FUNCTION_60	CALL_1
0x400039f	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1730	convert.c	FUNCTION_50	WHILE_1
0x40003a8	      0x4c896c2430	             mov qword [rsp + 0x30], r13	      1731	convert.c	FUNCTION_50	WHILE_1
0x40003ad	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      1964	convert.c	FUNCTION_60	CALL_1
0x40003b2	      0x488d542428	                   lea rdx, [rsp + 0x28]	      1964	convert.c	FUNCTION_60	CALL_1
0x40003b7	        0x4a8d0c30	                    lea rcx, [rax + r14]	      1964	convert.c	FUNCTION_60	CALL_1
0x40003bb	          0x488b07	                    mov rax, qword [rdi]	      1964	convert.c	FUNCTION_60	CALL_1
0x40003be	            0xff10	                        call qword [rax]	      1964	convert.c	FUNCTION_60	CALL_1
0x40003c0	            0x85c0	                           test eax, eax	      1732	convert.c	FUNCTION_50	WHILE_1	IF_7	CALL_3
0x40003c2	            0x751c	                           jne 0x40003e0	      1732	convert.c	FUNCTION_50	WHILE_1	IF_7	CALL_3
0x40003c4	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1736	convert.c	FUNCTION_50	WHILE_1	IF_8
0x40003c9	          0x4939c5	                            cmp r13, rax	      1736	convert.c	FUNCTION_50	WHILE_1	IF_8
0x40003cc	     0xf842effffff	                            je 0x4000300	      1736	convert.c	FUNCTION_50	WHILE_1	IF_8
0x40003d2	          0x4d89e6	                            mov r14, r12	      1738	convert.c	FUNCTION_50	WHILE_1
0x40003d5	          0x4929c6	                            sub r14, rax	      1738	convert.c	FUNCTION_50	WHILE_1
0x40003d8	      0xe9acfeffff	                           jmp 0x4000289	      1738	convert.c	FUNCTION_50	WHILE_1
0x40003dd	           0xf1f00	                         nop dword [rax]	      1738	convert.c	FUNCTION_50	WHILE_1
0x40003e0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1702	convert.c	FUNCTION_50	WHILE_1	IF_1	IF_2
0x40003e5	      0xe92effffff	                           jmp 0x4000318	      1702	convert.c	FUNCTION_50	WHILE_1	IF_1	IF_2
0x40003ea	            0x31c0	                            xor eax, eax	      1693	convert.c	FUNCTION_50	WHILE_1
0x40003ec	            0x31ed	                            xor ebp, ebp	      1686	convert.c	FUNCTION_50
0x40003ee	      0xe918ffffff	                           jmp 0x400030b	      1686	convert.c	FUNCTION_50
0x40003f3	      0xe800000000	                          call 0x40003f8	      1742	convert.c	FUNCTION_50
null_free_fn	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,0:IF,0	1
0x4000040	            0xf3c3	                                     ret	      1543	convert.c	FUNCTION_45
trace_encoding	DO,0:WHILE,0:functions,0:FOR,1:SWITCH,0:ELSE,0:CALL,6:IF,0	78
0x40009b0	            0x4156	                                push r14	       329	convert.c	FUNCTION_13
0x40009b2	            0x4155	                                push r13	       329	convert.c	FUNCTION_13
0x40009b4	          0x4989ce	                            mov r14, rcx	       329	convert.c	FUNCTION_13
0x40009b7	            0x4154	                                push r12	       329	convert.c	FUNCTION_13
0x40009b9	              0x55	                                push rbp	       329	convert.c	FUNCTION_13
0x40009ba	          0x4889f1	                            mov rcx, rsi	       334	convert.c	FUNCTION_13	CALL_2
0x40009bd	              0x53	                                push rbx	       329	convert.c	FUNCTION_13
0x40009be	          0x4c89c5	                             mov rbp, r8	       329	convert.c	FUNCTION_13
0x40009c1	      0xbe00000000	                              mov esi, 0	       334	convert.c	FUNCTION_13	CALL_2
0x40009c6	          0x4989d0	                             mov r8, rdx	       334	convert.c	FUNCTION_13	CALL_2
0x40009c9	          0x4889fa	                            mov rdx, rdi	       334	convert.c	FUNCTION_13	CALL_2
0x40009cc	        0x4883ec20	                           sub rsp, 0x20	       329	convert.c	FUNCTION_13
0x40009d0	    0x64488b042528	                mov rax, qword fs:[0x28]	       329	convert.c	FUNCTION_13
0x40009d9	      0x4889442418	             mov qword [rsp + 0x18], rax	       329	convert.c	FUNCTION_13
0x40009de	            0x31c0	                            xor eax, eax	       329	convert.c	FUNCTION_13
0x40009e0	          0x4889e7	                            mov rdi, rsp	       334	convert.c	FUNCTION_13	CALL_2
0x40009e3	    0x48c704240000	                      mov qword [rsp], 0	       331	convert.c	FUNCTION_13
0x40009eb	    0x48c744240800	                  mov qword [rsp + 8], 0	       331	convert.c	FUNCTION_13
0x40009f4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       331	convert.c	FUNCTION_13
0x40009fd	      0xe800000000	                          call 0x4000a02	       334	convert.c	FUNCTION_13	CALL_2
0x4000a02	          0x4d85f6	                           test r14, r14	       335	convert.c	FUNCTION_13	FOR_1
0x4000a05	            0x7469	                            je 0x4000a70	       335	convert.c	FUNCTION_13	FOR_1
0x4000a07	            0x31d2	                            xor edx, edx	       335	convert.c	FUNCTION_13	FOR_1
0x4000a09	          0x4885ed	                           test rbp, rbp	       335	convert.c	FUNCTION_13	FOR_1
0x4000a0c	      0xbb01000000	                              mov ebx, 1	       335	convert.c	FUNCTION_13	FOR_1
0x4000a11	    0x41bc20000000	                          mov r12d, 0x20	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a17	            0x750a	                           jne 0x4000a23	       335	convert.c	FUNCTION_13	FOR_1
0x4000a19	            0xeb55	                           jmp 0x4000a70	       335	convert.c	FUNCTION_13	FOR_1
0x4000a1b	       0xf1f440000	                   nop dword [rax + rax]	       335	convert.c	FUNCTION_13	FOR_1
0x4000a20	          0x4889c3	                            mov rbx, rax	       335	convert.c	FUNCTION_13	FOR_1
0x4000a23	        0x448d6a01	                     lea r13d, [rdx + 1]	       341	convert.c	FUNCTION_13	FOR_1
0x4000a27	    0x41b90a000000	                            mov r9d, 0xa	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a2d	        0x41f6c507	                            test r13b, 7	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a31	            0x740e	                            je 0x4000a41	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a33	          0x4839eb	                            cmp rbx, rbp	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a36	          0x4519c9	                            sbb r9d, r9d	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a39	        0x4183e116	                           and r9d, 0x16	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a3d	        0x4183c10a	                            add r9d, 0xa	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a41	    0x450fbe441eff	         movsx r8d, byte [r14 + rbx - 1]	       340	convert.c	FUNCTION_13	FOR_1
0x4000a47	      0xbe00000000	                              mov esi, 0	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a4c	          0x4889e7	                            mov rdi, rsp	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a4f	        0x418d40df	                    lea eax, [r8 - 0x21]	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a53	        0x410fb6c8	                          movzx ecx, r8b	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a57	            0x3c5d	                            cmp al, 0x5d	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a59	        0x450f47c4	                         cmova r8d, r12d	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a5d	            0x31c0	                            xor eax, eax	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a5f	      0xe800000000	                          call 0x4000a64	       336	convert.c	FUNCTION_13	FOR_1	CALL_3
0x4000a64	          0x4839dd	                            cmp rbp, rbx	       335	convert.c	FUNCTION_13	FOR_1
0x4000a67	        0x488d4301	                      lea rax, [rbx + 1]	       335	convert.c	FUNCTION_13	FOR_1
0x4000a6b	          0x4489ea	                           mov edx, r13d	       341	convert.c	FUNCTION_13	FOR_1
0x4000a6e	            0x77b0	                            ja 0x4000a20	       335	convert.c	FUNCTION_13	FOR_1
0x4000a70	      0xba01000000	                              mov edx, 1	       344	convert.c	FUNCTION_13	CALL_4
0x4000a75	      0xbe0a000000	                            mov esi, 0xa	       344	convert.c	FUNCTION_13	CALL_4
0x4000a7a	          0x4889e7	                            mov rdi, rsp	       344	convert.c	FUNCTION_13	CALL_4
0x4000a7d	      0xe800000000	                          call 0x4000a82	       344	convert.c	FUNCTION_13	CALL_4
0x4000a82	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       346	convert.c	FUNCTION_13	CALL_5
0x4000a8c	    0x482305000000	             and rax, qword [0x04000a93]	       346	convert.c	FUNCTION_13	CALL_5
0x4000a93	    0x48ba00000000	                 movabs rdx, 0x100000000	       346	convert.c	FUNCTION_13	CALL_5
0x4000a9d	          0x4839d0	                            cmp rax, rdx	       346	convert.c	FUNCTION_13	CALL_5
0x4000aa0	            0x7417	                            je 0x4000ab9	       346	convert.c	FUNCTION_13	CALL_5
0x4000aa2	          0x4889e1	                            mov rcx, rsp	       346	convert.c	FUNCTION_13	CALL_5
0x4000aa5	      0xba00000000	                              mov edx, 0	       346	convert.c	FUNCTION_13	CALL_5
0x4000aaa	      0xbe5a010000	                          mov esi, 0x15a	       346	convert.c	FUNCTION_13	CALL_5
0x4000aaf	      0xbf00000000	                              mov edi, 0	       346	convert.c	FUNCTION_13	CALL_5
0x4000ab4	      0xe800000000	                          call 0x4000ab9	       346	convert.c	FUNCTION_13	CALL_5
0x4000ab9	          0x4889e7	                            mov rdi, rsp	       347	convert.c	FUNCTION_13	CALL_6
0x4000abc	      0xe800000000	                          call 0x4000ac1	       347	convert.c	FUNCTION_13	CALL_6
0x4000ac1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       348	convert.c	FUNCTION_13
0x4000ac6	    0x644833042528	                xor rax, qword fs:[0x28]	       348	convert.c	FUNCTION_13
0x4000acf	            0x750d	                           jne 0x4000ade	       348	convert.c	FUNCTION_13
0x4000ad1	        0x4883c420	                           add rsp, 0x20	       348	convert.c	FUNCTION_13
0x4000ad5	              0x5b	                                 pop rbx	       348	convert.c	FUNCTION_13
0x4000ad6	              0x5d	                                 pop rbp	       348	convert.c	FUNCTION_13
0x4000ad7	            0x415c	                                 pop r12	       348	convert.c	FUNCTION_13
0x4000ad9	            0x415d	                                 pop r13	       348	convert.c	FUNCTION_13
0x4000adb	            0x415e	                                 pop r14	       348	convert.c	FUNCTION_13
0x4000add	              0xc3	                                     ret	       348	convert.c	FUNCTION_13
0x4000ade	      0xe800000000	                          call 0x4000ae3	       348	convert.c	FUNCTION_13
convert_to_git_filter_fd	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,8:IF,1	429
0x4003910	            0x4157	                                push r15	      1424	convert.c	FUNCTION_39
0x4003912	            0x4156	                                push r14	      1424	convert.c	FUNCTION_39
0x4003914	          0x4989ff	                            mov r15, rdi	      1424	convert.c	FUNCTION_39
0x4003917	            0x4155	                                push r13	      1424	convert.c	FUNCTION_39
0x4003919	            0x4154	                                push r12	      1424	convert.c	FUNCTION_39
0x400391b	          0x4189d5	                           mov r13d, edx	      1424	convert.c	FUNCTION_39
0x400391e	              0x55	                                push rbp	      1424	convert.c	FUNCTION_39
0x400391f	              0x53	                                push rbx	      1424	convert.c	FUNCTION_39
0x4003920	          0x4989cc	                            mov r12, rcx	      1424	convert.c	FUNCTION_39
0x4003923	          0x4889f3	                            mov rbx, rsi	      1424	convert.c	FUNCTION_39
0x4003926	          0x4489c5	                            mov ebp, r8d	      1424	convert.c	FUNCTION_39
0x4003929	    0x4881ecd80000	                           sub rsp, 0xd8	      1424	convert.c	FUNCTION_39
0x4003930	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1426	convert.c	FUNCTION_39	CALL_1
0x4003935	    0x64488b042528	                mov rax, qword fs:[0x28]	      1424	convert.c	FUNCTION_39
0x400393e	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      1424	convert.c	FUNCTION_39
0x4003946	            0x31c0	                            xor eax, eax	      1424	convert.c	FUNCTION_39
0x4003948	      0xe8a3dcffff	                  call sym.convert_attrs	      1426	convert.c	FUNCTION_39	CALL_1
0x400394d	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1428	convert.c	FUNCTION_39	CALL_2
0x4003952	          0x4885c0	                           test rax, rax	      1428	convert.c	FUNCTION_39	CALL_2
0x4003955	     0xf84db060000	                            je 0x4004036	      1428	convert.c	FUNCTION_39	CALL_2
0x400395b	        0x4c8b7018	            mov r14, qword [rax + 0x18] 	      1429	convert.c	FUNCTION_39	CALL_3
0x400395f	          0x4d85f6	                           test r14, r14	      1429	convert.c	FUNCTION_39	CALL_3
0x4003962	            0x7434	                            je 0x4003998	      1429	convert.c	FUNCTION_39	CALL_3
0x4003964	          0x4d85e4	                           test r12, r12	       983	convert.c	FUNCTION_25	IF_2
0x4003967	     0xf8453020000	                            je 0x4003bc0	       983	convert.c	FUNCTION_25	IF_2
0x400396d	        0x4c8b4820	              mov r9, qword [rax + 0x20]	       986	convert.c	FUNCTION_25	IF_3
0x4003971	          0x4d85c9	                             test r9, r9	       986	convert.c	FUNCTION_25	IF_3
0x4003974	            0x7538	                           jne 0x40039ae	       986	convert.c	FUNCTION_25	IF_3
0x4003976	        0x41803e00	                       cmp byte [r14], 0	       991	convert.c	FUNCTION_25	IF_5
0x400397a	     0xf8538040000	                           jne 0x4003db8	       991	convert.c	FUNCTION_25	IF_5
0x4003980	          0x488b10	                    mov rdx, qword [rax]	      1432	convert.c	FUNCTION_39	CALL_5
0x4003983	          0x4889de	                            mov rsi, rbx	      1432	convert.c	FUNCTION_39	CALL_5
0x4003986	      0xbf00000000	                              mov edi, 0	      1432	convert.c	FUNCTION_39	CALL_5
0x400398b	            0x31c0	                            xor eax, eax	      1432	convert.c	FUNCTION_39	CALL_5
0x400398d	      0xe800000000	                          call 0x4003992	      1432	convert.c	FUNCTION_39	CALL_5
0x4003992	    0x660f1f440000	                    nop word [rax + rax]	      1432	convert.c	FUNCTION_39	CALL_5
0x4003998	        0x4c8b4820	              mov r9, qword [rax + 0x20]	      1429	convert.c	FUNCTION_39	CALL_3
0x400399c	          0x4d85c9	                             test r9, r9	      1429	convert.c	FUNCTION_39	CALL_3
0x400399f	     0xf84aa060000	                            je 0x400404f	      1429	convert.c	FUNCTION_39	CALL_3
0x40039a5	          0x4d85e4	                           test r12, r12	       983	convert.c	FUNCTION_25	IF_2
0x40039a8	     0xf8412020000	                            je 0x4003bc0	       983	convert.c	FUNCTION_25	IF_2
0x40039ae	        0x41803900	                        cmp byte [r9], 0	       993	convert.c	FUNCTION_25	ELSE_2	IF_6
0x40039b2	            0x74cc	                            je 0x4003980	       993	convert.c	FUNCTION_25	ELSE_2	IF_6
0x40039b4	    0x8b3d00000000	            mov edi, dword [0x040039ba] 	       812	convert.c	FUNCTION_23	IF_1
0x40039ba	    0x48c744245000	               mov qword [rsp + 0x50], 0	       808	convert.c	FUNCTION_23
0x40039c3	    0x48c744245800	               mov qword [rsp + 0x58], 0	       808	convert.c	FUNCTION_23
0x40039cc	    0x48c744246000	               mov qword [rsp + 0x60], 0	       808	convert.c	FUNCTION_23
0x40039d5	    0x48c784248000	               mov qword [rsp + 0x80], 0	       809	convert.c	FUNCTION_23
0x40039e1	    0x48c784248800	               mov qword [rsp + 0x88], 0	       809	convert.c	FUNCTION_23
0x40039ed	            0x85ff	                           test edi, edi	       812	convert.c	FUNCTION_23	IF_1
0x40039ef	    0x48c784249000	               mov qword [rsp + 0x90], 0	       809	convert.c	FUNCTION_23
0x40039fb	     0xf843f030000	                            je 0x4003d40	       812	convert.c	FUNCTION_23	IF_1
0x4003a01	          0x4c89ce	                             mov rsi, r9	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003a04	      0xbf00000000	                              mov edi, 0	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003a09	        0x4c890c24	                     mov qword [rsp], r9	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003a0d	      0xe800000000	                          call 0x4003a12	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003a12	            0x31ff	                            xor edi, edi	       820	convert.c	FUNCTION_23	CALL_3
0x4003a14	          0x4989c6	                            mov r14, rax	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003a17	      0xe800000000	                          call 0x4003a1c	       820	convert.c	FUNCTION_23	CALL_3
0x4003a1c	          0x4d85f6	                           test r14, r14	       822	convert.c	FUNCTION_23	IF_2
0x4003a1f	        0x4c8b0c24	                     mov r9, qword [rsp]	       822	convert.c	FUNCTION_23	IF_2
0x4003a23	     0xf8443030000	                            je 0x4003d6c	       822	convert.c	FUNCTION_23	IF_2
0x4003a29	      0x41f6467801	               test byte [r14 + 0x78], 1	       833	convert.c	FUNCTION_23	IF_4
0x4003a2e	     0xf840f040000	                            je 0x4003e43	       833	convert.c	FUNCTION_23	IF_4
0x4003a34	      0xbe01000000	                              mov esi, 1	       843	convert.c	FUNCTION_23	CALL_8
0x4003a39	      0xbf0d000000	                            mov edi, 0xd	       843	convert.c	FUNCTION_23	CALL_8
0x4003a3e	      0xe800000000	                          call 0x4003a43	       843	convert.c	FUNCTION_23	CALL_8
0x4003a43	        0x418b7e44	            mov edi, dword [r14 + 0x44] 	       846	convert.c	FUNCTION_23	CALL_12
0x4003a47	            0x31c0	                            xor eax, eax	       846	convert.c	FUNCTION_23	CALL_12
0x4003a49	      0xba00000000	                              mov edx, 0	       846	convert.c	FUNCTION_23	CALL_12
0x4003a4e	      0xbe00000000	                              mov esi, 0	       846	convert.c	FUNCTION_23	CALL_12
0x4003a53	      0xe800000000	                          call 0x4003a58	       846	convert.c	FUNCTION_23	CALL_12
0x4003a58	            0x85c0	                           test eax, eax	       847	convert.c	FUNCTION_23	IF_7
0x4003a5a	     0xf85f0030000	                           jne 0x4003e50	       847	convert.c	FUNCTION_23	IF_7
0x4003a60	          0x4889df	                            mov rdi, rbx	       850	convert.c	FUNCTION_23	CALL_14
0x4003a63	      0xe800000000	                          call 0x4003a68	       850	convert.c	FUNCTION_23	CALL_14
0x4003a68	    0x483de2ff0000	                         cmp rax, 0xffe2	       851	convert.c	FUNCTION_23	IF_8
0x4003a6e	     0xf8705050000	                            ja 0x4003f79	       851	convert.c	FUNCTION_23	IF_8
0x4003a74	        0x418b7e44	            mov edi, dword [r14 + 0x44] 	       856	convert.c	FUNCTION_23	CALL_15
0x4003a78	            0x31c0	                            xor eax, eax	       856	convert.c	FUNCTION_23	CALL_15
0x4003a7a	          0x4889da	                            mov rdx, rbx	       856	convert.c	FUNCTION_23	CALL_15
0x4003a7d	      0xbe00000000	                              mov esi, 0	       856	convert.c	FUNCTION_23	CALL_15
0x4003a82	      0xe800000000	                          call 0x4003a87	       856	convert.c	FUNCTION_23	CALL_15
0x4003a87	            0x85c0	                           test eax, eax	       857	convert.c	FUNCTION_23	IF_9
0x4003a89	     0xf85c1030000	                           jne 0x4003e50	       857	convert.c	FUNCTION_23	IF_9
0x4003a8f	        0x418b7e44	            mov edi, dword [r14 + 0x44] 	       868	convert.c	FUNCTION_23	CALL_17
0x4003a93	      0xe800000000	                          call 0x4003a98	       868	convert.c	FUNCTION_23	CALL_17
0x4003a98	            0x85c0	                           test eax, eax	       869	convert.c	FUNCTION_23	IF_12
0x4003a9a	     0xf85b0030000	                           jne 0x4003e50	       869	convert.c	FUNCTION_23	IF_12
0x4003aa0	          0x4585ed	                         test r13d, r13d	       872	convert.c	FUNCTION_23	IF_13
0x4003aa3	     0xf8876050000	                            js 0x400401f	       872	convert.c	FUNCTION_23	IF_13
0x4003aa9	        0x418b7644	            mov esi, dword [r14 + 0x44] 	       873	convert.c	FUNCTION_23	CALL_18
0x4003aad	          0x4489ef	                           mov edi, r13d	       873	convert.c	FUNCTION_23	CALL_18
0x4003ab0	      0xe800000000	                          call 0x4003ab5	       873	convert.c	FUNCTION_23	CALL_18
0x4003ab5	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       873	convert.c	FUNCTION_23	CALL_18
0x4003aba	            0x85c0	                           test eax, eax	       876	convert.c	FUNCTION_23	IF_14
0x4003abc	        0x48890c24	                    mov qword [rsp], rcx	       876	convert.c	FUNCTION_23	IF_14
0x4003ac0	     0xf8593030000	                           jne 0x4003e59	       876	convert.c	FUNCTION_23	IF_14
0x4003ac6	        0x418b7e48	            mov edi, dword [r14 + 0x48] 	       879	convert.c	FUNCTION_23	CALL_20
0x4003aca	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       879	convert.c	FUNCTION_23	CALL_20
0x4003ad2	      0xe800000000	                          call 0x4003ad7	       879	convert.c	FUNCTION_23	CALL_20
0x4003ad7	            0x85c0	                           test eax, eax	       880	convert.c	FUNCTION_23	IF_15
0x4003ad9	     0xf857a030000	                           jne 0x4003e59	       880	convert.c	FUNCTION_23	IF_15
0x4003adf	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x4003ae7	      0xbf00000000	                              mov edi, 0	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x4003aec	      0xb908000000	                              mov ecx, 8	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x4003af1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       889	convert.c	FUNCTION_23	ELSE_5	IF_17
0x4003af3	     0xf8560030000	                           jne 0x4003e59	       889	convert.c	FUNCTION_23	ELSE_5	IF_17
0x4003af9	        0x418b7e48	            mov edi, dword [r14 + 0x48] 	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003afd	        0x488b3424	                    mov rsi, qword [rsp]	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003b01	      0xe800000000	                          call 0x4003b06	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003b06	          0x4889c1	                            mov rcx, rax	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003b09	        0x48c1e93f	                           shr rcx, 0x3f	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003b0d	          0x4885c0	                           test rax, rax	       893	convert.c	FUNCTION_23	ELSE_5	IF_18
0x4003b10	          0x4989cd	                            mov r13, rcx	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003b13	            0x782e	                            js 0x4003b43	       893	convert.c	FUNCTION_23	ELSE_5	IF_18
0x4003b15	        0x418b7e48	            mov edi, dword [r14 + 0x48] 	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x4003b19	    0x488db4248000	                   lea rsi, [rsp + 0x80]	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x4003b21	      0xe800000000	                          call 0x4003b26	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x4003b26	            0x85c0	                           test eax, eax	       897	convert.c	FUNCTION_23	ELSE_5	IF_19
0x4003b28	     0xf852b030000	                           jne 0x4003e59	       897	convert.c	FUNCTION_23	ELSE_5	IF_19
0x4003b2e	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4003b36	      0xbe00000000	                              mov esi, 0	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4003b3b	      0xe800000000	                          call 0x4003b40	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4003b40	          0x4189c5	                           mov r13d, eax	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4003b43	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x4003b48	      0xe800000000	                          call 0x4003b4d	       904	convert.c	FUNCTION_23	CALL_28
0x4003b4d	          0x4585ed	                         test r13d, r13d	       906	convert.c	FUNCTION_23	IF_20
0x4003b50	     0xf850d030000	                           jne 0x4003e63	       906	convert.c	FUNCTION_23	IF_20
0x4003b56	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003b5b	        0x498b0c24	                    mov rcx, qword [r12]	        53	string3.h	FUNCTION_61	CALL_3
0x4003b5f	    0x41bd01000000	                             mov r13d, 1	        53	string3.h	FUNCTION_61	CALL_3
0x4003b65	      0x498b542408	                mov rdx, qword [r12 + 8]	        53	string3.h	FUNCTION_61	CALL_3
0x4003b6a	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003b6f	        0x49893424	                    mov qword [r12], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x4003b73	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003b78	    0x48898c24b000	             mov qword [rsp + 0xb0], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x4003b80	    0x48899424b800	             mov qword [rsp + 0xb8], rdx	        53	string3.h	FUNCTION_61	CALL_3
0x4003b88	    0x48898424c000	             mov qword [rsp + 0xc0], rax	        53	string3.h	FUNCTION_61	CALL_3
0x4003b90	      0x48894c2450	             mov qword [rsp + 0x50], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x4003b95	      0x4989742408	                mov qword [r12 + 8], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x4003b9a	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003b9f	      0x4889542458	             mov qword [rsp + 0x58], rdx	        53	string3.h	FUNCTION_61	CALL_3
0x4003ba4	      0x4889442460	             mov qword [rsp + 0x60], rax	        53	string3.h	FUNCTION_61	CALL_3
0x4003ba9	      0x4989742410	             mov qword [r12 + 0x10], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x4003bae	        0x488b3c24	                    mov rdi, qword [rsp]	       910	convert.c	FUNCTION_23	CALL_31
0x4003bb2	      0xe800000000	                          call 0x4003bb7	       910	convert.c	FUNCTION_23	CALL_31
0x4003bb7	          0x4585ed	                         test r13d, r13d	      1431	convert.c	FUNCTION_39	IF_1	CALL_4
0x4003bba	     0xf8483020000	                            je 0x4003e43	      1431	convert.c	FUNCTION_39	IF_1	CALL_4
0x4003bc0	      0x498b542408	                mov rdx, qword [r12 + 8]	      1434	convert.c	FUNCTION_39	CALL_6
0x4003bc5	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      1434	convert.c	FUNCTION_39	CALL_6
0x4003bca	          0x4189e9	                            mov r9d, ebp	      1434	convert.c	FUNCTION_39	CALL_6
0x4003bcd	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      1434	convert.c	FUNCTION_39	CALL_6
0x4003bd2	          0x4c89e1	                            mov rcx, r12	      1434	convert.c	FUNCTION_39	CALL_6
0x4003bd5	          0x4889df	                            mov rdi, rbx	      1434	convert.c	FUNCTION_39	CALL_6
0x4003bd8	      0xe8d3d5ffff	                  call sym.encode_to_git	      1434	convert.c	FUNCTION_39	CALL_6
0x4003bdd	      0x448b4c243c	            mov r9d, dword [rsp + 0x3c] 	      1435	convert.c	FUNCTION_39	CALL_7
0x4003be2	      0x498b442408	                mov rax, qword [r12 + 8]	      1435	convert.c	FUNCTION_39	CALL_7
0x4003be7	      0x4d8b6c2410	            mov r13, qword [r12 + 0x10] 	      1435	convert.c	FUNCTION_39	CALL_7
0x4003bec	        0x4183f901	                              cmp r9d, 1	       513	convert.c	FUNCTION_17	IF_1
0x4003bf0	        0x48890424	                    mov qword [rsp], rax	      1435	convert.c	FUNCTION_39	CALL_7
0x4003bf4	            0x7466	                            je 0x4003c5c	       513	convert.c	FUNCTION_17	IF_1
0x4003bf6	          0x4d85ed	                           test r13, r13	       513	convert.c	FUNCTION_17	IF_1
0x4003bf9	            0x7435	                            je 0x4003c30	       513	convert.c	FUNCTION_17	IF_1
0x4003bfb	          0x4885c0	                           test rax, rax	       513	convert.c	FUNCTION_17	IF_1
0x4003bfe	            0x7530	                           jne 0x4003c30	       513	convert.c	FUNCTION_17	IF_1
0x4003c00	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      1437	convert.c	FUNCTION_39
0x4003c08	    0x644833042528	                xor rax, qword fs:[0x28]	      1437	convert.c	FUNCTION_39
0x4003c11	     0xf851a040000	                           jne 0x4004031	      1437	convert.c	FUNCTION_39
0x4003c17	    0x4881c4d80000	                           add rsp, 0xd8	      1437	convert.c	FUNCTION_39
0x4003c1e	              0x5b	                                 pop rbx	      1437	convert.c	FUNCTION_39
0x4003c1f	              0x5d	                                 pop rbp	      1437	convert.c	FUNCTION_39
0x4003c20	            0x415c	                                 pop r12	      1437	convert.c	FUNCTION_39
0x4003c22	            0x415d	                                 pop r13	      1437	convert.c	FUNCTION_39
0x4003c24	            0x415e	                                 pop r14	      1437	convert.c	FUNCTION_39
0x4003c26	            0x415f	                                 pop r15	      1437	convert.c	FUNCTION_39
0x4003c28	              0xc3	                                     ret	      1437	convert.c	FUNCTION_39
0x4003c29	     0xf1f80000000	                         nop dword [rax]	      1437	convert.c	FUNCTION_39
0x4003c30	        0x4883ec08	                              sub rsp, 8	      1437	convert.c	FUNCTION_39
0x4003c34	          0x4c89ea	                            mov rdx, r13	      1437	convert.c	FUNCTION_39
0x4003c37	          0x4889de	                            mov rsi, rbx	      1437	convert.c	FUNCTION_39
0x4003c3a	              0x55	                                push rbp	      1437	convert.c	FUNCTION_39
0x4003c3b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1437	convert.c	FUNCTION_39
0x4003c40	          0x4d89e0	                             mov r8, r12	      1437	convert.c	FUNCTION_39
0x4003c43	          0x4c89ff	                            mov rdi, r15	      1437	convert.c	FUNCTION_39
0x4003c46	      0xe8c5ddffff	            call sym.crlf_to_git.part.20	      1437	convert.c	FUNCTION_39
0x4003c4b	      0x498b442408	                mov rax, qword [r12 + 8]	      1437	convert.c	FUNCTION_39
0x4003c50	      0x4d8b6c2410	            mov r13, qword [r12 + 0x10] 	      1437	convert.c	FUNCTION_39
0x4003c55	      0x4889442410	             mov qword [rsp + 0x10], rax	      1437	convert.c	FUNCTION_39
0x4003c5a	              0x59	                                 pop rcx	      1437	convert.c	FUNCTION_39
0x4003c5b	              0x5e	                                 pop rsi	      1437	convert.c	FUNCTION_39
0x4003c5c	        0x8b542440	            mov edx, dword [rsp + 0x40] 	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003c60	            0x85d2	                           test edx, edx	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003c62	            0x749c	                            je 0x4003c00	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003c64	          0x4d85ed	                           test r13, r13	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003c67	     0xf84a8000000	                            je 0x4003d15	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003c6d	        0x4c8b3424	                    mov r14, qword [rsp]	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c71	          0x4d85f6	                           test r14, r14	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c74	            0x748a	                            je 0x4003c00	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c76	          0x4d89ef	                            mov r15, r13	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c79	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c81	            0xeb10	                           jmp 0x4003c93	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c83	       0xf1f440000	                   nop dword [rax + rax]	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c88	          0x4885db	                           test rbx, rbx	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c8b	            0x747c	                            je 0x4003d09	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c8d	          0x4989de	                            mov r14, rbx	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c90	          0x4989ef	                            mov r15, rbp	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003c93	        0x41803f24	                    cmp byte [r15], 0x24	      1059	convert.c	FUNCTION_27	WHILE_1	IF_1
0x4003c97	        0x498d6f01	                      lea rbp, [r15 + 1]	      1057	convert.c	FUNCTION_27	WHILE_1
0x4003c9b	        0x498d5eff	                      lea rbx, [r14 - 1]	      1058	convert.c	FUNCTION_27	WHILE_1
0x4003c9f	            0x75e7	                           jne 0x4003c88	      1059	convert.c	FUNCTION_27	WHILE_1	IF_1
0x4003ca1	        0x4883fb02	                              cmp rbx, 2	      1061	convert.c	FUNCTION_27	WHILE_1	IF_2
0x4003ca5	            0x7662	                           jbe 0x4003d09	      1061	convert.c	FUNCTION_27	WHILE_1	IF_2
0x4003ca7	      0xba02000000	                              mov edx, 2	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003cac	          0x4889ee	                            mov rsi, rbp	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003caf	      0xbf00000000	                              mov edi, 0	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003cb4	      0xe800000000	                          call 0x4003cb9	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003cb9	            0x85c0	                           test eax, eax	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003cbb	            0x75d0	                           jne 0x4003c8d	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003cbd	      0x410fb64703	               movzx eax, byte [r15 + 3]	      1065	convert.c	FUNCTION_27	WHILE_1
0x4003cc2	        0x498d6f04	                      lea rbp, [r15 + 4]	      1066	convert.c	FUNCTION_27	WHILE_1
0x4003cc6	        0x498d5efc	                      lea rbx, [r14 - 4]	      1067	convert.c	FUNCTION_27	WHILE_1
0x4003cca	            0x3c24	                            cmp al, 0x24	      1068	convert.c	FUNCTION_27	WHILE_1	IF_4
0x4003ccc	            0x7462	                            je 0x4003d30	      1068	convert.c	FUNCTION_27	WHILE_1	IF_4
0x4003cce	            0x3c3a	                            cmp al, 0x3a	      1070	convert.c	FUNCTION_27	WHILE_1	IF_5
0x4003cd0	            0x75b6	                           jne 0x4003c88	      1070	convert.c	FUNCTION_27	WHILE_1	IF_5
0x4003cd2	          0x4885db	                           test rbx, rbx	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003cd5	            0x7432	                            je 0x4003d09	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003cd7	      0x410fb64704	               movzx eax, byte [r15 + 4]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003cdc	        0x498d6f05	                      lea rbp, [r15 + 5]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003ce0	        0x498d5efb	                      lea rbx, [r14 - 5]	      1078	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003ce4	            0x3c24	                            cmp al, 0x24	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003ce6	            0x7518	                           jne 0x4003d00	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003ce8	            0xeb46	                           jmp 0x4003d30	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003cea	    0x660f1f440000	                    nop word [rax + rax]	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003cf0	        0x4883c501	                              add rbp, 1	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003cf4	         0xfb645ff	               movzx eax, byte [rbp - 1]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003cf8	        0x4883eb01	                              sub rbx, 1	      1078	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003cfc	            0x3c24	                            cmp al, 0x24	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003cfe	            0x7430	                            je 0x4003d30	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003d00	            0x3c0a	                             cmp al, 0xa	      1083	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_7
0x4003d02	            0x7484	                            je 0x4003c88	      1083	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_7
0x4003d04	          0x4885db	                           test rbx, rbx	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003d07	            0x75e7	                           jne 0x4003cf0	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003d09	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003d0d	            0x85c0	                           test eax, eax	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003d0f	     0xf84ebfeffff	                            je 0x4003c00	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003d15	        0x488b3424	                    mov rsi, qword [rsp]	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003d19	          0x4c89e2	                            mov rdx, r12	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003d1c	          0x4c89ef	                            mov rdi, r13	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003d1f	      0xe81cceffff	   call sym.ident_to_git.isra.14.part.15	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x4003d24	      0xe9d7feffff	                           jmp 0x4003c00	      1437	convert.c	FUNCTION_39
0x4003d29	     0xf1f80000000	                         nop dword [rax]	      1437	convert.c	FUNCTION_39
0x4003d30	      0x8344240c01	                add dword [rsp + 0xc], 1	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003d35	      0xe94effffff	                           jmp 0x4003c88	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003d3a	    0x660f1f440000	                    nop word [rax + rax]	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003d40	            0x31c9	                            xor ecx, ecx	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003d42	            0x31d2	                            xor edx, edx	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003d44	      0xbe00000000	                              mov esi, 0	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003d49	      0xbf00000000	                              mov edi, 0	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003d4e	        0x4c890c24	                     mov qword [rsp], r9	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003d52	    0xc70500000000	               mov dword [0x04003d5c], 1	       813	convert.c	FUNCTION_23	IF_1
0x4003d5c	      0xe800000000	                          call 0x4003d61	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003d61	            0x31ff	                            xor edi, edi	       820	convert.c	FUNCTION_23	CALL_3
0x4003d63	      0xe800000000	                          call 0x4003d68	       820	convert.c	FUNCTION_23	CALL_3
0x4003d68	        0x4c8b0c24	                     mov r9, qword [rsp]	       820	convert.c	FUNCTION_23	CALL_3
0x4003d6c	      0xbf80000000	                           mov edi, 0x80	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x4003d71	        0x4c890c24	                     mov qword [rsp], r9	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x4003d75	      0xe800000000	                          call 0x4003d7a	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x4003d7a	        0x4c8b0c24	                     mov r9, qword [rsp]	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4003d7e	    0xc74078000000	               mov dword [rax + 0x78], 0	       824	convert.c	FUNCTION_23	IF_2
0x4003d85	      0xb900000000	                              mov ecx, 0	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4003d8a	          0x4889c6	                            mov rsi, rax	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4003d8d	      0xbf00000000	                              mov edi, 0	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4003d92	          0x4989c6	                            mov r14, rax	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x4003d95	          0x4c89ca	                             mov rdx, r9	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4003d98	      0xe800000000	                          call 0x4003d9d	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4003d9d	            0x85c0	                           test eax, eax	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4003d9f	     0xf8484fcffff	                            je 0x4003a29	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4003da5	          0x4c89f7	                            mov rdi, r14	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x4003da8	      0xe800000000	                          call 0x4003dad	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x4003dad	      0xe991000000	                           jmp 0x4003e43	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x4003db2	    0x660f1f440000	                    nop word [rax + rax]	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x4003db8	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        90	string3.h	FUNCTION_64	CALL_6
0x4003dc0	          0x4c89c8	                             mov rax, r9	        90	string3.h	FUNCTION_64	CALL_6
0x4003dc3	      0xb906000000	                              mov ecx, 6	        90	string3.h	FUNCTION_64	CALL_6
0x4003dc8	    0x48c744241000	               mov qword [rsp + 0x10], 0	       714	convert.c	FUNCTION_20
0x4003dd1	    0x48c744241800	               mov qword [rsp + 0x18], 0	       714	convert.c	FUNCTION_20
0x4003dda	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_64	CALL_6
0x4003ddd	      0x488d442450	                   lea rax, [rsp + 0x50]	       720	convert.c	FUNCTION_20
0x4003de2	            0x31ff	                            xor edi, edi	       728	convert.c	FUNCTION_20	CALL_2
0x4003de4	    0x48c744242000	               mov qword [rsp + 0x20], 0	       714	convert.c	FUNCTION_20
0x4003ded	    0x48c784248000	               mov qword [rsp + 0x80], 0	       719	convert.c	FUNCTION_20
0x4003df9	    0xc78424940000	     mov dword [rsp + 0x94], 0xffffffff 	       721	convert.c	FUNCTION_20
0x4003e04	    0x488984248800	             mov qword [rsp + 0x88], rax	       720	convert.c	FUNCTION_20
0x4003e0c	    0x48c744245000	               mov qword [rsp + 0x50], 0	       722	convert.c	FUNCTION_20
0x4003e15	    0x48c744245800	               mov qword [rsp + 0x58], 0	       723	convert.c	FUNCTION_20
0x4003e1e	      0x44896c2460	            mov dword [rsp + 0x60], r13d	       724	convert.c	FUNCTION_20
0x4003e23	      0x4c89742468	             mov qword [rsp + 0x68], r14	       725	convert.c	FUNCTION_20
0x4003e28	      0x48895c2470	             mov qword [rsp + 0x70], rbx	       726	convert.c	FUNCTION_20
0x4003e2d	      0xe800000000	                          call 0x4003e32	       728	convert.c	FUNCTION_20	CALL_2
0x4003e32	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e3a	      0xe800000000	                          call 0x4003e3f	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e3f	            0x85c0	                           test eax, eax	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e41	            0x747a	                            je 0x4003ebd	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e43	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e48	      0xe933fbffff	                           jmp 0x4003980	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e4d	           0xf1f00	                         nop dword [rax]	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e50	      0x488d442450	                   lea rax, [rsp + 0x50]	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e55	        0x48890424	                    mov qword [rsp], rax	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x4003e59	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x4003e5e	      0xe800000000	                          call 0x4003e63	       904	convert.c	FUNCTION_23	CALL_28
0x4003e63	    0x4c8b84249000	              mov r8, qword [rsp + 0x90]	       904	convert.c	FUNCTION_23	CALL_28
0x4003e6b	      0xbf00000000	                              mov edi, 0	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e70	      0xb906000000	                              mov ecx, 6	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e75	          0x4c89c6	                             mov rsi, r8	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e78	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e7a	           0xf97c2	                                 seta dl	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e7d	           0xf92c0	                                 setb al	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e80	            0x29c2	                            sub edx, eax	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e82	        0x440fbeea	                          movsx r13d, dl	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e86	          0x4585ed	                         test r13d, r13d	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e89	     0xf841ffdffff	                            je 0x4003bae	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003e8f	      0xbf00000000	                              mov edi, 0	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003e94	      0xb906000000	                              mov ecx, 6	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003e99	          0x4c89c6	                             mov rsi, r8	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003e9c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003e9e	           0xf97c2	                                 seta dl	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003ea1	           0xf92c0	                                 setb al	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003ea4	            0x29c2	                            sub edx, eax	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003ea6	        0x440fbeea	                          movsx r13d, dl	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003eaa	          0x4585ed	                         test r13d, r13d	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003ead	     0xf853f010000	                           jne 0x4003ff2	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003eb3	      0x41836678fe	      and dword [r14 + 0x78], 0xfffffffe	       787	convert.c	FUNCTION_22	ELSE_1	IF_2
0x4003eb8	      0xe9f1fcffff	                           jmp 0x4003bae	       787	convert.c	FUNCTION_22	ELSE_1	IF_2
0x4003ebd	    0x8bb424940000	            mov esi, dword [rsp + 0x94] 	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003ec4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003ec9	            0x31d2	                            xor edx, edx	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003ecb	    0x41bd01000000	                             mov r13d, 1	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003ed1	      0xe800000000	                          call 0x4003ed6	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003ed6	          0x4885c0	                           test rax, rax	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003ed9	    0xc70424000000	                      mov dword [rsp], 0	       713	convert.c	FUNCTION_20
0x4003ee0	     0xf88ee000000	                            js 0x4003fd4	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003ee6	    0x8bbc24940000	            mov edi, dword [rsp + 0x94] 	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x4003eed	      0xe800000000	                          call 0x4003ef2	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x4003ef2	            0x85c0	                           test eax, eax	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x4003ef4	     0xf85a3000000	                           jne 0x4003f9d	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x4003efa	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003f02	      0xe800000000	                          call 0x4003f07	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003f07	            0x85c0	                           test eax, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003f09	     0xf85b1000000	                           jne 0x4003fc0	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003f0f	        0x448b0424	                    mov r8d, dword [rsp]	       742	convert.c	FUNCTION_20	IF_5
0x4003f13	          0x4585c0	                           test r8d, r8d	       742	convert.c	FUNCTION_20	IF_5
0x4003f16	            0x7552	                           jne 0x4003f6a	       742	convert.c	FUNCTION_20	IF_5
0x4003f18	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003f1d	        0x498b3424	                    mov rsi, qword [r12]	        53	string3.h	FUNCTION_61	CALL_3
0x4003f21	      0x498b4c2408	                mov rcx, qword [r12 + 8]	        53	string3.h	FUNCTION_61	CALL_3
0x4003f26	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003f2b	        0x49893c24	                    mov qword [r12], rdi	        53	string3.h	FUNCTION_61	CALL_3
0x4003f2f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003f34	    0x4889b424b000	             mov qword [rsp + 0xb0], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x4003f3c	    0x48898c24b800	             mov qword [rsp + 0xb8], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x4003f44	    0x48898424c000	             mov qword [rsp + 0xc0], rax	        53	string3.h	FUNCTION_61	CALL_3
0x4003f4c	      0x4889742410	             mov qword [rsp + 0x10], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x4003f51	      0x49897c2408	                mov qword [r12 + 8], rdi	        53	string3.h	FUNCTION_61	CALL_3
0x4003f56	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003f5b	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x4003f60	      0x4889442420	             mov qword [rsp + 0x20], rax	        53	string3.h	FUNCTION_61	CALL_3
0x4003f65	      0x49897c2410	             mov qword [r12 + 0x10], rdi	        53	string3.h	FUNCTION_61	CALL_3
0x4003f6a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       745	convert.c	FUNCTION_20	CALL_8
0x4003f6f	      0xe800000000	                          call 0x4003f74	       745	convert.c	FUNCTION_20	CALL_8
0x4003f74	      0xe93efcffff	                           jmp 0x4003bb7	       745	convert.c	FUNCTION_20	CALL_8
0x4003f79	      0xbf00000000	                              mov edi, 0	       852	convert.c	FUNCTION_23	IF_8
0x4003f7e	            0x31c0	                            xor eax, eax	       852	convert.c	FUNCTION_23	IF_8
0x4003f80	      0xe800000000	                          call 0x4003f85	       852	convert.c	FUNCTION_23	IF_8
0x4003f85	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x4003f8a	      0xe800000000	                          call 0x4003f8f	       904	convert.c	FUNCTION_23	CALL_28
0x4003f8f	      0x488d442450	                   lea rax, [rsp + 0x50]	       904	convert.c	FUNCTION_23	CALL_28
0x4003f94	        0x48890424	                    mov qword [rsp], rax	       904	convert.c	FUNCTION_23	CALL_28
0x4003f98	      0xe9c6feffff	                           jmp 0x4003e63	       904	convert.c	FUNCTION_23	CALL_28
0x4003f9d	          0x4c89f6	                            mov rsi, r14	       736	convert.c	FUNCTION_20	IF_3
0x4003fa0	      0xbf00000000	                              mov edi, 0	       736	convert.c	FUNCTION_20	IF_3
0x4003fa5	            0x31c0	                            xor eax, eax	       736	convert.c	FUNCTION_20	IF_3
0x4003fa7	      0xe800000000	                          call 0x4003fac	       736	convert.c	FUNCTION_20	IF_3
0x4003fac	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003fb4	      0xe800000000	                          call 0x4003fb9	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003fb9	            0x85c0	                           test eax, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003fbb	          0x4189c5	                           mov r13d, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003fbe	            0x74aa	                            je 0x4003f6a	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003fc0	          0x4c89f6	                            mov rsi, r14	       739	convert.c	FUNCTION_20	IF_4
0x4003fc3	      0xbf00000000	                              mov edi, 0	       739	convert.c	FUNCTION_20	IF_4
0x4003fc8	            0x31c0	                            xor eax, eax	       739	convert.c	FUNCTION_20	IF_4
0x4003fca	      0xe800000000	                          call 0x4003fcf	       739	convert.c	FUNCTION_20	IF_4
0x4003fcf	          0x4531ed	                          xor r13d, r13d	       739	convert.c	FUNCTION_20	IF_4
0x4003fd2	            0xeb96	                           jmp 0x4003f6a	       739	convert.c	FUNCTION_20	IF_4
0x4003fd4	          0x4c89f6	                            mov rsi, r14	       733	convert.c	FUNCTION_20	IF_2
0x4003fd7	      0xbf00000000	                              mov edi, 0	       733	convert.c	FUNCTION_20	IF_2
0x4003fdc	            0x31c0	                            xor eax, eax	       733	convert.c	FUNCTION_20	IF_2
0x4003fde	      0xe800000000	                          call 0x4003fe3	       733	convert.c	FUNCTION_20	IF_2
0x4003fe3	          0x4531ed	                          xor r13d, r13d	       733	convert.c	FUNCTION_20	IF_2
0x4003fe6	    0xc70424ffffff	            mov dword [rsp], 0xffffffff 	       733	convert.c	FUNCTION_20	IF_2
0x4003fed	      0xe9f4feffff	                           jmp 0x4003ee6	       733	convert.c	FUNCTION_20	IF_2
0x4003ff2	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	       793	convert.c	FUNCTION_22	ELSE_2
0x4003ff6	      0xbf00000000	                              mov edi, 0	       793	convert.c	FUNCTION_22	ELSE_2
0x4003ffb	            0x31c0	                            xor eax, eax	       793	convert.c	FUNCTION_22	ELSE_2
0x4003ffd	          0x4531ed	                          xor r13d, r13d	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4004000	      0xe800000000	                          call 0x4004005	       793	convert.c	FUNCTION_22	ELSE_2
0x4004005	          0x4c89f6	                            mov rsi, r14	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x4004008	      0xbf00000000	                              mov edi, 0	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x400400d	      0xe800000000	                          call 0x4004012	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x4004012	          0x4c89f7	                            mov rdi, r14	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4004015	      0xe800000000	                          call 0x400401a	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x400401a	      0xe98ffbffff	                           jmp 0x4003bae	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x400401f	        0x418b5644	            mov edx, dword [r14 + 0x44] 	       875	convert.c	FUNCTION_23	CALL_19
0x4004023	            0x31f6	                            xor esi, esi	       875	convert.c	FUNCTION_23	CALL_19
0x4004025	            0x31ff	                            xor edi, edi	       875	convert.c	FUNCTION_23	CALL_19
0x4004027	      0xe800000000	                          call 0x400402c	       875	convert.c	FUNCTION_23	CALL_19
0x400402c	      0xe984faffff	                           jmp 0x4003ab5	       875	convert.c	FUNCTION_23	CALL_19
0x4004031	      0xe800000000	                          call 0x4004036	      1437	convert.c	FUNCTION_39
0x4004036	      0xb900000000	                              mov ecx, 0	      1428	convert.c	FUNCTION_39	CALL_2
0x400403b	      0xba94050000	                          mov edx, 0x594	      1428	convert.c	FUNCTION_39	CALL_2
0x4004040	      0xbe00000000	                              mov esi, 0	      1428	convert.c	FUNCTION_39	CALL_2
0x4004045	      0xbf00000000	                              mov edi, 0	      1428	convert.c	FUNCTION_39	CALL_2
0x400404a	      0xe800000000	                          call 0x400404f	      1428	convert.c	FUNCTION_39	CALL_2
0x400404f	      0xb900000000	                              mov ecx, 0	      1429	convert.c	FUNCTION_39	CALL_3
0x4004054	      0xba95050000	                          mov edx, 0x595	      1429	convert.c	FUNCTION_39	CALL_3
0x4004059	      0xbe00000000	                              mov esi, 0	      1429	convert.c	FUNCTION_39	CALL_3
0x400405e	      0xbf00000000	                              mov edi, 0	      1429	convert.c	FUNCTION_39	CALL_3
0x4004063	      0xe800000000	                          call 0x4004068	      1429	convert.c	FUNCTION_39	CALL_3
gather_stats	DO,0:WHILE,0:functions,0:FOR,1:SWITCH,1:ELSE,3:CALL,1:IF,6	60
0x4000440	            0x31c0	                            xor eax, eax	        51	convert.c	IF_6	FUNCTION_1	FOR_1
0x4000442	          0x4885f6	                           test rsi, rsi	        51	convert.c	IF_6	FUNCTION_1	FOR_1
0x4000445	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_64	CALL_6
0x400044c	    0x48c742080000	                  mov qword [rdx + 8], 0	        90	string3.h	FUNCTION_64	CALL_6
0x4000454	    0x48c742100000	               mov qword [rdx + 0x10], 0	        90	string3.h	FUNCTION_64	CALL_6
0x400045c	    0x41b801000000	                              mov r8d, 1	        90	string3.h	FUNCTION_64	CALL_6
0x4000462	            0x7450	                            je 0x40004b4	        51	convert.c	IF_6	FUNCTION_1	FOR_1
0x4000464	         0xfb60c07	             movzx ecx, byte [rdi + rax]	        52	convert.c	IF_6	FUNCTION_1	FOR_1
0x4000468	          0x80f90d	                             cmp cl, 0xd	        53	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1
0x400046b	            0x7469	                            je 0x40004d6	        53	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1
0x400046d	          0x80f90a	                             cmp cl, 0xa	        61	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_1	IF_3
0x4000470	            0x747e	                            je 0x40004f0	        61	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_1	IF_3
0x4000472	          0x80f97f	                            cmp cl, 0x7f	        65	convert.c	IF_6	FUNCTION_1	FOR_1	IF_4
0x4000475	            0x7429	                            je 0x40004a0	        65	convert.c	IF_6	FUNCTION_1	FOR_1	IF_4
0x4000477	          0x80f91f	                            cmp cl, 0x1f	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x400047a	            0x7744	                            ja 0x40004c0	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x400047c	          0x80f91b	                            cmp cl, 0x1b	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x400047f	            0x771f	                            ja 0x40004a0	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x4000481	          0x4d89c1	                              mov r9, r8	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x4000484	          0x49d3e1	                              shl r9, cl	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x4000487	    0x41f7c1001300	                     test r9d, 0x8001300	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x400048e	            0x7530	                           jne 0x40004c0	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x4000490	            0x84c9	                             test cl, cl	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x4000492	            0x750c	                           jne 0x40004a0	        68	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5
0x4000494	          0x830201	                      add dword [rdx], 1	        75	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5	SWITCH_1
0x4000497	    0x660f1f840000	                    nop word [rax + rax]	        75	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5	SWITCH_1
0x40004a0	        0x4883c001	                              add rax, 1	        78	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5	SWITCH_1
0x40004a4	        0x83421401	               add dword [rdx + 0x14], 1	        78	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_2	IF_5	SWITCH_1
0x40004a8	          0x4839f0	                            cmp rax, rsi	        51	convert.c	IF_6	FUNCTION_1	FOR_1
0x40004ab	            0x72b7	                            jb 0x4000464	        51	convert.c	IF_6	FUNCTION_1	FOR_1
0x40004ad	      0x807c37ff1a	         cmp byte [rdi + rsi - 1], 0x1a 	        86	convert.c	IF_6	FUNCTION_1
0x40004b2	            0x744c	                            je 0x4000500	        86	convert.c	IF_6	FUNCTION_1
0x40004b4	            0xf3c3	                                     ret	        86	convert.c	IF_6	FUNCTION_1
0x40004b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        86	convert.c	IF_6	FUNCTION_1
0x40004c0	        0x83421001	               add dword [rdx + 0x10], 1	        82	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_3
0x40004c4	        0x4883c001	                              add rax, 1	        82	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_3
0x40004c8	          0x4839f0	                            cmp rax, rsi	        51	convert.c	IF_6	FUNCTION_1	FOR_1
0x40004cb	            0x73e0	                           jae 0x40004ad	        51	convert.c	IF_6	FUNCTION_1	FOR_1
0x40004cd	         0xfb60c07	             movzx ecx, byte [rdi + rax]	        52	convert.c	IF_6	FUNCTION_1	FOR_1
0x40004d1	          0x80f90d	                             cmp cl, 0xd	        53	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1
0x40004d4	            0x7597	                           jne 0x400046d	        53	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1
0x40004d6	        0x488d4801	                      lea rcx, [rax + 1]	        54	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x40004da	          0x4839ce	                            cmp rsi, rcx	        54	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x40004dd	            0x7607	                           jbe 0x40004e6	        54	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x40004df	      0x807c07010a	          cmp byte [rdi + rax + 1], 0xa 	        54	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x40004e4	            0x7422	                            je 0x4000508	        54	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x40004e6	        0x83420401	                  add dword [rdx + 4], 1	        58	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	ELSE_1
0x40004ea	          0x4889c8	                            mov rax, rcx	        54	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x40004ed	            0xebd9	                           jmp 0x40004c8	        54	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x40004ef	              0x90	                                     nop	        54	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x40004f0	        0x83420801	                  add dword [rdx + 8], 1	        62	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_1	IF_3
0x40004f4	        0x4883c001	                              add rax, 1	        63	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_1	IF_3
0x40004f8	            0xebce	                           jmp 0x40004c8	        63	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_1	IF_3
0x40004fa	    0x660f1f440000	                    nop word [rax + rax]	        63	convert.c	IF_6	FUNCTION_1	FOR_1	ELSE_1	IF_3
0x4000500	        0x836a1401	               sub dword [rdx + 0x14], 1	        87	convert.c	FUNCTION_1
0x4000504	              0xc3	                                     ret	        88	convert.c	FUNCTION_1
0x4000505	           0xf1f00	                         nop dword [rax]	        88	convert.c	FUNCTION_1
0x4000508	        0x83420c01	                add dword [rdx + 0xc], 1	        55	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x400050c	        0x4883c002	                              add rax, 2	        56	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
0x4000510	            0xebb6	                           jmp 0x40004c8	        56	convert.c	IF_6	FUNCTION_1	FOR_1	IF_1	IF_2
encode_to_git	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,1:CALL,15:IF,7	285
0x40011b0	            0x4157	                                push r15	       390	convert.c	FUNCTION_15
0x40011b2	            0x4156	                                push r14	       390	convert.c	FUNCTION_15
0x40011b4	            0x4155	                                push r13	       390	convert.c	FUNCTION_15
0x40011b6	            0x4154	                                push r12	       390	convert.c	FUNCTION_15
0x40011b8	              0x55	                                push rbp	       390	convert.c	FUNCTION_15
0x40011b9	              0x53	                                push rbx	       390	convert.c	FUNCTION_15
0x40011ba	        0x4883ec38	                           sub rsp, 0x38	       390	convert.c	FUNCTION_15
0x40011be	    0x64488b042528	                mov rax, qword fs:[0x28]	       390	convert.c	FUNCTION_15
0x40011c7	      0x4889442428	             mov qword [rsp + 0x28], rax	       390	convert.c	FUNCTION_15
0x40011cc	            0x31c0	                            xor eax, eax	       390	convert.c	FUNCTION_15
0x40011ce	          0x4d85c0	                             test r8, r8	       399	convert.c	FUNCTION_15	IF_1
0x40011d1	            0x7419	                            je 0x40011ec	       399	convert.c	FUNCTION_15	IF_1
0x40011d3	          0x4885f6	                           test rsi, rsi	       399	convert.c	FUNCTION_15	IF_1
0x40011d6	          0x4989fe	                            mov r14, rdi	       399	convert.c	FUNCTION_15	IF_1
0x40011d9	          0x4889f5	                            mov rbp, rsi	       399	convert.c	FUNCTION_15	IF_1
0x40011dc	          0x4989d4	                            mov r12, rdx	       399	convert.c	FUNCTION_15	IF_1
0x40011df	          0x4989cf	                            mov r15, rcx	       399	convert.c	FUNCTION_15	IF_1
0x40011e2	          0x4c89c3	                             mov rbx, r8	       399	convert.c	FUNCTION_15	IF_1
0x40011e5	            0x7431	                            je 0x4001218	       399	convert.c	FUNCTION_15	IF_1
0x40011e7	          0x4885d2	                           test rdx, rdx	       399	convert.c	FUNCTION_15	IF_1
0x40011ea	            0x752c	                           jne 0x4001218	       399	convert.c	FUNCTION_15	IF_1
0x40011ec	            0x31c0	                            xor eax, eax	       412	convert.c	FUNCTION_15	IF_3
0x40011ee	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       477	convert.c	FUNCTION_15
0x40011f3	    0x644833342528	                xor rsi, qword fs:[0x28]	       477	convert.c	FUNCTION_15
0x40011fc	     0xf85b6030000	                           jne 0x40015b8	       477	convert.c	FUNCTION_15
0x4001202	        0x4883c438	                           add rsp, 0x38	       477	convert.c	FUNCTION_15
0x4001206	              0x5b	                                 pop rbx	       477	convert.c	FUNCTION_15
0x4001207	              0x5d	                                 pop rbp	       477	convert.c	FUNCTION_15
0x4001208	            0x415c	                                 pop r12	       477	convert.c	FUNCTION_15
0x400120a	            0x415d	                                 pop r13	       477	convert.c	FUNCTION_15
0x400120c	            0x415e	                                 pop r14	       477	convert.c	FUNCTION_15
0x400120e	            0x415f	                                 pop r15	       477	convert.c	FUNCTION_15
0x4001210	              0xc3	                                     ret	       477	convert.c	FUNCTION_15
0x4001211	     0xf1f80000000	                         nop dword [rax]	       477	convert.c	FUNCTION_15
0x4001218	          0x4d85ff	                           test r15, r15	       408	convert.c	FUNCTION_15	IF_2
0x400121b	            0x750a	                           jne 0x4001227	       408	convert.c	FUNCTION_15	IF_2
0x400121d	          0x4885ed	                           test rbp, rbp	       408	convert.c	FUNCTION_15	IF_2
0x4001220	      0xb801000000	                              mov eax, 1	       409	convert.c	FUNCTION_15	IF_2
0x4001225	            0x74c7	                            je 0x40011ee	       408	convert.c	FUNCTION_15	IF_2
0x4001227	        0x4183e110	                           and r9d, 0x10	       393	convert.c	FUNCTION_15
0x400122b	      0xbe00000000	                              mov esi, 0	       273	convert.c	FUNCTION_12	IF_1	CALL_1
0x4001230	          0x4889df	                            mov rdi, rbx	       273	convert.c	FUNCTION_12	IF_1	CALL_1
0x4001233	          0x4589cd	                           mov r13d, r9d	       393	convert.c	FUNCTION_15
0x4001236	      0xe800000000	                          call 0x400123b	       273	convert.c	FUNCTION_12	IF_1	CALL_1
0x400123b	            0x85c0	                           test eax, eax	       273	convert.c	FUNCTION_12	IF_1	CALL_1
0x400123d	     0xf85b5010000	                           jne 0x40013f8	       273	convert.c	FUNCTION_12	IF_1	CALL_1
0x4001243	          0x4d89e0	                             mov r8, r12	       414	convert.c	FUNCTION_15	CALL_2
0x4001246	          0x4889e9	                            mov rcx, rbp	       414	convert.c	FUNCTION_15	CALL_2
0x4001249	          0x4889da	                            mov rdx, rbx	       414	convert.c	FUNCTION_15	CALL_2
0x400124c	          0x4c89f6	                            mov rsi, r14	       414	convert.c	FUNCTION_15	CALL_2
0x400124f	      0xbf00000000	                              mov edi, 0	       414	convert.c	FUNCTION_15	CALL_2
0x4001254	      0xe857f7ffff	                 call sym.trace_encoding	       414	convert.c	FUNCTION_15	CALL_2
0x4001259	      0x4c8d442420	                    lea r8, [rsp + 0x20]	       415	convert.c	FUNCTION_15	CALL_3
0x400125e	          0x4889d9	                            mov rcx, rbx	       415	convert.c	FUNCTION_15	CALL_3
0x4001261	      0xba00000000	                              mov edx, 0	       415	convert.c	FUNCTION_15	CALL_3
0x4001266	          0x4489e6	                           mov esi, r12d	       415	convert.c	FUNCTION_15	CALL_3
0x4001269	          0x4889ef	                            mov rdi, rbp	       415	convert.c	FUNCTION_15	CALL_3
0x400126c	      0xe800000000	                          call 0x4001271	       415	convert.c	FUNCTION_15	CALL_3
0x4001271	          0x4885c0	                           test rax, rax	       417	convert.c	FUNCTION_15	IF_4
0x4001274	      0x4889442408	                mov qword [rsp + 8], rax	       415	convert.c	FUNCTION_15	CALL_3
0x4001279	     0xf84d1020000	                            je 0x4001550	       417	convert.c	FUNCTION_15	IF_4
0x400127f	      0x4c63442420	          movsxd r8, dword [rsp + 0x20] 	       432	convert.c	FUNCTION_15	CALL_6
0x4001284	          0x4889c1	                            mov rcx, rax	       432	convert.c	FUNCTION_15	CALL_6
0x4001287	      0xba00000000	                              mov edx, 0	       432	convert.c	FUNCTION_15	CALL_6
0x400128c	          0x4c89f6	                            mov rsi, r14	       432	convert.c	FUNCTION_15	CALL_6
0x400128f	      0xbf00000000	                              mov edi, 0	       432	convert.c	FUNCTION_15	CALL_6
0x4001294	      0xe817f7ffff	                 call sym.trace_encoding	       432	convert.c	FUNCTION_15	CALL_6
0x4001299	          0x4585ed	                         test r13d, r13d	       453	convert.c	FUNCTION_15	IF_6	CALL_7
0x400129c	     0xf842e010000	                            je 0x40013d0	       453	convert.c	FUNCTION_15	IF_6	CALL_7
0x40012a2	    0x4c8b2d000000	            mov r13, qword [0x040012a9] 	       357	convert.c	FUNCTION_14
0x40012a9	          0x4889de	                            mov rsi, rbx	       357	convert.c	FUNCTION_14
0x40012ac	          0x4c89ef	                            mov rdi, r13	       357	convert.c	FUNCTION_14
0x40012af	      0xe800000000	                          call 0x40012b4	       357	convert.c	FUNCTION_14
0x40012b4	          0x4885c0	                           test rax, rax	       360	convert.c	FUNCTION_14	IF_1
0x40012b7	      0x4889442410	             mov qword [rsp + 0x10], rax	       360	convert.c	FUNCTION_14	IF_1
0x40012bc	     0xf840e010000	                            je 0x40013d0	       360	convert.c	FUNCTION_14	IF_1
0x40012c2	          0x4889df	                            mov rdi, rbx	       362	convert.c	FUNCTION_14	CALL_1
0x40012c5	      0xe800000000	                          call 0x40012ca	       362	convert.c	FUNCTION_14	CALL_1
0x40012ca	          0x4c89ef	                            mov rdi, r13	       363	convert.c	FUNCTION_14	CALL_2
0x40012cd	      0x4889442418	             mov qword [rsp + 0x18], rax	       362	convert.c	FUNCTION_14	CALL_1
0x40012d2	      0xe800000000	                          call 0x40012d7	       363	convert.c	FUNCTION_14	CALL_2
0x40012d7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       364	convert.c	FUNCTION_14
0x40012dc	          0x4939d5	                            cmp r13, rdx	       364	convert.c	FUNCTION_14
0x40012df	            0x7416	                            je 0x40012f7	       364	convert.c	FUNCTION_14
0x40012e1	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       371	convert.c	FUNCTION_14
0x40012e5	          0x80f92c	                            cmp cl, 0x2c	       371	convert.c	FUNCTION_14
0x40012e8	            0x740d	                            je 0x40012f7	       371	convert.c	FUNCTION_14
0x40012ea	    0xf68100000000	                      test byte [rcx], 1	       371	convert.c	FUNCTION_14
0x40012f1	     0xf84d9000000	                            je 0x40013d0	       371	convert.c	FUNCTION_14
0x40012f7	      0x4803542418	             add rdx, qword [rsp + 0x18]	       362	convert.c	FUNCTION_14	CALL_1
0x40012fc	            0x4898	                                    cdqe	       379	convert.c	FUNCTION_14
0x40012fe	          0x4901c5	                            add r13, rax	       379	convert.c	FUNCTION_14
0x4001301	          0x4c39ea	                            cmp rdx, r13	       373	convert.c	FUNCTION_14
0x4001304	            0x741b	                            je 0x4001321	       373	convert.c	FUNCTION_14
0x4001306	     0xf83c4000000	                           jae 0x40013d0	       379	convert.c	FUNCTION_14
0x400130c	           0xfb612	                   movzx edx, byte [rdx]	       381	convert.c	FUNCTION_14
0x400130f	    0xf68200000000	                      test byte [rdx], 1	       381	convert.c	FUNCTION_14
0x4001316	            0x7509	                           jne 0x4001321	       381	convert.c	FUNCTION_14
0x4001318	          0x80fa2c	                            cmp dl, 0x2c	       381	convert.c	FUNCTION_14
0x400131b	     0xf85af000000	                           jne 0x40013d0	       381	convert.c	FUNCTION_14
0x4001321	        0x8b742420	            mov esi, dword [rsp + 0x20] 	       457	convert.c	FUNCTION_15	IF_6	CALL_8
0x4001325	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       457	convert.c	FUNCTION_15	IF_6	CALL_8
0x400132a	      0x4c8d442424	                    lea r8, [rsp + 0x24]	       457	convert.c	FUNCTION_15	IF_6	CALL_8
0x400132f	          0x4889da	                            mov rdx, rbx	       457	convert.c	FUNCTION_15	IF_6	CALL_8
0x4001332	      0xb900000000	                              mov ecx, 0	       457	convert.c	FUNCTION_15	IF_6	CALL_8
0x4001337	      0xe800000000	                          call 0x400133c	       457	convert.c	FUNCTION_15	IF_6	CALL_8
0x400133c	          0x4989c5	                            mov r13, rax	       457	convert.c	FUNCTION_15	IF_6	CALL_8
0x400133f	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x4001349	    0x482305000000	             and rax, qword [0x04001350]	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x4001350	    0x48ba00000000	                 movabs rdx, 0x100000000	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x400135a	          0x4839d0	                            cmp rax, rdx	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x400135d	            0x741e	                            je 0x400137d	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x400135f	          0x4989d8	                             mov r8, rbx	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x4001362	      0xb900000000	                              mov ecx, 0	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x4001367	      0xba00000000	                              mov edx, 0	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x400136c	      0xbecd010000	                          mov esi, 0x1cd	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x4001371	      0xbf00000000	                              mov edi, 0	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x4001376	            0x31c0	                            xor eax, eax	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x4001378	      0xe800000000	                          call 0x400137d	       461	convert.c	FUNCTION_15	IF_6	CALL_9
0x400137d	      0x4c63442424	          movsxd r8, dword [rsp + 0x24] 	       462	convert.c	FUNCTION_15	IF_6	CALL_10
0x4001382	          0x4c89e9	                            mov rcx, r13	       462	convert.c	FUNCTION_15	IF_6	CALL_10
0x4001385	          0x4889da	                            mov rdx, rbx	       462	convert.c	FUNCTION_15	IF_6	CALL_10
0x4001388	          0x4c89f6	                            mov rsi, r14	       462	convert.c	FUNCTION_15	IF_6	CALL_10
0x400138b	      0xbf00000000	                              mov edi, 0	       462	convert.c	FUNCTION_15	IF_6	CALL_10
0x4001390	      0xe81bf6ffff	                 call sym.trace_encoding	       462	convert.c	FUNCTION_15	IF_6	CALL_10
0x4001395	          0x4d85ed	                           test r13, r13	       465	convert.c	FUNCTION_15	IF_6	IF_7
0x4001398	     0xf841f020000	                            je 0x40015bd	       465	convert.c	FUNCTION_15	IF_6	IF_7
0x400139e	      0x4863442424	         movsxd rax, dword [rsp + 0x24] 	       465	convert.c	FUNCTION_15	IF_6	IF_7
0x40013a3	          0x4939c4	                            cmp r12, rax	       465	convert.c	FUNCTION_15	IF_6	IF_7
0x40013a6	     0xf8511020000	                           jne 0x40015bd	       465	convert.c	FUNCTION_15	IF_6	IF_7
0x40013ac	          0x4c89e2	                            mov rdx, r12	       466	convert.c	FUNCTION_15	IF_6	IF_7	CALL_11
0x40013af	          0x4c89ee	                            mov rsi, r13	       466	convert.c	FUNCTION_15	IF_6	IF_7	CALL_11
0x40013b2	          0x4889ef	                            mov rdi, rbp	       466	convert.c	FUNCTION_15	IF_6	IF_7	CALL_11
0x40013b5	      0xe800000000	                          call 0x40013ba	       466	convert.c	FUNCTION_15	IF_6	IF_7	CALL_11
0x40013ba	            0x85c0	                           test eax, eax	       465	convert.c	FUNCTION_15	IF_6	IF_7
0x40013bc	     0xf85fb010000	                           jne 0x40015bd	       465	convert.c	FUNCTION_15	IF_6	IF_7
0x40013c2	          0x4c89ef	                            mov rdi, r13	       472	convert.c	FUNCTION_15	IF_6	CALL_14
0x40013c5	      0xe800000000	                          call 0x40013ca	       472	convert.c	FUNCTION_15	IF_6	CALL_14
0x40013ca	    0x660f1f440000	                    nop word [rax + rax]	       472	convert.c	FUNCTION_15	IF_6	CALL_14
0x40013d0	      0x4863542420	         movsxd rdx, dword [rsp + 0x20] 	       475	convert.c	FUNCTION_15	CALL_15
0x40013d5	      0x488b742408	                mov rsi, qword [rsp + 8]	       475	convert.c	FUNCTION_15	CALL_15
0x40013da	          0x4c89ff	                            mov rdi, r15	       475	convert.c	FUNCTION_15	CALL_15
0x40013dd	          0x8d4a01	                      lea ecx, [rdx + 1]	       475	convert.c	FUNCTION_15	CALL_15
0x40013e0	          0x4863c9	                         movsxd rcx, ecx	       475	convert.c	FUNCTION_15	CALL_15
0x40013e3	      0xe800000000	                          call 0x40013e8	       475	convert.c	FUNCTION_15	CALL_15
0x40013e8	      0xb801000000	                              mov eax, 1	       476	convert.c	FUNCTION_15
0x40013ed	      0xe9fcfdffff	                           jmp 0x40011ee	       476	convert.c	FUNCTION_15
0x40013f2	    0x660f1f440000	                    nop word [rax + rax]	       476	convert.c	FUNCTION_15
0x40013f8	          0x4c89e2	                            mov rdx, r12	       277	convert.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x40013fb	          0x4889ee	                            mov rsi, rbp	       277	convert.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x40013fe	          0x4889df	                            mov rdi, rbx	       277	convert.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x4001401	      0xe800000000	                          call 0x4001406	       277	convert.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x4001406	            0x85c0	                           test eax, eax	       277	convert.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x4001408	     0xf858a000000	                           jne 0x4001498	       277	convert.c	FUNCTION_12	IF_1	IF_2	CALL_2
0x400140e	          0x4c89e2	                            mov rdx, r12	       302	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_12
0x4001411	          0x4889ee	                            mov rsi, rbp	       302	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_12
0x4001414	          0x4889df	                            mov rdi, rbx	       302	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_12
0x4001417	      0xe800000000	                          call 0x400141c	       302	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_12
0x400141c	            0x85c0	                           test eax, eax	       302	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_12
0x400141e	     0xf841ffeffff	                            je 0x4001243	       302	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_12
0x4001424	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_75
0x4001429	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_75
0x400142e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_75
0x4001430	      0xe800000000	                          call 0x4001435	        54	gettext.h	FUNCTION_75
0x4001435	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_75
0x400143a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_75
0x400143f	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_75
0x4001441	          0x4889c5	                            mov rbp, rax	        54	gettext.h	FUNCTION_75
0x4001444	      0xe800000000	                          call 0x4001449	        54	gettext.h	FUNCTION_75
0x4001449	          0x4889df	                            mov rdi, rbx	       311	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_15
0x400144c	          0x4989c4	                            mov r12, rax	        54	gettext.h	FUNCTION_75
0x400144f	      0xe800000000	                          call 0x4001454	       311	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_15
0x4001454	          0x4989c7	                            mov r15, rax	       311	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_15
0x4001457	          0x4889c2	                            mov rdx, rax	       311	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_15
0x400145a	      0xb800000000	                              mov eax, 0	       311	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_15
0x400145f	            0xeb18	                           jmp 0x4001479	       311	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_15
0x4001461	     0xf1f80000000	                         nop dword [rax]	       311	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_15
0x4001468	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x400146c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001470	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001473	     0xf8516010000	                           jne 0x400158f	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001479	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x400147c	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x400147e	            0x75e8	                           jne 0x4001468	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4001480	          0x4889d1	                            mov rcx, rdx	       314	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_18
0x4001483	          0x4c89f6	                            mov rsi, r14	       314	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_18
0x4001486	          0x4c89e7	                            mov rdi, r12	       314	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_18
0x4001489	            0x31c0	                            xor eax, eax	       314	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_18
0x400148b	      0xe800000000	                          call 0x4001490	       314	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_18
0x4001490	            0xeb77	                           jmp 0x4001509	       314	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_18
0x4001492	    0x660f1f440000	                    nop word [rax + rax]	       314	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_18
0x4001498	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_75
0x400149d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_75
0x40014a2	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_75
0x40014a4	      0xe800000000	                          call 0x40014a9	        54	gettext.h	FUNCTION_75
0x40014a9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_75
0x40014ae	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_75
0x40014b3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_75
0x40014b5	          0x4889c5	                            mov rbp, rax	        54	gettext.h	FUNCTION_75
0x40014b8	      0xe800000000	                          call 0x40014bd	        54	gettext.h	FUNCTION_75
0x40014bd	          0x4889df	                            mov rdi, rbx	       290	convert.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x40014c0	          0x4989c4	                            mov r12, rax	        54	gettext.h	FUNCTION_75
0x40014c3	      0xe800000000	                          call 0x40014c8	       290	convert.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x40014c8	          0x4989c7	                            mov r15, rax	       290	convert.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x40014cb	          0x4889c7	                            mov rdi, rax	       291	convert.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x40014ce	      0xe800000000	                          call 0x40014d3	       291	convert.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x40014d3	          0x4c89fa	                            mov rdx, r15	       291	convert.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x40014d6	    0x41c64407fe00	             mov byte [r15 + rax - 2], 0	       291	convert.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x40014dc	      0xb800000000	                              mov eax, 0	       291	convert.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x40014e1	            0xeb12	                           jmp 0x40014f5	       291	convert.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x40014e3	       0xf1f440000	                   nop dword [rax + rax]	       291	convert.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x40014e8	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x40014ec	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x40014f0	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_83	DO_1
0x40014f3	            0x753b	                           jne 0x4001530	       488	git-compat-util.h	FUNCTION_83	DO_1
0x40014f5	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x40014f8	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x40014fa	            0x75ec	                           jne 0x40014e8	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x40014fc	          0x4c89f6	                            mov rsi, r14	       294	convert.c	FUNCTION_12	IF_1	IF_2	CALL_9
0x40014ff	          0x4c89e7	                            mov rdi, r12	       294	convert.c	FUNCTION_12	IF_1	IF_2	CALL_9
0x4001502	            0x31c0	                            xor eax, eax	       294	convert.c	FUNCTION_12	IF_1	IF_2	CALL_9
0x4001504	      0xe800000000	                          call 0x4001509	       294	convert.c	FUNCTION_12	IF_1	IF_2	CALL_9
0x4001509	          0x4c89ff	                            mov rdi, r15	       315	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_19
0x400150c	      0xe800000000	                          call 0x4001511	       315	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_19
0x4001511	            0x31c0	                            xor eax, eax	       317	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_20
0x4001513	          0x4585ed	                         test r13d, r13d	       316	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	IF_7
0x4001516	          0x4889da	                            mov rdx, rbx	       317	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_20
0x4001519	          0x4c89f6	                            mov rsi, r14	       317	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_20
0x400151c	          0x4889ef	                            mov rdi, rbp	       317	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_20
0x400151f	     0xf85be000000	                           jne 0x40015e3	       316	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	IF_7
0x4001525	      0xe800000000	                          call 0x400152a	       319	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	ELSE_3
0x400152a	      0xe9bdfcffff	                           jmp 0x40011ec	       319	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	ELSE_3
0x400152f	              0x90	                                     nop	       319	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	ELSE_3
0x4001530	            0x31d2	                            xor edx, edx	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001532	            0xeb0d	                           jmp 0x4001541	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001534	         0xf1f4000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001538	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x400153c	          0x3a42ff	                  cmp al, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_83	DO_1
0x400153f	            0x7547	                           jne 0x4001588	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001541	     0xfb682000000	                   movzx eax, byte [rdx]	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4001548	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x400154a	            0x75ec	                           jne 0x4001538	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x400154c	            0xebae	                           jmp 0x40014fc	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x400154e	            0x6690	                                     nop	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4001550	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_75
0x4001552	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_75
0x4001557	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_75
0x400155c	      0xe800000000	                          call 0x4001561	        54	gettext.h	FUNCTION_75
0x4001561	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_75
0x4001564	            0x31c0	                            xor eax, eax	       426	convert.c	FUNCTION_15	IF_4	CALL_5
0x4001566	          0x4585ed	                         test r13d, r13d	       425	convert.c	FUNCTION_15	IF_4	IF_5
0x4001569	      0xb900000000	                              mov ecx, 0	       426	convert.c	FUNCTION_15	IF_4	CALL_5
0x400156e	          0x4889da	                            mov rdx, rbx	       426	convert.c	FUNCTION_15	IF_4	CALL_5
0x4001571	          0x4c89f6	                            mov rsi, r14	       426	convert.c	FUNCTION_15	IF_4	CALL_5
0x4001574	            0x7568	                           jne 0x40015de	       425	convert.c	FUNCTION_15	IF_4	IF_5
0x4001576	      0xe800000000	                          call 0x400157b	       428	convert.c	FUNCTION_15	IF_4	ELSE_1
0x400157b	            0x31c0	                            xor eax, eax	       429	convert.c	FUNCTION_15	IF_4	ELSE_1
0x400157d	      0xe96cfcffff	                           jmp 0x40011ee	       429	convert.c	FUNCTION_15	IF_4	ELSE_1
0x4001582	    0x660f1f440000	                    nop word [rax + rax]	       429	convert.c	FUNCTION_15	IF_4	ELSE_1
0x4001588	            0x31d2	                            xor edx, edx	       289	convert.c	FUNCTION_12	IF_1	IF_2
0x400158a	      0xe96dffffff	                           jmp 0x40014fc	       289	convert.c	FUNCTION_12	IF_1	IF_2
0x400158f	            0x31d2	                            xor edx, edx	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001591	            0xeb0e	                           jmp 0x40015a1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001593	       0xf1f440000	                   nop dword [rax + rax]	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001598	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x400159c	          0x3a42ff	                  cmp al, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_83	DO_1
0x400159f	            0x7510	                           jne 0x40015b1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x40015a1	     0xfb682000000	                   movzx eax, byte [rdx]	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x40015a8	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x40015aa	            0x75ec	                           jne 0x4001598	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x40015ac	      0xe9cffeffff	                           jmp 0x4001480	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x40015b1	            0x31d2	                            xor edx, edx	       310	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5
0x40015b3	      0xe9c8feffff	                           jmp 0x4001480	       310	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5
0x40015b8	      0xe800000000	                          call 0x40015bd	       477	convert.c	FUNCTION_15
0x40015bd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_75
0x40015c2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_75
0x40015c7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_75
0x40015c9	      0xe800000000	                          call 0x40015ce	        54	gettext.h	FUNCTION_75
0x40015ce	      0xb900000000	                              mov ecx, 0	       469	convert.c	FUNCTION_15	IF_6	IF_7	CALL_13
0x40015d3	          0x4889c7	                            mov rdi, rax	       469	convert.c	FUNCTION_15	IF_6	IF_7	CALL_13
0x40015d6	          0x4889da	                            mov rdx, rbx	       469	convert.c	FUNCTION_15	IF_6	IF_7	CALL_13
0x40015d9	          0x4c89f6	                            mov rsi, r14	       469	convert.c	FUNCTION_15	IF_6	IF_7	CALL_13
0x40015dc	            0x31c0	                            xor eax, eax	       469	convert.c	FUNCTION_15	IF_6	IF_7	CALL_13
0x40015de	      0xe800000000	                          call 0x40015e3	       469	convert.c	FUNCTION_15	IF_6	IF_7	CALL_13
0x40015e3	      0xe800000000	                          call 0x40015e8	       317	convert.c	FUNCTION_12	IF_1	ELSE_2	IF_5	CALL_20
would_convert_to_git_filter_fd	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:IF,2	23
0x4003060	        0x4883ec38	                           sub rsp, 0x38	      1343	convert.c	FUNCTION_36
0x4003064	          0x4889fe	                            mov rsi, rdi	      1343	convert.c	FUNCTION_36
0x4003067	          0x4889e7	                            mov rdi, rsp	      1346	convert.c	FUNCTION_36	CALL_1
0x400306a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1343	convert.c	FUNCTION_36
0x4003073	      0x4889442428	             mov qword [rsp + 0x28], rax	      1343	convert.c	FUNCTION_36
0x4003078	            0x31c0	                            xor eax, eax	      1343	convert.c	FUNCTION_36
0x400307a	      0xe871e5ffff	                  call sym.convert_attrs	      1346	convert.c	FUNCTION_36	CALL_1
0x400307f	        0x488b0424	                    mov rax, qword [rsp]	      1347	convert.c	FUNCTION_36	IF_1
0x4003083	          0x4885c0	                           test rax, rax	      1347	convert.c	FUNCTION_36	IF_1
0x4003086	            0x7428	                            je 0x40030b0	      1347	convert.c	FUNCTION_36	IF_1
0x4003088	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1348	convert.c	FUNCTION_36	IF_1
0x400308b	            0x85c0	                           test eax, eax	      1348	convert.c	FUNCTION_36	IF_1
0x400308d	           0xf95c0	                                setne al	      1348	convert.c	FUNCTION_36	IF_1
0x4003090	           0xfb6c0	                           movzx eax, al	      1348	convert.c	FUNCTION_36	IF_1
0x4003093	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1359	convert.c	FUNCTION_36
0x4003098	    0x644833142528	                xor rdx, qword fs:[0x28]	      1359	convert.c	FUNCTION_36
0x40030a1	            0x7511	                           jne 0x40030b4	      1359	convert.c	FUNCTION_36
0x40030a3	        0x4883c438	                           add rsp, 0x38	      1359	convert.c	FUNCTION_36
0x40030a7	              0xc3	                                     ret	      1359	convert.c	FUNCTION_36
0x40030a8	     0xf1f84000000	                   nop dword [rax + rax]	      1359	convert.c	FUNCTION_36
0x40030b0	            0x31c0	                            xor eax, eax	      1348	convert.c	FUNCTION_36	IF_1
0x40030b2	            0xebdf	                           jmp 0x4003093	      1348	convert.c	FUNCTION_36	IF_1
0x40030b4	      0xe800000000	                          call 0x40030b9	      1359	convert.c	FUNCTION_36
convert_to_working_tree	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0	3
0x4004080	          0x4531c9	                            xor r9d, r9d	      1489	convert.c	FUNCTION_42	CALL_1
0x4004083	          0x4531c0	                            xor r8d, r8d	      1489	convert.c	FUNCTION_42	CALL_1
0x4004086	      0xe9d5deffff	jmp sym.convert_to_working_tree_internal	      1489	convert.c	FUNCTION_42	CALL_1
start_multi_file_filter_fn	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0	6
0x4000990	        0x4c8d4f78	                    lea r9, [rdi + 0x78]	       771	convert.c	FUNCTION_21	CALL_1
0x4000994	    0x41b800000000	                              mov r8d, 0	       771	convert.c	FUNCTION_21	CALL_1
0x400099a	            0x31c9	                            xor ecx, ecx	       771	convert.c	FUNCTION_21	CALL_1
0x400099c	      0xba00000000	                              mov edx, 0	       771	convert.c	FUNCTION_21	CALL_1
0x40009a1	      0xbe00000000	                              mov esi, 0	       771	convert.c	FUNCTION_21	CALL_1
0x40009a6	      0xe900000000	                           jmp 0x40009ab	       771	convert.c	FUNCTION_21	CALL_1
convert_to_working_tree_internal	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,6:IF,5	762
0x4001f60	            0x4157	                                push r15	      1442	convert.c	FUNCTION_40
0x4001f62	            0x4156	                                push r14	      1442	convert.c	FUNCTION_40
0x4001f64	          0x4989f7	                            mov r15, rsi	      1442	convert.c	FUNCTION_40
0x4001f67	            0x4155	                                push r13	      1442	convert.c	FUNCTION_40
0x4001f69	            0x4154	                                push r12	      1442	convert.c	FUNCTION_40
0x4001f6b	          0x4889fe	                            mov rsi, rdi	      1446	convert.c	FUNCTION_40	CALL_1
0x4001f6e	              0x55	                                push rbp	      1442	convert.c	FUNCTION_40
0x4001f6f	              0x53	                                push rbx	      1442	convert.c	FUNCTION_40
0x4001f70	          0x4889cd	                            mov rbp, rcx	      1442	convert.c	FUNCTION_40
0x4001f73	          0x4889d3	                            mov rbx, rdx	      1442	convert.c	FUNCTION_40
0x4001f76	    0x4881ec180100	                          sub rsp, 0x118	      1442	convert.c	FUNCTION_40
0x4001f7d	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      1442	convert.c	FUNCTION_40
0x4001f82	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      1446	convert.c	FUNCTION_40	CALL_1
0x4001f87	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      1442	convert.c	FUNCTION_40
0x4001f8c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1442	convert.c	FUNCTION_40
0x4001f95	    0x488984240801	            mov qword [rsp + 0x108], rax	      1442	convert.c	FUNCTION_40
0x4001f9d	            0x31c0	                            xor eax, eax	      1442	convert.c	FUNCTION_40
0x4001f9f	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      1442	convert.c	FUNCTION_40
0x4001fa4	      0xe847f6ffff	                  call sym.convert_attrs	      1446	convert.c	FUNCTION_40	CALL_1
0x4001fa9	      0x448b642460	           mov r12d, dword [rsp + 0x60] 	      1141	convert.c	FUNCTION_29	IF_1
0x4001fae	          0x4585e4	                         test r12d, r12d	      1141	convert.c	FUNCTION_29	IF_1
0x4001fb1	     0xf8549020000	                           jne 0x4002200	      1141	convert.c	FUNCTION_29	IF_1
0x4001fb7	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1458	convert.c	FUNCTION_40	IF_2
0x4001fbc	          0x4531f6	                          xor r14d, r14d	      1458	convert.c	FUNCTION_40	IF_2
0x4001fbf	          0x4885d2	                           test rdx, rdx	      1458	convert.c	FUNCTION_40	IF_2
0x4001fc2	          0x4889d0	                            mov rax, rdx	      1458	convert.c	FUNCTION_40	IF_2
0x4001fc5	     0xf845c040000	                            je 0x4002427	      1458	convert.c	FUNCTION_40	IF_2
0x4001fcb	      0x48837a1000	               cmp qword [rdx + 0x10], 0	      1458	convert.c	FUNCTION_40	IF_2
0x4001fd0	     0xf84c2080000	                            je 0x4002898	      1458	convert.c	FUNCTION_40	IF_2
0x4001fd6	          0x4885db	                           test rbx, rbx	       599	convert.c	FUNCTION_18	IF_1	CALL_1
0x4001fd9	     0xf8591040000	                           jne 0x4002470	       599	convert.c	FUNCTION_18	IF_1	CALL_1
0x4001fdf	          0x4585f6	                         test r14d, r14d	      1460	convert.c	FUNCTION_40	IF_2	IF_3
0x4001fe2	     0xf8598010000	                           jne 0x4002180	      1460	convert.c	FUNCTION_40	IF_2	IF_3
0x4001fe8	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	      1466	convert.c	FUNCTION_40	CALL_4
0x4001fed	          0x4d85e4	                           test r12, r12	       489	convert.c	FUNCTION_16	IF_1
0x4001ff0	     0xf847e0c0000	                            je 0x4002c74	       489	convert.c	FUNCTION_16	IF_1
0x4001ff6	          0x4d85ff	                           test r15, r15	       489	convert.c	FUNCTION_16	IF_1
0x4001ff9	     0xf84a7010000	                            je 0x40021a6	       489	convert.c	FUNCTION_16	IF_1
0x4001fff	          0x4885db	                           test rbx, rbx	       489	convert.c	FUNCTION_16	IF_1
0x4002002	     0xf859e010000	                           jne 0x40021a6	       489	convert.c	FUNCTION_16	IF_1
0x4002008	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       489	convert.c	FUNCTION_16	IF_1
0x400200d	            0x31db	                            xor ebx, ebx	       489	convert.c	FUNCTION_16	IF_1
0x400200f	          0x4885c0	                           test rax, rax	       980	convert.c	FUNCTION_25	IF_1
0x4002012	            0x742b	                            je 0x400203f	       980	convert.c	FUNCTION_25	IF_1
0x4002014	          0x4885ed	                           test rbp, rbp	       983	convert.c	FUNCTION_25	IF_2
0x4002017	     0xf8403090000	                            je 0x4002920	       983	convert.c	FUNCTION_25	IF_2
0x400201d	        0x4c8b4020	              mov r8, qword [rax + 0x20]	       988	convert.c	FUNCTION_25	ELSE_1	IF_4
0x4002021	          0x4d85c0	                             test r8, r8	       988	convert.c	FUNCTION_25	ELSE_1	IF_4
0x4002024	     0xf8400090000	                            je 0x400292a	       988	convert.c	FUNCTION_25	ELSE_1	IF_4
0x400202a	        0x41803800	                        cmp byte [r8], 0	       993	convert.c	FUNCTION_25	ELSE_2	IF_6
0x400202e	     0xf85f4040000	                           jne 0x4002528	       993	convert.c	FUNCTION_25	ELSE_2	IF_6
0x4002034	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1474	convert.c	FUNCTION_40	IF_5
0x4002037	            0x85d2	                           test edx, edx	      1474	convert.c	FUNCTION_40	IF_5
0x4002039	     0xf85210c0000	                           jne 0x4002c60	      1474	convert.c	FUNCTION_40	IF_5
0x400203f	            0x31c0	                            xor eax, eax	       984	convert.c	FUNCTION_25	IF_2
0x4002041	          0x4409f0	                            or eax, r14d	      1477	convert.c	FUNCTION_40
0x4002044	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      1478	convert.c	FUNCTION_40
0x400204c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1478	convert.c	FUNCTION_40
0x4002055	     0xf85d20b0000	                           jne 0x4002c2d	      1478	convert.c	FUNCTION_40
0x400205b	    0x4881c4180100	                          add rsp, 0x118	      1478	convert.c	FUNCTION_40
0x4002062	              0x5b	                                 pop rbx	      1478	convert.c	FUNCTION_40
0x4002063	              0x5d	                                 pop rbp	      1478	convert.c	FUNCTION_40
0x4002064	            0x415c	                                 pop r12	      1478	convert.c	FUNCTION_40
0x4002066	            0x415d	                                 pop r13	      1478	convert.c	FUNCTION_40
0x4002068	            0x415e	                                 pop r14	      1478	convert.c	FUNCTION_40
0x400206a	            0x415f	                                 pop r15	      1478	convert.c	FUNCTION_40
0x400206c	              0xc3	                                     ret	      1478	convert.c	FUNCTION_40
0x400206d	    0x8b0500000000	            mov eax, dword [0x04002073] 	       163	convert.c	FUNCTION_7	IF_1
0x4002073	          0x83f801	                              cmp eax, 1	       163	convert.c	FUNCTION_7	IF_1
0x4002076	            0x7416	                            je 0x400208e	       163	convert.c	FUNCTION_7	IF_1
0x4002078	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       165	convert.c	FUNCTION_7	ELSE_1	IF_2
0x400207b	     0xf845effffff	                            je 0x4001fdf	       165	convert.c	FUNCTION_7	ELSE_1	IF_2
0x4002081	    0x833d00000000	               cmp dword [0x04002088], 1	       250	convert.c	FUNCTION_11	IF_1	CALL_1
0x4002088	     0xf8551ffffff	                           jne 0x4001fdf	       250	convert.c	FUNCTION_11	IF_1	CALL_1
0x400208e	    0x8b8424a80000	            mov eax, dword [rsp + 0xa8] 	       253	convert.c	FUNCTION_11	IF_2
0x4002095	            0x85c0	                           test eax, eax	       253	convert.c	FUNCTION_11	IF_2
0x4002097	     0xf8442ffffff	                            je 0x4001fdf	       253	convert.c	FUNCTION_11	IF_2
0x400209d	        0x4183ec05	                             sub r12d, 5	       256	convert.c	FUNCTION_11	IF_3
0x40020a1	        0x4183fc02	                             cmp r12d, 2	       256	convert.c	FUNCTION_11	IF_3
0x40020a5	            0x7748	                            ja 0x40020ef	       256	convert.c	FUNCTION_11	IF_3
0x40020a7	    0x448b8c24a400	            mov r9d, dword [rsp + 0xa4] 	       259	convert.c	FUNCTION_11	IF_3	IF_4
0x40020af	          0x4585c9	                           test r9d, r9d	       259	convert.c	FUNCTION_11	IF_3	IF_4
0x40020b2	     0xf8527ffffff	                           jne 0x4001fdf	       259	convert.c	FUNCTION_11	IF_3	IF_4
0x40020b8	    0x448b8424ac00	            mov r8d, dword [rsp + 0xac] 	       259	convert.c	FUNCTION_11	IF_3	IF_4
0x40020c0	          0x4585c0	                           test r8d, r8d	       259	convert.c	FUNCTION_11	IF_3	IF_4
0x40020c3	     0xf8516ffffff	                           jne 0x4001fdf	       259	convert.c	FUNCTION_11	IF_3	IF_4
0x40020c9	    0x8bbc24a00000	            mov edi, dword [rsp + 0xa0] 	        98	convert.c	FUNCTION_2	IF_2
0x40020d0	            0x85ff	                           test edi, edi	        98	convert.c	FUNCTION_2	IF_2
0x40020d2	     0xf8507ffffff	                           jne 0x4001fdf	        98	convert.c	FUNCTION_2	IF_2
0x40020d8	    0x8b9424b00000	            mov edx, dword [rsp + 0xb0] 	       100	convert.c	FUNCTION_2	IF_3
0x40020df	          0xc1ea07	                              shr edx, 7	       100	convert.c	FUNCTION_2	IF_3
0x40020e2	    0x3b9424b40000	            cmp edx, dword [rsp + 0xb4] 	       100	convert.c	FUNCTION_2	IF_3
0x40020e9	     0xf82f0feffff	                            jb 0x4001fdf	       100	convert.c	FUNCTION_2	IF_3
0x40020ef	          0x4531ed	                          xor r13d, r13d	       596	convert.c	FUNCTION_18
0x40020f2	        0x4c3b7d10	            cmp r15, qword [rbp + 0x10] 	       607	convert.c	FUNCTION_18	IF_3
0x40020f6	     0xf84df0a0000	                            je 0x4002bdb	       607	convert.c	FUNCTION_18	IF_3
0x40020fc	        0x488d3418	                    lea rsi, [rax + rbx]	       610	convert.c	FUNCTION_18	CALL_5
0x4002100	          0x4889ef	                            mov rdi, rbp	       610	convert.c	FUNCTION_18	CALL_5
0x4002103	      0xe800000000	                          call 0x4002108	       610	convert.c	FUNCTION_18	CALL_5
0x4002108	            0xeb48	                           jmp 0x4002152	       610	convert.c	FUNCTION_18	CALL_5
0x400210a	    0x660f1f440000	                    nop word [rax + rax]	       610	convert.c	FUNCTION_18	CALL_5
0x4002110	          0x4939c7	                            cmp r15, rax	       615	convert.c	FUNCTION_18	FOR_1	IF_5
0x4002113	            0x730a	                           jae 0x400211f	       615	convert.c	FUNCTION_18	FOR_1	IF_5
0x4002115	        0x8078ff0d	                 cmp byte [rax - 1], 0xd	       615	convert.c	FUNCTION_18	FOR_1	IF_5
0x4002119	     0xf84360a0000	                            je 0x4002b55	       615	convert.c	FUNCTION_18	FOR_1	IF_5
0x400211f	          0x4c89f2	                            mov rdx, r14	       618	convert.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002122	        0x4983c601	                              add r14, 1	       618	convert.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002126	          0x4c89fe	                            mov rsi, r15	       618	convert.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002129	          0x4c29fa	                            sub rdx, r15	       618	convert.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x400212c	          0x4889ef	                            mov rdi, rbp	       618	convert.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x400212f	          0x4d89f4	                            mov r12, r14	       618	convert.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002132	      0xe800000000	                          call 0x4002137	       618	convert.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x4002137	          0x4d29fc	                            sub r12, r15	       618	convert.c	FUNCTION_18	FOR_1	ELSE_1	CALL_8
0x400213a	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_108	CALL_2
0x400213f	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_108	CALL_2
0x4002144	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_108	CALL_2
0x4002147	          0x4d89f7	                            mov r15, r14	       279	strbuf.h	FUNCTION_108	CALL_2
0x400214a	      0xe800000000	                          call 0x400214f	       279	strbuf.h	FUNCTION_108	CALL_2
0x400214f	          0x4c29e3	                            sub rbx, r12	       621	convert.c	FUNCTION_18	FOR_1
0x4002152	          0x4889da	                            mov rdx, rbx	       612	convert.c	FUNCTION_18	FOR_1	CALL_6
0x4002155	      0xbe0a000000	                            mov esi, 0xa	       612	convert.c	FUNCTION_18	FOR_1	CALL_6
0x400215a	          0x4c89ff	                            mov rdi, r15	       612	convert.c	FUNCTION_18	FOR_1	CALL_6
0x400215d	      0xe800000000	                          call 0x4002162	       612	convert.c	FUNCTION_18	FOR_1	CALL_6
0x4002162	          0x4885c0	                           test rax, rax	       613	convert.c	FUNCTION_18	FOR_1	IF_4
0x4002165	          0x4989c6	                            mov r14, rax	       612	convert.c	FUNCTION_18	FOR_1	CALL_6
0x4002168	            0x75a6	                           jne 0x4002110	       613	convert.c	FUNCTION_18	FOR_1	IF_4
0x400216a	          0x4889ef	                            mov rdi, rbp	       624	convert.c	FUNCTION_18	CALL_10
0x400216d	          0x4889da	                            mov rdx, rbx	       624	convert.c	FUNCTION_18	CALL_10
0x4002170	          0x4c89fe	                            mov rsi, r15	       624	convert.c	FUNCTION_18	CALL_10
0x4002173	      0xe800000000	                          call 0x4002178	       624	convert.c	FUNCTION_18	CALL_10
0x4002178	          0x4c89ef	                            mov rdi, r13	       626	convert.c	FUNCTION_18	CALL_11
0x400217b	      0xe800000000	                          call 0x4002180	       626	convert.c	FUNCTION_18	CALL_11
0x4002180	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	      1466	convert.c	FUNCTION_40	CALL_4
0x4002185	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	      1461	convert.c	FUNCTION_40	IF_2	IF_3
0x4002189	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1462	convert.c	FUNCTION_40	IF_2	IF_3
0x400218d	          0x4d85e4	                           test r12, r12	       489	convert.c	FUNCTION_16	IF_1
0x4002190	            0x7458	                            je 0x40021ea	       489	convert.c	FUNCTION_16	IF_1
0x4002192	          0x4d85ff	                           test r15, r15	       489	convert.c	FUNCTION_16	IF_1
0x4002195	            0x7409	                            je 0x40021a0	       489	convert.c	FUNCTION_16	IF_1
0x4002197	          0x4885db	                           test rbx, rbx	       489	convert.c	FUNCTION_16	IF_1
0x400219a	     0xf84e8060000	                            je 0x4002888	       489	convert.c	FUNCTION_16	IF_1
0x40021a0	    0x41be01000000	                             mov r14d, 1	       489	convert.c	FUNCTION_16	IF_1
0x40021a6	    0x4c8d8424a000	                    lea r8, [rsp + 0xa0]	       492	convert.c	FUNCTION_16	CALL_1
0x40021ae	      0xb900000000	                              mov ecx, 0	       492	convert.c	FUNCTION_16	CALL_1
0x40021b3	          0x4c89e2	                            mov rdx, r12	       492	convert.c	FUNCTION_16	CALL_1
0x40021b6	            0x89de	                            mov esi, ebx	       492	convert.c	FUNCTION_16	CALL_1
0x40021b8	          0x4c89ff	                            mov rdi, r15	       492	convert.c	FUNCTION_16	CALL_1
0x40021bb	      0xe800000000	                          call 0x40021c0	       492	convert.c	FUNCTION_16	CALL_1
0x40021c0	          0x4885c0	                           test rax, rax	       494	convert.c	FUNCTION_16	IF_2
0x40021c3	     0xf84ac090000	                            je 0x4002b75	       494	convert.c	FUNCTION_16	IF_2
0x40021c9	    0x48639424a000	         movsxd rdx, dword [rsp + 0xa0] 	       500	convert.c	FUNCTION_16	CALL_2
0x40021d1	          0x4889c6	                            mov rsi, rax	       500	convert.c	FUNCTION_16	CALL_2
0x40021d4	          0x4889ef	                            mov rdi, rbp	       500	convert.c	FUNCTION_16	CALL_2
0x40021d7	          0x8d4a01	                      lea ecx, [rdx + 1]	       500	convert.c	FUNCTION_16	CALL_2
0x40021da	          0x4863c9	                         movsxd rcx, ecx	       500	convert.c	FUNCTION_16	CALL_2
0x40021dd	      0xe800000000	                          call 0x40021e2	       500	convert.c	FUNCTION_16	CALL_2
0x40021e2	        0x488b5d08	                mov rbx, qword [rbp + 8]	       500	convert.c	FUNCTION_16	CALL_2
0x40021e6	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	       500	convert.c	FUNCTION_16	CALL_2
0x40021ea	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       500	convert.c	FUNCTION_16	CALL_2
0x40021ef	          0x4889d0	                            mov rax, rdx	       500	convert.c	FUNCTION_16	CALL_2
0x40021f2	    0x41be01000000	                             mov r14d, 1	       500	convert.c	FUNCTION_16	CALL_2
0x40021f8	      0xe912feffff	                           jmp 0x400200f	       500	convert.c	FUNCTION_16	CALL_2
0x40021fd	           0xf1f00	                         nop dword [rax]	       500	convert.c	FUNCTION_16	CALL_2
0x4002200	          0x4885db	                           test rbx, rbx	      1056	convert.c	FUNCTION_27	WHILE_1
0x4002203	     0xf84aefdffff	                            je 0x4001fb7	      1056	convert.c	FUNCTION_27	WHILE_1
0x4002209	          0x4989dc	                            mov r12, rbx	      1056	convert.c	FUNCTION_27	WHILE_1
0x400220c	          0x4d89fe	                            mov r14, r15	      1056	convert.c	FUNCTION_27	WHILE_1
0x400220f	    0xc74424080000	                  mov dword [rsp + 8], 0	      1056	convert.c	FUNCTION_27	WHILE_1
0x4002217	            0xeb16	                           jmp 0x400222f	      1056	convert.c	FUNCTION_27	WHILE_1
0x4002219	     0xf1f80000000	                         nop dword [rax]	      1056	convert.c	FUNCTION_27	WHILE_1
0x4002220	          0x4d85ed	                           test r13, r13	      1056	convert.c	FUNCTION_27	WHILE_1
0x4002223	     0xf8499000000	                            je 0x40022c2	      1056	convert.c	FUNCTION_27	WHILE_1
0x4002229	          0x4d89ec	                            mov r12, r13	      1056	convert.c	FUNCTION_27	WHILE_1
0x400222c	          0x4d89c6	                             mov r14, r8	      1056	convert.c	FUNCTION_27	WHILE_1
0x400222f	        0x41803e24	                    cmp byte [r14], 0x24	      1059	convert.c	FUNCTION_27	WHILE_1	IF_1
0x4002233	        0x4d8d4601	                       lea r8, [r14 + 1]	      1057	convert.c	FUNCTION_27	WHILE_1
0x4002237	      0x4d8d6c24ff	                      lea r13, [r12 - 1]	      1058	convert.c	FUNCTION_27	WHILE_1
0x400223c	            0x75e2	                           jne 0x4002220	      1059	convert.c	FUNCTION_27	WHILE_1	IF_1
0x400223e	        0x4983fd02	                              cmp r13, 2	      1061	convert.c	FUNCTION_27	WHILE_1	IF_2
0x4002242	            0x767e	                           jbe 0x40022c2	      1061	convert.c	FUNCTION_27	WHILE_1	IF_2
0x4002244	          0x4c89c6	                             mov rsi, r8	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4002247	      0xba02000000	                              mov edx, 2	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x400224c	      0xbf00000000	                              mov edi, 0	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4002251	        0x4c890424	                     mov qword [rsp], r8	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4002255	      0xe800000000	                          call 0x400225a	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x400225a	            0x85c0	                           test eax, eax	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x400225c	        0x4c8b0424	                     mov r8, qword [rsp]	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4002260	            0x75c7	                           jne 0x4002229	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4002262	      0x410fb64603	               movzx eax, byte [r14 + 3]	      1065	convert.c	FUNCTION_27	WHILE_1
0x4002267	        0x4d8d4604	                       lea r8, [r14 + 4]	      1066	convert.c	FUNCTION_27	WHILE_1
0x400226b	      0x4d8d6c24fc	                      lea r13, [r12 - 4]	      1067	convert.c	FUNCTION_27	WHILE_1
0x4002270	            0x3c24	                            cmp al, 0x24	      1068	convert.c	FUNCTION_27	WHILE_1	IF_4
0x4002272	     0xf8418020000	                            je 0x4002490	      1068	convert.c	FUNCTION_27	WHILE_1	IF_4
0x4002278	            0x3c3a	                            cmp al, 0x3a	      1070	convert.c	FUNCTION_27	WHILE_1	IF_5
0x400227a	            0x75a4	                           jne 0x4002220	      1070	convert.c	FUNCTION_27	WHILE_1	IF_5
0x400227c	          0x4d85ed	                           test r13, r13	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x400227f	            0x7441	                            je 0x40022c2	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002281	      0x410fb64604	               movzx eax, byte [r14 + 4]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4002286	        0x4d8d4605	                       lea r8, [r14 + 5]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x400228a	      0x4d8d6c24fb	                      lea r13, [r12 - 5]	      1078	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x400228f	            0x3c24	                            cmp al, 0x24	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4002291	            0x7522	                           jne 0x40022b5	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4002293	      0xe9f8010000	                           jmp 0x4002490	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4002298	     0xf1f84000000	                   nop dword [rax + rax]	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x40022a0	        0x4983c001	                               add r8, 1	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x40022a4	      0x410fb640ff	                movzx eax, byte [r8 - 1]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x40022a9	        0x4983ed01	                              sub r13, 1	      1078	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x40022ad	            0x3c24	                            cmp al, 0x24	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x40022af	     0xf84db010000	                            je 0x4002490	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x40022b5	            0x3c0a	                             cmp al, 0xa	      1083	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_7
0x40022b7	     0xf8463ffffff	                            je 0x4002220	      1083	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_7
0x40022bd	          0x4d85ed	                           test r13, r13	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x40022c0	            0x75de	                           jne 0x40022a0	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x40022c2	      0x448b5c2408	               mov r11d, dword [rsp + 8]	      1145	convert.c	FUNCTION_29	IF_2
0x40022c7	          0x4585db	                         test r11d, r11d	      1145	convert.c	FUNCTION_29	IF_2
0x40022ca	     0xf84e7fcffff	                            je 0x4001fb7	      1145	convert.c	FUNCTION_29	IF_2
0x40022d0	        0x4c3b7d10	            cmp r15, qword [rbp + 0x10] 	      1149	convert.c	FUNCTION_29	IF_3
0x40022d4	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1138	convert.c	FUNCTION_29
0x40022dd	     0xf84b6080000	                            je 0x4002b99	      1149	convert.c	FUNCTION_29	IF_3
0x40022e3	    0x488d8c24d000	                   lea rcx, [rsp + 0xd0]	      1151	convert.c	FUNCTION_29	CALL_3
0x40022eb	          0x4889de	                            mov rsi, rbx	      1151	convert.c	FUNCTION_29	CALL_3
0x40022ee	          0x4c89ff	                            mov rdi, r15	      1151	convert.c	FUNCTION_29	CALL_3
0x40022f1	      0xba00000000	                              mov edx, 0	      1151	convert.c	FUNCTION_29	CALL_3
0x40022f6	      0xe800000000	                          call 0x40022fb	      1151	convert.c	FUNCTION_29	CALL_3
0x40022fb	    0x488b05000000	            mov rax, qword [0x04002302] 	      1153	convert.c	FUNCTION_29	CALL_4
0x4002302	      0x4c63642408	            movsxd r12, dword [rsp + 8] 	      1153	convert.c	FUNCTION_29	CALL_4
0x4002307	          0x4889ef	                            mov rdi, rbp	      1153	convert.c	FUNCTION_29	CALL_4
0x400230a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1153	convert.c	FUNCTION_29	CALL_4
0x400230e	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1153	convert.c	FUNCTION_29	CALL_4
0x4002312	        0x4883c603	                              add rsi, 3	      1153	convert.c	FUNCTION_29	CALL_4
0x4002316	        0x4c0fafe6	                           imul r12, rsi	      1153	convert.c	FUNCTION_29	CALL_4
0x400231a	        0x498d341c	                    lea rsi, [r12 + rbx]	      1153	convert.c	FUNCTION_29	CALL_4
0x400231e	      0xe800000000	                          call 0x4002323	      1153	convert.c	FUNCTION_29	CALL_4
0x4002323	            0xeb0e	                           jmp 0x4002333	      1153	convert.c	FUNCTION_29	CALL_4
0x4002325	           0xf1f00	                         nop dword [rax]	      1153	convert.c	FUNCTION_29	CALL_4
0x4002328	            0x3c3a	                            cmp al, 0x3a	      1171	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7
0x400232a	     0xf8470010000	                            je 0x40024a0	      1171	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7
0x4002330	          0x4d89f7	                            mov r15, r14	      1138	convert.c	FUNCTION_29
0x4002333	          0x4889da	                            mov rdx, rbx	      1156	convert.c	FUNCTION_29	FOR_1	CALL_5
0x4002336	      0xbe24000000	                           mov esi, 0x24	      1156	convert.c	FUNCTION_29	FOR_1	CALL_5
0x400233b	          0x4c89ff	                            mov rdi, r15	      1156	convert.c	FUNCTION_29	FOR_1	CALL_5
0x400233e	      0xe800000000	                          call 0x4002343	      1156	convert.c	FUNCTION_29	FOR_1	CALL_5
0x4002343	          0x4885c0	                           test rax, rax	      1157	convert.c	FUNCTION_29	FOR_1	IF_4
0x4002346	          0x4989c5	                            mov r13, rax	      1156	convert.c	FUNCTION_29	FOR_1	CALL_5
0x4002349	     0xf84a1000000	                            je 0x40023f0	      1157	convert.c	FUNCTION_29	FOR_1	IF_4
0x400234f	        0x4c8d7001	                      lea r14, [rax + 1]	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x4002353	          0x4c89fe	                            mov rsi, r15	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x4002356	          0x4889ef	                            mov rdi, rbp	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x4002359	          0x4d89f4	                            mov r12, r14	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x400235c	        0x4c893424	                    mov qword [rsp], r14	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x4002360	          0x4d29fc	                            sub r12, r15	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x4002363	          0x4c89e2	                            mov rdx, r12	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x4002366	          0x4c29e3	                            sub rbx, r12	      1160	convert.c	FUNCTION_29	FOR_1
0x4002369	      0xe800000000	                          call 0x400236e	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x400236e	        0x4883fb02	                              cmp rbx, 2	      1164	convert.c	FUNCTION_29	FOR_1	IF_5	CALL_7
0x4002372	            0x76bc	                           jbe 0x4002330	      1164	convert.c	FUNCTION_29	FOR_1	IF_5	CALL_7
0x4002374	      0xba02000000	                              mov edx, 2	      1164	convert.c	FUNCTION_29	FOR_1	IF_5	CALL_7
0x4002379	          0x4c89f6	                            mov rsi, r14	      1164	convert.c	FUNCTION_29	FOR_1	IF_5	CALL_7
0x400237c	      0xbf00000000	                              mov edi, 0	      1164	convert.c	FUNCTION_29	FOR_1	IF_5	CALL_7
0x4002381	      0xe800000000	                          call 0x4002386	      1164	convert.c	FUNCTION_29	FOR_1	IF_5	CALL_7
0x4002386	            0x85c0	                           test eax, eax	      1164	convert.c	FUNCTION_29	FOR_1	IF_5	CALL_7
0x4002388	            0x75a6	                           jne 0x4002330	      1164	convert.c	FUNCTION_29	FOR_1	IF_5	CALL_7
0x400238a	      0x410fb64503	               movzx eax, byte [r13 + 3]	      1168	convert.c	FUNCTION_29	FOR_1	IF_6
0x400238f	            0x3c24	                            cmp al, 0x24	      1168	convert.c	FUNCTION_29	FOR_1	IF_6
0x4002391	            0x7595	                           jne 0x4002328	      1168	convert.c	FUNCTION_29	FOR_1	IF_6
0x4002393	        0x4d8d7504	                      lea r14, [r13 + 4]	      1169	convert.c	FUNCTION_29	FOR_1	IF_6
0x4002397	        0x4883eb03	                              sub rbx, 3	      1170	convert.c	FUNCTION_29	FOR_1	IF_6
0x400239b	      0xba04000000	                              mov edx, 4	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023a0	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023a5	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023a8	      0xe800000000	                          call 0x40023ad	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023ad	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1208	convert.c	FUNCTION_29	FOR_1	CALL_13
0x40023b5	      0xe800000000	                          call 0x40023ba	      1208	convert.c	FUNCTION_29	FOR_1	CALL_13
0x40023ba	          0x4989c4	                            mov r12, rax	      1208	convert.c	FUNCTION_29	FOR_1	CALL_13
0x40023bd	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023c0	      0xe800000000	                          call 0x40023c5	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023c5	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023c8	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023cb	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023ce	      0xe800000000	                          call 0x40023d3	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023d3	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023d8	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023dd	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023e0	      0xe800000000	                          call 0x40023e5	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023e5	      0xe946ffffff	                           jmp 0x4002330	       279	strbuf.h	FUNCTION_108	CALL_2
0x40023ea	          0x4d89f7	                            mov r15, r14	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x40023ed	           0xf1f00	                         nop dword [rax]	      1159	convert.c	FUNCTION_29	FOR_1	CALL_6
0x40023f0	          0x4889da	                            mov rdx, rbx	      1211	convert.c	FUNCTION_29	CALL_15
0x40023f3	          0x4c89fe	                            mov rsi, r15	      1211	convert.c	FUNCTION_29	CALL_15
0x40023f6	          0x4889ef	                            mov rdi, rbp	      1211	convert.c	FUNCTION_29	CALL_15
0x40023f9	      0xe800000000	                          call 0x40023fe	      1211	convert.c	FUNCTION_29	CALL_15
0x40023fe	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1213	convert.c	FUNCTION_29	CALL_16
0x4002403	    0x41be01000000	                             mov r14d, 1	      1214	convert.c	FUNCTION_29
0x4002409	      0xe800000000	                          call 0x400240e	      1213	convert.c	FUNCTION_29	CALL_16
0x400240e	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1458	convert.c	FUNCTION_40	IF_2
0x4002413	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	      1450	convert.c	FUNCTION_40	IF_1
0x4002417	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1451	convert.c	FUNCTION_40	IF_1
0x400241b	          0x4885d2	                           test rdx, rdx	      1458	convert.c	FUNCTION_40	IF_2
0x400241e	          0x4889d0	                            mov rax, rdx	      1458	convert.c	FUNCTION_40	IF_2
0x4002421	     0xf85a4fbffff	                           jne 0x4001fcb	      1458	convert.c	FUNCTION_40	IF_2
0x4002427	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	      1458	convert.c	FUNCTION_40	IF_2
0x400242c	          0x4585d2	                         test r10d, r10d	      1458	convert.c	FUNCTION_40	IF_2
0x400242f	     0xf84a1fbffff	                            je 0x4001fd6	      1458	convert.c	FUNCTION_40	IF_2
0x4002435	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	      1466	convert.c	FUNCTION_40	CALL_4
0x400243a	          0x4d85e4	                           test r12, r12	       489	convert.c	FUNCTION_16	IF_1
0x400243d	            0x7414	                            je 0x4002453	       489	convert.c	FUNCTION_16	IF_1
0x400243f	          0x4d85ff	                           test r15, r15	       489	convert.c	FUNCTION_16	IF_1
0x4002442	     0xf845efdffff	                            je 0x40021a6	       489	convert.c	FUNCTION_16	IF_1
0x4002448	          0x4885db	                           test rbx, rbx	       489	convert.c	FUNCTION_16	IF_1
0x400244b	     0xf8555fdffff	                           jne 0x40021a6	       489	convert.c	FUNCTION_16	IF_1
0x4002451	            0x31db	                            xor ebx, ebx	       489	convert.c	FUNCTION_16	IF_1
0x4002453	          0x4585f6	                         test r14d, r14d	      1467	convert.c	FUNCTION_40	IF_4
0x4002456	     0xf84b3fbffff	                            je 0x400200f	      1467	convert.c	FUNCTION_40	IF_4
0x400245c	        0x488b5d08	                mov rbx, qword [rbp + 8]	      1467	convert.c	FUNCTION_40	IF_4
0x4002460	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	      1467	convert.c	FUNCTION_40	IF_4
0x4002464	      0xe986fdffff	                           jmp 0x40021ef	      1467	convert.c	FUNCTION_40	IF_4
0x4002469	     0xf1f80000000	                         nop dword [rax]	      1467	convert.c	FUNCTION_40	IF_4
0x4002470	      0x448b64245c	           mov r12d, dword [rsp + 0x5c] 	      1459	convert.c	FUNCTION_40	IF_2	CALL_3
0x4002475	        0x4183fc07	                             cmp r12d, 7	       176	convert.c	FUNCTION_8	SWITCH_1
0x4002479	     0xf8703060000	                            ja 0x4002a82	       176	convert.c	FUNCTION_8	SWITCH_1
0x400247f	          0x4589e3	                          mov r11d, r12d	       176	convert.c	FUNCTION_8	SWITCH_1
0x4002482	    0x42ff24dd0000	                       jmp qword [r11*8]	       176	convert.c	FUNCTION_8	SWITCH_1
0x400248a	    0x660f1f440000	                    nop word [rax + rax]	       176	convert.c	FUNCTION_8	SWITCH_1
0x4002490	      0x8344240801	                  add dword [rsp + 8], 1	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4002495	      0xe986fdffff	                           jmp 0x4002220	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x400249a	    0x660f1f440000	                    nop word [rax + rax]	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x40024a0	        0x4d8d5504	                      lea r10, [r13 + 4]	      1179	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_8
0x40024a4	        0x488d53fd	                      lea rdx, [rbx - 3]	      1179	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_8
0x40024a8	      0xbe24000000	                           mov esi, 0x24	      1179	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_8
0x40024ad	          0x4c89d7	                            mov rdi, r10	      1179	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_8
0x40024b0	      0x4c89542408	                mov qword [rsp + 8], r10	      1179	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_8
0x40024b5	      0xe800000000	                          call 0x40024ba	      1179	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_8
0x40024ba	          0x4885c0	                           test rax, rax	      1180	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_8
0x40024bd	          0x4989c7	                            mov r15, rax	      1179	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_8
0x40024c0	     0xf8424ffffff	                            je 0x40023ea	      1180	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_8
0x40024c6	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024cb	          0x4c29f0	                            sub rax, r14	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024ce	      0xbe0a000000	                            mov esi, 0xa	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024d3	        0x488d50fd	                      lea rdx, [rax - 3]	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024d7	          0x4989c4	                            mov r12, rax	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024da	          0x4c89d7	                            mov rdi, r10	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024dd	      0xe800000000	                          call 0x40024e2	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024e2	          0x4885c0	                           test rax, rax	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024e5	     0xf8545feffff	                           jne 0x4002330	      1185	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_9	CALL_9
0x40024eb	          0x4c89e2	                            mov rdx, r12	      1190	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_10
0x40024ee	        0x498d7d05	                      lea rdi, [r13 + 5]	      1190	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_10
0x40024f2	      0xbe20000000	                           mov esi, 0x20	      1190	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_10
0x40024f7	        0x4883ea04	                              sub rdx, 4	      1190	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_10
0x40024fb	      0xe800000000	                          call 0x4002500	      1190	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	CALL_10
0x4002500	          0x4885c0	                           test rax, rax	      1191	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_10
0x4002503	            0x740d	                            je 0x4002512	      1191	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_10
0x4002505	        0x498d57ff	                      lea rdx, [r15 - 1]	      1191	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_10
0x4002509	          0x4839d0	                            cmp rax, rdx	      1191	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_10
0x400250c	     0xf821efeffff	                            jb 0x4002330	      1191	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7	IF_10
0x4002512	        0x4d8d7701	                      lea r14, [r15 + 1]	      1199	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7
0x4002516	          0x4c89f0	                            mov rax, r14	      1199	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7
0x4002519	        0x482b0424	                    sub rax, qword [rsp]	      1199	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7
0x400251d	          0x4829c3	                            sub rbx, rax	      1199	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7
0x4002520	      0xe976feffff	                           jmp 0x400239b	      1199	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7
0x4002525	           0xf1f00	                         nop dword [rax]	      1199	convert.c	FUNCTION_29	FOR_1	ELSE_1	IF_7
0x4002528	    0x8b3500000000	            mov esi, dword [0x0400252e] 	       812	convert.c	FUNCTION_23	IF_1
0x400252e	    0x48c744247000	               mov qword [rsp + 0x70], 0	       808	convert.c	FUNCTION_23
0x4002537	    0x48c744247800	               mov qword [rsp + 0x78], 0	       808	convert.c	FUNCTION_23
0x4002540	    0x48c784248000	               mov qword [rsp + 0x80], 0	       808	convert.c	FUNCTION_23
0x400254c	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       809	convert.c	FUNCTION_23
0x4002558	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       809	convert.c	FUNCTION_23
0x4002564	            0x85f6	                           test esi, esi	       812	convert.c	FUNCTION_23	IF_1
0x4002566	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       809	convert.c	FUNCTION_23
0x4002572	     0xf8460020000	                            je 0x40027d8	       812	convert.c	FUNCTION_23	IF_1
0x4002578	          0x4c89c6	                             mov rsi, r8	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x400257b	      0xbf00000000	                              mov edi, 0	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4002580	        0x4c890424	                     mov qword [rsp], r8	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4002584	      0xe800000000	                          call 0x4002589	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4002589	            0x31ff	                            xor edi, edi	       820	convert.c	FUNCTION_23	CALL_3
0x400258b	          0x4989c4	                            mov r12, rax	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x400258e	      0xe800000000	                          call 0x4002593	       820	convert.c	FUNCTION_23	CALL_3
0x4002593	          0x4d85e4	                           test r12, r12	       822	convert.c	FUNCTION_23	IF_2
0x4002596	        0x4c8b0424	                     mov r8, qword [rsp]	       822	convert.c	FUNCTION_23	IF_2
0x400259a	     0xf8464020000	                            je 0x4002804	       822	convert.c	FUNCTION_23	IF_2
0x40025a0	    0x41f644247802	               test byte [r12 + 0x78], 2	       833	convert.c	FUNCTION_23	IF_4
0x40025a6	        0x4c890424	                     mov qword [rsp], r8	       833	convert.c	FUNCTION_23	IF_4
0x40025aa	     0xf840e020000	                            je 0x40027be	       833	convert.c	FUNCTION_23	IF_4
0x40025b0	      0xbe01000000	                              mov esi, 1	       843	convert.c	FUNCTION_23	CALL_8
0x40025b5	      0xbf0d000000	                            mov edi, 0xd	       843	convert.c	FUNCTION_23	CALL_8
0x40025ba	      0xe800000000	                          call 0x40025bf	       843	convert.c	FUNCTION_23	CALL_8
0x40025bf	      0x418b7c2444	            mov edi, dword [r12 + 0x44] 	       846	convert.c	FUNCTION_23	CALL_12
0x40025c4	            0x31c0	                            xor eax, eax	       846	convert.c	FUNCTION_23	CALL_12
0x40025c6	      0xba00000000	                              mov edx, 0	       846	convert.c	FUNCTION_23	CALL_12
0x40025cb	      0xbe00000000	                              mov esi, 0	       846	convert.c	FUNCTION_23	CALL_12
0x40025d0	      0xe800000000	                          call 0x40025d5	       846	convert.c	FUNCTION_23	CALL_12
0x40025d5	            0x85c0	                           test eax, eax	       847	convert.c	FUNCTION_23	IF_7
0x40025d7	        0x4c8b0424	                     mov r8, qword [rsp]	       847	convert.c	FUNCTION_23	IF_7
0x40025db	     0xf85cf020000	                           jne 0x40028b0	       847	convert.c	FUNCTION_23	IF_7
0x40025e1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       850	convert.c	FUNCTION_23	CALL_14
0x40025e6	        0x4c890424	                     mov qword [rsp], r8	       850	convert.c	FUNCTION_23	CALL_14
0x40025ea	      0xe800000000	                          call 0x40025ef	       850	convert.c	FUNCTION_23	CALL_14
0x40025ef	    0x483de2ff0000	                         cmp rax, 0xffe2	       851	convert.c	FUNCTION_23	IF_8
0x40025f5	        0x4c8b0424	                     mov r8, qword [rsp]	       851	convert.c	FUNCTION_23	IF_8
0x40025f9	     0xf87e1040000	                            ja 0x4002ae0	       851	convert.c	FUNCTION_23	IF_8
0x40025ff	      0x418b7c2444	            mov edi, dword [r12 + 0x44] 	       856	convert.c	FUNCTION_23	CALL_15
0x4002604	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       856	convert.c	FUNCTION_23	CALL_15
0x4002609	            0x31c0	                            xor eax, eax	       856	convert.c	FUNCTION_23	CALL_15
0x400260b	      0xbe00000000	                              mov esi, 0	       856	convert.c	FUNCTION_23	CALL_15
0x4002610	        0x4c890424	                     mov qword [rsp], r8	       856	convert.c	FUNCTION_23	CALL_15
0x4002614	      0xe800000000	                          call 0x4002619	       856	convert.c	FUNCTION_23	CALL_15
0x4002619	            0x85c0	                           test eax, eax	       857	convert.c	FUNCTION_23	IF_9
0x400261b	        0x4c8b0424	                     mov r8, qword [rsp]	       857	convert.c	FUNCTION_23	IF_9
0x400261f	     0xf858b020000	                           jne 0x40028b0	       857	convert.c	FUNCTION_23	IF_9
0x4002625	    0x41f644247804	               test byte [r12 + 0x78], 4	       860	convert.c	FUNCTION_23	IF_10
0x400262b	     0xf84c3050000	                            je 0x4002bf4	       860	convert.c	FUNCTION_23	IF_10
0x4002631	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       860	convert.c	FUNCTION_23	IF_10
0x4002636	          0x4885c0	                           test rax, rax	       860	convert.c	FUNCTION_23	IF_10
0x4002639	     0xf84b5050000	                            je 0x4002bf4	       860	convert.c	FUNCTION_23	IF_10
0x400263f	          0x833801	                      cmp dword [rax], 1	       861	convert.c	FUNCTION_23	IF_10
0x4002642	    0xc70424000000	                      mov dword [rsp], 0	       805	convert.c	FUNCTION_23
0x4002649	     0xf84b1050000	                            je 0x4002c00	       861	convert.c	FUNCTION_23	IF_10
0x400264f	      0x418b7c2444	            mov edi, dword [r12 + 0x44] 	       868	convert.c	FUNCTION_23	CALL_17
0x4002654	      0x4c89442408	                 mov qword [rsp + 8], r8	       868	convert.c	FUNCTION_23	CALL_17
0x4002659	      0xe800000000	                          call 0x400265e	       868	convert.c	FUNCTION_23	CALL_17
0x400265e	            0x85c0	                           test eax, eax	       869	convert.c	FUNCTION_23	IF_12
0x4002660	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       869	convert.c	FUNCTION_23	IF_12
0x4002665	     0xf8545020000	                           jne 0x40028b0	       869	convert.c	FUNCTION_23	IF_12
0x400266b	      0x418b542444	            mov edx, dword [r12 + 0x44] 	       875	convert.c	FUNCTION_23	CALL_19
0x4002670	          0x4889de	                            mov rsi, rbx	       875	convert.c	FUNCTION_23	CALL_19
0x4002673	          0x4c89ff	                            mov rdi, r15	       875	convert.c	FUNCTION_23	CALL_19
0x4002676	      0x4c89442408	                 mov qword [rsp + 8], r8	       875	convert.c	FUNCTION_23	CALL_19
0x400267b	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	       875	convert.c	FUNCTION_23	CALL_19
0x4002680	      0xe800000000	                          call 0x4002685	       875	convert.c	FUNCTION_23	CALL_19
0x4002685	            0x85c0	                           test eax, eax	       876	convert.c	FUNCTION_23	IF_14
0x4002687	     0xf8528020000	                           jne 0x40028b5	       876	convert.c	FUNCTION_23	IF_14
0x400268d	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	       879	convert.c	FUNCTION_23	CALL_20
0x4002695	      0x418b7c2448	            mov edi, dword [r12 + 0x48] 	       879	convert.c	FUNCTION_23	CALL_20
0x400269a	          0x4c89ee	                            mov rsi, r13	       879	convert.c	FUNCTION_23	CALL_20
0x400269d	      0xe800000000	                          call 0x40026a2	       879	convert.c	FUNCTION_23	CALL_20
0x40026a2	            0x85c0	                           test eax, eax	       880	convert.c	FUNCTION_23	IF_15
0x40026a4	     0xf850b020000	                           jne 0x40028b5	       880	convert.c	FUNCTION_23	IF_15
0x40026aa	          0x8b0c24	                    mov ecx, dword [rsp]	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026ad	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026b5	            0x85c9	                           test ecx, ecx	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026b7	            0x741a	                            je 0x40026d3	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026b9	      0xbf00000000	                              mov edi, 0	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026be	      0xb908000000	                              mov ecx, 8	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026c3	          0x4889c6	                            mov rsi, rax	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026c6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026c8	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026cd	     0xf845f050000	                            je 0x4002c32	       883	convert.c	FUNCTION_23	IF_16	CALL_21
0x40026d3	          0x4889c6	                            mov rsi, rax	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x40026d6	      0xbf00000000	                              mov edi, 0	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x40026db	      0xb908000000	                              mov ecx, 8	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x40026e0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x40026e2	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x40026e7	           0xf97c2	                                 seta dl	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x40026ea	           0xf92c0	                                 setb al	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x40026ed	            0x38c2	                              cmp dl, al	       889	convert.c	FUNCTION_23	ELSE_5	IF_17
0x40026ef	     0xf85c0010000	                           jne 0x40028b5	       889	convert.c	FUNCTION_23	ELSE_5	IF_17
0x40026f5	      0x418b7c2448	            mov edi, dword [r12 + 0x48] 	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x40026fa	          0x4889de	                            mov rsi, rbx	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x40026fd	      0xe800000000	                          call 0x4002702	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4002702	          0x4889c1	                            mov rcx, rax	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4002705	        0x48c1e93f	                           shr rcx, 0x3f	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4002709	          0x4885c0	                           test rax, rax	       893	convert.c	FUNCTION_23	ELSE_5	IF_18
0x400270c	          0x4989cf	                            mov r15, rcx	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x400270f	            0x782a	                            js 0x400273b	       893	convert.c	FUNCTION_23	ELSE_5	IF_18
0x4002711	      0x418b7c2448	            mov edi, dword [r12 + 0x48] 	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x4002716	          0x4c89ee	                            mov rsi, r13	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x4002719	      0xe800000000	                          call 0x400271e	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x400271e	            0x85c0	                           test eax, eax	       897	convert.c	FUNCTION_23	ELSE_5	IF_19
0x4002720	     0xf858f010000	                           jne 0x40028b5	       897	convert.c	FUNCTION_23	ELSE_5	IF_19
0x4002726	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x400272e	      0xbe00000000	                              mov esi, 0	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4002733	      0xe800000000	                          call 0x4002738	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4002738	          0x4189c7	                           mov r15d, eax	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x400273b	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x4002740	      0xe800000000	                          call 0x4002745	       904	convert.c	FUNCTION_23	CALL_28
0x4002745	          0x4585ff	                         test r15d, r15d	       906	convert.c	FUNCTION_23	IF_20
0x4002748	     0xf8571010000	                           jne 0x40028bf	       906	convert.c	FUNCTION_23	IF_20
0x400274e	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	        53	string3.h	FUNCTION_61	CALL_3
0x4002753	        0x488b4d00	                    mov rcx, qword [rbp]	        53	string3.h	FUNCTION_61	CALL_3
0x4002757	    0x41bf01000000	                             mov r15d, 1	        53	string3.h	FUNCTION_61	CALL_3
0x400275d	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_61	CALL_3
0x4002761	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        53	string3.h	FUNCTION_61	CALL_3
0x4002765	        0x48897500	                    mov qword [rbp], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x4002769	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	        53	string3.h	FUNCTION_61	CALL_3
0x400276e	    0x48898c24f000	             mov qword [rsp + 0xf0], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x4002776	    0x48899424f800	             mov qword [rsp + 0xf8], rdx	        53	string3.h	FUNCTION_61	CALL_3
0x400277e	    0x488984240001	            mov qword [rsp + 0x100], rax	        53	string3.h	FUNCTION_61	CALL_3
0x4002786	      0x48894c2470	             mov qword [rsp + 0x70], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x400278b	        0x48897508	                mov qword [rbp + 8], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x400278f	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	        53	string3.h	FUNCTION_61	CALL_3
0x4002797	      0x4889542478	             mov qword [rsp + 0x78], rdx	        53	string3.h	FUNCTION_61	CALL_3
0x400279c	    0x488984248000	             mov qword [rsp + 0x80], rax	        53	string3.h	FUNCTION_61	CALL_3
0x40027a4	        0x48897510	            mov qword [rbp + 0x10], rsi 	        53	string3.h	FUNCTION_61	CALL_3
0x40027a8	          0x4889df	                            mov rdi, rbx	       910	convert.c	FUNCTION_23	CALL_31
0x40027ab	      0xe800000000	                          call 0x40027b0	       910	convert.c	FUNCTION_23	CALL_31
0x40027b0	          0x4585ff	                         test r15d, r15d	      1474	convert.c	FUNCTION_40	IF_5
0x40027b3	      0xb801000000	                              mov eax, 1	      1474	convert.c	FUNCTION_40	IF_5
0x40027b8	     0xf8583f8ffff	                           jne 0x4002041	      1474	convert.c	FUNCTION_40	IF_5
0x40027be	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1474	convert.c	FUNCTION_40	IF_5
0x40027c3	          0x4885c0	                           test rax, rax	      1474	convert.c	FUNCTION_40	IF_5
0x40027c6	     0xf8568f8ffff	                           jne 0x4002034	      1474	convert.c	FUNCTION_40	IF_5
0x40027cc	      0xe96ef8ffff	                           jmp 0x400203f	      1474	convert.c	FUNCTION_40	IF_5
0x40027d1	     0xf1f80000000	                         nop dword [rax]	      1474	convert.c	FUNCTION_40	IF_5
0x40027d8	            0x31c9	                            xor ecx, ecx	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x40027da	            0x31d2	                            xor edx, edx	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x40027dc	      0xbe00000000	                              mov esi, 0	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x40027e1	      0xbf00000000	                              mov edi, 0	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x40027e6	        0x4c890424	                     mov qword [rsp], r8	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x40027ea	    0xc70500000000	               mov dword [0x040027f4], 1	       813	convert.c	FUNCTION_23	IF_1
0x40027f4	      0xe800000000	                          call 0x40027f9	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x40027f9	            0x31ff	                            xor edi, edi	       820	convert.c	FUNCTION_23	CALL_3
0x40027fb	      0xe800000000	                          call 0x4002800	       820	convert.c	FUNCTION_23	CALL_3
0x4002800	        0x4c8b0424	                     mov r8, qword [rsp]	       820	convert.c	FUNCTION_23	CALL_3
0x4002804	      0xbf80000000	                           mov edi, 0x80	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x4002809	        0x4c890424	                     mov qword [rsp], r8	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x400280d	      0xe800000000	                          call 0x4002812	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x4002812	        0x4c8b0424	                     mov r8, qword [rsp]	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4002816	    0xc74078000000	               mov dword [rax + 0x78], 0	       824	convert.c	FUNCTION_23	IF_2
0x400281d	      0xb900000000	                              mov ecx, 0	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4002822	          0x4889c6	                            mov rsi, rax	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4002825	      0xbf00000000	                              mov edi, 0	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x400282a	          0x4989c4	                            mov r12, rax	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x400282d	          0x4c89c2	                             mov rdx, r8	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4002830	      0xe800000000	                          call 0x4002835	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4002835	            0x85c0	                           test eax, eax	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4002837	        0x4c8b0424	                     mov r8, qword [rsp]	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x400283b	     0xf845ffdffff	                            je 0x40025a0	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x4002841	          0x4c89e7	                            mov rdi, r12	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x4002844	      0xe800000000	                          call 0x4002849	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x4002849	      0xe970ffffff	                           jmp 0x40027be	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x400284e	            0x6690	                                     nop	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x4002850	    0x8b0500000000	            mov eax, dword [0x04002856] 	       163	convert.c	FUNCTION_7	IF_1
0x4002856	          0x83f801	                              cmp eax, 1	       163	convert.c	FUNCTION_7	IF_1
0x4002859	     0xf8566020000	                           jne 0x4002ac5	       163	convert.c	FUNCTION_7	IF_1
0x400285f	              0x90	                                     nop	       163	convert.c	FUNCTION_7	IF_1
0x4002860	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	       602	convert.c	FUNCTION_18	CALL_2
0x4002868	          0x4889de	                            mov rsi, rbx	       602	convert.c	FUNCTION_18	CALL_2
0x400286b	          0x4c89ff	                            mov rdi, r15	       602	convert.c	FUNCTION_18	CALL_2
0x400286e	      0xe8cddbffff	                   call sym.gather_stats	       602	convert.c	FUNCTION_18	CALL_2
0x4002873	        0x4183fc07	                             cmp r12d, 7	       176	convert.c	FUNCTION_8	SWITCH_1
0x4002877	     0xf8734020000	                            ja 0x4002ab1	       176	convert.c	FUNCTION_8	SWITCH_1
0x400287d	    0x42ff24dd0000	                       jmp qword [r11*8]	       176	convert.c	FUNCTION_8	SWITCH_1
0x4002885	           0xf1f00	                         nop dword [rax]	       176	convert.c	FUNCTION_8	SWITCH_1
0x4002888	            0x31db	                            xor ebx, ebx	       176	convert.c	FUNCTION_8	SWITCH_1
0x400288a	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       176	convert.c	FUNCTION_8	SWITCH_1
0x400288f	      0xe95bf9ffff	                           jmp 0x40021ef	       176	convert.c	FUNCTION_8	SWITCH_1
0x4002894	         0xf1f4000	                         nop dword [rax]	       176	convert.c	FUNCTION_8	SWITCH_1
0x4002898	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      1458	convert.c	FUNCTION_40	IF_2
0x400289d	     0xf8533f7ffff	                           jne 0x4001fd6	      1458	convert.c	FUNCTION_40	IF_2
0x40028a3	      0xe97ffbffff	                           jmp 0x4002427	      1458	convert.c	FUNCTION_40	IF_2
0x40028a8	     0xf1f84000000	                   nop dword [rax + rax]	      1458	convert.c	FUNCTION_40	IF_2
0x40028b0	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	      1458	convert.c	FUNCTION_40	IF_2
0x40028b5	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x40028ba	      0xe800000000	                          call 0x40028bf	       904	convert.c	FUNCTION_23	CALL_28
0x40028bf	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       904	convert.c	FUNCTION_23	CALL_28
0x40028c7	      0xbf00000000	                              mov edi, 0	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028cc	      0xb906000000	                              mov ecx, 6	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028d1	          0x4889d6	                            mov rsi, rdx	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028d4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028d6	        0x410f97c7	                               seta r15b	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028da	           0xf92c0	                                 setb al	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028dd	          0x4129c7	                           sub r15d, eax	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028e0	        0x450fbeff	                        movsx r15d, r15b	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028e4	          0x4585ff	                         test r15d, r15d	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028e7	     0xf84bbfeffff	                            je 0x40027a8	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x40028ed	      0xbf00000000	                              mov edi, 0	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x40028f2	      0xb906000000	                              mov ecx, 6	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x40028f7	          0x4889d6	                            mov rsi, rdx	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x40028fa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x40028fc	        0x410f97c7	                               seta r15b	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4002900	           0xf92c0	                                 setb al	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4002903	          0x4129c7	                           sub r15d, eax	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4002906	        0x450fbeff	                        movsx r15d, r15b	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x400290a	          0x4585ff	                         test r15d, r15d	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x400290d	     0xf859a020000	                           jne 0x4002bad	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4002913	    0x4183642478fd	      and dword [r12 + 0x78], 0xfffffffd	       787	convert.c	FUNCTION_22	ELSE_1	IF_2
0x4002919	      0xe98afeffff	                           jmp 0x40027a8	       787	convert.c	FUNCTION_22	ELSE_1	IF_2
0x400291e	            0x6690	                                     nop	       787	convert.c	FUNCTION_22	ELSE_1	IF_2
0x4002920	      0xb801000000	                              mov eax, 1	       984	convert.c	FUNCTION_25	IF_2
0x4002925	      0xe917f7ffff	                           jmp 0x4002041	       984	convert.c	FUNCTION_25	IF_2
0x400292a	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	       988	convert.c	FUNCTION_25	ELSE_1	IF_4
0x400292e	          0x4d85e4	                           test r12, r12	       988	convert.c	FUNCTION_25	ELSE_1	IF_4
0x4002931	     0xf84fdf6ffff	                            je 0x4002034	       988	convert.c	FUNCTION_25	ELSE_1	IF_4
0x4002937	      0x41803c2400	                       cmp byte [r12], 0	       991	convert.c	FUNCTION_25	IF_5
0x400293c	     0xf84f2f6ffff	                            je 0x4002034	       991	convert.c	FUNCTION_25	IF_5
0x4002942	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	        90	string3.h	FUNCTION_64	CALL_6
0x400294a	          0x4c89c0	                             mov rax, r8	        90	string3.h	FUNCTION_64	CALL_6
0x400294d	      0xb906000000	                              mov ecx, 6	        90	string3.h	FUNCTION_64	CALL_6
0x4002952	    0x48c744243000	               mov qword [rsp + 0x30], 0	       714	convert.c	FUNCTION_20
0x400295b	    0x48c744243800	               mov qword [rsp + 0x38], 0	       714	convert.c	FUNCTION_20
0x4002964	          0x4c89ef	                            mov rdi, r13	        90	string3.h	FUNCTION_64	CALL_6
0x4002967	    0x48c744244000	               mov qword [rsp + 0x40], 0	       714	convert.c	FUNCTION_20
0x4002970	      0x4c897c2470	             mov qword [rsp + 0x70], r15	       722	convert.c	FUNCTION_20
0x4002975	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_64	CALL_6
0x4002978	      0x488d442470	                   lea rax, [rsp + 0x70]	       720	convert.c	FUNCTION_20
0x400297d	            0x31ff	                            xor edi, edi	       728	convert.c	FUNCTION_20	CALL_2
0x400297f	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       719	convert.c	FUNCTION_20
0x400298b	    0xc78424b40000	     mov dword [rsp + 0xb4], 0xffffffff 	       721	convert.c	FUNCTION_20
0x4002996	      0x48895c2478	             mov qword [rsp + 0x78], rbx	       723	convert.c	FUNCTION_20
0x400299b	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       720	convert.c	FUNCTION_20
0x40029a3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       726	convert.c	FUNCTION_20
0x40029a8	    0xc78424800000	     mov dword [rsp + 0x80], 0xffffffff 	       724	convert.c	FUNCTION_20
0x40029b3	    0x4c89a4248800	             mov qword [rsp + 0x88], r12	       725	convert.c	FUNCTION_20
0x40029bb	    0x488984249000	             mov qword [rsp + 0x90], rax	       726	convert.c	FUNCTION_20
0x40029c3	      0xe800000000	                          call 0x40029c8	       728	convert.c	FUNCTION_20	CALL_2
0x40029c8	          0x4c89ef	                            mov rdi, r13	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40029cb	      0xe800000000	                          call 0x40029d0	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40029d0	            0x85c0	                           test eax, eax	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40029d2	     0xf85e6fdffff	                           jne 0x40027be	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40029d8	    0x8bb424b40000	            mov esi, dword [rsp + 0xb4] 	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x40029df	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x40029e4	          0x4889da	                            mov rdx, rbx	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x40029e7	            0x31db	                            xor ebx, ebx	       713	convert.c	FUNCTION_20
0x40029e9	    0x41bf01000000	                             mov r15d, 1	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x40029ef	      0xe800000000	                          call 0x40029f4	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x40029f4	          0x4885c0	                           test rax, rax	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x40029f7	     0xf883c010000	                            js 0x4002b39	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x40029fd	    0x8bbc24b40000	            mov edi, dword [rsp + 0xb4] 	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x4002a04	      0xe800000000	                          call 0x4002a09	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x4002a09	            0x85c0	                           test eax, eax	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x4002a0b	     0xf85ef000000	                           jne 0x4002b00	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x4002a11	          0x4c89ef	                            mov rdi, r13	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002a14	      0xe800000000	                          call 0x4002a19	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002a19	            0x85c0	                           test eax, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002a1b	     0xf8501010000	                           jne 0x4002b22	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002a21	            0x85db	                           test ebx, ebx	       742	convert.c	FUNCTION_20	IF_5
0x4002a23	            0x754e	                           jne 0x4002a73	       742	convert.c	FUNCTION_20	IF_5
0x4002a25	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_61	CALL_3
0x4002a2a	        0x488b4d00	                    mov rcx, qword [rbp]	        53	string3.h	FUNCTION_61	CALL_3
0x4002a2e	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_61	CALL_3
0x4002a32	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        53	string3.h	FUNCTION_61	CALL_3
0x4002a36	        0x48897500	                    mov qword [rbp], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x4002a3a	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_61	CALL_3
0x4002a3f	    0x48898c24f000	             mov qword [rsp + 0xf0], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x4002a47	    0x48899424f800	             mov qword [rsp + 0xf8], rdx	        53	string3.h	FUNCTION_61	CALL_3
0x4002a4f	    0x488984240001	            mov qword [rsp + 0x100], rax	        53	string3.h	FUNCTION_61	CALL_3
0x4002a57	      0x48894c2430	             mov qword [rsp + 0x30], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x4002a5c	        0x48897508	                mov qword [rbp + 8], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x4002a60	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_61	CALL_3
0x4002a65	      0x4889542438	             mov qword [rsp + 0x38], rdx	        53	string3.h	FUNCTION_61	CALL_3
0x4002a6a	      0x4889442440	             mov qword [rsp + 0x40], rax	        53	string3.h	FUNCTION_61	CALL_3
0x4002a6f	        0x48897510	            mov qword [rbp + 0x10], rsi 	        53	string3.h	FUNCTION_61	CALL_3
0x4002a73	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       745	convert.c	FUNCTION_20	CALL_8
0x4002a78	      0xe800000000	                          call 0x4002a7d	       745	convert.c	FUNCTION_20	CALL_8
0x4002a7d	      0xe92efdffff	                           jmp 0x40027b0	       745	convert.c	FUNCTION_20	CALL_8
0x4002a82	            0x31c0	                            xor eax, eax	       193	convert.c	FUNCTION_8	CALL_2
0x4002a84	          0x4489e6	                           mov esi, r12d	       193	convert.c	FUNCTION_8	CALL_2
0x4002a87	      0xbf00000000	                              mov edi, 0	       193	convert.c	FUNCTION_8	CALL_2
0x4002a8c	      0xe800000000	                          call 0x4002a91	       193	convert.c	FUNCTION_8	CALL_2
0x4002a91	    0x833d00000000	               cmp dword [0x04002a98], 1	       599	convert.c	FUNCTION_18	IF_1	CALL_1
0x4002a98	     0xf8541f5ffff	                           jne 0x4001fdf	       599	convert.c	FUNCTION_18	IF_1	CALL_1
0x4002a9e	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	       602	convert.c	FUNCTION_18	CALL_2
0x4002aa6	          0x4889de	                            mov rsi, rbx	       602	convert.c	FUNCTION_18	CALL_2
0x4002aa9	          0x4c89ff	                            mov rdi, r15	       602	convert.c	FUNCTION_18	CALL_2
0x4002aac	      0xe88fd9ffff	                   call sym.gather_stats	       602	convert.c	FUNCTION_18	CALL_2
0x4002ab1	          0x4489e6	                           mov esi, r12d	       193	convert.c	FUNCTION_8	CALL_2
0x4002ab4	      0xbf00000000	                              mov edi, 0	       193	convert.c	FUNCTION_8	CALL_2
0x4002ab9	            0x31c0	                            xor eax, eax	       193	convert.c	FUNCTION_8	CALL_2
0x4002abb	      0xe800000000	                          call 0x4002ac0	       193	convert.c	FUNCTION_8	CALL_2
0x4002ac0	      0xe9bcf5ffff	                           jmp 0x4002081	       193	convert.c	FUNCTION_8	CALL_2
0x4002ac5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       165	convert.c	FUNCTION_7	ELSE_1	IF_2
0x4002ac8	     0xf8411f5ffff	                            je 0x4001fdf	       165	convert.c	FUNCTION_7	ELSE_1	IF_2
0x4002ace	    0x833d00000000	               cmp dword [0x04002ad5], 1	       167	convert.c	FUNCTION_7	IF_3
0x4002ad5	     0xf8504f5ffff	                           jne 0x4001fdf	       167	convert.c	FUNCTION_7	IF_3
0x4002adb	      0xe980fdffff	                           jmp 0x4002860	       167	convert.c	FUNCTION_7	IF_3
0x4002ae0	      0xbf00000000	                              mov edi, 0	       852	convert.c	FUNCTION_23	IF_8
0x4002ae5	            0x31c0	                            xor eax, eax	       852	convert.c	FUNCTION_23	IF_8
0x4002ae7	      0x488d5c2470	                   lea rbx, [rsp + 0x70]	       852	convert.c	FUNCTION_23	IF_8
0x4002aec	      0xe800000000	                          call 0x4002af1	       852	convert.c	FUNCTION_23	IF_8
0x4002af1	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x4002af6	      0xe800000000	                          call 0x4002afb	       904	convert.c	FUNCTION_23	CALL_28
0x4002afb	      0xe9bffdffff	                           jmp 0x40028bf	       904	convert.c	FUNCTION_23	CALL_28
0x4002b00	          0x4c89e6	                            mov rsi, r12	       736	convert.c	FUNCTION_20	IF_3
0x4002b03	      0xbf00000000	                              mov edi, 0	       736	convert.c	FUNCTION_20	IF_3
0x4002b08	            0x31c0	                            xor eax, eax	       736	convert.c	FUNCTION_20	IF_3
0x4002b0a	      0xe800000000	                          call 0x4002b0f	       736	convert.c	FUNCTION_20	IF_3
0x4002b0f	          0x4c89ef	                            mov rdi, r13	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002b12	      0xe800000000	                          call 0x4002b17	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002b17	            0x85c0	                           test eax, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002b19	          0x4189c7	                           mov r15d, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002b1c	     0xf8451ffffff	                            je 0x4002a73	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4002b22	          0x4c89e6	                            mov rsi, r12	       739	convert.c	FUNCTION_20	IF_4
0x4002b25	      0xbf00000000	                              mov edi, 0	       739	convert.c	FUNCTION_20	IF_4
0x4002b2a	            0x31c0	                            xor eax, eax	       739	convert.c	FUNCTION_20	IF_4
0x4002b2c	      0xe800000000	                          call 0x4002b31	       739	convert.c	FUNCTION_20	IF_4
0x4002b31	          0x4531ff	                          xor r15d, r15d	       739	convert.c	FUNCTION_20	IF_4
0x4002b34	      0xe93affffff	                           jmp 0x4002a73	       739	convert.c	FUNCTION_20	IF_4
0x4002b39	          0x4c89e6	                            mov rsi, r12	       733	convert.c	FUNCTION_20	IF_2
0x4002b3c	      0xbf00000000	                              mov edi, 0	       733	convert.c	FUNCTION_20	IF_2
0x4002b41	            0x31c0	                            xor eax, eax	       733	convert.c	FUNCTION_20	IF_2
0x4002b43	      0xe800000000	                          call 0x4002b48	       733	convert.c	FUNCTION_20	IF_2
0x4002b48	          0x4531ff	                          xor r15d, r15d	       733	convert.c	FUNCTION_20	IF_2
0x4002b4b	      0xbbffffffff	                     mov ebx, 0xffffffff	       733	convert.c	FUNCTION_20	IF_2
0x4002b50	      0xe9a8feffff	                           jmp 0x40029fd	       733	convert.c	FUNCTION_20	IF_2
0x4002b55	        0x4983c601	                              add r14, 1	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b59	          0x4c89fe	                            mov rsi, r15	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b5c	          0x4889ef	                            mov rdi, rbp	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b5f	          0x4d89f4	                            mov r12, r14	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b62	          0x4d29fc	                            sub r12, r15	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b65	          0x4d89f7	                            mov r15, r14	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b68	          0x4c89e2	                            mov rdx, r12	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b6b	      0xe800000000	                          call 0x4002b70	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b70	      0xe9daf5ffff	                           jmp 0x400214f	       616	convert.c	FUNCTION_18	FOR_1	IF_5	CALL_7
0x4002b75	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       495	convert.c	FUNCTION_16	IF_2
0x4002b7a	      0xba00000000	                              mov edx, 0	       495	convert.c	FUNCTION_16	IF_2
0x4002b7f	          0x4c89e1	                            mov rcx, r12	       495	convert.c	FUNCTION_16	IF_2
0x4002b82	      0xbf00000000	                              mov edi, 0	       495	convert.c	FUNCTION_16	IF_2
0x4002b87	      0xe800000000	                          call 0x4002b8c	       495	convert.c	FUNCTION_16	IF_2
0x4002b8c	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       495	convert.c	FUNCTION_16	IF_2
0x4002b91	          0x4889d0	                            mov rax, rdx	       495	convert.c	FUNCTION_16	IF_2
0x4002b94	      0xe9baf8ffff	                           jmp 0x4002453	       495	convert.c	FUNCTION_16	IF_2
0x4002b99	            0x31f6	                            xor esi, esi	      1150	convert.c	FUNCTION_29	CALL_2
0x4002b9b	          0x4889ef	                            mov rdi, rbp	      1150	convert.c	FUNCTION_29	CALL_2
0x4002b9e	      0xe800000000	                          call 0x4002ba3	      1150	convert.c	FUNCTION_29	CALL_2
0x4002ba3	      0x4889442428	             mov qword [rsp + 0x28], rax	      1150	convert.c	FUNCTION_29	CALL_2
0x4002ba8	      0xe936f7ffff	                           jmp 0x40022e3	      1150	convert.c	FUNCTION_29	CALL_2
0x4002bad	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	       793	convert.c	FUNCTION_22	ELSE_2
0x4002bb2	      0xbf00000000	                              mov edi, 0	       793	convert.c	FUNCTION_22	ELSE_2
0x4002bb7	            0x31c0	                            xor eax, eax	       793	convert.c	FUNCTION_22	ELSE_2
0x4002bb9	          0x4531ff	                          xor r15d, r15d	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4002bbc	      0xe800000000	                          call 0x4002bc1	       793	convert.c	FUNCTION_22	ELSE_2
0x4002bc1	          0x4c89e6	                            mov rsi, r12	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x4002bc4	      0xbf00000000	                              mov edi, 0	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x4002bc9	      0xe800000000	                          call 0x4002bce	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x4002bce	          0x4c89e7	                            mov rdi, r12	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4002bd1	      0xe800000000	                          call 0x4002bd6	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4002bd6	      0xe9cdfbffff	                           jmp 0x40027a8	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4002bdb	            0x31f6	                            xor esi, esi	       608	convert.c	FUNCTION_18	CALL_4
0x4002bdd	          0x4889ef	                            mov rdi, rbp	       608	convert.c	FUNCTION_18	CALL_4
0x4002be0	      0xe800000000	                          call 0x4002be5	       608	convert.c	FUNCTION_18	CALL_4
0x4002be5	          0x4989c5	                            mov r13, rax	       608	convert.c	FUNCTION_18	CALL_4
0x4002be8	    0x8b8424a80000	            mov eax, dword [rsp + 0xa8] 	       608	convert.c	FUNCTION_18	CALL_4
0x4002bef	      0xe908f5ffff	                           jmp 0x40020fc	       608	convert.c	FUNCTION_18	CALL_4
0x4002bf4	    0xc70424000000	                      mov dword [rsp], 0	       805	convert.c	FUNCTION_23
0x4002bfb	      0xe94ffaffff	                           jmp 0x400264f	       805	convert.c	FUNCTION_23
0x4002c00	      0x418b7c2444	            mov edi, dword [r12 + 0x44] 	       863	convert.c	FUNCTION_23	IF_10	CALL_16
0x4002c05	            0x31c0	                            xor eax, eax	       863	convert.c	FUNCTION_23	IF_10	CALL_16
0x4002c07	      0xbe00000000	                              mov esi, 0	       863	convert.c	FUNCTION_23	IF_10	CALL_16
0x4002c0c	        0x4c890424	                     mov qword [rsp], r8	       863	convert.c	FUNCTION_23	IF_10	CALL_16
0x4002c10	      0xe800000000	                          call 0x4002c15	       863	convert.c	FUNCTION_23	IF_10	CALL_16
0x4002c15	            0x85c0	                           test eax, eax	       864	convert.c	FUNCTION_23	IF_10	IF_11
0x4002c17	        0x4c8b0424	                     mov r8, qword [rsp]	       864	convert.c	FUNCTION_23	IF_10	IF_11
0x4002c1b	     0xf858ffcffff	                           jne 0x40028b0	       864	convert.c	FUNCTION_23	IF_10	IF_11
0x4002c21	    0xc70424010000	                      mov dword [rsp], 1	       862	convert.c	FUNCTION_23	IF_10
0x4002c28	      0xe922faffff	                           jmp 0x400264f	       862	convert.c	FUNCTION_23	IF_10
0x4002c2d	      0xe800000000	                          call 0x4002c32	      1478	convert.c	FUNCTION_40
0x4002c32	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       884	convert.c	FUNCTION_23	IF_16	CALL_22
0x4002c37	          0x4c89c6	                             mov rsi, r8	       884	convert.c	FUNCTION_23	IF_16	CALL_22
0x4002c3a	        0x498d7f08	                      lea rdi, [r15 + 8]	       884	convert.c	FUNCTION_23	IF_16	CALL_22
0x4002c3e	      0xe800000000	                          call 0x4002c43	       884	convert.c	FUNCTION_23	IF_16	CALL_22
0x4002c43	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       885	convert.c	FUNCTION_23	IF_16	CALL_23
0x4002c48	        0x498d7f28	                   lea rdi, [r15 + 0x28]	       885	convert.c	FUNCTION_23	IF_16	CALL_23
0x4002c4c	      0xe800000000	                          call 0x4002c51	       885	convert.c	FUNCTION_23	IF_16	CALL_23
0x4002c51	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x4002c56	      0xe800000000	                          call 0x4002c5b	       904	convert.c	FUNCTION_23	CALL_28
0x4002c5b	      0xe9eefaffff	                           jmp 0x400274e	       904	convert.c	FUNCTION_23	CALL_28
0x4002c60	          0x488b10	                    mov rdx, qword [rax]	      1475	convert.c	FUNCTION_40	CALL_6
0x4002c63	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1475	convert.c	FUNCTION_40	CALL_6
0x4002c68	      0xbf00000000	                              mov edi, 0	      1475	convert.c	FUNCTION_40	CALL_6
0x4002c6d	            0x31c0	                            xor eax, eax	      1475	convert.c	FUNCTION_40	CALL_6
0x4002c6f	      0xe800000000	                          call 0x4002c74	      1475	convert.c	FUNCTION_40	CALL_6
0x4002c74	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1475	convert.c	FUNCTION_40	CALL_6
0x4002c79	      0xe991f3ffff	                           jmp 0x400200f	      1475	convert.c	FUNCTION_40	CALL_6
get_convert_attr_ascii	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,1:ELSE,0:CALL,1:IF,0	19
0x40030c0	        0x4883ec38	                           sub rsp, 0x38	      1362	convert.c	FUNCTION_37
0x40030c4	          0x4889fe	                            mov rsi, rdi	      1362	convert.c	FUNCTION_37
0x40030c7	          0x4889e7	                            mov rdi, rsp	      1365	convert.c	FUNCTION_37	CALL_1
0x40030ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      1362	convert.c	FUNCTION_37
0x40030d3	      0x4889442428	             mov qword [rsp + 0x28], rax	      1362	convert.c	FUNCTION_37
0x40030d8	            0x31c0	                            xor eax, eax	      1362	convert.c	FUNCTION_37
0x40030da	      0xe811e5ffff	                  call sym.convert_attrs	      1365	convert.c	FUNCTION_37	CALL_1
0x40030df	        0x8b442408	                mov eax, dword [rsp + 8]	      1365	convert.c	FUNCTION_37	CALL_1
0x40030e3	          0x8d50ff	                      lea edx, [rax - 1]	      1365	convert.c	FUNCTION_37	CALL_1
0x40030e6	      0xb800000000	                              mov eax, 0	      1365	convert.c	FUNCTION_37	CALL_1
0x40030eb	          0x83fa06	                              cmp edx, 6	      1365	convert.c	FUNCTION_37	CALL_1
0x40030ee	            0x7708	                            ja 0x40030f8	      1365	convert.c	FUNCTION_37	CALL_1
0x40030f0	    0x488b04d50000	                  mov rax, qword [rdx*8]	      1365	convert.c	FUNCTION_37	CALL_1
0x40030f8	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1385	convert.c	FUNCTION_37
0x40030fd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1385	convert.c	FUNCTION_37
0x4003106	            0x7505	                           jne 0x400310d	      1385	convert.c	FUNCTION_37
0x4003108	        0x4883c438	                           add rsp, 0x38	      1385	convert.c	FUNCTION_37
0x400310c	              0xc3	                                     ret	      1385	convert.c	FUNCTION_37
0x400310d	      0xe800000000	                          call 0x4003112	      1385	convert.c	FUNCTION_37
lf_to_crlf_free_fn	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0	1
0x4000400	      0xe900000000	                           jmp 0x4000405	      1653	convert.c	FUNCTION_48	CALL_1
lf_to_crlf_filter_fn	DO,0:WHILE,0:functions,0:FOR,1:SWITCH,0:ELSE,1:CALL,0:IF,9	106
0x4000050	        0xf6470801	                  test byte [rdi + 8], 1	      1584	convert.c	FUNCTION_47	IF_1
0x4000054	              0x55	                                push rbp	      1575	convert.c	FUNCTION_47
0x4000055	              0x53	                                push rbx	      1575	convert.c	FUNCTION_47
0x4000056	     0xf84d4000000	                            je 0x4000130	      1584	convert.c	FUNCTION_47	IF_1
0x400005c	         0xfb64709	               movzx eax, byte [rdi + 9]	      1584	convert.c	FUNCTION_47	IF_1
0x4000060	            0x3c0d	                             cmp al, 0xd	      1584	convert.c	FUNCTION_47	IF_1
0x4000062	     0xf8508010000	                           jne 0x4000170	      1584	convert.c	FUNCTION_47	IF_1
0x4000068	          0x4885f6	                           test rsi, rsi	      1584	convert.c	FUNCTION_47	IF_1
0x400006b	     0xf84ff000000	                            je 0x4000170	      1584	convert.c	FUNCTION_47	IF_1
0x4000071	          0x488b2a	                    mov rbp, qword [rdx]	      1595	convert.c	FUNCTION_47
0x4000074	            0x31c0	                            xor eax, eax	      1576	convert.c	FUNCTION_47
0x4000076	        0x806708fe	                and byte [rdi + 8], 0xfe	      1602	convert.c	FUNCTION_47	IF_3	IF_4
0x400007a	    0x41bb01000000	                             mov r11d, 1	      1602	convert.c	FUNCTION_47	IF_3	IF_4
0x4000080	      0xbb01000000	                              mov ebx, 1	      1601	convert.c	FUNCTION_47	IF_3	IF_4
0x4000085	          0x4531c9	                            xor r9d, r9d	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x4000088	          0x4885ed	                           test rbp, rbp	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x400008b	          0x4d8b10	                     mov r10, qword [r8]	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x400008e	            0x7474	                            je 0x4000104	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x4000090	          0x4939c2	                            cmp r10, rax	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x4000093	            0x7731	                            ja 0x40000c6	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x4000095	            0xeb6d	                           jmp 0x4000104	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x4000097	    0x660f1f840000	                    nop word [rax + rax]	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000a0	        0x4180fb0d	                           cmp r11b, 0xd	      1631	convert.c	FUNCTION_47	IF_3	FOR_1	IF_8
0x40000a4	      0xbb01000000	                              mov ebx, 1	      1632	convert.c	FUNCTION_47	IF_3	FOR_1	IF_8
0x40000a9	            0x740d	                            je 0x40000b8	      1631	convert.c	FUNCTION_47	IF_3	FOR_1	IF_8
0x40000ab	        0x44881c01	              mov byte [rcx + rax], r11b	      1637	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000af	          0x4d8b10	                     mov r10, qword [r8]	      1637	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000b2	        0x4883c001	                              add rax, 1	      1637	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000b6	            0x31db	                            xor ebx, ebx	      1636	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000b8	        0x4983c101	                               add r9, 1	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000bc	          0x4939e9	                             cmp r9, rbp	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000bf	            0x733c	                           jae 0x40000fd	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000c1	          0x4c39d0	                            cmp rax, r10	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000c4	            0x7337	                           jae 0x40000fd	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000c6	      0x460fb61c0e	             movzx r11d, byte [rsi + r9]	      1606	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000cb	        0x4180fb0a	                           cmp r11b, 0xa	      1608	convert.c	FUNCTION_47	IF_3	FOR_1	IF_5
0x40000cf	     0xf84bb000000	                            je 0x4000190	      1608	convert.c	FUNCTION_47	IF_3	FOR_1	IF_5
0x40000d5	            0x85db	                           test ebx, ebx	      1610	convert.c	FUNCTION_47	IF_3	FOR_1	ELSE_1	IF_6
0x40000d7	            0x740b	                            je 0x40000e4	      1610	convert.c	FUNCTION_47	IF_3	FOR_1	ELSE_1	IF_6
0x40000d9	        0xc604010d	               mov byte [rcx + rax], 0xd	      1616	convert.c	FUNCTION_47	IF_3	FOR_1	ELSE_1	IF_6
0x40000dd	          0x4d8b10	                     mov r10, qword [r8]	      1616	convert.c	FUNCTION_47	IF_3	FOR_1	ELSE_1	IF_6
0x40000e0	        0x4883c001	                              add rax, 1	      1616	convert.c	FUNCTION_47	IF_3	FOR_1	ELSE_1	IF_6
0x40000e4	          0x4c39d0	                            cmp rax, r10	      1625	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40000e7	            0x72b7	                            jb 0x40000a0	      1625	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40000e9	        0x804f0801	                    or byte [rdi + 8], 1	      1626	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40000ed	        0x44885f09	                mov byte [rdi + 9], r11b	      1627	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40000f1	          0x4d8b10	                     mov r10, qword [r8]	      1627	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40000f4	        0x4983c101	                               add r9, 1	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000f8	          0x4939e9	                             cmp r9, rbp	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000fb	            0x72c4	                            jb 0x40000c1	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x40000fd	          0x4189db	                           mov r11d, ebx	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x4000100	        0x4183e301	                             and r11d, 1	      1605	convert.c	FUNCTION_47	IF_3	FOR_1
0x4000104	          0x4929c2	                            sub r10, rax	      1640	convert.c	FUNCTION_47	IF_3
0x4000107	          0x4d8910	                     mov qword [r8], r10	      1640	convert.c	FUNCTION_47	IF_3
0x400010a	          0x4c290a	                     sub qword [rdx], r9	      1641	convert.c	FUNCTION_47	IF_3
0x400010d	         0xfb64708	               movzx eax, byte [rdi + 8]	      1643	convert.c	FUNCTION_47	IF_3	IF_9
0x4000111	            0xa801	                              test al, 1	      1643	convert.c	FUNCTION_47	IF_3	IF_9
0x4000113	            0x750f	                           jne 0x4000124	      1643	convert.c	FUNCTION_47	IF_3	IF_9
0x4000115	          0x4584db	                         test r11b, r11b	      1643	convert.c	FUNCTION_47	IF_3	IF_9
0x4000118	            0x740a	                            je 0x4000124	      1643	convert.c	FUNCTION_47	IF_3	IF_9
0x400011a	          0x83c801	                               or eax, 1	      1644	convert.c	FUNCTION_47	IF_3	IF_9
0x400011d	        0xc647090d	                 mov byte [rdi + 9], 0xd	      1645	convert.c	FUNCTION_47	IF_3	IF_9
0x4000121	          0x884708	                  mov byte [rdi + 8], al	      1644	convert.c	FUNCTION_47	IF_3	IF_9
0x4000124	            0x31c0	                            xor eax, eax	      1649	convert.c	FUNCTION_47
0x4000126	              0x5b	                                 pop rbx	      1649	convert.c	FUNCTION_47
0x4000127	              0x5d	                                 pop rbp	      1649	convert.c	FUNCTION_47
0x4000128	              0xc3	                                     ret	      1649	convert.c	FUNCTION_47
0x4000129	     0xf1f80000000	                         nop dword [rax]	      1649	convert.c	FUNCTION_47
0x4000130	            0x31c0	                            xor eax, eax	      1576	convert.c	FUNCTION_47
0x4000132	          0x4885f6	                           test rsi, rsi	      1590	convert.c	FUNCTION_47	IF_2
0x4000135	            0x7449	                            je 0x4000180	      1590	convert.c	FUNCTION_47	IF_2
0x4000137	          0x488b2a	                    mov rbp, qword [rdx]	      1595	convert.c	FUNCTION_47
0x400013a	          0x4885ed	                           test rbp, rbp	      1596	convert.c	FUNCTION_47	IF_3
0x400013d	            0x7419	                            je 0x4000158	      1596	convert.c	FUNCTION_47	IF_3
0x400013f	        0xf6470801	                  test byte [rdi + 8], 1	      1600	convert.c	FUNCTION_47	IF_3	IF_4
0x4000143	     0xf852dffffff	                           jne 0x4000076	      1600	convert.c	FUNCTION_47	IF_3	IF_4
0x4000149	          0x4531db	                          xor r11d, r11d	      1600	convert.c	FUNCTION_47	IF_3	IF_4
0x400014c	            0x31db	                            xor ebx, ebx	      1598	convert.c	FUNCTION_47	IF_3
0x400014e	      0xe932ffffff	                           jmp 0x4000085	      1598	convert.c	FUNCTION_47	IF_3
0x4000153	       0xf1f440000	                   nop dword [rax + rax]	      1598	convert.c	FUNCTION_47	IF_3
0x4000158	        0xf6470801	                  test byte [rdi + 8], 1	      1596	convert.c	FUNCTION_47	IF_3
0x400015c	     0xf8514ffffff	                           jne 0x4000076	      1596	convert.c	FUNCTION_47	IF_3
0x4000162	            0x31c0	                            xor eax, eax	      1649	convert.c	FUNCTION_47
0x4000164	              0x5b	                                 pop rbx	      1649	convert.c	FUNCTION_47
0x4000165	              0x5d	                                 pop rbp	      1649	convert.c	FUNCTION_47
0x4000166	              0xc3	                                     ret	      1649	convert.c	FUNCTION_47
0x4000167	    0x660f1f840000	                    nop word [rax + rax]	      1649	convert.c	FUNCTION_47
0x4000170	            0x8801	                      mov byte [rcx], al	      1585	convert.c	FUNCTION_47	IF_1
0x4000172	        0x806708fe	                and byte [rdi + 8], 0xfe	      1586	convert.c	FUNCTION_47	IF_1
0x4000176	          0x4885f6	                           test rsi, rsi	      1590	convert.c	FUNCTION_47	IF_2
0x4000179	      0xb801000000	                              mov eax, 1	      1585	convert.c	FUNCTION_47	IF_1
0x400017e	            0x75b7	                           jne 0x4000137	      1590	convert.c	FUNCTION_47	IF_2
0x4000180	          0x492900	                     sub qword [r8], rax	      1591	convert.c	FUNCTION_47	IF_2
0x4000183	            0x31c0	                            xor eax, eax	      1649	convert.c	FUNCTION_47
0x4000185	              0x5b	                                 pop rbx	      1649	convert.c	FUNCTION_47
0x4000186	              0x5d	                                 pop rbp	      1649	convert.c	FUNCTION_47
0x4000187	              0xc3	                                     ret	      1649	convert.c	FUNCTION_47
0x4000188	     0xf1f84000000	                   nop dword [rax + rax]	      1649	convert.c	FUNCTION_47
0x4000190	        0xc604010d	               mov byte [rcx + rax], 0xd	      1609	convert.c	FUNCTION_47	IF_3	FOR_1	IF_5
0x4000194	        0x4883c001	                              add rax, 1	      1625	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x4000198	          0x493b00	                     cmp rax, qword [r8]	      1625	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x400019b	     0xf820affffff	                            jb 0x40000ab	      1625	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40001a1	        0x804f0801	                    or byte [rdi + 8], 1	      1626	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40001a5	        0x44885f09	                mov byte [rdi + 9], r11b	      1627	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40001a9	          0x4d8b10	                     mov r10, qword [r8]	      1627	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
0x40001ac	      0xe943ffffff	                           jmp 0x40000f4	      1627	convert.c	FUNCTION_47	IF_3	FOR_1	IF_7
async_convert_to_working_tree	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,0	3
0x4004070	          0x4d89c1	                              mov r9, r8	      1484	convert.c	FUNCTION_41	CALL_1
0x4004073	          0x4531c0	                            xor r8d, r8d	      1484	convert.c	FUNCTION_41	CALL_1
0x4004076	      0xe9e5deffff	jmp sym.convert_to_working_tree_internal	      1484	convert.c	FUNCTION_41	CALL_1
read_convert_config	DO,0:WHILE,0:functions,0:FOR,1:SWITCH,0:ELSE,0:CALL,12:IF,7	116
0x4000540	            0x4157	                                push r15	      1001	convert.c	FUNCTION_26
0x4000542	            0x4156	                                push r14	      1001	convert.c	FUNCTION_26
0x4000544	          0x4989f7	                            mov r15, rsi	      1001	convert.c	FUNCTION_26
0x4000547	            0x4155	                                push r13	      1001	convert.c	FUNCTION_26
0x4000549	            0x4154	                                push r12	      1001	convert.c	FUNCTION_26
0x400054b	      0xbe00000000	                              mov esi, 0	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x4000550	              0x55	                                push rbp	      1001	convert.c	FUNCTION_26
0x4000551	              0x53	                                push rbx	      1001	convert.c	FUNCTION_26
0x4000552	          0x4989fe	                            mov r14, rdi	      1001	convert.c	FUNCTION_26
0x4000555	        0x4883ec28	                           sub rsp, 0x28	      1001	convert.c	FUNCTION_26
0x4000559	      0x4c8d442408	                       lea r8, [rsp + 8]	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x400055e	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x4000563	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x4000568	    0x64488b042528	                mov rax, qword fs:[0x28]	      1001	convert.c	FUNCTION_26
0x4000571	      0x4889442418	             mov qword [rsp + 0x18], rax	      1001	convert.c	FUNCTION_26
0x4000576	            0x31c0	                            xor eax, eax	      1001	convert.c	FUNCTION_26
0x4000578	      0xe800000000	                          call 0x400057d	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x400057d	            0x85c0	                           test eax, eax	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x400057f	     0xf88e2000000	                            js 0x4000667	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x4000585	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x400058a	          0x4d85ed	                           test r13, r13	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x400058d	     0xf84d4000000	                            je 0x4000667	      1010	convert.c	FUNCTION_26	IF_1	CALL_1
0x4000593	    0x488b1d000000	            mov rbx, qword [0x0400059a] 	      1012	convert.c	FUNCTION_26	FOR_1
0x400059a	          0x4885db	                           test rbx, rbx	      1012	convert.c	FUNCTION_26	FOR_1
0x400059d	            0x742f	                            je 0x40005ce	      1012	convert.c	FUNCTION_26	FOR_1
0x400059f	      0x4c63642404	            movsxd r12, dword [rsp + 4] 	      1012	convert.c	FUNCTION_26	FOR_1
0x40005a4	         0xf1f4000	                         nop dword [rax]	      1012	convert.c	FUNCTION_26	FOR_1
0x40005a8	          0x488b2b	                    mov rbp, qword [rbx]	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005ab	          0x4c89e2	                            mov rdx, r12	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005ae	          0x4c89ee	                            mov rsi, r13	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005b1	          0x4889ef	                            mov rdi, rbp	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005b4	      0xe800000000	                          call 0x40005b9	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005b9	            0x85c0	                           test eax, eax	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005bb	            0x7508	                           jne 0x40005c5	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005bd	    0x42807c250000	                 cmp byte [rbp + r12], 0	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005c3	            0x7442	                            je 0x4000607	      1013	convert.c	FUNCTION_26	FOR_1	IF_2	CALL_2
0x40005c5	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1012	convert.c	FUNCTION_26	FOR_1
0x40005c9	          0x4885db	                           test rbx, rbx	      1012	convert.c	FUNCTION_26	FOR_1
0x40005cc	            0x75da	                           jne 0x40005a8	      1012	convert.c	FUNCTION_26	FOR_1
0x40005ce	      0xbe30000000	                           mov esi, 0x30	      1016	convert.c	FUNCTION_26	IF_3	CALL_3
0x40005d3	      0xbf01000000	                              mov edi, 1	      1016	convert.c	FUNCTION_26	IF_3	CALL_3
0x40005d8	      0xe800000000	                          call 0x40005dd	      1016	convert.c	FUNCTION_26	IF_3	CALL_3
0x40005dd	      0x4863742404	            movsxd rsi, dword [rsp + 4] 	      1017	convert.c	FUNCTION_26	IF_3	CALL_4
0x40005e2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1017	convert.c	FUNCTION_26	IF_3	CALL_4
0x40005e7	          0x4889c3	                            mov rbx, rax	      1016	convert.c	FUNCTION_26	IF_3	CALL_3
0x40005ea	      0xe800000000	                          call 0x40005ef	      1017	convert.c	FUNCTION_26	IF_3	CALL_4
0x40005ef	          0x488903	                    mov qword [rbx], rax	      1017	convert.c	FUNCTION_26	IF_3	CALL_4
0x40005f2	    0x488b05000000	            mov rax, qword [0x040005f9] 	      1018	convert.c	FUNCTION_26	IF_3
0x40005f9	          0x488918	                    mov qword [rax], rbx	      1018	convert.c	FUNCTION_26	IF_3
0x40005fc	        0x488d4308	                      lea rax, [rbx + 8]	      1019	convert.c	FUNCTION_26	IF_3
0x4000600	    0x488905000000	            mov qword [0x04000607], rax 	      1019	convert.c	FUNCTION_26	IF_3
0x4000607	      0x488b442408	                mov rax, qword [rsp + 8]	      1031	convert.c	FUNCTION_26	IF_4	CALL_5
0x400060c	      0xbe00000000	                              mov esi, 0	      1031	convert.c	FUNCTION_26	IF_4	CALL_5
0x4000611	      0xb907000000	                              mov ecx, 7	      1031	convert.c	FUNCTION_26	IF_4	CALL_5
0x4000616	          0x4889c7	                            mov rdi, rax	      1031	convert.c	FUNCTION_26	IF_4	CALL_5
0x4000619	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1031	convert.c	FUNCTION_26	IF_4	CALL_5
0x400061b	     0xf8497000000	                            je 0x40006b8	      1031	convert.c	FUNCTION_26	IF_4	CALL_5
0x4000621	      0xbe00000000	                              mov esi, 0	      1034	convert.c	FUNCTION_26	IF_5	CALL_7
0x4000626	      0xb906000000	                              mov ecx, 6	      1034	convert.c	FUNCTION_26	IF_5	CALL_7
0x400062b	          0x4889c7	                            mov rdi, rax	      1034	convert.c	FUNCTION_26	IF_5	CALL_7
0x400062e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1034	convert.c	FUNCTION_26	IF_5	CALL_7
0x4000630	            0x746e	                            je 0x40006a0	      1034	convert.c	FUNCTION_26	IF_5	CALL_7
0x4000632	      0xbe00000000	                              mov esi, 0	      1037	convert.c	FUNCTION_26	IF_6	CALL_9
0x4000637	      0xb908000000	                              mov ecx, 8	      1037	convert.c	FUNCTION_26	IF_6	CALL_9
0x400063c	          0x4889c7	                            mov rdi, rax	      1037	convert.c	FUNCTION_26	IF_6	CALL_9
0x400063f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1037	convert.c	FUNCTION_26	IF_6	CALL_9
0x4000641	     0xf8484000000	                            je 0x40006cb	      1037	convert.c	FUNCTION_26	IF_6	CALL_9
0x4000647	          0x4889c7	                            mov rdi, rax	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x400064a	      0xbe00000000	                              mov esi, 0	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x400064f	      0xb909000000	                              mov ecx, 9	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x4000654	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x4000656	        0x400f97c5	                                seta bpl	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x400065a	           0xf92c0	                                 setb al	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x400065d	            0x29c5	                            sub ebp, eax	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x400065f	        0x400fbeed	                          movsx ebp, bpl	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x4000663	            0x85ed	                           test ebp, ebp	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x4000665	            0x7429	                            je 0x4000690	      1040	convert.c	FUNCTION_26	IF_7	CALL_11
0x4000667	            0x31ed	                            xor ebp, ebp	      1011	convert.c	FUNCTION_26	IF_1
0x4000669	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1046	convert.c	FUNCTION_26
0x400066e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1046	convert.c	FUNCTION_26
0x4000677	            0x89e8	                            mov eax, ebp	      1046	convert.c	FUNCTION_26
0x4000679	            0x7563	                           jne 0x40006de	      1046	convert.c	FUNCTION_26
0x400067b	        0x4883c428	                           add rsp, 0x28	      1046	convert.c	FUNCTION_26
0x400067f	              0x5b	                                 pop rbx	      1046	convert.c	FUNCTION_26
0x4000680	              0x5d	                                 pop rbp	      1046	convert.c	FUNCTION_26
0x4000681	            0x415c	                                 pop r12	      1046	convert.c	FUNCTION_26
0x4000683	            0x415d	                                 pop r13	      1046	convert.c	FUNCTION_26
0x4000685	            0x415e	                                 pop r14	      1046	convert.c	FUNCTION_26
0x4000687	            0x415f	                                 pop r15	      1046	convert.c	FUNCTION_26
0x4000689	              0xc3	                                     ret	      1046	convert.c	FUNCTION_26
0x400068a	    0x660f1f440000	                    nop word [rax + rax]	      1046	convert.c	FUNCTION_26
0x4000690	          0x4c89fe	                            mov rsi, r15	      1041	convert.c	FUNCTION_26	IF_7	CALL_12
0x4000693	          0x4c89f7	                            mov rdi, r14	      1041	convert.c	FUNCTION_26	IF_7	CALL_12
0x4000696	      0xe800000000	                          call 0x400069b	      1041	convert.c	FUNCTION_26	IF_7	CALL_12
0x400069b	          0x894328	             mov dword [rbx + 0x28], eax	      1041	convert.c	FUNCTION_26	IF_7	CALL_12
0x400069e	            0xebc9	                           jmp 0x4000669	      1042	convert.c	FUNCTION_26	IF_7
0x40006a0	        0x488d7b18	                   lea rdi, [rbx + 0x18]	      1035	convert.c	FUNCTION_26	CALL_8
0x40006a4	          0x4c89fa	                            mov rdx, r15	      1035	convert.c	FUNCTION_26	CALL_8
0x40006a7	          0x4c89f6	                            mov rsi, r14	      1035	convert.c	FUNCTION_26	CALL_8
0x40006aa	      0xe800000000	                          call 0x40006af	      1035	convert.c	FUNCTION_26	CALL_8
0x40006af	            0x89c5	                            mov ebp, eax	      1035	convert.c	FUNCTION_26	CALL_8
0x40006b1	            0xebb6	                           jmp 0x4000669	      1035	convert.c	FUNCTION_26	CALL_8
0x40006b3	       0xf1f440000	                   nop dword [rax + rax]	      1035	convert.c	FUNCTION_26	CALL_8
0x40006b8	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      1032	convert.c	FUNCTION_26	CALL_6
0x40006bc	          0x4c89fa	                            mov rdx, r15	      1032	convert.c	FUNCTION_26	CALL_6
0x40006bf	          0x4c89f6	                            mov rsi, r14	      1032	convert.c	FUNCTION_26	CALL_6
0x40006c2	      0xe800000000	                          call 0x40006c7	      1032	convert.c	FUNCTION_26	CALL_6
0x40006c7	            0x89c5	                            mov ebp, eax	      1032	convert.c	FUNCTION_26	CALL_6
0x40006c9	            0xeb9e	                           jmp 0x4000669	      1032	convert.c	FUNCTION_26	CALL_6
0x40006cb	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      1038	convert.c	FUNCTION_26	CALL_10
0x40006cf	          0x4c89fa	                            mov rdx, r15	      1038	convert.c	FUNCTION_26	CALL_10
0x40006d2	          0x4c89f6	                            mov rsi, r14	      1038	convert.c	FUNCTION_26	CALL_10
0x40006d5	      0xe800000000	                          call 0x40006da	      1038	convert.c	FUNCTION_26	CALL_10
0x40006da	            0x89c5	                            mov ebp, eax	      1038	convert.c	FUNCTION_26	CALL_10
0x40006dc	            0xeb8b	                           jmp 0x4000669	      1038	convert.c	FUNCTION_26	CALL_10
0x40006de	      0xe800000000	                          call 0x40006e3	      1046	convert.c	FUNCTION_26
convert_to_git	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,6:IF,5	465
0x4003120	            0x4157	                                push r15	      1390	convert.c	FUNCTION_38
0x4003122	            0x4156	                                push r14	      1390	convert.c	FUNCTION_38
0x4003124	          0x4989f7	                            mov r15, rsi	      1390	convert.c	FUNCTION_38
0x4003127	            0x4155	                                push r13	      1390	convert.c	FUNCTION_38
0x4003129	            0x4154	                                push r12	      1390	convert.c	FUNCTION_38
0x400312b	          0x4989cd	                            mov r13, rcx	      1390	convert.c	FUNCTION_38
0x400312e	              0x55	                                push rbp	      1390	convert.c	FUNCTION_38
0x400312f	              0x53	                                push rbx	      1390	convert.c	FUNCTION_38
0x4003130	          0x4989d4	                            mov r12, rdx	      1390	convert.c	FUNCTION_38
0x4003133	          0x4c89c3	                             mov rbx, r8	      1390	convert.c	FUNCTION_38
0x4003136	          0x4589ce	                           mov r14d, r9d	      1390	convert.c	FUNCTION_38
0x4003139	    0x4881ece80000	                           sub rsp, 0xe8	      1390	convert.c	FUNCTION_38
0x4003140	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1390	convert.c	FUNCTION_38
0x4003145	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1394	convert.c	FUNCTION_38	CALL_1
0x400314a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1390	convert.c	FUNCTION_38
0x4003153	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      1390	convert.c	FUNCTION_38
0x400315b	            0x31c0	                            xor eax, eax	      1390	convert.c	FUNCTION_38
0x400315d	      0xe88ee4ffff	                  call sym.convert_attrs	      1394	convert.c	FUNCTION_38	CALL_1
0x4003162	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1396	convert.c	FUNCTION_38	CALL_2
0x4003167	          0x4885c0	                           test rax, rax	       980	convert.c	FUNCTION_25	IF_1
0x400316a	     0xf8470050000	                            je 0x40036e0	       980	convert.c	FUNCTION_25	IF_1
0x4003170	          0x4885db	                           test rbx, rbx	       983	convert.c	FUNCTION_25	IF_2
0x4003173	     0xf84e7050000	                            je 0x4003760	       983	convert.c	FUNCTION_25	IF_2
0x4003179	        0x4c8b4020	              mov r8, qword [rax + 0x20]	       986	convert.c	FUNCTION_25	IF_3
0x400317d	          0x4d85c0	                             test r8, r8	       986	convert.c	FUNCTION_25	IF_3
0x4003180	     0xf84a0040000	                            je 0x4003626	       986	convert.c	FUNCTION_25	IF_3
0x4003186	        0x41803800	                        cmp byte [r8], 0	       993	convert.c	FUNCTION_25	ELSE_2	IF_6
0x400318a	     0xf8570010000	                           jne 0x4003300	       993	convert.c	FUNCTION_25	ELSE_2	IF_6
0x4003190	          0x8b7828	            mov edi, dword [rax + 0x28] 	      1397	convert.c	FUNCTION_38	IF_1
0x4003193	            0x85ff	                           test edi, edi	      1397	convert.c	FUNCTION_38	IF_1
0x4003195	     0xf8559070000	                           jne 0x40038f4	      1397	convert.c	FUNCTION_38	IF_1
0x400319b	            0x31ed	                            xor ebp, ebp	       984	convert.c	FUNCTION_25	IF_2
0x400319d	          0x4885db	                           test rbx, rbx	      1400	convert.c	FUNCTION_38	IF_2
0x40031a0	       0xf95442408	                    setne byte [rsp + 8]	      1400	convert.c	FUNCTION_38	IF_2
0x40031a5	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	      1405	convert.c	FUNCTION_38	CALL_4
0x40031aa	          0x4589f1	                           mov r9d, r14d	      1405	convert.c	FUNCTION_38	CALL_4
0x40031ad	          0x4889d9	                            mov rcx, rbx	      1405	convert.c	FUNCTION_38	CALL_4
0x40031b0	          0x4c89ea	                            mov rdx, r13	      1405	convert.c	FUNCTION_38	CALL_4
0x40031b3	          0x4c89e6	                            mov rsi, r12	      1405	convert.c	FUNCTION_38	CALL_4
0x40031b6	          0x4c89ff	                            mov rdi, r15	      1405	convert.c	FUNCTION_38	CALL_4
0x40031b9	      0xe8f2dfffff	                  call sym.encode_to_git	      1405	convert.c	FUNCTION_38	CALL_4
0x40031be	             0x9e8	                             or eax, ebp	      1406	convert.c	FUNCTION_38	IF_3
0x40031c0	        0x89442414	             mov dword [rsp + 0x14], eax	      1406	convert.c	FUNCTION_38	IF_3
0x40031c4	            0x740f	                            je 0x40031d5	      1406	convert.c	FUNCTION_38	IF_3
0x40031c6	      0x807c240800	                   cmp byte [rsp + 8], 0	      1406	convert.c	FUNCTION_38	IF_3
0x40031cb	            0x7408	                            je 0x40031d5	      1406	convert.c	FUNCTION_38	IF_3
0x40031cd	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      1407	convert.c	FUNCTION_38	IF_3
0x40031d1	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      1408	convert.c	FUNCTION_38	IF_3
0x40031d5	          0x4489f0	                           mov eax, r14d	      1411	convert.c	FUNCTION_38	IF_4
0x40031d8	          0x83e008	                              and eax, 8	      1411	convert.c	FUNCTION_38	IF_4
0x40031db	     0xf843f030000	                            je 0x4003520	      1411	convert.c	FUNCTION_38	IF_4
0x40031e1	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1418	convert.c	FUNCTION_38	CALL_6
0x40031e5	            0x85c0	                           test eax, eax	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x40031e7	     0xf84e5000000	                            je 0x40032d2	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x40031ed	          0x4d85e4	                           test r12, r12	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x40031f0	     0xf84c5000000	                            je 0x40032bb	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x40031f6	          0x4d85ed	                           test r13, r13	      1056	convert.c	FUNCTION_27	WHILE_1
0x40031f9	     0xf84bd060000	                            je 0x40038bc	      1056	convert.c	FUNCTION_27	WHILE_1
0x40031ff	          0x4c89ed	                            mov rbp, r13	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003202	          0x4d89e7	                            mov r15, r12	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003205	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1056	convert.c	FUNCTION_27	WHILE_1
0x400320d	            0xeb10	                           jmp 0x400321f	      1056	convert.c	FUNCTION_27	WHILE_1
0x400320f	              0x90	                                     nop	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003210	          0x4d85f6	                           test r14, r14	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003213	     0xf8498000000	                            je 0x40032b1	      1056	convert.c	FUNCTION_27	WHILE_1
0x4003219	          0x4c89f5	                            mov rbp, r14	      1056	convert.c	FUNCTION_27	WHILE_1
0x400321c	          0x4989cf	                            mov r15, rcx	      1056	convert.c	FUNCTION_27	WHILE_1
0x400321f	        0x41803f24	                    cmp byte [r15], 0x24	      1059	convert.c	FUNCTION_27	WHILE_1	IF_1
0x4003223	        0x498d4f01	                      lea rcx, [r15 + 1]	      1057	convert.c	FUNCTION_27	WHILE_1
0x4003227	        0x4c8d75ff	                      lea r14, [rbp - 1]	      1058	convert.c	FUNCTION_27	WHILE_1
0x400322b	            0x75e3	                           jne 0x4003210	      1059	convert.c	FUNCTION_27	WHILE_1	IF_1
0x400322d	        0x4983fe02	                              cmp r14, 2	      1061	convert.c	FUNCTION_27	WHILE_1	IF_2
0x4003231	            0x767e	                           jbe 0x40032b1	      1061	convert.c	FUNCTION_27	WHILE_1	IF_2
0x4003233	          0x4889ce	                            mov rsi, rcx	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003236	      0xba02000000	                              mov edx, 2	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x400323b	      0xbf00000000	                              mov edi, 0	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003240	      0x48894c2408	                mov qword [rsp + 8], rcx	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003245	      0xe800000000	                          call 0x400324a	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x400324a	            0x85c0	                           test eax, eax	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x400324c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003251	            0x75c6	                           jne 0x4003219	      1063	convert.c	FUNCTION_27	WHILE_1	IF_3	CALL_1
0x4003253	      0x410fb64703	               movzx eax, byte [r15 + 3]	      1065	convert.c	FUNCTION_27	WHILE_1
0x4003258	        0x498d4f04	                      lea rcx, [r15 + 4]	      1066	convert.c	FUNCTION_27	WHILE_1
0x400325c	        0x4c8d75fc	                      lea r14, [rbp - 4]	      1067	convert.c	FUNCTION_27	WHILE_1
0x4003260	            0x3c24	                            cmp al, 0x24	      1068	convert.c	FUNCTION_27	WHILE_1	IF_4
0x4003262	     0xf84f8020000	                            je 0x4003560	      1068	convert.c	FUNCTION_27	WHILE_1	IF_4
0x4003268	            0x3c3a	                            cmp al, 0x3a	      1070	convert.c	FUNCTION_27	WHILE_1	IF_5
0x400326a	            0x75a4	                           jne 0x4003210	      1070	convert.c	FUNCTION_27	WHILE_1	IF_5
0x400326c	          0x4d85f6	                           test r14, r14	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x400326f	            0x7440	                            je 0x40032b1	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003271	      0x410fb64704	               movzx eax, byte [r15 + 4]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003276	        0x498d4f05	                      lea rcx, [r15 + 5]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x400327a	        0x4c8d75fb	                      lea r14, [rbp - 5]	      1078	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x400327e	            0x3c24	                            cmp al, 0x24	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003280	            0x7522	                           jne 0x40032a4	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003282	      0xe9d9020000	                           jmp 0x4003560	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003287	    0x660f1f840000	                    nop word [rax + rax]	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003290	        0x4883c101	                              add rcx, 1	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003294	         0xfb641ff	               movzx eax, byte [rcx - 1]	      1077	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x4003298	        0x4983ee01	                              sub r14, 1	      1078	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x400329c	            0x3c24	                            cmp al, 0x24	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x400329e	     0xf84bc020000	                            je 0x4003560	      1079	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x40032a4	            0x3c0a	                             cmp al, 0xa	      1083	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_7
0x40032a6	     0xf8464ffffff	                            je 0x4003210	      1083	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_7
0x40032ac	          0x4d85f6	                           test r14, r14	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x40032af	            0x75df	                           jne 0x4003290	      1076	convert.c	FUNCTION_27	WHILE_1	WHILE_2
0x40032b1	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x40032b5	            0x31c0	                            xor eax, eax	      1096	convert.c	FUNCTION_28	IF_1
0x40032b7	            0x85d2	                           test edx, edx	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x40032b9	            0x7417	                            je 0x40032d2	      1095	convert.c	FUNCTION_28	IF_1	CALL_1
0x40032bb	          0x4885db	                           test rbx, rbx	      1098	convert.c	FUNCTION_28	IF_2
0x40032be	     0xf84ee050000	                            je 0x40038b2	      1098	convert.c	FUNCTION_28	IF_2
0x40032c4	          0x4889da	                            mov rdx, rbx	      1098	convert.c	FUNCTION_28	IF_2
0x40032c7	          0x4c89ee	                            mov rsi, r13	      1098	convert.c	FUNCTION_28	IF_2
0x40032ca	          0x4c89e7	                            mov rdi, r12	      1098	convert.c	FUNCTION_28	IF_2
0x40032cd	      0xe86ed8ffff	   call sym.ident_to_git.isra.14.part.15	      1098	convert.c	FUNCTION_28	IF_2
0x40032d2	         0xb442414	              or eax, dword [rsp + 0x14]	      1418	convert.c	FUNCTION_38	CALL_6
0x40032d6	    0x488b9c24d800	            mov rbx, qword [rsp + 0xd8] 	      1419	convert.c	FUNCTION_38
0x40032de	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1419	convert.c	FUNCTION_38
0x40032e7	     0xf8502060000	                           jne 0x40038ef	      1419	convert.c	FUNCTION_38
0x40032ed	    0x4881c4e80000	                           add rsp, 0xe8	      1419	convert.c	FUNCTION_38
0x40032f4	              0x5b	                                 pop rbx	      1419	convert.c	FUNCTION_38
0x40032f5	              0x5d	                                 pop rbp	      1419	convert.c	FUNCTION_38
0x40032f6	            0x415c	                                 pop r12	      1419	convert.c	FUNCTION_38
0x40032f8	            0x415d	                                 pop r13	      1419	convert.c	FUNCTION_38
0x40032fa	            0x415e	                                 pop r14	      1419	convert.c	FUNCTION_38
0x40032fc	            0x415f	                                 pop r15	      1419	convert.c	FUNCTION_38
0x40032fe	              0xc3	                                     ret	      1419	convert.c	FUNCTION_38
0x40032ff	              0x90	                                     nop	      1419	convert.c	FUNCTION_38
0x4003300	    0x448b0d000000	            mov r9d, dword [0x04003307] 	       812	convert.c	FUNCTION_23	IF_1
0x4003307	    0x48c744246000	               mov qword [rsp + 0x60], 0	       808	convert.c	FUNCTION_23
0x4003310	    0x48c744246800	               mov qword [rsp + 0x68], 0	       808	convert.c	FUNCTION_23
0x4003319	    0x48c744247000	               mov qword [rsp + 0x70], 0	       808	convert.c	FUNCTION_23
0x4003322	    0x48c784249000	               mov qword [rsp + 0x90], 0	       809	convert.c	FUNCTION_23
0x400332e	    0x48c784249800	               mov qword [rsp + 0x98], 0	       809	convert.c	FUNCTION_23
0x400333a	          0x4585c9	                           test r9d, r9d	       812	convert.c	FUNCTION_23	IF_1
0x400333d	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       809	convert.c	FUNCTION_23
0x4003349	     0xf8421020000	                            je 0x4003570	       812	convert.c	FUNCTION_23	IF_1
0x400334f	          0x4c89c6	                             mov rsi, r8	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003352	      0xbf00000000	                              mov edi, 0	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003357	      0x4c89442408	                 mov qword [rsp + 8], r8	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x400335c	      0xe800000000	                          call 0x4003361	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003361	            0x31ff	                            xor edi, edi	       820	convert.c	FUNCTION_23	CALL_3
0x4003363	          0x4889c5	                            mov rbp, rax	       817	convert.c	FUNCTION_23	ELSE_1	CALL_2
0x4003366	      0xe800000000	                          call 0x400336b	       820	convert.c	FUNCTION_23	CALL_3
0x400336b	          0x4885ed	                           test rbp, rbp	       822	convert.c	FUNCTION_23	IF_2
0x400336e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       822	convert.c	FUNCTION_23	IF_2
0x4003373	     0xf8425020000	                            je 0x400359e	       822	convert.c	FUNCTION_23	IF_2
0x4003379	        0xf6457801	               test byte [rbp + 0x78], 1	       833	convert.c	FUNCTION_23	IF_4
0x400337d	     0xf8447030000	                            je 0x40036ca	       833	convert.c	FUNCTION_23	IF_4
0x4003383	      0xbe01000000	                              mov esi, 1	       843	convert.c	FUNCTION_23	CALL_8
0x4003388	      0xbf0d000000	                            mov edi, 0xd	       843	convert.c	FUNCTION_23	CALL_8
0x400338d	      0xe800000000	                          call 0x4003392	       843	convert.c	FUNCTION_23	CALL_8
0x4003392	          0x8b7d44	            mov edi, dword [rbp + 0x44] 	       846	convert.c	FUNCTION_23	CALL_12
0x4003395	            0x31c0	                            xor eax, eax	       846	convert.c	FUNCTION_23	CALL_12
0x4003397	      0xba00000000	                              mov edx, 0	       846	convert.c	FUNCTION_23	CALL_12
0x400339c	      0xbe00000000	                              mov esi, 0	       846	convert.c	FUNCTION_23	CALL_12
0x40033a1	      0xe800000000	                          call 0x40033a6	       846	convert.c	FUNCTION_23	CALL_12
0x40033a6	            0x85c0	                           test eax, eax	       847	convert.c	FUNCTION_23	IF_7
0x40033a8	     0xf8542030000	                           jne 0x40036f0	       847	convert.c	FUNCTION_23	IF_7
0x40033ae	          0x4c89ff	                            mov rdi, r15	       850	convert.c	FUNCTION_23	CALL_14
0x40033b1	      0xe800000000	                          call 0x40033b6	       850	convert.c	FUNCTION_23	CALL_14
0x40033b6	    0x483de2ff0000	                         cmp rax, 0xffe2	       851	convert.c	FUNCTION_23	IF_8
0x40033bc	     0xf8778040000	                            ja 0x400383a	       851	convert.c	FUNCTION_23	IF_8
0x40033c2	          0x8b7d44	            mov edi, dword [rbp + 0x44] 	       856	convert.c	FUNCTION_23	CALL_15
0x40033c5	            0x31c0	                            xor eax, eax	       856	convert.c	FUNCTION_23	CALL_15
0x40033c7	          0x4c89fa	                            mov rdx, r15	       856	convert.c	FUNCTION_23	CALL_15
0x40033ca	      0xbe00000000	                              mov esi, 0	       856	convert.c	FUNCTION_23	CALL_15
0x40033cf	      0xe800000000	                          call 0x40033d4	       856	convert.c	FUNCTION_23	CALL_15
0x40033d4	            0x85c0	                           test eax, eax	       857	convert.c	FUNCTION_23	IF_9
0x40033d6	     0xf8514030000	                           jne 0x40036f0	       857	convert.c	FUNCTION_23	IF_9
0x40033dc	          0x8b7d44	            mov edi, dword [rbp + 0x44] 	       868	convert.c	FUNCTION_23	CALL_17
0x40033df	      0xe800000000	                          call 0x40033e4	       868	convert.c	FUNCTION_23	CALL_17
0x40033e4	            0x85c0	                           test eax, eax	       869	convert.c	FUNCTION_23	IF_12
0x40033e6	     0xf8504030000	                           jne 0x40036f0	       869	convert.c	FUNCTION_23	IF_12
0x40033ec	          0x8b5544	            mov edx, dword [rbp + 0x44] 	       875	convert.c	FUNCTION_23	CALL_19
0x40033ef	          0x4c89ee	                            mov rsi, r13	       875	convert.c	FUNCTION_23	CALL_19
0x40033f2	          0x4c89e7	                            mov rdi, r12	       875	convert.c	FUNCTION_23	CALL_19
0x40033f5	      0xe800000000	                          call 0x40033fa	       875	convert.c	FUNCTION_23	CALL_19
0x40033fa	      0x488d542460	                   lea rdx, [rsp + 0x60]	       875	convert.c	FUNCTION_23	CALL_19
0x40033ff	            0x85c0	                           test eax, eax	       876	convert.c	FUNCTION_23	IF_14
0x4003401	      0x4889542408	                mov qword [rsp + 8], rdx	       876	convert.c	FUNCTION_23	IF_14
0x4003406	     0xf85ee020000	                           jne 0x40036fa	       876	convert.c	FUNCTION_23	IF_14
0x400340c	          0x8b7d48	            mov edi, dword [rbp + 0x48] 	       879	convert.c	FUNCTION_23	CALL_20
0x400340f	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       879	convert.c	FUNCTION_23	CALL_20
0x4003417	      0xe800000000	                          call 0x400341c	       879	convert.c	FUNCTION_23	CALL_20
0x400341c	            0x85c0	                           test eax, eax	       880	convert.c	FUNCTION_23	IF_15
0x400341e	     0xf85d6020000	                           jne 0x40036fa	       880	convert.c	FUNCTION_23	IF_15
0x4003424	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x400342c	      0xbf00000000	                              mov edi, 0	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x4003431	      0xb908000000	                              mov ecx, 8	       888	convert.c	FUNCTION_23	ELSE_5	CALL_24
0x4003436	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       889	convert.c	FUNCTION_23	ELSE_5	IF_17
0x4003438	     0xf85bc020000	                           jne 0x40036fa	       889	convert.c	FUNCTION_23	ELSE_5	IF_17
0x400343e	          0x8b7d48	            mov edi, dword [rbp + 0x48] 	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003441	      0x488b742408	                mov rsi, qword [rsp + 8]	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003446	      0xe800000000	                          call 0x400344b	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x400344b	          0x4889c2	                            mov rdx, rax	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x400344e	        0x48c1ea3f	                           shr rdx, 0x3f	       892	convert.c	FUNCTION_23	ELSE_5	CALL_25
0x4003452	          0x4885c0	                           test rax, rax	       893	convert.c	FUNCTION_23	ELSE_5	IF_18
0x4003455	            0x782c	                            js 0x4003483	       893	convert.c	FUNCTION_23	ELSE_5	IF_18
0x4003457	          0x8b7d48	            mov edi, dword [rbp + 0x48] 	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x400345a	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x4003462	      0xe800000000	                          call 0x4003467	       896	convert.c	FUNCTION_23	ELSE_5	CALL_26
0x4003467	            0x85c0	                           test eax, eax	       897	convert.c	FUNCTION_23	ELSE_5	IF_19
0x4003469	     0xf858b020000	                           jne 0x40036fa	       897	convert.c	FUNCTION_23	ELSE_5	IF_19
0x400346f	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4003477	      0xbe00000000	                              mov esi, 0	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x400347c	      0xe800000000	                          call 0x4003481	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4003481	            0x89c2	                            mov edx, eax	       900	convert.c	FUNCTION_23	ELSE_5	CALL_27
0x4003483	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x4003488	        0x89542414	             mov dword [rsp + 0x14], edx	       904	convert.c	FUNCTION_23	CALL_28
0x400348c	      0xe800000000	                          call 0x4003491	       904	convert.c	FUNCTION_23	CALL_28
0x4003491	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       906	convert.c	FUNCTION_23	IF_20
0x4003495	            0x85d2	                           test edx, edx	       906	convert.c	FUNCTION_23	IF_20
0x4003497	     0xf8567020000	                           jne 0x4003704	       906	convert.c	FUNCTION_23	IF_20
0x400349d	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_61	CALL_3
0x40034a2	          0x488b0b	                    mov rcx, qword [rbx]	        53	string3.h	FUNCTION_61	CALL_3
0x40034a5	        0x488b5308	                mov rdx, qword [rbx + 8]	        53	string3.h	FUNCTION_61	CALL_3
0x40034a9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_61	CALL_3
0x40034ad	          0x488933	                    mov qword [rbx], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x40034b0	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	        53	string3.h	FUNCTION_61	CALL_3
0x40034b5	    0x48899424c800	             mov qword [rsp + 0xc8], rdx	        53	string3.h	FUNCTION_61	CALL_3
0x40034bd	      0x4889542468	             mov qword [rsp + 0x68], rdx	        53	string3.h	FUNCTION_61	CALL_3
0x40034c2	      0xba01000000	                              mov edx, 1	        53	string3.h	FUNCTION_61	CALL_3
0x40034c7	    0x48898c24c000	             mov qword [rsp + 0xc0], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x40034cf	    0x48898424d000	             mov qword [rsp + 0xd0], rax	        53	string3.h	FUNCTION_61	CALL_3
0x40034d7	        0x48897308	                mov qword [rbx + 8], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x40034db	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	        53	string3.h	FUNCTION_61	CALL_3
0x40034e0	      0x48894c2460	             mov qword [rsp + 0x60], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x40034e5	      0x4889442470	             mov qword [rsp + 0x70], rax	        53	string3.h	FUNCTION_61	CALL_3
0x40034ea	        0x48897310	             mov qword [rbx + 0x10], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x40034ee	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       910	convert.c	FUNCTION_23	CALL_31
0x40034f3	        0x89542414	             mov dword [rsp + 0x14], edx	       910	convert.c	FUNCTION_23	CALL_31
0x40034f7	      0xe800000000	                          call 0x40034fc	       910	convert.c	FUNCTION_23	CALL_31
0x40034fc	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       910	convert.c	FUNCTION_23	CALL_31
0x4003500	            0x85d2	                           test edx, edx	      1397	convert.c	FUNCTION_38	IF_1
0x4003502	     0xf84c2010000	                            je 0x40036ca	      1397	convert.c	FUNCTION_38	IF_1
0x4003508	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      1401	convert.c	FUNCTION_38	IF_2
0x400350c	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      1402	convert.c	FUNCTION_38	IF_2
0x4003510	      0xbd01000000	                              mov ebp, 1	      1402	convert.c	FUNCTION_38	IF_2
0x4003515	      0xc644240801	                   mov byte [rsp + 8], 1	      1402	convert.c	FUNCTION_38	IF_2
0x400351a	      0xe986fcffff	                           jmp 0x40031a5	      1402	convert.c	FUNCTION_38	IF_2
0x400351f	              0x90	                                     nop	      1402	convert.c	FUNCTION_38	IF_2
0x4003520	      0x448b4c244c	            mov r9d, dword [rsp + 0x4c] 	      1412	convert.c	FUNCTION_38	IF_4	CALL_5
0x4003525	        0x4183f901	                              cmp r9d, 1	       513	convert.c	FUNCTION_17	IF_1
0x4003529	            0x7412	                            je 0x400353d	       513	convert.c	FUNCTION_17	IF_1
0x400352b	          0x4d85e4	                           test r12, r12	       513	convert.c	FUNCTION_17	IF_1
0x400352e	     0xf84bc000000	                            je 0x40035f0	       513	convert.c	FUNCTION_17	IF_1
0x4003534	          0x4d85ed	                           test r13, r13	       513	convert.c	FUNCTION_17	IF_1
0x4003537	     0xf85b3000000	                           jne 0x40035f0	       513	convert.c	FUNCTION_17	IF_1
0x400353d	         0x9442414	              or dword [rsp + 0x14], eax	      1413	convert.c	FUNCTION_38	IF_4	IF_5
0x4003541	     0xf849afcffff	                            je 0x40031e1	      1413	convert.c	FUNCTION_38	IF_4	IF_5
0x4003547	      0x807c240800	                   cmp byte [rsp + 8], 0	      1413	convert.c	FUNCTION_38	IF_4	IF_5
0x400354c	     0xf848ffcffff	                            je 0x40031e1	      1413	convert.c	FUNCTION_38	IF_4	IF_5
0x4003552	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      1414	convert.c	FUNCTION_38	IF_4	IF_5
0x4003556	        0x4c8b6b08	                mov r13, qword [rbx + 8]	      1415	convert.c	FUNCTION_38	IF_4	IF_5
0x400355a	      0xe982fcffff	                           jmp 0x40031e1	      1415	convert.c	FUNCTION_38	IF_4	IF_5
0x400355f	              0x90	                                     nop	      1415	convert.c	FUNCTION_38	IF_4	IF_5
0x4003560	      0x8344241801	               add dword [rsp + 0x18], 1	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003565	      0xe9a6fcffff	                           jmp 0x4003210	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x400356a	    0x660f1f440000	                    nop word [rax + rax]	      1080	convert.c	FUNCTION_27	WHILE_1	WHILE_2	IF_6
0x4003570	            0x31c9	                            xor ecx, ecx	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003572	            0x31d2	                            xor edx, edx	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003574	      0xbe00000000	                              mov esi, 0	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003579	      0xbf00000000	                              mov edi, 0	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x400357e	      0x4c89442408	                 mov qword [rsp + 8], r8	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003583	    0xc70500000000	               mov dword [0x0400358d], 1	       813	convert.c	FUNCTION_23	IF_1
0x400358d	      0xe800000000	                          call 0x4003592	       814	convert.c	FUNCTION_23	IF_1	CALL_1
0x4003592	            0x31ff	                            xor edi, edi	       820	convert.c	FUNCTION_23	CALL_3
0x4003594	      0xe800000000	                          call 0x4003599	       820	convert.c	FUNCTION_23	CALL_3
0x4003599	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       820	convert.c	FUNCTION_23	CALL_3
0x400359e	      0xbf80000000	                           mov edi, 0x80	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x40035a3	      0x4c89442408	                 mov qword [rsp + 8], r8	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x40035a8	      0xe800000000	                          call 0x40035ad	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x40035ad	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x40035b2	    0xc74078000000	               mov dword [rax + 0x78], 0	       824	convert.c	FUNCTION_23	IF_2
0x40035b9	      0xb900000000	                              mov ecx, 0	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x40035be	          0x4889c6	                            mov rsi, rax	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x40035c1	      0xbf00000000	                              mov edi, 0	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x40035c6	          0x4889c5	                            mov rbp, rax	       823	convert.c	FUNCTION_23	IF_2	CALL_4
0x40035c9	          0x4c89c2	                             mov rdx, r8	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x40035cc	      0xe800000000	                          call 0x40035d1	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x40035d1	            0x85c0	                           test eax, eax	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x40035d3	     0xf84a0fdffff	                            je 0x4003379	       826	convert.c	FUNCTION_23	IF_2	IF_3	CALL_5
0x40035d9	          0x4889ef	                            mov rdi, rbp	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x40035dc	      0xe800000000	                          call 0x40035e1	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x40035e1	      0xe9e4000000	                           jmp 0x40036ca	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x40035e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       827	convert.c	FUNCTION_23	IF_2	IF_3	CALL_6
0x40035f0	          0x4885db	                           test rbx, rbx	       521	convert.c	FUNCTION_17	IF_2
0x40035f3	            0x750e	                           jne 0x4003603	       521	convert.c	FUNCTION_17	IF_2
0x40035f5	          0x4d85e4	                           test r12, r12	       521	convert.c	FUNCTION_17	IF_2
0x40035f8	      0xb801000000	                              mov eax, 1	       522	convert.c	FUNCTION_17	IF_2
0x40035fd	     0xf843affffff	                            je 0x400353d	       521	convert.c	FUNCTION_17	IF_2
0x4003603	        0x4883ec08	                              sub rsp, 8	       521	convert.c	FUNCTION_17	IF_2
0x4003607	          0x4c89e9	                            mov rcx, r13	       521	convert.c	FUNCTION_17	IF_2
0x400360a	          0x4c89fe	                            mov rsi, r15	       521	convert.c	FUNCTION_17	IF_2
0x400360d	            0x4156	                                push r14	       521	convert.c	FUNCTION_17	IF_2
0x400360f	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       521	convert.c	FUNCTION_17	IF_2
0x4003614	          0x4989d8	                             mov r8, rbx	       521	convert.c	FUNCTION_17	IF_2
0x4003617	          0x4c89e2	                            mov rdx, r12	       521	convert.c	FUNCTION_17	IF_2
0x400361a	      0xe8f1e3ffff	            call sym.crlf_to_git.part.20	       521	convert.c	FUNCTION_17	IF_2
0x400361f	              0x59	                                 pop rcx	       521	convert.c	FUNCTION_17	IF_2
0x4003620	              0x5e	                                 pop rsi	       521	convert.c	FUNCTION_17	IF_2
0x4003621	      0xe917ffffff	                           jmp 0x400353d	       521	convert.c	FUNCTION_17	IF_2
0x4003626	        0x488b6818	            mov rbp, qword [rax + 0x18] 	       986	convert.c	FUNCTION_25	IF_3
0x400362a	          0x4885ed	                           test rbp, rbp	       986	convert.c	FUNCTION_25	IF_3
0x400362d	     0xf845dfbffff	                            je 0x4003190	       986	convert.c	FUNCTION_25	IF_3
0x4003633	        0x807d0000	                       cmp byte [rbp], 0	       991	convert.c	FUNCTION_25	IF_5
0x4003637	     0xf8453fbffff	                            je 0x4003190	       991	convert.c	FUNCTION_25	IF_5
0x400363d	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	        90	string3.h	FUNCTION_64	CALL_6
0x4003645	          0x4c89c0	                             mov rax, r8	        90	string3.h	FUNCTION_64	CALL_6
0x4003648	      0xb906000000	                              mov ecx, 6	        90	string3.h	FUNCTION_64	CALL_6
0x400364d	    0x48c744242000	               mov qword [rsp + 0x20], 0	       714	convert.c	FUNCTION_20
0x4003656	    0x48c744242800	               mov qword [rsp + 0x28], 0	       714	convert.c	FUNCTION_20
0x400365f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_64	CALL_6
0x4003662	      0x488d442460	                   lea rax, [rsp + 0x60]	       720	convert.c	FUNCTION_20
0x4003667	            0x31ff	                            xor edi, edi	       728	convert.c	FUNCTION_20	CALL_2
0x4003669	    0x48c744243000	               mov qword [rsp + 0x30], 0	       714	convert.c	FUNCTION_20
0x4003672	    0x48c784249000	               mov qword [rsp + 0x90], 0	       719	convert.c	FUNCTION_20
0x400367e	    0xc78424a40000	     mov dword [rsp + 0xa4], 0xffffffff 	       721	convert.c	FUNCTION_20
0x4003689	    0x488984249800	             mov qword [rsp + 0x98], rax	       720	convert.c	FUNCTION_20
0x4003691	      0x4c89642460	             mov qword [rsp + 0x60], r12	       722	convert.c	FUNCTION_20
0x4003696	      0x4c896c2468	             mov qword [rsp + 0x68], r13	       723	convert.c	FUNCTION_20
0x400369b	    0xc7442470ffff	     mov dword [rsp + 0x70], 0xffffffff 	       724	convert.c	FUNCTION_20
0x40036a3	      0x48896c2478	             mov qword [rsp + 0x78], rbp	       725	convert.c	FUNCTION_20
0x40036a8	    0x4c89bc248000	             mov qword [rsp + 0x80], r15	       726	convert.c	FUNCTION_20
0x40036b0	      0xe800000000	                          call 0x40036b5	       728	convert.c	FUNCTION_20	CALL_2
0x40036b5	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40036bd	      0xe800000000	                          call 0x40036c2	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40036c2	            0x85c0	                           test eax, eax	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40036c4	     0xf84a0000000	                            je 0x400376a	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40036ca	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       729	convert.c	FUNCTION_20	IF_1	CALL_3
0x40036cf	          0x4885c0	                           test rax, rax	      1397	convert.c	FUNCTION_38	IF_1
0x40036d2	     0xf85b8faffff	                           jne 0x4003190	      1397	convert.c	FUNCTION_38	IF_1
0x40036d8	      0xe9befaffff	                           jmp 0x400319b	      1397	convert.c	FUNCTION_38	IF_1
0x40036dd	           0xf1f00	                         nop dword [rax]	      1397	convert.c	FUNCTION_38	IF_1
0x40036e0	          0x4885db	                           test rbx, rbx	      1397	convert.c	FUNCTION_38	IF_1
0x40036e3	       0xf95442408	                    setne byte [rsp + 8]	      1397	convert.c	FUNCTION_38	IF_1
0x40036e8	            0x31ed	                            xor ebp, ebp	       980	convert.c	FUNCTION_25	IF_1
0x40036ea	      0xe9b6faffff	                           jmp 0x40031a5	       980	convert.c	FUNCTION_25	IF_1
0x40036ef	              0x90	                                     nop	       980	convert.c	FUNCTION_25	IF_1
0x40036f0	      0x488d442460	                   lea rax, [rsp + 0x60]	       980	convert.c	FUNCTION_25	IF_1
0x40036f5	      0x4889442408	                mov qword [rsp + 8], rax	       980	convert.c	FUNCTION_25	IF_1
0x40036fa	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x40036ff	      0xe800000000	                          call 0x4003704	       904	convert.c	FUNCTION_23	CALL_28
0x4003704	    0x4c8b8424a000	              mov r8, qword [rsp + 0xa0]	       904	convert.c	FUNCTION_23	CALL_28
0x400370c	      0xbf00000000	                              mov edi, 0	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003711	      0xb906000000	                              mov ecx, 6	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003716	          0x4c89c6	                             mov rsi, r8	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003719	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x400371b	           0xf97c2	                                 seta dl	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x400371e	           0xf92c0	                                 setb al	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003721	            0x29c2	                            sub edx, eax	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003723	           0xfbed2	                           movsx edx, dl	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003726	            0x85d2	                           test edx, edx	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4003728	     0xf84c0fdffff	                            je 0x40034ee	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x400372e	      0xbf00000000	                              mov edi, 0	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003733	      0xb906000000	                              mov ecx, 6	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003738	          0x4c89c6	                             mov rsi, r8	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x400373b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x400373d	           0xf97c2	                                 seta dl	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003740	           0xf92c0	                                 setb al	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003743	            0x29c2	                            sub edx, eax	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003745	           0xfbed2	                           movsx edx, dl	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003748	            0x85d2	                           test edx, edx	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x400374a	     0xf8573010000	                           jne 0x40038c3	       781	convert.c	FUNCTION_22	ELSE_1	IF_2	CALL_2
0x4003750	        0x836578fe	      and dword [rbp + 0x78], 0xfffffffe	       787	convert.c	FUNCTION_22	ELSE_1	IF_2
0x4003754	      0xe995fdffff	                           jmp 0x40034ee	       787	convert.c	FUNCTION_22	ELSE_1	IF_2
0x4003759	     0xf1f80000000	                         nop dword [rax]	       787	convert.c	FUNCTION_22	ELSE_1	IF_2
0x4003760	      0xbd01000000	                              mov ebp, 1	       984	convert.c	FUNCTION_25	IF_2
0x4003765	      0xe933faffff	                           jmp 0x400319d	       984	convert.c	FUNCTION_25	IF_2
0x400376a	    0x8bb424a40000	            mov esi, dword [rsp + 0xa4] 	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003771	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003776	          0x4c89ea	                            mov rdx, r13	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003779	      0xe800000000	                          call 0x400377e	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x400377e	          0x4885c0	                           test rax, rax	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003781	      0xba01000000	                              mov edx, 1	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003786	    0xc74424140000	               mov dword [rsp + 0x14], 0	       713	convert.c	FUNCTION_20
0x400378e	     0xf8800010000	                            js 0x4003894	       732	convert.c	FUNCTION_20	IF_2	CALL_4
0x4003794	    0x8bbc24a40000	            mov edi, dword [rsp + 0xa4] 	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x400379b	        0x89542408	                mov dword [rsp + 8], edx	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x400379f	      0xe800000000	                          call 0x40037a4	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x40037a4	            0x85c0	                           test eax, eax	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x40037a6	        0x8b542408	                mov edx, dword [rsp + 8]	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x40037aa	     0xf85af000000	                           jne 0x400385f	       735	convert.c	FUNCTION_20	IF_3	CALL_5
0x40037b0	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x40037b8	        0x89542408	                mov dword [rsp + 8], edx	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x40037bc	      0xe800000000	                          call 0x40037c1	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x40037c1	            0x85c0	                           test eax, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x40037c3	     0xf85b8000000	                           jne 0x4003881	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x40037c9	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	       742	convert.c	FUNCTION_20	IF_5
0x40037ce	        0x8b542408	                mov edx, dword [rsp + 8]	       742	convert.c	FUNCTION_20	IF_5
0x40037d2	          0x4585d2	                         test r10d, r10d	       742	convert.c	FUNCTION_20	IF_5
0x40037d5	            0x754c	                           jne 0x4003823	       742	convert.c	FUNCTION_20	IF_5
0x40037d7	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_61	CALL_3
0x40037dc	          0x488b33	                    mov rsi, qword [rbx]	        53	string3.h	FUNCTION_61	CALL_3
0x40037df	        0x488b4b08	                mov rcx, qword [rbx + 8]	        53	string3.h	FUNCTION_61	CALL_3
0x40037e3	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_61	CALL_3
0x40037e7	          0x48893b	                    mov qword [rbx], rdi	        53	string3.h	FUNCTION_61	CALL_3
0x40037ea	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_61	CALL_3
0x40037ef	    0x4889b424c000	             mov qword [rsp + 0xc0], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x40037f7	    0x48898c24c800	             mov qword [rsp + 0xc8], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x40037ff	    0x48898424d000	             mov qword [rsp + 0xd0], rax	        53	string3.h	FUNCTION_61	CALL_3
0x4003807	      0x4889742420	             mov qword [rsp + 0x20], rsi	        53	string3.h	FUNCTION_61	CALL_3
0x400380c	        0x48897b08	                mov qword [rbx + 8], rdi	        53	string3.h	FUNCTION_61	CALL_3
0x4003810	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_61	CALL_3
0x4003815	      0x48894c2428	             mov qword [rsp + 0x28], rcx	        53	string3.h	FUNCTION_61	CALL_3
0x400381a	      0x4889442430	             mov qword [rsp + 0x30], rax	        53	string3.h	FUNCTION_61	CALL_3
0x400381f	        0x48897b10	             mov qword [rbx + 0x10], rdi	        53	string3.h	FUNCTION_61	CALL_3
0x4003823	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       745	convert.c	FUNCTION_20	CALL_8
0x4003828	        0x89542408	                mov dword [rsp + 8], edx	       745	convert.c	FUNCTION_20	CALL_8
0x400382c	      0xe800000000	                          call 0x4003831	       745	convert.c	FUNCTION_20	CALL_8
0x4003831	        0x8b542408	                mov edx, dword [rsp + 8]	       745	convert.c	FUNCTION_20	CALL_8
0x4003835	      0xe9c6fcffff	                           jmp 0x4003500	       745	convert.c	FUNCTION_20	CALL_8
0x400383a	      0xbf00000000	                              mov edi, 0	       852	convert.c	FUNCTION_23	IF_8
0x400383f	            0x31c0	                            xor eax, eax	       852	convert.c	FUNCTION_23	IF_8
0x4003841	      0xe800000000	                          call 0x4003846	       852	convert.c	FUNCTION_23	IF_8
0x4003846	      0xbf0d000000	                            mov edi, 0xd	       904	convert.c	FUNCTION_23	CALL_28
0x400384b	      0xe800000000	                          call 0x4003850	       904	convert.c	FUNCTION_23	CALL_28
0x4003850	      0x488d442460	                   lea rax, [rsp + 0x60]	       904	convert.c	FUNCTION_23	CALL_28
0x4003855	      0x4889442408	                mov qword [rsp + 8], rax	       904	convert.c	FUNCTION_23	CALL_28
0x400385a	      0xe9a5feffff	                           jmp 0x4003704	       904	convert.c	FUNCTION_23	CALL_28
0x400385f	          0x4889ee	                            mov rsi, rbp	       736	convert.c	FUNCTION_20	IF_3
0x4003862	      0xbf00000000	                              mov edi, 0	       736	convert.c	FUNCTION_20	IF_3
0x4003867	            0x31c0	                            xor eax, eax	       736	convert.c	FUNCTION_20	IF_3
0x4003869	      0xe800000000	                          call 0x400386e	       736	convert.c	FUNCTION_20	IF_3
0x400386e	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003876	      0xe800000000	                          call 0x400387b	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x400387b	            0x85c0	                           test eax, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x400387d	            0x89c2	                            mov edx, eax	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x400387f	            0x74a2	                            je 0x4003823	       738	convert.c	FUNCTION_20	IF_4	CALL_6
0x4003881	          0x4889ee	                            mov rsi, rbp	       739	convert.c	FUNCTION_20	IF_4
0x4003884	      0xbf00000000	                              mov edi, 0	       739	convert.c	FUNCTION_20	IF_4
0x4003889	            0x31c0	                            xor eax, eax	       739	convert.c	FUNCTION_20	IF_4
0x400388b	      0xe800000000	                          call 0x4003890	       739	convert.c	FUNCTION_20	IF_4
0x4003890	            0x31d2	                            xor edx, edx	       739	convert.c	FUNCTION_20	IF_4
0x4003892	            0xeb8f	                           jmp 0x4003823	       739	convert.c	FUNCTION_20	IF_4
0x4003894	          0x4889ee	                            mov rsi, rbp	       733	convert.c	FUNCTION_20	IF_2
0x4003897	      0xbf00000000	                              mov edi, 0	       733	convert.c	FUNCTION_20	IF_2
0x400389c	            0x31c0	                            xor eax, eax	       733	convert.c	FUNCTION_20	IF_2
0x400389e	      0xe800000000	                          call 0x40038a3	       733	convert.c	FUNCTION_20	IF_2
0x40038a3	            0x31d2	                            xor edx, edx	       733	convert.c	FUNCTION_20	IF_2
0x40038a5	    0xc7442414ffff	     mov dword [rsp + 0x14], 0xffffffff 	       733	convert.c	FUNCTION_20	IF_2
0x40038ad	      0xe9e2feffff	                           jmp 0x4003794	       733	convert.c	FUNCTION_20	IF_2
0x40038b2	      0xb801000000	                              mov eax, 1	      1099	convert.c	FUNCTION_28	IF_2
0x40038b7	      0xe916faffff	                           jmp 0x40032d2	      1099	convert.c	FUNCTION_28	IF_2
0x40038bc	            0x31c0	                            xor eax, eax	      1096	convert.c	FUNCTION_28	IF_1
0x40038be	      0xe90ffaffff	                           jmp 0x40032d2	      1096	convert.c	FUNCTION_28	IF_1
0x40038c3	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       793	convert.c	FUNCTION_22	ELSE_2
0x40038c7	      0xbf00000000	                              mov edi, 0	       793	convert.c	FUNCTION_22	ELSE_2
0x40038cc	            0x31c0	                            xor eax, eax	       793	convert.c	FUNCTION_22	ELSE_2
0x40038ce	      0xe800000000	                          call 0x40038d3	       793	convert.c	FUNCTION_22	ELSE_2
0x40038d3	          0x4889ee	                            mov rsi, rbp	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x40038d6	      0xbf00000000	                              mov edi, 0	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x40038db	      0xe800000000	                          call 0x40038e0	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x40038e0	          0x4889ef	                            mov rdi, rbp	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x40038e3	      0xe800000000	                          call 0x40038e8	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x40038e8	            0x31d2	                            xor edx, edx	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x40038ea	      0xe9fffbffff	                           jmp 0x40034ee	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x40038ef	      0xe800000000	                          call 0x40038f4	      1419	convert.c	FUNCTION_38
0x40038f4	          0x488b10	                    mov rdx, qword [rax]	      1398	convert.c	FUNCTION_38	CALL_3
0x40038f7	          0x4c89fe	                            mov rsi, r15	      1398	convert.c	FUNCTION_38	CALL_3
0x40038fa	      0xbf00000000	                              mov edi, 0	      1398	convert.c	FUNCTION_38	CALL_3
0x40038ff	            0x31c0	                            xor eax, eax	      1398	convert.c	FUNCTION_38	CALL_3
0x4003901	      0xe800000000	                          call 0x4003906	      1398	convert.c	FUNCTION_38	CALL_3
ident_free_fn	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:IF,0	7
0x4000520	              0x53	                                push rbx	      1898	convert.c	FUNCTION_56
0x4000521	          0x4889fb	                            mov rbx, rdi	      1898	convert.c	FUNCTION_56
0x4000524	        0x488d7f08	                      lea rdi, [rdi + 8]	      1900	convert.c	FUNCTION_56	CALL_1
0x4000528	      0xe800000000	                          call 0x400052d	      1900	convert.c	FUNCTION_56	CALL_1
0x400052d	          0x4889df	                            mov rdi, rbx	      1901	convert.c	FUNCTION_56	CALL_2
0x4000530	              0x5b	                                 pop rbx	      1902	convert.c	FUNCTION_56
0x4000531	      0xe900000000	                           jmp 0x4000536	      1901	convert.c	FUNCTION_56	CALL_2
null_filter_fn	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,1:IF,3	26
0x4000af0	          0x4885f6	                           test rsi, rsi	      1529	convert.c	FUNCTION_44	IF_1
0x4000af3	            0x743b	                            je 0x4000b30	      1529	convert.c	FUNCTION_44	IF_1
0x4000af5	            0x4154	                                push r12	      1526	convert.c	FUNCTION_44
0x4000af7	              0x55	                                push rbp	      1526	convert.c	FUNCTION_44
0x4000af8	              0x53	                                push rbx	      1526	convert.c	FUNCTION_44
0x4000af9	          0x498b18	                     mov rbx, qword [r8]	      1532	convert.c	FUNCTION_44	IF_2
0x4000afc	          0x488b02	                    mov rax, qword [rdx]	      1531	convert.c	FUNCTION_44
0x4000aff	          0x4839d8	                            cmp rax, rbx	      1531	convert.c	FUNCTION_44
0x4000b02	        0x480f46d8	                         cmovbe rbx, rax	      1531	convert.c	FUNCTION_44
0x4000b06	          0x4885db	                           test rbx, rbx	      1534	convert.c	FUNCTION_44	IF_3
0x4000b09	            0x7419	                            je 0x4000b24	      1534	convert.c	FUNCTION_44	IF_3
0x4000b0b	          0x4989d4	                            mov r12, rdx	      1534	convert.c	FUNCTION_44	IF_3
0x4000b0e	          0x4889cf	                            mov rdi, rcx	      1534	convert.c	FUNCTION_44	IF_3
0x4000b11	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_62	CALL_3
0x4000b14	          0x4c89c5	                             mov rbp, r8	        59	string3.h	FUNCTION_62	CALL_3
0x4000b17	      0xe800000000	                          call 0x4000b1c	        59	string3.h	FUNCTION_62	CALL_3
0x4000b1c	        0x49291c24	                    sub qword [r12], rbx	      1536	convert.c	FUNCTION_44	IF_3
0x4000b20	        0x48295d00	                    sub qword [rbp], rbx	      1537	convert.c	FUNCTION_44	IF_3
0x4000b24	              0x5b	                                 pop rbx	      1540	convert.c	FUNCTION_44
0x4000b25	            0x31c0	                            xor eax, eax	      1540	convert.c	FUNCTION_44
0x4000b27	              0x5d	                                 pop rbp	      1540	convert.c	FUNCTION_44
0x4000b28	            0x415c	                                 pop r12	      1540	convert.c	FUNCTION_44
0x4000b2a	              0xc3	                                     ret	      1540	convert.c	FUNCTION_44
0x4000b2b	       0xf1f440000	                   nop dword [rax + rax]	      1540	convert.c	FUNCTION_44
0x4000b30	            0x31c0	                            xor eax, eax	      1540	convert.c	FUNCTION_44
0x4000b32	              0xc3	                                     ret	      1540	convert.c	FUNCTION_44
async_query_available_blobs	DO,0:WHILE,1:functions,0:FOR,0:SWITCH,0:ELSE,1:CALL,13:IF,6	121
0x4002e80	            0x4154	                                push r12	       916	convert.c	FUNCTION_24
0x4002e82	              0x55	                                push rbp	       916	convert.c	FUNCTION_24
0x4002e83	              0x53	                                push rbx	       916	convert.c	FUNCTION_24
0x4002e84	        0x4883ec20	                           sub rsp, 0x20	       916	convert.c	FUNCTION_24
0x4002e88	    0x64488b042528	                mov rax, qword fs:[0x28]	       916	convert.c	FUNCTION_24
0x4002e91	      0x4889442418	             mov qword [rsp + 0x18], rax	       916	convert.c	FUNCTION_24
0x4002e96	            0x31c0	                            xor eax, eax	       916	convert.c	FUNCTION_24
0x4002e98	    0x8b0500000000	            mov eax, dword [0x04002e9e] 	       923	convert.c	FUNCTION_24	CALL_1
0x4002e9e	    0x48c704240000	                      mov qword [rsp], 0	       921	convert.c	FUNCTION_24
0x4002ea6	    0x48c744240800	                  mov qword [rsp + 8], 0	       921	convert.c	FUNCTION_24
0x4002eaf	    0x48c744241000	               mov qword [rsp + 0x10], 0	       921	convert.c	FUNCTION_24
0x4002eb8	            0x85c0	                           test eax, eax	       923	convert.c	FUNCTION_24	CALL_1
0x4002eba	     0xf847e010000	                            je 0x400303e	       923	convert.c	FUNCTION_24	CALL_1
0x4002ec0	          0x4989fc	                            mov r12, rdi	       923	convert.c	FUNCTION_24	CALL_1
0x4002ec3	          0x4889f5	                            mov rbp, rsi	       923	convert.c	FUNCTION_24	CALL_1
0x4002ec6	          0x4889fe	                            mov rsi, rdi	       924	convert.c	FUNCTION_24	CALL_2
0x4002ec9	      0xbf00000000	                              mov edi, 0	       924	convert.c	FUNCTION_24	CALL_2
0x4002ece	      0xe800000000	                          call 0x4002ed3	       924	convert.c	FUNCTION_24	CALL_2
0x4002ed3	          0x4885c0	                           test rax, rax	       925	convert.c	FUNCTION_24	IF_1
0x4002ed6	          0x4889c3	                            mov rbx, rax	       924	convert.c	FUNCTION_24	CALL_2
0x4002ed9	     0xf8444010000	                            je 0x4003023	       925	convert.c	FUNCTION_24	IF_1
0x4002edf	      0xbe01000000	                              mov esi, 1	       931	convert.c	FUNCTION_24	CALL_3
0x4002ee4	      0xbf0d000000	                            mov edi, 0xd	       931	convert.c	FUNCTION_24	CALL_3
0x4002ee9	      0xe800000000	                          call 0x4002eee	       931	convert.c	FUNCTION_24	CALL_3
0x4002eee	          0x8b7b44	            mov edi, dword [rbx + 0x44] 	       933	convert.c	FUNCTION_24	CALL_4
0x4002ef1	            0x31c0	                            xor eax, eax	       933	convert.c	FUNCTION_24	CALL_4
0x4002ef3	      0xbe00000000	                              mov esi, 0	       933	convert.c	FUNCTION_24	CALL_4
0x4002ef8	      0xe800000000	                          call 0x4002efd	       933	convert.c	FUNCTION_24	CALL_4
0x4002efd	            0x85c0	                           test eax, eax	       935	convert.c	FUNCTION_24	IF_2
0x4002eff	            0x746e	                            je 0x4002f6f	       935	convert.c	FUNCTION_24	IF_2
0x4002f01	      0xbf0d000000	                            mov edi, 0xd	       957	convert.c	FUNCTION_24	CALL_12
0x4002f06	      0xe800000000	                          call 0x4002f0b	       957	convert.c	FUNCTION_24	CALL_12
0x4002f0b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f10	      0xbf00000000	                              mov edi, 0	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f15	      0xb906000000	                              mov ecx, 6	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f1a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f1c	           0xf97c0	                                 seta al	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f1f	           0xf92c2	                                 setb dl	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f22	            0x29d0	                            sub eax, edx	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f24	           0xfbec0	                           movsx eax, al	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f27	            0x85c0	                           test eax, eax	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f29	            0x7427	                            je 0x4002f52	       779	convert.c	FUNCTION_22	IF_1	CALL_1
0x4002f2b	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       793	convert.c	FUNCTION_22	ELSE_2
0x4002f2f	      0xbf00000000	                              mov edi, 0	       793	convert.c	FUNCTION_22	ELSE_2
0x4002f34	            0x31c0	                            xor eax, eax	       793	convert.c	FUNCTION_22	ELSE_2
0x4002f36	      0xe800000000	                          call 0x4002f3b	       793	convert.c	FUNCTION_22	ELSE_2
0x4002f3b	          0x4889de	                            mov rsi, rbx	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x4002f3e	      0xbf00000000	                              mov edi, 0	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x4002f43	      0xe800000000	                          call 0x4002f48	       794	convert.c	FUNCTION_22	ELSE_2	CALL_3
0x4002f48	          0x4889df	                            mov rdi, rbx	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4002f4b	      0xe800000000	                          call 0x4002f50	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4002f50	            0x31c0	                            xor eax, eax	       795	convert.c	FUNCTION_22	ELSE_2	CALL_4
0x4002f52	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       962	convert.c	FUNCTION_24
0x4002f57	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       962	convert.c	FUNCTION_24
0x4002f60	     0xf85d3000000	                           jne 0x4003039	       962	convert.c	FUNCTION_24
0x4002f66	        0x4883c420	                           add rsp, 0x20	       962	convert.c	FUNCTION_24
0x4002f6a	              0x5b	                                 pop rbx	       962	convert.c	FUNCTION_24
0x4002f6b	              0x5d	                                 pop rbp	       962	convert.c	FUNCTION_24
0x4002f6c	            0x415c	                                 pop r12	       962	convert.c	FUNCTION_24
0x4002f6e	              0xc3	                                     ret	       962	convert.c	FUNCTION_24
0x4002f6f	          0x8b7b44	            mov edi, dword [rbx + 0x44] 	       938	convert.c	FUNCTION_24	CALL_5
0x4002f72	      0xe800000000	                          call 0x4002f77	       938	convert.c	FUNCTION_24	CALL_5
0x4002f77	            0x85c0	                           test eax, eax	       939	convert.c	FUNCTION_24	IF_3
0x4002f79	            0x7586	                           jne 0x4002f01	       939	convert.c	FUNCTION_24	IF_3
0x4002f7b	       0xf1f440000	                   nop dword [rax + rax]	       939	convert.c	FUNCTION_24	IF_3
0x4002f80	          0x8b7b48	            mov edi, dword [rbx + 0x48] 	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002f83	            0x31f6	                            xor esi, esi	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002f85	      0xe800000000	                          call 0x4002f8a	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002f8a	          0x4885c0	                           test rax, rax	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002f8d	            0x7447	                            je 0x4002fd6	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002f8f	      0xba00000000	                              mov edx, 0	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002f94	            0xeb17	                           jmp 0x4002fad	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002f96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002fa0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4002fa4	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4002fa8	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4002fab	            0x75d3	                           jne 0x4002f80	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4002fad	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4002fb0	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4002fb2	            0x75ec	                           jne 0x4002fa0	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4002fb4	          0x4889c7	                            mov rdi, rax	       945	convert.c	FUNCTION_24	WHILE_1	CALL_9
0x4002fb7	      0xe800000000	                          call 0x4002fbc	       945	convert.c	FUNCTION_24	WHILE_1	CALL_9
0x4002fbc	          0x4889ef	                            mov rdi, rbp	       945	convert.c	FUNCTION_24	WHILE_1	CALL_9
0x4002fbf	          0x4889c6	                            mov rsi, rax	       945	convert.c	FUNCTION_24	WHILE_1	CALL_9
0x4002fc2	      0xe800000000	                          call 0x4002fc7	       945	convert.c	FUNCTION_24	WHILE_1	CALL_9
0x4002fc7	          0x8b7b48	            mov edi, dword [rbx + 0x48] 	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002fca	            0x31f6	                            xor esi, esi	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002fcc	      0xe800000000	                          call 0x4002fd1	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002fd1	          0x4885c0	                           test rax, rax	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002fd4	            0x75b9	                           jne 0x4002f8f	       942	convert.c	FUNCTION_24	WHILE_1	CALL_6
0x4002fd6	          0x8b7b48	            mov edi, dword [rbx + 0x48] 	       950	convert.c	FUNCTION_24	CALL_10
0x4002fd9	          0x4889e6	                            mov rsi, rsp	       950	convert.c	FUNCTION_24	CALL_10
0x4002fdc	      0xe800000000	                          call 0x4002fe1	       950	convert.c	FUNCTION_24	CALL_10
0x4002fe1	            0x85c0	                           test eax, eax	       951	convert.c	FUNCTION_24	IF_5
0x4002fe3	     0xf8518ffffff	                           jne 0x4002f01	       951	convert.c	FUNCTION_24	IF_5
0x4002fe9	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       954	convert.c	FUNCTION_24	CALL_11
0x4002fee	      0xbf00000000	                              mov edi, 0	       954	convert.c	FUNCTION_24	CALL_11
0x4002ff3	      0xb908000000	                              mov ecx, 8	       954	convert.c	FUNCTION_24	CALL_11
0x4002ff8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       954	convert.c	FUNCTION_24	CALL_11
0x4002ffa	      0xbf0d000000	                            mov edi, 0xd	       957	convert.c	FUNCTION_24	CALL_12
0x4002fff	        0x400f97c5	                                seta bpl	       954	convert.c	FUNCTION_24	CALL_11
0x4003003	           0xf92c0	                                 setb al	       954	convert.c	FUNCTION_24	CALL_11
0x4003006	            0x29c5	                            sub ebp, eax	       954	convert.c	FUNCTION_24	CALL_11
0x4003008	        0x400fbeed	                          movsx ebp, bpl	       954	convert.c	FUNCTION_24	CALL_11
0x400300c	      0xe800000000	                          call 0x4003011	       957	convert.c	FUNCTION_24	CALL_12
0x4003011	            0x85ed	                           test ebp, ebp	       959	convert.c	FUNCTION_24	IF_6
0x4003013	     0xf85f2feffff	                           jne 0x4002f0b	       959	convert.c	FUNCTION_24	IF_6
0x4003019	      0xb801000000	                              mov eax, 1	       959	convert.c	FUNCTION_24	IF_6
0x400301e	      0xe92fffffff	                           jmp 0x4002f52	       961	convert.c	FUNCTION_24
0x4003023	          0x4c89e6	                            mov rsi, r12	       926	convert.c	FUNCTION_24	IF_1
0x4003026	      0xbf00000000	                              mov edi, 0	       926	convert.c	FUNCTION_24	IF_1
0x400302b	            0x31c0	                            xor eax, eax	       926	convert.c	FUNCTION_24	IF_1
0x400302d	      0xe800000000	                          call 0x4003032	       926	convert.c	FUNCTION_24	IF_1
0x4003032	            0x31c0	                            xor eax, eax	       928	convert.c	FUNCTION_24	IF_1
0x4003034	      0xe919ffffff	                           jmp 0x4002f52	       928	convert.c	FUNCTION_24	IF_1
0x4003039	      0xe800000000	                          call 0x400303e	       962	convert.c	FUNCTION_24
0x400303e	      0xb900000000	                              mov ecx, 0	       923	convert.c	FUNCTION_24	CALL_1
0x4003043	      0xba9b030000	                          mov edx, 0x39b	       923	convert.c	FUNCTION_24	CALL_1
0x4003048	      0xbe00000000	                              mov esi, 0	       923	convert.c	FUNCTION_24	CALL_1
0x400304d	      0xbf00000000	                              mov edi, 0	       923	convert.c	FUNCTION_24	CALL_1
0x4003052	      0xe800000000	                          call 0x4003057	       923	convert.c	FUNCTION_24	CALL_1
get_stream_filter	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,1:CALL,6:IF,5	122
0x4004120	            0x4154	                                push r12	      1930	convert.c	FUNCTION_58
0x4004122	              0x55	                                push rbp	      1930	convert.c	FUNCTION_58
0x4004123	          0x4889f5	                            mov rbp, rsi	      1930	convert.c	FUNCTION_58
0x4004126	              0x53	                                push rbx	      1930	convert.c	FUNCTION_58
0x4004127	          0x4889fe	                            mov rsi, rdi	      1934	convert.c	FUNCTION_58	CALL_1
0x400412a	        0x4883ec30	                           sub rsp, 0x30	      1930	convert.c	FUNCTION_58
0x400412e	          0x4889e7	                            mov rdi, rsp	      1934	convert.c	FUNCTION_58	CALL_1
0x4004131	    0x64488b042528	                mov rax, qword fs:[0x28]	      1930	convert.c	FUNCTION_58
0x400413a	      0x4889442428	             mov qword [rsp + 0x28], rax	      1930	convert.c	FUNCTION_58
0x400413f	            0x31c0	                            xor eax, eax	      1930	convert.c	FUNCTION_58
0x4004141	      0xe8aad4ffff	                  call sym.convert_attrs	      1934	convert.c	FUNCTION_58	CALL_1
0x4004146	        0x488b1424	                    mov rdx, qword [rsp]	      1935	convert.c	FUNCTION_58	IF_1
0x400414a	          0x4885d2	                           test rdx, rdx	      1935	convert.c	FUNCTION_58	IF_1
0x400414d	            0x7423	                            je 0x4004172	      1935	convert.c	FUNCTION_58	IF_1
0x400414f	            0x31db	                            xor ebx, ebx	      1936	convert.c	FUNCTION_58	IF_1
0x4004151	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      1935	convert.c	FUNCTION_58	IF_1
0x4004156	     0xf85c4000000	                           jne 0x4004220	      1935	convert.c	FUNCTION_58	IF_1
0x400415c	      0x48837a1000	               cmp qword [rdx + 0x10], 0	      1935	convert.c	FUNCTION_58	IF_1
0x4004161	     0xf85b9000000	                           jne 0x4004220	      1935	convert.c	FUNCTION_58	IF_1
0x4004167	      0x48837a1800	               cmp qword [rdx + 0x18], 0	      1935	convert.c	FUNCTION_58	IF_1
0x400416c	     0xf85ae000000	                           jne 0x4004220	      1935	convert.c	FUNCTION_58	IF_1
0x4004172	            0x31db	                            xor ebx, ebx	      1936	convert.c	FUNCTION_58	IF_1
0x4004174	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      1938	convert.c	FUNCTION_58	IF_2
0x400417a	     0xf85a0000000	                           jne 0x4004220	      1938	convert.c	FUNCTION_58	IF_2
0x4004180	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1941	convert.c	FUNCTION_58	IF_3
0x4004184	            0x89f0	                            mov eax, esi	      1941	convert.c	FUNCTION_58	IF_3
0x4004186	          0x83e0fd	                     and eax, 0xfffffffd	      1941	convert.c	FUNCTION_58	IF_3
0x4004189	          0x83f805	                              cmp eax, 5	      1941	convert.c	FUNCTION_58	IF_3
0x400418c	     0xf848e000000	                            je 0x4004220	      1941	convert.c	FUNCTION_58	IF_3
0x4004192	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1944	convert.c	FUNCTION_58	IF_4
0x4004196	            0x85c0	                           test eax, eax	      1944	convert.c	FUNCTION_58	IF_4
0x4004198	     0xf85c2000000	                           jne 0x4004260	      1944	convert.c	FUNCTION_58	IF_4
0x400419e	          0x83fe07	                              cmp esi, 7	       176	convert.c	FUNCTION_8	SWITCH_1
0x40041a1	     0xf8799000000	                            ja 0x4004240	       176	convert.c	FUNCTION_8	SWITCH_1
0x40041a7	    0xff24f5000000	                       jmp qword [rsi*8]	       176	convert.c	FUNCTION_8	SWITCH_1
0x40041ae	    0x8b0500000000	            mov eax, dword [0x040041b4] 	       163	convert.c	FUNCTION_7	IF_1
0x40041b4	          0x83f801	                              cmp eax, 1	       163	convert.c	FUNCTION_7	IF_1
0x40041b7	     0xf851d010000	                           jne 0x40042da	       163	convert.c	FUNCTION_7	IF_1
0x40041bd	           0xf1f00	                         nop dword [rax]	       163	convert.c	FUNCTION_7	IF_1
0x40041c0	      0xbe10000000	                           mov esi, 0x10	      1663	convert.c	FUNCTION_49	CALL_1
0x40041c5	      0xbf01000000	                              mov edi, 1	      1663	convert.c	FUNCTION_49	CALL_1
0x40041ca	      0xe800000000	                          call 0x40041cf	      1663	convert.c	FUNCTION_49	CALL_1
0x40041cf	          0x4084ed	                           test bpl, bpl	      1762	convert.c	FUNCTION_52	IF_1	CALL_1
0x40041d2	          0x4989c4	                            mov r12, rax	      1663	convert.c	FUNCTION_49	CALL_1
0x40041d5	    0x48c700000000	                      mov qword [rax], 0	      1665	convert.c	FUNCTION_49
0x40041dc	     0xf854f010000	                           jne 0x4004331	      1762	convert.c	FUNCTION_52	IF_1	CALL_1
0x40041e2	    0x483d00000000	                              cmp rax, 0	      1764	convert.c	FUNCTION_52	IF_2	CALL_2
0x40041e8	            0x7436	                            je 0x4004220	      1764	convert.c	FUNCTION_52	IF_2	CALL_2
0x40041ea	      0xbf20040000	                          mov edi, 0x420	      1767	convert.c	FUNCTION_52	CALL_3
0x40041ef	      0xe800000000	                          call 0x40041f4	      1767	convert.c	FUNCTION_52	CALL_3
0x40041f4	        0x48895808	                mov qword [rax + 8], rbx	      1768	convert.c	FUNCTION_52
0x40041f8	        0x4c896010	             mov qword [rax + 0x10], r12	      1769	convert.c	FUNCTION_52
0x40041fc	          0x4889c3	                            mov rbx, rax	      1771	convert.c	FUNCTION_52
0x40041ff	    0xc7801c040000	              mov dword [rax + 0x41c], 0	      1770	convert.c	FUNCTION_52
0x4004209	    0xc78018040000	              mov dword [rax + 0x418], 0	      1770	convert.c	FUNCTION_52
0x4004213	    0x48c700000000	                      mov qword [rax], 0	      1771	convert.c	FUNCTION_52
0x400421a	    0x660f1f440000	                    nop word [rax + rax]	      1771	convert.c	FUNCTION_52
0x4004220	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1953	convert.c	FUNCTION_58
0x4004225	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1953	convert.c	FUNCTION_58
0x400422e	          0x4889d8	                            mov rax, rbx	      1953	convert.c	FUNCTION_58
0x4004231	     0xf85f5000000	                           jne 0x400432c	      1953	convert.c	FUNCTION_58
0x4004237	        0x4883c430	                           add rsp, 0x30	      1953	convert.c	FUNCTION_58
0x400423b	              0x5b	                                 pop rbx	      1953	convert.c	FUNCTION_58
0x400423c	              0x5d	                                 pop rbp	      1953	convert.c	FUNCTION_58
0x400423d	            0x415c	                                 pop r12	      1953	convert.c	FUNCTION_58
0x400423f	              0xc3	                                     ret	      1953	convert.c	FUNCTION_58
0x4004240	            0x31c0	                            xor eax, eax	       193	convert.c	FUNCTION_8	CALL_2
0x4004242	      0xbf00000000	                              mov edi, 0	       193	convert.c	FUNCTION_8	CALL_2
0x4004247	      0xe800000000	                          call 0x400424c	       193	convert.c	FUNCTION_8	CALL_2
0x400424c	    0x833d00000000	               cmp dword [0x04004253], 1	      1947	convert.c	FUNCTION_58	IF_5	CALL_3
0x4004253	     0xf84a7000000	                            je 0x4004300	      1947	convert.c	FUNCTION_58	IF_5	CALL_3
0x4004259	      0xbb00000000	                              mov ebx, 0	      1763	convert.c	FUNCTION_52	IF_1
0x400425e	            0xebc0	                           jmp 0x4004220	      1763	convert.c	FUNCTION_52	IF_1
0x4004260	      0xbf58000000	                           mov edi, 0x58	      1911	convert.c	FUNCTION_57	CALL_1
0x4004265	      0xe800000000	                          call 0x400426a	      1911	convert.c	FUNCTION_57	CALL_1
0x400426a	          0x4889ef	                            mov rdi, rbp	      1913	convert.c	FUNCTION_57	CALL_2
0x400426d	          0x4889c3	                            mov rbx, rax	      1911	convert.c	FUNCTION_57	CALL_1
0x4004270	      0xe800000000	                          call 0x4004275	      1913	convert.c	FUNCTION_57	CALL_2
0x4004275	        0x488d7b24	                   lea rdi, [rbx + 0x24]	      1913	convert.c	FUNCTION_57	CALL_2
0x4004279	          0x4889c1	                            mov rcx, rax	      1913	convert.c	FUNCTION_57	CALL_2
0x400427c	      0xba00000000	                              mov edx, 0	      1913	convert.c	FUNCTION_57	CALL_2
0x4004281	      0xbe2d000000	                           mov esi, 0x2d	      1913	convert.c	FUNCTION_57	CALL_2
0x4004286	            0x31c0	                            xor eax, eax	      1913	convert.c	FUNCTION_57	CALL_2
0x4004288	      0xe800000000	                          call 0x400428d	      1913	convert.c	FUNCTION_57	CALL_2
0x400428d	        0x488d7b08	                      lea rdi, [rbx + 8]	      1915	convert.c	FUNCTION_57	CALL_4
0x4004291	            0x31f6	                            xor esi, esi	      1915	convert.c	FUNCTION_57	CALL_4
0x4004293	      0xe800000000	                          call 0x4004298	      1915	convert.c	FUNCTION_57	CALL_4
0x4004298	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1947	convert.c	FUNCTION_58	IF_5	CALL_3
0x400429c	    0x4881fb000000	                              cmp rbx, 0	      1947	convert.c	FUNCTION_58	IF_5	CALL_3
0x40042a3	    0x48c703000000	                      mov qword [rbx], 0	      1916	convert.c	FUNCTION_57
0x40042aa	        0x400f94c5	                                sete bpl	      1916	convert.c	FUNCTION_57
0x40042ae	    0xc74320000000	               mov dword [rbx + 0x20], 0	      1917	convert.c	FUNCTION_57
0x40042b5	          0x83fe07	                              cmp esi, 7	       176	convert.c	FUNCTION_8	SWITCH_1
0x40042b8	            0x7764	                            ja 0x400431e	       176	convert.c	FUNCTION_8	SWITCH_1
0x40042ba	    0xff24f5000000	                       jmp qword [rsi*8]	       176	convert.c	FUNCTION_8	SWITCH_1
0x40042c1	     0xf1f80000000	                         nop dword [rax]	       176	convert.c	FUNCTION_8	SWITCH_1
0x40042c8	    0x8b0500000000	            mov eax, dword [0x040042ce] 	       163	convert.c	FUNCTION_7	IF_1
0x40042ce	          0x83f801	                              cmp eax, 1	       163	convert.c	FUNCTION_7	IF_1
0x40042d1	            0x742d	                            je 0x4004300	       163	convert.c	FUNCTION_7	IF_1
0x40042d3	      0xbd01000000	                              mov ebp, 1	       163	convert.c	FUNCTION_7	IF_1
0x40042d8	            0x31db	                            xor ebx, ebx	      1932	convert.c	FUNCTION_58
0x40042da	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       165	convert.c	FUNCTION_7	ELSE_1	IF_2
0x40042dd	            0x740d	                            je 0x40042ec	       165	convert.c	FUNCTION_7	ELSE_1	IF_2
0x40042df	    0x833d00000000	               cmp dword [0x040042e6], 1	      1947	convert.c	FUNCTION_58	IF_5	CALL_3
0x40042e6	     0xf84d4feffff	                            je 0x40041c0	      1947	convert.c	FUNCTION_58	IF_5	CALL_3
0x40042ec	          0x4084ed	                           test bpl, bpl	      1762	convert.c	FUNCTION_52	IF_1	CALL_1
0x40042ef	     0xf842bffffff	                            je 0x4004220	      1762	convert.c	FUNCTION_52	IF_1	CALL_1
0x40042f5	      0xe95fffffff	                           jmp 0x4004259	      1762	convert.c	FUNCTION_52	IF_1	CALL_1
0x40042fa	    0x660f1f440000	                    nop word [rax + rax]	      1762	convert.c	FUNCTION_52	IF_1	CALL_1
0x4004300	      0xbe10000000	                           mov esi, 0x10	      1663	convert.c	FUNCTION_49	CALL_1
0x4004305	      0xbf01000000	                              mov edi, 1	      1663	convert.c	FUNCTION_49	CALL_1
0x400430a	      0xe800000000	                          call 0x400430f	      1663	convert.c	FUNCTION_49	CALL_1
0x400430f	    0x48c700000000	                      mov qword [rax], 0	      1665	convert.c	FUNCTION_49
0x4004316	          0x4889c3	                            mov rbx, rax	      1663	convert.c	FUNCTION_49	CALL_1
0x4004319	      0xe902ffffff	                           jmp 0x4004220	      1663	convert.c	FUNCTION_49	CALL_1
0x400431e	      0xbf00000000	                              mov edi, 0	       193	convert.c	FUNCTION_8	CALL_2
0x4004323	            0x31c0	                            xor eax, eax	       193	convert.c	FUNCTION_8	CALL_2
0x4004325	      0xe800000000	                          call 0x400432a	       193	convert.c	FUNCTION_8	CALL_2
0x400432a	            0xebb3	                           jmp 0x40042df	       193	convert.c	FUNCTION_8	CALL_2
0x400432c	      0xe800000000	                          call 0x4004331	      1953	convert.c	FUNCTION_58
0x4004331	          0x4889c3	                            mov rbx, rax	      1663	convert.c	FUNCTION_49	CALL_1
0x4004334	      0xe9e7feffff	                           jmp 0x4004220	      1663	convert.c	FUNCTION_49	CALL_1
get_cached_convert_stats_ascii	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,0	64
0x4002c80	              0x53	                                push rbx	       142	convert.c	FUNCTION_5
0x4002c81	        0x4883ec30	                           sub rsp, 0x30	       142	convert.c	FUNCTION_5
0x4002c85	      0x488d542408	                      lea rdx, [rsp + 8]	       145	convert.c	FUNCTION_5	CALL_1
0x4002c8a	    0x64488b042528	                mov rax, qword fs:[0x28]	       142	convert.c	FUNCTION_5
0x4002c93	      0x4889442428	             mov qword [rsp + 0x28], rax	       142	convert.c	FUNCTION_5
0x4002c98	            0x31c0	                            xor eax, eax	       142	convert.c	FUNCTION_5
0x4002c9a	      0xe800000000	                          call 0x4002c9f	       145	convert.c	FUNCTION_5	CALL_1
0x4002c9f	          0x4885c0	                           test rax, rax	       109	convert.c	FUNCTION_3	IF_1
0x4002ca2	          0x4989c2	                            mov r10, rax	       145	convert.c	FUNCTION_5	CALL_1
0x4002ca5	      0x488b742408	                mov rsi, qword [rsp + 8]	       146	convert.c	FUNCTION_5	CALL_2
0x4002caa	            0x7405	                            je 0x4002cb1	       109	convert.c	FUNCTION_3	IF_1
0x4002cac	          0x4885f6	                           test rsi, rsi	       109	convert.c	FUNCTION_3	IF_1
0x4002caf	            0x752f	                           jne 0x4002ce0	       109	convert.c	FUNCTION_3	IF_1
0x4002cb1	      0xbb00000000	                              mov ebx, 0	       127	convert.c	FUNCTION_4	IF_1
0x4002cb6	          0x4c89d7	                            mov rdi, r10	       147	convert.c	FUNCTION_5	CALL_3
0x4002cb9	      0xe800000000	                          call 0x4002cbe	       147	convert.c	FUNCTION_5	CALL_3
0x4002cbe	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       149	convert.c	FUNCTION_5
0x4002cc3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       149	convert.c	FUNCTION_5
0x4002ccc	          0x4889d8	                            mov rax, rbx	       149	convert.c	FUNCTION_5
0x4002ccf	            0x757d	                           jne 0x4002d4e	       149	convert.c	FUNCTION_5
0x4002cd1	        0x4883c430	                           add rsp, 0x30	       149	convert.c	FUNCTION_5
0x4002cd5	              0x5b	                                 pop rbx	       149	convert.c	FUNCTION_5
0x4002cd6	              0xc3	                                     ret	       149	convert.c	FUNCTION_5
0x4002cd7	    0x660f1f840000	                    nop word [rax + rax]	       149	convert.c	FUNCTION_5
0x4002ce0	      0x488d542410	                   lea rdx, [rsp + 0x10]	       111	convert.c	FUNCTION_3	CALL_1
0x4002ce5	          0x4889c7	                            mov rdi, rax	       111	convert.c	FUNCTION_3	CALL_1
0x4002ce8	      0xe853d7ffff	                   call sym.gather_stats	       111	convert.c	FUNCTION_3	CALL_1
0x4002ced	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	        96	convert.c	FUNCTION_2	IF_1
0x4002cf2	          0x4585c0	                           test r8d, r8d	        96	convert.c	FUNCTION_2	IF_1
0x4002cf5	            0x7431	                            je 0x4002d28	        96	convert.c	FUNCTION_2	IF_1
0x4002cf7	      0xba06000000	                              mov edx, 6	        98	convert.c	FUNCTION_2	IF_2
0x4002cfc	      0xb804000000	                              mov eax, 4	       113	convert.c	FUNCTION_3	IF_2
0x4002d01	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	       114	convert.c	FUNCTION_3	IF_3
0x4002d05	        0x8b742418	            mov esi, dword [rsp + 0x18] 	       117	convert.c	FUNCTION_3	IF_4
0x4002d09	            0x85c9	                           test ecx, ecx	       114	convert.c	FUNCTION_3	IF_3
0x4002d0b	           0xf44d0	                          cmove edx, eax	       114	convert.c	FUNCTION_3	IF_3
0x4002d0e	            0x89d0	                            mov eax, edx	       117	convert.c	FUNCTION_3	IF_4
0x4002d10	          0x83c801	                               or eax, 1	       117	convert.c	FUNCTION_3	IF_4
0x4002d13	            0x85f6	                           test esi, esi	       117	convert.c	FUNCTION_3	IF_4
0x4002d15	           0xf45d0	                         cmovne edx, eax	       117	convert.c	FUNCTION_3	IF_4
0x4002d18	          0xf6c204	                              test dl, 4	       126	convert.c	FUNCTION_4	IF_1
0x4002d1b	            0x7436	                            je 0x4002d53	       126	convert.c	FUNCTION_4	IF_1
0x4002d1d	      0xbb00000000	                              mov ebx, 0	       127	convert.c	FUNCTION_4	IF_1
0x4002d22	            0xeb92	                           jmp 0x4002cb6	       127	convert.c	FUNCTION_4	IF_1
0x4002d24	         0xf1f4000	                         nop dword [rax]	       127	convert.c	FUNCTION_4	IF_1
0x4002d28	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	        98	convert.c	FUNCTION_2	IF_2
0x4002d2c	            0x85ff	                           test edi, edi	        98	convert.c	FUNCTION_2	IF_2
0x4002d2e	            0x75c7	                           jne 0x4002cf7	        98	convert.c	FUNCTION_2	IF_2
0x4002d30	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       100	convert.c	FUNCTION_2	IF_3
0x4002d34	          0xc1e807	                              shr eax, 7	       100	convert.c	FUNCTION_2	IF_3
0x4002d37	        0x3b442424	            cmp eax, dword [rsp + 0x24] 	       100	convert.c	FUNCTION_2	IF_3
0x4002d3b	            0x19d2	                            sbb edx, edx	       100	convert.c	FUNCTION_2	IF_3
0x4002d3d	          0x83e204	                              and edx, 4	       100	convert.c	FUNCTION_2	IF_3
0x4002d40	          0x83c202	                              add edx, 2	       100	convert.c	FUNCTION_2	IF_3
0x4002d43	        0x3b442424	            cmp eax, dword [rsp + 0x24] 	       100	convert.c	FUNCTION_2	IF_3
0x4002d47	            0x19c0	                            sbb eax, eax	       100	convert.c	FUNCTION_2	IF_3
0x4002d49	          0x83e004	                              and eax, 4	       100	convert.c	FUNCTION_2	IF_3
0x4002d4c	            0xebb3	                           jmp 0x4002d01	       100	convert.c	FUNCTION_2	IF_3
0x4002d4e	      0xe800000000	                          call 0x4002d53	       149	convert.c	FUNCTION_5
0x4002d53	          0x83ea01	                              sub edx, 1	       149	convert.c	FUNCTION_5
0x4002d56	          0x83fa02	                              cmp edx, 2	       149	convert.c	FUNCTION_5
0x4002d59	     0xf8752ffffff	                            ja 0x4002cb1	       149	convert.c	FUNCTION_5
0x4002d5f	    0x488b1cd50000	                  mov rbx, qword [rdx*8]	       149	convert.c	FUNCTION_5
0x4002d67	      0xe94affffff	                           jmp 0x4002cb6	       149	convert.c	FUNCTION_5
cascade_free_fn	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,0	11
0x4000410	              0x53	                                push rbx	      1745	convert.c	FUNCTION_51
0x4000411	          0x4889fb	                            mov rbx, rdi	      1745	convert.c	FUNCTION_51
0x4000414	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1747	convert.c	FUNCTION_51	CALL_1
0x4000418	          0x488b07	                    mov rax, qword [rdi]	      1957	convert.c	FUNCTION_59	CALL_1
0x400041b	          0xff5008	                    call qword [rax + 8]	      1957	convert.c	FUNCTION_59	CALL_1
0x400041e	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1748	convert.c	FUNCTION_51	CALL_2
0x4000422	          0x488b07	                    mov rax, qword [rdi]	      1957	convert.c	FUNCTION_59	CALL_1
0x4000425	          0xff5008	                    call qword [rax + 8]	      1957	convert.c	FUNCTION_59	CALL_1
0x4000428	          0x4889df	                            mov rdi, rbx	      1749	convert.c	FUNCTION_51	CALL_3
0x400042b	              0x5b	                                 pop rbx	      1750	convert.c	FUNCTION_51
0x400042c	      0xe900000000	                           jmp 0x4000431	      1749	convert.c	FUNCTION_51	CALL_3
filter_buffer_or_fd	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,1:CALL,12:IF,7	134
0x40006f0	            0x4154	                                push r12	       639	convert.c	FUNCTION_19
0x40006f2	              0x55	                                push rbp	       639	convert.c	FUNCTION_19
0x40006f3	      0xb90c000000	                            mov ecx, 0xc	       643	convert.c	FUNCTION_19
0x40006f8	              0x53	                                push rbx	       639	convert.c	FUNCTION_19
0x40006f9	            0x89f5	                            mov ebp, esi	       639	convert.c	FUNCTION_19
0x40006fb	          0x4889d3	                            mov rbx, rdx	       639	convert.c	FUNCTION_19
0x40006fe	    0x4881ece00000	                           sub rsp, 0xe0	       639	convert.c	FUNCTION_19
0x4000705	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	       657	convert.c	FUNCTION_19	CALL_1
0x4000709	    0x64488b042528	                mov rax, qword fs:[0x28]	       639	convert.c	FUNCTION_19
0x4000712	    0x48898424d800	             mov qword [rsp + 0xd8], rax	       639	convert.c	FUNCTION_19
0x400071a	            0x31c0	                            xor eax, eax	       639	convert.c	FUNCTION_19
0x400071c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       643	convert.c	FUNCTION_19
0x4000721	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       646	convert.c	FUNCTION_19
0x400072d	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       646	convert.c	FUNCTION_19
0x4000739	    0x48c704240000	                      mov qword [rsp], 0	       649	convert.c	FUNCTION_19
0x4000741	    0x48c744240800	                  mov qword [rsp + 8], 0	       649	convert.c	FUNCTION_19
0x400074a	          0xf348ab	              rep stosq qword [rdi], rax	       643	convert.c	FUNCTION_19
0x400074d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       657	convert.c	FUNCTION_19	CALL_1
0x4000752	    0x48c744244800	               mov qword [rsp + 0x48], 0	       643	convert.c	FUNCTION_19
0x400075b	    0x48c744245800	               mov qword [rsp + 0x58], 0	       643	convert.c	FUNCTION_19
0x4000764	    0x48c744241000	               mov qword [rsp + 0x10], 0	       649	convert.c	FUNCTION_19
0x400076d	    0x48c744242000	               mov qword [rsp + 0x20], 0	       650	convert.c	FUNCTION_19
0x4000776	    0x48c744242800	               mov qword [rsp + 0x28], 0	       650	convert.c	FUNCTION_19
0x400077f	    0x48c744243000	               mov qword [rsp + 0x30], 0	       650	convert.c	FUNCTION_19
0x4000788	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       651	convert.c	FUNCTION_19
0x4000794	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	       651	convert.c	FUNCTION_19
0x40007a0	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       651	convert.c	FUNCTION_19
0x40007ac	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       651	convert.c	FUNCTION_19
0x40007b8	      0xe800000000	                          call 0x40007bd	       657	convert.c	FUNCTION_19	CALL_1
0x40007bd	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       658	convert.c	FUNCTION_19
0x40007c2	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       661	convert.c	FUNCTION_19	CALL_2
0x40007c6	    0x488d8c24b000	                   lea rcx, [rsp + 0xb0]	       661	convert.c	FUNCTION_19	CALL_2
0x40007ce	      0xba00000000	                              mov edx, 0	       661	convert.c	FUNCTION_19	CALL_2
0x40007d3	          0x4889e7	                            mov rdi, rsp	       661	convert.c	FUNCTION_19	CALL_2
0x40007d6	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       658	convert.c	FUNCTION_19
0x40007de	      0xe800000000	                          call 0x40007e3	       661	convert.c	FUNCTION_19	CALL_2
0x40007e3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       662	convert.c	FUNCTION_19	CALL_3
0x40007e8	      0xe800000000	                          call 0x40007ed	       662	convert.c	FUNCTION_19	CALL_3
0x40007ed	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       664	convert.c	FUNCTION_19
0x40007f2	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       671	convert.c	FUNCTION_19	IF_1	CALL_4
0x40007f7	    0x808c24880000	              or byte [rsp + 0x88], 0x40	       667	convert.c	FUNCTION_19
0x40007ff	    0xc744246cffff	     mov dword [rsp + 0x6c], 0xffffffff 	       668	convert.c	FUNCTION_19
0x4000807	        0x896c2470	             mov dword [rsp + 0x70], ebp	       669	convert.c	FUNCTION_19
0x400080b	    0x48898424a000	             mov qword [rsp + 0xa0], rax	       664	convert.c	FUNCTION_19
0x4000813	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       666	convert.c	FUNCTION_19
0x400081b	      0x4889442440	             mov qword [rsp + 0x40], rax	       666	convert.c	FUNCTION_19
0x4000820	      0xe800000000	                          call 0x4000825	       671	convert.c	FUNCTION_19	IF_1	CALL_4
0x4000825	            0x85c0	                           test eax, eax	       671	convert.c	FUNCTION_19	IF_1	CALL_4
0x4000827	     0xf853b010000	                           jne 0x4000968	       671	convert.c	FUNCTION_19	IF_1	CALL_4
0x400082d	      0xbe01000000	                              mov esi, 1	       676	convert.c	FUNCTION_19	CALL_6
0x4000832	      0xbf0d000000	                            mov edi, 0xd	       676	convert.c	FUNCTION_19	CALL_6
0x4000837	      0xe800000000	                          call 0x400083c	       676	convert.c	FUNCTION_19	CALL_6
0x400083c	          0x488b33	                    mov rsi, qword [rbx]	       678	convert.c	FUNCTION_19	IF_2
0x400083f	          0x4885f6	                           test rsi, rsi	       678	convert.c	FUNCTION_19	IF_2
0x4000842	     0xf8498000000	                            je 0x40008e0	       678	convert.c	FUNCTION_19	IF_2
0x4000848	        0x488b5308	                mov rdx, qword [rbx + 8]	       679	convert.c	FUNCTION_19	IF_2	CALL_7
0x400084c	        0x8b7c246c	            mov edi, dword [rsp + 0x6c] 	       679	convert.c	FUNCTION_19	IF_2	CALL_7
0x4000850	      0xe800000000	                          call 0x4000855	       679	convert.c	FUNCTION_19	IF_2	CALL_7
0x4000855	          0x4889c5	                            mov rbp, rax	       679	convert.c	FUNCTION_19	IF_2	CALL_7
0x4000858	        0x48c1ed3f	                           shr rbp, 0x3f	       679	convert.c	FUNCTION_19	IF_2	CALL_7
0x400085c	      0xe800000000	                          call 0x4000861	       681	convert.c	FUNCTION_19	IF_2	IF_3
0x4000861	          0x833820	                   cmp dword [rax], 0x20	       681	convert.c	FUNCTION_19	IF_2	IF_3
0x4000864	     0xf84e6000000	                            je 0x4000950	       681	convert.c	FUNCTION_19	IF_2	IF_3
0x400086a	        0x8b7c246c	            mov edi, dword [rsp + 0x6c] 	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x400086e	      0xe800000000	                          call 0x4000873	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x4000873	            0x85c0	                           test eax, eax	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x4000875	     0xf8595000000	                           jne 0x4000910	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x400087b	            0x85ed	                           test ebp, ebp	       691	convert.c	FUNCTION_19	IF_6
0x400087d	     0xf8592000000	                           jne 0x4000915	       691	convert.c	FUNCTION_19	IF_6
0x4000883	            0x31ed	                            xor ebp, ebp	       690	convert.c	FUNCTION_19	IF_5
0x4000885	      0xbf0d000000	                            mov edi, 0xd	       694	convert.c	FUNCTION_19	CALL_10
0x400088a	      0xe800000000	                          call 0x400088f	       694	convert.c	FUNCTION_19	CALL_10
0x400088f	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       696	convert.c	FUNCTION_19	CALL_11
0x4000894	      0xe800000000	                          call 0x4000899	       696	convert.c	FUNCTION_19	CALL_11
0x4000899	            0x85c0	                           test eax, eax	       697	convert.c	FUNCTION_19	IF_7
0x400089b	          0x4189c4	                           mov r12d, eax	       696	convert.c	FUNCTION_19	CALL_11
0x400089e	     0xf858c000000	                           jne 0x4000930	       697	convert.c	FUNCTION_19	IF_7
0x40008a4	          0x4889e7	                            mov rdi, rsp	       700	convert.c	FUNCTION_19	CALL_12
0x40008a7	      0xe800000000	                          call 0x40008ac	       700	convert.c	FUNCTION_19	CALL_12
0x40008ac	            0x31c0	                            xor eax, eax	       701	convert.c	FUNCTION_19
0x40008ae	          0x4109ec	                            or r12d, ebp	       701	convert.c	FUNCTION_19
0x40008b1	           0xf95c0	                                setne al	       701	convert.c	FUNCTION_19
0x40008b4	    0x488b9424d800	            mov rdx, qword [rsp + 0xd8] 	       702	convert.c	FUNCTION_19
0x40008bc	    0x644833142528	                xor rdx, qword fs:[0x28]	       702	convert.c	FUNCTION_19
0x40008c5	     0xf85bf000000	                           jne 0x400098a	       702	convert.c	FUNCTION_19
0x40008cb	    0x4881c4e00000	                           add rsp, 0xe0	       702	convert.c	FUNCTION_19
0x40008d2	              0x5b	                                 pop rbx	       702	convert.c	FUNCTION_19
0x40008d3	              0x5d	                                 pop rbp	       702	convert.c	FUNCTION_19
0x40008d4	            0x415c	                                 pop r12	       702	convert.c	FUNCTION_19
0x40008d6	              0xc3	                                     ret	       702	convert.c	FUNCTION_19
0x40008d7	    0x660f1f840000	                    nop word [rax + rax]	       702	convert.c	FUNCTION_19
0x40008e0	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       684	convert.c	FUNCTION_19	ELSE_1	CALL_8
0x40008e3	        0x8b74246c	            mov esi, dword [rsp + 0x6c] 	       684	convert.c	FUNCTION_19	ELSE_1	CALL_8
0x40008e7	      0xe800000000	                          call 0x40008ec	       684	convert.c	FUNCTION_19	ELSE_1	CALL_8
0x40008ec	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	       685	convert.c	FUNCTION_19	ELSE_1	IF_4
0x40008ef	            0x89c5	                            mov ebp, eax	       684	convert.c	FUNCTION_19	ELSE_1	CALL_8
0x40008f1	     0xf8573ffffff	                           jne 0x400086a	       685	convert.c	FUNCTION_19	ELSE_1	IF_4
0x40008f7	      0xe800000000	                          call 0x40008fc	       685	convert.c	FUNCTION_19	ELSE_1	IF_4
0x40008fc	          0x833820	                   cmp dword [rax], 0x20	       685	convert.c	FUNCTION_19	ELSE_1	IF_4
0x40008ff	            0x744f	                            je 0x4000950	       685	convert.c	FUNCTION_19	ELSE_1	IF_4
0x4000901	        0x8b7c246c	            mov edi, dword [rsp + 0x6c] 	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x4000905	      0xe800000000	                          call 0x400090a	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x400090a	            0x85c0	                           test eax, eax	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x400090c	            0x7407	                            je 0x4000915	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x400090e	            0x6690	                                     nop	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x4000910	      0xbd01000000	                              mov ebp, 1	       690	convert.c	FUNCTION_19	IF_5
0x4000915	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       692	convert.c	FUNCTION_19	IF_6
0x4000919	      0xbf00000000	                              mov edi, 0	       692	convert.c	FUNCTION_19	IF_6
0x400091e	            0x31c0	                            xor eax, eax	       692	convert.c	FUNCTION_19	IF_6
0x4000920	      0xe800000000	                          call 0x4000925	       692	convert.c	FUNCTION_19	IF_6
0x4000925	      0xe95bffffff	                           jmp 0x4000885	       692	convert.c	FUNCTION_19	IF_6
0x400092a	    0x660f1f440000	                    nop word [rax + rax]	       692	convert.c	FUNCTION_19	IF_6
0x4000930	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       698	convert.c	FUNCTION_19	IF_7
0x4000934	            0x89c2	                            mov edx, eax	       698	convert.c	FUNCTION_19	IF_7
0x4000936	      0xbf00000000	                              mov edi, 0	       698	convert.c	FUNCTION_19	IF_7
0x400093b	            0x31c0	                            xor eax, eax	       698	convert.c	FUNCTION_19	IF_7
0x400093d	      0xe800000000	                          call 0x4000942	       698	convert.c	FUNCTION_19	IF_7
0x4000942	      0xe95dffffff	                           jmp 0x40008a4	       698	convert.c	FUNCTION_19	IF_7
0x4000947	    0x660f1f840000	                    nop word [rax + rax]	       698	convert.c	FUNCTION_19	IF_7
0x4000950	        0x8b7c246c	            mov edi, dword [rsp + 0x6c] 	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x4000954	      0xe800000000	                          call 0x4000959	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x4000959	            0x85c0	                           test eax, eax	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x400095b	            0x75b3	                           jne 0x4000910	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x400095d	      0xe921ffffff	                           jmp 0x4000883	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x4000962	    0x660f1f440000	                    nop word [rax + rax]	       689	convert.c	FUNCTION_19	IF_5	CALL_9
0x4000968	          0x4889e7	                            mov rdi, rsp	       672	convert.c	FUNCTION_19	IF_1	CALL_5
0x400096b	      0xe800000000	                          call 0x4000970	       672	convert.c	FUNCTION_19	IF_1	CALL_5
0x4000970	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       673	convert.c	FUNCTION_19	IF_1
0x4000974	      0xbf00000000	                              mov edi, 0	       673	convert.c	FUNCTION_19	IF_1
0x4000979	            0x31c0	                            xor eax, eax	       673	convert.c	FUNCTION_19	IF_1
0x400097b	      0xe800000000	                          call 0x4000980	       673	convert.c	FUNCTION_19	IF_1
0x4000980	      0xb8ffffffff	                     mov eax, 0xffffffff	       673	convert.c	FUNCTION_19	IF_1
0x4000985	      0xe92affffff	                           jmp 0x40008b4	       673	convert.c	FUNCTION_19	IF_1
0x400098a	      0xe800000000	                          call 0x400098f	       702	convert.c	FUNCTION_19
ident_filter_fn	DO,0:WHILE,1:functions,0:FOR,0:SWITCH,1:ELSE,1:CALL,12:IF,11	303
0x4000d00	            0x4157	                                push r15	      1819	convert.c	FUNCTION_55
0x4000d02	            0x4156	                                push r14	      1819	convert.c	FUNCTION_55
0x4000d04	            0x4155	                                push r13	      1819	convert.c	FUNCTION_55
0x4000d06	            0x4154	                                push r12	      1819	convert.c	FUNCTION_55
0x4000d08	              0x55	                                push rbp	      1819	convert.c	FUNCTION_55
0x4000d09	              0x53	                                push rbx	      1819	convert.c	FUNCTION_55
0x4000d0a	          0x4889fb	                            mov rbx, rdi	      1819	convert.c	FUNCTION_55
0x4000d0d	        0x4883ec38	                           sub rsp, 0x38	      1819	convert.c	FUNCTION_55
0x4000d11	          0x4885f6	                           test rsi, rsi	      1823	convert.c	FUNCTION_55	IF_1
0x4000d14	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1819	convert.c	FUNCTION_55
0x4000d19	      0x4c89442408	                 mov qword [rsp + 8], r8	      1819	convert.c	FUNCTION_55
0x4000d1e	     0xf843c020000	                            je 0x4000f60	      1823	convert.c	FUNCTION_55	IF_1
0x4000d24	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1823	convert.c	FUNCTION_55	IF_1
0x4000d27	        0x4c8d6708	                      lea r12, [rdi + 8]	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x4000d2b	          0x488b0a	                    mov rcx, qword [rdx]	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x4000d2e	        0x488d7f24	                   lea rdi, [rdi + 0x24]	      1885	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1	CALL_11
0x4000d32	          0x4989f1	                             mov r9, rsi	      1885	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1	CALL_11
0x4000d35	          0x4989d7	                            mov r15, rdx	      1885	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1	CALL_11
0x4000d38	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      1885	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1	CALL_11
0x4000d3d	           0xf1f00	                         nop dword [rax]	      1885	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1	CALL_11
0x4000d40	          0x4885c9	                           test rcx, rcx	      1837	convert.c	FUNCTION_55	WHILE_1
0x4000d43	            0x754b	                           jne 0x4000d90	      1837	convert.c	FUNCTION_55	WHILE_1
0x4000d45	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1837	convert.c	FUNCTION_55	WHILE_1
0x4000d48	     0xf8559020000	                           jne 0x4000fa7	      1837	convert.c	FUNCTION_55	WHILE_1
0x4000d4e	      0x488b442408	                mov rax, qword [rsp + 8]	      1804	convert.c	FUNCTION_54	IF_1
0x4000d53	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1802	convert.c	FUNCTION_54
0x4000d57	          0x488b00	                    mov rax, qword [rax]	      1804	convert.c	FUNCTION_54	IF_1
0x4000d5a	          0x4839c2	                            cmp rdx, rax	      1804	convert.c	FUNCTION_54	IF_1
0x4000d5d	          0x4889c5	                            mov rbp, rax	      1804	convert.c	FUNCTION_54	IF_1
0x4000d60	        0x480f46ea	                         cmovbe rbp, rdx	      1804	convert.c	FUNCTION_54	IF_1
0x4000d64	          0x4885ed	                           test rbp, rbp	      1806	convert.c	FUNCTION_54	IF_2
0x4000d67	     0xf8573030000	                           jne 0x40010e0	      1806	convert.c	FUNCTION_54	IF_2
0x4000d6d	          0x4885d2	                           test rdx, rdx	      1812	convert.c	FUNCTION_54	IF_3
0x4000d70	            0x7507	                           jne 0x4000d79	      1812	convert.c	FUNCTION_54	IF_3
0x4000d72	    0xc74320000000	               mov dword [rbx + 0x20], 0	      1813	convert.c	FUNCTION_54	IF_3
0x4000d79	          0x4885c0	                           test rax, rax	      1842	convert.c	FUNCTION_55	WHILE_1	IF_2	IF_3
0x4000d7c	     0xf8425020000	                            je 0x4000fa7	      1842	convert.c	FUNCTION_55	WHILE_1	IF_2	IF_3
0x4000d82	          0x498b0f	                    mov rcx, qword [r15]	      1842	convert.c	FUNCTION_55	WHILE_1	IF_2	IF_3
0x4000d85	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1842	convert.c	FUNCTION_55	WHILE_1	IF_2	IF_3
0x4000d88	          0x4885c9	                           test rcx, rcx	      1837	convert.c	FUNCTION_55	WHILE_1
0x4000d8b	            0x74b8	                            je 0x4000d45	      1837	convert.c	FUNCTION_55	WHILE_1
0x4000d8d	           0xf1f00	                         nop dword [rax]	      1837	convert.c	FUNCTION_55	WHILE_1
0x4000d90	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1840	convert.c	FUNCTION_55	WHILE_1	IF_2
0x4000d93	            0x74b9	                            je 0x4000d4e	      1840	convert.c	FUNCTION_55	WHILE_1	IF_2
0x4000d95	        0x450fbe31	                   movsx r14d, byte [r9]	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000d99	        0x4883e901	                              sub rcx, 1	      1848	convert.c	FUNCTION_55	WHILE_1
0x4000d9d	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      1850	convert.c	FUNCTION_55	WHILE_1	IF_4
0x4000da0	        0x498d6901	                       lea rbp, [r9 + 1]	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000da4	          0x49890f	                    mov qword [r15], rcx	      1848	convert.c	FUNCTION_55	WHILE_1
0x4000da7	          0x4589f5	                          mov r13d, r14d	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000daa	     0xf84f0000000	                            je 0x4000ea0	      1850	convert.c	FUNCTION_55	WHILE_1	IF_4
0x4000db0	          0x83f803	                              cmp eax, 3	      1866	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000db3	          0x4863d0	                         movsxd rdx, eax	      1867	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000db6	            0x7768	                            ja 0x4000e20	      1866	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000db8	     0xfbeb2000000	                   movsx esi, byte [rdx]	      1866	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000dbf	          0x4139f6	                           cmp r14d, esi	      1866	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000dc2	     0xf8438010000	                            je 0x4000f00	      1866	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000dc8	            0x85c0	                           test eax, eax	      1872	convert.c	FUNCTION_55	WHILE_1	IF_8
0x4000dca	            0x7554	                           jne 0x4000e20	      1872	convert.c	FUNCTION_55	WHILE_1	IF_8
0x4000dcc	        0x488b4308	                mov rax, qword [rbx + 8]	      1872	convert.c	FUNCTION_55	WHILE_1	IF_8
0x4000dd0	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_105
0x4000dd3	     0xf85a7000000	                           jne 0x4000e80	       141	strbuf.h	FUNCTION_105
0x4000dd9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000dde	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000de1	      0xe800000000	                          call 0x4000de6	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000de6	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000dea	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       229	strbuf.h	FUNCTION_107
0x4000dee	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_107
0x4000df2	        0x48894b10	             mov qword [rbx + 0x10], rcx	       229	strbuf.h	FUNCTION_107
0x4000df6	        0x44882c10	              mov byte [rax + rdx], r13b	       229	strbuf.h	FUNCTION_107
0x4000dfa	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       230	strbuf.h	FUNCTION_107
0x4000dfe	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_107
0x4000e02	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_107
0x4000e06	    0xc74320ffffff	     mov dword [rbx + 0x20], 0xffffffff 	      1892	convert.c	FUNCTION_55	WHILE_1
0x4000e0d	          0x498b0f	                    mov rcx, qword [r15]	      1892	convert.c	FUNCTION_55	WHILE_1
0x4000e10	          0x4989e9	                             mov r9, rbp	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000e13	      0xb8ffffffff	                     mov eax, 0xffffffff	      1892	convert.c	FUNCTION_55	WHILE_1
0x4000e18	      0xe923ffffff	                           jmp 0x4000d40	      1892	convert.c	FUNCTION_55	WHILE_1
0x4000e1d	           0xf1f00	                         nop dword [rax]	      1892	convert.c	FUNCTION_55	WHILE_1
0x4000e20	      0xbe00000000	                              mov esi, 0	      1873	convert.c	FUNCTION_55	WHILE_1	CALL_8
0x4000e25	          0x4c89e7	                            mov rdi, r12	      1873	convert.c	FUNCTION_55	WHILE_1	CALL_8
0x4000e28	      0xe800000000	                          call 0x4000e2d	      1873	convert.c	FUNCTION_55	WHILE_1	CALL_8
0x4000e2d	        0x837b2003	               cmp dword [rbx + 0x20], 3	      1874	convert.c	FUNCTION_55	WHILE_1	IF_9
0x4000e31	            0x7599	                           jne 0x4000dcc	      1874	convert.c	FUNCTION_55	WHILE_1	IF_9
0x4000e33	        0x4183fe3a	                          cmp r14d, 0x3a	      1875	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000e37	            0x740a	                            je 0x4000e43	      1875	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000e39	        0x4183fe24	                          cmp r14d, 0x24	      1875	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000e3d	     0xf85cd000000	                           jne 0x4000f10	      1875	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000e43	        0x4183fe3a	                          cmp r14d, 0x3a	      1881	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_11
0x4000e47	     0xf8473010000	                            je 0x4000fc0	      1881	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_11
0x4000e4d	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_108	CALL_2
0x4000e52	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_108	CALL_2
0x4000e55	      0xe800000000	                          call 0x4000e5a	       279	strbuf.h	FUNCTION_108	CALL_2
0x4000e5a	          0x4c89f6	                            mov rsi, r14	       279	strbuf.h	FUNCTION_108	CALL_2
0x4000e5d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_108	CALL_2
0x4000e60	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_108	CALL_2
0x4000e63	      0xe800000000	                          call 0x4000e68	       279	strbuf.h	FUNCTION_108	CALL_2
0x4000e68	    0xc74320ffffff	     mov dword [rbx + 0x20], 0xffffffff 	      1886	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1
0x4000e6f	          0x498b0f	                    mov rcx, qword [r15]	      1886	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1
0x4000e72	          0x4989e9	                             mov r9, rbp	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000e75	      0xb8ffffffff	                     mov eax, 0xffffffff	      1886	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1
0x4000e7a	      0xe9c1feffff	                           jmp 0x4000d40	      1886	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1
0x4000e7f	              0x90	                                     nop	      1886	convert.c	FUNCTION_55	WHILE_1	IF_9	ELSE_1
0x4000e80	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       141	strbuf.h	FUNCTION_105
0x4000e84	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000e88	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000e8b	     0xf8559ffffff	                           jne 0x4000dea	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000e91	      0xe943ffffff	                           jmp 0x4000dd9	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000e96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000ea0	        0x488b4308	                mov rax, qword [rbx + 8]	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000ea4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_105
0x4000ea7	     0xf85db010000	                           jne 0x4001088	       141	strbuf.h	FUNCTION_105
0x4000ead	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000eb2	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000eb5	      0xe800000000	                          call 0x4000eba	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000eba	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000ebe	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       229	strbuf.h	FUNCTION_107
0x4000ec2	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_107
0x4000ec6	        0x4183fe0a	                           cmp r14d, 0xa	      1856	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_5
0x4000eca	        0x48894b10	             mov qword [rbx + 0x10], rcx	       229	strbuf.h	FUNCTION_107
0x4000ece	        0x44882c10	              mov byte [rax + rdx], r13b	       229	strbuf.h	FUNCTION_107
0x4000ed2	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       230	strbuf.h	FUNCTION_107
0x4000ed6	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_107
0x4000eda	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_107
0x4000ede	     0xf8434010000	                            je 0x4001018	      1856	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_5
0x4000ee4	        0x4183fe24	                          cmp r14d, 0x24	      1856	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_5
0x4000ee8	     0xf842a010000	                            je 0x4001018	      1856	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_5
0x4000eee	          0x498b0f	                    mov rcx, qword [r15]	      1856	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_5
0x4000ef1	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1856	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_5
0x4000ef4	          0x4989e9	                             mov r9, rbp	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000ef7	      0xe944feffff	                           jmp 0x4000d40	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000efc	         0xf1f4000	                         nop dword [rax]	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000f00	          0x83c001	                              add eax, 1	      1868	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000f03	          0x4989e9	                             mov r9, rbp	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000f06	          0x894320	             mov dword [rbx + 0x20], eax	      1868	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000f09	      0xe932feffff	                           jmp 0x4000d40	      1869	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000f0e	            0x6690	                                     nop	      1869	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000f10	        0x488b4308	                mov rax, qword [rbx + 8]	      1869	convert.c	FUNCTION_55	WHILE_1	IF_7
0x4000f14	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_105
0x4000f17	     0xf8583010000	                           jne 0x40010a0	       141	strbuf.h	FUNCTION_105
0x4000f1d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000f22	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000f25	      0xe800000000	                          call 0x4000f2a	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000f2a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       228	strbuf.h	FUNCTION_107	CALL_2
0x4000f2e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       229	strbuf.h	FUNCTION_107
0x4000f32	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_107
0x4000f36	          0x4989e9	                             mov r9, rbp	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000f39	        0x48894b10	             mov qword [rbx + 0x10], rcx	       229	strbuf.h	FUNCTION_107
0x4000f3d	        0x44882c10	              mov byte [rax + rdx], r13b	       229	strbuf.h	FUNCTION_107
0x4000f41	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_107
0x4000f45	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       230	strbuf.h	FUNCTION_107
0x4000f49	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_107
0x4000f4d	    0xc74320000000	               mov dword [rbx + 0x20], 0	      1877	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000f54	            0x31c0	                            xor eax, eax	      1878	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000f56	          0x498b0f	                    mov rcx, qword [r15]	      1878	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000f59	      0xe9e2fdffff	                           jmp 0x4000d40	      1878	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000f5e	            0x6690	                                     nop	      1878	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_10
0x4000f60	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1825	convert.c	FUNCTION_55	IF_1	SWITCH_1
0x4000f63	          0x8d5002	                      lea edx, [rax + 2]	      1825	convert.c	FUNCTION_55	IF_1	SWITCH_1
0x4000f66	          0x83fa01	                              cmp edx, 1	      1825	convert.c	FUNCTION_55	IF_1	SWITCH_1
0x4000f69	            0x7611	                           jbe 0x4000f7c	      1825	convert.c	FUNCTION_55	IF_1	SWITCH_1
0x4000f6b	        0x488d7f08	                      lea rdi, [rdi + 8]	      1827	convert.c	FUNCTION_55	IF_1	SWITCH_1	CALL_1
0x4000f6f	          0x4863d0	                         movsxd rdx, eax	      1827	convert.c	FUNCTION_55	IF_1	SWITCH_1	CALL_1
0x4000f72	      0xbe00000000	                              mov esi, 0	      1827	convert.c	FUNCTION_55	IF_1	SWITCH_1	CALL_1
0x4000f77	      0xe800000000	                          call 0x4000f7c	      1827	convert.c	FUNCTION_55	IF_1	SWITCH_1	CALL_1
0x4000f7c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1804	convert.c	FUNCTION_54	IF_1
0x4000f81	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1802	convert.c	FUNCTION_54
0x4000f85	          0x488b17	                    mov rdx, qword [rdi]	      1804	convert.c	FUNCTION_54	IF_1
0x4000f88	          0x4839d0	                            cmp rax, rdx	      1804	convert.c	FUNCTION_54	IF_1
0x4000f8b	        0x480f46d0	                         cmovbe rdx, rax	      1804	convert.c	FUNCTION_54	IF_1
0x4000f8f	          0x4885d2	                           test rdx, rdx	      1806	convert.c	FUNCTION_54	IF_2
0x4000f92	          0x4889d5	                            mov rbp, rdx	      1806	convert.c	FUNCTION_54	IF_2
0x4000f95	     0xf8597010000	                           jne 0x4001132	      1806	convert.c	FUNCTION_54	IF_2
0x4000f9b	          0x4885c0	                           test rax, rax	      1812	convert.c	FUNCTION_54	IF_3
0x4000f9e	            0x7507	                           jne 0x4000fa7	      1812	convert.c	FUNCTION_54	IF_3
0x4000fa0	    0xc74320000000	               mov dword [rbx + 0x20], 0	      1813	convert.c	FUNCTION_54	IF_3
0x4000fa7	        0x4883c438	                           add rsp, 0x38	      1895	convert.c	FUNCTION_55
0x4000fab	            0x31c0	                            xor eax, eax	      1895	convert.c	FUNCTION_55
0x4000fad	              0x5b	                                 pop rbx	      1895	convert.c	FUNCTION_55
0x4000fae	              0x5d	                                 pop rbp	      1895	convert.c	FUNCTION_55
0x4000faf	            0x415c	                                 pop r12	      1895	convert.c	FUNCTION_55
0x4000fb1	            0x415d	                                 pop r13	      1895	convert.c	FUNCTION_55
0x4000fb3	            0x415e	                                 pop r14	      1895	convert.c	FUNCTION_55
0x4000fb5	            0x415f	                                 pop r15	      1895	convert.c	FUNCTION_55
0x4000fb7	              0xc3	                                     ret	      1895	convert.c	FUNCTION_55
0x4000fb8	     0xf1f84000000	                   nop dword [rax + rax]	      1895	convert.c	FUNCTION_55
0x4000fc0	        0x488b4308	                mov rax, qword [rbx + 8]	      1895	convert.c	FUNCTION_55
0x4000fc4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_105
0x4000fc7	     0xf84f3000000	                            je 0x40010c0	       141	strbuf.h	FUNCTION_105
0x4000fcd	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       141	strbuf.h	FUNCTION_105
0x4000fd1	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000fd5	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000fd8	     0xf84e2000000	                            je 0x40010c0	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4000fde	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       229	strbuf.h	FUNCTION_107
0x4000fe2	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_107
0x4000fe6	          0x4989e9	                             mov r9, rbp	      1847	convert.c	FUNCTION_55	WHILE_1
0x4000fe9	        0x48894b10	             mov qword [rbx + 0x10], rcx	       229	strbuf.h	FUNCTION_107
0x4000fed	        0xc604103a	              mov byte [rax + rdx], 0x3a	       229	strbuf.h	FUNCTION_107
0x4000ff1	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_107
0x4000ff5	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       230	strbuf.h	FUNCTION_107
0x4000ff9	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_107
0x4000ffd	    0xc74320feffff	     mov dword [rbx + 0x20], 0xfffffffe 	      1883	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_11
0x4001004	      0xb8feffffff	                     mov eax, 0xfffffffe	      1883	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_11
0x4001009	          0x498b0f	                    mov rcx, qword [r15]	      1883	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_11
0x400100c	      0xe92ffdffff	                           jmp 0x4000d40	      1883	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_11
0x4001011	     0xf1f80000000	                         nop dword [rax]	      1883	convert.c	FUNCTION_55	WHILE_1	IF_9	IF_11
0x4001018	        0x4183fe24	                          cmp r14d, 0x24	      1858	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_6	CALL_5
0x400101c	     0xf85e4fdffff	                           jne 0x4000e06	      1858	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_6	CALL_5
0x4001022	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1858	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_6	CALL_5
0x4001026	      0xba00000000	                              mov edx, 0	      1858	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_6	CALL_5
0x400102b	          0x4889f0	                            mov rax, rsi	      1858	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_6	CALL_5
0x400102e	            0xeb0d	                           jmp 0x400103d	      1858	convert.c	FUNCTION_55	WHILE_1	IF_4	IF_6	CALL_5
0x4001030	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001034	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_83	DO_1
0x4001038	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_83	DO_1
0x400103b	            0x7531	                           jne 0x400106e	       488	git-compat-util.h	FUNCTION_83	DO_1
0x400103d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4001040	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4001042	            0x75ec	                           jne 0x4001030	       484	git-compat-util.h	FUNCTION_83	DO_1	IF_1
0x4001044	           0xfb610	                   movzx edx, byte [rax]	      1793	convert.c	FUNCTION_53	FOR_1
0x4001047	        0x4883c001	                              add rax, 1	      1793	convert.c	FUNCTION_53	FOR_1
0x400104b	            0x84d2	                             test dl, dl	      1793	convert.c	FUNCTION_53	FOR_1
0x400104d	            0x741f	                            je 0x400106e	      1793	convert.c	FUNCTION_53	FOR_1
0x400104f	              0x90	                                     nop	      1793	convert.c	FUNCTION_53	FOR_1
0x4001050	    0xf68200000000	                      test byte [rdx], 1	      1794	convert.c	FUNCTION_53	FOR_1	IF_2
0x4001057	            0x7409	                            je 0x4001062	      1794	convert.c	FUNCTION_53	FOR_1	IF_2
0x4001059	          0x803824	                    cmp byte [rax], 0x24	      1794	convert.c	FUNCTION_53	FOR_1	IF_2
0x400105c	     0xf85a4fdffff	                           jne 0x4000e06	      1794	convert.c	FUNCTION_53	FOR_1	IF_2
0x4001062	        0x4883c001	                              add rax, 1	      1794	convert.c	FUNCTION_53	FOR_1	IF_2
0x4001066	         0xfb650ff	               movzx edx, byte [rax - 1]	      1793	convert.c	FUNCTION_53	FOR_1
0x400106a	            0x84d2	                             test dl, dl	      1793	convert.c	FUNCTION_53	FOR_1
0x400106c	            0x75e2	                           jne 0x4001050	      1793	convert.c	FUNCTION_53	FOR_1
0x400106e	      0x48837b0803	                  cmp qword [rbx + 8], 3	       162	strbuf.h	FUNCTION_106	IF_1
0x4001073	     0xf87e6000000	                            ja 0x400115f	       162	strbuf.h	FUNCTION_106	IF_1
0x4001079	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_106	CALL_1
0x400107e	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_106	CALL_1
0x4001080	      0xe800000000	                          call 0x4001085	       163	strbuf.h	FUNCTION_106	CALL_1
0x4001085	           0xf1f00	                         nop dword [rax]	       163	strbuf.h	FUNCTION_106	CALL_1
0x4001088	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       141	strbuf.h	FUNCTION_105
0x400108c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4001090	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4001093	     0xf8525feffff	                           jne 0x4000ebe	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x4001099	      0xe90ffeffff	                           jmp 0x4000ead	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x400109e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x40010a0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       141	strbuf.h	FUNCTION_105
0x40010a4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x40010a8	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x40010ab	     0xf857dfeffff	                           jne 0x4000f2e	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x40010b1	      0xe967feffff	                           jmp 0x4000f1d	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x40010b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_107	IF_1	CALL_1
0x40010c0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_107	CALL_2
0x40010c5	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_107	CALL_2
0x40010c8	      0xe800000000	                          call 0x40010cd	       228	strbuf.h	FUNCTION_107	CALL_2
0x40010cd	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       228	strbuf.h	FUNCTION_107	CALL_2
0x40010d1	      0xe908ffffff	                           jmp 0x4000fde	       228	strbuf.h	FUNCTION_107	CALL_2
0x40010d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	strbuf.h	FUNCTION_107	CALL_2
0x40010e0	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_61	CALL_3
0x40010e5	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_61	CALL_3
0x40010e9	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_61	CALL_3
0x40010ec	      0x4c894c2428	              mov qword [rsp + 0x28], r9	        53	string3.h	FUNCTION_61	CALL_3
0x40010f1	          0x4c89f7	                            mov rdi, r14	        53	string3.h	FUNCTION_61	CALL_3
0x40010f4	      0xe800000000	                          call 0x40010f9	        53	string3.h	FUNCTION_61	CALL_3
0x40010f9	          0x4889ea	                            mov rdx, rbp	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x40010fc	          0x4c89e7	                            mov rdi, r12	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x40010ff	            0x31f6	                            xor esi, esi	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x4001101	      0xe800000000	                          call 0x4001106	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x4001106	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1810	convert.c	FUNCTION_54	IF_2
0x400110b	          0x4c89f0	                            mov rax, r14	      1809	convert.c	FUNCTION_54	IF_2
0x400110e	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      1809	convert.c	FUNCTION_54	IF_2
0x4001113	          0x4801e8	                            add rax, rbp	      1809	convert.c	FUNCTION_54	IF_2
0x4001116	      0x4889442418	             mov qword [rsp + 0x18], rax	      1809	convert.c	FUNCTION_54	IF_2
0x400111b	          0x488b07	                    mov rax, qword [rdi]	      1810	convert.c	FUNCTION_54	IF_2
0x400111e	      0x4889442420	             mov qword [rsp + 0x20], rax	      1810	convert.c	FUNCTION_54	IF_2
0x4001123	          0x4829e8	                            sub rax, rbp	      1810	convert.c	FUNCTION_54	IF_2
0x4001126	          0x488907	                    mov qword [rdi], rax	      1810	convert.c	FUNCTION_54	IF_2
0x4001129	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1810	convert.c	FUNCTION_54	IF_2
0x400112d	      0xe93bfcffff	                           jmp 0x4000d6d	      1810	convert.c	FUNCTION_54	IF_2
0x4001132	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_61	CALL_3
0x4001136	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_61	CALL_3
0x400113b	      0xe800000000	                          call 0x4001140	        53	string3.h	FUNCTION_61	CALL_3
0x4001140	        0x488d7b08	                      lea rdi, [rbx + 8]	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x4001144	          0x4889ea	                            mov rdx, rbp	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x4001147	            0x31f6	                            xor esi, esi	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x4001149	      0xe800000000	                          call 0x400114e	      1808	convert.c	FUNCTION_54	IF_2	CALL_2
0x400114e	      0x488b442408	                mov rax, qword [rsp + 8]	      1810	convert.c	FUNCTION_54	IF_2
0x4001153	          0x482928	                    sub qword [rax], rbp	      1810	convert.c	FUNCTION_54	IF_2
0x4001156	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1810	convert.c	FUNCTION_54	IF_2
0x400115a	      0xe93cfeffff	                           jmp 0x4000f9b	      1810	convert.c	FUNCTION_54	IF_2
0x400115f	    0x4881fe000000	                              cmp rsi, 0	       165	strbuf.h	FUNCTION_106	IF_2
0x4001166	    0x48c743100300	               mov qword [rbx + 0x10], 3	       164	strbuf.h	FUNCTION_106
0x400116e	            0x7424	                            je 0x4001194	       165	strbuf.h	FUNCTION_106	IF_2
0x4001170	        0xc6460300	                   mov byte [rsi + 3], 0	       166	strbuf.h	FUNCTION_106	IF_2
0x4001174	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	       279	strbuf.h	FUNCTION_108	CALL_2
0x4001179	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_108	CALL_2
0x400117c	      0xe800000000	                          call 0x4001181	       279	strbuf.h	FUNCTION_108	CALL_2
0x4001181	          0x4c89f6	                            mov rsi, r14	       279	strbuf.h	FUNCTION_108	CALL_2
0x4001184	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_108	CALL_2
0x4001187	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_108	CALL_2
0x400118a	      0xe800000000	                          call 0x400118f	       279	strbuf.h	FUNCTION_108	CALL_2
0x400118f	      0xe972fcffff	                           jmp 0x4000e06	       279	strbuf.h	FUNCTION_108	CALL_2
0x4001194	    0x803d00000000	                cmp byte [0x0400119b], 0	       168	strbuf.h	FUNCTION_106	CALL_2
0x400119b	            0x74d7	                            je 0x4001174	       168	strbuf.h	FUNCTION_106	CALL_2
0x400119d	      0xe800000000	                          call 0x40011a2	       168	strbuf.h	FUNCTION_106	CALL_2
get_wt_convert_stats_ascii	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,3:IF,1	70
0x4002d70	              0x53	                                push rbx	       152	convert.c	FUNCTION_6
0x4002d71	          0x4889fe	                            mov rsi, rdi	       152	convert.c	FUNCTION_6
0x4002d74	            0x31d2	                            xor edx, edx	       155	convert.c	FUNCTION_6	IF_1	CALL_1
0x4002d76	      0xbb00000000	                              mov ebx, 0	       153	convert.c	FUNCTION_6
0x4002d7b	        0x4883ec40	                           sub rsp, 0x40	       152	convert.c	FUNCTION_6
0x4002d7f	          0x4889e7	                            mov rdi, rsp	       155	convert.c	FUNCTION_6	IF_1	CALL_1
0x4002d82	    0x48c704240000	                      mov qword [rsp], 0	       154	convert.c	FUNCTION_6
0x4002d8a	    0x48c744240800	                  mov qword [rsp + 8], 0	       154	convert.c	FUNCTION_6
0x4002d93	    0x64488b042528	                mov rax, qword fs:[0x28]	       152	convert.c	FUNCTION_6
0x4002d9c	      0x4889442438	             mov qword [rsp + 0x38], rax	       152	convert.c	FUNCTION_6
0x4002da1	            0x31c0	                            xor eax, eax	       152	convert.c	FUNCTION_6
0x4002da3	    0x48c744241000	               mov qword [rsp + 0x10], 0	       154	convert.c	FUNCTION_6
0x4002dac	      0xe800000000	                          call 0x4002db1	       155	convert.c	FUNCTION_6	IF_1	CALL_1
0x4002db1	          0x4885c0	                           test rax, rax	       155	convert.c	FUNCTION_6	IF_1	CALL_1
0x4002db4	            0x7819	                            js 0x4002dcf	       155	convert.c	FUNCTION_6	IF_1	CALL_1
0x4002db6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       156	convert.c	FUNCTION_6	CALL_2
0x4002dbb	      0x488b742408	                mov rsi, qword [rsp + 8]	       156	convert.c	FUNCTION_6	CALL_2
0x4002dc0	          0x4885ff	                           test rdi, rdi	       109	convert.c	FUNCTION_3	IF_1
0x4002dc3	            0x7405	                            je 0x4002dca	       109	convert.c	FUNCTION_3	IF_1
0x4002dc5	          0x4885f6	                           test rsi, rsi	       109	convert.c	FUNCTION_3	IF_1
0x4002dc8	            0x7526	                           jne 0x4002df0	       109	convert.c	FUNCTION_3	IF_1
0x4002dca	      0xbb00000000	                              mov ebx, 0	       153	convert.c	FUNCTION_6
0x4002dcf	          0x4889e7	                            mov rdi, rsp	       157	convert.c	FUNCTION_6	CALL_3
0x4002dd2	      0xe800000000	                          call 0x4002dd7	       157	convert.c	FUNCTION_6	CALL_3
0x4002dd7	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       159	convert.c	FUNCTION_6
0x4002ddc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       159	convert.c	FUNCTION_6
0x4002de5	          0x4889d8	                            mov rax, rbx	       159	convert.c	FUNCTION_6
0x4002de8	            0x7574	                           jne 0x4002e5e	       159	convert.c	FUNCTION_6
0x4002dea	        0x4883c440	                           add rsp, 0x40	       159	convert.c	FUNCTION_6
0x4002dee	              0x5b	                                 pop rbx	       159	convert.c	FUNCTION_6
0x4002def	              0xc3	                                     ret	       159	convert.c	FUNCTION_6
0x4002df0	      0x488d542420	                   lea rdx, [rsp + 0x20]	       111	convert.c	FUNCTION_3	CALL_1
0x4002df5	      0xe846d6ffff	                   call sym.gather_stats	       111	convert.c	FUNCTION_3	CALL_1
0x4002dfa	      0x448b442424	            mov r8d, dword [rsp + 0x24] 	        96	convert.c	FUNCTION_2	IF_1
0x4002dff	          0x4585c0	                           test r8d, r8d	        96	convert.c	FUNCTION_2	IF_1
0x4002e02	            0x7508	                           jne 0x4002e0c	        96	convert.c	FUNCTION_2	IF_1
0x4002e04	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	        98	convert.c	FUNCTION_2	IF_2
0x4002e08	            0x85ff	                           test edi, edi	        98	convert.c	FUNCTION_2	IF_2
0x4002e0a	            0x7434	                            je 0x4002e40	        98	convert.c	FUNCTION_2	IF_2
0x4002e0c	      0xb806000000	                              mov eax, 6	        98	convert.c	FUNCTION_2	IF_2
0x4002e11	      0xba04000000	                              mov edx, 4	       113	convert.c	FUNCTION_3	IF_2
0x4002e16	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	       114	convert.c	FUNCTION_3	IF_3
0x4002e1a	        0x8b742428	            mov esi, dword [rsp + 0x28] 	       117	convert.c	FUNCTION_3	IF_4
0x4002e1e	            0x85c9	                           test ecx, ecx	       114	convert.c	FUNCTION_3	IF_3
0x4002e20	           0xf44c2	                          cmove eax, edx	       114	convert.c	FUNCTION_3	IF_3
0x4002e23	            0x89c2	                            mov edx, eax	       117	convert.c	FUNCTION_3	IF_4
0x4002e25	          0x83ca01	                               or edx, 1	       117	convert.c	FUNCTION_3	IF_4
0x4002e28	            0x85f6	                           test esi, esi	       117	convert.c	FUNCTION_3	IF_4
0x4002e2a	           0xf45c2	                         cmovne eax, edx	       117	convert.c	FUNCTION_3	IF_4
0x4002e2d	            0xa804	                              test al, 4	       126	convert.c	FUNCTION_4	IF_1
0x4002e2f	            0x7432	                            je 0x4002e63	       126	convert.c	FUNCTION_4	IF_1
0x4002e31	      0xbb00000000	                              mov ebx, 0	       127	convert.c	FUNCTION_4	IF_1
0x4002e36	            0xeb97	                           jmp 0x4002dcf	       127	convert.c	FUNCTION_4	IF_1
0x4002e38	     0xf1f84000000	                   nop dword [rax + rax]	       127	convert.c	FUNCTION_4	IF_1
0x4002e40	        0x8b542430	            mov edx, dword [rsp + 0x30] 	       100	convert.c	FUNCTION_2	IF_3
0x4002e44	          0xc1ea07	                              shr edx, 7	       100	convert.c	FUNCTION_2	IF_3
0x4002e47	        0x3b542434	            cmp edx, dword [rsp + 0x34] 	       100	convert.c	FUNCTION_2	IF_3
0x4002e4b	            0x19c0	                            sbb eax, eax	       100	convert.c	FUNCTION_2	IF_3
0x4002e4d	          0x83e004	                              and eax, 4	       100	convert.c	FUNCTION_2	IF_3
0x4002e50	          0x83c002	                              add eax, 2	       100	convert.c	FUNCTION_2	IF_3
0x4002e53	        0x3b542434	            cmp edx, dword [rsp + 0x34] 	       100	convert.c	FUNCTION_2	IF_3
0x4002e57	            0x19d2	                            sbb edx, edx	       100	convert.c	FUNCTION_2	IF_3
0x4002e59	          0x83e204	                              and edx, 4	       100	convert.c	FUNCTION_2	IF_3
0x4002e5c	            0xebb8	                           jmp 0x4002e16	       100	convert.c	FUNCTION_2	IF_3
0x4002e5e	      0xe800000000	                          call 0x4002e63	       159	convert.c	FUNCTION_6
0x4002e63	          0x83e801	                              sub eax, 1	       159	convert.c	FUNCTION_6
0x4002e66	          0x83f802	                              cmp eax, 2	       159	convert.c	FUNCTION_6
0x4002e69	     0xf875bffffff	                            ja 0x4002dca	       159	convert.c	FUNCTION_6
0x4002e6f	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       159	convert.c	FUNCTION_6
0x4002e77	      0xe953ffffff	                           jmp 0x4002dcf	       159	convert.c	FUNCTION_6
renormalize_buffer	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,0:CALL,2:IF,1	40
0x4004090	            0x4157	                                push r15	      1494	convert.c	FUNCTION_43
0x4004092	            0x4156	                                push r14	      1494	convert.c	FUNCTION_43
0x4004094	          0x4989f6	                            mov r14, rsi	      1494	convert.c	FUNCTION_43
0x4004097	            0x4155	                                push r13	      1494	convert.c	FUNCTION_43
0x4004099	            0x4154	                                push r12	      1494	convert.c	FUNCTION_43
0x400409b	          0x4989cc	                            mov r12, rcx	      1494	convert.c	FUNCTION_43
0x400409e	              0x55	                                push rbp	      1494	convert.c	FUNCTION_43
0x400409f	              0x53	                                push rbx	      1494	convert.c	FUNCTION_43
0x40040a0	          0x4889d5	                            mov rbp, rdx	      1494	convert.c	FUNCTION_43
0x40040a3	          0x4c89c3	                             mov rbx, r8	      1494	convert.c	FUNCTION_43
0x40040a6	          0x4531c9	                            xor r9d, r9d	      1495	convert.c	FUNCTION_43	CALL_1
0x40040a9	          0x4989ff	                            mov r15, rdi	      1494	convert.c	FUNCTION_43
0x40040ac	        0x4883ec08	                              sub rsp, 8	      1494	convert.c	FUNCTION_43
0x40040b0	    0x41b801000000	                              mov r8d, 1	      1495	convert.c	FUNCTION_43	CALL_1
0x40040b6	          0x4889d9	                            mov rcx, rbx	      1495	convert.c	FUNCTION_43	CALL_1
0x40040b9	          0x4c89e2	                            mov rdx, r12	      1495	convert.c	FUNCTION_43	CALL_1
0x40040bc	          0x4889ee	                            mov rsi, rbp	      1495	convert.c	FUNCTION_43	CALL_1
0x40040bf	          0x4c89f7	                            mov rdi, r14	      1495	convert.c	FUNCTION_43	CALL_1
0x40040c2	      0xe899deffff	call sym.convert_to_working_tree_internal	      1495	convert.c	FUNCTION_43	CALL_1
0x40040c7	            0x85c0	                           test eax, eax	      1496	convert.c	FUNCTION_43	IF_1
0x40040c9	          0x4189c5	                           mov r13d, eax	      1495	convert.c	FUNCTION_43	CALL_1
0x40040cc	            0x7408	                            je 0x40040d6	      1496	convert.c	FUNCTION_43	IF_1
0x40040ce	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      1497	convert.c	FUNCTION_43	IF_1
0x40040d2	        0x4c8b6308	                mov r12, qword [rbx + 8]	      1498	convert.c	FUNCTION_43	IF_1
0x40040d6	          0x4989d8	                             mov r8, rbx	      1500	convert.c	FUNCTION_43	CALL_2
0x40040d9	          0x4c89e1	                            mov rcx, r12	      1500	convert.c	FUNCTION_43	CALL_2
0x40040dc	          0x4889ea	                            mov rdx, rbp	      1500	convert.c	FUNCTION_43	CALL_2
0x40040df	          0x4c89f6	                            mov rsi, r14	      1500	convert.c	FUNCTION_43	CALL_2
0x40040e2	          0x4c89ff	                            mov rdi, r15	      1500	convert.c	FUNCTION_43	CALL_2
0x40040e5	    0x41b904000000	                              mov r9d, 4	      1500	convert.c	FUNCTION_43	CALL_2
0x40040eb	      0xe800000000	                          call 0x40040f0	      1500	convert.c	FUNCTION_43	CALL_2
0x40040f0	        0x4883c408	                              add rsp, 8	      1501	convert.c	FUNCTION_43
0x40040f4	          0x4409e8	                            or eax, r13d	      1500	convert.c	FUNCTION_43	CALL_2
0x40040f7	              0x5b	                                 pop rbx	      1501	convert.c	FUNCTION_43
0x40040f8	              0x5d	                                 pop rbp	      1501	convert.c	FUNCTION_43
0x40040f9	            0x415c	                                 pop r12	      1501	convert.c	FUNCTION_43
0x40040fb	            0x415d	                                 pop r13	      1501	convert.c	FUNCTION_43
0x40040fd	            0x415e	                                 pop r14	      1501	convert.c	FUNCTION_43
0x40040ff	            0x415f	                                 pop r15	      1501	convert.c	FUNCTION_43
0x4004101	              0xc3	                                     ret	      1501	convert.c	FUNCTION_43
convert_attrs	DO,0:WHILE,0:functions,0:FOR,0:SWITCH,0:ELSE,4:CALL,10:IF,12	255
0x40015f0	            0x4156	                                push r14	      1294	convert.c	FUNCTION_35
0x40015f2	            0x4155	                                push r13	      1294	convert.c	FUNCTION_35
0x40015f4	            0x4154	                                push r12	      1294	convert.c	FUNCTION_35
0x40015f6	              0x55	                                push rbp	      1294	convert.c	FUNCTION_35
0x40015f7	          0x4889fd	                            mov rbp, rdi	      1294	convert.c	FUNCTION_35
0x40015fa	              0x53	                                push rbx	      1294	convert.c	FUNCTION_35
0x40015fb	          0x4889f3	                            mov rbx, rsi	      1294	convert.c	FUNCTION_35
0x40015fe	    0x488b35000000	            mov rsi, qword [0x04001605] 	      1297	convert.c	FUNCTION_35	IF_1
0x4001605	          0x4885f6	                           test rsi, rsi	      1297	convert.c	FUNCTION_35	IF_1
0x4001608	     0xf8412030000	                            je 0x4001920	      1297	convert.c	FUNCTION_35	IF_1
0x400160e	          0x4889df	                            mov rdi, rbx	      1305	convert.c	FUNCTION_35	IF_2	CALL_3
0x4001611	      0xe800000000	                          call 0x4001616	      1305	convert.c	FUNCTION_35	IF_2	CALL_3
0x4001616	            0x85c0	                           test eax, eax	      1305	convert.c	FUNCTION_35	IF_2	CALL_3
0x4001618	     0xf85a2010000	                           jne 0x40017c0	      1305	convert.c	FUNCTION_35	IF_2	CALL_3
0x400161e	    0x488b05000000	            mov rax, qword [0x04001625] 	      1306	convert.c	FUNCTION_35	IF_2
0x4001625	    0x41bc02000000	                             mov r12d, 2	      1240	convert.c	FUNCTION_31	IF_1
0x400162b	        0x4c8b6808	                mov r13, qword [rax + 8]	      1306	convert.c	FUNCTION_35	IF_2
0x400162f	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      1306	convert.c	FUNCTION_35	IF_2
0x4001633	    0x483d00000000	                              cmp rax, 0	      1239	convert.c	FUNCTION_31	IF_1	CALL_1
0x4001639	            0x7438	                            je 0x4001673	      1239	convert.c	FUNCTION_31	IF_1	CALL_1
0x400163b	    0x483d00000000	                              cmp rax, 0	      1241	convert.c	FUNCTION_31	ELSE_1	IF_2	CALL_2
0x4001641	     0xf8439030000	                            je 0x4001980	      1241	convert.c	FUNCTION_31	ELSE_1	IF_2	CALL_2
0x4001647	          0x4885c0	                           test rax, rax	      1243	convert.c	FUNCTION_31	ELSE_2	IF_3	CALL_3
0x400164a	     0xf84f3010000	                            je 0x4001843	      1243	convert.c	FUNCTION_31	ELSE_2	IF_3	CALL_3
0x4001650	      0xb906000000	                              mov ecx, 6	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x4001655	      0xbf00000000	                              mov edi, 0	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x400165a	          0x4889c6	                            mov rsi, rax	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x400165d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x400165f	    0x41bc03000000	                             mov r12d, 3	      1246	convert.c	FUNCTION_31	ELSE_3	IF_4
0x4001665	           0xf97c1	                                 seta cl	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x4001668	           0xf92c2	                                 setb dl	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x400166b	            0x38d1	                              cmp cl, dl	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x400166d	     0xf85ad010000	                           jne 0x4001820	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x4001673	            0x31c0	                            xor eax, eax	      1310	convert.c	FUNCTION_35	IF_2	CALL_6
0x4001675	    0x49817d180000	               cmp qword [r13 + 0x18], 0	      1310	convert.c	FUNCTION_35	IF_2	CALL_6
0x400167d	        0x4d8b7528	            mov r14, qword [r13 + 0x28] 	      1310	convert.c	FUNCTION_35	IF_2	CALL_6
0x4001681	        0x4489650c	            mov dword [rbp + 0xc], r12d 	      1309	convert.c	FUNCTION_35	IF_2	CALL_5
0x4001685	           0xf94c0	                                 sete al	      1310	convert.c	FUNCTION_35	IF_2	CALL_6
0x4001688	    0x4981fe000000	                              cmp r14, 0	      1270	convert.c	FUNCTION_33	IF_1	CALL_3
0x400168f	           0xf94c2	                                 sete dl	      1270	convert.c	FUNCTION_33	IF_1	CALL_3
0x4001692	    0x4981fe000000	                              cmp r14, 0	      1270	convert.c	FUNCTION_33	IF_1	CALL_3
0x4001699	          0x894510	            mov dword [rbp + 0x10], eax 	      1310	convert.c	FUNCTION_35	IF_2	CALL_6
0x400169c	           0xf94c0	                                 sete al	      1270	convert.c	FUNCTION_33	IF_1	CALL_3
0x400169f	             0x8c2	                               or dl, al	      1270	convert.c	FUNCTION_33	IF_1	CALL_3
0x40016a1	     0xf85e4020000	                           jne 0x400198b	      1270	convert.c	FUNCTION_33	IF_1	CALL_3
0x40016a7	          0x4d85f6	                           test r14, r14	      1270	convert.c	FUNCTION_33	IF_1	CALL_3
0x40016aa	     0xf84db020000	                            je 0x400198b	      1270	convert.c	FUNCTION_33	IF_1	CALL_3
0x40016b0	    0x488b1d000000	            mov rbx, qword [0x040016b7] 	      1272	convert.c	FUNCTION_33	FOR_1
0x40016b7	          0x4885db	                           test rbx, rbx	      1272	convert.c	FUNCTION_33	FOR_1
0x40016ba	            0x7515	                           jne 0x40016d1	      1272	convert.c	FUNCTION_33	FOR_1
0x40016bc	      0xe9ca020000	                           jmp 0x400198b	      1272	convert.c	FUNCTION_33	FOR_1
0x40016c1	     0xf1f80000000	                         nop dword [rax]	      1272	convert.c	FUNCTION_33	FOR_1
0x40016c8	        0x488b5b08	                mov rbx, qword [rbx + 8]	      1272	convert.c	FUNCTION_33	FOR_1
0x40016cc	          0x4885db	                           test rbx, rbx	      1272	convert.c	FUNCTION_33	FOR_1
0x40016cf	            0x740f	                            je 0x40016e0	      1272	convert.c	FUNCTION_33	FOR_1
0x40016d1	          0x488b33	                    mov rsi, qword [rbx]	      1273	convert.c	FUNCTION_33	FOR_1	IF_2	CALL_4
0x40016d4	          0x4c89f7	                            mov rdi, r14	      1273	convert.c	FUNCTION_33	FOR_1	IF_2	CALL_4
0x40016d7	      0xe800000000	                          call 0x40016dc	      1273	convert.c	FUNCTION_33	FOR_1	IF_2	CALL_4
0x40016dc	            0x85c0	                           test eax, eax	      1273	convert.c	FUNCTION_33	FOR_1	IF_2	CALL_4
0x40016de	            0x75e8	                           jne 0x40016c8	      1273	convert.c	FUNCTION_33	FOR_1	IF_2	CALL_4
0x40016e0	        0x4183fc01	                             cmp r12d, 1	      1312	convert.c	FUNCTION_35	IF_2	IF_4
0x40016e4	        0x48895d00	                    mov qword [rbp], rbx	      1311	convert.c	FUNCTION_35	IF_2	CALL_7
0x40016e8	            0x7441	                            je 0x400172b	      1312	convert.c	FUNCTION_35	IF_2	IF_4
0x40016ea	        0x498b7538	            mov rsi, qword [r13 + 0x38] 	      1312	convert.c	FUNCTION_35	IF_2	IF_4
0x40016ee	          0x4885f6	                           test rsi, rsi	      1256	convert.c	FUNCTION_32	IF_1	CALL_1
0x40016f1	     0xf84fb010000	                            je 0x40018f2	      1256	convert.c	FUNCTION_32	IF_1	CALL_1
0x40016f7	          0x803e6c	                    cmp byte [rsi], 0x6c	      1258	convert.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x40016fa	     0xf85e0010000	                           jne 0x40018e0	      1258	convert.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x4001700	        0x807e0166	                cmp byte [rsi + 1], 0x66	      1258	convert.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x4001704	     0xf85d6010000	                           jne 0x40018e0	      1258	convert.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x400170a	        0x807e0200	                   cmp byte [rsi + 2], 0	      1258	convert.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x400170e	     0xf85cc010000	                           jne 0x40018e0	      1258	convert.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x4001714	        0x4183fc05	                             cmp r12d, 5	      1314	convert.c	FUNCTION_35	IF_2	IF_4	IF_5
0x4001718	     0xf849e020000	                            je 0x40019bc	      1314	convert.c	FUNCTION_35	IF_2	IF_4	IF_5
0x400171e	    0xc7450c030000	                mov dword [rbp + 0xc], 3	      1319	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_2	IF_7
0x4001725	    0x41bc03000000	                             mov r12d, 3	      1319	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_2	IF_7
0x400172b	        0x498b5d58	            mov rbx, qword [r13 + 0x58] 	      1319	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_2	IF_7
0x400172f	          0x4885db	                           test rbx, rbx	      1221	convert.c	FUNCTION_30	IF_1	CALL_2
0x4001732	     0xf849e020000	                            je 0x40019d6	      1221	convert.c	FUNCTION_30	IF_1	CALL_2
0x4001738	          0x803b00	                       cmp byte [rbx], 0	      1221	convert.c	FUNCTION_30	IF_1	CALL_2
0x400173b	     0xf84bf010000	                            je 0x4001900	      1221	convert.c	FUNCTION_30	IF_1	CALL_2
0x4001741	    0x4881fb000000	                              cmp rbx, 0	      1224	convert.c	FUNCTION_30	IF_2	CALL_4
0x4001748	     0xf8499020000	                            je 0x40019e7	      1224	convert.c	FUNCTION_30	IF_2	CALL_4
0x400174e	    0x4881fb000000	                              cmp rbx, 0	      1224	convert.c	FUNCTION_30	IF_2	CALL_4
0x4001755	     0xf848c020000	                            je 0x40019e7	      1224	convert.c	FUNCTION_30	IF_2	CALL_4
0x400175b	      0xbe00000000	                              mov esi, 0	      1229	convert.c	FUNCTION_30	IF_3	CALL_7
0x4001760	          0x4889df	                            mov rdi, rbx	      1229	convert.c	FUNCTION_30	IF_3	CALL_7
0x4001763	      0xe800000000	                          call 0x4001768	      1229	convert.c	FUNCTION_30	IF_3	CALL_7
0x4001768	            0x85c0	                           test eax, eax	      1229	convert.c	FUNCTION_30	IF_3	CALL_7
0x400176a	        0x448b650c	            mov r12d, dword [rbp + 0xc] 	      1229	convert.c	FUNCTION_30	IF_3	CALL_7
0x400176e	     0xf858c010000	                           jne 0x4001900	      1229	convert.c	FUNCTION_30	IF_3	CALL_7
0x4001774	        0x4183fc02	                             cmp r12d, 2	      1332	convert.c	FUNCTION_35	IF_9
0x4001778	        0x48895d18	            mov qword [rbp + 0x18], rbx 	      1323	convert.c	FUNCTION_35	IF_2	CALL_9
0x400177c	        0x44896508	               mov dword [rbp + 8], r12d	      1331	convert.c	FUNCTION_35
0x4001780	     0xf8542010000	                           jne 0x40018c8	      1332	convert.c	FUNCTION_35	IF_9
0x4001786	    0x8b1500000000	            mov edx, dword [0x0400178c] 	       163	convert.c	FUNCTION_7	IF_1
0x400178c	      0xb804000000	                              mov eax, 4	      1333	convert.c	FUNCTION_35	CALL_10
0x4001791	          0x83fa01	                              cmp edx, 1	       163	convert.c	FUNCTION_7	IF_1
0x4001794	            0x7419	                            je 0x40017af	       163	convert.c	FUNCTION_7	IF_1
0x4001796	          0x83faff	             cmp edx, 0xffffffffffffffff	       165	convert.c	FUNCTION_7	ELSE_1	IF_2
0x4001799	      0xb803000000	                              mov eax, 3	      1333	convert.c	FUNCTION_35	CALL_10
0x400179e	            0x740f	                            je 0x40017af	       165	convert.c	FUNCTION_7	ELSE_1	IF_2
0x40017a0	            0x31c0	                            xor eax, eax	      1333	convert.c	FUNCTION_35	CALL_10
0x40017a2	    0x833d00000000	               cmp dword [0x040017a9], 1	      1333	convert.c	FUNCTION_35	CALL_10
0x40017a9	           0xf94c0	                                 sete al	      1333	convert.c	FUNCTION_35	CALL_10
0x40017ac	          0x83c003	                              add eax, 3	      1333	convert.c	FUNCTION_35	CALL_10
0x40017af	          0x89450c	              mov dword [rbp + 0xc], eax	      1333	convert.c	FUNCTION_35	CALL_10
0x40017b2	              0x5b	                                 pop rbx	      1340	convert.c	FUNCTION_35
0x40017b3	              0x5d	                                 pop rbp	      1340	convert.c	FUNCTION_35
0x40017b4	            0x415c	                                 pop r12	      1340	convert.c	FUNCTION_35
0x40017b6	            0x415d	                                 pop r13	      1340	convert.c	FUNCTION_35
0x40017b8	            0x415e	                                 pop r14	      1340	convert.c	FUNCTION_35
0x40017ba	              0xc3	                                     ret	      1340	convert.c	FUNCTION_35
0x40017bb	       0xf1f440000	                   nop dword [rax + rax]	      1340	convert.c	FUNCTION_35
0x40017c0	    0x48c745000000	                      mov qword [rbp], 0	      1325	convert.c	FUNCTION_35	ELSE_4
0x40017c8	    0xc7450c000000	                mov dword [rbp + 0xc], 0	      1326	convert.c	FUNCTION_35	ELSE_4
0x40017cf	    0xc74510000000	               mov dword [rbp + 0x10], 0	      1327	convert.c	FUNCTION_35	ELSE_4
0x40017d6	    0xc74508000000	                  mov dword [rbp + 8], 0	      1331	convert.c	FUNCTION_35
0x40017dd	    0x8b0500000000	            mov eax, dword [0x040017e3] 	      1334	convert.c	FUNCTION_35	IF_10
0x40017e3	            0x85c0	                           test eax, eax	      1334	convert.c	FUNCTION_35	IF_10
0x40017e5	            0x7519	                           jne 0x4001800	      1334	convert.c	FUNCTION_35	IF_10
0x40017e7	    0xc7450c010000	                mov dword [rbp + 0xc], 1	      1335	convert.c	FUNCTION_35	IF_10
0x40017ee	              0x5b	                                 pop rbx	      1340	convert.c	FUNCTION_35
0x40017ef	              0x5d	                                 pop rbp	      1340	convert.c	FUNCTION_35
0x40017f0	            0x415c	                                 pop r12	      1340	convert.c	FUNCTION_35
0x40017f2	            0x415d	                                 pop r13	      1340	convert.c	FUNCTION_35
0x40017f4	            0x415e	                                 pop r14	      1340	convert.c	FUNCTION_35
0x40017f6	              0xc3	                                     ret	      1340	convert.c	FUNCTION_35
0x40017f7	    0x660f1f840000	                    nop word [rax + rax]	      1340	convert.c	FUNCTION_35
0x4001800	          0x83f801	                              cmp eax, 1	      1336	convert.c	FUNCTION_35	IF_11
0x4001803	     0xf8407010000	                            je 0x4001910	      1336	convert.c	FUNCTION_35	IF_11
0x4001809	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1338	convert.c	FUNCTION_35	IF_12
0x400180c	            0x75a4	                           jne 0x40017b2	      1338	convert.c	FUNCTION_35	IF_12
0x400180e	    0xc7450c060000	                mov dword [rbp + 0xc], 6	      1339	convert.c	FUNCTION_35	IF_12
0x4001815	              0x5b	                                 pop rbx	      1340	convert.c	FUNCTION_35
0x4001816	              0x5d	                                 pop rbp	      1340	convert.c	FUNCTION_35
0x4001817	            0x415c	                                 pop r12	      1340	convert.c	FUNCTION_35
0x4001819	            0x415d	                                 pop r13	      1340	convert.c	FUNCTION_35
0x400181b	            0x415e	                                 pop r14	      1340	convert.c	FUNCTION_35
0x400181d	              0xc3	                                     ret	      1340	convert.c	FUNCTION_35
0x400181e	            0x6690	                                     nop	      1340	convert.c	FUNCTION_35
0x4001820	          0x4889c6	                            mov rsi, rax	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x4001823	      0xbf00000000	                              mov edi, 0	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x4001828	      0xb905000000	                              mov ecx, 5	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x400182d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x400182f	    0x41bc05000000	                             mov r12d, 5	      1248	convert.c	FUNCTION_31	ELSE_4	IF_5
0x4001835	           0xf97c2	                                 seta dl	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x4001838	           0xf92c0	                                 setb al	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x400183b	            0x38c2	                              cmp dl, al	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x400183d	     0xf8430feffff	                            je 0x4001673	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x4001843	        0x498b4508	                mov rax, qword [r13 + 8]	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x4001847	    0xc7450c000000	                mov dword [rbp + 0xc], 0	      1307	convert.c	FUNCTION_35	IF_2	CALL_4
0x400184e	    0x41bc02000000	                             mov r12d, 2	      1240	convert.c	FUNCTION_31	IF_1
0x4001854	    0x483d00000000	                              cmp rax, 0	      1239	convert.c	FUNCTION_31	IF_1	CALL_1
0x400185a	     0xf8413feffff	                            je 0x4001673	      1239	convert.c	FUNCTION_31	IF_1	CALL_1
0x4001860	    0x483d00000000	                              cmp rax, 0	      1241	convert.c	FUNCTION_31	ELSE_1	IF_2	CALL_2
0x4001866	     0xf8414010000	                            je 0x4001980	      1241	convert.c	FUNCTION_31	ELSE_1	IF_2	CALL_2
0x400186c	          0x4885c0	                           test rax, rax	      1243	convert.c	FUNCTION_31	ELSE_2	IF_3	CALL_3
0x400186f	     0xf8459010000	                            je 0x40019ce	      1243	convert.c	FUNCTION_31	ELSE_2	IF_3	CALL_3
0x4001875	      0xb906000000	                              mov ecx, 6	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x400187a	      0xbf00000000	                              mov edi, 0	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x400187f	          0x4889c6	                            mov rsi, rax	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x4001882	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x4001884	    0x41bc03000000	                             mov r12d, 3	      1246	convert.c	FUNCTION_31	ELSE_3	IF_4
0x400188a	           0xf97c1	                                 seta cl	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x400188d	           0xf92c2	                                 setb dl	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x4001890	            0x38d1	                              cmp cl, dl	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x4001892	     0xf84dbfdffff	                            je 0x4001673	      1245	convert.c	FUNCTION_31	ELSE_3	IF_4	CALL_4
0x4001898	          0x4889c6	                            mov rsi, rax	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x400189b	      0xbf00000000	                              mov edi, 0	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x40018a0	      0xb905000000	                              mov ecx, 5	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x40018a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x40018a7	           0xf97c0	                                 seta al	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x40018aa	           0xf92c2	                                 setb dl	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x40018ad	            0x29d0	                            sub eax, edx	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x40018af	           0xfbec0	                           movsx eax, al	      1247	convert.c	FUNCTION_31	ELSE_4	IF_5	CALL_5
0x40018b2	          0x83f801	                              cmp eax, 1	      1248	convert.c	FUNCTION_31	ELSE_4	IF_5
0x40018b5	          0x4519e4	                          sbb r12d, r12d	      1248	convert.c	FUNCTION_31	ELSE_4	IF_5
0x40018b8	        0x4183e405	                             and r12d, 5	      1248	convert.c	FUNCTION_31	ELSE_4	IF_5
0x40018bc	      0xe9b2fdffff	                           jmp 0x4001673	      1248	convert.c	FUNCTION_31	ELSE_4	IF_5
0x40018c1	     0xf1f80000000	                         nop dword [rax]	      1248	convert.c	FUNCTION_31	ELSE_4	IF_5
0x40018c8	          0x4585e4	                         test r12d, r12d	      1334	convert.c	FUNCTION_35	IF_10
0x40018cb	     0xf840cffffff	                            je 0x40017dd	      1334	convert.c	FUNCTION_35	IF_10
0x40018d1	              0x5b	                                 pop rbx	      1340	convert.c	FUNCTION_35
0x40018d2	              0x5d	                                 pop rbp	      1340	convert.c	FUNCTION_35
0x40018d3	            0x415c	                                 pop r12	      1340	convert.c	FUNCTION_35
0x40018d5	            0x415d	                                 pop r13	      1340	convert.c	FUNCTION_35
0x40018d7	            0x415e	                                 pop r14	      1340	convert.c	FUNCTION_35
0x40018d9	              0xc3	                                     ret	      1340	convert.c	FUNCTION_35
0x40018da	    0x660f1f440000	                    nop word [rax + rax]	      1340	convert.c	FUNCTION_35
0x40018e0	      0xbf00000000	                              mov edi, 0	      1260	convert.c	FUNCTION_32	ELSE_2	IF_3	CALL_3
0x40018e5	      0xb905000000	                              mov ecx, 5	      1260	convert.c	FUNCTION_32	ELSE_2	IF_3	CALL_3
0x40018ea	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1260	convert.c	FUNCTION_32	ELSE_2	IF_3	CALL_3
0x40018ec	     0xf84a0000000	                            je 0x4001992	      1260	convert.c	FUNCTION_32	ELSE_2	IF_3	CALL_3
0x40018f2	        0x498b5d58	            mov rbx, qword [r13 + 0x58] 	      1260	convert.c	FUNCTION_32	ELSE_2	IF_3	CALL_3
0x40018f6	          0x4885db	                           test rbx, rbx	      1221	convert.c	FUNCTION_30	IF_1	CALL_2
0x40018f9	     0xf8539feffff	                           jne 0x4001738	      1221	convert.c	FUNCTION_30	IF_1	CALL_2
0x40018ff	              0x90	                                     nop	      1221	convert.c	FUNCTION_30	IF_1	CALL_2
0x4001900	            0x31db	                            xor ebx, ebx	      1222	convert.c	FUNCTION_30	IF_1
0x4001902	      0xe96dfeffff	                           jmp 0x4001774	      1222	convert.c	FUNCTION_30	IF_1
0x4001907	    0x660f1f840000	                    nop word [rax + rax]	      1222	convert.c	FUNCTION_30	IF_1
0x4001910	    0xc7450c070000	                mov dword [rbp + 0xc], 7	      1337	convert.c	FUNCTION_35	IF_11
0x4001917	              0x5b	                                 pop rbx	      1340	convert.c	FUNCTION_35
0x4001918	              0x5d	                                 pop rbp	      1340	convert.c	FUNCTION_35
0x4001919	            0x415c	                                 pop r12	      1340	convert.c	FUNCTION_35
0x400191b	            0x415d	                                 pop r13	      1340	convert.c	FUNCTION_35
0x400191d	            0x415e	                                 pop r14	      1340	convert.c	FUNCTION_35
0x400191f	              0xc3	                                     ret	      1340	convert.c	FUNCTION_35
0x4001920	        0x4883ec08	                              sub rsp, 8	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x4001924	      0xba00000000	                              mov edx, 0	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x4001929	    0x41b900000000	                              mov r9d, 0	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x400192f	            0x6a00	                                  push 0	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x4001931	    0x41b800000000	                              mov r8d, 0	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x4001937	      0xb900000000	                              mov ecx, 0	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x400193c	      0xbe00000000	                              mov esi, 0	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x4001941	      0xbf00000000	                              mov edi, 0	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x4001946	            0x31c0	                            xor eax, eax	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x4001948	      0xe800000000	                          call 0x400194d	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x400194d	            0x31f6	                            xor esi, esi	      1302	convert.c	FUNCTION_35	IF_1	CALL_2
0x400194f	      0xbf00000000	                              mov edi, 0	      1302	convert.c	FUNCTION_35	IF_1	CALL_2
0x4001954	    0x488905000000	            mov qword [0x0400195b], rax 	      1298	convert.c	FUNCTION_35	IF_1	CALL_1
0x400195b	    0x48c705000000	               mov qword [0x04001966], 0	      1301	convert.c	FUNCTION_35	IF_1
0x4001966	      0xe800000000	                          call 0x400196b	      1302	convert.c	FUNCTION_35	IF_1	CALL_2
0x400196b	              0x58	                                 pop rax	      1302	convert.c	FUNCTION_35	IF_1	CALL_2
0x400196c	    0x488b35000000	            mov rsi, qword [0x04001973] 	      1302	convert.c	FUNCTION_35	IF_1	CALL_2
0x4001973	              0x5a	                                 pop rdx	      1302	convert.c	FUNCTION_35	IF_1	CALL_2
0x4001974	      0xe995fcffff	                           jmp 0x400160e	      1302	convert.c	FUNCTION_35	IF_1	CALL_2
0x4001979	     0xf1f80000000	                         nop dword [rax]	      1302	convert.c	FUNCTION_35	IF_1	CALL_2
0x4001980	    0x41bc01000000	                             mov r12d, 1	      1242	convert.c	FUNCTION_31	ELSE_1	IF_2
0x4001986	      0xe9e8fcffff	                           jmp 0x4001673	      1242	convert.c	FUNCTION_31	ELSE_1	IF_2
0x400198b	            0x31db	                            xor ebx, ebx	      1271	convert.c	FUNCTION_33	IF_1
0x400198d	      0xe94efdffff	                           jmp 0x40016e0	      1271	convert.c	FUNCTION_33	IF_1
0x4001992	        0x4183fc05	                             cmp r12d, 5	      1316	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_1	IF_6
0x4001996	            0x7512	                           jne 0x40019aa	      1316	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_1	IF_6
0x4001998	    0xc7450c070000	                mov dword [rbp + 0xc], 7	      1317	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_1	IF_6
0x400199f	    0x41bc07000000	                             mov r12d, 7	      1317	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_1	IF_6
0x40019a5	      0xe981fdffff	                           jmp 0x400172b	      1317	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_1	IF_6
0x40019aa	    0xc7450c040000	                mov dword [rbp + 0xc], 4	      1321	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_3	IF_8
0x40019b1	    0x41bc04000000	                             mov r12d, 4	      1321	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_3	IF_8
0x40019b7	      0xe96ffdffff	                           jmp 0x400172b	      1321	convert.c	FUNCTION_35	IF_2	IF_4	ELSE_3	IF_8
0x40019bc	    0xc7450c060000	                mov dword [rbp + 0xc], 6	      1315	convert.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40019c3	    0x41bc06000000	                             mov r12d, 6	      1315	convert.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40019c9	      0xe95dfdffff	                           jmp 0x400172b	      1315	convert.c	FUNCTION_35	IF_2	IF_4	IF_5
0x40019ce	          0x4531e4	                          xor r12d, r12d	      1249	convert.c	FUNCTION_31
0x40019d1	      0xe99dfcffff	                           jmp 0x4001673	      1249	convert.c	FUNCTION_31
0x40019d6	    0x48c745180000	               mov qword [rbp + 0x18], 0	      1323	convert.c	FUNCTION_35	IF_2	CALL_9
0x40019de	        0x44896508	               mov dword [rbp + 8], r12d	      1331	convert.c	FUNCTION_35
0x40019e2	      0xe9cbfdffff	                           jmp 0x40017b2	      1331	convert.c	FUNCTION_35
0x40019e7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_75
0x40019e9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_75
0x40019ee	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_75
0x40019f3	      0xe800000000	                          call 0x40019f8	        54	gettext.h	FUNCTION_75
0x40019f8	          0x4889c7	                            mov rdi, rax	      1225	convert.c	FUNCTION_30	IF_2	CALL_6
0x40019fb	            0x31c0	                            xor eax, eax	      1225	convert.c	FUNCTION_30	IF_2	CALL_6
0x40019fd	      0xe800000000	                          call 0x4001a02	      1225	convert.c	FUNCTION_30	IF_2	CALL_6
