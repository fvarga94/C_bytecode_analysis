enable_delayed_checkout	IF,1:SWITCH,0:ELSE,0:DO,0:FOR,0:WHILE,0:functions,0:CALL,3	18
0x4000c00	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       144	entry.c	FUNCTION_8	IF_1
0x4000c05	            0x7409	                            je 0x4000c10	       144	entry.c	FUNCTION_8	IF_1
0x4000c07	            0xf3c3	                                     ret	       144	entry.c	FUNCTION_8	IF_1
0x4000c09	     0xf1f80000000	                         nop dword [rax]	       144	entry.c	FUNCTION_8	IF_1
0x4000c10	              0x53	                                push rbx	       143	entry.c	FUNCTION_8
0x4000c11	          0x4889fb	                            mov rbx, rdi	       143	entry.c	FUNCTION_8
0x4000c14	      0xbf48000000	                           mov edi, 0x48	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x4000c19	      0xe800000000	                          call 0x4000c1e	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x4000c1e	        0x488d7808	                      lea rdi, [rax + 8]	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x4000c22	        0x48894318	             mov qword [rbx + 0x18], rax	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x4000c26	            0x31f6	                            xor esi, esi	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x4000c28	    0xc70001000000	                      mov dword [rax], 1	       146	entry.c	FUNCTION_8	IF_1
0x4000c2e	      0xe800000000	                          call 0x4000c33	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x4000c33	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x4000c37	            0x31f6	                            xor esi, esi	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x4000c39	              0x5b	                                 pop rbx	       150	entry.c	FUNCTION_8
0x4000c3a	        0x4883c728	                           add rdi, 0x28	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x4000c3e	      0xe900000000	                           jmp 0x4000c43	       148	entry.c	FUNCTION_8	IF_1	CALL_3
finish_delayed_checkout	IF,1:SWITCH,0:ELSE,0:DO,0:FOR,0:WHILE,1:functions,2:CALL,7	190
0x4000c50	            0x4157	                                push r15	       164	entry.c	FUNCTION_10
0x4000c52	            0x4156	                                push r14	       164	entry.c	FUNCTION_10
0x4000c54	            0x4155	                                push r13	       164	entry.c	FUNCTION_10
0x4000c56	            0x4154	                                push r12	       164	entry.c	FUNCTION_10
0x4000c58	              0x55	                                push rbp	       164	entry.c	FUNCTION_10
0x4000c59	              0x53	                                push rbx	       164	entry.c	FUNCTION_10
0x4000c5a	        0x4883ec68	                           sub rsp, 0x68	       164	entry.c	FUNCTION_10
0x4000c5e	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	       170	entry.c	FUNCTION_10
0x4000c62	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	entry.c	FUNCTION_10
0x4000c6b	      0x4889442458	             mov qword [rsp + 0x58], rax	       164	entry.c	FUNCTION_10
0x4000c70	            0x31c0	                            xor eax, eax	       164	entry.c	FUNCTION_10
0x4000c72	          0x4885ed	                           test rbp, rbp	       172	entry.c	FUNCTION_10	IF_1
0x4000c75	     0xf84a9010000	                            je 0x4000e24	       172	entry.c	FUNCTION_10	IF_1
0x4000c7b	          0x8b4530	            mov eax, dword [rbp + 0x30] 	       176	entry.c	FUNCTION_10
0x4000c7e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_16
0x4000c83	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_16
0x4000c88	          0x4989fe	                            mov r14, rdi	        54	gettext.h	FUNCTION_16
0x4000c8b	    0xc74500020000	                      mov dword [rbp], 2	       175	entry.c	FUNCTION_10
0x4000c92	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_16
0x4000c94	            0x89c3	                            mov ebx, eax	       176	entry.c	FUNCTION_10
0x4000c96	        0x8944240c	              mov dword [rsp + 0xc], eax	       176	entry.c	FUNCTION_10
0x4000c9a	      0xe800000000	                          call 0x4000c9f	        54	gettext.h	FUNCTION_16
0x4000c9f	            0x89de	                            mov esi, ebx	       177	entry.c	FUNCTION_10	CALL_2
0x4000ca1	          0x4889c7	                            mov rdi, rax	       177	entry.c	FUNCTION_10	CALL_2
0x4000ca4	      0xe800000000	                          call 0x4000ca9	       177	entry.c	FUNCTION_10	CALL_2
0x4000ca9	      0x4889442428	             mov qword [rsp + 0x28], rax	       177	entry.c	FUNCTION_10	CALL_2
0x4000cae	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cb1	        0x488d4d08	                      lea rcx, [rbp + 8]	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cb5	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cba	        0x488d4d28	                   lea rcx, [rbp + 0x28]	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cbe	            0x85c0	                           test eax, eax	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cc0	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cc5	     0xf84d7000000	                            je 0x4000da2	       178	entry.c	FUNCTION_10	WHILE_1
0x4000ccb	          0x4531ed	                          xor r13d, r13d	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cce	          0x4531e4	                          xor r12d, r12d	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cd1	     0xf1f80000000	                         nop dword [rax]	       178	entry.c	FUNCTION_10	WHILE_1
0x4000cd8	        0x488b5d08	                mov rbx, qword [rbp + 8]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000cdc	          0x4885db	                           test rbx, rbx	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000cdf	     0xf84a3000000	                            je 0x4000d88	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ce5	        0x48c1e004	                              shl rax, 4	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ce9	          0x4801d8	                            add rax, rbx	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000cec	          0x4839c3	                            cmp rbx, rax	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000cef	            0x7232	                            jb 0x4000d23	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000cf1	      0xe992000000	                           jmp 0x4000d88	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000cf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d00	    0x48c703000000	                      mov qword [rbx], 0	       186	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1
0x4000d07	    0x41bc01000000	                             mov r12d, 1	       185	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1
0x4000d0d	        0x4883c310	                           add rbx, 0x10	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d11	            0x7475	                            je 0x4000d88	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d13	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d16	        0x48c1e004	                              shl rax, 4	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d1a	        0x48034508	                add rax, qword [rbp + 8]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d1e	          0x4839c3	                            cmp rbx, rax	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d21	            0x7365	                           jae 0x4000d88	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d23	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x4000d27	          0x2b7530	             sub esi, dword [rbp + 0x30]	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x4000d2a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x4000d2f	      0x80642440fe	             and byte [rsp + 0x40], 0xfe	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d34	    0x48c744243000	               mov qword [rsp + 0x30], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d3d	    0xc74424380000	               mov dword [rsp + 0x38], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d45	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d4d	    0x48c744244800	               mov qword [rsp + 0x48], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d56	      0xe800000000	                          call 0x4000d5b	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x4000d5b	          0x488b3b	                    mov rdi, qword [rbx]	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000d5e	      0x488d742430	                   lea rsi, [rsp + 0x30]	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000d63	      0xe800000000	                          call 0x4000d68	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000d68	            0x85c0	                           test eax, eax	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000d6a	            0x7494	                            je 0x4000d00	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000d6c	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0x4000d70	            0x85c0	                           test eax, eax	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0x4000d72	     0xf85d8000000	                           jne 0x4000e50	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0x4000d78	    0x48c703000000	                      mov qword [rbx], 0	       196	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0x4000d7f	        0x4883c310	                           add rbx, 0x10	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d83	            0x758e	                           jne 0x4000d13	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d85	           0xf1f00	                         nop dword [rax]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000d88	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000d8d	            0x31f6	                            xor esi, esi	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000d8f	      0xe800000000	                          call 0x4000d94	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000d94	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       178	entry.c	FUNCTION_10	WHILE_1
0x4000d97	            0x85c0	                           test eax, eax	       178	entry.c	FUNCTION_10	WHILE_1
0x4000d99	     0xf8539ffffff	                           jne 0x4000cd8	       178	entry.c	FUNCTION_10	WHILE_1
0x4000d9f	          0x4489e0	                           mov eax, r12d	       178	entry.c	FUNCTION_10	WHILE_1
0x4000da2	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       237	entry.c	FUNCTION_10	CALL_4
0x4000da7	          0x890424	                    mov dword [rsp], eax	       237	entry.c	FUNCTION_10	CALL_4
0x4000daa	      0xe800000000	                          call 0x4000daf	       237	entry.c	FUNCTION_10	CALL_4
0x4000daf	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       238	entry.c	FUNCTION_10	CALL_5
0x4000db4	            0x31f6	                            xor esi, esi	       238	entry.c	FUNCTION_10	CALL_5
0x4000db6	      0xe800000000	                          call 0x4000dbb	       238	entry.c	FUNCTION_10	CALL_5
0x4000dbb	          0x8b5530	            mov edx, dword [rbp + 0x30] 	       241	entry.c	FUNCTION_10
0x4000dbe	          0x8b0424	                    mov eax, dword [rsp]	       241	entry.c	FUNCTION_10
0x4000dc1	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dc5	             0x9d0	                             or eax, edx	       241	entry.c	FUNCTION_10
0x4000dc7	          0x4d85e4	                           test r12, r12	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dca	            0x89c3	                            mov ebx, eax	       241	entry.c	FUNCTION_10
0x4000dcc	            0x7438	                            je 0x4000e06	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dce	            0x89d0	                            mov eax, edx	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dd0	        0x48c1e004	                              shl rax, 4	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dd4	          0x4c01e0	                            add rax, r12	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dd7	          0x4939c4	                            cmp r12, rax	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dda	            0x7214	                            jb 0x4000df0	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000ddc	            0xeb28	                           jmp 0x4000e06	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dde	            0x6690	                                     nop	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000de0	          0x8b4530	            mov eax, dword [rbp + 0x30] 	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000de3	        0x48c1e004	                              shl rax, 4	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000de7	        0x48034528	             add rax, qword [rbp + 0x28]	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000deb	          0x4939c4	                            cmp r12, rax	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000dee	            0x7316	                           jae 0x4000e06	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000df0	        0x498b3424	                    mov rsi, qword [r12]	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0x4000df4	            0x31c0	                            xor eax, eax	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0x4000df6	      0xbf00000000	                              mov edi, 0	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0x4000dfb	      0xe800000000	                          call 0x4000e00	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0x4000e00	        0x4983c410	                           add r12, 0x10	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000e04	            0x75da	                           jne 0x4000de0	       242	entry.c	FUNCTION_10	FUNCTION_2
0x4000e06	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       245	entry.c	FUNCTION_10	CALL_6
0x4000e0b	            0x31f6	                            xor esi, esi	       245	entry.c	FUNCTION_10	CALL_6
0x4000e0d	      0xe800000000	                          call 0x4000e12	       245	entry.c	FUNCTION_10	CALL_6
0x4000e12	          0x4889ef	                            mov rdi, rbp	       247	entry.c	FUNCTION_10	CALL_7
0x4000e15	      0xe800000000	                          call 0x4000e1a	       247	entry.c	FUNCTION_10	CALL_7
0x4000e1a	    0x49c746180000	               mov qword [r14 + 0x18], 0	       248	entry.c	FUNCTION_10
0x4000e22	            0x89d8	                            mov eax, ebx	       250	entry.c	FUNCTION_10
0x4000e24	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       251	entry.c	FUNCTION_10
0x4000e29	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       251	entry.c	FUNCTION_10
0x4000e32	     0xf85f7000000	                           jne 0x4000f2f	       251	entry.c	FUNCTION_10
0x4000e38	        0x4883c468	                           add rsp, 0x68	       251	entry.c	FUNCTION_10
0x4000e3c	              0x5b	                                 pop rbx	       251	entry.c	FUNCTION_10
0x4000e3d	              0x5d	                                 pop rbp	       251	entry.c	FUNCTION_10
0x4000e3e	            0x415c	                                 pop r12	       251	entry.c	FUNCTION_10
0x4000e40	            0x415d	                                 pop r13	       251	entry.c	FUNCTION_10
0x4000e42	            0x415e	                                 pop r14	       251	entry.c	FUNCTION_10
0x4000e44	            0x415f	                                 pop r15	       251	entry.c	FUNCTION_10
0x4000e46	              0xc3	                                     ret	       251	entry.c	FUNCTION_10
0x4000e47	    0x660f1f840000	                    nop word [rax + rax]	       251	entry.c	FUNCTION_10
0x4000e50	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000e55	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000e5a	            0x31f6	                            xor esi, esi	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000e5c	      0xba00000000	                              mov edx, 0	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000e61	      0xe800000000	                          call 0x4000e66	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0x4000e66	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e6b	          0x4d85ff	                           test r15, r15	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e6e	     0xf8499feffff	                            je 0x4000d0d	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e74	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e78	        0x48c1e004	                              shl rax, 4	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e7c	          0x4c01f8	                            add rax, r15	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e7f	          0x4939c7	                            cmp r15, rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e82	            0x7255	                            jb 0x4000ed9	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e84	      0xe984feffff	                           jmp 0x4000d0d	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e89	     0xf1f80000000	                         nop dword [rax]	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e90	          0x4c89f6	                            mov rsi, r14	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e93	          0x4889c7	                            mov rdi, rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e96	        0x48890424	                    mov qword [rsp], rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e9a	      0xe851f4ffff	          call sym.checkout_entry.part.4	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000e9f	        0x488b1424	                    mov rdx, qword [rsp]	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4000ea3	          0x4109c4	                            or r12d, eax	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0x4000ea6	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0x4000eab	          0x8b4230	            mov eax, dword [rdx + 0x30] 	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4000eae	          0x4901c5	                            add r13, rax	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4000eb1	          0x4c89ee	                            mov rsi, r13	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0x4000eb4	      0xe800000000	                          call 0x4000eb9	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0x4000eb9	        0x4983c710	                           add r15, 0x10	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ebd	     0xf844afeffff	                            je 0x4000d0d	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ec3	        0x8b442438	            mov eax, dword [rsp + 0x38] 	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ec7	        0x48c1e004	                              shl rax, 4	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ecb	      0x4803442430	             add rax, qword [rsp + 0x30]	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ed0	          0x4939c7	                            cmp r15, rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ed3	     0xf8334feffff	                           jae 0x4000d0d	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x4000ed9	      0x49837f0800	                  cmp qword [r15 + 8], 0	       211	entry.c	FUNCTION_10	WHILE_1	IF_1
0x4000ede	            0x7430	                            je 0x4000f10	       211	entry.c	FUNCTION_10	WHILE_1	IF_1
0x4000ee0	          0x498b37	                    mov rsi, qword [r15]	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000ee3	          0x4889f7	                            mov rdi, rsi	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000ee6	        0x48893424	                    mov qword [rsp], rsi	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000eea	      0xe800000000	                          call 0x4000eef	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0x4000eef	        0x488b3424	                    mov rsi, qword [rsp]	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x4000ef3	          0x498b3e	                    mov rdi, qword [r14]	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x4000ef6	            0x31c9	                            xor ecx, ecx	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x4000ef8	            0x89c2	                            mov edx, eax	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x4000efa	      0xe800000000	                          call 0x4000eff	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0x4000eff	          0x4885c0	                           test rax, rax	       227	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4000f02	            0x758c	                           jne 0x4000e90	       227	entry.c	FUNCTION_10	WHILE_1	IF_2
0x4000f04	    0x41bc01000000	                             mov r12d, 1	       232	entry.c	FUNCTION_10	WHILE_1	ELSE_1
0x4000f0a	            0xebad	                           jmp 0x4000eb9	       232	entry.c	FUNCTION_10	WHILE_1	ELSE_1
0x4000f0c	         0xf1f4000	                         nop dword [rax]	       232	entry.c	FUNCTION_10	WHILE_1	ELSE_1
0x4000f10	          0x498b17	                    mov rdx, qword [r15]	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x4000f13	          0x488b33	                    mov rsi, qword [rbx]	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x4000f16	      0xbf00000000	                              mov edi, 0	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x4000f1b	            0x31c0	                            xor eax, eax	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x4000f1d	        0x4183cc01	                              or r12d, 1	       216	entry.c	FUNCTION_10	WHILE_1	IF_1
0x4000f21	      0xe800000000	                          call 0x4000f26	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0x4000f26	    0x48c703000000	                      mov qword [rbx], 0	       222	entry.c	FUNCTION_10	WHILE_1	IF_1
0x4000f2d	            0xeb8a	                           jmp 0x4000eb9	       223	entry.c	FUNCTION_10	WHILE_1	IF_1
0x4000f2f	      0xe800000000	                          call 0x4000f34	       251	entry.c	FUNCTION_10
remove_available_paths	IF,1:SWITCH,0:ELSE,0:DO,0:FOR,0:WHILE,0:functions,0:CALL,1	14
0x4000040	              0x53	                                push rbx	       153	entry.c	FUNCTION_9
0x4000041	          0x4889fb	                            mov rbx, rdi	       153	entry.c	FUNCTION_9
0x4000044	          0x4889f7	                            mov rdi, rsi	       153	entry.c	FUNCTION_9
0x4000047	          0x488b33	                    mov rsi, qword [rbx]	       157	entry.c	FUNCTION_9	CALL_1
0x400004a	      0xe800000000	                          call 0x400004f	       157	entry.c	FUNCTION_9	CALL_1
0x400004f	          0x4885c0	                           test rax, rax	       158	entry.c	FUNCTION_9	IF_1
0x4000052	            0x7407	                            je 0x400005b	       158	entry.c	FUNCTION_9	IF_1
0x4000054	          0x488b13	                    mov rdx, qword [rbx]	       159	entry.c	FUNCTION_9	IF_1
0x4000057	        0x48895008	                mov qword [rax + 8], rdx	       159	entry.c	FUNCTION_9	IF_1
0x400005b	          0x4885c0	                           test rax, rax	       160	entry.c	FUNCTION_9
0x400005e	           0xf94c0	                                 sete al	       160	entry.c	FUNCTION_9
0x4000061	           0xfb6c0	                           movzx eax, al	       160	entry.c	FUNCTION_9
0x4000064	              0x5b	                                 pop rbx	       161	entry.c	FUNCTION_9
0x4000065	              0xc3	                                     ret	       161	entry.c	FUNCTION_9
