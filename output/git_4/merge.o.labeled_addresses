drop_save	DO,0:SWITCH,0:IF,0:CALL,6:WHILE,0:functions,0:FOR,0:ELSE,0	13
0x4000040	    0x891500000000	            mov dword [0x04000046], edx 	       195	merge.c	FUNCTION_6
0x4000046	            0x31c0	                            xor eax, eax	       197	merge.c	FUNCTION_6
0x4000048	              0xc3	                                     ret	       197	merge.c	FUNCTION_6
0x4000049	     0xf1f80000000	                         nop dword [rax]	       197	merge.c	FUNCTION_6
0x4000050	          0x8b470c	              mov eax, dword [rdi + 0xc]	       709	merge.c	FUNCTION_21
0x4000053	             0x102	                    add dword [rdx], eax	       709	merge.c	FUNCTION_21
0x4000055	              0xc3	                                     ret	       709	merge.c	FUNCTION_21
0x4000056	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       709	merge.c	FUNCTION_21
0x4000060	            0x4155	                                push r13	       558	merge.c	FUNCTION_17
0x4000062	            0x4154	                                push r12	       558	merge.c	FUNCTION_17
0x4000064	          0x4989d5	                            mov r13, rdx	       558	merge.c	FUNCTION_17
0x4000067	              0x55	                                push rbp	       558	merge.c	FUNCTION_17
0x4000068	              0x53	                                push rbx	       558	merge.c	FUNCTION_17
collect_parents	DO,0:SWITCH,0:IF,6:CALL,13:WHILE,0:functions,0:FOR,2:ELSE,1	538
0x4000970	            0x4157	                                push r15	      1087	merge.c	FUNCTION_38
0x4000972	            0x4156	                                push r14	      1087	merge.c	FUNCTION_38
0x4000974	            0x4155	                                push r13	      1087	merge.c	FUNCTION_38
0x4000976	            0x4154	                                push r12	      1087	merge.c	FUNCTION_38
0x4000978	          0x4989cd	                            mov r13, rcx	      1087	merge.c	FUNCTION_38
0x400097b	              0x55	                                push rbp	      1087	merge.c	FUNCTION_38
0x400097c	              0x53	                                push rbx	      1087	merge.c	FUNCTION_38
0x400097d	          0x4889fd	                            mov rbp, rdi	      1087	merge.c	FUNCTION_38
0x4000980	          0x4189d4	                           mov r12d, edx	      1087	merge.c	FUNCTION_38
0x4000983	    0x4881ec180100	                          sub rsp, 0x118	      1087	merge.c	FUNCTION_38
0x400098a	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1087	merge.c	FUNCTION_38
0x4000993	    0x48898c240801	            mov qword [rsp + 0x108], rcx	      1087	merge.c	FUNCTION_38
0x400099b	            0x31c9	                            xor ecx, ecx	      1087	merge.c	FUNCTION_38
0x400099d	          0x4d85c0	                             test r8, r8	      1093	merge.c	FUNCTION_38	IF_1
0x40009a0	      0x4889742408	                mov qword [rsp + 8], rsi	      1087	merge.c	FUNCTION_38
0x40009a5	      0x4c89442428	              mov qword [rsp + 0x28], r8	      1087	merge.c	FUNCTION_38
0x40009aa	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1089	merge.c	FUNCTION_38
0x40009b3	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1091	merge.c	FUNCTION_38
0x40009bc	    0x48c744247800	               mov qword [rsp + 0x78], 0	      1091	merge.c	FUNCTION_38
0x40009c5	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1091	merge.c	FUNCTION_38
0x40009d1	     0xf84e3070000	                            je 0x40011ba	      1093	merge.c	FUNCTION_38	IF_1
0x40009d7	    0x8b3500000000	            mov esi, dword [0x040009dd] 	      1093	merge.c	FUNCTION_38	IF_1
0x40009dd	      0x4c8d742470	                   lea r14, [rsp + 0x70]	      1094	merge.c	FUNCTION_38	IF_1
0x40009e2	            0x85f6	                           test esi, esi	      1093	merge.c	FUNCTION_38	IF_1
0x40009e4	     0xf8548050000	                           jne 0x4000f32	      1093	merge.c	FUNCTION_38	IF_1
0x40009ea	          0x4885ed	                           test rbp, rbp	      1096	merge.c	FUNCTION_38	IF_2
0x40009ed	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      1090	merge.c	FUNCTION_38
0x40009f2	            0x7411	                            je 0x4000a05	      1096	merge.c	FUNCTION_38	IF_2
0x40009f4	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1097	merge.c	FUNCTION_38	CALL_1
0x40009f9	          0x4889ef	                            mov rdi, rbp	      1097	merge.c	FUNCTION_38	CALL_1
0x40009fc	      0xe800000000	                          call 0x4000a01	      1097	merge.c	FUNCTION_38	CALL_1
0x4000a01	        0x488d5808	                      lea rbx, [rax + 8]	      1097	merge.c	FUNCTION_38	CALL_1
0x4000a05	        0x4183fc01	                             cmp r12d, 1	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000a09	     0xf84b1050000	                            je 0x4000fc0	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000a0f	          0x4531ff	                          xor r15d, r15d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a12	          0x4585e4	                         test r12d, r12d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a15	            0x7e37	                           jle 0x4000a4e	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a17	    0x660f1f840000	                    nop word [rax + rax]	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a20	      0x4b8b7cfd00	            mov rdi, qword [r13 + r15*8]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a25	      0xe800000000	                          call 0x4000a2a	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a2a	          0x4885c0	                           test rax, rax	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4000a2d	          0x4989c0	                             mov r8, rax	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a30	     0xf84ca040000	                            je 0x4000f00	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4000a36	          0x4889de	                            mov rsi, rbx	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a39	          0x4c89c7	                             mov rdi, r8	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a3c	        0x4983c701	                              add r15, 1	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a40	      0xe800000000	                          call 0x4000a45	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a45	          0x4539fc	                          cmp r12d, r15d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a48	        0x488d5808	                      lea rbx, [rax + 8]	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a4c	            0x7fd2	                            jg 0x4000a20	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a4e	      0x488b442408	                mov rax, qword [rsp + 8]	       997	merge.c	FUNCTION_35
0x4000a53	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a58	      0x488d5c2460	                   lea rbx, [rsp + 0x60]	      1004	merge.c	FUNCTION_35
0x4000a5d	    0xc70001000000	                      mov dword [rax], 1	       997	merge.c	FUNCTION_35
0x4000a63	      0x48897c2460	             mov qword [rsp + 0x60], rdi	       997	merge.c	FUNCTION_35
0x4000a68	      0xe800000000	                          call 0x4000a6d	      1000	merge.c	FUNCTION_35	CALL_1
0x4000a6d	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      1001	merge.c	FUNCTION_35	CALL_2
0x4000a72	    0x48898424d000	             mov qword [rsp + 0xd0], rax	      1000	merge.c	FUNCTION_35	CALL_1
0x4000a7a	      0xe800000000	                          call 0x4000a7f	      1001	merge.c	FUNCTION_35	CALL_2
0x4000a7f	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1003	merge.c	FUNCTION_35
0x4000a88	    0x4883bc24d000	               cmp qword [rsp + 0xd0], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000a91	            0x7430	                            je 0x4000ac3	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000a93	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x4000a9b	      0xe800000000	                          call 0x4000aa0	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x4000aa0	          0x4839c5	                            cmp rbp, rax	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000aa3	     0xf841f030000	                            je 0x4000dc8	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000aa9	          0x4889de	                            mov rsi, rbx	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4000aac	          0x4889c7	                            mov rdi, rax	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4000aaf	      0xe800000000	                          call 0x4000ab4	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4000ab4	    0x4883bc24d000	               cmp qword [rsp + 0xd0], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000abd	        0x488d5808	                      lea rbx, [rax + 8]	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4000ac1	            0x75d0	                           jne 0x4000a93	      1005	merge.c	FUNCTION_35	WHILE_1
0x4000ac3	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      1012	merge.c	FUNCTION_35
0x4000ac8	          0x4d85f6	                           test r14, r14	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4000acb	      0x4c89642450	             mov qword [rsp + 0x50], r12	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000ad0	     0xf84ec060000	                            je 0x40011c2	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4000ad6	          0x4d85e4	                           test r12, r12	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000ad9	     0xf8459020000	                            je 0x4000d38	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000adf	              0x90	                                     nop	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000ae0	        0x498b0424	                    mov rax, qword [r12]	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4000ae4	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       450	merge.c	FUNCTION_15	CALL_1
0x4000aec	            0x31d2	                            xor edx, edx	       450	merge.c	FUNCTION_15	CALL_1
0x4000aee	    0x48c784249000	               mov qword [rsp + 0x90], 0	       444	merge.c	FUNCTION_15
0x4000afa	    0x48c784249800	               mov qword [rsp + 0x98], 0	       444	merge.c	FUNCTION_15
0x4000b06	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       444	merge.c	FUNCTION_15
0x4000b12	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       445	merge.c	FUNCTION_15
0x4000b1e	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4000b22	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	       445	merge.c	FUNCTION_15
0x4000b2e	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       445	merge.c	FUNCTION_15
0x4000b3a	        0x4883c608	                              add rsi, 8	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4000b3e	      0xe800000000	                          call 0x4000b43	       450	merge.c	FUNCTION_15	CALL_1
0x4000b43	    0x488bac24c000	            mov rbp, qword [rsp + 0xc0] 	       451	merge.c	FUNCTION_15
0x4000b4b	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4000b57	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4000b63	    0xc78424000100	              mov dword [rsp + 0x100], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4000b6e	          0x4889ef	                            mov rdi, rbp	       454	merge.c	FUNCTION_15	CALL_3
0x4000b71	      0xe800000000	                          call 0x4000b76	       454	merge.c	FUNCTION_15	CALL_3
0x4000b76	          0x4885c0	                           test rax, rax	       455	merge.c	FUNCTION_15	IF_1
0x4000b79	          0x4989c5	                            mov r13, rax	       454	merge.c	FUNCTION_15	CALL_3
0x4000b7c	     0xf841b070000	                            je 0x400129d	       455	merge.c	FUNCTION_15	IF_1
0x4000b82	          0x4889ef	                            mov rdi, rbp	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b85	      0xe800000000	                          call 0x4000b8a	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b8a	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b8f	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b97	            0x89c6	                            mov esi, eax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b99	          0x4889ef	                            mov rdi, rbp	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000b9c	      0xe800000000	                          call 0x4000ba1	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000ba1	            0x85c0	                           test eax, eax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000ba3	            0x7e45	                           jle 0x4000bea	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4000ba5	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000baa	      0xbe00000000	                              mov esi, 0	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000baf	      0xe800000000	                          call 0x4000bb4	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000bb4	            0x85c0	                           test eax, eax	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000bb6	     0xf85e4020000	                           jne 0x4000ea0	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4000bbc	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000bc1	      0xbe00000000	                              mov esi, 0	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000bc6	      0xe800000000	                          call 0x4000bcb	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000bcb	            0x85c0	                           test eax, eax	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000bcd	     0xf85fd020000	                           jne 0x4000ed0	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4000bd3	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000bd8	      0xbe00000000	                              mov esi, 0	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000bdd	      0xe800000000	                          call 0x4000be2	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000be2	            0x85c0	                           test eax, eax	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000be4	     0xf859a030000	                           jne 0x4000f84	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4000bea	          0x4889ef	                            mov rdi, rbp	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000bed	      0xe800000000	                          call 0x4000bf2	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000bf2	          0x4801e8	                            add rax, rbp	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000bf5	          0x4839c5	                            cmp rbp, rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000bf8	     0xf83da010000	                           jae 0x4000dd8	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000bfe	        0x8078ff5e	                cmp byte [rax - 1], 0x5e	       478	merge.c	FUNCTION_15	FOR_1
0x4000c02	     0xf85d0010000	                           jne 0x4000dd8	       478	merge.c	FUNCTION_15	FOR_1
0x4000c08	            0x31db	                            xor ebx, ebx	       478	merge.c	FUNCTION_15	FOR_1
0x4000c0a	            0xeb0a	                           jmp 0x4000c16	       478	merge.c	FUNCTION_15	FOR_1
0x4000c0c	         0xf1f4000	                         nop dword [rax]	       478	merge.c	FUNCTION_15	FOR_1
0x4000c10	        0x8078ff5e	                cmp byte [rax - 1], 0x5e	       478	merge.c	FUNCTION_15	FOR_1
0x4000c14	            0x750c	                           jne 0x4000c22	       478	merge.c	FUNCTION_15	FOR_1
0x4000c16	        0x4883e801	                              sub rax, 1	       479	merge.c	FUNCTION_15	FOR_1
0x4000c1a	          0x83c301	                              add ebx, 1	       480	merge.c	FUNCTION_15	FOR_1
0x4000c1d	          0x4839c5	                            cmp rbp, rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000c20	            0x75ee	                           jne 0x4000c10	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000c22	          0x4863db	                         movsxd rbx, ebx	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4000c25	    0x41bf01000000	                             mov r15d, 1	       482	merge.c	FUNCTION_15	IF_6
0x4000c2b	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000c33	            0x31c0	                            xor eax, eax	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000c35	          0x4889ea	                            mov rdx, rbp	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000c38	      0xbe00000000	                              mov esi, 0	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000c3d	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       503	merge.c	FUNCTION_15	IF_11
0x4000c49	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	       503	merge.c	FUNCTION_15	IF_11
0x4000c55	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	       503	merge.c	FUNCTION_15	IF_11
0x4000c61	      0xe800000000	                          call 0x4000c66	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4000c66	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	       162	strbuf.h	FUNCTION_55	IF_1
0x4000c6e	    0x488b9424d800	            mov rdx, qword [rsp + 0xd8] 	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4000c76	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_55	IF_1
0x4000c7a	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_55	IF_1
0x4000c7e	          0x4829da	                            sub rdx, rbx	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4000c81	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_55	IF_1
0x4000c84	     0xf872a060000	                            ja 0x40012b4	       162	strbuf.h	FUNCTION_55	IF_1
0x4000c8a	    0x488bbc24e000	            mov rdi, qword [rsp + 0xe0] 	       165	strbuf.h	FUNCTION_55	IF_2
0x4000c92	    0x48899424d800	             mov qword [rsp + 0xd8], rdx	       164	strbuf.h	FUNCTION_55
0x4000c9a	    0x4881ff000000	                              cmp rdi, 0	       165	strbuf.h	FUNCTION_55	IF_2
0x4000ca1	     0xf8404030000	                            je 0x4000fab	       165	strbuf.h	FUNCTION_55	IF_2
0x4000ca7	        0xc6041700	                 mov byte [rdi + rdx], 0	       166	strbuf.h	FUNCTION_55	IF_2
0x4000cab	    0x488bbc24e000	            mov rdi, qword [rsp + 0xe0] 	       166	strbuf.h	FUNCTION_55	IF_2
0x4000cb3	      0xe800000000	                          call 0x4000cb8	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4000cb8	            0x85c0	                           test eax, eax	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4000cba	     0xf8485010000	                            je 0x4000e45	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4000cc0	          0x4585ff	                         test r15d, r15d	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cc3	      0xb800000000	                              mov eax, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cc8	      0xbd00000000	                              mov ebp, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000ccd	        0x480f44e8	                          cmove rbp, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cd1	    0x488b8424e000	            mov rax, qword [rsp + 0xe0] 	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cd9	        0x498d7d04	                      lea rdi, [r13 + 4]	       509	merge.c	FUNCTION_15	IF_11	IF_12	CALL_23
0x4000cdd	        0x488d580b	                    lea rbx, [rax + 0xb]	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000ce1	      0xe800000000	                          call 0x4000ce6	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000ce6	          0x4c89f7	                            mov rdi, r14	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000ce9	          0x4889c2	                            mov rdx, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cec	          0x4989e8	                             mov r8, rbp	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cef	          0x4889d9	                            mov rcx, rbx	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cf2	      0xbe00000000	                              mov esi, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cf7	            0x31c0	                            xor eax, eax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cf9	      0xe800000000	                          call 0x4000cfe	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4000cfe	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4000d06	      0xe800000000	                          call 0x4000d0b	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4000d0b	       0xf1f440000	                   nop dword [rax + rax]	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4000d10	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       533	merge.c	FUNCTION_15	CALL_32
0x4000d18	      0xe800000000	                          call 0x4000d1d	       533	merge.c	FUNCTION_15	CALL_32
0x4000d1d	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       534	merge.c	FUNCTION_15	CALL_33
0x4000d25	      0xe800000000	                          call 0x4000d2a	       534	merge.c	FUNCTION_15	CALL_33
0x4000d2a	      0x4d8b642408	                mov r12, qword [r12 + 8]	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000d2f	          0x4d85e4	                           test r12, r12	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000d32	     0xf85a8fdffff	                           jne 0x4000ae0	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4000d38	    0x8b0500000000	            mov eax, dword [0x04000d3e] 	      1020	merge.c	FUNCTION_36
0x4000d3e	    0x8b1500000000	            mov edx, dword [0x04000d44] 	      1022	merge.c	FUNCTION_36
0x4000d44	          0x4c89f7	                            mov rdi, r14	      1024	merge.c	FUNCTION_36	CALL_2
0x4000d47	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1024	merge.c	FUNCTION_36	CALL_2
0x4000d4c	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4000d55	            0x85c0	                           test eax, eax	      1020	merge.c	FUNCTION_36
0x4000d57	    0x8b0500000000	            mov eax, dword [0x04000d5d] 	      1021	merge.c	FUNCTION_36
0x4000d5d	           0xf94c1	                                 sete cl	      1020	merge.c	FUNCTION_36
0x4000d60	            0x85d2	                           test edx, edx	      1022	merge.c	FUNCTION_36
0x4000d62	          0x4889de	                            mov rsi, rbx	      1024	merge.c	FUNCTION_36	CALL_2
0x4000d65	           0xf9fc2	                                 setg dl	      1022	merge.c	FUNCTION_36
0x4000d68	        0x89442444	             mov dword [rsp + 0x44], eax	      1021	merge.c	FUNCTION_36
0x4000d6c	          0x8d0412	                    lea eax, [rdx + rdx]	      1022	merge.c	FUNCTION_36
0x4000d6f	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1024	merge.c	FUNCTION_36	CALL_2
0x4000d74	             0x9c8	                             or eax, ecx	      1022	merge.c	FUNCTION_36
0x4000d76	        0x88442440	               mov byte [rsp + 0x40], al	      1022	merge.c	FUNCTION_36
0x4000d7a	      0xe800000000	                          call 0x4000d7f	      1024	merge.c	FUNCTION_36	CALL_2
0x4000d7f	        0x488b4308	                mov rax, qword [rbx + 8]	      1025	merge.c	FUNCTION_36	IF_1
0x4000d83	          0x4885c0	                           test rax, rax	      1025	merge.c	FUNCTION_36	IF_1
0x4000d86	     0xf85bc010000	                           jne 0x4000f48	      1025	merge.c	FUNCTION_36	IF_1
0x4000d8c	          0x4c89f7	                            mov rdi, r14	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x4000d8f	      0xe800000000	                          call 0x4000d94	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x4000d94	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x4000d99	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      1124	merge.c	FUNCTION_38
0x4000da1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1124	merge.c	FUNCTION_38
0x4000daa	     0xf8537050000	                           jne 0x40012e7	      1124	merge.c	FUNCTION_38
0x4000db0	    0x4881c4180100	                          add rsp, 0x118	      1124	merge.c	FUNCTION_38
0x4000db7	              0x5b	                                 pop rbx	      1124	merge.c	FUNCTION_38
0x4000db8	              0x5d	                                 pop rbp	      1124	merge.c	FUNCTION_38
0x4000db9	            0x415c	                                 pop r12	      1124	merge.c	FUNCTION_38
0x4000dbb	            0x415d	                                 pop r13	      1124	merge.c	FUNCTION_38
0x4000dbd	            0x415e	                                 pop r14	      1124	merge.c	FUNCTION_38
0x4000dbf	            0x415f	                                 pop r15	      1124	merge.c	FUNCTION_38
0x4000dc1	              0xc3	                                     ret	      1124	merge.c	FUNCTION_38
0x4000dc2	    0x660f1f440000	                    nop word [rax + rax]	      1124	merge.c	FUNCTION_38
0x4000dc8	      0x488b442408	                mov rax, qword [rsp + 8]	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000dcd	    0xc70000000000	                      mov dword [rax], 0	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000dd3	      0xe9b0fcffff	                           jmp 0x4000a88	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4000dd8	      0xbe7e000000	                           mov esi, 0x7e	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4000ddd	          0x4889ef	                            mov rdi, rbp	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4000de0	      0xe800000000	                          call 0x4000de5	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4000de5	          0x4885c0	                           test rax, rax	       486	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4000de8	            0x7468	                            je 0x4000e52	       486	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4000dea	        0x488d5001	                      lea rdx, [rax + 1]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000dee	         0xfb64001	               movzx eax, byte [rax + 1]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000df2	            0x84c0	                             test al, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000df4	     0xf84d0030000	                            je 0x40011ca	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000dfa	           0xfb6c8	                           movzx ecx, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000dfd	    0xf68100000000	                      test byte [rcx], 2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e04	            0x744c	                            je 0x4000e52	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e06	      0xbb01000000	                              mov ebx, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e0b	            0x31c9	                            xor ecx, ecx	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e0d	            0xeb0d	                           jmp 0x4000e1c	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e0f	              0x90	                                     nop	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e10	           0xfb6f0	                           movzx esi, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e13	    0xf68600000000	                      test byte [rsi], 2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e1a	            0x7436	                            je 0x4000e52	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e1c	            0x3c30	                            cmp al, 0x30	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e1e	           0xf95c0	                                setne al	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e21	        0x4883c201	                              add rdx, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e25	          0x83c301	                              add ebx, 1	       492	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e28	           0xfb6c0	                           movzx eax, al	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e2b	             0x9c1	                             or ecx, eax	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e2d	           0xfb602	                   movzx eax, byte [rdx]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e30	            0x84c0	                             test al, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e32	            0x75dc	                           jne 0x4000e10	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4000e34	          0x4531ff	                          xor r15d, r15d	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000e37	            0x85c9	                           test ecx, ecx	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000e39	          0x4863db	                         movsxd rbx, ebx	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000e3c	        0x410f95c7	                              setne r15b	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000e40	      0xe9e6fdffff	                           jmp 0x4000c2b	       496	merge.c	FUNCTION_15	ELSE_1	IF_7	ELSE_2	IF_9
0x4000e45	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x4000e4d	      0xe800000000	                          call 0x4000e52	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x4000e52	        0x498b5d18	            mov rbx, qword [r13 + 0x18] 	       518	merge.c	FUNCTION_15	IF_13
0x4000e56	          0x4885db	                           test rbx, rbx	       518	merge.c	FUNCTION_15	IF_13
0x4000e59	            0x7419	                            je 0x4000e74	       518	merge.c	FUNCTION_15	IF_13
0x4000e5b	          0x488b03	                    mov rax, qword [rbx]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000e5e	          0x4885c0	                           test rax, rax	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000e61	            0x7411	                            je 0x4000e74	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000e63	           0xfb600	                   movzx eax, byte [rax]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000e66	            0x89c2	                            mov edx, eax	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000e68	          0x83e20e	                            and edx, 0xe	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000e6b	          0x80fa08	                               cmp dl, 8	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000e6e	     0xf84d0020000	                            je 0x4001144	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4000e74	        0x498d7d04	                      lea rdi, [r13 + 4]	       531	merge.c	FUNCTION_15	CALL_31
0x4000e78	      0xe800000000	                          call 0x4000e7d	       530	merge.c	FUNCTION_15	CALL_30
0x4000e7d	          0x4889e9	                            mov rcx, rbp	       530	merge.c	FUNCTION_15	CALL_30
0x4000e80	          0x4889c2	                            mov rdx, rax	       530	merge.c	FUNCTION_15	CALL_30
0x4000e83	      0xbe00000000	                              mov esi, 0	       530	merge.c	FUNCTION_15	CALL_30
0x4000e88	          0x4c89f7	                            mov rdi, r14	       530	merge.c	FUNCTION_15	CALL_30
0x4000e8b	            0x31c0	                            xor eax, eax	       530	merge.c	FUNCTION_15	CALL_30
0x4000e8d	      0xe800000000	                          call 0x4000e92	       530	merge.c	FUNCTION_15	CALL_30
0x4000e92	      0xe979feffff	                           jmp 0x4000d10	       530	merge.c	FUNCTION_15	CALL_30
0x4000e97	    0x660f1f840000	                    nop word [rax + rax]	       530	merge.c	FUNCTION_15	CALL_30
0x4000ea0	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000ea8	      0xe800000000	                          call 0x4000ead	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000ead	          0x4889e9	                            mov rcx, rbp	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000eb0	          0x4889c2	                            mov rdx, rax	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000eb3	      0xbe00000000	                              mov esi, 0	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000eb8	          0x4c89f7	                            mov rdi, r14	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000ebb	            0x31c0	                            xor eax, eax	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000ebd	      0xe800000000	                          call 0x4000ec2	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000ec2	      0xe949feffff	                           jmp 0x4000d10	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000ec7	    0x660f1f840000	                    nop word [rax + rax]	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4000ed0	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000ed8	      0xe800000000	                          call 0x4000edd	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000edd	          0x4889e9	                            mov rcx, rbp	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000ee0	          0x4889c2	                            mov rdx, rax	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000ee3	      0xbe00000000	                              mov esi, 0	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000ee8	          0x4c89f7	                            mov rdi, r14	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000eeb	            0x31c0	                            xor eax, eax	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000eed	      0xe800000000	                          call 0x4000ef2	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000ef2	      0xe919feffff	                           jmp 0x4000d10	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000ef7	    0x660f1f840000	                    nop word [rax + rax]	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4000f00	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_66
0x4000f05	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_66
0x4000f0a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_66
0x4000f0c	      0x4889442410	             mov qword [rsp + 0x10], rax	        54	gettext.h	FUNCTION_66
0x4000f11	      0xe800000000	                          call 0x4000f16	        54	gettext.h	FUNCTION_66
0x4000f16	      0x4b8b7cfd00	            mov rdi, qword [r13 + r15*8]	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000f1b	          0x4889c2	                            mov rdx, rax	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000f1e	      0xbe00000000	                              mov esi, 0	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000f23	      0xe800000000	                          call 0x4000f28	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000f28	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000f2d	      0xe904fbffff	                           jmp 0x4000a36	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4000f32	    0x8b0d00000000	            mov ecx, dword [0x04000f38] 	      1094	merge.c	FUNCTION_38	IF_1
0x4000f38	      0xb800000000	                              mov eax, 0	      1094	merge.c	FUNCTION_38	IF_1
0x4000f3d	            0x85c9	                           test ecx, ecx	      1094	merge.c	FUNCTION_38	IF_1
0x4000f3f	        0x4c0f44f0	                          cmove r14, rax	      1094	merge.c	FUNCTION_38	IF_1
0x4000f43	      0xe9a2faffff	                           jmp 0x40009ea	      1094	merge.c	FUNCTION_38	IF_1
0x4000f48	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       162	strbuf.h	FUNCTION_55	IF_1
0x4000f4d	        0x488d48ff	                      lea rcx, [rax - 1]	      1026	merge.c	FUNCTION_36	CALL_3
0x4000f51	          0x488b13	                    mov rdx, qword [rbx]	       162	strbuf.h	FUNCTION_55	IF_1
0x4000f54	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_55	IF_1
0x4000f58	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_55	IF_1
0x4000f5c	          0x4839d1	                            cmp rcx, rdx	       162	strbuf.h	FUNCTION_55	IF_1
0x4000f5f	     0xf874f030000	                            ja 0x40012b4	       162	strbuf.h	FUNCTION_55	IF_1
0x4000f65	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_55	IF_2
0x4000f69	        0x48894b08	                mov qword [rbx + 8], rcx	       164	strbuf.h	FUNCTION_55
0x4000f6d	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_55	IF_2
0x4000f74	     0xf8403030000	                            je 0x400127d	       165	strbuf.h	FUNCTION_55	IF_2
0x4000f7a	      0xc64402ff00	             mov byte [rdx + rax - 1], 0	       166	strbuf.h	FUNCTION_55	IF_2
0x4000f7f	      0xe908feffff	                           jmp 0x4000d8c	       166	strbuf.h	FUNCTION_55	IF_2
0x4000f84	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f8c	      0xe800000000	                          call 0x4000f91	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f91	          0x4889e9	                            mov rcx, rbp	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f94	          0x4889c2	                            mov rdx, rax	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f97	      0xbe00000000	                              mov esi, 0	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f9c	          0x4c89f7	                            mov rdi, r14	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000f9f	            0x31c0	                            xor eax, eax	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000fa1	      0xe800000000	                          call 0x4000fa6	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000fa6	      0xe965fdffff	                           jmp 0x4000d10	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4000fab	    0x803d00000000	                cmp byte [0x04000fb2], 0	       168	strbuf.h	FUNCTION_55	CALL_2
0x4000fb2	     0xf84fbfcffff	                            je 0x4000cb3	       168	strbuf.h	FUNCTION_55	CALL_2
0x4000fb8	      0xe800000000	                          call 0x4000fbd	       168	strbuf.h	FUNCTION_55	CALL_2
0x4000fbd	           0xf1f00	                         nop dword [rax]	       168	strbuf.h	FUNCTION_55	CALL_2
0x4000fc0	        0x498b7500	                    mov rsi, qword [r13]	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fc4	      0xbf00000000	                              mov edi, 0	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fc9	      0xb90b000000	                            mov ecx, 0xb	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fd0	           0xf97c2	                                 seta dl	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fd3	           0xf92c0	                                 setb al	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fd6	          0x4531ff	                          xor r15d, r15d	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fd9	            0x38c2	                              cmp dl, al	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fdb	     0xf853ffaffff	                           jne 0x4000a20	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000fe1	    0x4c8dac24d000	                   lea r13, [rsp + 0xd0]	      1035	merge.c	FUNCTION_37	IF_1
0x4000fe9	          0x4d85f6	                           test r14, r14	      1035	merge.c	FUNCTION_37	IF_1
0x4000fec	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      1033	merge.c	FUNCTION_37
0x4000ff8	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	      1033	merge.c	FUNCTION_37
0x4001004	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      1033	merge.c	FUNCTION_37
0x4001010	        0x4d0f45ee	                         cmovne r13, r14	      1035	merge.c	FUNCTION_37	IF_1
0x4001014	      0xe800000000	                          call 0x4001019	      1038	merge.c	FUNCTION_37	CALL_1
0x4001019	            0x31f6	                            xor esi, esi	        53	fcntl2.h	FUNCTION_68	IF_2	CALL_9
0x400101b	      0x4889442438	             mov qword [rsp + 0x38], rax	      1038	merge.c	FUNCTION_37	CALL_1
0x4001020	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_68	IF_2	CALL_9
0x4001023	            0x31c0	                            xor eax, eax	        53	fcntl2.h	FUNCTION_68	IF_2	CALL_9
0x4001025	      0xe800000000	                          call 0x400102a	        53	fcntl2.h	FUNCTION_68	IF_2	CALL_9
0x400102a	            0x85c0	                           test eax, eax	      1040	merge.c	FUNCTION_37	IF_2
0x400102c	          0x4189c4	                           mov r12d, eax	        53	fcntl2.h	FUNCTION_68	IF_2	CALL_9
0x400102f	     0xf88ab020000	                            js 0x40012e0	      1040	merge.c	FUNCTION_37	IF_2
0x4001035	            0x31d2	                            xor edx, edx	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4001037	            0x89c6	                            mov esi, eax	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4001039	          0x4c89ef	                            mov rdi, r13	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x400103c	      0xe800000000	                          call 0x4001041	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4001041	          0x4885c0	                           test rax, rax	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x4001044	     0xf888f020000	                            js 0x40012d9	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x400104a	          0x4489e7	                           mov edi, r12d	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x400104d	      0xe800000000	                          call 0x4001052	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001052	            0x85c0	                           test eax, eax	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001054	     0xf8866020000	                            js 0x40012c0	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x400105a	            0x31d2	                            xor edx, edx	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x400105c	            0xeb05	                           jmp 0x4001063	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x400105e	            0x6690	                                     nop	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001060	          0x4489fa	                           mov edx, r15d	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001063	        0x498b4508	                mov rax, qword [r13 + 8]	      1048	merge.c	FUNCTION_37	FOR_1
0x4001067	          0x4c63e2	                         movsxd r12, edx	      1048	merge.c	FUNCTION_37	FOR_1
0x400106a	          0x4939c4	                            cmp r12, rax	      1048	merge.c	FUNCTION_37	FOR_1
0x400106d	      0x4889442430	             mov qword [rsp + 0x30], rax	      1048	merge.c	FUNCTION_37	FOR_1
0x4001072	     0xf8362010000	                           jae 0x40011da	      1048	merge.c	FUNCTION_37	FOR_1
0x4001078	        0x4d8b7d10	            mov r15, qword [r13 + 0x10] 	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x400107c	      0xbe0a000000	                            mov esi, 0xa	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001081	        0x8954241c	             mov dword [rsp + 0x1c], edx	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001085	        0x4b8d0c27	                    lea rcx, [r15 + r12]	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001089	          0x4889cf	                            mov rdi, rcx	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x400108c	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001091	      0xe800000000	                          call 0x4001096	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001096	          0x4885c0	                           test rax, rax	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x4001099	      0x4889442420	             mov qword [rsp + 0x20], rax	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x400109e	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x40010a3	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x40010a7	     0xf8403010000	                            je 0x40011b0	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x40010ad	          0x4c29f8	                            sub rax, r15	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x40010b0	        0x448d7801	                     lea r15d, [rax + 1]	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x40010b4	          0x4489f8	                           mov eax, r15d	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x40010b7	            0x29d0	                            sub eax, edx	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x40010b9	          0x83f829	                           cmp eax, 0x29	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x40010bc	     0xf8eba000000	                           jle 0x400117c	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x40010c2	    0x488db424f000	                   lea rsi, [rsp + 0xf0]	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x40010ca	          0x4889cf	                            mov rdi, rcx	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x40010cd	      0xe800000000	                          call 0x40010d2	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x40010d2	            0x85c0	                           test eax, eax	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x40010d4	     0xf85a2000000	                           jne 0x400117c	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x40010da	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40010de	      0xba02000000	                              mov edx, 2	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40010e3	      0xbe00000000	                              mov esi, 0	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40010e8	      0x4a8d4c2028	            lea rcx, [rax + r12 + 0x28] 	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40010ed	          0x4889cf	                            mov rdi, rcx	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40010f0	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40010f5	      0xe800000000	                          call 0x40010fa	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40010fa	            0x85c0	                           test eax, eax	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40010fc	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4001101	     0xf8559ffffff	                           jne 0x4001060	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x4001107	           0xfb611	                   movzx edx, byte [rcx]	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x400110a	          0x4c89e7	                            mov rdi, r12	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x400110d	          0xc60100	                       mov byte [rcx], 0	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4001110	        0x49037d10	             add rdi, qword [r13 + 0x10]	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x4001114	        0x88542410	               mov byte [rsp + 0x10], dl	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4001118	      0xe800000000	                          call 0x400111d	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x400111d	       0xfb6542410	           movzx edx, byte [rsp + 0x10] 	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4001122	          0x4889c7	                            mov rdi, rax	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x4001125	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4001129	          0x4885ff	                           test rdi, rdi	      1070	merge.c	FUNCTION_37	FOR_1	IF_8
0x400112c	      0x4288542028	         mov byte [rax + r12 + 0x28], dl	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x4001131	            0x7449	                            je 0x400117c	      1070	merge.c	FUNCTION_37	FOR_1	IF_8
0x4001133	          0x4889de	                            mov rsi, rbx	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4001136	      0xe800000000	                          call 0x400113b	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x400113b	        0x488d5808	                      lea rbx, [rax + 8]	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x400113f	      0xe91cffffff	                           jmp 0x4001060	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4001144	            0xd0e8	                               shr al, 1	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x4001146	            0x89c7	                            mov edi, eax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001148	          0x83e707	                              and edi, 7	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x400114b	      0xe800000000	                          call 0x4001150	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001150	          0x488b3b	                    mov rdi, qword [rbx]	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x4001153	          0x4989c5	                            mov r13, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001156	        0x4883c704	                              add rdi, 4	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x400115a	      0xe800000000	                          call 0x400115f	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x400115f	          0x4989e8	                             mov r8, rbp	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001162	          0x4889c2	                            mov rdx, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001165	          0x4c89e9	                            mov rcx, r13	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001168	      0xbe00000000	                              mov esi, 0	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x400116d	          0x4c89f7	                            mov rdi, r14	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001170	            0x31c0	                            xor eax, eax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001172	      0xe800000000	                          call 0x4001177	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001177	      0xe994fbffff	                           jmp 0x4000d10	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x400117c	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x4001182	            0x7408	                            je 0x400118c	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x4001184	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1072	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x4001189	          0xc60000	                       mov byte [rax], 0	      1072	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x400118c	        0x4d036510	             add r12, qword [r13 + 0x10]	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001190	      0xbf00000000	                              mov edi, 0	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001195	      0xe866f3ffff	                       call sym._.part.4	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400119a	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x400119f	          0x4889c7	                            mov rdi, rax	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x40011a2	            0x31c0	                            xor eax, eax	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x40011a4	          0x4c89e2	                            mov rdx, r12	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x40011a7	      0xe800000000	                          call 0x40011ac	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x40011ac	         0xf1f4000	                         nop dword [rax]	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x40011b0	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	      1057	merge.c	FUNCTION_37	FOR_1	ELSE_1
0x40011b5	      0xe9fafeffff	                           jmp 0x40010b4	      1057	merge.c	FUNCTION_37	FOR_1	ELSE_1
0x40011ba	          0x4531f6	                          xor r14d, r14d	      1091	merge.c	FUNCTION_38
0x40011bd	      0xe928f8ffff	                           jmp 0x40009ea	      1091	merge.c	FUNCTION_38
0x40011c2	          0x4c89e0	                            mov rax, r12	      1012	merge.c	FUNCTION_35
0x40011c5	      0xe9cffbffff	                           jmp 0x4000d99	      1012	merge.c	FUNCTION_35
0x40011ca	      0xbb01000000	                              mov ebx, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40011cf	    0x41bf01000000	                             mov r15d, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40011d5	      0xe951faffff	                           jmp 0x4000c2b	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x40011da	    0x488d9c24d000	                   lea rbx, [rsp + 0xd0]	      1079	merge.c	FUNCTION_37	IF_10
0x40011e2	          0x4939dd	                            cmp r13, rbx	      1079	merge.c	FUNCTION_37	IF_10
0x40011e5	     0xf84a5000000	                            je 0x4001290	      1079	merge.c	FUNCTION_37	IF_10
0x40011eb	      0x488b442408	                mov rax, qword [rsp + 8]	       997	merge.c	FUNCTION_35
0x40011f0	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x40011f5	      0x4c8d642458	                   lea r12, [rsp + 0x58]	      1004	merge.c	FUNCTION_35
0x40011fa	    0xc70001000000	                      mov dword [rax], 1	       997	merge.c	FUNCTION_35
0x4001200	      0x48897c2458	             mov qword [rsp + 0x58], rdi	       997	merge.c	FUNCTION_35
0x4001205	      0xe800000000	                          call 0x400120a	      1000	merge.c	FUNCTION_35	CALL_1
0x400120a	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1001	merge.c	FUNCTION_35	CALL_2
0x400120f	    0x48898424d000	             mov qword [rsp + 0xd0], rax	      1000	merge.c	FUNCTION_35	CALL_1
0x4001217	      0xe800000000	                          call 0x400121c	      1001	merge.c	FUNCTION_35	CALL_2
0x400121c	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1003	merge.c	FUNCTION_35
0x4001225	    0x4883bc24d000	               cmp qword [rsp + 0xd0], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x400122e	            0x7427	                            je 0x4001257	      1005	merge.c	FUNCTION_35	WHILE_1
0x4001230	          0x4889df	                            mov rdi, rbx	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x4001233	      0xe800000000	                          call 0x4001238	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x4001238	          0x4839c5	                            cmp rbp, rax	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x400123b	            0x7433	                            je 0x4001270	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x400123d	          0x4c89e6	                            mov rsi, r12	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4001240	          0x4889c7	                            mov rdi, rax	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4001243	      0xe800000000	                          call 0x4001248	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4001248	    0x4883bc24d000	               cmp qword [rsp + 0xd0], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x4001251	        0x4c8d6008	                      lea r12, [rax + 8]	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x4001255	            0x75d9	                           jne 0x4001230	      1005	merge.c	FUNCTION_35	WHILE_1
0x4001257	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1012	merge.c	FUNCTION_35
0x400125c	          0x4d85f6	                           test r14, r14	      1118	merge.c	FUNCTION_38	IF_6
0x400125f	      0x4889442450	             mov qword [rsp + 0x50], rax	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001264	     0xf842ffbffff	                            je 0x4000d99	      1118	merge.c	FUNCTION_38	IF_6
0x400126a	      0xe9c9faffff	                           jmp 0x4000d38	      1118	merge.c	FUNCTION_38	IF_6
0x400126f	              0x90	                                     nop	      1118	merge.c	FUNCTION_38	IF_6
0x4001270	      0x488b442408	                mov rax, qword [rsp + 8]	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x4001275	    0xc70000000000	                      mov dword [rax], 0	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x400127b	            0xeba8	                           jmp 0x4001225	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x400127d	    0x803d00000000	                cmp byte [0x04001284], 0	       168	strbuf.h	FUNCTION_55	CALL_2
0x4001284	     0xf8402fbffff	                            je 0x4000d8c	       168	strbuf.h	FUNCTION_55	CALL_2
0x400128a	      0xe929fdffff	                           jmp 0x4000fb8	       168	strbuf.h	FUNCTION_55	CALL_2
0x400128f	              0x90	                                     nop	       168	strbuf.h	FUNCTION_55	CALL_2
0x4001290	          0x4889df	                            mov rdi, rbx	      1080	merge.c	FUNCTION_37	CALL_18
0x4001293	      0xe800000000	                          call 0x4001298	      1080	merge.c	FUNCTION_37	CALL_18
0x4001298	      0xe94effffff	                           jmp 0x40011eb	      1080	merge.c	FUNCTION_37	CALL_18
0x400129d	      0xbf00000000	                              mov edi, 0	      1080	merge.c	FUNCTION_37	CALL_18
0x40012a2	      0xe859f2ffff	                       call sym._.part.4	      1080	merge.c	FUNCTION_37	CALL_18
0x40012a7	          0x4889ee	                            mov rsi, rbp	       456	merge.c	FUNCTION_15	CALL_5
0x40012aa	          0x4889c7	                            mov rdi, rax	       456	merge.c	FUNCTION_15	CALL_5
0x40012ad	            0x31c0	                            xor eax, eax	       456	merge.c	FUNCTION_15	CALL_5
0x40012af	      0xe800000000	                          call 0x40012b4	       456	merge.c	FUNCTION_15	CALL_5
0x40012b4	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_55	CALL_1
0x40012b9	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_55	CALL_1
0x40012bb	      0xe800000000	                          call 0x40012c0	       163	strbuf.h	FUNCTION_55	CALL_1
0x40012c0	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_55	CALL_1
0x40012c5	      0xe836f2ffff	                       call sym._.part.4	       163	strbuf.h	FUNCTION_55	CALL_1
0x40012ca	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1044	merge.c	FUNCTION_37	CALL_7
0x40012cf	          0x4889c7	                            mov rdi, rax	      1044	merge.c	FUNCTION_37	CALL_7
0x40012d2	            0x31c0	                            xor eax, eax	      1044	merge.c	FUNCTION_37	CALL_7
0x40012d4	      0xe800000000	                          call 0x40012d9	      1044	merge.c	FUNCTION_37	CALL_7
0x40012d9	      0xbf00000000	                              mov edi, 0	      1044	merge.c	FUNCTION_37	CALL_7
0x40012de	            0xebe5	                           jmp 0x40012c5	      1044	merge.c	FUNCTION_37	CALL_7
0x40012e0	      0xbf00000000	                              mov edi, 0	      1044	merge.c	FUNCTION_37	CALL_7
0x40012e5	            0xebde	                           jmp 0x40012c5	      1044	merge.c	FUNCTION_37	CALL_7
0x40012e7	      0xe800000000	                          call 0x40012ec	      1124	merge.c	FUNCTION_38
count_diff_files	DO,0:SWITCH,0:IF,0:CALL,0:WHILE,0:functions,0:FOR,0:ELSE,0	3
0x4000050	          0x8b470c	              mov eax, dword [rdi + 0xc]	       709	merge.c	FUNCTION_21
0x4000053	             0x102	                    add dword [rdx], eax	       709	merge.c	FUNCTION_21
0x4000055	              0xc3	                                     ret	       709	merge.c	FUNCTION_21
restore_state	DO,0:SWITCH,0:IF,1:CALL,5:WHILE,0:functions,0:FOR,0:ELSE,0	69
0x40002b5	              0xef	                             out dx, eax	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002b6	      0xe800000000	                          call 0x40002bb	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002bb	    0x890500000000	            mov dword [0x040002c1], eax 	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002c1	      0xe9fcfdffff	                           jmp 0x40000c2	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002d0	          0x4c89e2	                            mov rdx, r12	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002d3	          0x4889ee	                            mov rsi, rbp	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002d6	      0xbf00000000	                              mov edi, 0	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002db	            0xeb9e	                           jmp 0x400027b	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002dd	           0xf1f00	                         nop dword [rax]	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002e0	          0x4c89e7	                            mov rdi, r12	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x40002e3	      0xe800000000	                          call 0x40002e8	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x40002e8	            0x85c0	                           test eax, eax	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ea	            0x7834	                            js 0x4000320	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ec	           0xf95c0	                                setne al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ef	           0xfb6c0	                           movzx eax, al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002f2	    0x890500000000	            mov dword [0x040002f8], eax 	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002f8	      0xe9ddfdffff	                           jmp 0x40000da	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002fd	           0xf1f00	                         nop dword [rax]	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4000300	          0x4c89e6	                            mov rsi, r12	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000303	          0x4889ef	                            mov rdi, rbp	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000306	      0xe800000000	                          call 0x400030b	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x400030b	    0x890500000000	            mov dword [0x04000311], eax 	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000311	      0xe9c4fdffff	                           jmp 0x40000da	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4000316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4000320	          0x4d85e4	                           test r12, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000323	     0xf84b1fdffff	                            je 0x40000da	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000329	      0xbf00000000	                              mov edi, 0	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400032e	      0xb905000000	                              mov ecx, 5	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000333	          0x4c89e6	                            mov rsi, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000336	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000338	     0xf859cfdffff	                           jne 0x40000da	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400033e	    0xc70500000000	               mov dword [0x04000348], 2	       584	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9
0x4000348	            0x31db	                            xor ebx, ebx	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x400034a	      0xe98bfdffff	                           jmp 0x40000da	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x400034f	              0x90	                                     nop	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x4000350	    0x488b0d000000	            mov rcx, qword [0x04000357] 	       167	merge.c	FUNCTION_3
0x4000357	    0x488b05000000	            mov rax, qword [0x0400035e] 	       167	merge.c	FUNCTION_3
0x400035e	              0x53	                                push rbx	       166	merge.c	FUNCTION_3
0x400035f	          0x4889fb	                            mov rbx, rdi	       166	merge.c	FUNCTION_3
0x4000362	        0x488d5101	                      lea rdx, [rcx + 1]	       167	merge.c	FUNCTION_3
0x4000366	          0x4839c2	                            cmp rdx, rax	       167	merge.c	FUNCTION_3
0x4000369	            0x765d	                           jbe 0x40003c8	       167	merge.c	FUNCTION_3
0x400036b	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       167	merge.c	FUNCTION_3
0x4000370	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_86	IF_1
0x400037a	          0x48d1ee	                              shr rsi, 1	       795	git-compat-util.h	FUNCTION_86	IF_1
0x400037d	          0x4839d6	                            cmp rsi, rdx	       795	git-compat-util.h	FUNCTION_86	IF_1
0x4000380	        0x480f43d6	                         cmovae rdx, rsi	       795	git-compat-util.h	FUNCTION_86	IF_1
0x4000384	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_86	IF_1
0x4000387	    0x488915000000	            mov qword [0x0400038e], rdx 	       795	git-compat-util.h	FUNCTION_86	IF_1
0x400038e	            0x774c	                            ja 0x40003dc	       795	git-compat-util.h	FUNCTION_86	IF_1
0x4000390	    0x488b3d000000	            mov rdi, qword [0x04000397] 	       167	merge.c	FUNCTION_3
0x4000397	    0x488d34d50000	                        lea rsi, [rdx*8]	       167	merge.c	FUNCTION_3
0x400039f	      0xe800000000	                          call 0x40003a4	       167	merge.c	FUNCTION_3
0x40003a4	    0x488b0d000000	            mov rcx, qword [0x040003ab] 	       167	merge.c	FUNCTION_3
0x40003ab	    0x488905000000	            mov qword [0x040003b2], rax 	       167	merge.c	FUNCTION_3
0x40003b2	        0x488d5101	                      lea rdx, [rcx + 1]	       167	merge.c	FUNCTION_3
0x40003b6	        0x48891cc8	            mov qword [rax + rcx*8], rbx	       168	merge.c	FUNCTION_3
0x40003ba	              0x5b	                                 pop rbx	       169	merge.c	FUNCTION_3
0x40003bb	    0x488915000000	            mov qword [0x040003c2], rdx 	       168	merge.c	FUNCTION_3
0x40003c2	              0xc3	                                     ret	       169	merge.c	FUNCTION_3
0x40003c3	       0xf1f440000	                   nop dword [rax + rax]	       169	merge.c	FUNCTION_3
0x40003c8	    0x488b05000000	            mov rax, qword [0x040003cf] 	       169	merge.c	FUNCTION_3
0x40003cf	    0x488915000000	            mov qword [0x040003d6], rdx 	       168	merge.c	FUNCTION_3
0x40003d6	        0x48891cc8	            mov qword [rax + rcx*8], rbx	       168	merge.c	FUNCTION_3
0x40003da	              0x5b	                                 pop rbx	       169	merge.c	FUNCTION_3
0x40003db	              0xc3	                                     ret	       169	merge.c	FUNCTION_3
0x40003dc	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_86	IF_1	CALL_1
0x40003e1	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_86	IF_1	CALL_1
finish	DO,0:SWITCH,0:IF,5:CALL,16:WHILE,0:functions,0:FOR,0:ELSE,3	223
0x400042a	          0x4839ca	                            cmp rdx, rcx	       795	git-compat-util.h	FUNCTION_86	IF_1
0x400042d	        0x480f42d1	                          cmovb rdx, rcx	       795	git-compat-util.h	FUNCTION_86	IF_1
0x4000431	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_86	IF_1
0x4000434	    0x488915000000	            mov qword [0x0400043b], rdx 	       795	git-compat-util.h	FUNCTION_86	IF_1
0x400043b	            0x775c	                            ja 0x4000499	       795	git-compat-util.h	FUNCTION_86	IF_1
0x400043d	    0x488b3d000000	            mov rdi, qword [0x04000444] 	       187	merge.c	FUNCTION_5
0x4000444	    0x488d34d50000	                        lea rsi, [rdx*8]	       187	merge.c	FUNCTION_5
0x400044c	      0xe800000000	                          call 0x4000451	       187	merge.c	FUNCTION_5
0x4000451	    0x488b15000000	            mov rdx, qword [0x04000458] 	       187	merge.c	FUNCTION_5
0x4000458	    0x488905000000	            mov qword [0x0400045f], rax 	       187	merge.c	FUNCTION_5
0x400045f	        0x488d4a01	                      lea rcx, [rdx + 1]	       187	merge.c	FUNCTION_5
0x4000463	        0x488d2cd0	                  lea rbp, [rax + rdx*8]	       188	merge.c	FUNCTION_5	CALL_1
0x4000467	          0x4889df	                            mov rdi, rbx	       188	merge.c	FUNCTION_5	CALL_1
0x400046a	    0x48890d000000	            mov qword [0x04000471], rcx 	       188	merge.c	FUNCTION_5	CALL_1
0x4000471	      0xe800000000	                          call 0x4000476	       188	merge.c	FUNCTION_5	CALL_1
0x4000476	        0x48894500	                    mov qword [rbp], rax	       188	merge.c	FUNCTION_5	CALL_1
0x400047a	        0x4883c408	                              add rsp, 8	       190	merge.c	FUNCTION_5
0x400047e	            0x31c0	                            xor eax, eax	       190	merge.c	FUNCTION_5
0x4000480	              0x5b	                                 pop rbx	       190	merge.c	FUNCTION_5
0x4000481	              0x5d	                                 pop rbp	       190	merge.c	FUNCTION_5
0x4000482	              0xc3	                                     ret	       190	merge.c	FUNCTION_5
0x4000483	       0xf1f440000	                   nop dword [rax + rax]	       190	merge.c	FUNCTION_5
0x4000488	            0x31c0	                            xor eax, eax	       190	merge.c	FUNCTION_5
0x400048a	              0xc3	                                     ret	       190	merge.c	FUNCTION_5
0x400048b	       0xf1f440000	                   nop dword [rax + rax]	       190	merge.c	FUNCTION_5
0x4000490	    0x488b05000000	            mov rax, qword [0x04000497] 	       190	merge.c	FUNCTION_5
0x4000497	            0xebca	                           jmp 0x4000463	       190	merge.c	FUNCTION_5
0x4000499	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_86	IF_1	CALL_1
0x400049e	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_86	IF_1	CALL_1
0x40004a3	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_86	IF_1	CALL_1
0x40004a5	      0xe800000000	                          call 0x40004aa	       796	git-compat-util.h	FUNCTION_86	IF_1	CALL_1
0x40004aa	    0x660f1f440000	                    nop word [rax + rax]	       796	git-compat-util.h	FUNCTION_86	IF_1	CALL_1
0x40004b0	        0x4883ec08	                              sub rsp, 8	       161	strbuf.h	FUNCTION_55
0x40004b4	          0x488b07	                    mov rax, qword [rdi]	       162	strbuf.h	FUNCTION_55	IF_1
0x40004b7	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_55	IF_1
0x40004bb	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_55	IF_1
0x40004bf	          0x4839f0	                            cmp rax, rsi	       162	strbuf.h	FUNCTION_55	IF_1
0x40004c2	            0x722a	                            jb 0x40004ee	       162	strbuf.h	FUNCTION_55	IF_1
0x40004c4	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       165	strbuf.h	FUNCTION_55	IF_2
0x40004c8	        0x48897708	                mov qword [rdi + 8], rsi	       164	strbuf.h	FUNCTION_55
0x40004cc	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_55	IF_2
0x40004d2	            0x740c	                            je 0x40004e0	       165	strbuf.h	FUNCTION_55	IF_2
0x40004d4	        0xc6043000	                 mov byte [rax + rsi], 0	       166	strbuf.h	FUNCTION_55	IF_2
0x40004d8	        0x4883c408	                              add rsp, 8	       169	strbuf.h	FUNCTION_55
0x40004dc	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_55
0x40004dd	           0xf1f00	                         nop dword [rax]	       169	strbuf.h	FUNCTION_55
0x40004e0	    0x803d00000000	                cmp byte [0x040004e7], 0	       168	strbuf.h	FUNCTION_55	CALL_2
0x40004e7	            0x74ef	                            je 0x40004d8	       168	strbuf.h	FUNCTION_55	CALL_2
0x40004e9	      0xe800000000	                          call 0x40004ee	       168	strbuf.h	FUNCTION_55	CALL_2
0x40004ee	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_55	CALL_1
0x40004f3	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_55	CALL_1
0x40004f5	      0xe800000000	                          call 0x40004fa	       163	strbuf.h	FUNCTION_55	CALL_1
0x40004fa	    0x660f1f440000	                    nop word [rax + rax]	       163	strbuf.h	FUNCTION_55	CALL_1
0x4000500	          0x4889fe	                            mov rsi, rdi	        50	gettext.h	
0x4000503	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_66
0x4000508	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_66
0x400050a	      0xe900000000	                           jmp 0x400050f	        54	gettext.h	FUNCTION_66
0x400050f	              0x90	                                     nop	        54	gettext.h	FUNCTION_66
0x4000510	            0x4157	                                push r15	       113	merge.c	FUNCTION_2
0x4000512	            0x4156	                                push r14	       113	merge.c	FUNCTION_2
0x4000514	            0x4155	                                push r13	       113	merge.c	FUNCTION_2
0x4000516	            0x4154	                                push r12	       113	merge.c	FUNCTION_2
0x4000518	              0x55	                                push rbp	       113	merge.c	FUNCTION_2
0x4000519	              0x53	                                push rbx	       113	merge.c	FUNCTION_2
0x400051a	        0x4883ec48	                           sub rsp, 0x48	       113	merge.c	FUNCTION_2
0x400051e	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	merge.c	FUNCTION_2
0x4000527	      0x4889442438	             mov qword [rsp + 0x38], rax	       113	merge.c	FUNCTION_2
0x400052c	            0x31c0	                            xor eax, eax	       113	merge.c	FUNCTION_2
0x400052e	          0x4885ff	                           test rdi, rdi	       119	merge.c	FUNCTION_2	IF_1
0x4000531	     0xf849f030000	                            je 0x40008d6	       119	merge.c	FUNCTION_2	IF_1
0x4000537	    0x488b35000000	            mov rsi, qword [0x0400053e] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400053e	          0x4989fd	                            mov r13, rdi	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000541	      0xe800000000	                          call 0x4000546	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000546	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000548	     0xf8432030000	                            je 0x4000880	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400054e	    0x488b35000000	            mov rsi, qword [0x04000555] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000555	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000558	      0xe800000000	                          call 0x400055d	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400055d	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400055f	     0xf8433030000	                            je 0x4000898	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000565	    0x488b35000000	            mov rsi, qword [0x0400056c] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400056c	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400056f	      0xe800000000	                          call 0x4000574	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000574	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000576	     0xf8424030000	                            je 0x40008a0	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400057c	    0x488b35000000	            mov rsi, qword [0x04000583] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000583	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000586	      0xe800000000	                          call 0x400058b	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400058b	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400058d	     0xf841d030000	                            je 0x40008b0	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000593	    0x488b35000000	            mov rsi, qword [0x0400059a] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400059a	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400059d	      0xe800000000	                          call 0x40005a2	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40005a2	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40005a4	     0xf8416030000	                            je 0x40008c0	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40005aa	    0x8b3500000000	            mov esi, dword [0x040005b0] 	       126	merge.c	FUNCTION_2	IF_3
0x40005b0	            0x85f6	                           test esi, esi	       126	merge.c	FUNCTION_2	IF_3
0x40005b2	     0xf8430010000	                            je 0x40006e8	       126	merge.c	FUNCTION_2	IF_3
0x40005b8	          0x4c89ee	                            mov rsi, r13	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005bb	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005c0	      0xe800000000	                          call 0x40005c5	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005c5	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005c7	            0x744f	                            je 0x4000618	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005c9	      0xbe10000000	                           mov esi, 0x10	       159	merge.c	FUNCTION_2	CALL_13
0x40005ce	      0xbf01000000	                              mov edi, 1	       159	merge.c	FUNCTION_2	CALL_13
0x40005d3	      0xe800000000	                          call 0x40005d8	       159	merge.c	FUNCTION_2	CALL_13
0x40005d8	          0x4c89ef	                            mov rdi, r13	       160	merge.c	FUNCTION_2	CALL_14
0x40005db	          0x4889c3	                            mov rbx, rax	       159	merge.c	FUNCTION_2	CALL_13
0x40005de	      0xe800000000	                          call 0x40005e3	       160	merge.c	FUNCTION_2	CALL_14
0x40005e3	    0xc74308080000	                  mov dword [rbx + 8], 8	       161	merge.c	FUNCTION_2
0x40005ea	          0x488903	                    mov qword [rbx], rax	       160	merge.c	FUNCTION_2	CALL_14
0x40005ed	          0x4889d8	                            mov rax, rbx	       162	merge.c	FUNCTION_2
0x40005f0	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       163	merge.c	FUNCTION_2
0x40005f5	    0x644833142528	                xor rdx, qword fs:[0x28]	       163	merge.c	FUNCTION_2
0x40005fe	     0xf85d9020000	                           jne 0x40008dd	       163	merge.c	FUNCTION_2
0x4000604	        0x4883c448	                           add rsp, 0x48	       163	merge.c	FUNCTION_2
0x4000608	              0x5b	                                 pop rbx	       163	merge.c	FUNCTION_2
0x4000609	              0x5d	                                 pop rbp	       163	merge.c	FUNCTION_2
0x400060a	            0x415c	                                 pop r12	       163	merge.c	FUNCTION_2
0x400060c	            0x415d	                                 pop r13	       163	merge.c	FUNCTION_2
0x400060e	            0x415e	                                 pop r14	       163	merge.c	FUNCTION_2
0x4000610	            0x415f	                                 pop r15	       163	merge.c	FUNCTION_2
0x4000612	              0xc3	                                     ret	       163	merge.c	FUNCTION_2
0x4000613	       0xf1f440000	                   nop dword [rax + rax]	       163	merge.c	FUNCTION_2
0x4000618	          0x4c89ee	                            mov rsi, r13	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400061b	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000620	      0xe800000000	                          call 0x4000625	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000625	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000627	            0x75a0	                           jne 0x40005c9	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000629	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400062e	            0x31ed	                            xor ebp, ebp	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000630	            0x31db	                            xor ebx, ebx	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000632	      0xe8c9feffff	                       call sym._.part.4	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000637	    0x488b3d000000	            mov rdi, qword [0x0400063e] 	        97	stdio2.h	CALL_228
0x400063e	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_228
0x4000641	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x4000644	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000649	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x400064b	      0xe800000000	                          call 0x4000650	        97	stdio2.h	CALL_228
0x4000650	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x4000655	      0xe8a6feffff	                       call sym._.part.4	        97	stdio2.h	CALL_228
0x400065a	    0x488b3d000000	            mov rdi, qword [0x04000661] 	        97	stdio2.h	CALL_228
0x4000661	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x4000664	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000669	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x400066b	      0xe800000000	                          call 0x4000670	        97	stdio2.h	CALL_228
0x4000670	    0x8b0d00000000	            mov ecx, dword [0x04000676] 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000676	            0x85c9	                           test ecx, ecx	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000678	            0x7e36	                           jle 0x40006b0	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x400067a	    0x488b05000000	            mov rax, qword [0x04000681] 	       148	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000681	    0x488b3d000000	            mov rdi, qword [0x04000688] 	        97	stdio2.h	CALL_228
0x4000688	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_228
0x400068d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000692	          0x83c301	                              add ebx, 1	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000695	        0x488b0c28	              mov rcx, qword [rax + rbp]	        97	stdio2.h	CALL_228
0x4000699	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x400069b	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_228
0x400069f	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_228
0x40006a3	      0xe800000000	                          call 0x40006a8	        97	stdio2.h	CALL_228
0x40006a8	    0x391d00000000	            cmp dword [0x040006ae], ebx 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006ae	            0x7fca	                            jg 0x400067a	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006b0	    0x488b0d000000	            mov rcx, qword [0x040006b7] 	        97	stdio2.h	CALL_228
0x40006b7	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_228
0x40006bc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40006c1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x40006c6	      0xe800000000	                          call 0x40006cb	        97	stdio2.h	CALL_228
0x40006cb	    0x8b1500000000	            mov edx, dword [0x040006d1] 	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x40006d1	            0x85d2	                           test edx, edx	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x40006d3	     0xf8509020000	                           jne 0x40008e2	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x40006d9	      0xbf01000000	                              mov edi, 1	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x40006de	      0xe800000000	                          call 0x40006e3	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x40006e3	       0xf1f440000	                   nop dword [rax + rax]	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x40006e8	      0xba00000000	                              mov edx, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x40006ed	      0xbe00000000	                              mov esi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x40006f2	      0xbf00000000	                              mov edi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x40006f7	    0xc70500000000	               mov dword [0x04000701], 1	       128	merge.c	FUNCTION_2	IF_3
0x4000701	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_44	CALL_6
0x400070a	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4000713	      0xe800000000	                          call 0x4000718	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4000718	    0x8b0500000000	            mov eax, dword [0x0400071e] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400071e	            0x85c0	                           test eax, eax	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000720	        0x89442414	             mov dword [rsp + 0x14], eax	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000724	     0xf8e9d010000	                           jle 0x40008c7	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400072a	      0x488d442420	                   lea rax, [rsp + 0x20]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400072f	          0x4531f6	                          xor r14d, r14d	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000732	          0x4531ff	                          xor r15d, r15d	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000735	      0x4889442418	             mov qword [rsp + 0x18], rax	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400073a	    0x660f1f440000	                    nop word [rax + rax]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000740	    0x488b05000000	            mov rax, qword [0x04000747] 	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000747	    0x488b0d000000	            mov rcx, qword [0x0400074e] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400074e	          0x4531e4	                          xor r12d, r12d	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000751	        0x4a8b1c30	              mov rbx, qword [rax + r14]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000755	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000758	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400075d	          0x488b2b	                    mov rbp, qword [rbx]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000760	        0x4883c308	                              add rbx, 8	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000764	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000767	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400076a	      0xe800000000	                          call 0x400076f	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400076f	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000771	            0x7510	                           jne 0x4000783	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000773	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000778	          0x4531e4	                          xor r12d, r12d	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x400077b	        0x803c2900	                 cmp byte [rcx + rbp], 0	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x400077f	        0x410f94c4	                               sete r12b	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000783	    0x488b0d000000	            mov rcx, qword [0x0400078a] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400078a	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400078d	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000790	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000793	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000798	      0xe800000000	                          call 0x400079d	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400079d	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400079f	            0x7512	                           jne 0x40007b3	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007a1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007a6	      0xb801000000	                              mov eax, 1	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007ab	        0x803c2900	                 cmp byte [rcx + rbp], 0	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007af	        0x440f44e0	                         cmove r12d, eax	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007b3	    0x488b0d000000	            mov rcx, qword [0x040007ba] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007ba	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007bd	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007c0	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007c3	              0x48	                                 invalid	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007c4	              0x89	                                 invalid	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
git_merge_config	DO,0:SWITCH,0:IF,13:CALL,27:WHILE,0:functions,0:FOR,0:ELSE,8	195
0x4000060	            0x4155	                                push r13	       558	merge.c	FUNCTION_17
0x4000062	            0x4154	                                push r12	       558	merge.c	FUNCTION_17
0x4000064	          0x4989d5	                            mov r13, rdx	       558	merge.c	FUNCTION_17
0x4000067	              0x55	                                push rbp	       558	merge.c	FUNCTION_17
0x4000068	              0x53	                                push rbx	       558	merge.c	FUNCTION_17
0x4000069	          0x4889fd	                            mov rbp, rdi	       558	merge.c	FUNCTION_17
0x400006c	          0x4989f4	                            mov r12, rsi	       558	merge.c	FUNCTION_17
0x400006f	        0x4883ec08	                              sub rsp, 8	       558	merge.c	FUNCTION_17
0x4000073	    0x48833d000000	               cmp qword [0x0400007b], 0	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400007b	            0x7412	                            je 0x400008f	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400007d	      0xbe00000000	                              mov esi, 0	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000087	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000089	     0xf8549010000	                           jne 0x40001d8	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400008f	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000094	      0xb90f000000	                            mov ecx, 0xf	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000099	          0x4889ee	                            mov rsi, rbp	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400009c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400009e	            0x7411	                            je 0x40000b1	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000a0	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000a5	      0xb90b000000	                            mov ecx, 0xb	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000aa	          0x4889ee	                            mov rsi, rbp	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000af	            0x753f	                           jne 0x40000f0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000b1	          0x4c89e6	                            mov rsi, r12	       570	merge.c	FUNCTION_17	CALL_9
0x40000b4	          0x4889ef	                            mov rdi, rbp	       570	merge.c	FUNCTION_17	CALL_9
0x40000b7	      0xe800000000	                          call 0x40000bc	       570	merge.c	FUNCTION_17	CALL_9
0x40000bc	    0x890500000000	            mov dword [0x040000c2], eax 	       570	merge.c	FUNCTION_17	CALL_9
0x40000c2	          0x4c89ea	                            mov rdx, r13	       595	merge.c	FUNCTION_17	CALL_25
0x40000c5	          0x4c89e6	                            mov rsi, r12	       595	merge.c	FUNCTION_17	CALL_25
0x40000c8	          0x4889ef	                            mov rdi, rbp	       595	merge.c	FUNCTION_17	CALL_25
0x40000cb	      0xe800000000	                          call 0x40000d0	       595	merge.c	FUNCTION_17	CALL_25
0x40000d0	            0x85c0	                           test eax, eax	       596	merge.c	FUNCTION_17	IF_12
0x40000d2	            0x89c3	                            mov ebx, eax	       596	merge.c	FUNCTION_17	IF_12
0x40000d4	     0xf8466010000	                            je 0x4000240	       596	merge.c	FUNCTION_17	IF_12
0x40000da	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x40000de	            0x89d8	                            mov eax, ebx	       602	merge.c	FUNCTION_17
0x40000e0	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x40000e1	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x40000e2	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x40000e4	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x40000e6	              0xc3	                                     ret	       602	merge.c	FUNCTION_17
0x40000e7	    0x660f1f840000	                    nop word [rax + rax]	       602	merge.c	FUNCTION_17
0x40000f0	      0xbf00000000	                              mov edi, 0	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000f5	      0xb917000000	                           mov ecx, 0x17	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000fa	          0x4889ee	                            mov rsi, rbp	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000ff	     0xf848b010000	                            je 0x4000290	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000105	      0xbf00000000	                              mov edi, 0	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400010a	      0xb90d000000	                            mov ecx, 0xd	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400010f	          0x4889ee	                            mov rsi, rbp	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000112	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000114	     0xf8456010000	                            je 0x4000270	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400011a	      0xbf00000000	                              mov edi, 0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400011f	      0xb90d000000	                            mov ecx, 0xd	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000124	          0x4889ee	                            mov rsi, rbp	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000127	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000129	     0xf84a1010000	                            je 0x40002d0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400012f	      0xbf00000000	                              mov edi, 0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000134	      0xb912000000	                           mov ecx, 0x12	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000139	          0x4889ee	                            mov rsi, rbp	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x400013c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x400013e	     0xf846c010000	                            je 0x40002b0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000144	      0xbf00000000	                              mov edi, 0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000149	      0xb909000000	                              mov ecx, 9	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400014e	          0x4889ee	                            mov rsi, rbp	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000151	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000153	           0xf97c3	                                 seta bl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000156	           0xf92c2	                                 setb dl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000159	            0x29d3	                            sub ebx, edx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400015b	           0xfbedb	                           movsx ebx, bl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400015e	            0x85db	                           test ebx, ebx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000160	     0xf847a010000	                            je 0x40002e0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000166	      0xbf00000000	                              mov edi, 0	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400016b	      0xb918000000	                           mov ecx, 0x18	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000170	          0x4889ee	                            mov rsi, rbp	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000173	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000175	           0xf97c3	                                 seta bl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000178	           0xf92c2	                                 setb dl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400017b	            0x29d3	                            sub ebx, edx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400017d	           0xfbedb	                           movsx ebx, bl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000180	            0x85db	                           test ebx, ebx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000182	     0xf8478010000	                            je 0x4000300	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000188	      0xbf00000000	                              mov edi, 0	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400018d	      0xb90f000000	                            mov ecx, 0xf	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000192	          0x4889ee	                            mov rsi, rbp	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000195	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000197	           0xf97c3	                                 seta bl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019a	           0xf92c2	                                 setb dl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019d	            0x29d3	                            sub ebx, edx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019f	           0xfbedb	                           movsx ebx, bl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001a2	            0x85db	                           test ebx, ebx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001a4	     0xf8518ffffff	                           jne 0x40000c2	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001aa	          0x4c89e6	                            mov rsi, r12	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001ad	          0x4889ef	                            mov rdi, rbp	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001b0	      0xe800000000	                          call 0x40001b5	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001b5	      0xba00000000	                              mov edx, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001ba	            0x85c0	                           test eax, eax	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001bc	      0xb800000000	                              mov eax, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001c1	        0x480f44c2	                          cmove rax, rdx	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001c5	    0x488905000000	            mov qword [0x040001cc], rax 	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001cc	      0xe909ffffff	                           jmp 0x40000da	       592	merge.c	FUNCTION_17	ELSE_8	IF_11
0x40001d1	     0xf1f80000000	                         nop dword [rax]	       592	merge.c	FUNCTION_17	ELSE_8	IF_11
0x40001d8	    0x488b35000000	            mov rsi, qword [0x040001df] 	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x40001df	        0x488d7d07	                      lea rdi, [rbp + 7]	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x40001e3	      0xe800000000	                          call 0x40001e8	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x40001e8	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x40001ea	     0xf849ffeffff	                            je 0x400008f	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x40001f0	    0x488b3d000000	            mov rdi, qword [0x040001f7] 	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40001f7	      0xe800000000	                          call 0x40001fc	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40001fc	      0x488d740507	                lea rsi, [rbp + rax + 7]	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000201	      0xbf00000000	                              mov edi, 0	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000206	      0xb90e000000	                            mov ecx, 0xe	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x400020b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x400020d	           0xf97c3	                                 seta bl	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000210	           0xf92c2	                                 setb dl	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000213	            0x29d3	                            sub ebx, edx	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000215	           0xfbedb	                           movsx ebx, bl	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000218	            0x85db	                           test ebx, ebx	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x400021a	     0xf856ffeffff	                           jne 0x400008f	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4000220	    0x488b3d000000	            mov rdi, qword [0x04000227] 	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x4000227	      0xe800000000	                          call 0x400022c	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x400022c	          0x4c89e7	                            mov rdi, r12	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x400022f	      0xe800000000	                          call 0x4000234	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x4000234	    0x488905000000	            mov qword [0x0400023b], rax 	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x400023b	      0xe99afeffff	                           jmp 0x40000da	       566	merge.c	FUNCTION_17	IF_1
0x4000240	            0x31d2	                            xor edx, edx	       598	merge.c	FUNCTION_17	CALL_26
0x4000242	          0x4c89e6	                            mov rsi, r12	       598	merge.c	FUNCTION_17	CALL_26
0x4000245	          0x4889ef	                            mov rdi, rbp	       598	merge.c	FUNCTION_17	CALL_26
0x4000248	      0xe800000000	                          call 0x400024d	       598	merge.c	FUNCTION_17	CALL_26
0x400024d	            0x85c0	                           test eax, eax	       599	merge.c	FUNCTION_17	IF_13
0x400024f	            0x89c3	                            mov ebx, eax	       599	merge.c	FUNCTION_17	IF_13
0x4000251	     0xf8583feffff	                           jne 0x40000da	       599	merge.c	FUNCTION_17	IF_13
0x4000257	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x400025b	          0x4c89ea	                            mov rdx, r13	       601	merge.c	FUNCTION_17	CALL_27
0x400025e	          0x4c89e6	                            mov rsi, r12	       601	merge.c	FUNCTION_17	CALL_27
0x4000261	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x4000262	          0x4889ef	                            mov rdi, rbp	       601	merge.c	FUNCTION_17	CALL_27
0x4000265	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x4000266	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x4000268	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x400026a	      0xe900000000	                           jmp 0x400026f	       601	merge.c	FUNCTION_17	CALL_27
0x400026f	              0x90	                                     nop	       601	merge.c	FUNCTION_17	CALL_27
0x4000270	          0x4c89e2	                            mov rdx, r12	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4000273	          0x4889ee	                            mov rsi, rbp	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4000276	      0xbf00000000	                              mov edi, 0	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x400027b	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x400027f	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x4000280	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x4000281	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x4000283	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x4000285	      0xe900000000	                           jmp 0x400028a	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x400028a	    0x660f1f440000	                    nop word [rax + rax]	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x4000290	          0x4c89e6	                            mov rsi, r12	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4000293	          0x4889ef	                            mov rdi, rbp	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4000296	      0xe800000000	                          call 0x400029b	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x400029b	    0x890500000000	            mov dword [0x040002a1], eax 	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x40002a1	      0xe91cfeffff	                           jmp 0x40000c2	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x40002a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x40002b0	          0x4c89e6	                            mov rsi, r12	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002b3	          0x4889ef	                            mov rdi, rbp	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002b6	      0xe800000000	                          call 0x40002bb	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002bb	    0x890500000000	            mov dword [0x040002c1], eax 	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002c1	      0xe9fcfdffff	                           jmp 0x40000c2	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40002d0	          0x4c89e2	                            mov rdx, r12	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002d3	          0x4889ee	                            mov rsi, rbp	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002d6	      0xbf00000000	                              mov edi, 0	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002db	            0xeb9e	                           jmp 0x400027b	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002dd	           0xf1f00	                         nop dword [rax]	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40002e0	          0x4c89e7	                            mov rdi, r12	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x40002e3	      0xe800000000	                          call 0x40002e8	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x40002e8	            0x85c0	                           test eax, eax	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ea	            0x7834	                            js 0x4000320	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ec	           0xf95c0	                                setne al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002ef	           0xfb6c0	                           movzx eax, al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002f2	    0x890500000000	            mov dword [0x040002f8], eax 	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002f8	      0xe9ddfdffff	                           jmp 0x40000da	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x40002fd	           0xf1f00	                         nop dword [rax]	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4000300	          0x4c89e6	                            mov rsi, r12	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000303	          0x4889ef	                            mov rdi, rbp	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000306	      0xe800000000	                          call 0x400030b	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x400030b	    0x890500000000	            mov dword [0x04000311], eax 	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000311	      0xe9c4fdffff	                           jmp 0x40000da	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4000316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x4000320	          0x4d85e4	                           test r12, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000323	     0xf84b1fdffff	                            je 0x40000da	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000329	      0xbf00000000	                              mov edi, 0	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400032e	      0xb905000000	                              mov ecx, 5	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000333	          0x4c89e6	                            mov rsi, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000336	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000338	     0xf859cfdffff	                           jne 0x40000da	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400033e	    0xc70500000000	               mov dword [0x04000348], 2	       584	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9
0x4000348	            0x31db	                            xor ebx, ebx	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x400034a	      0xe98bfdffff	                           jmp 0x40000da	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
get_strategy	DO,0:SWITCH,0:IF,7:CALL,14:WHILE,0:functions,0:FOR,5:ELSE,0	263
0x4000510	            0x4157	                                push r15	       113	merge.c	FUNCTION_2
0x4000512	            0x4156	                                push r14	       113	merge.c	FUNCTION_2
0x4000514	            0x4155	                                push r13	       113	merge.c	FUNCTION_2
0x4000516	            0x4154	                                push r12	       113	merge.c	FUNCTION_2
0x4000518	              0x55	                                push rbp	       113	merge.c	FUNCTION_2
0x4000519	              0x53	                                push rbx	       113	merge.c	FUNCTION_2
0x400051a	        0x4883ec48	                           sub rsp, 0x48	       113	merge.c	FUNCTION_2
0x400051e	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	merge.c	FUNCTION_2
0x4000527	      0x4889442438	             mov qword [rsp + 0x38], rax	       113	merge.c	FUNCTION_2
0x400052c	            0x31c0	                            xor eax, eax	       113	merge.c	FUNCTION_2
0x400052e	          0x4885ff	                           test rdi, rdi	       119	merge.c	FUNCTION_2	IF_1
0x4000531	     0xf849f030000	                            je 0x40008d6	       119	merge.c	FUNCTION_2	IF_1
0x4000537	    0x488b35000000	            mov rsi, qword [0x0400053e] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400053e	          0x4989fd	                            mov r13, rdi	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000541	      0xe800000000	                          call 0x4000546	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000546	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000548	     0xf8432030000	                            je 0x4000880	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400054e	    0x488b35000000	            mov rsi, qword [0x04000555] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000555	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000558	      0xe800000000	                          call 0x400055d	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400055d	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400055f	     0xf8433030000	                            je 0x4000898	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000565	    0x488b35000000	            mov rsi, qword [0x0400056c] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400056c	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400056f	      0xe800000000	                          call 0x4000574	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000574	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000576	     0xf8424030000	                            je 0x40008a0	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400057c	    0x488b35000000	            mov rsi, qword [0x04000583] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000583	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000586	      0xe800000000	                          call 0x400058b	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400058b	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400058d	     0xf841d030000	                            je 0x40008b0	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000593	    0x488b35000000	            mov rsi, qword [0x0400059a] 	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400059a	          0x4c89ef	                            mov rdi, r13	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400059d	      0xe800000000	                          call 0x40005a2	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40005a2	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40005a4	     0xf8416030000	                            je 0x40008c0	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40005aa	    0x8b3500000000	            mov esi, dword [0x040005b0] 	       126	merge.c	FUNCTION_2	IF_3
0x40005b0	            0x85f6	                           test esi, esi	       126	merge.c	FUNCTION_2	IF_3
0x40005b2	     0xf8430010000	                            je 0x40006e8	       126	merge.c	FUNCTION_2	IF_3
0x40005b8	          0x4c89ee	                            mov rsi, r13	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005bb	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005c0	      0xe800000000	                          call 0x40005c5	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005c5	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005c7	            0x744f	                            je 0x4000618	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40005c9	      0xbe10000000	                           mov esi, 0x10	       159	merge.c	FUNCTION_2	CALL_13
0x40005ce	      0xbf01000000	                              mov edi, 1	       159	merge.c	FUNCTION_2	CALL_13
0x40005d3	      0xe800000000	                          call 0x40005d8	       159	merge.c	FUNCTION_2	CALL_13
0x40005d8	          0x4c89ef	                            mov rdi, r13	       160	merge.c	FUNCTION_2	CALL_14
0x40005db	          0x4889c3	                            mov rbx, rax	       159	merge.c	FUNCTION_2	CALL_13
0x40005de	      0xe800000000	                          call 0x40005e3	       160	merge.c	FUNCTION_2	CALL_14
0x40005e3	    0xc74308080000	                  mov dword [rbx + 8], 8	       161	merge.c	FUNCTION_2
0x40005ea	          0x488903	                    mov qword [rbx], rax	       160	merge.c	FUNCTION_2	CALL_14
0x40005ed	          0x4889d8	                            mov rax, rbx	       162	merge.c	FUNCTION_2
0x40005f0	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       163	merge.c	FUNCTION_2
0x40005f5	    0x644833142528	                xor rdx, qword fs:[0x28]	       163	merge.c	FUNCTION_2
0x40005fe	     0xf85d9020000	                           jne 0x40008dd	       163	merge.c	FUNCTION_2
0x4000604	        0x4883c448	                           add rsp, 0x48	       163	merge.c	FUNCTION_2
0x4000608	              0x5b	                                 pop rbx	       163	merge.c	FUNCTION_2
0x4000609	              0x5d	                                 pop rbp	       163	merge.c	FUNCTION_2
0x400060a	            0x415c	                                 pop r12	       163	merge.c	FUNCTION_2
0x400060c	            0x415d	                                 pop r13	       163	merge.c	FUNCTION_2
0x400060e	            0x415e	                                 pop r14	       163	merge.c	FUNCTION_2
0x4000610	            0x415f	                                 pop r15	       163	merge.c	FUNCTION_2
0x4000612	              0xc3	                                     ret	       163	merge.c	FUNCTION_2
0x4000613	       0xf1f440000	                   nop dword [rax + rax]	       163	merge.c	FUNCTION_2
0x4000618	          0x4c89ee	                            mov rsi, r13	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400061b	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000620	      0xe800000000	                          call 0x4000625	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000625	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000627	            0x75a0	                           jne 0x40005c9	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4000629	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x400062e	            0x31ed	                            xor ebp, ebp	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000630	            0x31db	                            xor ebx, ebx	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000632	      0xe8c9feffff	                       call sym._.part.4	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000637	    0x488b3d000000	            mov rdi, qword [0x0400063e] 	        97	stdio2.h	CALL_228
0x400063e	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_228
0x4000641	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x4000644	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000649	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x400064b	      0xe800000000	                          call 0x4000650	        97	stdio2.h	CALL_228
0x4000650	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x4000655	      0xe8a6feffff	                       call sym._.part.4	        97	stdio2.h	CALL_228
0x400065a	    0x488b3d000000	            mov rdi, qword [0x04000661] 	        97	stdio2.h	CALL_228
0x4000661	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x4000664	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000669	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x400066b	      0xe800000000	                          call 0x4000670	        97	stdio2.h	CALL_228
0x4000670	    0x8b0d00000000	            mov ecx, dword [0x04000676] 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000676	            0x85c9	                           test ecx, ecx	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000678	            0x7e36	                           jle 0x40006b0	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x400067a	    0x488b05000000	            mov rax, qword [0x04000681] 	       148	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000681	    0x488b3d000000	            mov rdi, qword [0x04000688] 	        97	stdio2.h	CALL_228
0x4000688	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_228
0x400068d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000692	          0x83c301	                              add ebx, 1	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4000695	        0x488b0c28	              mov rcx, qword [rax + rbp]	        97	stdio2.h	CALL_228
0x4000699	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x400069b	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_228
0x400069f	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_228
0x40006a3	      0xe800000000	                          call 0x40006a8	        97	stdio2.h	CALL_228
0x40006a8	    0x391d00000000	            cmp dword [0x040006ae], ebx 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006ae	            0x7fca	                            jg 0x400067a	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40006b0	    0x488b0d000000	            mov rcx, qword [0x040006b7] 	        97	stdio2.h	CALL_228
0x40006b7	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_228
0x40006bc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40006c1	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x40006c6	      0xe800000000	                          call 0x40006cb	        97	stdio2.h	CALL_228
0x40006cb	    0x8b1500000000	            mov edx, dword [0x040006d1] 	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x40006d1	            0x85d2	                           test edx, edx	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x40006d3	     0xf8509020000	                           jne 0x40008e2	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x40006d9	      0xbf01000000	                              mov edi, 1	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x40006de	      0xe800000000	                          call 0x40006e3	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x40006e3	       0xf1f440000	                   nop dword [rax + rax]	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x40006e8	      0xba00000000	                              mov edx, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x40006ed	      0xbe00000000	                              mov esi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x40006f2	      0xbf00000000	                              mov edi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x40006f7	    0xc70500000000	               mov dword [0x04000701], 1	       128	merge.c	FUNCTION_2	IF_3
0x4000701	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_44	CALL_6
0x400070a	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_44	CALL_6
0x4000713	      0xe800000000	                          call 0x4000718	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4000718	    0x8b0500000000	            mov eax, dword [0x0400071e] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400071e	            0x85c0	                           test eax, eax	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000720	        0x89442414	             mov dword [rsp + 0x14], eax	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000724	     0xf8e9d010000	                           jle 0x40008c7	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400072a	      0x488d442420	                   lea rax, [rsp + 0x20]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400072f	          0x4531f6	                          xor r14d, r14d	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000732	          0x4531ff	                          xor r15d, r15d	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000735	      0x4889442418	             mov qword [rsp + 0x18], rax	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400073a	    0x660f1f440000	                    nop word [rax + rax]	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000740	    0x488b05000000	            mov rax, qword [0x04000747] 	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000747	    0x488b0d000000	            mov rcx, qword [0x0400074e] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400074e	          0x4531e4	                          xor r12d, r12d	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000751	        0x4a8b1c30	              mov rbx, qword [rax + r14]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000755	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000758	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400075d	          0x488b2b	                    mov rbp, qword [rbx]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000760	        0x4883c308	                              add rbx, 8	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000764	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000767	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400076a	      0xe800000000	                          call 0x400076f	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400076f	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000771	            0x7510	                           jne 0x4000783	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000773	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000778	          0x4531e4	                          xor r12d, r12d	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x400077b	        0x803c2900	                 cmp byte [rcx + rbp], 0	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x400077f	        0x410f94c4	                               sete r12b	       133	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000783	    0x488b0d000000	            mov rcx, qword [0x0400078a] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400078a	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400078d	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000790	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000793	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000798	      0xe800000000	                          call 0x400079d	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400079d	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400079f	            0x7512	                           jne 0x40007b3	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007a1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007a6	      0xb801000000	                              mov eax, 1	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007ab	        0x803c2900	                 cmp byte [rcx + rbp], 0	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007af	        0x440f44e0	                         cmove r12d, eax	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007b3	    0x488b0d000000	            mov rcx, qword [0x040007ba] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007ba	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007bd	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007c0	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007c3	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007c8	      0xe800000000	                          call 0x40007cd	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007cd	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007cf	            0x7512	                           jne 0x40007e3	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007d1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007d6	      0xb801000000	                              mov eax, 1	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007db	        0x803c2900	                 cmp byte [rcx + rbp], 0	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007df	        0x440f44e0	                         cmove r12d, eax	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007e3	    0x488b0d000000	            mov rcx, qword [0x040007ea] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007ea	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007ed	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f0	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f3	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f8	      0xe800000000	                          call 0x40007fd	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007fd	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007ff	            0x750b	                           jne 0x400080c	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000801	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000806	        0x803c2900	                 cmp byte [rcx + rbp], 0	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400080a	            0x7447	                            je 0x4000853	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400080c	    0x488b0d000000	            mov rcx, qword [0x04000813] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000813	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000816	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000819	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400081c	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000821	      0xe800000000	                          call 0x4000826	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000826	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000828	            0x750b	                           jne 0x4000835	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400082a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400082f	        0x803c2900	                 cmp byte [rcx + rbp], 0	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000833	            0x741e	                            je 0x4000853	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000835	          0x4585e4	                         test r12d, r12d	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x4000838	            0x7519	                           jne 0x4000853	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x400083a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x400083f	            0x89ea	                            mov edx, ebp	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000841	          0x4889de	                            mov rsi, rbx	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000844	      0xe800000000	                          call 0x4000849	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000849	    0x8b0500000000	            mov eax, dword [0x0400084f] 	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x400084f	        0x89442414	             mov dword [rsp + 0x14], eax	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000853	        0x4183c701	                             add r15d, 1	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000857	        0x4983c608	                              add r14, 8	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400085b	      0x443b7c2414	           cmp r15d, dword [rsp + 0x14] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000860	     0xf8cdafeffff	                            jl 0x4000740	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000866	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400086b	      0xbf00000000	                              mov edi, 0	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000870	      0xe800000000	                          call 0x4000875	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000875	      0xe93efdffff	                           jmp 0x40005b8	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x400087a	    0x660f1f440000	                    nop word [rax + rax]	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000880	            0x31c0	                            xor eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000882	        0x48c1e004	                              shl rax, 4	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000886	    0x480500000000	                              add rax, 0	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x400088c	      0xe95ffdffff	                           jmp 0x40005f0	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000891	     0xf1f80000000	                         nop dword [rax]	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000898	      0xb801000000	                              mov eax, 1	       122	merge.c	FUNCTION_2	FOR_1
0x400089d	            0xebe3	                           jmp 0x4000882	       122	merge.c	FUNCTION_2	FOR_1
0x400089f	              0x90	                                     nop	       122	merge.c	FUNCTION_2	FOR_1
0x40008a0	      0xb802000000	                              mov eax, 2	       122	merge.c	FUNCTION_2	FOR_1
0x40008a5	            0xebdb	                           jmp 0x4000882	       122	merge.c	FUNCTION_2	FOR_1
0x40008a7	    0x660f1f840000	                    nop word [rax + rax]	       122	merge.c	FUNCTION_2	FOR_1
0x40008b0	      0xb803000000	                              mov eax, 3	       122	merge.c	FUNCTION_2	FOR_1
0x40008b5	            0xebcb	                           jmp 0x4000882	       122	merge.c	FUNCTION_2	FOR_1
0x40008b7	    0x660f1f840000	                    nop word [rax + rax]	       122	merge.c	FUNCTION_2	FOR_1
0x40008c0	      0xb804000000	                              mov eax, 4	       122	merge.c	FUNCTION_2	FOR_1
0x40008c5	            0xebbb	                           jmp 0x4000882	       122	merge.c	FUNCTION_2	FOR_1
0x40008c7	      0x488d442420	                   lea rax, [rsp + 0x20]	       122	merge.c	FUNCTION_2	FOR_1
0x40008cc	      0x4889442418	             mov qword [rsp + 0x18], rax	       122	merge.c	FUNCTION_2	FOR_1
0x40008d1	          0x4889c6	                            mov rsi, rax	       122	merge.c	FUNCTION_2	FOR_1
0x40008d4	            0xeb95	                           jmp 0x400086b	       122	merge.c	FUNCTION_2	FOR_1
0x40008d6	            0x31c0	                            xor eax, eax	       120	merge.c	FUNCTION_2	IF_1
0x40008d8	      0xe913fdffff	                           jmp 0x40005f0	       120	merge.c	FUNCTION_2	IF_1
0x40008dd	      0xe800000000	                          call 0x40008e2	       163	merge.c	FUNCTION_2
0x40008e2	      0xbf00000000	                              mov edi, 0	       163	merge.c	FUNCTION_2
0x40008e7	            0x31ed	                            xor ebp, ebp	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008e9	            0x31db	                            xor ebx, ebx	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008eb	      0xe810fcffff	                       call sym._.part.4	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008f0	    0x488b3d000000	            mov rdi, qword [0x040008f7] 	        97	stdio2.h	CALL_228
0x40008f7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x40008fa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40008ff	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x4000901	      0xe800000000	                          call 0x4000906	        97	stdio2.h	CALL_228
0x4000906	    0x8b0500000000	            mov eax, dword [0x0400090c] 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400090c	            0x85c0	                           test eax, eax	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400090e	            0x7e36	                           jle 0x4000946	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000910	    0x488b05000000	            mov rax, qword [0x04000917] 	       153	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000917	    0x488b3d000000	            mov rdi, qword [0x0400091e] 	        97	stdio2.h	CALL_228
0x400091e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_228
0x4000923	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000928	          0x83c301	                              add ebx, 1	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400092b	        0x488b0c28	              mov rcx, qword [rax + rbp]	        97	stdio2.h	CALL_228
0x400092f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x4000931	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_228
0x4000935	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_228
0x4000939	      0xe800000000	                          call 0x400093e	        97	stdio2.h	CALL_228
0x400093e	    0x391d00000000	            cmp dword [0x04000944], ebx 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000944	            0x7fca	                            jg 0x4000910	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000946	    0x488b0d000000	            mov rcx, qword [0x0400094d] 	        97	stdio2.h	CALL_228
0x400094d	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_228
0x4000952	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000957	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x400095c	      0xe800000000	                          call 0x4000961	        97	stdio2.h	CALL_228
0x4000961	      0xe973fdffff	                           jmp 0x40006d9	        97	stdio2.h	CALL_228
write_merge_heads	DO,0:SWITCH,0:IF,2:CALL,10:WHILE,0:functions,0:FOR,1:ELSE,1	69
0x4000083	               0x0	                      add byte [rax], al	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000085	               0x0	                      add byte [rax], al	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000087	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000089	     0xf8549010000	                           jne 0x40001d8	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400008f	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000094	      0xb90f000000	                            mov ecx, 0xf	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000099	          0x4889ee	                            mov rsi, rbp	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400009c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400009e	            0x7411	                            je 0x40000b1	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000a0	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000a5	      0xb90b000000	                            mov ecx, 0xb	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000aa	          0x4889ee	                            mov rsi, rbp	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000af	            0x753f	                           jne 0x40000f0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000b1	          0x4c89e6	                            mov rsi, r12	       570	merge.c	FUNCTION_17	CALL_9
0x40000b4	          0x4889ef	                            mov rdi, rbp	       570	merge.c	FUNCTION_17	CALL_9
0x40000b7	      0xe800000000	                          call 0x40000bc	       570	merge.c	FUNCTION_17	CALL_9
0x40000bc	    0x890500000000	            mov dword [0x040000c2], eax 	       570	merge.c	FUNCTION_17	CALL_9
0x40000c2	          0x4c89ea	                            mov rdx, r13	       595	merge.c	FUNCTION_17	CALL_25
0x40000c5	          0x4c89e6	                            mov rsi, r12	       595	merge.c	FUNCTION_17	CALL_25
0x40000c8	          0x4889ef	                            mov rdi, rbp	       595	merge.c	FUNCTION_17	CALL_25
0x40000cb	      0xe800000000	                          call 0x40000d0	       595	merge.c	FUNCTION_17	CALL_25
0x40000d0	            0x85c0	                           test eax, eax	       596	merge.c	FUNCTION_17	IF_12
0x40000d2	            0x89c3	                            mov ebx, eax	       596	merge.c	FUNCTION_17	IF_12
0x40000d4	     0xf8466010000	                            je 0x4000240	       596	merge.c	FUNCTION_17	IF_12
0x40000da	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x40000de	            0x89d8	                            mov eax, ebx	       602	merge.c	FUNCTION_17
0x40000e0	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x40000e1	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x40000e2	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x40000e4	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x40000e6	              0xc3	                                     ret	       602	merge.c	FUNCTION_17
0x40000e7	    0x660f1f840000	                    nop word [rax + rax]	       602	merge.c	FUNCTION_17
0x40000f0	      0xbf00000000	                              mov edi, 0	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000f5	      0xb917000000	                           mov ecx, 0x17	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000fa	          0x4889ee	                            mov rsi, rbp	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x40000ff	     0xf848b010000	                            je 0x4000290	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000105	      0xbf00000000	                              mov edi, 0	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400010a	      0xb90d000000	                            mov ecx, 0xd	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400010f	          0x4889ee	                            mov rsi, rbp	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000112	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000114	     0xf8456010000	                            je 0x4000270	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400011a	      0xbf00000000	                              mov edi, 0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400011f	      0xb90d000000	                            mov ecx, 0xd	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000124	          0x4889ee	                            mov rsi, rbp	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000127	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000129	     0xf84a1010000	                            je 0x40002d0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400012f	      0xbf00000000	                              mov edi, 0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000134	      0xb912000000	                           mov ecx, 0x12	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000139	          0x4889ee	                            mov rsi, rbp	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x400013c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x400013e	     0xf846c010000	                            je 0x40002b0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x4000144	      0xbf00000000	                              mov edi, 0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000149	      0xb909000000	                              mov ecx, 9	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400014e	          0x4889ee	                            mov rsi, rbp	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000151	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000153	           0xf97c3	                                 seta bl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000156	           0xf92c2	                                 setb dl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000159	            0x29d3	                            sub ebx, edx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400015b	           0xfbedb	                           movsx ebx, bl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400015e	            0x85db	                           test ebx, ebx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000160	     0xf847a010000	                            je 0x40002e0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000166	      0xbf00000000	                              mov edi, 0	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400016b	      0xb918000000	                           mov ecx, 0x18	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000170	          0x4889ee	                            mov rsi, rbp	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000173	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000175	           0xf97c3	                                 seta bl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000178	               0xf	                                 invalid	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
try_merge_strategy	DO,0:SWITCH,0:IF,7:CALL,22:WHILE,0:functions,0:FOR,2:ELSE,1	164
0x40013b0	            0x4156	                                push r14	       649	merge.c	FUNCTION_20
0x40013b2	            0x4155	                                push r13	       649	merge.c	FUNCTION_20
0x40013b4	          0x4989ce	                            mov r14, rcx	       649	merge.c	FUNCTION_20
0x40013b7	            0x4154	                                push r12	       649	merge.c	FUNCTION_20
0x40013b9	              0x55	                                push rbp	       649	merge.c	FUNCTION_20
0x40013ba	          0x4889f5	                            mov rbp, rsi	       649	merge.c	FUNCTION_20
0x40013bd	              0x53	                                push rbx	       649	merge.c	FUNCTION_20
0x40013be	      0xbe01000000	                              mov esi, 1	       653	merge.c	FUNCTION_20	CALL_1
0x40013c3	          0x4889fb	                            mov rbx, rdi	       649	merge.c	FUNCTION_20
0x40013c6	      0xbf00000000	                              mov edi, 0	       653	merge.c	FUNCTION_20	CALL_1
0x40013cb	          0x4989d5	                            mov r13, rdx	       649	merge.c	FUNCTION_20
0x40013ce	    0x4881ecb00400	                          sub rsp, 0x4b0	       649	merge.c	FUNCTION_20
0x40013d5	    0x64488b042528	                mov rax, qword fs:[0x28]	       649	merge.c	FUNCTION_20
0x40013de	    0x48898424a804	            mov qword [rsp + 0x4a8], rax	       649	merge.c	FUNCTION_20
0x40013e6	            0x31c0	                            xor eax, eax	       649	merge.c	FUNCTION_20
0x40013e8	      0xe800000000	                          call 0x40013ed	       653	merge.c	FUNCTION_20	CALL_1
0x40013ed	          0x4531c0	                            xor r8d, r8d	       654	merge.c	FUNCTION_20
0x40013f0	            0x31c9	                            xor ecx, ecx	       654	merge.c	FUNCTION_20
0x40013f2	            0x31d2	                            xor edx, edx	       654	merge.c	FUNCTION_20
0x40013f4	      0xbe04000000	                              mov esi, 4	       654	merge.c	FUNCTION_20
0x40013f9	      0xbf00000000	                              mov edi, 0	       654	merge.c	FUNCTION_20
0x40013fe	      0xe800000000	                          call 0x4001403	       654	merge.c	FUNCTION_20
0x4001403	      0xba03000000	                              mov edx, 3	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4001408	      0xbe00000000	                              mov esi, 0	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400140d	      0xbf00000000	                              mov edi, 0	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4001412	      0xe800000000	                          call 0x4001417	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4001417	            0x85c0	                           test eax, eax	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4001419	     0xf85d9010000	                           jne 0x40015f8	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400141f	      0xbf00000000	                              mov edi, 0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x4001424	      0xb90a000000	                            mov ecx, 0xa	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x4001429	          0x4889de	                            mov rsi, rbx	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x400142c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x400142e	            0x7560	                           jne 0x4001490	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x4001430	      0x49837d0800	                  cmp qword [r13 + 8], 0	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x4001435	    0x48c744240800	                  mov qword [rsp + 8], 0	       662	merge.c	FUNCTION_20	IF_2
0x400143e	     0xf8484000000	                            je 0x40014c8	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x4001444	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_66
0x4001449	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_66
0x400144e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_66
0x4001450	      0xe800000000	                          call 0x4001455	        54	gettext.h	FUNCTION_66
0x4001455	          0x4889c7	                            mov rdi, rax	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x4001458	            0x31c0	                            xor eax, eax	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x400145a	      0xe800000000	                          call 0x400145f	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x400145f	      0xb802000000	                              mov eax, 2	       668	merge.c	FUNCTION_20	IF_2	IF_3
0x4001464	    0x488b8c24a804	           mov rcx, qword [rsp + 0x4a8] 	       702	merge.c	FUNCTION_20
0x400146c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       702	merge.c	FUNCTION_20
0x4001475	     0xf85c4010000	                           jne 0x400163f	       702	merge.c	FUNCTION_20
0x400147b	    0x4881c4b00400	                          add rsp, 0x4b0	       702	merge.c	FUNCTION_20
0x4001482	              0x5b	                                 pop rbx	       702	merge.c	FUNCTION_20
0x4001483	              0x5d	                                 pop rbp	       702	merge.c	FUNCTION_20
0x4001484	            0x415c	                                 pop r12	       702	merge.c	FUNCTION_20
0x4001486	            0x415d	                                 pop r13	       702	merge.c	FUNCTION_20
0x4001488	            0x415e	                                 pop r14	       702	merge.c	FUNCTION_20
0x400148a	              0xc3	                                     ret	       702	merge.c	FUNCTION_20
0x400148b	       0xf1f440000	                   nop dword [rax + rax]	       702	merge.c	FUNCTION_20
0x4001490	      0xbf00000000	                              mov edi, 0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x4001495	      0xb908000000	                              mov ecx, 8	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x400149a	          0x4889de	                            mov rsi, rbx	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x400149d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x400149f	            0x748f	                            je 0x4001430	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40014a1	    0x488b15000000	            mov rdx, qword [0x040014a8] 	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014a8	    0x488b35000000	            mov rsi, qword [0x040014af] 	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014af	          0x4d89e9	                             mov r9, r13	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014b2	    0x41b800000000	                              mov r8d, 0	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014b8	          0x4889e9	                            mov rcx, rbp	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014bb	          0x4889df	                            mov rdi, rbx	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014be	      0xe800000000	                          call 0x40014c3	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014c3	            0xeb9f	                           jmp 0x4001464	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014c5	           0xf1f00	                         nop dword [rax]	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x40014c8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x40014cd	      0xe800000000	                          call 0x40014d2	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x40014d2	      0xbf00000000	                              mov edi, 0	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x40014d7	      0xb908000000	                              mov ecx, 8	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x40014dc	          0x4889de	                            mov rsi, rbx	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x40014df	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x40014e1	            0x7509	                           jne 0x40014ec	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x40014e3	    0x48c744243000	               mov qword [rsp + 0x30], 0	       673	merge.c	FUNCTION_20	IF_2	IF_4
0x40014ec	       0xfb654243c	           movzx edx, byte [rsp + 0x3c] 	       675	merge.c	FUNCTION_20	IF_2
0x40014f1	     0xfb605000000	           movzx eax, byte [0x040014f8] 	       675	merge.c	FUNCTION_20	IF_2
0x40014f8	          0x83e2fe	                     and edx, 0xfffffffe	       675	merge.c	FUNCTION_20	IF_2
0x40014fb	          0x83e001	                              and eax, 1	       675	merge.c	FUNCTION_20	IF_2
0x40014fe	             0x9d0	                             or eax, edx	       675	merge.c	FUNCTION_20	IF_2
0x4001500	        0x8844243c	               mov byte [rsp + 0x3c], al	       675	merge.c	FUNCTION_20	IF_2
0x4001504	    0x8b0500000000	            mov eax, dword [0x0400150a] 	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x400150a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x400150d	     0xf84d6000000	                            je 0x40015e9	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4001513	            0x31db	                            xor ebx, ebx	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4001515	    0x48833d000000	               cmp qword [0x0400151d], 0	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x400151d	        0x89442460	             mov dword [rsp + 0x60], eax	       676	merge.c	FUNCTION_20	IF_2
0x4001521	            0x7437	                            je 0x400155a	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4001523	       0xf1f440000	                   nop dword [rax + rax]	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4001528	    0x488b05000000	            mov rax, qword [0x0400152f] 	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x400152f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001534	    0x4c8d24dd0000	                        lea r12, [rbx*8]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x400153c	        0x488b34d8	            mov rsi, qword [rax + rbx*8]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001540	      0xe800000000	                          call 0x4001545	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001545	            0x85c0	                           test eax, eax	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001547	     0xf85d0000000	                           jne 0x400161d	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x400154d	        0x4883c301	                              add rbx, 1	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4001551	    0x48391d000000	            cmp qword [0x04001558], rbx 	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4001558	            0x77ce	                            ja 0x4001528	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x400155a	        0x498b4500	                    mov rax, qword [r13]	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x400155e	    0x48c744241800	               mov qword [rsp + 0x18], 0	       683	merge.c	FUNCTION_20	IF_2
0x4001567	        0x488b4018	            mov rax, qword [rax + 0x18] 	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x400156b	        0x4883c008	                              add rax, 8	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x400156f	          0x4885ed	                           test rbp, rbp	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4001572	      0x4889442420	             mov qword [rsp + 0x20], rax	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4001577	            0x741e	                            je 0x4001597	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4001579	     0xf1f80000000	                         nop dword [rax]	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4001580	        0x488b7d00	                    mov rdi, qword [rbp]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x4001584	      0x488d742408	                      lea rsi, [rsp + 8]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x4001589	      0xe800000000	                          call 0x400158e	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x400158e	        0x488b6d08	                mov rbp, qword [rbp + 8]	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4001592	          0x4885ed	                           test rbp, rbp	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4001595	            0x75e9	                           jne 0x4001580	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4001597	      0xbe01000000	                              mov esi, 1	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x400159c	      0xbf00000000	                              mov edi, 0	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x40015a1	      0xe800000000	                          call 0x40015a6	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x40015a6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40015ab	        0x498b5500	                    mov rdx, qword [r13]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40015af	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40015b4	          0x4989e0	                             mov r8, rsp	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40015b7	          0x4c89f6	                            mov rsi, r14	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40015ba	      0xe800000000	                          call 0x40015bf	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40015bf	            0x85c0	                           test eax, eax	       692	merge.c	FUNCTION_20	IF_2	IF_6
0x40015c1	            0x89c3	                            mov ebx, eax	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x40015c3	            0x787f	                            js 0x4001644	       692	merge.c	FUNCTION_20	IF_2	IF_6
0x40015c5	      0xba03000000	                              mov edx, 3	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x40015ca	      0xbe00000000	                              mov esi, 0	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x40015cf	      0xbf00000000	                              mov edi, 0	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x40015d4	      0xe800000000	                          call 0x40015d9	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x40015d9	            0x85c0	                           test eax, eax	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x40015db	            0x7571	                           jne 0x400164e	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x40015dd	            0x31c0	                            xor eax, eax	       697	merge.c	FUNCTION_20	IF_2
0x40015df	            0x85db	                           test ebx, ebx	       697	merge.c	FUNCTION_20	IF_2
0x40015e1	           0xf94c0	                                 sete al	       697	merge.c	FUNCTION_20	IF_2
0x40015e4	      0xe97bfeffff	                           jmp 0x4001464	       697	merge.c	FUNCTION_20	IF_2
0x40015e9	      0xbf02000000	                              mov edi, 2	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x40015ee	      0xe800000000	                          call 0x40015f3	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x40015f3	      0xe91bffffff	                           jmp 0x4001513	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x40015f8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_66
0x40015fd	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_66
0x4001602	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_66
0x4001604	      0xe800000000	                          call 0x4001609	        54	gettext.h	FUNCTION_66
0x4001609	          0x4889c7	                            mov rdi, rax	       657	merge.c	FUNCTION_20	CALL_3
0x400160c	            0x31c0	                            xor eax, eax	       657	merge.c	FUNCTION_20	CALL_3
0x400160e	      0xe800000000	                          call 0x4001613	       657	merge.c	FUNCTION_20	CALL_3
0x4001613	      0xb8ffffffff	                     mov eax, 0xffffffff	       657	merge.c	FUNCTION_20	CALL_3
0x4001618	      0xe947feffff	                           jmp 0x4001464	       657	merge.c	FUNCTION_20	CALL_3
0x400161d	    0x488b05000000	            mov rax, qword [0x04001624] 	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4001624	      0xbf00000000	                              mov edi, 0	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4001629	        0x4a8b1c20	              mov rbx, qword [rax + r12]	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x400162d	      0xe8ceeeffff	                       call sym._.part.4	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4001632	          0x4889de	                            mov rsi, rbx	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4001635	          0x4889c7	                            mov rdi, rax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4001638	            0x31c0	                            xor eax, eax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400163a	      0xe800000000	                          call 0x400163f	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400163f	      0xe800000000	                          call 0x4001644	       702	merge.c	FUNCTION_20
0x4001644	      0xbf80000000	                           mov edi, 0x80	       693	merge.c	FUNCTION_20	IF_2	CALL_17
0x4001649	      0xe800000000	                          call 0x400164e	       693	merge.c	FUNCTION_20	IF_2	CALL_17
0x400164e	      0xe800000000	                          call 0x4001653	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4001653	      0xbf00000000	                              mov edi, 0	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4001658	          0x4889c3	                            mov rbx, rax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x400165b	            0xebd0	                           jmp 0x400162d	       696	merge.c	FUNCTION_20	IF_2	CALL_21
abort_commit	DO,0:SWITCH,0:IF,1:CALL,3:WHILE,0:functions,0:FOR,0:ELSE,0	22
0x40007fb	               0x0	                      add byte [rax], al	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007fd	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007ff	            0x750b	                           jne 0x400080c	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000801	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000806	        0x803c2900	                 cmp byte [rcx + rbp], 0	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400080a	            0x7447	                            je 0x4000853	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400080c	    0x488b0d000000	            mov rcx, qword [0x04000813] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000813	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000816	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000819	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400081c	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000821	      0xe800000000	                          call 0x4000826	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000826	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4000828	            0x750b	                           jne 0x4000835	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400082a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400082f	        0x803c2900	                 cmp byte [rcx + rbp], 0	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000833	            0x741e	                            je 0x4000853	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4000835	          0x4585e4	                         test r12d, r12d	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x4000838	            0x7519	                           jne 0x4000853	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x400083a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x400083f	            0x89ea	                            mov edx, ebp	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000841	              0x48	                                 invalid	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
write_merge_state	DO,0:SWITCH,0:IF,0:CALL,4:WHILE,0:functions,0:FOR,0:ELSE,0	15
0x40007c5	          0x4c2408	                               and al, 8	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007c8	      0xe800000000	                          call 0x40007cd	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007cd	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007cf	            0x7512	                           jne 0x40007e3	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007d1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007d6	      0xb801000000	                              mov eax, 1	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007db	        0x803c2900	                 cmp byte [rcx + rbp], 0	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007df	        0x440f44e0	                         cmove r12d, eax	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x40007e3	    0x488b0d000000	            mov rcx, qword [0x040007ea] 	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007ea	          0x4889ea	                            mov rdx, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007ed	          0x4889df	                            mov rdi, rbx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f0	          0x4889ce	                            mov rsi, rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f3	      0x48894c2408	                mov qword [rsp + 8], rcx	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f8	              0xe8	                                 invalid	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x40007f9	               0x0	                      add byte [rax], al	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
prepare_to_commit	DO,0:SWITCH,0:IF,8:CALL,27:WHILE,0:functions,0:FOR,0:ELSE,0	122
0x4000842	            0x89de	                            mov esi, ebx	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000844	      0xe800000000	                          call 0x4000849	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000849	    0x8b0500000000	            mov eax, dword [0x0400084f] 	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x400084f	        0x89442414	             mov dword [rsp + 0x14], eax	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x4000853	        0x4183c701	                             add r15d, 1	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000857	        0x4983c608	                              add r14, 8	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400085b	      0x443b7c2414	           cmp r15d, dword [rsp + 0x14] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000860	     0xf8cdafeffff	                            jl 0x4000740	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4000866	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400086b	      0xbf00000000	                              mov edi, 0	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000870	      0xe800000000	                          call 0x4000875	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000875	      0xe93efdffff	                           jmp 0x40005b8	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x400087a	    0x660f1f440000	                    nop word [rax + rax]	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x4000880	            0x31c0	                            xor eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000882	        0x48c1e004	                              shl rax, 4	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000886	    0x480500000000	                              add rax, 0	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x400088c	      0xe95ffdffff	                           jmp 0x40005f0	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000891	     0xf1f80000000	                         nop dword [rax]	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x4000898	      0xb801000000	                              mov eax, 1	       122	merge.c	FUNCTION_2	FOR_1
0x400089d	            0xebe3	                           jmp 0x4000882	       122	merge.c	FUNCTION_2	FOR_1
0x400089f	              0x90	                                     nop	       122	merge.c	FUNCTION_2	FOR_1
0x40008a0	      0xb802000000	                              mov eax, 2	       122	merge.c	FUNCTION_2	FOR_1
0x40008a5	            0xebdb	                           jmp 0x4000882	       122	merge.c	FUNCTION_2	FOR_1
0x40008a7	    0x660f1f840000	                    nop word [rax + rax]	       122	merge.c	FUNCTION_2	FOR_1
0x40008b0	      0xb803000000	                              mov eax, 3	       122	merge.c	FUNCTION_2	FOR_1
0x40008b5	            0xebcb	                           jmp 0x4000882	       122	merge.c	FUNCTION_2	FOR_1
0x40008b7	    0x660f1f840000	                    nop word [rax + rax]	       122	merge.c	FUNCTION_2	FOR_1
0x40008c0	      0xb804000000	                              mov eax, 4	       122	merge.c	FUNCTION_2	FOR_1
0x40008c5	            0xebbb	                           jmp 0x4000882	       122	merge.c	FUNCTION_2	FOR_1
0x40008c7	      0x488d442420	                   lea rax, [rsp + 0x20]	       122	merge.c	FUNCTION_2	FOR_1
0x40008cc	      0x4889442418	             mov qword [rsp + 0x18], rax	       122	merge.c	FUNCTION_2	FOR_1
0x40008d1	          0x4889c6	                            mov rsi, rax	       122	merge.c	FUNCTION_2	FOR_1
0x40008d4	            0xeb95	                           jmp 0x400086b	       122	merge.c	FUNCTION_2	FOR_1
0x40008d6	            0x31c0	                            xor eax, eax	       120	merge.c	FUNCTION_2	IF_1
0x40008d8	      0xe913fdffff	                           jmp 0x40005f0	       120	merge.c	FUNCTION_2	IF_1
0x40008dd	      0xe800000000	                          call 0x40008e2	       163	merge.c	FUNCTION_2
0x40008e2	      0xbf00000000	                              mov edi, 0	       163	merge.c	FUNCTION_2
0x40008e7	            0x31ed	                            xor ebp, ebp	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008e9	            0x31db	                            xor ebx, ebx	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008eb	      0xe810fcffff	                       call sym._.part.4	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x40008f0	    0x488b3d000000	            mov rdi, qword [0x040008f7] 	        97	stdio2.h	CALL_228
0x40008f7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_228
0x40008fa	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x40008ff	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x4000901	      0xe800000000	                          call 0x4000906	        97	stdio2.h	CALL_228
0x4000906	    0x8b0500000000	            mov eax, dword [0x0400090c] 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400090c	            0x85c0	                           test eax, eax	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400090e	            0x7e36	                           jle 0x4000946	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000910	    0x488b05000000	            mov rax, qword [0x04000917] 	       153	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000917	    0x488b3d000000	            mov rdi, qword [0x0400091e] 	        97	stdio2.h	CALL_228
0x400091e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_228
0x4000923	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000928	          0x83c301	                              add ebx, 1	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400092b	        0x488b0c28	              mov rcx, qword [rax + rbp]	        97	stdio2.h	CALL_228
0x400092f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_228
0x4000931	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_228
0x4000935	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_228
0x4000939	      0xe800000000	                          call 0x400093e	        97	stdio2.h	CALL_228
0x400093e	    0x391d00000000	            cmp dword [0x04000944], ebx 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000944	            0x7fca	                            jg 0x4000910	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4000946	    0x488b0d000000	            mov rcx, qword [0x0400094d] 	        97	stdio2.h	CALL_228
0x400094d	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_228
0x4000952	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_228
0x4000957	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_228
0x400095c	      0xe800000000	                          call 0x4000961	        97	stdio2.h	CALL_228
0x4000961	      0xe973fdffff	                           jmp 0x40006d9	        97	stdio2.h	CALL_228
0x4000966	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        97	stdio2.h	CALL_228
0x4000970	            0x4157	                                push r15	      1087	merge.c	FUNCTION_38
0x4000972	            0x4156	                                push r14	      1087	merge.c	FUNCTION_38
0x4000974	            0x4155	                                push r13	      1087	merge.c	FUNCTION_38
0x4000976	            0x4154	                                push r12	      1087	merge.c	FUNCTION_38
0x4000978	          0x4989cd	                            mov r13, rcx	      1087	merge.c	FUNCTION_38
0x400097b	              0x55	                                push rbp	      1087	merge.c	FUNCTION_38
0x400097c	              0x53	                                push rbx	      1087	merge.c	FUNCTION_38
0x400097d	          0x4889fd	                            mov rbp, rdi	      1087	merge.c	FUNCTION_38
0x4000980	          0x4189d4	                           mov r12d, edx	      1087	merge.c	FUNCTION_38
0x4000983	    0x4881ec180100	                          sub rsp, 0x118	      1087	merge.c	FUNCTION_38
0x400098a	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1087	merge.c	FUNCTION_38
0x4000993	    0x48898c240801	            mov qword [rsp + 0x108], rcx	      1087	merge.c	FUNCTION_38
0x400099b	            0x31c9	                            xor ecx, ecx	      1087	merge.c	FUNCTION_38
0x400099d	          0x4d85c0	                             test r8, r8	      1093	merge.c	FUNCTION_38	IF_1
0x40009a0	      0x4889742408	                mov qword [rsp + 8], rsi	      1087	merge.c	FUNCTION_38
0x40009a5	      0x4c89442428	              mov qword [rsp + 0x28], r8	      1087	merge.c	FUNCTION_38
0x40009aa	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1089	merge.c	FUNCTION_38
0x40009b3	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1091	merge.c	FUNCTION_38
0x40009bc	    0x48c744247800	               mov qword [rsp + 0x78], 0	      1091	merge.c	FUNCTION_38
0x40009c5	    0x48c784248000	               mov qword [rsp + 0x80], 0	      1091	merge.c	FUNCTION_38
0x40009d1	     0xf84e3070000	                            je 0x40011ba	      1093	merge.c	FUNCTION_38	IF_1
0x40009d7	    0x8b3500000000	            mov esi, dword [0x040009dd] 	      1093	merge.c	FUNCTION_38	IF_1
0x40009dd	      0x4c8d742470	                   lea r14, [rsp + 0x70]	      1094	merge.c	FUNCTION_38	IF_1
0x40009e2	            0x85f6	                           test esi, esi	      1093	merge.c	FUNCTION_38	IF_1
0x40009e4	     0xf8548050000	                           jne 0x4000f32	      1093	merge.c	FUNCTION_38	IF_1
0x40009ea	          0x4885ed	                           test rbp, rbp	      1096	merge.c	FUNCTION_38	IF_2
0x40009ed	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      1090	merge.c	FUNCTION_38
0x40009f2	            0x7411	                            je 0x4000a05	      1096	merge.c	FUNCTION_38	IF_2
0x40009f4	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1097	merge.c	FUNCTION_38	CALL_1
0x40009f9	          0x4889ef	                            mov rdi, rbp	      1097	merge.c	FUNCTION_38	CALL_1
0x40009fc	      0xe800000000	                          call 0x4000a01	      1097	merge.c	FUNCTION_38	CALL_1
0x4000a01	        0x488d5808	                      lea rbx, [rax + 8]	      1097	merge.c	FUNCTION_38	CALL_1
0x4000a05	        0x4183fc01	                             cmp r12d, 1	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000a09	     0xf84b1050000	                            je 0x4000fc0	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4000a0f	          0x4531ff	                          xor r15d, r15d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a12	          0x4585e4	                         test r12d, r12d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a15	            0x7e37	                           jle 0x4000a4e	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a17	    0x660f1f840000	                    nop word [rax + rax]	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a20	      0x4b8b7cfd00	            mov rdi, qword [r13 + r15*8]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a25	      0xe800000000	                          call 0x4000a2a	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a2a	          0x4885c0	                           test rax, rax	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4000a2d	          0x4989c0	                             mov r8, rax	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4000a30	     0xf84ca040000	                            je 0x4000f00	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4000a36	          0x4889de	                            mov rsi, rbx	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a39	          0x4c89c7	                             mov rdi, r8	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a3c	        0x4983c701	                              add r15, 1	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a40	      0xe800000000	                          call 0x4000a45	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a45	          0x4539fc	                          cmp r12d, r15d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a48	        0x488d5808	                      lea rbx, [rax + 8]	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4000a4c	            0x7fd2	                            jg 0x4000a20	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4000a4e	      0x488b442408	                mov rax, qword [rsp + 8]	       997	merge.c	FUNCTION_35
0x4000a53	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4000a58	      0x488d5c2460	                   lea rbx, [rsp + 0x60]	      1004	merge.c	FUNCTION_35
0x4000a5d	    0xc70001000000	                      mov dword [rax], 1	       997	merge.c	FUNCTION_35
0x4000a63	              0x48	                                 invalid	       997	merge.c	FUNCTION_35
option_parse_n	DO,0:SWITCH,0:IF,0:CALL,0:WHILE,0:functions,0:FOR,0:ELSE,0	3
0x4000040	    0x891500000000	            mov dword [0x04000046], edx 	       195	merge.c	FUNCTION_6
0x4000046	            0x31c0	                            xor eax, eax	       197	merge.c	FUNCTION_6
0x4000048	              0xc3	                                     ret	       197	merge.c	FUNCTION_6
finish_up_to_date	DO,0:SWITCH,0:IF,1:CALL,2:WHILE,0:functions,0:FOR,0:ELSE,0	23
0x4000179	              0x92	                           xchg eax, edx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400017a	          0xc229d3	                              ret 0xd329	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400017d	           0xfbedb	                           movsx ebx, bl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000180	            0x85db	                           test ebx, ebx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000182	     0xf8478010000	                            je 0x4000300	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000188	      0xbf00000000	                              mov edi, 0	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400018d	      0xb90f000000	                            mov ecx, 0xf	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000192	          0x4889ee	                            mov rsi, rbp	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000195	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x4000197	           0xf97c3	                                 seta bl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019a	           0xf92c2	                                 setb dl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019d	            0x29d3	                            sub ebx, edx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x400019f	           0xfbedb	                           movsx ebx, bl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001a2	            0x85db	                           test ebx, ebx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001a4	     0xf8518ffffff	                           jne 0x40000c2	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40001aa	          0x4c89e6	                            mov rsi, r12	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001ad	          0x4889ef	                            mov rdi, rbp	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001b0	      0xe800000000	                          call 0x40001b5	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001b5	      0xba00000000	                              mov edx, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001ba	            0x85c0	                           test eax, eax	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001bc	              0xb8	                                 invalid	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001bd	               0x0	                      add byte [rax], al	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40001bf	               0x0	                                 invalid	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
