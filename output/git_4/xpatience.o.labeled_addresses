xdl_do_patience_diff	FOR,0:SWITCH,0:functions,0:ELSE,0:DO,0:IF,1:CALL,2:WHILE,0	65
0x40009e0	            0x4155	                                push r13	       383	xpatience.c	FUNCTION_10
0x40009e2	            0x4154	                                push r12	       383	xpatience.c	FUNCTION_10
0x40009e4	          0x4989d5	                            mov r13, rdx	       383	xpatience.c	FUNCTION_10
0x40009e7	              0x55	                                push rbp	       383	xpatience.c	FUNCTION_10
0x40009e8	              0x53	                                push rbx	       383	xpatience.c	FUNCTION_10
0x40009e9	          0x4889fd	                            mov rbp, rdi	       383	xpatience.c	FUNCTION_10
0x40009ec	          0x4989f4	                            mov r12, rsi	       383	xpatience.c	FUNCTION_10
0x40009ef	          0x4889cb	                            mov rbx, rcx	       383	xpatience.c	FUNCTION_10
0x40009f2	        0x4883ec08	                              sub rsp, 8	       383	xpatience.c	FUNCTION_10
0x40009f6	      0xe800000000	                          call 0x40009fb	       384	xpatience.c	FUNCTION_10	IF_1	CALL_1
0x40009fb	            0x85c0	                           test eax, eax	       384	xpatience.c	FUNCTION_10	IF_1	CALL_1
0x40009fd	     0xf889c000000	                            js 0x4000a9f	       384	xpatience.c	FUNCTION_10	IF_1	CALL_1
0x4000a03	        0x4c8b4b38	              mov r9, qword [rbx + 0x38]	       389	xpatience.c	FUNCTION_10
0x4000a07	    0x488b83c00000	            mov rax, qword [rbx + 0xc0] 	       389	xpatience.c	FUNCTION_10
0x4000a0e	          0x4585c9	                           test r9d, r9d	       344	xpatience.c	FUNCTION_9	IF_1
0x4000a11	            0x7535	                           jne 0x4000a48	       344	xpatience.c	FUNCTION_9	IF_1
0x4000a13	            0x85c0	                           test eax, eax	       345	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a15	            0x741d	                            je 0x4000a34	       345	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a17	          0x8d48ff	                      lea ecx, [rax - 1]	       345	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a1a	            0x31c0	                            xor eax, eax	       345	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a1c	        0x4883c101	                              add rcx, 1	       345	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a20	    0x488b93f00000	            mov rdx, qword [rbx + 0xf0] 	       346	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a27	        0xc6040201	                 mov byte [rdx + rax], 1	       346	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a2b	        0x4883c001	                              add rax, 1	       346	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a2f	          0x4839c1	                            cmp rcx, rax	       345	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a32	            0x75ec	                           jne 0x4000a20	       345	xpatience.c	FUNCTION_9	IF_1	WHILE_1
0x4000a34	            0x31c0	                            xor eax, eax	       347	xpatience.c	FUNCTION_9	IF_1
0x4000a36	        0x4883c408	                              add rsp, 8	       390	xpatience.c	FUNCTION_10
0x4000a3a	              0x5b	                                 pop rbx	       390	xpatience.c	FUNCTION_10
0x4000a3b	              0x5d	                                 pop rbp	       390	xpatience.c	FUNCTION_10
0x4000a3c	            0x415c	                                 pop r12	       390	xpatience.c	FUNCTION_10
0x4000a3e	            0x415d	                                 pop r13	       390	xpatience.c	FUNCTION_10
0x4000a40	              0xc3	                                     ret	       390	xpatience.c	FUNCTION_10
0x4000a41	     0xf1f80000000	                         nop dword [rax]	       390	xpatience.c	FUNCTION_10
0x4000a48	            0x85c0	                           test eax, eax	       348	xpatience.c	FUNCTION_9	ELSE_1	IF_2
0x4000a4a	            0x752c	                           jne 0x4000a78	       348	xpatience.c	FUNCTION_9	ELSE_1	IF_2
0x4000a4c	        0x418d49ff	                       lea ecx, [r9 - 1]	       348	xpatience.c	FUNCTION_9	ELSE_1	IF_2
0x4000a50	            0x31c0	                            xor eax, eax	       348	xpatience.c	FUNCTION_9	ELSE_1	IF_2
0x4000a52	        0x4883c101	                              add rcx, 1	       348	xpatience.c	FUNCTION_9	ELSE_1	IF_2
0x4000a56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       348	xpatience.c	FUNCTION_9	ELSE_1	IF_2
0x4000a60	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	       350	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a64	        0xc6040201	                 mov byte [rdx + rax], 1	       350	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a68	        0x4883c001	                              add rax, 1	       350	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a6c	          0x4839c1	                            cmp rcx, rax	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a6f	            0x75ef	                           jne 0x4000a60	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a71	            0xebc1	                           jmp 0x4000a34	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a73	       0xf1f440000	                   nop dword [rax + rax]	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a78	              0x50	                                push rax	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a79	            0x6a01	                                  push 1	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a7b	          0x4889d9	                            mov rcx, rbx	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a7e	          0x4c89ea	                            mov rdx, r13	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a81	          0x4c89e6	                            mov rsi, r12	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a84	          0x4889ef	                            mov rdi, rbp	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a87	    0x41b801000000	                              mov r8d, 1	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a8d	      0xe8aef5ffff	           call sym.patience_diff.part.5	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a92	              0x5a	                                 pop rdx	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a93	              0x59	                                 pop rcx	       349	xpatience.c	FUNCTION_9	ELSE_1	IF_2	WHILE_2
0x4000a94	        0x4883c408	                              add rsp, 8	       390	xpatience.c	FUNCTION_10
0x4000a98	              0x5b	                                 pop rbx	       390	xpatience.c	FUNCTION_10
0x4000a99	              0x5d	                                 pop rbp	       390	xpatience.c	FUNCTION_10
0x4000a9a	            0x415c	                                 pop r12	       390	xpatience.c	FUNCTION_10
0x4000a9c	            0x415d	                                 pop r13	       390	xpatience.c	FUNCTION_10
0x4000a9e	              0xc3	                                     ret	       390	xpatience.c	FUNCTION_10
0x4000a9f	      0xb8ffffffff	                     mov eax, 0xffffffff	       385	xpatience.c	FUNCTION_10	IF_1
0x4000aa4	            0xeb90	                           jmp 0x4000a36	       385	xpatience.c	FUNCTION_10	IF_1
