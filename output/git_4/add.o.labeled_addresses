ignore_removal_cb	DO,0:IF,0:CALL,0:WHILE,0:ELSE,0:FOR,0:SWITCH,0:functions,0	7
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       286	add.c	FUNCTION_11
0x4000044	            0x85d2	                           test edx, edx	       286	add.c	FUNCTION_11
0x4000046	           0xf95c2	                                setne dl	       286	add.c	FUNCTION_11
0x4000049	           0xfb6d2	                           movzx edx, dl	       286	add.c	FUNCTION_11
0x400004c	            0x8910	                    mov dword [rax], edx	       286	add.c	FUNCTION_11
0x400004e	            0x31c0	                            xor eax, eax	       288	add.c	FUNCTION_11
0x4000050	              0xc3	                                     ret	       288	add.c	FUNCTION_11
interactive_add	DO,0:IF,0:CALL,2:WHILE,0:ELSE,0:FOR,0:SWITCH,0:functions,0	68
0x40003d0	            0x4154	                                push r12	       204	add.c	FUNCTION_9
0x40003d2	              0x55	                                push rbp	       204	add.c	FUNCTION_9
0x40003d3	          0x4989f0	                             mov r8, rsi	       204	add.c	FUNCTION_9
0x40003d6	              0x53	                                push rbx	       204	add.c	FUNCTION_9
0x40003d7	            0x31f6	                            xor esi, esi	       207	add.c	FUNCTION_9	CALL_1
0x40003d9	            0x89cb	                            mov ebx, ecx	       204	add.c	FUNCTION_9
0x40003db	          0x4889d1	                            mov rcx, rdx	       207	add.c	FUNCTION_9	CALL_1
0x40003de	      0xba1a000000	                           mov edx, 0x1a	       207	add.c	FUNCTION_9	CALL_1
0x40003e3	        0x4883ec30	                           sub rsp, 0x30	       204	add.c	FUNCTION_9
0x40003e7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       207	add.c	FUNCTION_9	CALL_1
0x40003ec	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	add.c	FUNCTION_9
0x40003f5	      0x4889442428	             mov qword [rsp + 0x28], rax	       204	add.c	FUNCTION_9
0x40003fa	            0x31c0	                            xor eax, eax	       204	add.c	FUNCTION_9
0x40003fc	      0xe800000000	                          call 0x4000401	       207	add.c	FUNCTION_9	CALL_1
0x4000401	            0x85db	                           test ebx, ebx	       213	add.c	FUNCTION_9	CALL_2
0x4000403	     0xf859f000000	                           jne 0x40004a8	       213	add.c	FUNCTION_9	CALL_2
0x4000409	      0xbe00000000	                              mov esi, 0	       188	add.c	FUNCTION_8	CALL_1
0x400040e	          0x4889e7	                            mov rdi, rsp	       188	add.c	FUNCTION_8	CALL_1
0x4000411	    0x48c704240000	                      mov qword [rsp], 0	       186	add.c	FUNCTION_8
0x4000419	    0xc74424080000	                  mov dword [rsp + 8], 0	       186	add.c	FUNCTION_8
0x4000421	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       186	add.c	FUNCTION_8
0x4000429	          0x4989e4	                            mov r12, rsp	       188	add.c	FUNCTION_8	CALL_1
0x400042c	      0xe800000000	                          call 0x4000431	       188	add.c	FUNCTION_8	CALL_1
0x4000431	      0xbe00000000	                              mov esi, 0	       193	add.c	FUNCTION_8	CALL_4
0x4000436	          0x4c89e7	                            mov rdi, r12	       193	add.c	FUNCTION_8	CALL_4
0x4000439	            0x31ed	                            xor ebp, ebp	       194	add.c	FUNCTION_8	FOR_1
0x400043b	      0xe800000000	                          call 0x4000440	       193	add.c	FUNCTION_8	CALL_4
0x4000440	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       194	add.c	FUNCTION_8	FOR_1
0x4000444	            0x31db	                            xor ebx, ebx	       194	add.c	FUNCTION_8	FOR_1
0x4000446	            0x85c0	                           test eax, eax	       194	add.c	FUNCTION_8	FOR_1
0x4000448	            0x7e25	                           jle 0x400046f	       194	add.c	FUNCTION_8	FOR_1
0x400044a	    0x660f1f440000	                    nop word [rax + rax]	       194	add.c	FUNCTION_8	FOR_1
0x4000450	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       196	add.c	FUNCTION_8	CALL_5
0x4000455	          0x4c89e7	                            mov rdi, r12	       196	add.c	FUNCTION_8	CALL_5
0x4000458	          0x83c301	                              add ebx, 1	       194	add.c	FUNCTION_8	FOR_1
0x400045b	      0x488b742808	         mov rsi, qword [rax + rbp + 8] 	       196	add.c	FUNCTION_8	CALL_5
0x4000460	        0x4883c538	                           add rbp, 0x38	       196	add.c	FUNCTION_8	CALL_5
0x4000464	      0xe800000000	                          call 0x4000469	       196	add.c	FUNCTION_8	CALL_5
0x4000469	        0x3b5c2410	            cmp ebx, dword [rsp + 0x10] 	       194	add.c	FUNCTION_8	FOR_1
0x400046d	            0x7ce1	                            jl 0x4000450	       194	add.c	FUNCTION_8	FOR_1
0x400046f	        0x488b3c24	                    mov rdi, qword [rsp]	       198	add.c	FUNCTION_8	CALL_6
0x4000473	      0xbe02000000	                              mov esi, 2	       198	add.c	FUNCTION_8	CALL_6
0x4000478	      0xe800000000	                          call 0x400047d	       198	add.c	FUNCTION_8	CALL_6
0x400047d	          0x4c89e7	                            mov rdi, r12	       199	add.c	FUNCTION_8	CALL_7
0x4000480	            0x89c3	                            mov ebx, eax	       198	add.c	FUNCTION_8	CALL_6
0x4000482	      0xe800000000	                          call 0x4000487	       199	add.c	FUNCTION_8	CALL_7
0x4000487	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       216	add.c	FUNCTION_9
0x400048c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       216	add.c	FUNCTION_9
0x4000495	            0x89d8	                            mov eax, ebx	       216	add.c	FUNCTION_9
0x4000497	            0x7549	                           jne 0x40004e2	       216	add.c	FUNCTION_9
0x4000499	        0x4883c430	                           add rsp, 0x30	       216	add.c	FUNCTION_9
0x400049d	              0x5b	                                 pop rbx	       216	add.c	FUNCTION_9
0x400049e	              0x5d	                                 pop rbp	       216	add.c	FUNCTION_9
0x400049f	            0x415c	                                 pop r12	       216	add.c	FUNCTION_9
0x40004a1	              0xc3	                                     ret	       216	add.c	FUNCTION_9
0x40004a2	    0x660f1f440000	                    nop word [rax + rax]	       216	add.c	FUNCTION_9
0x40004a8	          0x4889e7	                            mov rdi, rsp	       188	add.c	FUNCTION_8	CALL_1
0x40004ab	      0xbe00000000	                              mov esi, 0	       188	add.c	FUNCTION_8	CALL_1
0x40004b0	    0x48c704240000	                      mov qword [rsp], 0	       186	add.c	FUNCTION_8
0x40004b8	    0xc74424080000	                  mov dword [rsp + 8], 0	       186	add.c	FUNCTION_8
0x40004c0	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       186	add.c	FUNCTION_8
0x40004c8	          0x4989e4	                            mov r12, rsp	       188	add.c	FUNCTION_8	CALL_1
0x40004cb	      0xe800000000	                          call 0x40004d0	       188	add.c	FUNCTION_8	CALL_1
0x40004d0	      0xbe00000000	                              mov esi, 0	       190	add.c	FUNCTION_8	CALL_2
0x40004d5	          0x4889e7	                            mov rdi, rsp	       190	add.c	FUNCTION_8	CALL_2
0x40004d8	      0xe800000000	                          call 0x40004dd	       190	add.c	FUNCTION_8	CALL_2
0x40004dd	      0xe94fffffff	                           jmp 0x4000431	       190	add.c	FUNCTION_8	CALL_2
0x40004e2	      0xe800000000	                          call 0x40004e7	       216	add.c	FUNCTION_9
update_callback	DO,0:IF,5:CALL,8:WHILE,0:ELSE,0:FOR,1:SWITCH,1:functions,0	97
0x40000d0	          0x8b4f0c	              mov ecx, dword [rdi + 0xc]	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000d3	            0x85c9	                           test ecx, ecx	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000d5	     0xf8ed8000000	                           jle 0x40001b3	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000db	            0x4157	                                push r15	        74	add.c	ELSE_1	FUNCTION_3
0x40000dd	            0x4156	                                push r14	        74	add.c	ELSE_1	FUNCTION_3
0x40000df	          0x4989d6	                            mov r14, rdx	        74	add.c	ELSE_1	FUNCTION_3
0x40000e2	            0x4155	                                push r13	        74	add.c	ELSE_1	FUNCTION_3
0x40000e4	            0x4154	                                push r12	        74	add.c	ELSE_1	FUNCTION_3
0x40000e6	          0x4989fd	                            mov r13, rdi	        74	add.c	ELSE_1	FUNCTION_3
0x40000e9	              0x55	                                push rbp	        74	add.c	ELSE_1	FUNCTION_3
0x40000ea	              0x53	                                push rbx	        74	add.c	ELSE_1	FUNCTION_3
0x40000eb	            0x31ed	                            xor ebp, ebp	        74	add.c	ELSE_1	FUNCTION_3
0x40000ed	          0x4531e4	                          xor r12d, r12d	        74	add.c	ELSE_1	FUNCTION_3
0x40000f0	        0x4883ec08	                              sub rsp, 8	        74	add.c	ELSE_1	FUNCTION_3
0x40000f4	        0x498b4500	                    mov rax, qword [r13]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000f8	        0x488b0428	              mov rax, qword [rax + rbp]	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40000fc	         0xfb65812	           movzx ebx, byte [rax + 0x12] 	        79	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000100	          0x488b10	                    mov rdx, qword [rax]	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000103	        0x4c8b7a18	            mov r15, qword [rdx + 0x18] 	        80	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000107	          0x80fb55	                            cmp bl, 0x55	        54	add.c	FUNCTION_2	IF_1
0x400010a	            0x743c	                            je 0x4000148	        54	add.c	FUNCTION_2	IF_1
0x400010c	          0x80fb4d	                            cmp bl, 0x4d	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400010f	     0xf84a3000000	                            je 0x40001b8	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000115	          0x80fb54	                            cmp bl, 0x54	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000118	     0xf849a000000	                            je 0x40001b8	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x400011e	          0x80fb44	                            cmp bl, 0x44	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000121	     0xf84b9000000	                            je 0x40001e0	        81	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_1
0x4000127	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_21
0x400012c	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_21
0x400012e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_21
0x4000133	      0xe800000000	                          call 0x4000138	        54	gettext.h	FUNCTION_21
0x4000138	           0xfbef3	                           movsx esi, bl	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x400013b	          0x4889c7	                            mov rdi, rax	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x400013e	            0x31c0	                            xor eax, eax	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000140	      0xe800000000	                          call 0x4000145	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000145	           0xf1f00	                         nop dword [rax]	        83	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_3
0x4000148	          0x418b16	                    mov edx, dword [r14]	        56	add.c	FUNCTION_2	IF_2
0x400014b	          0xf6c208	                              test dl, 8	        56	add.c	FUNCTION_2	IF_2
0x400014e	            0x756b	                           jne 0x40001bb	        56	add.c	FUNCTION_2	IF_2
0x4000150	        0x488b4008	                mov rax, qword [rax + 8]	        56	add.c	FUNCTION_2	IF_2
0x4000154	      0x6683784000	                cmp word [rax + 0x40], 0	        56	add.c	FUNCTION_2	IF_2
0x4000159	            0x7560	                           jne 0x40001bb	        56	add.c	FUNCTION_2	IF_2
0x400015b	          0xf6c202	                              test dl, 2	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x400015e	     0xf848d000000	                            je 0x40001f1	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x4000164	          0x83e203	                              and edx, 3	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x4000167	            0x7427	                            je 0x4000190	        97	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_5
0x4000169	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_21
0x400016e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_21
0x4000173	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_21
0x4000175	      0xe800000000	                          call 0x400017a	        54	gettext.h	FUNCTION_21
0x400017a	          0x4c89fa	                            mov rdx, r15	       104	stdio2.h	CALL_79
0x400017d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_79
0x4000180	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_79
0x4000185	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_79
0x4000187	      0xe800000000	                          call 0x400018c	       104	stdio2.h	CALL_79
0x400018c	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_79
0x4000190	        0x418b4d0c	              mov ecx, dword [r13 + 0xc]	       104	stdio2.h	CALL_79
0x4000194	        0x4183c401	                             add r12d, 1	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x4000198	        0x4883c508	                              add rbp, 8	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x400019c	          0x4139cc	                           cmp r12d, ecx	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x400019f	     0xf8c4fffffff	                            jl 0x40000f4	        78	add.c	ELSE_1	FUNCTION_3	FOR_1
0x40001a5	        0x4883c408	                              add rsp, 8	       102	add.c	ELSE_1	FUNCTION_3
0x40001a9	              0x5b	                                 pop rbx	       102	add.c	ELSE_1	FUNCTION_3
0x40001aa	              0x5d	                                 pop rbp	       102	add.c	ELSE_1	FUNCTION_3
0x40001ab	            0x415c	                                 pop r12	       102	add.c	ELSE_1	FUNCTION_3
0x40001ad	            0x415d	                                 pop r13	       102	add.c	ELSE_1	FUNCTION_3
0x40001af	            0x415e	                                 pop r14	       102	add.c	ELSE_1	FUNCTION_3
0x40001b1	            0x415f	                                 pop r15	       102	add.c	ELSE_1	FUNCTION_3
0x40001b3	            0xf3c3	                                     ret	       102	add.c	ELSE_1	FUNCTION_3
0x40001b5	           0xf1f00	                         nop dword [rax]	       102	add.c	ELSE_1	FUNCTION_3
0x40001b8	          0x418b16	                    mov edx, dword [r14]	       102	add.c	ELSE_1	FUNCTION_3
0x40001bb	          0x4c89fe	                            mov rsi, r15	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40001be	      0xbf00000000	                              mov edi, 0	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40001c3	      0xe800000000	                          call 0x40001c8	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40001c8	            0x85c0	                           test eax, eax	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40001ca	            0x74c4	                            je 0x4000190	        86	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_4
0x40001cc	        0x41f60604	                      test byte [r14], 4	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x40001d0	            0x7434	                            je 0x4000206	        87	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	IF_2
0x40001d2	      0x4183460401	                  add dword [r14 + 4], 1	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x40001d7	        0x418b4d0c	              mov ecx, dword [r13 + 0xc]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x40001db	            0xebb7	                           jmp 0x4000194	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x40001dd	           0xf1f00	                         nop dword [rax]	        89	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x40001e0	          0x418b16	                    mov edx, dword [r14]	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001e3	          0xf6c208	                              test dl, 8	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001e6	            0x75ac	                           jne 0x4000194	        93	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40001e8	          0xf6c202	                              test dl, 2	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x40001eb	     0xf8573ffffff	                           jne 0x4000164	        95	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_4
0x40001f1	          0x4c89fe	                            mov rsi, r15	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40001f4	      0xbf00000000	                              mov edi, 0	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40001f9	      0xe800000000	                          call 0x40001fe	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x40001fe	          0x418b16	                    mov edx, dword [r14]	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000201	      0xe95effffff	                           jmp 0x4000164	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000206	      0xbf00000000	                              mov edi, 0	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x400020b	      0xe850feffff	                       call sym._.part.1	        96	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	CALL_7
0x4000210	          0x4889c7	                            mov rdi, rax	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000213	            0x31c0	                            xor eax, eax	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
0x4000215	      0xe800000000	                          call 0x400021a	        88	add.c	ELSE_1	FUNCTION_3	FOR_1	SWITCH_1	IF_1	CALL_6
