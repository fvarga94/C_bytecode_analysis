dwim_log	SWITCH,0:FOR,1:WHILE,0:ELSE,2:DO,0:IF,5:functions,0:CALL,9	229
0x4005500	            0x4157	                                push r15	       580	refs.c	FUNCTION_36
0x4005502	            0x4156	                                push r14	       580	refs.c	FUNCTION_36
0x4005504	            0x4155	                                push r13	       580	refs.c	FUNCTION_36
0x4005506	            0x4154	                                push r12	       580	refs.c	FUNCTION_36
0x4005508	          0x4189f4	                           mov r12d, esi	       580	refs.c	FUNCTION_36
0x400550b	              0x55	                                push rbp	       580	refs.c	FUNCTION_36
0x400550c	              0x53	                                push rbx	       580	refs.c	FUNCTION_36
0x400550d	          0x4989fd	                            mov r13, rdi	       580	refs.c	FUNCTION_36
0x4005510	        0x4883ec78	                           sub rsp, 0x78	       580	refs.c	FUNCTION_36
0x4005514	      0x4889542410	             mov qword [rsp + 0x10], rdx	       580	refs.c	FUNCTION_36
0x4005519	      0x488d542430	                   lea rdx, [rsp + 0x30]	       527	refs.c	FUNCTION_33	CALL_1
0x400551e	      0x48894c2408	                mov qword [rsp + 8], rcx	       580	refs.c	FUNCTION_36
0x4005523	            0x31c9	                            xor ecx, ecx	       527	refs.c	FUNCTION_33	CALL_1
0x4005525	    0x48c744243000	               mov qword [rsp + 0x30], 0	       526	refs.c	FUNCTION_33
0x400552e	    0x48c744243800	               mov qword [rsp + 0x38], 0	       526	refs.c	FUNCTION_33
0x4005537	    0x64488b042528	                mov rax, qword fs:[0x28]	       580	refs.c	FUNCTION_36
0x4005540	      0x4889442468	             mov qword [rsp + 0x68], rax	       580	refs.c	FUNCTION_36
0x4005545	            0x31c0	                            xor eax, eax	       580	refs.c	FUNCTION_36
0x4005547	    0x48c744244000	               mov qword [rsp + 0x40], 0	       526	refs.c	FUNCTION_33
0x4005550	      0xe800000000	                          call 0x4005555	       527	refs.c	FUNCTION_33	CALL_1
0x4005555	          0x4439e0	                           cmp eax, r12d	       529	refs.c	FUNCTION_33	IF_1
0x4005558	    0x48c744241800	               mov qword [rsp + 0x18], 0	       536	refs.c	FUNCTION_33
0x4005561	            0x751c	                           jne 0x400557f	       529	refs.c	FUNCTION_33	IF_1
0x4005563	      0x488d742428	                   lea rsi, [rsp + 0x28]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4005568	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400556d	      0xe800000000	                          call 0x4005572	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4005572	      0x448b642428	           mov r12d, dword [rsp + 0x28] 	       532	refs.c	FUNCTION_33	IF_1
0x4005577	          0x4989c5	                            mov r13, rax	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400557a	      0x4889442418	             mov qword [rsp + 0x18], rax	       533	refs.c	FUNCTION_33	IF_1
0x400557f	      0x488b442408	                mov rax, qword [rsp + 8]	       586	refs.c	FUNCTION_36
0x4005584	    0x48c744243000	               mov qword [rsp + 0x30], 0	       584	refs.c	FUNCTION_36
0x400558d	    0x48c744243800	               mov qword [rsp + 0x38], 0	       584	refs.c	FUNCTION_36
0x4005596	    0x48c744244000	               mov qword [rsp + 0x40], 0	       584	refs.c	FUNCTION_36
0x400559f	    0x48c700000000	                      mov qword [rax], 0	       586	refs.c	FUNCTION_36
0x40055a6	    0x488b35000000	            mov rsi, qword [0x040055ad] 	       587	refs.c	FUNCTION_36	FOR_1
0x40055ad	          0x4885f6	                           test rsi, rsi	       587	refs.c	FUNCTION_36	FOR_1
0x40055b0	     0xf84ed020000	                            je 0x40058a3	       587	refs.c	FUNCTION_36	FOR_1
0x40055b6	      0xb800000000	                              mov eax, 0	       587	refs.c	FUNCTION_36	FOR_1
0x40055bb	            0x31ed	                            xor ebp, ebp	       587	refs.c	FUNCTION_36	FOR_1
0x40055bd	      0xbb00000000	                              mov ebx, 0	       587	refs.c	FUNCTION_36	FOR_1
0x40055c2	            0xeb3b	                           jmp 0x40055ff	       587	refs.c	FUNCTION_36	FOR_1
0x40055c4	         0xf1f4000	                         nop dword [rax]	       587	refs.c	FUNCTION_36	FOR_1
0x40055c8	            0x85ed	                           test ebp, ebp	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40055ca	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	       598	refs.c	FUNCTION_36	FOR_1	IF_2
0x40055cf	        0x448d7d01	                     lea r15d, [rbp + 1]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40055d3	     0xf8407010000	                            je 0x40056e0	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40055d9	    0x8b0500000000	            mov eax, dword [0x040055df] 	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40055df	          0x4489fd	                           mov ebp, r15d	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40055e2	            0x85c0	                           test eax, eax	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40055e4	     0xf8436010000	                            je 0x4005720	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x40055ea	        0x4883c308	                              add rbx, 8	       587	refs.c	FUNCTION_36	FOR_1
0x40055ee	          0x488b33	                    mov rsi, qword [rbx]	       587	refs.c	FUNCTION_36	FOR_1
0x40055f1	          0x4885f6	                           test rsi, rsi	       587	refs.c	FUNCTION_36	FOR_1
0x40055f4	     0xf8426010000	                            je 0x4005720	       587	refs.c	FUNCTION_36	FOR_1
0x40055fa	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       587	refs.c	FUNCTION_36	FOR_1
0x40055ff	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_127	IF_2
0x4005605	    0x48c744243800	               mov qword [rsp + 0x38], 0	       164	strbuf.h	FUNCTION_127
0x400560e	     0xf849c010000	                            je 0x40057b0	       165	strbuf.h	FUNCTION_127	IF_2
0x4005614	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_127	IF_2
0x4005617	          0x488b33	                    mov rsi, qword [rbx]	       166	strbuf.h	FUNCTION_127	IF_2
0x400561a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x400561f	            0x31c0	                            xor eax, eax	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4005621	          0x4c89e9	                            mov rcx, r13	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4005624	          0x4489e2	                           mov edx, r12d	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x4005627	      0xe800000000	                          call 0x400562c	       592	refs.c	FUNCTION_36	FOR_1	CALL_2
0x400562c	    0x4c8b3d000000	            mov r15, qword [0x04005633] 	      1574	refs.c	FUNCTION_83	CALL_2
0x4005633	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	       593	refs.c	FUNCTION_36	FOR_1	CALL_3
0x4005638	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x400563c	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x400563f	     0xf841b010000	                            je 0x4005760	      1669	refs.c	FUNCTION_89	IF_1
0x4005645	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      1574	refs.c	FUNCTION_83	CALL_2
0x400564a	          0x4531c0	                            xor r8d, r8d	      1574	refs.c	FUNCTION_83	CALL_2
0x400564d	          0x4c89f6	                            mov rsi, r14	      1574	refs.c	FUNCTION_83	CALL_2
0x4005650	      0xba01000000	                              mov edx, 1	      1574	refs.c	FUNCTION_83	CALL_2
0x4005655	      0xe800000000	                          call 0x400565a	      1574	refs.c	FUNCTION_83	CALL_2
0x400565a	          0x4885c0	                           test rax, rax	       595	refs.c	FUNCTION_36	FOR_1	IF_1
0x400565d	          0x4989c6	                            mov r14, rax	      1574	refs.c	FUNCTION_83	CALL_2
0x4005660	            0x7488	                            je 0x40055ea	       595	refs.c	FUNCTION_36	FOR_1	IF_1
0x4005662	    0x4c8b3d000000	            mov r15, qword [0x04005669] 	      2064	refs.c	FUNCTION_111	CALL_2
0x4005669	      0x4c8b442440	              mov r8, qword [rsp + 0x40]	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x400566e	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4005672	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4005675	     0xf8465010000	                            je 0x40057e0	      1669	refs.c	FUNCTION_89	IF_1
0x400567b	          0x488b07	                    mov rax, qword [rdi]	      2059	refs.c	FUNCTION_110	CALL_1
0x400567e	          0x4c89c6	                             mov rsi, r8	      2059	refs.c	FUNCTION_110	CALL_1
0x4005681	    0xff9090000000	                 call qword [rax + 0x90]	      2059	refs.c	FUNCTION_110	CALL_1
0x4005687	            0x85c0	                           test eax, eax	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x4005689	     0xf8539ffffff	                           jne 0x40055c8	       597	refs.c	FUNCTION_36	FOR_1	IF_2	CALL_4
0x400568f	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4005694	          0x4c89f7	                            mov rdi, r14	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x4005697	      0xe800000000	                          call 0x400569c	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x400569c	            0x85c0	                           test eax, eax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x400569e	     0xf8446ffffff	                            je 0x40055ea	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x40056a4	    0x4c8b3d000000	            mov r15, qword [0x040056ab] 	      2064	refs.c	FUNCTION_111	CALL_2
0x40056ab	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40056af	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x40056b2	     0xf848f010000	                            je 0x4005847	      1669	refs.c	FUNCTION_89	IF_1
0x40056b8	          0x488b07	                    mov rax, qword [rdi]	      2059	refs.c	FUNCTION_110	CALL_1
0x40056bb	          0x4c89f6	                            mov rsi, r14	      2059	refs.c	FUNCTION_110	CALL_1
0x40056be	    0xff9090000000	                 call qword [rax + 0x90]	      2059	refs.c	FUNCTION_110	CALL_1
0x40056c4	            0x85c0	                           test eax, eax	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x40056c6	     0xf841effffff	                            je 0x40055ea	       599	refs.c	FUNCTION_36	FOR_1	ELSE_1	IF_3	CALL_5
0x40056cc	            0x85ed	                           test ebp, ebp	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40056ce	        0x448d7d01	                     lea r15d, [rbp + 1]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40056d2	     0xf8501ffffff	                           jne 0x40055d9	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40056d8	     0xf1f84000000	                   nop dword [rax + rax]	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40056e0	          0x4c89f7	                            mov rdi, r14	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_6
0x40056e3	          0x4489fd	                           mov ebp, r15d	       603	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4
0x40056e6	      0xe800000000	                          call 0x40056eb	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_6
0x40056eb	      0x488b542408	                mov rdx, qword [rsp + 8]	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_6
0x40056f0	          0x488902	                    mov qword [rdx], rax	       604	refs.c	FUNCTION_36	FOR_1	ELSE_2	IF_4	CALL_6
0x40056f3	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x40056f8	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_136	CALL_3
0x40056fd	          0x488902	                    mov qword [rdx], rax	        53	string3.h	FUNCTION_136	CALL_3
0x4005700	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_136	CALL_3
0x4005705	        0x48894208	                mov qword [rdx + 8], rax	        53	string3.h	FUNCTION_136	CALL_3
0x4005709	        0x8b442460	            mov eax, dword [rsp + 0x60] 	        53	string3.h	FUNCTION_136	CALL_3
0x400570d	          0x894210	             mov dword [rdx + 0x10], eax	        53	string3.h	FUNCTION_136	CALL_3
0x4005710	    0x8b0500000000	            mov eax, dword [0x04005716] 	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4005716	            0x85c0	                           test eax, eax	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4005718	     0xf85ccfeffff	                           jne 0x40055ea	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x400571e	            0x6690	                                     nop	       607	refs.c	FUNCTION_36	FOR_1	IF_5
0x4005720	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       610	refs.c	FUNCTION_36	CALL_8
0x4005725	      0xe800000000	                          call 0x400572a	       610	refs.c	FUNCTION_36	CALL_8
0x400572a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       611	refs.c	FUNCTION_36	CALL_9
0x400572f	      0xe800000000	                          call 0x4005734	       611	refs.c	FUNCTION_36	CALL_9
0x4005734	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	       613	refs.c	FUNCTION_36
0x4005739	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       613	refs.c	FUNCTION_36
0x4005742	            0x89e8	                            mov eax, ebp	       613	refs.c	FUNCTION_36
0x4005744	     0xf8560010000	                           jne 0x40058aa	       613	refs.c	FUNCTION_36
0x400574a	        0x4883c478	                           add rsp, 0x78	       613	refs.c	FUNCTION_36
0x400574e	              0x5b	                                 pop rbx	       613	refs.c	FUNCTION_36
0x400574f	              0x5d	                                 pop rbp	       613	refs.c	FUNCTION_36
0x4005750	            0x415c	                                 pop r12	       613	refs.c	FUNCTION_36
0x4005752	            0x415d	                                 pop r13	       613	refs.c	FUNCTION_36
0x4005754	            0x415e	                                 pop r14	       613	refs.c	FUNCTION_36
0x4005756	            0x415f	                                 pop r15	       613	refs.c	FUNCTION_36
0x4005758	              0xc3	                                     ret	       613	refs.c	FUNCTION_36
0x4005759	     0xf1f80000000	                         nop dword [rax]	       613	refs.c	FUNCTION_36
0x4005760	          0x4d8b07	                     mov r8, qword [r15]	      1672	refs.c	FUNCTION_89	IF_2
0x4005763	          0x4d85c0	                             test r8, r8	      1672	refs.c	FUNCTION_89	IF_2
0x4005766	     0xf8443010000	                            je 0x40058af	      1672	refs.c	FUNCTION_89	IF_2
0x400576c	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4005771	      0xba00000000	                              mov edx, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4005776	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4005780	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005784	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005789	          0x4889d7	                            mov rdi, rdx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400578c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400578e	            0x7438	                            je 0x40057c8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005790	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4005793	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4005796	            0x75e8	                           jne 0x4005780	        27	refs.c	FUNCTION_1	FOR_1
0x4005798	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400579d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40057a2	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x40057a4	      0xe800000000	                          call 0x40057a9	      1661	refs.c	FUNCTION_88	CALL_2
0x40057a9	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x40057b0	    0x803d00000000	                cmp byte [0x040057b7], 0	       168	strbuf.h	FUNCTION_127	CALL_2
0x40057b7	     0xf845dfeffff	                            je 0x400561a	       168	strbuf.h	FUNCTION_127	CALL_2
0x40057bd	      0xe800000000	                          call 0x40057c2	       168	strbuf.h	FUNCTION_127	CALL_2
0x40057c2	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_127	CALL_2
0x40057c8	          0x4c89c7	                             mov rdi, r8	      1663	refs.c	FUNCTION_88	CALL_3
0x40057cb	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x40057d0	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x40057d3	        0x49894718	             mov qword [r15 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x40057d7	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x40057da	      0xe966feffff	                           jmp 0x4005645	      1676	refs.c	FUNCTION_89
0x40057df	              0x90	                                     nop	      1676	refs.c	FUNCTION_89
0x40057e0	          0x4d8b0f	                     mov r9, qword [r15]	      1672	refs.c	FUNCTION_89	IF_2
0x40057e3	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x40057e6	     0xf84c3000000	                            je 0x40058af	      1672	refs.c	FUNCTION_89	IF_2
0x40057ec	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40057f1	      0xba00000000	                              mov edx, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40057f6	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40057fb	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40057ff	          0x4889d7	                            mov rdi, rdx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005802	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005804	            0x7422	                            je 0x4005828	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005806	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005810	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4005813	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4005816	            0x7480	                            je 0x4005798	        27	refs.c	FUNCTION_1	FOR_1
0x4005818	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400581c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005821	          0x4889d7	                            mov rdi, rdx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005824	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005826	            0x75e8	                           jne 0x4005810	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005828	        0x4c890424	                     mov qword [rsp], r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400582c	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x400582f	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4005834	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4005837	        0x4c8b0424	                     mov r8, qword [rsp]	      1663	refs.c	FUNCTION_88	CALL_3
0x400583b	        0x49894718	             mov qword [r15 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x400583f	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4005842	      0xe934feffff	                           jmp 0x400567b	      1676	refs.c	FUNCTION_89
0x4005847	          0x4d8b07	                     mov r8, qword [r15]	      1672	refs.c	FUNCTION_89	IF_2
0x400584a	          0x4d85c0	                             test r8, r8	      1672	refs.c	FUNCTION_89	IF_2
0x400584d	            0x7460	                            je 0x40058af	      1672	refs.c	FUNCTION_89	IF_2
0x400584f	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4005854	      0xba00000000	                              mov edx, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4005859	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400585e	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005862	          0x4889d7	                            mov rdi, rdx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005865	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005867	            0x7423	                            je 0x400588c	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005869	     0xf1f80000000	                         nop dword [rax]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005870	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4005873	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4005876	     0xf841cffffff	                            je 0x4005798	        27	refs.c	FUNCTION_1	FOR_1
0x400587c	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005880	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005885	          0x4889d7	                            mov rdi, rdx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005888	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400588a	            0x75e4	                           jne 0x4005870	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400588c	          0x4c89c7	                             mov rdi, r8	      1663	refs.c	FUNCTION_88	CALL_3
0x400588f	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4005894	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4005897	        0x49894718	             mov qword [r15 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x400589b	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x400589e	      0xe915feffff	                           jmp 0x40056b8	      1676	refs.c	FUNCTION_89
0x40058a3	            0x31ed	                            xor ebp, ebp	       583	refs.c	FUNCTION_36
0x40058a5	      0xe976feffff	                           jmp 0x4005720	       583	refs.c	FUNCTION_36
0x40058aa	      0xe800000000	                          call 0x40058af	       613	refs.c	FUNCTION_36
0x40058af	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40058b4	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40058b9	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40058be	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40058c0	      0xe800000000	                          call 0x40058c5	      1673	refs.c	FUNCTION_89	IF_2
read_ref_at_ent	SWITCH,0:FOR,0:WHILE,0:ELSE,2:DO,0:IF,10:functions,0:CALL,14	155
0x4000120	            0x4157	                                push r15	       837	refs.c	FUNCTION_48
0x4000122	            0x4156	                                push r14	       837	refs.c	FUNCTION_48
0x4000124	            0x4155	                                push r13	       837	refs.c	FUNCTION_48
0x4000126	            0x4154	                                push r12	       837	refs.c	FUNCTION_48
0x4000128	              0x55	                                push rbp	       837	refs.c	FUNCTION_48
0x4000129	              0x53	                                push rbx	       837	refs.c	FUNCTION_48
0x400012a	        0x4883ec08	                              sub rsp, 8	       837	refs.c	FUNCTION_48
0x400012e	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       837	refs.c	FUNCTION_48
0x4000133	        0x83431401	               add dword [rbx + 0x14], 1	       840	refs.c	FUNCTION_48
0x4000137	        0x483b4b08	                cmp rcx, qword [rbx + 8]	       844	refs.c	FUNCTION_48	IF_1
0x400013b	        0x4489434c	             mov dword [rbx + 0x4c], r8d	       841	refs.c	FUNCTION_48
0x400013f	        0x48894b50	             mov qword [rbx + 0x50], rcx	       842	refs.c	FUNCTION_48
0x4000143	            0x760b	                           jbe 0x4000150	       844	refs.c	FUNCTION_48	IF_1
0x4000145	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       844	refs.c	FUNCTION_48	IF_1
0x4000148	            0x85c0	                           test eax, eax	       844	refs.c	FUNCTION_48	IF_1
0x400014a	     0xf8570010000	                           jne 0x40002c0	       844	refs.c	FUNCTION_48	IF_1
0x4000150	        0x4c8b7b58	            mov r15, qword [rbx + 0x58] 	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000154	          0x4589c6	                           mov r14d, r8d	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000157	          0x4989cd	                            mov r13, rcx	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x400015a	          0x4889f5	                            mov rbp, rsi	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x400015d	          0x4989fc	                            mov r12, rdi	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000160	          0x4d85ff	                           test r15, r15	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000163	            0x740b	                            je 0x4000170	       845	refs.c	FUNCTION_48	IF_1	IF_2
0x4000165	          0x4c89cf	                             mov rdi, r9	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4000168	      0xe800000000	                          call 0x400016d	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x400016d	          0x498907	                    mov qword [r15], rax	       846	refs.c	FUNCTION_48	IF_1	CALL_1
0x4000170	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x4000174	          0x4885c0	                           test rax, rax	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x4000177	            0x7403	                            je 0x400017c	       847	refs.c	FUNCTION_48	IF_1	IF_3
0x4000179	          0x4c8928	                    mov qword [rax], r13	       848	refs.c	FUNCTION_48	IF_1	IF_3
0x400017c	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000180	          0x4885c0	                           test rax, rax	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000183	            0x7403	                            je 0x4000188	       849	refs.c	FUNCTION_48	IF_1	IF_4
0x4000185	          0x448930	                   mov dword [rax], r14d	       850	refs.c	FUNCTION_48	IF_1	IF_4
0x4000188	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x400018c	          0x4885d2	                           test rdx, rdx	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x400018f	            0x7408	                            je 0x4000199	       851	refs.c	FUNCTION_48	IF_1	IF_5
0x4000191	          0x8b4314	            mov eax, dword [rbx + 0x14] 	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x4000194	          0x83e801	                              sub eax, 1	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x4000197	            0x8902	                    mov dword [rdx], eax	       852	refs.c	FUNCTION_48	IF_1	IF_5
0x4000199	        0x4c8d6b24	                   lea r13, [rbx + 0x24]	       990	cache.h	FUNCTION_158	CALL_1
0x400019d	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x40001a2	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x40001a7	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_155	CALL_1
0x40001aa	      0xe800000000	                          call 0x40001af	       975	cache.h	FUNCTION_155	CALL_1
0x40001af	            0x85c0	                           test eax, eax	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x40001b1	     0xf85a1000000	                           jne 0x4000258	       857	refs.c	FUNCTION_48	IF_1	IF_6	CALL_2
0x40001b7	        0x488b4308	                mov rax, qword [rbx + 8]	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40001bb	        0x48394350	            cmp qword [rbx + 0x50], rax 	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40001bf	     0xf8443010000	                            je 0x4000308	       863	refs.c	FUNCTION_48	IF_1	ELSE_1	IF_8
0x40001c5	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       975	cache.h	FUNCTION_155	CALL_1
0x40001c9	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x40001ce	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_155	CALL_1
0x40001d1	      0xe800000000	                          call 0x40001d6	       975	cache.h	FUNCTION_155	CALL_1
0x40001d6	            0x85c0	                           test eax, eax	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40001d8	            0x754e	                           jne 0x4000228	       865	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_8
0x40001da	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_136	CALL_3
0x40001de	        0x48894324	             mov qword [rbx + 0x24], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40001e2	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x40001e7	        0x49894508	                mov qword [r13 + 8], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40001eb	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x40001f0	        0x41894510	             mov dword [r13 + 0x10], eax	        53	string3.h	FUNCTION_136	CALL_3
0x40001f4	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_136	CALL_3
0x40001f8	      0xb801000000	                              mov eax, 1	       872	refs.c	FUNCTION_48	IF_1
0x40001fd	        0x48895338	             mov qword [rbx + 0x38], rdx	        53	string3.h	FUNCTION_136	CALL_3
0x4000201	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x4000205	        0x48895340	             mov qword [rbx + 0x40], rdx	        53	string3.h	FUNCTION_136	CALL_3
0x4000209	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x400020c	    0xc74320010000	               mov dword [rbx + 0x20], 1	       871	refs.c	FUNCTION_48	IF_1
0x4000213	          0x895348	             mov dword [rbx + 0x48], edx	        53	string3.h	FUNCTION_136	CALL_3
0x4000216	        0x4883c408	                              add rsp, 8	       879	refs.c	FUNCTION_48
0x400021a	              0x5b	                                 pop rbx	       879	refs.c	FUNCTION_48
0x400021b	              0x5d	                                 pop rbp	       879	refs.c	FUNCTION_48
0x400021c	            0x415c	                                 pop r12	       879	refs.c	FUNCTION_48
0x400021e	            0x415d	                                 pop r13	       879	refs.c	FUNCTION_48
0x4000220	            0x415e	                                 pop r14	       879	refs.c	FUNCTION_48
0x4000222	            0x415f	                                 pop r15	       879	refs.c	FUNCTION_48
0x4000224	              0xc3	                                     ret	       879	refs.c	FUNCTION_48
0x4000225	           0xf1f00	                         nop dword [rax]	       879	refs.c	FUNCTION_48
0x4000228	      0xbf05000000	                              mov edi, 5	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x400022d	      0xe800000000	                          call 0x4000232	       868	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9
0x4000232	          0x8b734c	            mov esi, dword [rbx + 0x4c] 	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000235	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000239	          0x4889c2	                            mov rdx, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x400023c	      0xe800000000	                          call 0x4000241	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000241	          0x488b33	                    mov rsi, qword [rbx]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000244	          0x4889c2	                            mov rdx, rax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000247	      0xbf00000000	                              mov edi, 0	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x400024c	            0x31c0	                            xor eax, eax	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x400024e	      0xe800000000	                          call 0x4000253	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000253	            0xeb85	                           jmp 0x40001da	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000255	           0xf1f00	                         nop dword [rax]	       866	refs.c	FUNCTION_48	IF_1	ELSE_2	IF_9	CALL_9
0x4000258	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_136	CALL_3
0x400025c	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_136	CALL_3
0x4000260	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_155	CALL_1
0x4000263	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_155	CALL_1
0x4000266	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_136	CALL_3
0x4000269	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x400026d	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_136	CALL_3
0x4000271	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x4000274	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_136	CALL_3
0x4000277	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x400027c	      0xe800000000	                          call 0x4000281	       975	cache.h	FUNCTION_155	CALL_1
0x4000281	            0x85c0	                           test eax, eax	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4000283	     0xf8451ffffff	                            je 0x40001da	       859	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_4
0x4000289	      0xbf05000000	                              mov edi, 5	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_6
0x400028e	      0xe800000000	                          call 0x4000293	       861	refs.c	FUNCTION_48	IF_1	IF_6	CALL_6
0x4000293	          0x8b734c	            mov esi, dword [rbx + 0x4c] 	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x4000296	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400029a	          0x4889c2	                            mov rdx, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x400029d	      0xe800000000	                          call 0x40002a2	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40002a2	          0x488b33	                    mov rsi, qword [rbx]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40002a5	          0x4889c2	                            mov rdx, rax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40002a8	      0xbf00000000	                              mov edi, 0	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40002ad	            0x31c0	                            xor eax, eax	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40002af	      0xe800000000	                          call 0x40002b4	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40002b4	      0xe921ffffff	                           jmp 0x40001da	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40002b9	     0xf1f80000000	                         nop dword [rax]	       860	refs.c	FUNCTION_48	IF_1	IF_6	IF_7	CALL_5
0x40002c0	          0x488b0f	                    mov rcx, qword [rdi]	        53	string3.h	FUNCTION_136	CALL_3
0x40002c3	            0x85c0	                           test eax, eax	       876	refs.c	FUNCTION_48	IF_10
0x40002c5	        0x48894b24	             mov qword [rbx + 0x24], rcx	        53	string3.h	FUNCTION_136	CALL_3
0x40002c9	        0x488b4f08	                mov rcx, qword [rdi + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x40002cd	        0x48894b2c	             mov qword [rbx + 0x2c], rcx	        53	string3.h	FUNCTION_136	CALL_3
0x40002d1	          0x8b4f10	            mov ecx, dword [rdi + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x40002d4	          0x894b34	             mov dword [rbx + 0x34], ecx	        53	string3.h	FUNCTION_136	CALL_3
0x40002d7	          0x488b0e	                    mov rcx, qword [rsi]	        53	string3.h	FUNCTION_136	CALL_3
0x40002da	        0x48894b38	             mov qword [rbx + 0x38], rcx	        53	string3.h	FUNCTION_136	CALL_3
0x40002de	        0x488b4e08	                mov rcx, qword [rsi + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x40002e2	        0x48894b40	             mov qword [rbx + 0x40], rcx	        53	string3.h	FUNCTION_136	CALL_3
0x40002e6	          0x8b4e10	            mov ecx, dword [rsi + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x40002e9	          0x894b48	             mov dword [rbx + 0x48], ecx	        53	string3.h	FUNCTION_136	CALL_3
0x40002ec	            0x7e42	                           jle 0x4000330	       876	refs.c	FUNCTION_48	IF_10
0x40002ee	          0x83e801	                              sub eax, 1	       877	refs.c	FUNCTION_48	IF_10
0x40002f1	          0x894310	             mov dword [rbx + 0x10], eax	       877	refs.c	FUNCTION_48	IF_10
0x40002f4	        0x4883c408	                              add rsp, 8	       879	refs.c	FUNCTION_48
0x40002f8	            0x31c0	                            xor eax, eax	       878	refs.c	FUNCTION_48
0x40002fa	              0x5b	                                 pop rbx	       879	refs.c	FUNCTION_48
0x40002fb	              0x5d	                                 pop rbp	       879	refs.c	FUNCTION_48
0x40002fc	            0x415c	                                 pop r12	       879	refs.c	FUNCTION_48
0x40002fe	            0x415d	                                 pop r13	       879	refs.c	FUNCTION_48
0x4000300	            0x415e	                                 pop r14	       879	refs.c	FUNCTION_48
0x4000302	            0x415f	                                 pop r15	       879	refs.c	FUNCTION_48
0x4000304	              0xc3	                                     ret	       879	refs.c	FUNCTION_48
0x4000305	           0xf1f00	                         nop dword [rax]	       879	refs.c	FUNCTION_48
0x4000308	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_136	CALL_3
0x400030c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_136	CALL_3
0x4000310	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_136	CALL_3
0x4000313	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x4000317	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_136	CALL_3
0x400031b	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x400031e	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_136	CALL_3
0x4000321	      0xe9b4feffff	                           jmp 0x40001da	        53	string3.h	FUNCTION_136	CALL_3
0x4000326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        53	string3.h	FUNCTION_136	CALL_3
0x4000330	            0x31c0	                            xor eax, eax	       878	refs.c	FUNCTION_48
0x4000332	      0xe9dffeffff	                           jmp 0x4000216	       878	refs.c	FUNCTION_48
ref_storage_backend_exists	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,1	25
0x4000480	              0x55	                                push rbp	        34	refs.c	FUNCTION_2
0x4000481	              0x53	                                push rbx	        34	refs.c	FUNCTION_2
0x4000482	          0x4889fd	                            mov rbp, rdi	        34	refs.c	FUNCTION_2
0x4000485	      0xbb00000000	                              mov ebx, 0	        27	refs.c	FUNCTION_1	FOR_1
0x400048a	        0x4883ec08	                              sub rsp, 8	        34	refs.c	FUNCTION_2
0x400048e	            0x6690	                                     nop	        34	refs.c	FUNCTION_2
0x4000490	        0x488b7b08	                mov rdi, qword [rbx + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000494	          0x4889ee	                            mov rsi, rbp	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000497	      0xe800000000	                          call 0x400049c	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400049c	            0x85c0	                           test eax, eax	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400049e	            0x7418	                            je 0x40004b8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40004a0	          0x488b1b	                    mov rbx, qword [rbx]	        27	refs.c	FUNCTION_1	FOR_1
0x40004a3	          0x4885db	                           test rbx, rbx	        27	refs.c	FUNCTION_1	FOR_1
0x40004a6	            0x75e8	                           jne 0x4000490	        27	refs.c	FUNCTION_1	FOR_1
0x40004a8	        0x4883c408	                              add rsp, 8	        36	refs.c	FUNCTION_2
0x40004ac	            0x31c0	                            xor eax, eax	        27	refs.c	FUNCTION_1	FOR_1
0x40004ae	              0x5b	                                 pop rbx	        36	refs.c	FUNCTION_2
0x40004af	              0x5d	                                 pop rbp	        36	refs.c	FUNCTION_2
0x40004b0	              0xc3	                                     ret	        36	refs.c	FUNCTION_2
0x40004b1	     0xf1f80000000	                         nop dword [rax]	        36	refs.c	FUNCTION_2
0x40004b8	        0x4883c408	                              add rsp, 8	        36	refs.c	FUNCTION_2
0x40004bc	      0xb801000000	                              mov eax, 1	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40004c1	              0x5b	                                 pop rbx	        36	refs.c	FUNCTION_2
0x40004c2	              0x5d	                                 pop rbp	        36	refs.c	FUNCTION_2
0x40004c3	              0xc3	                                     ret	        36	refs.c	FUNCTION_2
is_branch	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,1	18
0x40028d0	          0x4889fa	                            mov rdx, rdi	       812	refs.c	FUNCTION_47
0x40028d3	      0xb905000000	                              mov ecx, 5	       813	refs.c	FUNCTION_47	CALL_1
0x40028d8	      0xbf00000000	                              mov edi, 0	       813	refs.c	FUNCTION_47	CALL_1
0x40028dd	          0x4889d6	                            mov rsi, rdx	       813	refs.c	FUNCTION_47	CALL_1
0x40028e0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       813	refs.c	FUNCTION_47	CALL_1
0x40028e2	            0x750c	                           jne 0x40028f0	       813	refs.c	FUNCTION_47	CALL_1
0x40028e4	      0xb801000000	                              mov eax, 1	       813	refs.c	FUNCTION_47	CALL_1
0x40028e9	              0xc3	                                     ret	       813	refs.c	FUNCTION_47	CALL_1
0x40028ea	    0x660f1f440000	                    nop word [rax + rax]	       813	refs.c	FUNCTION_47	CALL_1
0x40028f0	        0x4883ec08	                              sub rsp, 8	       812	refs.c	FUNCTION_47
0x40028f4	          0x4889d7	                            mov rdi, rdx	       812	refs.c	FUNCTION_47
0x40028f7	      0xbe00000000	                              mov esi, 0	       813	refs.c	FUNCTION_47	CALL_1
0x40028fc	      0xe800000000	                          call 0x4002901	       813	refs.c	FUNCTION_47	CALL_1
0x4002901	            0x85c0	                           test eax, eax	       813	refs.c	FUNCTION_47	CALL_1
0x4002903	           0xf95c0	                                setne al	       813	refs.c	FUNCTION_47	CALL_1
0x4002906	        0x4883c408	                              add rsp, 8	       814	refs.c	FUNCTION_47
0x400290a	           0xfb6c0	                           movzx eax, al	       813	refs.c	FUNCTION_47	CALL_1
0x400290d	              0xc3	                                     ret	       814	refs.c	FUNCTION_47
read_ref_at_ent_oldest	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,5:functions,0:CALL,4	60
0x4000060	            0x4157	                                push r15	       884	refs.c	FUNCTION_49
0x4000062	            0x4156	                                push r14	       884	refs.c	FUNCTION_49
0x4000064	          0x4989cf	                            mov r15, rcx	       884	refs.c	FUNCTION_49
0x4000067	            0x4155	                                push r13	       884	refs.c	FUNCTION_49
0x4000069	            0x4154	                                push r12	       884	refs.c	FUNCTION_49
0x400006b	          0x4589c6	                           mov r14d, r8d	       884	refs.c	FUNCTION_49
0x400006e	              0x55	                                push rbp	       884	refs.c	FUNCTION_49
0x400006f	              0x53	                                push rbx	       884	refs.c	FUNCTION_49
0x4000070	          0x4889fd	                            mov rbp, rdi	       884	refs.c	FUNCTION_49
0x4000073	          0x4989f4	                            mov r12, rsi	       884	refs.c	FUNCTION_49
0x4000076	        0x4883ec08	                              sub rsp, 8	       884	refs.c	FUNCTION_49
0x400007a	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       884	refs.c	FUNCTION_49
0x400007f	        0x4c8b6b58	            mov r13, qword [rbx + 0x58] 	       887	refs.c	FUNCTION_49	IF_1
0x4000083	          0x4d85ed	                           test r13, r13	       887	refs.c	FUNCTION_49	IF_1
0x4000086	            0x740c	                            je 0x4000094	       887	refs.c	FUNCTION_49	IF_1
0x4000088	          0x4c89cf	                             mov rdi, r9	       888	refs.c	FUNCTION_49	CALL_1
0x400008b	      0xe800000000	                          call 0x4000090	       888	refs.c	FUNCTION_49	CALL_1
0x4000090	        0x49894500	                    mov qword [r13], rax	       888	refs.c	FUNCTION_49	CALL_1
0x4000094	        0x488b4360	            mov rax, qword [rbx + 0x60] 	       889	refs.c	FUNCTION_49	IF_2
0x4000098	          0x4885c0	                           test rax, rax	       889	refs.c	FUNCTION_49	IF_2
0x400009b	            0x7403	                            je 0x40000a0	       889	refs.c	FUNCTION_49	IF_2
0x400009d	          0x4c8938	                    mov qword [rax], r15	       890	refs.c	FUNCTION_49	IF_2
0x40000a0	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       891	refs.c	FUNCTION_49	IF_3
0x40000a4	          0x4885c0	                           test rax, rax	       891	refs.c	FUNCTION_49	IF_3
0x40000a7	            0x7403	                            je 0x40000ac	       891	refs.c	FUNCTION_49	IF_3
0x40000a9	          0x448930	                   mov dword [rax], r14d	       892	refs.c	FUNCTION_49	IF_3
0x40000ac	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       893	refs.c	FUNCTION_49	IF_4
0x40000b0	          0x4885c0	                           test rax, rax	       893	refs.c	FUNCTION_49	IF_4
0x40000b3	            0x7405	                            je 0x40000ba	       893	refs.c	FUNCTION_49	IF_4
0x40000b5	          0x8b5314	            mov edx, dword [rbx + 0x14] 	       894	refs.c	FUNCTION_49	IF_4
0x40000b8	            0x8910	                    mov dword [rax], edx	       894	refs.c	FUNCTION_49	IF_4
0x40000ba	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_136	CALL_3
0x40000be	        0x488b5500	                    mov rdx, qword [rbp]	        53	string3.h	FUNCTION_136	CALL_3
0x40000c2	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x40000c7	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_136	CALL_3
0x40000ca	        0x488b5508	                mov rdx, qword [rbp + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x40000ce	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_136	CALL_3
0x40000d2	          0x8b5510	            mov edx, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x40000d5	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_136	CALL_3
0x40000d8	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       990	cache.h	FUNCTION_158	CALL_1
0x40000dc	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x40000e1	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_155	CALL_1
0x40000e4	      0xe800000000	                          call 0x40000e9	       975	cache.h	FUNCTION_155	CALL_1
0x40000e9	            0x85c0	                           test eax, eax	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x40000eb	            0x7518	                           jne 0x4000105	       896	refs.c	FUNCTION_49	IF_5	CALL_3
0x40000ed	        0x498b0424	                    mov rax, qword [r12]	        53	string3.h	FUNCTION_136	CALL_3
0x40000f1	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40000f4	      0x498b442408	                mov rax, qword [r12 + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x40000f9	        0x48894308	                mov qword [rbx + 8], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40000fd	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x4000102	          0x894310	             mov dword [rbx + 0x10], eax	        53	string3.h	FUNCTION_136	CALL_3
0x4000105	        0x4883c408	                              add rsp, 8	       900	refs.c	FUNCTION_49
0x4000109	      0xb801000000	                              mov eax, 1	       900	refs.c	FUNCTION_49
0x400010e	              0x5b	                                 pop rbx	       900	refs.c	FUNCTION_49
0x400010f	              0x5d	                                 pop rbp	       900	refs.c	FUNCTION_49
0x4000110	            0x415c	                                 pop r12	       900	refs.c	FUNCTION_49
0x4000112	            0x415d	                                 pop r13	       900	refs.c	FUNCTION_49
0x4000114	            0x415e	                                 pop r14	       900	refs.c	FUNCTION_49
0x4000116	            0x415f	                                 pop r15	       900	refs.c	FUNCTION_49
0x4000118	              0xc3	                                     ret	       900	refs.c	FUNCTION_49
ref_transaction_abort	SWITCH,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,4	58
0x4006800	            0x4154	                                push r12	      1875	refs.c	FUNCTION_101
0x4006802	              0x55	                                push rbp	      1875	refs.c	FUNCTION_101
0x4006803	              0x53	                                push rbx	      1875	refs.c	FUNCTION_101
0x4006804	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4006807	          0x4889fb	                            mov rbx, rdi	      1875	refs.c	FUNCTION_101
0x400680a	          0x83f801	                              cmp eax, 1	      1879	refs.c	FUNCTION_101	SWITCH_1
0x400680d	            0x7419	                            je 0x4006828	      1879	refs.c	FUNCTION_101	SWITCH_1
0x400680f	            0x7247	                            jb 0x4006858	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4006811	          0x83f802	                              cmp eax, 2	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4006814	            0x7533	                           jne 0x4006849	      1879	refs.c	FUNCTION_101	SWITCH_1
0x4006816	      0xbf00000000	                              mov edi, 0	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x400681b	            0x31c0	                            xor eax, eax	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x400681d	      0xe800000000	                          call 0x4006822	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4006822	    0x660f1f440000	                    nop word [rax + rax]	      1887	refs.c	FUNCTION_101	SWITCH_1	CALL_2
0x4006828	          0x488b3f	                    mov rdi, qword [rdi]	      1876	refs.c	FUNCTION_101
0x400682b	          0x4889f2	                            mov rdx, rsi	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x400682e	          0x4889de	                            mov rsi, rbx	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4006831	          0x488b07	                    mov rax, qword [rdi]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4006834	          0xff5030	                 call qword [rax + 0x30]	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x4006837	          0x4189c4	                           mov r12d, eax	      1884	refs.c	FUNCTION_101	SWITCH_1	CALL_1
0x400683a	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       957	refs.c	FUNCTION_53	SWITCH_1
0x400683d	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006840	            0x746e	                            je 0x40068b0	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006842	            0x7217	                            jb 0x400685b	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006844	          0x83f802	                              cmp eax, 2	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006847	            0x7412	                            je 0x400685b	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006849	      0xbf00000000	                              mov edi, 0	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x400684e	            0x31c0	                            xor eax, eax	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4006850	      0xe800000000	                          call 0x4006855	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4006855	           0xf1f00	                         nop dword [rax]	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4006858	          0x4531e4	                          xor r12d, r12d	      1877	refs.c	FUNCTION_101
0x400685b	            0x31ed	                            xor ebp, ebp	       970	refs.c	FUNCTION_53	FOR_1
0x400685d	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       970	refs.c	FUNCTION_53	FOR_1
0x4006862	            0x742c	                            je 0x4006890	       970	refs.c	FUNCTION_53	FOR_1
0x4006864	         0xf1f4000	                         nop dword [rax]	       970	refs.c	FUNCTION_53	FOR_1
0x4006868	        0x488b4308	                mov rax, qword [rbx + 8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x400686c	        0x488b04e8	            mov rax, qword [rax + rbp*8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006870	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006874	      0xe800000000	                          call 0x4006879	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006879	        0x488b4308	                mov rax, qword [rbx + 8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x400687d	        0x488b3ce8	            mov rdi, qword [rax + rbp*8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4006881	        0x4883c501	                              add rbp, 1	       970	refs.c	FUNCTION_53	FOR_1
0x4006885	      0xe800000000	                          call 0x400688a	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x400688a	        0x483b6b18	            cmp rbp, qword [rbx + 0x18] 	       970	refs.c	FUNCTION_53	FOR_1
0x400688e	            0x72d8	                            jb 0x4006868	       970	refs.c	FUNCTION_53	FOR_1
0x4006890	        0x488b7b08	                mov rdi, qword [rbx + 8]	       974	refs.c	FUNCTION_53	CALL_5
0x4006894	      0xe800000000	                          call 0x4006899	       974	refs.c	FUNCTION_53	CALL_5
0x4006899	          0x4889df	                            mov rdi, rbx	       975	refs.c	FUNCTION_53	CALL_6
0x400689c	      0xe800000000	                          call 0x40068a1	       975	refs.c	FUNCTION_53	CALL_6
0x40068a1	          0x4489e0	                           mov eax, r12d	      1896	refs.c	FUNCTION_101
0x40068a4	              0x5b	                                 pop rbx	      1896	refs.c	FUNCTION_101
0x40068a5	              0x5d	                                 pop rbp	      1896	refs.c	FUNCTION_101
0x40068a6	            0x415c	                                 pop r12	      1896	refs.c	FUNCTION_101
0x40068a8	              0xc3	                                     ret	      1896	refs.c	FUNCTION_101
0x40068a9	     0xf1f80000000	                         nop dword [rax]	      1896	refs.c	FUNCTION_101
0x40068b0	      0xbf00000000	                              mov edi, 0	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40068b5	            0x31c0	                            xor eax, eax	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40068b7	      0xe800000000	                          call 0x40068bc	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
warn_dangling_symref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,1	78
0x4000e70	              0x55	                                push rbp	       352	refs.c	FUNCTION_18
0x4000e71	              0x53	                                push rbx	       352	refs.c	FUNCTION_18
0x4000e72	        0x4883ec38	                           sub rsp, 0x38	       352	refs.c	FUNCTION_18
0x4000e76	    0x488b2d000000	            mov rbp, qword [0x04000e7d] 	      1460	refs.c	FUNCTION_79	CALL_2
0x4000e7d	    0x64488b042528	                mov rax, qword fs:[0x28]	       352	refs.c	FUNCTION_18
0x4000e86	      0x4889442428	             mov qword [rsp + 0x28], rax	       352	refs.c	FUNCTION_18
0x4000e8b	            0x31c0	                            xor eax, eax	       352	refs.c	FUNCTION_18
0x4000e8d	        0x48893c24	                    mov qword [rsp], rdi	       355	refs.c	FUNCTION_18
0x4000e91	      0x4889542408	                mov qword [rsp + 8], rdx	       356	refs.c	FUNCTION_18
0x4000e96	        0x488b5d18	            mov rbx, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4000e9a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       357	refs.c	FUNCTION_18
0x4000ea3	      0x4889742418	             mov qword [rsp + 0x18], rsi	       358	refs.c	FUNCTION_18
0x4000ea8	          0x4885db	                           test rbx, rbx	      1669	refs.c	FUNCTION_89	IF_1
0x4000eab	            0x745b	                            je 0x4000f08	      1669	refs.c	FUNCTION_89	IF_1
0x4000ead	    0x8b0500000000	            mov eax, dword [0x04000eb3] 	      1348	refs.c	FUNCTION_68	IF_1
0x4000eb3	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4000eb5	     0xf88b5000000	                            js 0x4000f70	      1348	refs.c	FUNCTION_68	IF_1
0x4000ebb	          0x488b03	                    mov rax, qword [rbx]	      1353	refs.c	FUNCTION_68	CALL_2
0x4000ebe	      0xba01000000	                              mov edx, 1	      1353	refs.c	FUNCTION_68	CALL_2
0x4000ec3	      0xbe00000000	                              mov esi, 0	      1353	refs.c	FUNCTION_68	CALL_2
0x4000ec8	          0x4889df	                            mov rdi, rbx	      1353	refs.c	FUNCTION_68	CALL_2
0x4000ecb	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x4000ece	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4000ed2	     0xf84b4000000	                            je 0x4000f8c	      1363	refs.c	FUNCTION_68	IF_4
0x4000ed8	          0x4889e2	                            mov rdx, rsp	      1388	refs.c	FUNCTION_69	CALL_2
0x4000edb	      0xbe00000000	                              mov esi, 0	      1388	refs.c	FUNCTION_69	CALL_2
0x4000ee0	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4000ee3	      0xe800000000	                          call 0x4000ee8	      1388	refs.c	FUNCTION_69	CALL_2
0x4000ee8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       360	refs.c	FUNCTION_18
0x4000eed	    0x644833042528	                xor rax, qword fs:[0x28]	       360	refs.c	FUNCTION_18
0x4000ef6	     0xf858b000000	                           jne 0x4000f87	       360	refs.c	FUNCTION_18
0x4000efc	        0x4883c438	                           add rsp, 0x38	       360	refs.c	FUNCTION_18
0x4000f00	              0x5b	                                 pop rbx	       360	refs.c	FUNCTION_18
0x4000f01	              0x5d	                                 pop rbp	       360	refs.c	FUNCTION_18
0x4000f02	              0xc3	                                     ret	       360	refs.c	FUNCTION_18
0x4000f03	       0xf1f440000	                   nop dword [rax + rax]	       360	refs.c	FUNCTION_18
0x4000f08	        0x4c8b4d00	                     mov r9, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x4000f0c	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4000f0f	     0xf848d000000	                            je 0x4000fa2	      1672	refs.c	FUNCTION_89	IF_2
0x4000f15	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4000f1a	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4000f20	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000f24	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000f29	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000f2c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000f2e	            0x7420	                            je 0x4000f50	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4000f30	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4000f33	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4000f36	            0x75e8	                           jne 0x4000f20	        27	refs.c	FUNCTION_1	FOR_1
0x4000f38	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4000f3d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4000f42	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4000f44	      0xe800000000	                          call 0x4000f49	      1661	refs.c	FUNCTION_88	CALL_2
0x4000f49	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4000f50	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4000f55	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4000f58	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4000f5b	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4000f5e	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x4000f62	            0x7484	                            je 0x4000ee8	      1383	refs.c	FUNCTION_69	IF_1
0x4000f64	          0x4889c3	                            mov rbx, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4000f67	      0xe941ffffff	                           jmp 0x4000ead	      1383	refs.c	FUNCTION_69	IF_1
0x4000f6c	         0xf1f4000	                         nop dword [rax]	      1383	refs.c	FUNCTION_69	IF_1
0x4000f70	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x4000f72	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x4000f77	      0xe800000000	                          call 0x4000f7c	      1349	refs.c	FUNCTION_68	CALL_1
0x4000f7c	    0x890500000000	            mov dword [0x04000f82], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x4000f82	      0xe934ffffff	                           jmp 0x4000ebb	      1349	refs.c	FUNCTION_68	CALL_1
0x4000f87	      0xe800000000	                          call 0x4000f8c	       360	refs.c	FUNCTION_18
0x4000f8c	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4000f91	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x4000f96	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4000f9b	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x4000f9d	      0xe800000000	                          call 0x4000fa2	      1364	refs.c	FUNCTION_68	IF_4
0x4000fa2	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4000fa7	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4000fac	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4000fb1	      0xe800000000	                          call 0x4000fb6	      1673	refs.c	FUNCTION_89	IF_2
refs_rename_ref_available	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,4	180
0x4003f40	            0x4155	                                push r13	      1309	refs.c	FUNCTION_65
0x4003f42	            0x4154	                                push r12	      1309	refs.c	FUNCTION_65
0x4003f44	          0x4989fc	                            mov r12, rdi	      1309	refs.c	FUNCTION_65
0x4003f47	              0x55	                                push rbp	      1309	refs.c	FUNCTION_65
0x4003f48	              0x53	                                push rbx	      1309	refs.c	FUNCTION_65
0x4003f49	          0x4889d5	                            mov rbp, rdx	      1309	refs.c	FUNCTION_65
0x4003f4c	    0x4881ecb80000	                           sub rsp, 0xb8	      1309	refs.c	FUNCTION_65
0x4003f53	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1314	refs.c	FUNCTION_65	CALL_1
0x4003f58	    0x80a424800000	             and byte [rsp + 0x80], 0xfe	      1310	refs.c	FUNCTION_65
0x4003f60	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1310	refs.c	FUNCTION_65
0x4003f69	    0x64488b042528	                mov rax, qword fs:[0x28]	      1309	refs.c	FUNCTION_65
0x4003f72	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      1309	refs.c	FUNCTION_65
0x4003f7a	            0x31c0	                            xor eax, eax	      1309	refs.c	FUNCTION_65
0x4003f7c	    0xc74424780000	               mov dword [rsp + 0x78], 0	      1310	refs.c	FUNCTION_65
0x4003f84	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      1310	refs.c	FUNCTION_65
0x4003f8c	    0x48c784248800	               mov qword [rsp + 0x88], 0	      1310	refs.c	FUNCTION_65
0x4003f98	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1311	refs.c	FUNCTION_65
0x4003fa1	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1311	refs.c	FUNCTION_65
0x4003faa	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1311	refs.c	FUNCTION_65
0x4003fb3	      0xe800000000	                          call 0x4003fb8	      1314	refs.c	FUNCTION_65	CALL_1
0x4003fb8	          0x4889ef	                            mov rdi, rbp	      1948	refs.c	FUNCTION_103	CALL_3
0x4003fbb	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1933	refs.c	FUNCTION_103
0x4003fc4	    0x48c744243800	               mov qword [rsp + 0x38], 0	      1933	refs.c	FUNCTION_103
0x4003fcd	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1933	refs.c	FUNCTION_103
0x4003fd6	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1934	refs.c	FUNCTION_103
0x4003fdf	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1934	refs.c	FUNCTION_103
0x4003fe8	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1934	refs.c	FUNCTION_103
0x4003ff1	      0xe800000000	                          call 0x4003ff6	      1948	refs.c	FUNCTION_103	CALL_3
0x4003ff6	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1948	refs.c	FUNCTION_103	CALL_3
0x4003ffb	        0x488d7001	                      lea rsi, [rax + 1]	      1948	refs.c	FUNCTION_103	CALL_3
0x4003fff	      0xe800000000	                          call 0x4004004	      1948	refs.c	FUNCTION_103	CALL_3
0x4004004	      0xbe2f000000	                           mov esi, 0x2f	      1949	refs.c	FUNCTION_103	FOR_1
0x4004009	          0x4889ef	                            mov rdi, rbp	      1949	refs.c	FUNCTION_103	FOR_1
0x400400c	      0xe800000000	                          call 0x4004011	      1949	refs.c	FUNCTION_103	FOR_1
0x4004011	          0x4885c0	                           test rax, rax	      1949	refs.c	FUNCTION_103	FOR_1
0x4004014	          0x4889c3	                            mov rbx, rax	      1949	refs.c	FUNCTION_103	FOR_1
0x4004017	            0x7477	                            je 0x4004090	      1949	refs.c	FUNCTION_103	FOR_1
0x4004019	     0xf1f80000000	                         nop dword [rax]	      1949	refs.c	FUNCTION_103	FOR_1
0x4004020	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x4004025	          0x4889da	                            mov rdx, rbx	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x4004028	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x400402d	          0x4829ea	                            sub rdx, rbp	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x4004030	          0x4829f2	                            sub rdx, rsi	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x4004033	          0x4801ee	                            add rsi, rbp	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x4004036	      0xe800000000	                          call 0x400403b	      1951	refs.c	FUNCTION_103	FOR_1	CALL_4
0x400403b	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x4004040	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x4004045	      0xe800000000	                          call 0x400404a	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x400404a	            0x85c0	                           test eax, eax	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x400404c	            0x752c	                           jne 0x400407a	      1958	refs.c	FUNCTION_103	FOR_1	IF_1	CALL_5
0x400404e	        0x498b0424	                    mov rax, qword [r12]	      1467	refs.c	FUNCTION_80	CALL_1
0x4004052	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      1467	refs.c	FUNCTION_80	CALL_1
0x4004057	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1467	refs.c	FUNCTION_80	CALL_1
0x400405c	    0x488d94249000	                   lea rdx, [rsp + 0x90]	      1467	refs.c	FUNCTION_80	CALL_1
0x4004064	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1467	refs.c	FUNCTION_80	CALL_1
0x4004069	          0x4c89e7	                            mov rdi, r12	      1467	refs.c	FUNCTION_80	CALL_1
0x400406c	          0x4c89e9	                            mov rcx, r13	      1467	refs.c	FUNCTION_80	CALL_1
0x400406f	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x4004072	            0x85c0	                           test eax, eax	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_6
0x4004074	     0xf8476010000	                            je 0x40041f0	      1961	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_6
0x400407a	        0x488d7b01	                      lea rdi, [rbx + 1]	      1949	refs.c	FUNCTION_103	FOR_1
0x400407e	      0xbe2f000000	                           mov esi, 0x2f	      1949	refs.c	FUNCTION_103	FOR_1
0x4004083	      0xe800000000	                          call 0x4004088	      1949	refs.c	FUNCTION_103	FOR_1
0x4004088	          0x4885c0	                           test rax, rax	      1949	refs.c	FUNCTION_103	FOR_1
0x400408b	          0x4889c3	                            mov rbx, rax	      1949	refs.c	FUNCTION_103	FOR_1
0x400408e	            0x7590	                           jne 0x4004020	      1949	refs.c	FUNCTION_103	FOR_1
0x4004090	          0x4889eb	                            mov rbx, rbp	      1982	refs.c	FUNCTION_103	CALL_10
0x4004093	      0x48035c2438	             add rbx, qword [rsp + 0x38]	      1982	refs.c	FUNCTION_103	CALL_10
0x4004098	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x400409b	      0xe800000000	                          call 0x40040a0	       279	strbuf.h	FUNCTION_129	CALL_2
0x40040a0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       279	strbuf.h	FUNCTION_129	CALL_2
0x40040a5	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_129	CALL_2
0x40040a8	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x40040ab	      0xe800000000	                          call 0x40040b0	       279	strbuf.h	FUNCTION_129	CALL_2
0x40040b0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       279	strbuf.h	FUNCTION_129	CALL_2
0x40040b5	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_126
0x40040b8	     0xf8412010000	                            je 0x40041d0	       141	strbuf.h	FUNCTION_126
0x40040be	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       141	strbuf.h	FUNCTION_126
0x40040c3	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40040c7	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40040ca	     0xf8400010000	                            je 0x40041d0	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40040d0	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_128
0x40040d4	      0x4889442438	             mov qword [rsp + 0x38], rax	       229	strbuf.h	FUNCTION_128
0x40040d9	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       229	strbuf.h	FUNCTION_128
0x40040de	        0xc604102f	              mov byte [rax + rdx], 0x2f	       229	strbuf.h	FUNCTION_128
0x40040e2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       230	strbuf.h	FUNCTION_128
0x40040e7	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       230	strbuf.h	FUNCTION_128
0x40040ec	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_128
0x40040f0	    0x8b0500000000	            mov eax, dword [0x040040f6] 	      1348	refs.c	FUNCTION_68	IF_1
0x40040f6	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      1985	refs.c	FUNCTION_103	CALL_12
0x40040fb	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x40040fd	     0xf8835010000	                            js 0x4004238	      1348	refs.c	FUNCTION_68	IF_1
0x4004103	        0x498b0424	                    mov rax, qword [r12]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004107	          0x4889de	                            mov rsi, rbx	      1353	refs.c	FUNCTION_68	CALL_2
0x400410a	      0xba01000000	                              mov edx, 1	      1353	refs.c	FUNCTION_68	CALL_2
0x400410f	          0x4c89e7	                            mov rdi, r12	      1353	refs.c	FUNCTION_68	CALL_2
0x4004112	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004115	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4004119	          0x4889c3	                            mov rbx, rax	      1353	refs.c	FUNCTION_68	CALL_2
0x400411c	     0xf8439010000	                            je 0x400425b	      1363	refs.c	FUNCTION_68	IF_4
0x4004122	    0x660f1f440000	                    nop word [rax + rax]	      1363	refs.c	FUNCTION_68	IF_4
0x4004128	          0x4889df	                            mov rdi, rbx	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x400412b	      0xe800000000	                          call 0x4004130	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x4004130	            0x85c0	                           test eax, eax	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x4004132	     0xf85d8000000	                           jne 0x4004210	      1987	refs.c	FUNCTION_103	WHILE_1	CALL_13
0x4004138	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_14
0x400413c	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_14
0x4004141	      0xe800000000	                          call 0x4004146	      1989	refs.c	FUNCTION_103	WHILE_1	IF_4	CALL_14
0x4004146	            0x85c0	                           test eax, eax	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x4004148	            0x75de	                           jne 0x4004128	      1988	refs.c	FUNCTION_103	WHILE_1	IF_4
0x400414a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x400414e	      0x4c8d642410	                   lea r12, [rsp + 0x10]	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004153	          0x4889e9	                            mov rcx, rbp	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004156	      0xbe00000000	                              mov esi, 0	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x400415b	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004160	          0x4c89e7	                            mov rdi, r12	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004163	      0xe800000000	                          call 0x4004168	      1992	refs.c	FUNCTION_103	WHILE_1	CALL_15
0x4004168	          0x4889df	                            mov rdi, rbx	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_16
0x400416b	      0xe800000000	                          call 0x4004170	      1994	refs.c	FUNCTION_103	WHILE_1	CALL_16
0x4004170	          0x4c89ef	                            mov rdi, r13	      2009	refs.c	FUNCTION_103	CALL_20
0x4004173	            0x31db	                            xor ebx, ebx	      1315	refs.c	FUNCTION_65	CALL_2
0x4004175	      0xe800000000	                          call 0x400417a	      2009	refs.c	FUNCTION_103	CALL_20
0x400417a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2010	refs.c	FUNCTION_103	CALL_21
0x400417f	      0xe800000000	                          call 0x4004184	      2010	refs.c	FUNCTION_103	CALL_21
0x4004184	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1318	refs.c	FUNCTION_65	IF_1
0x4004189	      0xbf00000000	                              mov edi, 0	      1318	refs.c	FUNCTION_65	IF_1
0x400418e	            0x31c0	                            xor eax, eax	      1318	refs.c	FUNCTION_65	IF_1
0x4004190	      0xe800000000	                          call 0x4004195	      1318	refs.c	FUNCTION_65	IF_1
0x4004195	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1320	refs.c	FUNCTION_65	CALL_3
0x400419a	            0x31f6	                            xor esi, esi	      1320	refs.c	FUNCTION_65	CALL_3
0x400419c	      0xe800000000	                          call 0x40041a1	      1320	refs.c	FUNCTION_65	CALL_3
0x40041a1	          0x4c89e7	                            mov rdi, r12	      1321	refs.c	FUNCTION_65	CALL_4
0x40041a4	      0xe800000000	                          call 0x40041a9	      1321	refs.c	FUNCTION_65	CALL_4
0x40041a9	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      1323	refs.c	FUNCTION_65
0x40041b1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1323	refs.c	FUNCTION_65
0x40041ba	            0x89d8	                            mov eax, ebx	      1323	refs.c	FUNCTION_65
0x40041bc	     0xf85af000000	                           jne 0x4004271	      1323	refs.c	FUNCTION_65
0x40041c2	    0x4881c4b80000	                           add rsp, 0xb8	      1323	refs.c	FUNCTION_65
0x40041c9	              0x5b	                                 pop rbx	      1323	refs.c	FUNCTION_65
0x40041ca	              0x5d	                                 pop rbp	      1323	refs.c	FUNCTION_65
0x40041cb	            0x415c	                                 pop r12	      1323	refs.c	FUNCTION_65
0x40041cd	            0x415d	                                 pop r13	      1323	refs.c	FUNCTION_65
0x40041cf	              0xc3	                                     ret	      1323	refs.c	FUNCTION_65
0x40041d0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       228	strbuf.h	FUNCTION_128	CALL_2
0x40041d5	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_128	CALL_2
0x40041da	      0xe800000000	                          call 0x40041df	       228	strbuf.h	FUNCTION_128	CALL_2
0x40041df	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       228	strbuf.h	FUNCTION_128	CALL_2
0x40041e4	      0xe9e7feffff	                           jmp 0x40040d0	       228	strbuf.h	FUNCTION_128	CALL_2
0x40041e9	     0xf1f80000000	                         nop dword [rax]	       228	strbuf.h	FUNCTION_128	CALL_2
0x40041f0	      0x4c8d642410	                   lea r12, [rsp + 0x10]	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x40041f5	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x40041fa	          0x4889e9	                            mov rcx, rbp	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x40041fd	      0xbe00000000	                              mov esi, 0	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x4004202	          0x4c89e7	                            mov rdi, r12	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x4004205	      0xe800000000	                          call 0x400420a	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x400420a	      0xe961ffffff	                           jmp 0x4004170	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x400420f	              0x90	                                     nop	      1962	refs.c	FUNCTION_103	FOR_1	IF_2	CALL_7
0x4004210	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1998	refs.c	FUNCTION_103	IF_5
0x4004213	            0x753a	                           jne 0x400424f	      1998	refs.c	FUNCTION_103	IF_5
0x4004215	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2009	refs.c	FUNCTION_103	CALL_20
0x400421a	      0xbb01000000	                              mov ebx, 1	      1315	refs.c	FUNCTION_65	CALL_2
0x400421f	      0x4c8d642410	                   lea r12, [rsp + 0x10]	      1315	refs.c	FUNCTION_65	CALL_2
0x4004224	      0xe800000000	                          call 0x4004229	      2009	refs.c	FUNCTION_103	CALL_20
0x4004229	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2010	refs.c	FUNCTION_103	CALL_21
0x400422e	      0xe800000000	                          call 0x4004233	      2010	refs.c	FUNCTION_103	CALL_21
0x4004233	      0xe95dffffff	                           jmp 0x4004195	      2010	refs.c	FUNCTION_103	CALL_21
0x4004238	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x400423a	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x400423f	      0xe800000000	                          call 0x4004244	      1349	refs.c	FUNCTION_68	CALL_1
0x4004244	    0x890500000000	            mov dword [0x0400424a], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x400424a	      0xe9b4feffff	                           jmp 0x4004103	      1349	refs.c	FUNCTION_68	CALL_1
0x400424f	      0xbf00000000	                              mov edi, 0	      1999	refs.c	FUNCTION_103	CALL_17
0x4004254	            0x31c0	                            xor eax, eax	      1999	refs.c	FUNCTION_103	CALL_17
0x4004256	      0xe800000000	                          call 0x400425b	      1999	refs.c	FUNCTION_103	CALL_17
0x400425b	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004260	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x4004265	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x400426a	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x400426c	      0xe800000000	                          call 0x4004271	      1364	refs.c	FUNCTION_68	IF_4
0x4004271	      0xe800000000	                          call 0x4004276	      1323	refs.c	FUNCTION_65
should_autocreate_reflog	SWITCH,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,3	36
0x4002850	    0x8b0500000000	            mov eax, dword [0x04002856] 	       798	refs.c	FUNCTION_46	SWITCH_1
0x4002856	          0x83f801	                              cmp eax, 1	       798	refs.c	FUNCTION_46	SWITCH_1
0x4002859	            0x740d	                            je 0x4002868	       798	refs.c	FUNCTION_46	SWITCH_1
0x400285b	          0x83f802	                              cmp eax, 2	       807	refs.c	FUNCTION_46	SWITCH_1
0x400285e	           0xf94c0	                                 sete al	       807	refs.c	FUNCTION_46	SWITCH_1
0x4002861	           0xfb6c0	                           movzx eax, al	       807	refs.c	FUNCTION_46	SWITCH_1
0x4002864	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
0x4002865	           0xf1f00	                         nop dword [rax]	       809	refs.c	FUNCTION_46
0x4002868	              0x53	                                push rbx	       797	refs.c	FUNCTION_46
0x4002869	      0xbe00000000	                              mov esi, 0	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x400286e	          0x4889fb	                            mov rbx, rdi	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4002871	      0xe800000000	                          call 0x4002876	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4002876	            0x85c0	                           test eax, eax	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x4002878	            0x740e	                            je 0x4002888	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x400287a	      0xb801000000	                              mov eax, 1	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x400287f	              0x5b	                                 pop rbx	       809	refs.c	FUNCTION_46
0x4002880	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
0x4002881	     0xf1f80000000	                         nop dword [rax]	       809	refs.c	FUNCTION_46
0x4002888	      0xbe00000000	                              mov esi, 0	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x400288d	          0x4889df	                            mov rdi, rbx	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4002890	      0xe800000000	                          call 0x4002895	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x4002895	            0x85c0	                           test eax, eax	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4002897	            0x75e1	                           jne 0x400287a	       802	refs.c	FUNCTION_46	SWITCH_1	CALL_1
0x4002899	      0xbe00000000	                              mov esi, 0	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x400289e	          0x4889df	                            mov rdi, rbx	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x40028a1	      0xe800000000	                          call 0x40028a6	       804	refs.c	FUNCTION_46	SWITCH_1	CALL_3
0x40028a6	            0x85c0	                           test eax, eax	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x40028a8	            0x75d0	                           jne 0x400287a	       803	refs.c	FUNCTION_46	SWITCH_1	CALL_2
0x40028aa	          0x4889de	                            mov rsi, rbx	       805	refs.c	FUNCTION_46	SWITCH_1
0x40028ad	      0xbf00000000	                              mov edi, 0	       805	refs.c	FUNCTION_46	SWITCH_1
0x40028b2	      0xb905000000	                              mov ecx, 5	       805	refs.c	FUNCTION_46	SWITCH_1
0x40028b7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       800	refs.c	FUNCTION_46	SWITCH_1
0x40028b9	              0x5b	                                 pop rbx	       809	refs.c	FUNCTION_46
0x40028ba	           0xf94c0	                                 sete al	       800	refs.c	FUNCTION_46	SWITCH_1
0x40028bd	           0xfb6c0	                           movzx eax, al	       800	refs.c	FUNCTION_46	SWITCH_1
0x40028c0	              0xc3	                                     ret	       809	refs.c	FUNCTION_46
for_each_replace_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,3	99
0x4004c40	            0x4157	                                push r15	      1434	refs.c	FUNCTION_76
0x4004c42	            0x4156	                                push r14	      1434	refs.c	FUNCTION_76
0x4004c44	          0x4989fe	                            mov r14, rdi	      1434	refs.c	FUNCTION_76
0x4004c47	            0x4155	                                push r13	      1434	refs.c	FUNCTION_76
0x4004c49	            0x4154	                                push r12	      1434	refs.c	FUNCTION_76
0x4004c4b	          0x4989d5	                            mov r13, rdx	      1434	refs.c	FUNCTION_76
0x4004c4e	              0x55	                                push rbp	      1434	refs.c	FUNCTION_76
0x4004c4f	              0x53	                                push rbx	      1434	refs.c	FUNCTION_76
0x4004c50	          0x4989f4	                            mov r12, rsi	      1434	refs.c	FUNCTION_76
0x4004c53	        0x4883ec08	                              sub rsp, 8	      1434	refs.c	FUNCTION_76
0x4004c57	    0x488b1d000000	            mov rbx, qword [0x04004c5e] 	      1437	refs.c	FUNCTION_76	CALL_3
0x4004c5e	          0x4889df	                            mov rdi, rbx	      1437	refs.c	FUNCTION_76	CALL_3
0x4004c61	      0xe800000000	                          call 0x4004c66	      1437	refs.c	FUNCTION_76	CALL_3
0x4004c66	        0x4d8b7e18	            mov r15, qword [r14 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4004c6a	          0x4889c5	                            mov rbp, rax	      1437	refs.c	FUNCTION_76	CALL_3
0x4004c6d	          0x4d85ff	                           test r15, r15	      1669	refs.c	FUNCTION_89	IF_1
0x4004c70	            0x7466	                            je 0x4004cd8	      1669	refs.c	FUNCTION_89	IF_1
0x4004c72	    0x8b0500000000	            mov eax, dword [0x04004c78] 	      1348	refs.c	FUNCTION_68	IF_1
0x4004c78	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4004c7a	     0xf88c8000000	                            js 0x4004d48	      1348	refs.c	FUNCTION_68	IF_1
0x4004c80	          0x498b07	                    mov rax, qword [r15]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004c83	      0xba01000000	                              mov edx, 1	      1353	refs.c	FUNCTION_68	CALL_2
0x4004c88	          0x4889de	                            mov rsi, rbx	      1353	refs.c	FUNCTION_68	CALL_2
0x4004c8b	          0x4c89ff	                            mov rdi, r15	      1353	refs.c	FUNCTION_68	CALL_2
0x4004c8e	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004c91	            0x85ed	                           test ebp, ebp	      1359	refs.c	FUNCTION_68	IF_3
0x4004c93	            0x752b	                           jne 0x4004cc0	      1359	refs.c	FUNCTION_68	IF_3
0x4004c95	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4004c99	     0xf84c0000000	                            je 0x4004d5f	      1363	refs.c	FUNCTION_68	IF_4
0x4004c9f	        0x4883c408	                              add rsp, 8	      1439	refs.c	FUNCTION_76
0x4004ca3	          0x4c89ea	                            mov rdx, r13	      1388	refs.c	FUNCTION_69	CALL_2
0x4004ca6	          0x4c89e6	                            mov rsi, r12	      1388	refs.c	FUNCTION_69	CALL_2
0x4004ca9	              0x5b	                                 pop rbx	      1439	refs.c	FUNCTION_76
0x4004caa	              0x5d	                                 pop rbp	      1439	refs.c	FUNCTION_76
0x4004cab	            0x415c	                                 pop r12	      1439	refs.c	FUNCTION_76
0x4004cad	            0x415d	                                 pop r13	      1439	refs.c	FUNCTION_76
0x4004caf	            0x415e	                                 pop r14	      1439	refs.c	FUNCTION_76
0x4004cb1	            0x415f	                                 pop r15	      1439	refs.c	FUNCTION_76
0x4004cb3	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4004cb6	      0xe900000000	                           jmp 0x4004cbb	      1388	refs.c	FUNCTION_69	CALL_2
0x4004cbb	       0xf1f440000	                   nop dword [rax + rax]	      1388	refs.c	FUNCTION_69	CALL_2
0x4004cc0	            0x89ea	                            mov edx, ebp	      1360	refs.c	FUNCTION_68	CALL_3
0x4004cc2	      0xbe00000000	                              mov esi, 0	      1360	refs.c	FUNCTION_68	CALL_3
0x4004cc7	          0x4889c7	                            mov rdi, rax	      1360	refs.c	FUNCTION_68	CALL_3
0x4004cca	      0xe800000000	                          call 0x4004ccf	      1360	refs.c	FUNCTION_68	CALL_3
0x4004ccf	            0xebc4	                           jmp 0x4004c95	      1360	refs.c	FUNCTION_68	CALL_3
0x4004cd1	     0xf1f80000000	                         nop dword [rax]	      1360	refs.c	FUNCTION_68	CALL_3
0x4004cd8	          0x4d8b0e	                     mov r9, qword [r14]	      1672	refs.c	FUNCTION_89	IF_2
0x4004cdb	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4004cde	     0xf8491000000	                            je 0x4004d75	      1672	refs.c	FUNCTION_89	IF_2
0x4004ce4	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4004ce9	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4004cef	              0x90	                                     nop	      1672	refs.c	FUNCTION_89	IF_2
0x4004cf0	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004cf4	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004cf9	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004cfc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004cfe	            0x7420	                            je 0x4004d20	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004d00	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4004d03	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4004d06	            0x75e8	                           jne 0x4004cf0	        27	refs.c	FUNCTION_1	FOR_1
0x4004d08	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4004d0d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4004d12	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4004d14	      0xe800000000	                          call 0x4004d19	      1661	refs.c	FUNCTION_88	CALL_2
0x4004d19	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4004d20	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4004d25	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4004d28	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4004d2b	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4004d2e	        0x49894618	             mov qword [r14 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4004d32	            0x7557	                           jne 0x4004d8b	      1383	refs.c	FUNCTION_69	IF_1
0x4004d34	        0x4883c408	                              add rsp, 8	      1439	refs.c	FUNCTION_76
0x4004d38	            0x31c0	                            xor eax, eax	      1439	refs.c	FUNCTION_76
0x4004d3a	              0x5b	                                 pop rbx	      1439	refs.c	FUNCTION_76
0x4004d3b	              0x5d	                                 pop rbp	      1439	refs.c	FUNCTION_76
0x4004d3c	            0x415c	                                 pop r12	      1439	refs.c	FUNCTION_76
0x4004d3e	            0x415d	                                 pop r13	      1439	refs.c	FUNCTION_76
0x4004d40	            0x415e	                                 pop r14	      1439	refs.c	FUNCTION_76
0x4004d42	            0x415f	                                 pop r15	      1439	refs.c	FUNCTION_76
0x4004d44	              0xc3	                                     ret	      1439	refs.c	FUNCTION_76
0x4004d45	           0xf1f00	                         nop dword [rax]	      1439	refs.c	FUNCTION_76
0x4004d48	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x4004d4a	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x4004d4f	      0xe800000000	                          call 0x4004d54	      1349	refs.c	FUNCTION_68	CALL_1
0x4004d54	    0x890500000000	            mov dword [0x04004d5a], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x4004d5a	      0xe921ffffff	                           jmp 0x4004c80	      1349	refs.c	FUNCTION_68	CALL_1
0x4004d5f	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004d64	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x4004d69	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004d6e	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x4004d70	      0xe800000000	                          call 0x4004d75	      1364	refs.c	FUNCTION_68	IF_4
0x4004d75	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4004d7a	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4004d7f	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4004d84	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4004d86	      0xe800000000	                          call 0x4004d8b	      1673	refs.c	FUNCTION_89	IF_2
0x4004d8b	          0x4989c7	                            mov r15, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4004d8e	      0xe9dffeffff	                           jmp 0x4004c72	      1383	refs.c	FUNCTION_69	IF_1
head_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	120
0x40043e0	            0x4157	                                push r15	      1338	refs.c	FUNCTION_67
0x40043e2	            0x4156	                                push r14	      1338	refs.c	FUNCTION_67
0x40043e4	          0x4989ff	                            mov r15, rdi	      1338	refs.c	FUNCTION_67
0x40043e7	            0x4155	                                push r13	      1338	refs.c	FUNCTION_67
0x40043e9	            0x4154	                                push r12	      1338	refs.c	FUNCTION_67
0x40043eb	              0x55	                                push rbp	      1338	refs.c	FUNCTION_67
0x40043ec	              0x53	                                push rbx	      1338	refs.c	FUNCTION_67
0x40043ed	        0x4883ec48	                           sub rsp, 0x48	      1338	refs.c	FUNCTION_67
0x40043f1	    0x488b1d000000	            mov rbx, qword [0x040043f8] 	      1339	refs.c	FUNCTION_67	CALL_2
0x40043f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1338	refs.c	FUNCTION_67
0x4004401	      0x4889442438	             mov qword [rsp + 0x38], rax	      1338	refs.c	FUNCTION_67
0x4004406	            0x31c0	                            xor eax, eax	      1338	refs.c	FUNCTION_67
0x4004408	      0x4889742408	                mov qword [rsp + 8], rsi	      1338	refs.c	FUNCTION_67
0x400440d	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4004411	          0x4d85e4	                           test r12, r12	      1669	refs.c	FUNCTION_89	IF_1
0x4004414	     0xf84de000000	                            je 0x40044f8	      1669	refs.c	FUNCTION_89	IF_1
0x400441a	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400441f	      0xbf00000000	                              mov edi, 0	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4004424	      0xe800000000	                          call 0x4004429	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4004429	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400442b	          0x4189c6	                           mov r14d, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400442e	            0x7440	                            je 0x4004470	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4004430	      0xe800000000	                          call 0x4004435	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x4004435	    0xc70016000000	                   mov dword [rax], 0x16	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x400443b	       0xf1f440000	                   nop dword [rax + rax]	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x4004440	          0x4531f6	                          xor r14d, r14d	      1334	refs.c	FUNCTION_66
0x4004443	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1340	refs.c	FUNCTION_67
0x4004448	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1340	refs.c	FUNCTION_67
0x4004451	          0x4489f0	                           mov eax, r14d	      1340	refs.c	FUNCTION_67
0x4004454	     0xf8552010000	                           jne 0x40045ac	      1340	refs.c	FUNCTION_67
0x400445a	        0x4883c448	                           add rsp, 0x48	      1340	refs.c	FUNCTION_67
0x400445e	              0x5b	                                 pop rbx	      1340	refs.c	FUNCTION_67
0x400445f	              0x5d	                                 pop rbp	      1340	refs.c	FUNCTION_67
0x4004460	            0x415c	                                 pop r12	      1340	refs.c	FUNCTION_67
0x4004462	            0x415d	                                 pop r13	      1340	refs.c	FUNCTION_67
0x4004464	            0x415e	                                 pop r14	      1340	refs.c	FUNCTION_67
0x4004466	            0x415f	                                 pop r15	      1340	refs.c	FUNCTION_67
0x4004468	              0xc3	                                     ret	      1340	refs.c	FUNCTION_67
0x4004469	     0xf1f80000000	                         nop dword [rax]	      1340	refs.c	FUNCTION_67
0x4004470	      0xbb05000000	                              mov ebx, 5	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4004475	          0x4531ed	                          xor r13d, r13d	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4004478	      0xbd00000000	                              mov ebp, 0	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400447d	           0xf1f00	                         nop dword [rax]	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4004480	        0x498b0424	                    mov rax, qword [r12]	      1467	refs.c	FUNCTION_80	CALL_1
0x4004484	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x400448c	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1467	refs.c	FUNCTION_80	CALL_1
0x4004491	      0xb900000000	                              mov ecx, 0	      1467	refs.c	FUNCTION_80	CALL_1
0x4004496	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1467	refs.c	FUNCTION_80	CALL_1
0x400449b	          0x4889ee	                            mov rsi, rbp	      1467	refs.c	FUNCTION_80	CALL_1
0x400449e	          0x4c89e7	                            mov rdi, r12	      1467	refs.c	FUNCTION_80	CALL_1
0x40044a1	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x40044a4	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x40044a6	            0x759b	                           jne 0x4004443	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x40044a8	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1533	refs.c	FUNCTION_81	FOR_1
0x40044ac	          0x4109c5	                            or r13d, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x40044af	            0xa801	                              test al, 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40044b1	     0xf84a9000000	                            je 0x4004560	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40044b7	    0x488b2d000000	            mov rbp, qword [0x040044be] 	      1543	refs.c	FUNCTION_81	FOR_1
0x40044be	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40044c3	          0x4889ef	                            mov rdi, rbp	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40044c6	      0xe800000000	                          call 0x40044cb	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40044cb	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40044cd	            0x7411	                            je 0x40044e0	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40044cf	      0xe800000000	                          call 0x40044d4	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40044d4	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40044da	      0xe964ffffff	                           jmp 0x4004443	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40044df	              0x90	                                     nop	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40044e0	          0x83eb01	                              sub ebx, 1	      1506	refs.c	FUNCTION_81	FOR_1
0x40044e3	            0x759b	                           jne 0x4004480	      1506	refs.c	FUNCTION_81	FOR_1
0x40044e5	      0xe800000000	                          call 0x40044ea	      1559	refs.c	FUNCTION_81
0x40044ea	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x40044f0	      0xe94bffffff	                           jmp 0x4004440	      1559	refs.c	FUNCTION_81
0x40044f5	           0xf1f00	                         nop dword [rax]	      1559	refs.c	FUNCTION_81
0x40044f8	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x40044fb	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x40044fe	     0xf84ad000000	                            je 0x40045b1	      1672	refs.c	FUNCTION_89	IF_2
0x4004504	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4004509	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400450f	              0x90	                                     nop	      1672	refs.c	FUNCTION_89	IF_2
0x4004510	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004514	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004519	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400451c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400451e	            0x7420	                            je 0x4004540	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004520	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4004523	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4004526	            0x75e8	                           jne 0x4004510	        27	refs.c	FUNCTION_1	FOR_1
0x4004528	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400452d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4004532	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4004534	      0xe800000000	                          call 0x4004539	      1661	refs.c	FUNCTION_88	CALL_2
0x4004539	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4004540	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4004545	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4004548	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400454b	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x400454f	          0x4989c4	                            mov r12, rax	      1676	refs.c	FUNCTION_89
0x4004552	      0xe9c3feffff	                           jmp 0x400441a	      1676	refs.c	FUNCTION_89
0x4004557	    0x660f1f840000	                    nop word [rax + rax]	      1676	refs.c	FUNCTION_89
0x4004560	        0x41f6c508	                            test r13b, 8	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4004564	            0x7526	                           jne 0x400458c	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4004566	          0x4885ed	                           test rbp, rbp	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4004569	     0xf84d1feffff	                            je 0x4004440	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x400456f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1332	refs.c	FUNCTION_66	CALL_2
0x4004574	          0x4489ea	                           mov edx, r13d	      1332	refs.c	FUNCTION_66	CALL_2
0x4004577	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1332	refs.c	FUNCTION_66	CALL_2
0x400457c	      0xbf00000000	                              mov edi, 0	      1332	refs.c	FUNCTION_66	CALL_2
0x4004581	          0x41ffd7	                                call r15	      1332	refs.c	FUNCTION_66	CALL_2
0x4004584	          0x4189c6	                           mov r14d, eax	      1332	refs.c	FUNCTION_66	CALL_2
0x4004587	      0xe9b7feffff	                           jmp 0x4004443	      1332	refs.c	FUNCTION_66	CALL_2
0x400458c	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_139	CALL_5
0x4004595	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_139	CALL_5
0x400459e	        0x4183cd04	                              or r13d, 4	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40045a2	    0xc74424300000	               mov dword [rsp + 0x30], 0	        90	string3.h	FUNCTION_139	CALL_5
0x40045aa	            0xebba	                           jmp 0x4004566	        90	string3.h	FUNCTION_139	CALL_5
0x40045ac	      0xe800000000	                          call 0x40045b1	      1340	refs.c	FUNCTION_67
0x40045b1	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40045b6	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40045bb	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40045c0	      0xe800000000	                          call 0x40045c5	      1673	refs.c	FUNCTION_89	IF_2
ref_store_hash_cmp	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,0	6
0x4000040	        0x4883c218	                           add rdx, 0x18	      1610	refs.c	FUNCTION_85
0x4000044	          0x4885c9	                           test rcx, rcx	      1610	refs.c	FUNCTION_85
0x4000047	        0x488d7e18	                   lea rdi, [rsi + 0x18]	      1612	refs.c	FUNCTION_85
0x400004b	        0x480f44ca	                          cmove rcx, rdx	      1610	refs.c	FUNCTION_85
0x400004f	          0x4889ce	                            mov rsi, rcx	      1612	refs.c	FUNCTION_85
0x4000052	      0xe900000000	                           jmp 0x4000057	      1612	refs.c	FUNCTION_85
initial_ref_transaction_commit	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,1	7
0x4008140	          0x4889f8	                            mov rax, rdi	      2118	refs.c	FUNCTION_118
0x4008143	          0x488b3f	                    mov rdi, qword [rdi]	      2119	refs.c	FUNCTION_118
0x4008146	          0x4889f2	                            mov rdx, rsi	      2118	refs.c	FUNCTION_118
0x4008149	          0x4889c6	                            mov rsi, rax	      2121	refs.c	FUNCTION_118	CALL_1
0x400814c	          0x488b0f	                    mov rcx, qword [rdi]	      2121	refs.c	FUNCTION_118	CALL_1
0x400814f	        0x488b4938	            mov rcx, qword [rcx + 0x38] 	      2121	refs.c	FUNCTION_118	CALL_1
0x4008153	            0xffe1	                                 jmp rcx	      2121	refs.c	FUNCTION_118	CALL_1
get_worktree_ref_store	SWITCH,0:FOR,0:WHILE,0:ELSE,1:DO,0:IF,4:functions,0:CALL,7	119
0x4005f00	              0x55	                                push rbp	      1740	refs.c	FUNCTION_92
0x4005f01	              0x53	                                push rbx	      1740	refs.c	FUNCTION_92
0x4005f02	        0x4883ec28	                           sub rsp, 0x28	      1740	refs.c	FUNCTION_92
0x4005f06	          0x8b573c	            mov edx, dword [rdi + 0x3c] 	      1744	refs.c	FUNCTION_92	IF_1
0x4005f09	    0x64488b042528	                mov rax, qword fs:[0x28]	      1740	refs.c	FUNCTION_92
0x4005f12	      0x4889442418	             mov qword [rsp + 0x18], rax	      1740	refs.c	FUNCTION_92
0x4005f17	            0x31c0	                            xor eax, eax	      1740	refs.c	FUNCTION_92
0x4005f19	            0x85d2	                           test edx, edx	      1744	refs.c	FUNCTION_92	IF_1
0x4005f1b	            0x7573	                           jne 0x4005f90	      1744	refs.c	FUNCTION_92	IF_1
0x4005f1d	        0x488b7708	                mov rsi, qword [rdi + 8]	      1747	refs.c	FUNCTION_92
0x4005f21	    0x8b0500000000	            mov eax, dword [0x04005f27] 	      1641	refs.c	FUNCTION_87	IF_1
0x4005f27	      0xbb00000000	                              mov ebx, 0	      1747	refs.c	FUNCTION_92
0x4005f2c	          0x4889fd	                            mov rbp, rdi	      1747	refs.c	FUNCTION_92
0x4005f2f	          0x4885f6	                           test rsi, rsi	      1747	refs.c	FUNCTION_92
0x4005f32	        0x480f45de	                         cmovne rbx, rsi	      1747	refs.c	FUNCTION_92
0x4005f36	            0x85c0	                           test eax, eax	      1641	refs.c	FUNCTION_87	IF_1
0x4005f38	     0xf84ba000000	                            je 0x4005ff8	      1641	refs.c	FUNCTION_87	IF_1
0x4005f3e	          0x4889df	                            mov rdi, rbx	      1645	refs.c	FUNCTION_87	CALL_2
0x4005f41	      0xe800000000	                          call 0x4005f46	      1645	refs.c	FUNCTION_87	CALL_2
0x4005f46	          0x4889da	                            mov rdx, rbx	       308	hashmap.h	FUNCTION_178	CALL_2
0x4005f49	          0x4889e6	                            mov rsi, rsp	       308	hashmap.h	FUNCTION_178	CALL_2
0x4005f4c	      0xbf00000000	                              mov edi, 0	       308	hashmap.h	FUNCTION_178	CALL_2
0x4005f51	        0x89442408	                mov dword [rsp + 8], eax	       248	hashmap.h	FUNCTION_176
0x4005f55	    0x48c704240000	                      mov qword [rsp], 0	       249	hashmap.h	FUNCTION_176
0x4005f5d	      0xe800000000	                          call 0x4005f62	       308	hashmap.h	FUNCTION_178	CALL_2
0x4005f62	          0x4885c0	                           test rax, rax	      1646	refs.c	FUNCTION_87
0x4005f65	     0xf8482000000	                            je 0x4005fed	      1646	refs.c	FUNCTION_87
0x4005f6b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1646	refs.c	FUNCTION_87
0x4005f6f	          0x4885c0	                           test rax, rax	      1749	refs.c	FUNCTION_92	IF_2
0x4005f72	            0x7479	                            je 0x4005fed	      1749	refs.c	FUNCTION_92	IF_2
0x4005f74	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1763	refs.c	FUNCTION_92
0x4005f79	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1763	refs.c	FUNCTION_92
0x4005f82	     0xf8545010000	                           jne 0x40060cd	      1763	refs.c	FUNCTION_92
0x4005f88	        0x4883c428	                           add rsp, 0x28	      1763	refs.c	FUNCTION_92
0x4005f8c	              0x5b	                                 pop rbx	      1763	refs.c	FUNCTION_92
0x4005f8d	              0x5d	                                 pop rbp	      1763	refs.c	FUNCTION_92
0x4005f8e	              0xc3	                                     ret	      1763	refs.c	FUNCTION_92
0x4005f8f	              0x90	                                     nop	      1763	refs.c	FUNCTION_92
0x4005f90	    0x488b1d000000	            mov rbx, qword [0x04005f97] 	      1745	refs.c	FUNCTION_92	CALL_1
0x4005f97	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4005f9b	          0x4885c0	                           test rax, rax	      1669	refs.c	FUNCTION_89	IF_1
0x4005f9e	            0x75d4	                           jne 0x4005f74	      1669	refs.c	FUNCTION_89	IF_1
0x4005fa0	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4005fa3	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4005fa6	     0xf8426010000	                            je 0x40060d2	      1672	refs.c	FUNCTION_89	IF_2
0x4005fac	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4005fb1	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4005fb7	    0x660f1f840000	                    nop word [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4005fc0	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005fc4	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005fc9	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005fcc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005fce	     0xf84ac000000	                            je 0x4006080	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005fd4	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4005fd7	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4005fda	            0x75e4	                           jne 0x4005fc0	        27	refs.c	FUNCTION_1	FOR_1
0x4005fdc	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4005fe1	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4005fe6	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4005fe8	      0xe800000000	                          call 0x4005fed	      1661	refs.c	FUNCTION_88	CALL_2
0x4005fed	        0x488b7508	                mov rsi, qword [rbp + 8]	      1661	refs.c	FUNCTION_88	CALL_2
0x4005ff1	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4005ff8	          0x4885f6	                           test rsi, rsi	      1752	refs.c	FUNCTION_92	IF_3
0x4005ffb	     0xf8497000000	                            je 0x4006098	      1752	refs.c	FUNCTION_92	IF_3
0x4006001	      0xbf00000000	                              mov edi, 0	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4006006	            0x31c0	                            xor eax, eax	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x4006008	      0xe800000000	                          call 0x400600d	      1753	refs.c	FUNCTION_92	IF_3	CALL_4
0x400600d	      0xba00000000	                              mov edx, 0	        27	refs.c	FUNCTION_1	FOR_1
0x4006012	    0x41b800000000	                              mov r8d, 0	        27	refs.c	FUNCTION_1	FOR_1
0x4006018	     0xf1f84000000	                   nop dword [rax + rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4006020	        0x488b7208	                mov rsi, qword [rdx + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006024	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006029	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400602c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400602e	            0x7410	                            je 0x4006040	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006030	          0x488b12	                    mov rdx, qword [rdx]	        27	refs.c	FUNCTION_1	FOR_1
0x4006033	          0x4885d2	                           test rdx, rdx	        27	refs.c	FUNCTION_1	FOR_1
0x4006036	            0x75e8	                           jne 0x4006020	        27	refs.c	FUNCTION_1	FOR_1
0x4006038	            0xeba2	                           jmp 0x4005fdc	        27	refs.c	FUNCTION_1	FOR_1
0x400603a	    0x660f1f440000	                    nop word [rax + rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4006040	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4006045	          0x4889c7	                            mov rdi, rax	      1663	refs.c	FUNCTION_88	CALL_3
0x4006048	          0xff5210	                 call qword [rdx + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400604b	          0x4889c5	                            mov rbp, rax	      1663	refs.c	FUNCTION_88	CALL_3
0x400604e	            0x31c0	                            xor eax, eax	      1663	refs.c	FUNCTION_88	CALL_3
0x4006050	          0x4885ed	                           test rbp, rbp	      1759	refs.c	FUNCTION_92	IF_4
0x4006053	     0xf841bffffff	                            je 0x4005f74	      1759	refs.c	FUNCTION_92	IF_4
0x4006059	          0x4889d9	                            mov rcx, rbx	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x400605c	          0x4889ea	                            mov rdx, rbp	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x400605f	      0xbe00000000	                              mov esi, 0	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4006064	      0xbf00000000	                              mov edi, 0	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4006069	      0xe8d2a2ffff	         call sym.register_ref_store_map	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x400606e	          0x4889e8	                            mov rax, rbp	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4006071	      0xe9fefeffff	                           jmp 0x4005f74	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4006076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1760	refs.c	FUNCTION_92	IF_4	CALL_7
0x4006080	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4006085	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4006088	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400608b	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x400608f	      0xe9e0feffff	                           jmp 0x4005f74	      1675	refs.c	FUNCTION_89	CALL_1
0x4006094	         0xf1f4000	                         nop dword [rax]	      1675	refs.c	FUNCTION_89	CALL_1
0x4006098	      0xe800000000	                          call 0x400609d	      1756	refs.c	FUNCTION_92	ELSE_1	CALL_6
0x400609d	      0xba00000000	                              mov edx, 0	        27	refs.c	FUNCTION_1	FOR_1
0x40060a2	    0x41b800000000	                              mov r8d, 0	        27	refs.c	FUNCTION_1	FOR_1
0x40060a8	     0xf1f84000000	                   nop dword [rax + rax]	        27	refs.c	FUNCTION_1	FOR_1
0x40060b0	        0x488b7208	                mov rsi, qword [rdx + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40060b4	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40060b9	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40060bc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40060be	            0x7480	                            je 0x4006040	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40060c0	          0x488b12	                    mov rdx, qword [rdx]	        27	refs.c	FUNCTION_1	FOR_1
0x40060c3	          0x4885d2	                           test rdx, rdx	        27	refs.c	FUNCTION_1	FOR_1
0x40060c6	            0x75e8	                           jne 0x40060b0	        27	refs.c	FUNCTION_1	FOR_1
0x40060c8	      0xe90fffffff	                           jmp 0x4005fdc	        27	refs.c	FUNCTION_1	FOR_1
0x40060cd	      0xe800000000	                          call 0x40060d2	      1763	refs.c	FUNCTION_92
0x40060d2	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40060d7	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40060dc	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40060e1	      0xe800000000	                          call 0x40060e6	      1673	refs.c	FUNCTION_89	IF_2
ref_transaction_create	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,3	141
0x40030b0	            0x4157	                                push r15	      1036	refs.c	FUNCTION_56
0x40030b2	            0x4156	                                push r14	      1036	refs.c	FUNCTION_56
0x40030b4	            0x4155	                                push r13	      1036	refs.c	FUNCTION_56
0x40030b6	            0x4154	                                push r12	      1036	refs.c	FUNCTION_56
0x40030b8	              0x55	                                push rbp	      1036	refs.c	FUNCTION_56
0x40030b9	              0x53	                                push rbx	      1036	refs.c	FUNCTION_56
0x40030ba	        0x4883ec18	                           sub rsp, 0x18	      1036	refs.c	FUNCTION_56
0x40030be	          0x4885d2	                           test rdx, rdx	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40030c1	        0x4c890c24	                     mov qword [rsp], r9	      1036	refs.c	FUNCTION_56
0x40030c5	     0xf84a0010000	                            je 0x400326b	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40030cb	          0x4889d5	                            mov rbp, rdx	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40030ce	          0x4889fb	                            mov rbx, rdi	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40030d1	          0x4989f5	                            mov r13, rsi	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40030d4	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x40030d9	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x40030de	          0x4889ef	                            mov rdi, rbp	       975	cache.h	FUNCTION_155	CALL_1
0x40030e1	          0x4189cc	                           mov r12d, ecx	       975	cache.h	FUNCTION_155	CALL_1
0x40030e4	          0x4d89c7	                             mov r15, r8	       975	cache.h	FUNCTION_155	CALL_1
0x40030e7	      0xe800000000	                          call 0x40030ec	       975	cache.h	FUNCTION_155	CALL_1
0x40030ec	            0x85c0	                           test eax, eax	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40030ee	     0xf8477010000	                            je 0x400326b	      1037	refs.c	FUNCTION_56	IF_1	CALL_1
0x40030f4	      0x48833c2400	                      cmp qword [rsp], 0	      1011	refs.c	FUNCTION_55	CALL_1
0x40030f9	     0xf84ae010000	                            je 0x40032ad	      1011	refs.c	FUNCTION_55	CALL_1
0x40030ff	      0xbe01000000	                              mov esi, 1	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4003104	          0x4c89ef	                            mov rdi, r13	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4003107	      0xe800000000	                          call 0x400310c	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x400310c	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x400310e	          0x4189c6	                           mov r14d, eax	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4003111	     0xf8539010000	                           jne 0x4003250	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4003117	    0x41f7c4fcffff	                   test r12d, 0xfffffffc	      1021	refs.c	FUNCTION_55	IF_2
0x400311e	     0xf8570010000	                           jne 0x4003294	      1021	refs.c	FUNCTION_55	IF_2
0x4003124	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       987	refs.c	FUNCTION_54	IF_1
0x4003127	        0x4183cc0c	                            or r12d, 0xc	      1024	refs.c	FUNCTION_55
0x400312b	        0x44892424	                   mov dword [rsp], r12d	      1024	refs.c	FUNCTION_55
0x400312f	            0x85c0	                           test eax, eax	       987	refs.c	FUNCTION_54	IF_1
0x4003131	     0xf8551010000	                           jne 0x4003288	       987	refs.c	FUNCTION_54	IF_1
0x4003137	          0x4c89ef	                            mov rdi, r13	       990	refs.c	FUNCTION_54
0x400313a	      0xe800000000	                          call 0x400313f	       990	refs.c	FUNCTION_54
0x400313f	        0x4883f8af	             cmp rax, 0xffffffffffffffaf	       785	git-compat-util.h	FUNCTION_200	IF_1
0x4003143	          0x4889c2	                            mov rdx, rax	       990	refs.c	FUNCTION_54
0x4003146	     0xf872b010000	                            ja 0x4003277	       785	git-compat-util.h	FUNCTION_200	IF_1
0x400314c	     0xf8474010000	                            je 0x40032c6	       785	git-compat-util.h	FUNCTION_200	IF_1
0x4003152	        0x488d7051	                   lea rsi, [rax + 0x51]	       990	refs.c	FUNCTION_54
0x4003156	      0xbf01000000	                              mov edi, 1	       990	refs.c	FUNCTION_54
0x400315b	      0x4889442408	                mov qword [rsp + 8], rax	       990	refs.c	FUNCTION_54
0x4003160	      0xe800000000	                          call 0x4003165	       990	refs.c	FUNCTION_54
0x4003165	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x400316a	        0x488d7850	                   lea rdi, [rax + 0x50]	        53	string3.h	FUNCTION_136	CALL_3
0x400316e	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_136	CALL_3
0x4003171	          0x4989c4	                            mov r12, rax	       990	refs.c	FUNCTION_54
0x4003174	      0xe800000000	                          call 0x4003179	        53	string3.h	FUNCTION_136	CALL_3
0x4003179	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       991	refs.c	FUNCTION_54
0x400317d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       991	refs.c	FUNCTION_54
0x4003181	        0x488d5601	                      lea rdx, [rsi + 1]	       991	refs.c	FUNCTION_54
0x4003185	          0x4839c2	                            cmp rdx, rax	       991	refs.c	FUNCTION_54
0x4003188	            0x7776	                            ja 0x4003200	       991	refs.c	FUNCTION_54
0x400318a	        0x488b4308	                mov rax, qword [rbx + 8]	       991	refs.c	FUNCTION_54
0x400318e	        0x48895318	             mov qword [rbx + 0x18], rdx	       992	refs.c	FUNCTION_54
0x4003192	        0x4c8924f0	            mov qword [rax + rsi*8], r12	       992	refs.c	FUNCTION_54
0x4003196	          0x8b0424	                    mov eax, dword [rsp]	       994	refs.c	FUNCTION_54
0x4003199	      0x4189442428	             mov dword [r12 + 0x28], eax	       994	refs.c	FUNCTION_54
0x400319e	        0x488b4500	                    mov rax, qword [rbp]	        53	string3.h	FUNCTION_136	CALL_3
0x40031a2	        0x49890424	                    mov qword [r12], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40031a6	        0x488b4508	                mov rax, qword [rbp + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x40031aa	      0x4989442408	                mov qword [r12 + 8], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40031af	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x40031b2	      0x4189442410	             mov dword [r12 + 0x10], eax	        53	string3.h	FUNCTION_136	CALL_3
0x40031b7	    0x488b05000000	            mov rax, qword [0x040031be] 	        53	string3.h	FUNCTION_136	CALL_3
0x40031be	      0x4989442414	             mov qword [r12 + 0x14], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40031c3	    0x488b05000000	            mov rax, qword [0x040031ca] 	        53	string3.h	FUNCTION_136	CALL_3
0x40031ca	      0x498944241c	             mov qword [r12 + 0x1c], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40031cf	    0x8b0500000000	            mov eax, dword [0x040031d5] 	        53	string3.h	FUNCTION_136	CALL_3
0x40031d5	      0x4189442424	             mov dword [r12 + 0x24], eax	        53	string3.h	FUNCTION_136	CALL_3
0x40031da	            0x31c0	                            xor eax, eax	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x40031dc	          0x4d85ff	                           test r15, r15	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x40031df	            0x7408	                            je 0x40031e9	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x40031e1	          0x4c89ff	                            mov rdi, r15	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x40031e4	      0xe800000000	                          call 0x40031e9	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x40031e9	      0x4989442440	             mov qword [r12 + 0x40], rax	      1000	refs.c	FUNCTION_54	CALL_4
0x40031ee	        0x4883c418	                           add rsp, 0x18	      1041	refs.c	FUNCTION_56
0x40031f2	          0x4489f0	                           mov eax, r14d	      1041	refs.c	FUNCTION_56
0x40031f5	              0x5b	                                 pop rbx	      1041	refs.c	FUNCTION_56
0x40031f6	              0x5d	                                 pop rbp	      1041	refs.c	FUNCTION_56
0x40031f7	            0x415c	                                 pop r12	      1041	refs.c	FUNCTION_56
0x40031f9	            0x415d	                                 pop r13	      1041	refs.c	FUNCTION_56
0x40031fb	            0x415e	                                 pop r14	      1041	refs.c	FUNCTION_56
0x40031fd	            0x415f	                                 pop r15	      1041	refs.c	FUNCTION_56
0x40031ff	              0xc3	                                     ret	      1041	refs.c	FUNCTION_56
0x4003200	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	      1041	refs.c	FUNCTION_56
0x4003205	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_201	IF_1
0x400320f	          0x48d1ee	                              shr rsi, 1	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003212	          0x4839d6	                            cmp rsi, rdx	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003215	        0x480f43d6	                         cmovae rdx, rsi	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003219	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_201	IF_1
0x400321c	        0x48895310	             mov qword [rbx + 0x10], rdx	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003220	     0xf87b5000000	                            ja 0x40032db	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003226	        0x488b7b08	                mov rdi, qword [rbx + 8]	       991	refs.c	FUNCTION_54
0x400322a	    0x488d34d50000	                        lea rsi, [rdx*8]	       991	refs.c	FUNCTION_54
0x4003232	      0xe800000000	                          call 0x4003237	       991	refs.c	FUNCTION_54
0x4003237	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       991	refs.c	FUNCTION_54
0x400323b	        0x48894308	                mov qword [rbx + 8], rax	       991	refs.c	FUNCTION_54
0x400323f	        0x488d5601	                      lea rdx, [rsi + 1]	       991	refs.c	FUNCTION_54
0x4003243	      0xe946ffffff	                           jmp 0x400318e	       991	refs.c	FUNCTION_54
0x4003248	     0xf1f84000000	                   nop dword [rax + rax]	       991	refs.c	FUNCTION_54
0x4003250	        0x488b3c24	                    mov rdi, qword [rsp]	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4003254	          0x4c89ea	                            mov rdx, r13	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4003257	      0xbe00000000	                              mov esi, 0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x400325c	            0x31c0	                            xor eax, eax	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x400325e	    0x41beffffffff	                    mov r14d, 0xffffffff	      1018	refs.c	FUNCTION_55	IF_1
0x4003264	      0xe800000000	                          call 0x4003269	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4003269	            0xeb83	                           jmp 0x40031ee	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x400326b	      0xbf00000000	                              mov edi, 0	      1038	refs.c	FUNCTION_56	CALL_2
0x4003270	            0x31c0	                            xor eax, eax	      1038	refs.c	FUNCTION_56	CALL_2
0x4003272	      0xe800000000	                          call 0x4003277	      1038	refs.c	FUNCTION_56	CALL_2
0x4003277	      0xbe50000000	                           mov esi, 0x50	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x400327c	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4003281	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4003283	      0xe800000000	                          call 0x4003288	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4003288	      0xbf00000000	                              mov edi, 0	       988	refs.c	FUNCTION_54	CALL_1
0x400328d	            0x31c0	                            xor eax, eax	       988	refs.c	FUNCTION_54	CALL_1
0x400328f	      0xe800000000	                          call 0x4003294	       988	refs.c	FUNCTION_54	CALL_1
0x4003294	          0x4489e1	                           mov ecx, r12d	      1022	refs.c	FUNCTION_55	IF_2
0x4003297	      0xba00000000	                              mov edx, 0	      1022	refs.c	FUNCTION_55	IF_2
0x400329c	      0xbefe030000	                          mov esi, 0x3fe	      1022	refs.c	FUNCTION_55	IF_2
0x40032a1	      0xbf00000000	                              mov edi, 0	      1022	refs.c	FUNCTION_55	IF_2
0x40032a6	            0x31c0	                            xor eax, eax	      1022	refs.c	FUNCTION_55	IF_2
0x40032a8	      0xe800000000	                          call 0x40032ad	      1022	refs.c	FUNCTION_55	IF_2
0x40032ad	      0xb900000000	                              mov ecx, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x40032b2	      0xbaf3030000	                          mov edx, 0x3f3	      1011	refs.c	FUNCTION_55	CALL_1
0x40032b7	      0xbe00000000	                              mov esi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x40032bc	      0xbf00000000	                              mov edi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x40032c1	      0xe800000000	                          call 0x40032c6	      1011	refs.c	FUNCTION_55	CALL_1
0x40032c6	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40032cb	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40032cf	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40032d4	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40032d6	      0xe800000000	                          call 0x40032db	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40032db	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_201	IF_1	CALL_1
0x40032e0	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_201	IF_1	CALL_1
0x40032e5	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_201	IF_1	CALL_1
0x40032e7	      0xe800000000	                          call 0x40032ec	       796	git-compat-util.h	FUNCTION_201	IF_1	CALL_1
refname_match	SWITCH,0:FOR,1:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,2	43
0x40021a0	            0x4155	                                push r13	       493	refs.c	FUNCTION_31
0x40021a2	            0x4154	                                push r12	       493	refs.c	FUNCTION_31
0x40021a4	          0x4989f5	                            mov r13, rsi	       493	refs.c	FUNCTION_31
0x40021a7	              0x55	                                push rbp	       493	refs.c	FUNCTION_31
0x40021a8	              0x53	                                push rbx	       493	refs.c	FUNCTION_31
0x40021a9	          0x4989fc	                            mov r12, rdi	       493	refs.c	FUNCTION_31
0x40021ac	      0xbb00000000	                              mov ebx, 0	       493	refs.c	FUNCTION_31
0x40021b1	        0x4883ec08	                              sub rsp, 8	       493	refs.c	FUNCTION_31
0x40021b5	      0xe800000000	                          call 0x40021ba	       495	refs.c	FUNCTION_31	CALL_1
0x40021ba	    0x488b3d000000	            mov rdi, qword [0x040021c1] 	       497	refs.c	FUNCTION_31	FOR_1
0x40021c1	            0x89c5	                            mov ebp, eax	       497	refs.c	FUNCTION_31	FOR_1
0x40021c3	          0x4885ff	                           test rdi, rdi	       497	refs.c	FUNCTION_31	FOR_1
0x40021c6	            0x7514	                           jne 0x40021dc	       497	refs.c	FUNCTION_31	FOR_1
0x40021c8	            0xeb46	                           jmp 0x4002210	       497	refs.c	FUNCTION_31	FOR_1
0x40021ca	    0x660f1f440000	                    nop word [rax + rax]	       497	refs.c	FUNCTION_31	FOR_1
0x40021d0	        0x4883c308	                              add rbx, 8	       497	refs.c	FUNCTION_31	FOR_1
0x40021d4	          0x488b3b	                    mov rdi, qword [rbx]	       497	refs.c	FUNCTION_31	FOR_1
0x40021d7	          0x4885ff	                           test rdi, rdi	       497	refs.c	FUNCTION_31	FOR_1
0x40021da	            0x7434	                            je 0x4002210	       497	refs.c	FUNCTION_31	FOR_1
0x40021dc	          0x4c89e2	                            mov rdx, r12	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021df	            0x89ee	                            mov esi, ebp	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021e1	            0x31c0	                            xor eax, eax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021e3	      0xe800000000	                          call 0x40021e8	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021e8	          0x4c89ef	                            mov rdi, r13	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021eb	          0x4889c6	                            mov rsi, rax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021ee	      0xe800000000	                          call 0x40021f3	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021f3	            0x85c0	                           test eax, eax	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021f5	            0x75d9	                           jne 0x40021d0	       498	refs.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x40021f7	        0x4883c408	                              add rsp, 8	       504	refs.c	FUNCTION_31
0x40021fb	      0xb801000000	                              mov eax, 1	       499	refs.c	FUNCTION_31	FOR_1	IF_1
0x4002200	              0x5b	                                 pop rbx	       504	refs.c	FUNCTION_31
0x4002201	              0x5d	                                 pop rbp	       504	refs.c	FUNCTION_31
0x4002202	            0x415c	                                 pop r12	       504	refs.c	FUNCTION_31
0x4002204	            0x415d	                                 pop r13	       504	refs.c	FUNCTION_31
0x4002206	              0xc3	                                     ret	       504	refs.c	FUNCTION_31
0x4002207	    0x660f1f840000	                    nop word [rax + rax]	       504	refs.c	FUNCTION_31
0x4002210	        0x4883c408	                              add rsp, 8	       504	refs.c	FUNCTION_31
0x4002214	            0x31c0	                            xor eax, eax	       503	refs.c	FUNCTION_31
0x4002216	              0x5b	                                 pop rbx	       504	refs.c	FUNCTION_31
0x4002217	              0x5d	                                 pop rbp	       504	refs.c	FUNCTION_31
0x4002218	            0x415c	                                 pop r12	       504	refs.c	FUNCTION_31
0x400221a	            0x415d	                                 pop r13	       504	refs.c	FUNCTION_31
0x400221c	              0xc3	                                     ret	       504	refs.c	FUNCTION_31
ref_update_reject_duplicates	SWITCH,0:FOR,1:WHILE,0:ELSE,1:DO,0:IF,2:functions,0:CALL,3	54
0x40066a0	          0x4885f6	                           test rsi, rsi	      1826	refs.c	FUNCTION_99	CALL_1
0x40066a3	            0x4156	                                push r14	      1823	refs.c	FUNCTION_99
0x40066a5	            0x4155	                                push r13	      1823	refs.c	FUNCTION_99
0x40066a7	            0x4154	                                push r12	      1823	refs.c	FUNCTION_99
0x40066a9	              0x55	                                push rbp	      1823	refs.c	FUNCTION_99
0x40066aa	              0x53	                                push rbx	      1823	refs.c	FUNCTION_99
0x40066ab	        0x448b6f08	               mov r13d, dword [rdi + 8]	      1824	refs.c	FUNCTION_99
0x40066af	            0x747e	                            je 0x400672f	      1826	refs.c	FUNCTION_99	CALL_1
0x40066b1	        0x4983fd01	                              cmp r13, 1	      1828	refs.c	FUNCTION_99	FOR_1
0x40066b5	            0x7661	                           jbe 0x4006718	      1828	refs.c	FUNCTION_99	FOR_1
0x40066b7	          0x488b1f	                    mov rbx, qword [rdi]	      1828	refs.c	FUNCTION_99	FOR_1
0x40066ba	          0x4989f6	                            mov r14, rsi	      1828	refs.c	FUNCTION_99	FOR_1
0x40066bd	      0xbd01000000	                              mov ebp, 1	      1828	refs.c	FUNCTION_99	FOR_1
0x40066c2	        0x4883c310	                           add rbx, 0x10	      1828	refs.c	FUNCTION_99	FOR_1
0x40066c6	            0xeb17	                           jmp 0x40066df	      1828	refs.c	FUNCTION_99	FOR_1
0x40066c8	     0xf1f84000000	                   nop dword [rax + rax]	      1828	refs.c	FUNCTION_99	FOR_1
0x40066d0	            0x7f51	                            jg 0x4006723	      1837	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2
0x40066d2	        0x4883c501	                              add rbp, 1	      1828	refs.c	FUNCTION_99	FOR_1
0x40066d6	        0x4883c310	                           add rbx, 0x10	      1828	refs.c	FUNCTION_99	FOR_1
0x40066da	          0x4939ed	                            cmp r13, rbp	      1828	refs.c	FUNCTION_99	FOR_1
0x40066dd	            0x7439	                            je 0x4006718	      1828	refs.c	FUNCTION_99	FOR_1
0x40066df	          0x4c8b23	                    mov r12, qword [rbx]	      1829	refs.c	FUNCTION_99	FOR_1
0x40066e2	        0x488b7bf0	             mov rdi, qword [rbx - 0x10]	      1829	refs.c	FUNCTION_99	FOR_1
0x40066e6	          0x4c89e6	                            mov rsi, r12	      1829	refs.c	FUNCTION_99	FOR_1
0x40066e9	      0xe800000000	                          call 0x40066ee	      1829	refs.c	FUNCTION_99	FOR_1
0x40066ee	          0x83f800	                              cmp eax, 0	      1832	refs.c	FUNCTION_99	FOR_1	IF_1
0x40066f1	            0x75dd	                           jne 0x40066d0	      1832	refs.c	FUNCTION_99	FOR_1	IF_1
0x40066f3	          0x4c89e2	                            mov rdx, r12	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_2
0x40066f6	          0x4c89f7	                            mov rdi, r14	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_2
0x40066f9	      0xbe00000000	                              mov esi, 0	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_2
0x40066fe	      0xe800000000	                          call 0x4006703	      1833	refs.c	FUNCTION_99	FOR_1	IF_1	CALL_2
0x4006703	              0x5b	                                 pop rbx	      1842	refs.c	FUNCTION_99
0x4006704	      0xb801000000	                              mov eax, 1	      1836	refs.c	FUNCTION_99	FOR_1	IF_1
0x4006709	              0x5d	                                 pop rbp	      1842	refs.c	FUNCTION_99
0x400670a	            0x415c	                                 pop r12	      1842	refs.c	FUNCTION_99
0x400670c	            0x415d	                                 pop r13	      1842	refs.c	FUNCTION_99
0x400670e	            0x415e	                                 pop r14	      1842	refs.c	FUNCTION_99
0x4006710	              0xc3	                                     ret	      1842	refs.c	FUNCTION_99
0x4006711	     0xf1f80000000	                         nop dword [rax]	      1842	refs.c	FUNCTION_99
0x4006718	              0x5b	                                 pop rbx	      1842	refs.c	FUNCTION_99
0x4006719	            0x31c0	                            xor eax, eax	      1841	refs.c	FUNCTION_99
0x400671b	              0x5d	                                 pop rbp	      1842	refs.c	FUNCTION_99
0x400671c	            0x415c	                                 pop r12	      1842	refs.c	FUNCTION_99
0x400671e	            0x415d	                                 pop r13	      1842	refs.c	FUNCTION_99
0x4006720	            0x415e	                                 pop r14	      1842	refs.c	FUNCTION_99
0x4006722	              0xc3	                                     ret	      1842	refs.c	FUNCTION_99
0x4006723	      0xbf00000000	                              mov edi, 0	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_3
0x4006728	            0x31c0	                            xor eax, eax	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_3
0x400672a	      0xe800000000	                          call 0x400672f	      1838	refs.c	FUNCTION_99	FOR_1	ELSE_1	IF_2	CALL_3
0x400672f	      0xb900000000	                              mov ecx, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x4006734	      0xba22070000	                          mov edx, 0x722	      1826	refs.c	FUNCTION_99	CALL_1
0x4006739	      0xbe00000000	                              mov esi, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x400673e	      0xbf00000000	                              mov edi, 0	      1826	refs.c	FUNCTION_99	CALL_1
0x4006743	      0xe800000000	                          call 0x4006748	      1826	refs.c	FUNCTION_99	CALL_1
ref_transaction_verify	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,2	119
0x4003570	            0x4157	                                push r15	      1061	refs.c	FUNCTION_58
0x4003572	            0x4156	                                push r14	      1061	refs.c	FUNCTION_58
0x4003574	            0x4155	                                push r13	      1061	refs.c	FUNCTION_58
0x4003576	            0x4154	                                push r12	      1061	refs.c	FUNCTION_58
0x4003578	              0x55	                                push rbp	      1061	refs.c	FUNCTION_58
0x4003579	              0x53	                                push rbx	      1061	refs.c	FUNCTION_58
0x400357a	        0x4883ec08	                              sub rsp, 8	      1061	refs.c	FUNCTION_58
0x400357e	          0x4885d2	                           test rdx, rdx	      1062	refs.c	FUNCTION_58	IF_1
0x4003581	     0xf84a7010000	                            je 0x400372e	      1062	refs.c	FUNCTION_58	IF_1
0x4003587	          0x4d85c0	                             test r8, r8	      1011	refs.c	FUNCTION_55	CALL_1
0x400358a	          0x4c89c5	                             mov rbp, r8	      1011	refs.c	FUNCTION_55	CALL_1
0x400358d	     0xf8482010000	                            je 0x4003715	      1011	refs.c	FUNCTION_55	CALL_1
0x4003593	          0x4889fb	                            mov rbx, rdi	      1011	refs.c	FUNCTION_55	CALL_1
0x4003596	          0x4889f7	                            mov rdi, rsi	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x4003599	          0x4989f6	                            mov r14, rsi	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x400359c	          0x4989d5	                            mov r13, rdx	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x400359f	          0x4189cc	                           mov r12d, ecx	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x40035a2	      0xe800000000	                          call 0x40035a7	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x40035a7	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40035a9	     0xf8401010000	                            je 0x40036b0	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x40035af	    0x41f7c4fcffff	                   test r12d, 0xfffffffc	      1021	refs.c	FUNCTION_55	IF_2
0x40035b6	     0xf8540010000	                           jne 0x40036fc	      1021	refs.c	FUNCTION_55	IF_2
0x40035bc	          0x8b4320	            mov eax, dword [rbx + 0x20] 	       987	refs.c	FUNCTION_54	IF_1
0x40035bf	        0x4183cc08	                              or r12d, 8	      1024	refs.c	FUNCTION_55
0x40035c3	            0x85c0	                           test eax, eax	       987	refs.c	FUNCTION_54	IF_1
0x40035c5	     0xf8510010000	                           jne 0x40036db	       987	refs.c	FUNCTION_54	IF_1
0x40035cb	          0x4c89f7	                            mov rdi, r14	       990	refs.c	FUNCTION_54
0x40035ce	      0xe800000000	                          call 0x40035d3	       990	refs.c	FUNCTION_54
0x40035d3	        0x4883f8af	             cmp rax, 0xffffffffffffffaf	       785	git-compat-util.h	FUNCTION_200	IF_1
0x40035d7	          0x4989c7	                            mov r15, rax	       990	refs.c	FUNCTION_54
0x40035da	     0xf87e7000000	                            ja 0x40036c7	       785	git-compat-util.h	FUNCTION_200	IF_1
0x40035e0	     0xf8401010000	                            je 0x40036e7	       785	git-compat-util.h	FUNCTION_200	IF_1
0x40035e6	        0x488d7051	                   lea rsi, [rax + 0x51]	       990	refs.c	FUNCTION_54
0x40035ea	      0xbf01000000	                              mov edi, 1	       990	refs.c	FUNCTION_54
0x40035ef	      0xe800000000	                          call 0x40035f4	       990	refs.c	FUNCTION_54
0x40035f4	        0x488d7850	                   lea rdi, [rax + 0x50]	        53	string3.h	FUNCTION_136	CALL_3
0x40035f8	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_136	CALL_3
0x40035fb	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_136	CALL_3
0x40035fe	          0x4889c5	                            mov rbp, rax	       990	refs.c	FUNCTION_54
0x4003601	      0xe800000000	                          call 0x4003606	        53	string3.h	FUNCTION_136	CALL_3
0x4003606	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       991	refs.c	FUNCTION_54
0x400360a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       991	refs.c	FUNCTION_54
0x400360e	        0x488d5101	                      lea rdx, [rcx + 1]	       991	refs.c	FUNCTION_54
0x4003612	          0x4839c2	                            cmp rdx, rax	       991	refs.c	FUNCTION_54
0x4003615	            0x7749	                            ja 0x4003660	       991	refs.c	FUNCTION_54
0x4003617	        0x488b4308	                mov rax, qword [rbx + 8]	       991	refs.c	FUNCTION_54
0x400361b	        0x48895318	             mov qword [rbx + 0x18], rdx	       992	refs.c	FUNCTION_54
0x400361f	        0x48892cc8	            mov qword [rax + rcx*8], rbp	       992	refs.c	FUNCTION_54
0x4003623	            0x31c0	                            xor eax, eax	      1028	refs.c	FUNCTION_55
0x4003625	        0x44896528	           mov dword [rbp + 0x28], r12d 	       994	refs.c	FUNCTION_54
0x4003629	        0x498b5500	                    mov rdx, qword [r13]	        53	string3.h	FUNCTION_136	CALL_3
0x400362d	        0x48895514	            mov qword [rbp + 0x14], rdx 	        53	string3.h	FUNCTION_136	CALL_3
0x4003631	        0x498b5508	                mov rdx, qword [r13 + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x4003635	        0x4889551c	            mov qword [rbp + 0x1c], rdx 	        53	string3.h	FUNCTION_136	CALL_3
0x4003639	        0x418b5510	            mov edx, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x400363d	    0x48c745400000	               mov qword [rbp + 0x40], 0	      1000	refs.c	FUNCTION_54	CALL_4
0x4003645	          0x895524	            mov dword [rbp + 0x24], edx 	        53	string3.h	FUNCTION_136	CALL_3
0x4003648	        0x4883c408	                              add rsp, 8	      1067	refs.c	FUNCTION_58
0x400364c	              0x5b	                                 pop rbx	      1067	refs.c	FUNCTION_58
0x400364d	              0x5d	                                 pop rbp	      1067	refs.c	FUNCTION_58
0x400364e	            0x415c	                                 pop r12	      1067	refs.c	FUNCTION_58
0x4003650	            0x415d	                                 pop r13	      1067	refs.c	FUNCTION_58
0x4003652	            0x415e	                                 pop r14	      1067	refs.c	FUNCTION_58
0x4003654	            0x415f	                                 pop r15	      1067	refs.c	FUNCTION_58
0x4003656	              0xc3	                                     ret	      1067	refs.c	FUNCTION_58
0x4003657	    0x660f1f840000	                    nop word [rax + rax]	      1067	refs.c	FUNCTION_58
0x4003660	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	      1067	refs.c	FUNCTION_58
0x4003665	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_201	IF_1
0x400366f	          0x48d1ee	                              shr rsi, 1	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003672	          0x4839d6	                            cmp rsi, rdx	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003675	        0x480f43d6	                         cmovae rdx, rsi	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003679	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_201	IF_1
0x400367c	        0x48895310	             mov qword [rbx + 0x10], rdx	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003680	     0xf87b4000000	                            ja 0x400373a	       795	git-compat-util.h	FUNCTION_201	IF_1
0x4003686	        0x488b7b08	                mov rdi, qword [rbx + 8]	       991	refs.c	FUNCTION_54
0x400368a	    0x488d34d50000	                        lea rsi, [rdx*8]	       991	refs.c	FUNCTION_54
0x4003692	      0xe800000000	                          call 0x4003697	       991	refs.c	FUNCTION_54
0x4003697	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       991	refs.c	FUNCTION_54
0x400369b	        0x48894308	                mov qword [rbx + 8], rax	       991	refs.c	FUNCTION_54
0x400369f	        0x488d5101	                      lea rdx, [rcx + 1]	       991	refs.c	FUNCTION_54
0x40036a3	      0xe973ffffff	                           jmp 0x400361b	       991	refs.c	FUNCTION_54
0x40036a8	     0xf1f84000000	                   nop dword [rax + rax]	       991	refs.c	FUNCTION_54
0x40036b0	          0x4c89f2	                            mov rdx, r14	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x40036b3	      0xbe00000000	                              mov esi, 0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x40036b8	          0x4889ef	                            mov rdi, rbp	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x40036bb	      0xe800000000	                          call 0x40036c0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x40036c0	      0xb8ffffffff	                     mov eax, 0xffffffff	      1018	refs.c	FUNCTION_55	IF_1
0x40036c5	            0xeb81	                           jmp 0x4003648	      1018	refs.c	FUNCTION_55	IF_1
0x40036c7	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036ca	      0xbe50000000	                           mov esi, 0x50	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036cf	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036d4	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036d6	      0xe800000000	                          call 0x40036db	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036db	      0xbf00000000	                              mov edi, 0	       988	refs.c	FUNCTION_54	CALL_1
0x40036e0	            0x31c0	                            xor eax, eax	       988	refs.c	FUNCTION_54	CALL_1
0x40036e2	      0xe800000000	                          call 0x40036e7	       988	refs.c	FUNCTION_54	CALL_1
0x40036e7	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036ec	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036f0	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036f5	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036f7	      0xe800000000	                          call 0x40036fc	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40036fc	          0x4489e1	                           mov ecx, r12d	      1022	refs.c	FUNCTION_55	IF_2
0x40036ff	      0xba00000000	                              mov edx, 0	      1022	refs.c	FUNCTION_55	IF_2
0x4003704	      0xbefe030000	                          mov esi, 0x3fe	      1022	refs.c	FUNCTION_55	IF_2
0x4003709	      0xbf00000000	                              mov edi, 0	      1022	refs.c	FUNCTION_55	IF_2
0x400370e	            0x31c0	                            xor eax, eax	      1022	refs.c	FUNCTION_55	IF_2
0x4003710	      0xe800000000	                          call 0x4003715	      1022	refs.c	FUNCTION_55	IF_2
0x4003715	      0xb900000000	                              mov ecx, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x400371a	      0xbaf3030000	                          mov edx, 0x3f3	      1011	refs.c	FUNCTION_55	CALL_1
0x400371f	      0xbe00000000	                              mov esi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4003724	      0xbf00000000	                              mov edi, 0	      1011	refs.c	FUNCTION_55	CALL_1
0x4003729	      0xe800000000	                          call 0x400372e	      1011	refs.c	FUNCTION_55	CALL_1
0x400372e	      0xbf00000000	                              mov edi, 0	      1063	refs.c	FUNCTION_58	CALL_1
0x4003733	            0x31c0	                            xor eax, eax	      1063	refs.c	FUNCTION_58	CALL_1
0x4003735	      0xe800000000	                          call 0x400373a	      1063	refs.c	FUNCTION_58	CALL_1
0x400373a	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_201	IF_1	CALL_1
0x400373f	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_201	IF_1	CALL_1
0x4003744	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_201	IF_1	CALL_1
0x4003746	      0xe800000000	                          call 0x400374b	       796	git-compat-util.h	FUNCTION_201	IF_1	CALL_1
prettify_refname	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,3	41
0x4002100	          0x4889f8	                            mov rax, rdi	       474	refs.c	FUNCTION_30
0x4002103	      0xba00000000	                              mov edx, 0	       474	refs.c	FUNCTION_30
0x4002108	            0xeb13	                           jmp 0x400211d	       474	refs.c	FUNCTION_30
0x400210a	    0x660f1f440000	                    nop word [rax + rax]	       474	refs.c	FUNCTION_30
0x4002110	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002114	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002118	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x400211b	            0x7513	                           jne 0x4002130	       488	git-compat-util.h	FUNCTION_193	DO_1
0x400211d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002120	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002122	            0x75ec	                           jne 0x4002110	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002124	            0xf3c3	                                     ret	       480	refs.c	FUNCTION_30
0x4002126	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       480	refs.c	FUNCTION_30
0x4002130	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002133	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002138	            0xeb13	                           jmp 0x400214d	       488	git-compat-util.h	FUNCTION_193	DO_1
0x400213a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002140	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002144	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002148	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x400214b	            0x7513	                           jne 0x4002160	       488	git-compat-util.h	FUNCTION_193	DO_1
0x400214d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002150	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002152	            0x75ec	                           jne 0x4002140	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002154	            0xebce	                           jmp 0x4002124	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002156	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002160	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002163	      0xba00000000	                              mov edx, 0	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002168	            0xeb13	                           jmp 0x400217d	       488	git-compat-util.h	FUNCTION_193	DO_1
0x400216a	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002170	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002174	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002178	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x400217b	            0x7513	                           jne 0x4002190	       488	git-compat-util.h	FUNCTION_193	DO_1
0x400217d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002180	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002182	            0x75ec	                           jne 0x4002170	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002184	            0xeb9e	                           jmp 0x4002124	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4002190	          0x4889f8	                            mov rax, rdi	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4002193	              0xc3	                                     ret	       480	refs.c	FUNCTION_30
ref_is_hidden	SWITCH,0:FOR,1:WHILE,0:ELSE,1:DO,0:IF,4:functions,0:CALL,1	50
0x4003dc0	    0x488b05000000	            mov rax, qword [0x04003dc7] 	      1249	refs.c	FUNCTION_63	IF_1
0x4003dc7	          0x4885c0	                           test rax, rax	      1249	refs.c	FUNCTION_63	IF_1
0x4003dca	            0x746d	                            je 0x4003e39	      1249	refs.c	FUNCTION_63	IF_1
0x4003dcc	        0x448b5008	               mov r10d, dword [rax + 8]	      1251	refs.c	FUNCTION_63	FOR_1
0x4003dd0	        0x4183ea01	                             sub r10d, 1	      1251	refs.c	FUNCTION_63	FOR_1
0x4003dd4	            0x7863	                            js 0x4003e39	      1251	refs.c	FUNCTION_63	FOR_1
0x4003dd6	          0x4d63ca	                         movsxd r9, r10d	      1251	refs.c	FUNCTION_63	FOR_1
0x4003dd9	        0x49c1e104	                               shl r9, 4	      1251	refs.c	FUNCTION_63	FOR_1
0x4003ddd	          0x4c0308	                     add r9, qword [rax]	      1251	refs.c	FUNCTION_63	FOR_1
0x4003de0	          0x498b09	                     mov rcx, qword [r9]	      1252	refs.c	FUNCTION_63	FOR_1
0x4003de3	      0xb801000000	                              mov eax, 1	      1252	refs.c	FUNCTION_63	FOR_1
0x4003de8	        0x440fb601	                   movzx r8d, byte [rcx]	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x4003dec	        0x4180f821	                           cmp r8b, 0x21	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x4003df0	            0x744e	                            je 0x4003e40	      1257	refs.c	FUNCTION_63	FOR_1	IF_2
0x4003df2	        0x4180f85e	                           cmp r8b, 0x5e	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x4003df6	          0x4889fa	                            mov rdx, rdi	      1266	refs.c	FUNCTION_63	FOR_1	ELSE_1
0x4003df9	            0x7459	                            je 0x4003e54	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x4003dfb	          0x4885d2	                           test rdx, rdx	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003dfe	            0x7516	                           jne 0x4003e16	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003e00	            0xeb29	                           jmp 0x4003e2b	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003e02	    0x660f1f440000	                    nop word [rax + rax]	      1270	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003e08	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4003e0c	        0x4883c101	                              add rcx, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4003e10	        0x443a42ff	                 cmp r8b, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4003e14	            0x7515	                           jne 0x4003e2b	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4003e16	        0x440fb601	                   movzx r8d, byte [rcx]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4003e1a	          0x4584c0	                           test r8b, r8b	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4003e1d	            0x75e9	                           jne 0x4003e08	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4003e1f	           0xfb612	                   movzx edx, byte [rdx]	      1272	refs.c	FUNCTION_63	FOR_1	IF_4
0x4003e22	            0x84d2	                             test dl, dl	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4003e24	            0x7437	                            je 0x4003e5d	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4003e26	          0x80fa2f	                            cmp dl, 0x2f	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4003e29	            0x7432	                            je 0x4003e5d	      1271	refs.c	FUNCTION_63	FOR_1	IF_4	CALL_1
0x4003e2b	        0x4183ea01	                             sub r10d, 1	      1251	refs.c	FUNCTION_63	FOR_1
0x4003e2f	        0x4983e910	                            sub r9, 0x10	      1251	refs.c	FUNCTION_63	FOR_1
0x4003e33	        0x4183faff	            cmp r10d, 0xffffffffffffffff	      1251	refs.c	FUNCTION_63	FOR_1
0x4003e37	            0x75a7	                           jne 0x4003de0	      1251	refs.c	FUNCTION_63	FOR_1
0x4003e39	            0x31c0	                            xor eax, eax	      1250	refs.c	FUNCTION_63	IF_1
0x4003e3b	              0xc3	                                     ret	      1250	refs.c	FUNCTION_63	IF_1
0x4003e3c	         0xf1f4000	                         nop dword [rax]	      1250	refs.c	FUNCTION_63	IF_1
0x4003e40	      0x440fb64101	               movzx r8d, byte [rcx + 1]	      1250	refs.c	FUNCTION_63	IF_1
0x4003e45	            0x31c0	                            xor eax, eax	      1259	refs.c	FUNCTION_63	FOR_1	IF_2
0x4003e47	        0x4883c101	                              add rcx, 1	      1259	refs.c	FUNCTION_63	FOR_1	IF_2
0x4003e4b	          0x4889fa	                            mov rdx, rdi	      1266	refs.c	FUNCTION_63	FOR_1	ELSE_1
0x4003e4e	        0x4180f85e	                           cmp r8b, 0x5e	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x4003e52	            0x75a7	                           jne 0x4003dfb	      1262	refs.c	FUNCTION_63	FOR_1	IF_3
0x4003e54	        0x4883c101	                              add rcx, 1	      1264	refs.c	FUNCTION_63	FOR_1	IF_3
0x4003e58	          0x4889f2	                            mov rdx, rsi	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
0x4003e5b	            0xeb9e	                           jmp 0x4003dfb	      1263	refs.c	FUNCTION_63	FOR_1	IF_3
0x4003e5d	            0xf3c3	                                     ret	      1276	refs.c	FUNCTION_63
dwim_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,3	48
0x4002620	            0x4156	                                push r14	       540	refs.c	FUNCTION_34
0x4002622	            0x4155	                                push r13	       540	refs.c	FUNCTION_34
0x4002624	          0x4989d5	                            mov r13, rdx	       540	refs.c	FUNCTION_34
0x4002627	            0x4154	                                push r12	       540	refs.c	FUNCTION_34
0x4002629	              0x55	                                push rbp	       540	refs.c	FUNCTION_34
0x400262a	          0x4989ce	                            mov r14, rcx	       540	refs.c	FUNCTION_34
0x400262d	              0x53	                                push rbx	       540	refs.c	FUNCTION_34
0x400262e	            0x31c9	                            xor ecx, ecx	       527	refs.c	FUNCTION_33	CALL_1
0x4002630	            0x89f3	                            mov ebx, esi	       540	refs.c	FUNCTION_34
0x4002632	          0x4889fd	                            mov rbp, rdi	       540	refs.c	FUNCTION_34
0x4002635	          0x4531e4	                          xor r12d, r12d	       540	refs.c	FUNCTION_34
0x4002638	        0x4883ec30	                           sub rsp, 0x30	       540	refs.c	FUNCTION_34
0x400263c	      0x488d542410	                   lea rdx, [rsp + 0x10]	       527	refs.c	FUNCTION_33	CALL_1
0x4002641	    0x48c744241000	               mov qword [rsp + 0x10], 0	       526	refs.c	FUNCTION_33
0x400264a	    0x48c744241800	               mov qword [rsp + 0x18], 0	       526	refs.c	FUNCTION_33
0x4002653	    0x64488b042528	                mov rax, qword fs:[0x28]	       540	refs.c	FUNCTION_34
0x400265c	      0x4889442428	             mov qword [rsp + 0x28], rax	       540	refs.c	FUNCTION_34
0x4002661	            0x31c0	                            xor eax, eax	       540	refs.c	FUNCTION_34
0x4002663	    0x48c744242000	               mov qword [rsp + 0x20], 0	       526	refs.c	FUNCTION_33
0x400266c	      0xe800000000	                          call 0x4002671	       527	refs.c	FUNCTION_33	CALL_1
0x4002671	            0x39d8	                            cmp eax, ebx	       529	refs.c	FUNCTION_33	IF_1
0x4002673	            0x7519	                           jne 0x400268e	       529	refs.c	FUNCTION_33	IF_1
0x4002675	      0x488d742408	                      lea rsi, [rsp + 8]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400267a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400267f	      0xe800000000	                          call 0x4002684	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x4002684	        0x8b5c2408	                mov ebx, dword [rsp + 8]	       532	refs.c	FUNCTION_33	IF_1
0x4002688	          0x4889c5	                            mov rbp, rax	       531	refs.c	FUNCTION_33	IF_1	CALL_2
0x400268b	          0x4989c4	                            mov r12, rax	       533	refs.c	FUNCTION_33	IF_1
0x400268e	          0x4c89f1	                            mov rcx, r14	       542	refs.c	FUNCTION_34	CALL_2
0x4002691	            0x89de	                            mov esi, ebx	       542	refs.c	FUNCTION_34	CALL_2
0x4002693	          0x4c89ea	                            mov rdx, r13	       542	refs.c	FUNCTION_34	CALL_2
0x4002696	          0x4889ef	                            mov rdi, rbp	       542	refs.c	FUNCTION_34	CALL_2
0x4002699	      0xe800000000	                          call 0x400269e	       542	refs.c	FUNCTION_34	CALL_2
0x400269e	          0x4c89e7	                            mov rdi, r12	       543	refs.c	FUNCTION_34	CALL_3
0x40026a1	            0x89c3	                            mov ebx, eax	       542	refs.c	FUNCTION_34	CALL_2
0x40026a3	      0xe800000000	                          call 0x40026a8	       543	refs.c	FUNCTION_34	CALL_3
0x40026a8	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       545	refs.c	FUNCTION_34
0x40026ad	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       545	refs.c	FUNCTION_34
0x40026b6	            0x89d8	                            mov eax, ebx	       545	refs.c	FUNCTION_34
0x40026b8	            0x750d	                           jne 0x40026c7	       545	refs.c	FUNCTION_34
0x40026ba	        0x4883c430	                           add rsp, 0x30	       545	refs.c	FUNCTION_34
0x40026be	              0x5b	                                 pop rbx	       545	refs.c	FUNCTION_34
0x40026bf	              0x5d	                                 pop rbp	       545	refs.c	FUNCTION_34
0x40026c0	            0x415c	                                 pop r12	       545	refs.c	FUNCTION_34
0x40026c2	            0x415d	                                 pop r13	       545	refs.c	FUNCTION_34
0x40026c4	            0x415e	                                 pop r14	       545	refs.c	FUNCTION_34
0x40026c6	              0xc3	                                     ret	       545	refs.c	FUNCTION_34
0x40026c7	      0xe800000000	                          call 0x40026cc	       545	refs.c	FUNCTION_34
read_ref_at	SWITCH,0:FOR,0:WHILE,0:ELSE,1:DO,0:IF,3:functions,0:CALL,4	126
0x4002910	            0x4155	                                push r13	       905	refs.c	FUNCTION_50
0x4002912	            0x4154	                                push r12	       905	refs.c	FUNCTION_50
0x4002914	          0x4989fc	                            mov r12, rdi	       905	refs.c	FUNCTION_50
0x4002917	              0x55	                                push rbp	       905	refs.c	FUNCTION_50
0x4002918	              0x53	                                push rbx	       905	refs.c	FUNCTION_50
0x4002919	            0x89f5	                            mov ebp, esi	       905	refs.c	FUNCTION_50
0x400291b	            0x89ce	                            mov esi, ecx	       905	refs.c	FUNCTION_50
0x400291d	      0xb90f000000	                            mov ecx, 0xf	        90	string3.h	FUNCTION_139	CALL_5
0x4002922	    0x4881ec880000	                           sub rsp, 0x88	       905	refs.c	FUNCTION_50
0x4002929	    0x4c8b2d000000	            mov r13, qword [0x04002930] 	      2040	refs.c	FUNCTION_107	CALL_2
0x4002930	    0x64488b042528	                mov rax, qword fs:[0x28]	       905	refs.c	FUNCTION_50
0x4002939	      0x4889442478	             mov qword [rsp + 0x78], rax	       905	refs.c	FUNCTION_50
0x400293e	            0x31c0	                            xor eax, eax	       905	refs.c	FUNCTION_50
0x4002940	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_139	CALL_5
0x4002943	          0x4889e3	                            mov rbx, rsp	        90	string3.h	FUNCTION_139	CALL_5
0x4002946	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_139	CALL_5
0x4002949	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	       913	refs.c	FUNCTION_50
0x4002951	        0x4c892424	                    mov qword [rsp], r12	       909	refs.c	FUNCTION_50
0x4002955	      0x4889542408	                mov qword [rsp + 8], rdx	       910	refs.c	FUNCTION_50
0x400295a	        0x89742410	             mov dword [rsp + 0x10], esi	       911	refs.c	FUNCTION_50
0x400295e	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4002962	      0x4c894c2458	              mov qword [rsp + 0x58], r9	       912	refs.c	FUNCTION_50
0x4002967	      0x4889442460	             mov qword [rsp + 0x60], rax	       913	refs.c	FUNCTION_50
0x400296c	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	       914	refs.c	FUNCTION_50
0x4002974	      0x4c89442418	              mov qword [rsp + 0x18], r8	       916	refs.c	FUNCTION_50
0x4002979	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x400297c	      0x4889442468	             mov qword [rsp + 0x68], rax	       914	refs.c	FUNCTION_50
0x4002981	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	       915	refs.c	FUNCTION_50
0x4002989	      0x4889442470	             mov qword [rsp + 0x70], rax	       915	refs.c	FUNCTION_50
0x400298e	            0x7470	                            je 0x4002a00	      1669	refs.c	FUNCTION_89	IF_1
0x4002990	          0x488b07	                    mov rax, qword [rdi]	      2033	refs.c	FUNCTION_106	CALL_1
0x4002993	          0x4889d9	                            mov rcx, rbx	      2033	refs.c	FUNCTION_106	CALL_1
0x4002996	      0xba00000000	                              mov edx, 0	      2033	refs.c	FUNCTION_106	CALL_1
0x400299b	          0x4c89e6	                            mov rsi, r12	      2033	refs.c	FUNCTION_106	CALL_1
0x400299e	    0xff9088000000	                 call qword [rax + 0x88]	      2033	refs.c	FUNCTION_106	CALL_1
0x40029a4	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       920	refs.c	FUNCTION_50	IF_1
0x40029a8	            0x85c9	                           test ecx, ecx	       920	refs.c	FUNCTION_50	IF_1
0x40029aa	            0x7514	                           jne 0x40029c0	       920	refs.c	FUNCTION_50	IF_1
0x40029ac	          0x83e501	                              and ebp, 1	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x40029af	            0x743f	                            je 0x40029f0	       921	refs.c	FUNCTION_50	IF_1	IF_2
0x40029b1	      0xbf80000000	                           mov edi, 0x80	       922	refs.c	FUNCTION_50	IF_1	CALL_2
0x40029b6	      0xe800000000	                          call 0x40029bb	       922	refs.c	FUNCTION_50	IF_1	CALL_2
0x40029bb	       0xf1f440000	                   nop dword [rax + rax]	       922	refs.c	FUNCTION_50	IF_1	CALL_2
0x40029c0	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       926	refs.c	FUNCTION_50	IF_3
0x40029c4	            0x31c0	                            xor eax, eax	       927	refs.c	FUNCTION_50	IF_3
0x40029c6	            0x85d2	                           test edx, edx	       926	refs.c	FUNCTION_50	IF_3
0x40029c8	     0xf84a2000000	                            je 0x4002a70	       926	refs.c	FUNCTION_50	IF_3
0x40029ce	      0x488b5c2478	            mov rbx, qword [rsp + 0x78] 	       932	refs.c	FUNCTION_50
0x40029d3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       932	refs.c	FUNCTION_50
0x40029dc	     0xf85bc000000	                           jne 0x4002a9e	       932	refs.c	FUNCTION_50
0x40029e2	    0x4881c4880000	                           add rsp, 0x88	       932	refs.c	FUNCTION_50
0x40029e9	              0x5b	                                 pop rbx	       932	refs.c	FUNCTION_50
0x40029ea	              0x5d	                                 pop rbp	       932	refs.c	FUNCTION_50
0x40029eb	            0x415c	                                 pop r12	       932	refs.c	FUNCTION_50
0x40029ed	            0x415d	                                 pop r13	       932	refs.c	FUNCTION_50
0x40029ef	              0xc3	                                     ret	       932	refs.c	FUNCTION_50
0x40029f0	          0x4c89e6	                            mov rsi, r12	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x40029f3	      0xbf00000000	                              mov edi, 0	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x40029f8	            0x31c0	                            xor eax, eax	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x40029fa	      0xe800000000	                          call 0x40029ff	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x40029ff	              0x90	                                     nop	       924	refs.c	FUNCTION_50	IF_1	CALL_3
0x4002a00	        0x4d8b4d00	                     mov r9, qword [r13]	      1672	refs.c	FUNCTION_89	IF_2
0x4002a04	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4002a07	     0xf84e4000000	                            je 0x4002af1	      1672	refs.c	FUNCTION_89	IF_2
0x4002a0d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4002a12	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4002a18	     0xf1f84000000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4002a20	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002a24	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002a29	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002a2c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002a2e	            0x7420	                            je 0x4002a50	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002a30	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4002a33	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4002a36	            0x75e8	                           jne 0x4002a20	        27	refs.c	FUNCTION_1	FOR_1
0x4002a38	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4002a3d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4002a42	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4002a44	      0xe800000000	                          call 0x4002a49	      1661	refs.c	FUNCTION_88	CALL_2
0x4002a49	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4002a50	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4002a53	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4002a58	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4002a5b	        0x49894518	             mov qword [r13 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4002a5f	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4002a62	      0xe929ffffff	                           jmp 0x4002990	      1676	refs.c	FUNCTION_89
0x4002a67	    0x660f1f840000	                    nop word [rax + rax]	      1676	refs.c	FUNCTION_89
0x4002a70	    0x488b2d000000	            mov rbp, qword [0x04002a77] 	      2053	refs.c	FUNCTION_109	CALL_2
0x4002a77	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4002a7b	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4002a7e	            0x7428	                            je 0x4002aa8	      1669	refs.c	FUNCTION_89	IF_1
0x4002a80	          0x488b07	                    mov rax, qword [rdi]	      2047	refs.c	FUNCTION_108	CALL_1
0x4002a83	          0x4889d9	                            mov rcx, rbx	      2047	refs.c	FUNCTION_108	CALL_1
0x4002a86	      0xba00000000	                              mov edx, 0	      2047	refs.c	FUNCTION_108	CALL_1
0x4002a8b	          0x4c89e6	                            mov rsi, r12	      2047	refs.c	FUNCTION_108	CALL_1
0x4002a8e	    0xff9080000000	                 call qword [rax + 0x80]	      2047	refs.c	FUNCTION_108	CALL_1
0x4002a94	      0xb801000000	                              mov eax, 1	       931	refs.c	FUNCTION_50
0x4002a99	      0xe930ffffff	                           jmp 0x40029ce	       931	refs.c	FUNCTION_50
0x4002a9e	      0xe800000000	                          call 0x4002aa3	       932	refs.c	FUNCTION_50
0x4002aa3	       0xf1f440000	                   nop dword [rax + rax]	       932	refs.c	FUNCTION_50
0x4002aa8	        0x4c8b4d00	                     mov r9, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x4002aac	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4002aaf	            0x7440	                            je 0x4002af1	      1672	refs.c	FUNCTION_89	IF_2
0x4002ab1	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4002ab6	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4002abc	         0xf1f4000	                         nop dword [rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4002ac0	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002ac4	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002ac9	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002acc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002ace	            0x740d	                            je 0x4002add	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002ad0	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4002ad3	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4002ad6	            0x75e8	                           jne 0x4002ac0	        27	refs.c	FUNCTION_1	FOR_1
0x4002ad8	      0xe95bffffff	                           jmp 0x4002a38	        27	refs.c	FUNCTION_1	FOR_1
0x4002add	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4002ae0	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4002ae5	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4002ae8	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x4002aec	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4002aef	            0xeb8f	                           jmp 0x4002a80	      1676	refs.c	FUNCTION_89
0x4002af1	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4002af6	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4002afb	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4002b00	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4002b02	      0xe800000000	                          call 0x4002b07	      1673	refs.c	FUNCTION_89	IF_2
ref_filter_match	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,3:functions,2:CALL,0	114
0x4000c80	            0x4155	                                push r13	       266	refs.c	FUNCTION_14
0x4000c82	            0x4154	                                push r12	       266	refs.c	FUNCTION_14
0x4000c84	          0x4989fc	                            mov r12, rdi	       266	refs.c	FUNCTION_14
0x4000c87	              0x55	                                push rbp	       266	refs.c	FUNCTION_14
0x4000c88	              0x53	                                push rbx	       266	refs.c	FUNCTION_14
0x4000c89	          0x4889f5	                            mov rbp, rsi	       266	refs.c	FUNCTION_14
0x4000c8c	        0x4883ec08	                              sub rsp, 8	       266	refs.c	FUNCTION_14
0x4000c90	          0x4885d2	                           test rdx, rdx	       269	refs.c	FUNCTION_14	IF_1
0x4000c93	            0x747b	                            je 0x4000d10	       269	refs.c	FUNCTION_14	IF_1
0x4000c95	          0x8b4208	                mov eax, dword [rdx + 8]	       269	refs.c	FUNCTION_14	IF_1
0x4000c98	          0x4989d5	                            mov r13, rdx	       269	refs.c	FUNCTION_14	IF_1
0x4000c9b	            0x85c0	                           test eax, eax	       269	refs.c	FUNCTION_14	IF_1
0x4000c9d	            0x7471	                            je 0x4000d10	       269	refs.c	FUNCTION_14	IF_1
0x4000c9f	          0x488b1a	                    mov rbx, qword [rdx]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ca2	          0x4885db	                           test rbx, rbx	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ca5	            0x7469	                            je 0x4000d10	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000ca7	        0x48c1e004	                              shl rax, 4	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cab	          0x4801d8	                            add rax, rbx	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cae	          0x4839c3	                            cmp rbx, rax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cb1	            0x735d	                           jae 0x4000d10	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cb3	       0xf1f440000	                   nop dword [rax + rax]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cb8	      0x48837b0800	                  cmp qword [rbx + 8], 0	       251	refs.c	FUNCTION_13	IF_1
0x4000cbd	     0xf84f3000000	                            je 0x4000db6	       251	refs.c	FUNCTION_13	IF_1
0x4000cc3	          0x488b13	                    mov rdx, qword [rbx]	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000cc6	          0x4c89e0	                            mov rax, r12	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000cc9	            0xeb12	                           jmp 0x4000cdd	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000ccb	       0xf1f440000	                   nop dword [rax + rax]	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000cd0	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4000cd4	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4000cd8	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4000cdb	            0x751a	                           jne 0x4000cf7	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4000cdd	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000ce0	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000ce2	            0x75ec	                           jne 0x4000cd0	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000ce4	           0xfb600	                   movzx eax, byte [rax]	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000ce7	            0x84c0	                             test al, al	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000ce9	     0xf8499000000	                            je 0x4000d88	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000cef	            0x3c2f	                            cmp al, 0x2f	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000cf1	     0xf8491000000	                            je 0x4000d88	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000cf7	        0x4883c310	                           add rbx, 0x10	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cfb	            0x7413	                            je 0x4000d10	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000cfd	        0x418b4508	                mov eax, dword [r13 + 8]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000d01	        0x48c1e004	                              shl rax, 4	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000d05	        0x49034500	                    add rax, qword [r13]	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000d09	          0x4839c3	                            cmp rbx, rax	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000d0c	            0x72aa	                            jb 0x4000cb8	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000d0e	            0x6690	                                     nop	       270	refs.c	FUNCTION_14	IF_1	FUNCTION_1
0x4000d10	          0x4885ed	                           test rbp, rbp	       276	refs.c	FUNCTION_14	IF_2
0x4000d13	     0xf848d000000	                            je 0x4000da6	       276	refs.c	FUNCTION_14	IF_2
0x4000d19	          0x8b4508	                mov eax, dword [rbp + 8]	       276	refs.c	FUNCTION_14	IF_2
0x4000d1c	            0x85c0	                           test eax, eax	       276	refs.c	FUNCTION_14	IF_2
0x4000d1e	     0xf8482000000	                            je 0x4000da6	       276	refs.c	FUNCTION_14	IF_2
0x4000d24	        0x488b5d00	                    mov rbx, qword [rbp]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d28	          0x4885db	                           test rbx, rbx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d2b	            0x745b	                            je 0x4000d88	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d2d	        0x48c1e004	                              shl rax, 4	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d31	          0x4801d8	                            add rax, rbx	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d34	          0x4839c3	                            cmp rbx, rax	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d37	            0x734f	                           jae 0x4000d88	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d39	     0xf1f80000000	                         nop dword [rax]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d40	      0x48837b0800	                  cmp qword [rbx + 8], 0	       251	refs.c	FUNCTION_13	IF_1
0x4000d45	            0x744e	                            je 0x4000d95	       251	refs.c	FUNCTION_13	IF_1
0x4000d47	          0x488b13	                    mov rdx, qword [rbx]	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000d4a	          0x4c89e0	                            mov rax, r12	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000d4d	            0xeb0e	                           jmp 0x4000d5d	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000d4f	              0x90	                                     nop	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000d50	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4000d54	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4000d58	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4000d5b	            0x7512	                           jne 0x4000d6f	       488	git-compat-util.h	FUNCTION_193	DO_1
0x4000d5d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000d60	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000d62	            0x75ec	                           jne 0x4000d50	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000d64	           0xfb600	                   movzx eax, byte [rax]	       257	refs.c	FUNCTION_13	ELSE_1	IF_3
0x4000d67	            0x84c0	                             test al, al	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000d69	            0x743b	                            je 0x4000da6	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000d6b	            0x3c2f	                            cmp al, 0x2f	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000d6d	            0x7437	                            je 0x4000da6	       256	refs.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4000d6f	        0x4883c310	                           add rbx, 0x10	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d73	            0x7413	                            je 0x4000d88	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d75	          0x8b4508	                mov eax, dword [rbp + 8]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d78	        0x48c1e004	                              shl rax, 4	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d7c	        0x48034500	                    add rax, qword [rbp]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d80	          0x4839c3	                            cmp rbx, rax	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d83	            0x72bb	                            jb 0x4000d40	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d85	           0xf1f00	                         nop dword [rax]	       278	refs.c	FUNCTION_14	IF_2	FUNCTION_2
0x4000d88	            0x31c0	                            xor eax, eax	       272	refs.c	FUNCTION_14	FUNCTION_1	IF_1
0x4000d8a	        0x4883c408	                              add rsp, 8	       289	refs.c	FUNCTION_14
0x4000d8e	              0x5b	                                 pop rbx	       289	refs.c	FUNCTION_14
0x4000d8f	              0x5d	                                 pop rbp	       289	refs.c	FUNCTION_14
0x4000d90	            0x415c	                                 pop r12	       289	refs.c	FUNCTION_14
0x4000d92	            0x415d	                                 pop r13	       289	refs.c	FUNCTION_14
0x4000d94	              0xc3	                                     ret	       289	refs.c	FUNCTION_14
0x4000d95	          0x488b3b	                    mov rdi, qword [rbx]	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000d98	            0x31d2	                            xor edx, edx	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000d9a	          0x4c89e6	                            mov rsi, r12	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000d9d	      0xe800000000	                          call 0x4000da2	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000da2	            0x85c0	                           test eax, eax	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000da4	            0x75c9	                           jne 0x4000d6f	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000da6	        0x4883c408	                              add rsp, 8	       289	refs.c	FUNCTION_14
0x4000daa	      0xb801000000	                              mov eax, 1	       288	refs.c	FUNCTION_14
0x4000daf	              0x5b	                                 pop rbx	       289	refs.c	FUNCTION_14
0x4000db0	              0x5d	                                 pop rbp	       289	refs.c	FUNCTION_14
0x4000db1	            0x415c	                                 pop r12	       289	refs.c	FUNCTION_14
0x4000db3	            0x415d	                                 pop r13	       289	refs.c	FUNCTION_14
0x4000db5	              0xc3	                                     ret	       289	refs.c	FUNCTION_14
0x4000db6	          0x488b3b	                    mov rdi, qword [rbx]	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000db9	            0x31d2	                            xor edx, edx	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000dbb	          0x4c89e6	                            mov rsi, r12	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000dbe	      0xe800000000	                          call 0x4000dc3	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000dc3	            0x85c0	                           test eax, eax	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000dc5	     0xf852cffffff	                           jne 0x4000cf7	       252	refs.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4000dcb	            0x31c0	                            xor eax, eax	       272	refs.c	FUNCTION_14	FUNCTION_1	IF_1
0x4000dcd	            0xebbb	                           jmp 0x4000d8a	       272	refs.c	FUNCTION_14	FUNCTION_1	IF_1
refs_update_ref	SWITCH,1:FOR,0:WHILE,0:ELSE,1:DO,0:IF,4:functions,0:CALL,12	335
0x4006fc0	            0x4157	                                push r15	      1073	refs.c	FUNCTION_59
0x4006fc2	            0x4156	                                push r14	      1073	refs.c	FUNCTION_59
0x4006fc4	          0x4989f7	                            mov r15, rsi	      1073	refs.c	FUNCTION_59
0x4006fc7	            0x4155	                                push r13	      1073	refs.c	FUNCTION_59
0x4006fc9	            0x4154	                                push r12	      1073	refs.c	FUNCTION_59
0x4006fcb	          0x4889d6	                            mov rsi, rdx	       617	refs.c	FUNCTION_37
0x4006fce	              0x55	                                push rbp	      1073	refs.c	FUNCTION_59
0x4006fcf	              0x53	                                push rbx	      1073	refs.c	FUNCTION_59
0x4006fd0	          0x4889fd	                            mov rbp, rdi	      1073	refs.c	FUNCTION_59
0x4006fd3	          0x4989cc	                            mov r12, rcx	      1073	refs.c	FUNCTION_59
0x4006fd6	      0xbf00000000	                              mov edi, 0	       617	refs.c	FUNCTION_37
0x4006fdb	      0xb905000000	                              mov ecx, 5	       617	refs.c	FUNCTION_37
0x4006fe0	        0x4883ec78	                           sub rsp, 0x78	      1073	refs.c	FUNCTION_59
0x4006fe4	          0x4889d3	                            mov rbx, rdx	      1073	refs.c	FUNCTION_59
0x4006fe7	          0x4d89c5	                             mov r13, r8	      1073	refs.c	FUNCTION_59
0x4006fea	    0x64488b042528	                mov rax, qword fs:[0x28]	      1073	refs.c	FUNCTION_59
0x4006ff3	      0x4889442468	             mov qword [rsp + 0x68], rax	      1073	refs.c	FUNCTION_59
0x4006ff8	            0x31c0	                            xor eax, eax	      1073	refs.c	FUNCTION_59
0x4006ffa	      0x44894c2408	                mov dword [rsp + 8], r9d	      1073	refs.c	FUNCTION_59
0x4006fff	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1075	refs.c	FUNCTION_59
0x4007008	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1075	refs.c	FUNCTION_59
0x4007011	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1075	refs.c	FUNCTION_59
0x400701a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       618	refs.c	FUNCTION_37	CALL_1
0x400701c	     0xf8506010000	                           jne 0x4007128	       618	refs.c	FUNCTION_37	CALL_1
0x4007022	      0xbe30000000	                           mov esi, 0x30	       940	refs.c	FUNCTION_51	CALL_2
0x4007027	      0xbf01000000	                              mov edi, 1	       940	refs.c	FUNCTION_51	CALL_2
0x400702c	      0xe800000000	                          call 0x4007031	       940	refs.c	FUNCTION_51	CALL_2
0x4007031	        0x4883ec08	                              sub rsp, 8	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4007035	          0x488928	                    mov qword [rax], rbp	       941	refs.c	FUNCTION_51
0x4007038	          0x4c89e9	                            mov rcx, r13	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x400703b	      0x488d6c2418	                   lea rbp, [rsp + 0x18]	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4007040	          0x4c89e2	                            mov rdx, r12	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4007043	          0x4d89f9	                             mov r9, r15	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4007046	          0x4889de	                            mov rsi, rbx	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4007049	          0x4889c7	                            mov rdi, rax	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x400704c	          0x4989c6	                            mov r14, rax	       940	refs.c	FUNCTION_51	CALL_2
0x400704f	              0x55	                                push rbp	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4007050	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x4007055	      0xe800000000	                          call 0x400705a	      1084	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_6
0x400705a	            0x85c0	                           test eax, eax	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x400705c	              0x5a	                                 pop rdx	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x400705d	              0x59	                                 pop rcx	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x400705e	     0xf8494020000	                            je 0x40072f8	      1083	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4007064	        0x418b4620	            mov eax, dword [r14 + 0x20] 	       957	refs.c	FUNCTION_53	SWITCH_1
0x4007068	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x400706b	     0xf845f020000	                            je 0x40072d0	       957	refs.c	FUNCTION_53	SWITCH_1
0x4007071	            0x7215	                            jb 0x4007088	       957	refs.c	FUNCTION_53	SWITCH_1
0x4007073	          0x83f802	                              cmp eax, 2	       957	refs.c	FUNCTION_53	SWITCH_1
0x4007076	            0x7410	                            je 0x4007088	       957	refs.c	FUNCTION_53	SWITCH_1
0x4007078	      0xbf00000000	                              mov edi, 0	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x400707d	            0x31c0	                            xor eax, eax	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x400707f	      0xe800000000	                          call 0x4007084	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4007084	         0xf1f4000	                         nop dword [rax]	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4007088	          0x4531e4	                          xor r12d, r12d	       970	refs.c	FUNCTION_53	FOR_1
0x400708b	      0x49837e1800	               cmp qword [r14 + 0x18], 0	       970	refs.c	FUNCTION_53	FOR_1
0x4007090	            0x742e	                            je 0x40070c0	       970	refs.c	FUNCTION_53	FOR_1
0x4007092	    0x660f1f440000	                    nop word [rax + rax]	       970	refs.c	FUNCTION_53	FOR_1
0x4007098	        0x498b4608	                mov rax, qword [r14 + 8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x400709c	        0x4a8b04e0	            mov rax, qword [rax + r12*8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40070a0	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40070a4	      0xe800000000	                          call 0x40070a9	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x40070a9	        0x498b4608	                mov rax, qword [r14 + 8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40070ad	        0x4a8b3ce0	            mov rdi, qword [rax + r12*8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40070b1	        0x4983c401	                              add r12, 1	       970	refs.c	FUNCTION_53	FOR_1
0x40070b5	      0xe800000000	                          call 0x40070ba	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x40070ba	        0x4d3b6618	            cmp r12, qword [r14 + 0x18] 	       970	refs.c	FUNCTION_53	FOR_1
0x40070be	            0x72d8	                            jb 0x4007098	       970	refs.c	FUNCTION_53	FOR_1
0x40070c0	        0x498b7e08	                mov rdi, qword [r14 + 8]	       974	refs.c	FUNCTION_53	CALL_5
0x40070c4	      0xe800000000	                          call 0x40070c9	       974	refs.c	FUNCTION_53	CALL_5
0x40070c9	          0x4c89f7	                            mov rdi, r14	       975	refs.c	FUNCTION_53	CALL_6
0x40070cc	      0xe800000000	                          call 0x40070d1	       975	refs.c	FUNCTION_53	CALL_6
0x40070d1	    0x8bb424b00000	            mov esi, dword [rsp + 0xb0] 	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x40070d8	            0x85f6	                           test esi, esi	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x40070da	     0xf84a0020000	                            je 0x4007380	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x40070e0	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 1	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x40070e8	     0xf84f2010000	                            je 0x40072e0	      1094	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x40070ee	          0x4889ef	                            mov rdi, rbp	      1104	refs.c	FUNCTION_59	IF_3	CALL_10
0x40070f1	      0xe800000000	                          call 0x40070f6	      1104	refs.c	FUNCTION_59	IF_3	CALL_10
0x40070f6	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1105	refs.c	FUNCTION_59	IF_3
0x40070fe	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	      1111	refs.c	FUNCTION_59
0x4007103	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1111	refs.c	FUNCTION_59
0x400710c	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1111	refs.c	FUNCTION_59
0x4007110	     0xf85c8030000	                           jne 0x40074de	      1111	refs.c	FUNCTION_59
0x4007116	        0x4883c478	                           add rsp, 0x78	      1111	refs.c	FUNCTION_59
0x400711a	              0x5b	                                 pop rbx	      1111	refs.c	FUNCTION_59
0x400711b	              0x5d	                                 pop rbp	      1111	refs.c	FUNCTION_59
0x400711c	            0x415c	                                 pop r12	      1111	refs.c	FUNCTION_59
0x400711e	            0x415d	                                 pop r13	      1111	refs.c	FUNCTION_59
0x4007120	            0x415e	                                 pop r14	      1111	refs.c	FUNCTION_59
0x4007122	            0x415f	                                 pop r15	      1111	refs.c	FUNCTION_59
0x4007124	              0xc3	                                     ret	      1111	refs.c	FUNCTION_59
0x4007125	           0xf1f00	                         nop dword [rax]	      1111	refs.c	FUNCTION_59
0x4007128	      0xbe00000000	                              mov esi, 0	       618	refs.c	FUNCTION_37	CALL_1
0x400712d	          0x4889d7	                            mov rdi, rdx	       618	refs.c	FUNCTION_37	CALL_1
0x4007130	      0xe800000000	                          call 0x4007135	       618	refs.c	FUNCTION_37	CALL_1
0x4007135	            0x85c0	                           test eax, eax	       617	refs.c	FUNCTION_37
0x4007137	     0xf85e5feffff	                           jne 0x4007022	       617	refs.c	FUNCTION_37
0x400713d	      0xbe00000000	                              mov esi, 0	       619	refs.c	FUNCTION_37	CALL_2
0x4007142	          0x4889df	                            mov rdi, rbx	       619	refs.c	FUNCTION_37	CALL_2
0x4007145	      0xe800000000	                          call 0x400714a	       619	refs.c	FUNCTION_37	CALL_2
0x400714a	            0x85c0	                           test eax, eax	       618	refs.c	FUNCTION_37	CALL_1
0x400714c	        0x8944240c	              mov dword [rsp + 0xc], eax	       619	refs.c	FUNCTION_37	CALL_2
0x4007150	     0xf85ccfeffff	                           jne 0x4007022	       618	refs.c	FUNCTION_37	CALL_1
0x4007156	           0xfb603	                   movzx eax, byte [rbx]	       626	refs.c	FUNCTION_38	FOR_1
0x4007159	            0x84c0	                             test al, al	       626	refs.c	FUNCTION_38	FOR_1
0x400715b	            0x743d	                            je 0x400719a	       626	refs.c	FUNCTION_38	FOR_1
0x400715d	          0x4889da	                            mov rdx, rbx	       626	refs.c	FUNCTION_38	FOR_1
0x4007160	            0xeb1d	                           jmp 0x400717f	       626	refs.c	FUNCTION_38	FOR_1
0x4007162	    0x660f1f440000	                    nop word [rax + rax]	       626	refs.c	FUNCTION_38	FOR_1
0x4007168	            0x3c5f	                            cmp al, 0x5f	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x400716a	            0x7408	                            je 0x4007174	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x400716c	            0x3c2d	                            cmp al, 0x2d	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x400716e	     0xf85aefeffff	                           jne 0x4007022	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4007174	        0x4883c201	                              add rdx, 1	       626	refs.c	FUNCTION_38	FOR_1
0x4007178	           0xfb602	                   movzx eax, byte [rdx]	       626	refs.c	FUNCTION_38	FOR_1
0x400717b	            0x84c0	                             test al, al	       626	refs.c	FUNCTION_38	FOR_1
0x400717d	            0x741b	                            je 0x400719a	       626	refs.c	FUNCTION_38	FOR_1
0x400717f	           0xfb6c8	                           movzx ecx, al	      1000	git-compat-util.h	FUNCTION_208	IF_1
0x4007182	    0xf68100000000	                      test byte [rcx], 4	      1000	git-compat-util.h	FUNCTION_208	IF_1
0x4007189	            0x74dd	                            je 0x4007168	      1000	git-compat-util.h	FUNCTION_208	IF_1
0x400718b	            0xa820	                           test al, 0x20	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x400718d	            0x75d9	                           jne 0x4007168	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x400718f	        0x4883c201	                              add rdx, 1	       626	refs.c	FUNCTION_38	FOR_1
0x4007193	           0xfb602	                   movzx eax, byte [rdx]	       626	refs.c	FUNCTION_38	FOR_1
0x4007196	            0x84c0	                             test al, al	       626	refs.c	FUNCTION_38	FOR_1
0x4007198	            0x75e5	                           jne 0x400717f	       626	refs.c	FUNCTION_38	FOR_1
0x400719a	    0x4c8b35000000	            mov r14, qword [0x040071a1] 	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40071a1	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40071a5	          0x4885c0	                           test rax, rax	      1669	refs.c	FUNCTION_89	IF_1
0x40071a8	     0xf8412020000	                            je 0x40073c0	      1669	refs.c	FUNCTION_89	IF_1
0x40071ae	          0x4839c5	                            cmp rbp, rax	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40071b1	     0xf8542030000	                           jne 0x40074f9	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40071b7	          0x4d85e4	                           test r12, r12	       667	refs.c	FUNCTION_41	IF_1
0x40071ba	    0x48c744243000	               mov qword [rsp + 0x30], 0	       664	refs.c	FUNCTION_41
0x40071c3	    0x48c744243800	               mov qword [rsp + 0x38], 0	       664	refs.c	FUNCTION_41
0x40071cc	    0x48c744244000	               mov qword [rsp + 0x40], 0	       664	refs.c	FUNCTION_41
0x40071d5	     0xf84de000000	                            je 0x40072b9	       667	refs.c	FUNCTION_41	IF_1
0x40071db	          0x4c89e7	                            mov rdi, r12	       670	refs.c	FUNCTION_41	CALL_2
0x40071de	      0xe800000000	                          call 0x40071e3	       670	refs.c	FUNCTION_41	CALL_2
0x40071e3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       670	refs.c	FUNCTION_41	CALL_2
0x40071e8	          0x4889c2	                            mov rdx, rax	       670	refs.c	FUNCTION_41	CALL_2
0x40071eb	      0xbe00000000	                              mov esi, 0	       670	refs.c	FUNCTION_41	CALL_2
0x40071f0	            0x31c0	                            xor eax, eax	       670	refs.c	FUNCTION_41	CALL_2
0x40071f2	      0xe800000000	                          call 0x40071f7	       670	refs.c	FUNCTION_41	CALL_2
0x40071f7	      0xbf00000000	                              mov edi, 0	       672	refs.c	FUNCTION_41	CALL_3
0x40071fc	            0x31c0	                            xor eax, eax	       672	refs.c	FUNCTION_41	CALL_3
0x40071fe	          0x4889de	                            mov rsi, rbx	       672	refs.c	FUNCTION_41	CALL_3
0x4007201	      0xe800000000	                          call 0x4007206	       672	refs.c	FUNCTION_41	CALL_3
0x4007206	    0x8b3d00000000	            mov edi, dword [0x0400720c] 	       650	refs.c	FUNCTION_40	IF_1
0x400720c	          0x4989c4	                            mov r12, rax	       672	refs.c	FUNCTION_41	CALL_3
0x400720f	            0x85ff	                           test edi, edi	       650	refs.c	FUNCTION_40	IF_1
0x4007211	     0xf8489010000	                            je 0x40073a0	       650	refs.c	FUNCTION_40	IF_1
0x4007217	    0x48630d000000	         movsxd rcx, dword [0x0400721e] 	       673	refs.c	FUNCTION_41	CALL_4
0x400721e	      0xba01000000	                              mov edx, 1	       673	refs.c	FUNCTION_41	CALL_4
0x4007223	          0x4c89e6	                            mov rsi, r12	       673	refs.c	FUNCTION_41	CALL_4
0x4007226	      0xbf00000000	                              mov edi, 0	       673	refs.c	FUNCTION_41	CALL_4
0x400722b	      0xe800000000	                          call 0x4007230	       673	refs.c	FUNCTION_41	CALL_4
0x4007230	            0x85c0	                           test eax, eax	       676	refs.c	FUNCTION_41	IF_2
0x4007232	            0x89c5	                            mov ebp, eax	       673	refs.c	FUNCTION_41	CALL_4
0x4007234	     0xf886a020000	                            js 0x40074a4	       676	refs.c	FUNCTION_41	IF_2
0x400723a	          0x4d85ed	                           test r13, r13	       682	refs.c	FUNCTION_41	IF_3
0x400723d	            0x744c	                            je 0x400728b	       682	refs.c	FUNCTION_41	IF_3
0x400723f	    0x4c8b35000000	            mov r14, qword [0x04007246] 	       233	refs.c	FUNCTION_10	CALL_2
0x4007246	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x400724a	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x400724d	     0xf8409020000	                            je 0x400745c	      1669	refs.c	FUNCTION_89	IF_1
0x4007253	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4007258	          0x4531c0	                            xor r8d, r8d	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x400725b	      0xba01000000	                              mov edx, 1	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4007260	          0x4889de	                            mov rsi, rbx	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4007263	      0xe800000000	                          call 0x4007268	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4007268	          0x4885c0	                           test rax, rax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x400726b	     0xf845e020000	                            je 0x40074cf	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4007271	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       975	cache.h	FUNCTION_155	CALL_1
0x4007276	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x400727b	          0x4c89ee	                            mov rsi, r13	       975	cache.h	FUNCTION_155	CALL_1
0x400727e	      0xe800000000	                          call 0x4007283	       975	cache.h	FUNCTION_155	CALL_1
0x4007283	            0x85c0	                           test eax, eax	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x4007285	     0xf8592010000	                           jne 0x400741d	       687	refs.c	FUNCTION_41	IF_3	IF_5	CALL_10
0x400728b	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4007290	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4007295	            0x89ef	                            mov edi, ebp	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x4007297	      0xe800000000	                          call 0x400729c	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x400729c	          0x4885c0	                           test rax, rax	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x400729f	     0xf88a8010000	                            js 0x400744d	       694	refs.c	FUNCTION_41	IF_6	CALL_13
0x40072a5	      0xbf00000000	                              mov edi, 0	       700	refs.c	FUNCTION_41	CALL_16
0x40072aa	      0xe800000000	                          call 0x40072af	       700	refs.c	FUNCTION_41	CALL_16
0x40072af	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       703	refs.c	FUNCTION_41	CALL_17
0x40072b4	      0xe800000000	                          call 0x40072b9	       703	refs.c	FUNCTION_41	CALL_17
0x40072b9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1107	refs.c	FUNCTION_59	CALL_11
0x40072be	      0xe800000000	                          call 0x40072c3	      1107	refs.c	FUNCTION_59	CALL_11
0x40072c3	      0xe936feffff	                           jmp 0x40070fe	      1107	refs.c	FUNCTION_59	CALL_11
0x40072c8	     0xf1f84000000	                   nop dword [rax + rax]	      1107	refs.c	FUNCTION_59	CALL_11
0x40072d0	      0xbf00000000	                              mov edi, 0	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40072d5	            0x31c0	                            xor eax, eax	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40072d7	      0xe800000000	                          call 0x40072dc	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40072dc	         0xf1f4000	                         nop dword [rax]	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x40072e0	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x40072e5	          0x4889de	                            mov rsi, rbx	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x40072e8	      0xbf00000000	                              mov edi, 0	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x40072ed	            0x31c0	                            xor eax, eax	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x40072ef	      0xe800000000	                          call 0x40072f4	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x40072f4	         0xf1f4000	                         nop dword [rax]	      1099	refs.c	FUNCTION_59	IF_3	SWITCH_1	CALL_9
0x40072f8	          0x4889ee	                            mov rsi, rbp	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40072fb	          0x4c89f7	                            mov rdi, r14	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x40072fe	      0xe800000000	                          call 0x4007303	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x4007303	            0x85c0	                           test eax, eax	      1085	refs.c	FUNCTION_59	ELSE_1	IF_2
0x4007305	        0x8944240c	              mov dword [rsp + 0xc], eax	      1086	refs.c	FUNCTION_59	ELSE_1	IF_2	CALL_7
0x4007309	     0xf8555fdffff	                           jne 0x4007064	      1085	refs.c	FUNCTION_59	ELSE_1	IF_2
0x400730f	          0x4889ef	                            mov rdi, rbp	      1107	refs.c	FUNCTION_59	CALL_11
0x4007312	      0xe800000000	                          call 0x4007317	      1107	refs.c	FUNCTION_59	CALL_11
0x4007317	        0x418b4620	            mov eax, dword [r14 + 0x20] 	       957	refs.c	FUNCTION_53	SWITCH_1
0x400731b	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x400731e	            0x74b0	                            je 0x40072d0	       957	refs.c	FUNCTION_53	SWITCH_1
0x4007320	            0x7209	                            jb 0x400732b	       957	refs.c	FUNCTION_53	SWITCH_1
0x4007322	          0x83f802	                              cmp eax, 2	       957	refs.c	FUNCTION_53	SWITCH_1
0x4007325	     0xf854dfdffff	                           jne 0x4007078	       957	refs.c	FUNCTION_53	SWITCH_1
0x400732b	            0x31db	                            xor ebx, ebx	       970	refs.c	FUNCTION_53	FOR_1
0x400732d	      0x49837e1800	               cmp qword [r14 + 0x18], 0	       970	refs.c	FUNCTION_53	FOR_1
0x4007332	            0x742c	                            je 0x4007360	       970	refs.c	FUNCTION_53	FOR_1
0x4007334	         0xf1f4000	                         nop dword [rax]	       970	refs.c	FUNCTION_53	FOR_1
0x4007338	        0x498b4608	                mov rax, qword [r14 + 8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x400733c	        0x488b04d8	            mov rax, qword [rax + rbx*8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4007340	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4007344	      0xe800000000	                          call 0x4007349	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4007349	        0x498b4608	                mov rax, qword [r14 + 8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x400734d	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4007351	        0x4883c301	                              add rbx, 1	       970	refs.c	FUNCTION_53	FOR_1
0x4007355	      0xe800000000	                          call 0x400735a	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x400735a	        0x493b5e18	            cmp rbx, qword [r14 + 0x18] 	       970	refs.c	FUNCTION_53	FOR_1
0x400735e	            0x72d8	                            jb 0x4007338	       970	refs.c	FUNCTION_53	FOR_1
0x4007360	        0x498b7e08	                mov rdi, qword [r14 + 8]	       974	refs.c	FUNCTION_53	CALL_5
0x4007364	      0xe800000000	                          call 0x4007369	       974	refs.c	FUNCTION_53	CALL_5
0x4007369	          0x4c89f7	                            mov rdi, r14	       975	refs.c	FUNCTION_53	CALL_6
0x400736c	      0xe800000000	                          call 0x4007371	       975	refs.c	FUNCTION_53	CALL_6
0x4007371	      0xe988fdffff	                           jmp 0x40070fe	       975	refs.c	FUNCTION_53	CALL_6
0x4007376	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       975	refs.c	FUNCTION_53	CALL_6
0x4007380	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4007385	          0x4889de	                            mov rsi, rbx	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4007388	      0xbf00000000	                              mov edi, 0	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400738d	            0x31c0	                            xor eax, eax	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x400738f	      0xe800000000	                          call 0x4007394	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4007394	      0xe955fdffff	                           jmp 0x40070ee	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x4007399	     0xf1f80000000	                         nop dword [rax]	      1096	refs.c	FUNCTION_59	IF_3	SWITCH_1
0x40073a0	      0xbe00000000	                              mov esi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40073a5	      0xbf00000000	                              mov edi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40073aa	      0xe800000000	                          call 0x40073af	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x40073af	    0xc70500000000	               mov dword [0x040073b9], 1	       652	refs.c	FUNCTION_40	IF_1
0x40073b9	      0xe959feffff	                           jmp 0x4007217	       652	refs.c	FUNCTION_40	IF_1
0x40073be	            0x6690	                                     nop	       652	refs.c	FUNCTION_40	IF_1
0x40073c0	          0x4d8b0e	                     mov r9, qword [r14]	      1672	refs.c	FUNCTION_89	IF_2
0x40073c3	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x40073c6	     0xf8417010000	                            je 0x40074e3	      1672	refs.c	FUNCTION_89	IF_2
0x40073cc	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40073d1	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40073d7	    0x660f1f840000	                    nop word [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x40073e0	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40073e4	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40073e9	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40073ec	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40073ee	            0x7419	                            je 0x4007409	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40073f0	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x40073f3	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x40073f6	            0x75e8	                           jne 0x40073e0	        27	refs.c	FUNCTION_1	FOR_1
0x40073f8	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40073fd	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4007402	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4007404	      0xe800000000	                          call 0x4007409	      1661	refs.c	FUNCTION_88	CALL_2
0x4007409	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x400740e	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4007411	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4007414	        0x49894618	             mov qword [r14 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4007418	      0xe991fdffff	                           jmp 0x40071ae	      1675	refs.c	FUNCTION_89	CALL_1
0x400741d	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4007422	          0x4889da	                            mov rdx, rbx	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x4007425	      0xbe00000000	                              mov esi, 0	       688	refs.c	FUNCTION_41	IF_3	IF_5	CALL_11
0x400742a	          0x4889ef	                            mov rdi, rbp	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400742d	            0x31c0	                            xor eax, eax	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400742f	      0xe800000000	                          call 0x4007434	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4007434	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_223	CALL_1
0x4007439	      0xe800000000	                          call 0x400743e	       304	lockfile.h	FUNCTION_223	CALL_1
0x400743e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       703	refs.c	FUNCTION_41	CALL_17
0x4007443	      0xe800000000	                          call 0x4007448	       703	refs.c	FUNCTION_41	CALL_17
0x4007448	      0xe984fcffff	                           jmp 0x40070d1	       703	refs.c	FUNCTION_41	CALL_17
0x400744d	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4007452	          0x4c89e2	                            mov rdx, r12	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x4007455	      0xbe00000000	                              mov esi, 0	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400745a	            0xebce	                           jmp 0x400742a	       695	refs.c	FUNCTION_41	IF_6	CALL_14
0x400745c	          0x4d8b0e	                     mov r9, qword [r14]	      1672	refs.c	FUNCTION_89	IF_2
0x400745f	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4007462	            0x747f	                            je 0x40074e3	      1672	refs.c	FUNCTION_89	IF_2
0x4007464	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4007469	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400746f	              0x90	                                     nop	      1672	refs.c	FUNCTION_89	IF_2
0x4007470	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007474	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007479	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400747c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400747e	            0x740d	                            je 0x400748d	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007480	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4007483	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4007486	            0x75e8	                           jne 0x4007470	        27	refs.c	FUNCTION_1	FOR_1
0x4007488	      0xe96bffffff	                           jmp 0x40073f8	        27	refs.c	FUNCTION_1	FOR_1
0x400748d	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4007490	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4007495	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4007498	        0x49894618	             mov qword [r14 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x400749c	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x400749f	      0xe9affdffff	                           jmp 0x4007253	      1676	refs.c	FUNCTION_89
0x40074a4	      0xe800000000	                          call 0x40074a9	       678	refs.c	FUNCTION_41	IF_2	CALL_7
0x40074a9	            0x8b38	                    mov edi, dword [rax]	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074ab	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074b0	      0xe800000000	                          call 0x40074b5	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074b5	          0x4c89e2	                            mov rdx, r12	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074b8	          0x4889c1	                            mov rcx, rax	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074bb	      0xbe00000000	                              mov esi, 0	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074c0	          0x4889ef	                            mov rdi, rbp	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074c3	            0x31c0	                            xor eax, eax	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074c5	      0xe800000000	                          call 0x40074ca	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074ca	      0xe96fffffff	                           jmp 0x400743e	       677	refs.c	FUNCTION_41	IF_2	CALL_6
0x40074cf	          0x4889de	                            mov rsi, rbx	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x40074d2	      0xbf00000000	                              mov edi, 0	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x40074d7	            0x31c0	                            xor eax, eax	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x40074d9	      0xe800000000	                          call 0x40074de	       686	refs.c	FUNCTION_41	IF_3	CALL_9
0x40074de	      0xe800000000	                          call 0x40074e3	      1111	refs.c	FUNCTION_59
0x40074e3	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40074e8	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40074ed	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40074f2	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40074f4	      0xe800000000	                          call 0x40074f9	      1673	refs.c	FUNCTION_89	IF_2
0x40074f9	      0xb900000000	                              mov ecx, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x40074fe	      0xba37040000	                          mov edx, 0x437	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4007503	      0xbe00000000	                              mov esi, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x4007508	      0xbf00000000	                              mov edi, 0	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
0x400750d	      0xe800000000	                          call 0x4007512	      1079	refs.c	FUNCTION_59	IF_1	CALL_3
head_ref_namespaced	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,5	126
0x40016e0	            0x4157	                                push r15	       404	refs.c	FUNCTION_26
0x40016e2	            0x4156	                                push r14	       404	refs.c	FUNCTION_26
0x40016e4	          0x4989f6	                            mov r14, rsi	       404	refs.c	FUNCTION_26
0x40016e7	            0x4155	                                push r13	       404	refs.c	FUNCTION_26
0x40016e9	            0x4154	                                push r12	       404	refs.c	FUNCTION_26
0x40016eb	          0x4989fd	                            mov r13, rdi	       404	refs.c	FUNCTION_26
0x40016ee	              0x55	                                push rbp	       404	refs.c	FUNCTION_26
0x40016ef	              0x53	                                push rbx	       404	refs.c	FUNCTION_26
0x40016f0	        0x4883ec58	                           sub rsp, 0x58	       404	refs.c	FUNCTION_26
0x40016f4	    0x64488b042528	                mov rax, qword fs:[0x28]	       404	refs.c	FUNCTION_26
0x40016fd	      0x4889442448	             mov qword [rsp + 0x48], rax	       404	refs.c	FUNCTION_26
0x4001702	            0x31c0	                            xor eax, eax	       404	refs.c	FUNCTION_26
0x4001704	    0x48c744241000	               mov qword [rsp + 0x10], 0	       405	refs.c	FUNCTION_26
0x400170d	    0x48c744241800	               mov qword [rsp + 0x18], 0	       405	refs.c	FUNCTION_26
0x4001716	    0x48c744242000	               mov qword [rsp + 0x20], 0	       405	refs.c	FUNCTION_26
0x400171f	      0xe800000000	                          call 0x4001724	       410	refs.c	FUNCTION_26	CALL_2
0x4001724	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       410	refs.c	FUNCTION_26	CALL_2
0x4001729	          0x4889c2	                            mov rdx, rax	       410	refs.c	FUNCTION_26	CALL_2
0x400172c	      0xbe00000000	                              mov esi, 0	       410	refs.c	FUNCTION_26	CALL_2
0x4001731	            0x31c0	                            xor eax, eax	       410	refs.c	FUNCTION_26	CALL_2
0x4001733	      0xe800000000	                          call 0x4001738	       410	refs.c	FUNCTION_26	CALL_2
0x4001738	    0x488b2d000000	            mov rbp, qword [0x0400173f] 	       233	refs.c	FUNCTION_10	CALL_2
0x400173f	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       411	refs.c	FUNCTION_26	IF_1	CALL_3
0x4001744	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4001748	          0x4d85e4	                           test r12, r12	      1669	refs.c	FUNCTION_89	IF_1
0x400174b	     0xf84cf000000	                            je 0x4001820	      1669	refs.c	FUNCTION_89	IF_1
0x4001751	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4001756	          0x4889df	                            mov rdi, rbx	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4001759	      0xe800000000	                          call 0x400175e	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400175e	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4001760	            0x743e	                            je 0x40017a0	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4001762	      0xe800000000	                          call 0x4001767	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4001767	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400176d	            0x31db	                            xor ebx, ebx	       406	refs.c	FUNCTION_26
0x400176f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       413	refs.c	FUNCTION_26	CALL_5
0x4001774	      0xe800000000	                          call 0x4001779	       413	refs.c	FUNCTION_26	CALL_5
0x4001779	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       416	refs.c	FUNCTION_26
0x400177e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       416	refs.c	FUNCTION_26
0x4001787	            0x89d8	                            mov eax, ebx	       416	refs.c	FUNCTION_26
0x4001789	     0xf854a010000	                           jne 0x40018d9	       416	refs.c	FUNCTION_26
0x400178f	        0x4883c458	                           add rsp, 0x58	       416	refs.c	FUNCTION_26
0x4001793	              0x5b	                                 pop rbx	       416	refs.c	FUNCTION_26
0x4001794	              0x5d	                                 pop rbp	       416	refs.c	FUNCTION_26
0x4001795	            0x415c	                                 pop r12	       416	refs.c	FUNCTION_26
0x4001797	            0x415d	                                 pop r13	       416	refs.c	FUNCTION_26
0x4001799	            0x415e	                                 pop r14	       416	refs.c	FUNCTION_26
0x400179b	            0x415f	                                 pop r15	       416	refs.c	FUNCTION_26
0x400179d	              0xc3	                                     ret	       416	refs.c	FUNCTION_26
0x400179e	            0x6690	                                     nop	       416	refs.c	FUNCTION_26
0x40017a0	      0xbd05000000	                              mov ebp, 5	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40017a5	          0x4531ff	                          xor r15d, r15d	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40017a8	     0xf1f84000000	                   nop dword [rax + rax]	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40017b0	        0x498b0424	                    mov rax, qword [r12]	      1467	refs.c	FUNCTION_80	CALL_1
0x40017b4	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x40017bc	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1467	refs.c	FUNCTION_80	CALL_1
0x40017c1	      0xb900000000	                              mov ecx, 0	      1467	refs.c	FUNCTION_80	CALL_1
0x40017c6	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1467	refs.c	FUNCTION_80	CALL_1
0x40017cb	          0x4889de	                            mov rsi, rbx	      1467	refs.c	FUNCTION_80	CALL_1
0x40017ce	          0x4c89e7	                            mov rdi, r12	      1467	refs.c	FUNCTION_80	CALL_1
0x40017d1	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x40017d4	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x40017d6	            0x7595	                           jne 0x400176d	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x40017d8	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1533	refs.c	FUNCTION_81	FOR_1
0x40017dc	          0x4109c7	                            or r15d, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x40017df	            0xa801	                              test al, 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40017e1	     0xf84a9000000	                            je 0x4001890	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40017e7	    0x488b1d000000	            mov rbx, qword [0x040017ee] 	      1543	refs.c	FUNCTION_81	FOR_1
0x40017ee	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40017f3	          0x4889df	                            mov rdi, rbx	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40017f6	      0xe800000000	                          call 0x40017fb	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40017fb	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40017fd	     0xf855fffffff	                           jne 0x4001762	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4001803	          0x83ed01	                              sub ebp, 1	      1506	refs.c	FUNCTION_81	FOR_1
0x4001806	            0x75a8	                           jne 0x40017b0	      1506	refs.c	FUNCTION_81	FOR_1
0x4001808	      0xe800000000	                          call 0x400180d	      1559	refs.c	FUNCTION_81
0x400180d	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x4001813	      0xe955ffffff	                           jmp 0x400176d	      1559	refs.c	FUNCTION_81
0x4001818	     0xf1f84000000	                   nop dword [rax + rax]	      1559	refs.c	FUNCTION_81
0x4001820	        0x4c8b4d00	                     mov r9, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x4001824	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4001827	     0xf84b1000000	                            je 0x40018de	      1672	refs.c	FUNCTION_89	IF_2
0x400182d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001832	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001838	     0xf1f84000000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4001840	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001844	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001849	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400184c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400184e	            0x7420	                            je 0x4001870	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001850	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4001853	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4001856	            0x75e8	                           jne 0x4001840	        27	refs.c	FUNCTION_1	FOR_1
0x4001858	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400185d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4001862	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4001864	      0xe800000000	                          call 0x4001869	      1661	refs.c	FUNCTION_88	CALL_2
0x4001869	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4001870	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4001875	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4001878	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400187b	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x400187f	          0x4989c4	                            mov r12, rax	      1676	refs.c	FUNCTION_89
0x4001882	      0xe9cafeffff	                           jmp 0x4001751	      1676	refs.c	FUNCTION_89
0x4001887	    0x660f1f840000	                    nop word [rax + rax]	      1676	refs.c	FUNCTION_89
0x4001890	        0x41f6c708	                            test r15b, 8	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001894	            0x7523	                           jne 0x40018b9	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4001896	          0x4885db	                           test rbx, rbx	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4001899	     0xf84cefeffff	                            je 0x400176d	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x400189f	          0x4c89f1	                            mov rcx, r14	       412	refs.c	FUNCTION_26	CALL_4
0x40018a2	          0x4489fa	                           mov edx, r15d	       412	refs.c	FUNCTION_26	CALL_4
0x40018a5	      0x488d742430	                   lea rsi, [rsp + 0x30]	       412	refs.c	FUNCTION_26	CALL_4
0x40018aa	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       412	refs.c	FUNCTION_26	CALL_4
0x40018af	          0x41ffd5	                                call r13	       412	refs.c	FUNCTION_26	CALL_4
0x40018b2	            0x89c3	                            mov ebx, eax	       412	refs.c	FUNCTION_26	CALL_4
0x40018b4	      0xe9b6feffff	                           jmp 0x400176f	       412	refs.c	FUNCTION_26	CALL_4
0x40018b9	    0x48c744243000	               mov qword [rsp + 0x30], 0	        90	string3.h	FUNCTION_139	CALL_5
0x40018c2	    0x48c744243800	               mov qword [rsp + 0x38], 0	        90	string3.h	FUNCTION_139	CALL_5
0x40018cb	        0x4183cf04	                              or r15d, 4	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40018cf	    0xc74424400000	               mov dword [rsp + 0x40], 0	        90	string3.h	FUNCTION_139	CALL_5
0x40018d7	            0xebbd	                           jmp 0x4001896	        90	string3.h	FUNCTION_139	CALL_5
0x40018d9	      0xe800000000	                          call 0x40018de	       416	refs.c	FUNCTION_26
0x40018de	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40018e3	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40018e8	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40018ed	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40018ef	      0xe800000000	                          call 0x40018f4	      1673	refs.c	FUNCTION_89	IF_2
warn_dangling_symrefs	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,1	78
0x4000fc0	              0x55	                                push rbp	       363	refs.c	FUNCTION_19
0x4000fc1	              0x53	                                push rbx	       363	refs.c	FUNCTION_19
0x4000fc2	        0x4883ec38	                           sub rsp, 0x38	       363	refs.c	FUNCTION_19
0x4000fc6	    0x488b2d000000	            mov rbp, qword [0x04000fcd] 	      1460	refs.c	FUNCTION_79	CALL_2
0x4000fcd	    0x64488b042528	                mov rax, qword fs:[0x28]	       363	refs.c	FUNCTION_19
0x4000fd6	      0x4889442428	             mov qword [rsp + 0x28], rax	       363	refs.c	FUNCTION_19
0x4000fdb	            0x31c0	                            xor eax, eax	       363	refs.c	FUNCTION_19
0x4000fdd	        0x48893c24	                    mov qword [rsp], rdi	       366	refs.c	FUNCTION_19
0x4000fe1	    0x48c744240800	                  mov qword [rsp + 8], 0	       367	refs.c	FUNCTION_19
0x4000fea	        0x488b5d18	            mov rbx, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4000fee	      0x4889542410	             mov qword [rsp + 0x10], rdx	       368	refs.c	FUNCTION_19
0x4000ff3	      0x4889742418	             mov qword [rsp + 0x18], rsi	       369	refs.c	FUNCTION_19
0x4000ff8	          0x4885db	                           test rbx, rbx	      1669	refs.c	FUNCTION_89	IF_1
0x4000ffb	            0x745b	                            je 0x4001058	      1669	refs.c	FUNCTION_89	IF_1
0x4000ffd	    0x8b0500000000	            mov eax, dword [0x04001003] 	      1348	refs.c	FUNCTION_68	IF_1
0x4001003	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4001005	     0xf88b5000000	                            js 0x40010c0	      1348	refs.c	FUNCTION_68	IF_1
0x400100b	          0x488b03	                    mov rax, qword [rbx]	      1353	refs.c	FUNCTION_68	CALL_2
0x400100e	      0xba01000000	                              mov edx, 1	      1353	refs.c	FUNCTION_68	CALL_2
0x4001013	      0xbe00000000	                              mov esi, 0	      1353	refs.c	FUNCTION_68	CALL_2
0x4001018	          0x4889df	                            mov rdi, rbx	      1353	refs.c	FUNCTION_68	CALL_2
0x400101b	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x400101e	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4001022	     0xf84b4000000	                            je 0x40010dc	      1363	refs.c	FUNCTION_68	IF_4
0x4001028	          0x4889e2	                            mov rdx, rsp	      1388	refs.c	FUNCTION_69	CALL_2
0x400102b	      0xbe00000000	                              mov esi, 0	      1388	refs.c	FUNCTION_69	CALL_2
0x4001030	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4001033	      0xe800000000	                          call 0x4001038	      1388	refs.c	FUNCTION_69	CALL_2
0x4001038	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       371	refs.c	FUNCTION_19
0x400103d	    0x644833042528	                xor rax, qword fs:[0x28]	       371	refs.c	FUNCTION_19
0x4001046	     0xf858b000000	                           jne 0x40010d7	       371	refs.c	FUNCTION_19
0x400104c	        0x4883c438	                           add rsp, 0x38	       371	refs.c	FUNCTION_19
0x4001050	              0x5b	                                 pop rbx	       371	refs.c	FUNCTION_19
0x4001051	              0x5d	                                 pop rbp	       371	refs.c	FUNCTION_19
0x4001052	              0xc3	                                     ret	       371	refs.c	FUNCTION_19
0x4001053	       0xf1f440000	                   nop dword [rax + rax]	       371	refs.c	FUNCTION_19
0x4001058	        0x4c8b4d00	                     mov r9, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x400105c	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x400105f	     0xf848d000000	                            je 0x40010f2	      1672	refs.c	FUNCTION_89	IF_2
0x4001065	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400106a	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001070	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001074	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001079	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400107c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400107e	            0x7420	                            je 0x40010a0	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001080	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4001083	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4001086	            0x75e8	                           jne 0x4001070	        27	refs.c	FUNCTION_1	FOR_1
0x4001088	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400108d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4001092	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4001094	      0xe800000000	                          call 0x4001099	      1661	refs.c	FUNCTION_88	CALL_2
0x4001099	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x40010a0	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x40010a5	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x40010a8	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x40010ab	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x40010ae	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x40010b2	            0x7484	                            je 0x4001038	      1383	refs.c	FUNCTION_69	IF_1
0x40010b4	          0x4889c3	                            mov rbx, rax	      1383	refs.c	FUNCTION_69	IF_1
0x40010b7	      0xe941ffffff	                           jmp 0x4000ffd	      1383	refs.c	FUNCTION_69	IF_1
0x40010bc	         0xf1f4000	                         nop dword [rax]	      1383	refs.c	FUNCTION_69	IF_1
0x40010c0	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x40010c2	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x40010c7	      0xe800000000	                          call 0x40010cc	      1349	refs.c	FUNCTION_68	CALL_1
0x40010cc	    0x890500000000	            mov dword [0x040010d2], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x40010d2	      0xe934ffffff	                           jmp 0x400100b	      1349	refs.c	FUNCTION_68	CALL_1
0x40010d7	      0xe800000000	                          call 0x40010dc	       371	refs.c	FUNCTION_19
0x40010dc	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40010e1	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x40010e6	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40010eb	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x40010ed	      0xe800000000	                          call 0x40010f2	      1364	refs.c	FUNCTION_68	IF_4
0x40010f2	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40010f7	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40010fc	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4001101	      0xe800000000	                          call 0x4001106	      1673	refs.c	FUNCTION_89	IF_2
delete_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	54
0x4006ef0	            0x4154	                                push r12	       770	refs.c	FUNCTION_44
0x4006ef2	              0x55	                                push rbp	       770	refs.c	FUNCTION_44
0x4006ef3	          0x4889fd	                            mov rbp, rdi	       770	refs.c	FUNCTION_44
0x4006ef6	              0x53	                                push rbx	       770	refs.c	FUNCTION_44
0x4006ef7	          0x4989f4	                            mov r12, rsi	       770	refs.c	FUNCTION_44
0x4006efa	          0x4189c8	                            mov r8d, ecx	       770	refs.c	FUNCTION_44
0x4006efd	        0x4883ec10	                           sub rsp, 0x10	       770	refs.c	FUNCTION_44
0x4006f01	    0x488b1d000000	            mov rbx, qword [0x04006f08] 	       771	refs.c	FUNCTION_44	CALL_2
0x4006f08	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4006f0c	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4006f0f	            0x741f	                            je 0x4006f30	      1669	refs.c	FUNCTION_89	IF_1
0x4006f11	        0x4883c410	                           add rsp, 0x10	       773	refs.c	FUNCTION_44
0x4006f15	          0x4889d1	                            mov rcx, rdx	       771	refs.c	FUNCTION_44	CALL_2
0x4006f18	          0x4889ee	                            mov rsi, rbp	       771	refs.c	FUNCTION_44	CALL_2
0x4006f1b	              0x5b	                                 pop rbx	       773	refs.c	FUNCTION_44
0x4006f1c	          0x4c89e2	                            mov rdx, r12	       771	refs.c	FUNCTION_44	CALL_2
0x4006f1f	              0x5d	                                 pop rbp	       773	refs.c	FUNCTION_44
0x4006f20	            0x415c	                                 pop r12	       773	refs.c	FUNCTION_44
0x4006f22	      0xe959faffff	                 jmp sym.refs_delete_ref	       771	refs.c	FUNCTION_44	CALL_2
0x4006f27	    0x660f1f840000	                    nop word [rax + rax]	       771	refs.c	FUNCTION_44	CALL_2
0x4006f30	          0x4c8b13	                    mov r10, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4006f33	          0x4d85d2	                           test r10, r10	      1672	refs.c	FUNCTION_89	IF_2
0x4006f36	            0x7469	                            je 0x4006fa1	      1672	refs.c	FUNCTION_89	IF_2
0x4006f38	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006f3d	    0x41b900000000	                              mov r9d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006f43	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4006f48	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006f4c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006f51	          0x4c89cf	                             mov rdi, r9	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006f54	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006f56	            0x7420	                            je 0x4006f78	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006f58	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4006f5b	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4006f5e	            0x75e8	                           jne 0x4006f48	        27	refs.c	FUNCTION_1	FOR_1
0x4006f60	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4006f65	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4006f6a	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4006f6c	      0xe800000000	                          call 0x4006f71	      1661	refs.c	FUNCTION_88	CALL_2
0x4006f71	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4006f78	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1661	refs.c	FUNCTION_88	CALL_2
0x4006f7d	        0x48891424	                    mov qword [rsp], rdx	      1661	refs.c	FUNCTION_88	CALL_2
0x4006f81	          0x4c89d7	                            mov rdi, r10	      1663	refs.c	FUNCTION_88	CALL_3
0x4006f84	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4006f89	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4006f8c	        0x488b1424	                    mov rdx, qword [rsp]	      1663	refs.c	FUNCTION_88	CALL_3
0x4006f90	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4006f94	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4006f97	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1676	refs.c	FUNCTION_89
0x4006f9c	      0xe970ffffff	                           jmp 0x4006f11	      1676	refs.c	FUNCTION_89
0x4006fa1	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4006fa6	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4006fab	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4006fb0	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4006fb2	      0xe800000000	                          call 0x4006fb7	      1673	refs.c	FUNCTION_89	IF_2
base_ref_store_init	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,0	2
0x40060f0	          0x488937	                    mov qword [rdi], rsi	      1768	refs.c	FUNCTION_93
0x40060f3	              0xc3	                                     ret	      1768	refs.c	FUNCTION_93
ref_transaction_commit	SWITCH,1:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,4	57
0x40068c0	            0x4154	                                push r12	      1900	refs.c	FUNCTION_102
0x40068c2	              0x55	                                push rbp	      1900	refs.c	FUNCTION_102
0x40068c3	          0x4989f4	                            mov r12, rsi	      1900	refs.c	FUNCTION_102
0x40068c6	              0x53	                                push rbx	      1900	refs.c	FUNCTION_102
0x40068c7	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1904	refs.c	FUNCTION_102	SWITCH_1
0x40068ca	          0x4889fb	                            mov rbx, rdi	      1900	refs.c	FUNCTION_102
0x40068cd	          0x488b2f	                    mov rbp, qword [rdi]	      1901	refs.c	FUNCTION_102
0x40068d0	          0x83f801	                              cmp eax, 1	      1904	refs.c	FUNCTION_102	SWITCH_1
0x40068d3	            0x744e	                            je 0x4006923	      1904	refs.c	FUNCTION_102	SWITCH_1
0x40068d5	            0x7229	                            jb 0x4006900	      1904	refs.c	FUNCTION_102	SWITCH_1
0x40068d7	          0x83f802	                              cmp eax, 2	      1904	refs.c	FUNCTION_102	SWITCH_1
0x40068da	            0x7514	                           jne 0x40068f0	      1904	refs.c	FUNCTION_102	SWITCH_1
0x40068dc	      0xbf00000000	                              mov edi, 0	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x40068e1	            0x31c0	                            xor eax, eax	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x40068e3	      0xe800000000	                          call 0x40068e8	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x40068e8	     0xf1f84000000	                   nop dword [rax + rax]	      1915	refs.c	FUNCTION_102	SWITCH_1	CALL_2
0x40068f0	      0xbf00000000	                              mov edi, 0	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x40068f5	            0x31c0	                            xor eax, eax	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x40068f7	      0xe800000000	                          call 0x40068fc	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x40068fc	         0xf1f4000	                         nop dword [rax]	      1918	refs.c	FUNCTION_102	SWITCH_1	CALL_3
0x4006900	      0xbf00000000	                              mov edi, 0	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x4006905	      0xe800000000	                          call 0x400690a	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x400690a	          0x4885c0	                           test rax, rax	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x400690d	            0x7531	                           jne 0x4006940	      1864	refs.c	FUNCTION_100	IF_1	CALL_4
0x400690f	        0x488b4500	                    mov rax, qword [rbp]	      1870	refs.c	FUNCTION_100	CALL_7
0x4006913	          0x4c89e2	                            mov rdx, r12	      1870	refs.c	FUNCTION_100	CALL_7
0x4006916	          0x4889de	                            mov rsi, rbx	      1870	refs.c	FUNCTION_100	CALL_7
0x4006919	          0x4889ef	                            mov rdi, rbp	      1870	refs.c	FUNCTION_100	CALL_7
0x400691c	          0xff5020	                 call qword [rax + 0x20]	      1870	refs.c	FUNCTION_100	CALL_7
0x400691f	            0x85c0	                           test eax, eax	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4006921	            0x754c	                           jne 0x400696f	      1908	refs.c	FUNCTION_102	SWITCH_1	IF_1
0x4006923	        0x488b4500	                    mov rax, qword [rbp]	      1922	refs.c	FUNCTION_102	CALL_4
0x4006927	          0x4c89e2	                            mov rdx, r12	      1922	refs.c	FUNCTION_102	CALL_4
0x400692a	          0x4889de	                            mov rsi, rbx	      1922	refs.c	FUNCTION_102	CALL_4
0x400692d	          0x4889ef	                            mov rdi, rbp	      1922	refs.c	FUNCTION_102	CALL_4
0x4006930	              0x5b	                                 pop rbx	      1923	refs.c	FUNCTION_102
0x4006931	              0x5d	                                 pop rbp	      1923	refs.c	FUNCTION_102
0x4006932	            0x415c	                                 pop r12	      1923	refs.c	FUNCTION_102
0x4006934	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1922	refs.c	FUNCTION_102	CALL_4
0x4006938	            0xffe0	                                 jmp rax	      1922	refs.c	FUNCTION_102	CALL_4
0x400693a	    0x660f1f440000	                    nop word [rax + rax]	      1922	refs.c	FUNCTION_102	CALL_4
0x4006940	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_185
0x4006945	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_185
0x400694a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_185
0x400694c	      0xe800000000	                          call 0x4006951	        54	gettext.h	FUNCTION_185
0x4006951	          0x4889c3	                            mov rbx, rax	        54	gettext.h	FUNCTION_185
0x4006954	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_129	CALL_2
0x4006957	      0xe800000000	                          call 0x400695c	       279	strbuf.h	FUNCTION_129	CALL_2
0x400695c	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x400695f	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_129	CALL_2
0x4006962	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_129	CALL_2
0x4006965	      0xe800000000	                          call 0x400696a	       279	strbuf.h	FUNCTION_129	CALL_2
0x400696a	      0xb8ffffffff	                     mov eax, 0xffffffff	       279	strbuf.h	FUNCTION_129	CALL_2
0x400696f	              0x5b	                                 pop rbx	      1923	refs.c	FUNCTION_102
0x4006970	              0x5d	                                 pop rbp	      1923	refs.c	FUNCTION_102
0x4006971	            0x415c	                                 pop r12	      1923	refs.c	FUNCTION_102
0x4006973	              0xc3	                                     ret	      1923	refs.c	FUNCTION_102
reflog_expire	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	63
0x4008060	            0x4155	                                push r13	      2109	refs.c	FUNCTION_117
0x4008062	            0x4154	                                push r12	      2109	refs.c	FUNCTION_117
0x4008064	          0x4989cd	                            mov r13, rcx	      2109	refs.c	FUNCTION_117
0x4008067	              0x55	                                push rbp	      2109	refs.c	FUNCTION_117
0x4008068	              0x53	                                push rbx	      2109	refs.c	FUNCTION_117
0x4008069	          0x4889fd	                            mov rbp, rdi	      2109	refs.c	FUNCTION_117
0x400806c	          0x4989f4	                            mov r12, rsi	      2109	refs.c	FUNCTION_117
0x400806f	        0x4883ec28	                           sub rsp, 0x28	      2109	refs.c	FUNCTION_117
0x4008073	    0x488b1d000000	            mov rbx, qword [0x0400807a] 	      2110	refs.c	FUNCTION_117	CALL_2
0x400807a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x400807e	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4008081	            0x742d	                            je 0x40080b0	      1669	refs.c	FUNCTION_89	IF_1
0x4008083	          0x488b07	                    mov rax, qword [rdi]	      2098	refs.c	FUNCTION_116	CALL_1
0x4008086	        0xff742450	                 push qword [rsp + 0x50]	      2098	refs.c	FUNCTION_116	CALL_1
0x400808a	            0x89d1	                            mov ecx, edx	      2098	refs.c	FUNCTION_116	CALL_1
0x400808c	            0x4151	                                 push r9	      2098	refs.c	FUNCTION_116	CALL_1
0x400808e	          0x4c89e2	                            mov rdx, r12	      2098	refs.c	FUNCTION_116	CALL_1
0x4008091	          0x4d89c1	                              mov r9, r8	      2098	refs.c	FUNCTION_116	CALL_1
0x4008094	          0x4889ee	                            mov rsi, rbp	      2098	refs.c	FUNCTION_116	CALL_1
0x4008097	          0x4d89e8	                             mov r8, r13	      2098	refs.c	FUNCTION_116	CALL_1
0x400809a	    0xff90a8000000	                 call qword [rax + 0xa8]	      2098	refs.c	FUNCTION_116	CALL_1
0x40080a0	        0x4883c438	                           add rsp, 0x38	      2114	refs.c	FUNCTION_117
0x40080a4	              0x5b	                                 pop rbx	      2114	refs.c	FUNCTION_117
0x40080a5	              0x5d	                                 pop rbp	      2114	refs.c	FUNCTION_117
0x40080a6	            0x415c	                                 pop r12	      2114	refs.c	FUNCTION_117
0x40080a8	            0x415d	                                 pop r13	      2114	refs.c	FUNCTION_117
0x40080aa	              0xc3	                                     ret	      2114	refs.c	FUNCTION_117
0x40080ab	       0xf1f440000	                   nop dword [rax + rax]	      2114	refs.c	FUNCTION_117
0x40080b0	          0x4c8b1b	                    mov r11, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x40080b3	          0x4d85db	                           test r11, r11	      1672	refs.c	FUNCTION_89	IF_2
0x40080b6	            0x746b	                            je 0x4008123	      1672	refs.c	FUNCTION_89	IF_2
0x40080b8	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40080bd	    0x41ba00000000	                             mov r10d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40080c3	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x40080c8	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40080cc	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40080d1	          0x4c89d7	                            mov rdi, r10	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40080d4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40080d6	            0x7418	                            je 0x40080f0	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40080d8	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x40080db	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x40080de	            0x75e8	                           jne 0x40080c8	        27	refs.c	FUNCTION_1	FOR_1
0x40080e0	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40080e5	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40080ea	      0xe800000000	                          call 0x40080ef	      1661	refs.c	FUNCTION_88	CALL_2
0x40080ef	              0x90	                                     nop	      1661	refs.c	FUNCTION_88	CALL_2
0x40080f0	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      1661	refs.c	FUNCTION_88	CALL_2
0x40080f5	      0x4c89442410	              mov qword [rsp + 0x10], r8	      1661	refs.c	FUNCTION_88	CALL_2
0x40080fa	          0x4c89df	                            mov rdi, r11	      1663	refs.c	FUNCTION_88	CALL_3
0x40080fd	        0x8954240c	              mov dword [rsp + 0xc], edx	      1663	refs.c	FUNCTION_88	CALL_3
0x4008101	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4008106	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4008109	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1663	refs.c	FUNCTION_88	CALL_3
0x400810d	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4008111	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4008114	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      1676	refs.c	FUNCTION_89
0x4008119	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      1676	refs.c	FUNCTION_89
0x400811e	      0xe960ffffff	                           jmp 0x4008083	      1676	refs.c	FUNCTION_89
0x4008123	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4008128	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x400812d	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4008132	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4008134	      0xe800000000	                          call 0x4008139	      1673	refs.c	FUNCTION_89	IF_2
peel_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	163
0x4006320	            0x4157	                                push r15	      1800	refs.c	FUNCTION_96
0x4006322	            0x4156	                                push r14	      1800	refs.c	FUNCTION_96
0x4006324	            0x4155	                                push r13	      1800	refs.c	FUNCTION_96
0x4006326	            0x4154	                                push r12	      1800	refs.c	FUNCTION_96
0x4006328	          0x4989f5	                            mov r13, rsi	      1800	refs.c	FUNCTION_96
0x400632b	              0x55	                                push rbp	      1800	refs.c	FUNCTION_96
0x400632c	              0x53	                                push rbx	      1800	refs.c	FUNCTION_96
0x400632d	          0x4889fb	                            mov rbx, rdi	      1800	refs.c	FUNCTION_96
0x4006330	        0x4883ec38	                           sub rsp, 0x38	      1800	refs.c	FUNCTION_96
0x4006334	    0x488b2d000000	            mov rbp, qword [0x0400633b] 	      1801	refs.c	FUNCTION_96	CALL_2
0x400633b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1800	refs.c	FUNCTION_96
0x4006344	      0x4889442428	             mov qword [rsp + 0x28], rax	      1800	refs.c	FUNCTION_96
0x4006349	            0x31c0	                            xor eax, eax	      1800	refs.c	FUNCTION_96
0x400634b	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x400634f	          0x4d85e4	                           test r12, r12	      1669	refs.c	FUNCTION_89	IF_1
0x4006352	     0xf84e8000000	                            je 0x4006440	      1669	refs.c	FUNCTION_89	IF_1
0x4006358	    0x488b3d000000	            mov rdi, qword [0x0400635f] 	      1783	refs.c	FUNCTION_95	IF_1
0x400635f	          0x4885ff	                           test rdi, rdi	      1783	refs.c	FUNCTION_95	IF_1
0x4006362	            0x740a	                            je 0x400636e	      1783	refs.c	FUNCTION_95	IF_1
0x4006364	        0x483b5f10	            cmp rbx, qword [rdi + 0x10] 	      1783	refs.c	FUNCTION_95	IF_1
0x4006368	     0xf8442010000	                            je 0x40064b0	      1783	refs.c	FUNCTION_95	IF_1
0x400636e	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4006373	          0x4889df	                            mov rdi, rbx	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4006376	      0xe800000000	                          call 0x400637b	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400637b	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400637d	            0x7563	                           jne 0x40063e2	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x400637f	      0xbd05000000	                              mov ebp, 5	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4006384	          0x4531f6	                          xor r14d, r14d	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4006387	    0x660f1f840000	                    nop word [rax + rax]	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4006390	        0x498b0424	                    mov rax, qword [r12]	      1467	refs.c	FUNCTION_80	CALL_1
0x4006394	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x400639c	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1467	refs.c	FUNCTION_80	CALL_1
0x40063a1	      0xb900000000	                              mov ecx, 0	      1467	refs.c	FUNCTION_80	CALL_1
0x40063a6	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1467	refs.c	FUNCTION_80	CALL_1
0x40063ab	          0x4889de	                            mov rsi, rbx	      1467	refs.c	FUNCTION_80	CALL_1
0x40063ae	          0x4c89e7	                            mov rdi, r12	      1467	refs.c	FUNCTION_80	CALL_1
0x40063b1	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x40063b4	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x40063b6	          0x4189c7	                           mov r15d, eax	      1467	refs.c	FUNCTION_80	CALL_1
0x40063b9	            0x7532	                           jne 0x40063ed	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x40063bb	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1533	refs.c	FUNCTION_81	FOR_1
0x40063bf	          0x4109c6	                            or r14d, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x40063c2	            0xa801	                              test al, 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40063c4	     0xf841e010000	                            je 0x40064e8	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x40063ca	    0x488b1d000000	            mov rbx, qword [0x040063d1] 	      1543	refs.c	FUNCTION_81	FOR_1
0x40063d1	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40063d6	          0x4889df	                            mov rdi, rbx	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40063d9	      0xe800000000	                          call 0x40063de	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40063de	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40063e0	            0x743e	                            je 0x4006420	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x40063e2	      0xe800000000	                          call 0x40063e7	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40063e7	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x40063ed	    0x41bfffffffff	                    mov r15d, 0xffffffff	      1794	refs.c	FUNCTION_95	IF_3
0x40063f3	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1802	refs.c	FUNCTION_96
0x40063f8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1802	refs.c	FUNCTION_96
0x4006401	          0x4489f8	                           mov eax, r15d	      1802	refs.c	FUNCTION_96
0x4006404	     0xf85a2010000	                           jne 0x40065ac	      1802	refs.c	FUNCTION_96
0x400640a	        0x4883c438	                           add rsp, 0x38	      1802	refs.c	FUNCTION_96
0x400640e	              0x5b	                                 pop rbx	      1802	refs.c	FUNCTION_96
0x400640f	              0x5d	                                 pop rbp	      1802	refs.c	FUNCTION_96
0x4006410	            0x415c	                                 pop r12	      1802	refs.c	FUNCTION_96
0x4006412	            0x415d	                                 pop r13	      1802	refs.c	FUNCTION_96
0x4006414	            0x415e	                                 pop r14	      1802	refs.c	FUNCTION_96
0x4006416	            0x415f	                                 pop r15	      1802	refs.c	FUNCTION_96
0x4006418	              0xc3	                                     ret	      1802	refs.c	FUNCTION_96
0x4006419	     0xf1f80000000	                         nop dword [rax]	      1802	refs.c	FUNCTION_96
0x4006420	          0x83ed01	                              sub ebp, 1	      1506	refs.c	FUNCTION_81	FOR_1
0x4006423	     0xf8567ffffff	                           jne 0x4006390	      1506	refs.c	FUNCTION_81	FOR_1
0x4006429	      0xe800000000	                          call 0x400642e	      1559	refs.c	FUNCTION_81
0x400642e	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x4006434	            0xebb7	                           jmp 0x40063ed	      1559	refs.c	FUNCTION_81
0x4006436	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1559	refs.c	FUNCTION_81
0x4006440	        0x4c8b4d00	                     mov r9, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x4006444	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4006447	     0xf8464010000	                            je 0x40065b1	      1672	refs.c	FUNCTION_89	IF_2
0x400644d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006452	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006458	     0xf1f84000000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4006460	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006464	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006469	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400646c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400646e	            0x7420	                            je 0x4006490	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006470	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4006473	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4006476	            0x75e8	                           jne 0x4006460	        27	refs.c	FUNCTION_1	FOR_1
0x4006478	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400647d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4006482	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4006484	      0xe800000000	                          call 0x4006489	      1661	refs.c	FUNCTION_88	CALL_2
0x4006489	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4006490	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4006495	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4006498	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400649b	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x400649f	          0x4989c4	                            mov r12, rax	      1676	refs.c	FUNCTION_89
0x40064a2	      0xe9b1feffff	                           jmp 0x4006358	      1676	refs.c	FUNCTION_89
0x40064a7	    0x660f1f840000	                    nop word [rax + rax]	      1676	refs.c	FUNCTION_89
0x40064b0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x40064b5	      0xe800000000	                          call 0x40064ba	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x40064ba	            0x85c0	                           test eax, eax	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x40064bc	          0x4189c7	                           mov r15d, eax	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x40064bf	     0xf8528ffffff	                           jne 0x40063ed	      1786	refs.c	FUNCTION_95	IF_1	IF_2	CALL_1
0x40064c5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x40064ca	        0x49894500	                    mov qword [r13], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40064ce	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_136	CALL_3
0x40064d3	        0x49894508	                mov qword [r13 + 8], rax	        53	string3.h	FUNCTION_136	CALL_3
0x40064d7	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        53	string3.h	FUNCTION_136	CALL_3
0x40064db	        0x41894510	             mov dword [r13 + 0x10], eax	        53	string3.h	FUNCTION_136	CALL_3
0x40064df	      0xe90fffffff	                           jmp 0x40063f3	        53	string3.h	FUNCTION_136	CALL_3
0x40064e4	         0xf1f4000	                         nop dword [rax]	        53	string3.h	FUNCTION_136	CALL_3
0x40064e8	        0x4183e608	                             and r14d, 8	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40064ec	     0xf859b000000	                           jne 0x400658d	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40064f2	          0x4885db	                           test rbx, rbx	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x40064f5	     0xf84f2feffff	                            je 0x40063ed	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x40064fb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       303	refs.c	FUNCTION_16	CALL_1
0x4006500	      0xe800000000	                          call 0x4006505	       303	refs.c	FUNCTION_16	CALL_1
0x4006505	          0x4889c3	                            mov rbx, rax	       303	refs.c	FUNCTION_16	CALL_1
0x4006508	           0xfb600	                   movzx eax, byte [rax]	       305	refs.c	FUNCTION_16	IF_1
0x400650b	          0x83e00e	                            and eax, 0xe	       305	refs.c	FUNCTION_16	IF_1
0x400650e	            0x7438	                            je 0x4006548	       305	refs.c	FUNCTION_16	IF_1
0x4006510	            0x3c08	                               cmp al, 8	       311	refs.c	FUNCTION_16	IF_3
0x4006512	            0x756e	                           jne 0x4006582	       311	refs.c	FUNCTION_16	IF_3
0x4006514	          0x4889df	                            mov rdi, rbx	       314	refs.c	FUNCTION_16	CALL_4
0x4006517	      0xe800000000	                          call 0x400651c	       314	refs.c	FUNCTION_16	CALL_4
0x400651c	          0x4885c0	                           test rax, rax	       315	refs.c	FUNCTION_16	IF_4
0x400651f	     0xf84c8feffff	                            je 0x40063ed	       315	refs.c	FUNCTION_16	IF_4
0x4006525	        0x488d5004	                      lea rdx, [rax + 4]	        53	string3.h	FUNCTION_136	CALL_3
0x4006529	        0x488b4004	                mov rax, qword [rax + 4]	        53	string3.h	FUNCTION_136	CALL_3
0x400652d	        0x49894500	                    mov qword [r13], rax	        53	string3.h	FUNCTION_136	CALL_3
0x4006531	        0x488b4208	                mov rax, qword [rdx + 8]	        53	string3.h	FUNCTION_136	CALL_3
0x4006535	        0x49894508	                mov qword [r13 + 8], rax	        53	string3.h	FUNCTION_136	CALL_3
0x4006539	          0x8b4210	            mov eax, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_136	CALL_3
0x400653c	        0x41894510	             mov dword [r13 + 0x10], eax	        53	string3.h	FUNCTION_136	CALL_3
0x4006540	      0xe9aefeffff	                           jmp 0x40063f3	        53	string3.h	FUNCTION_136	CALL_3
0x4006545	           0xf1f00	                         nop dword [rax]	        53	string3.h	FUNCTION_136	CALL_3
0x4006548	    0x488b3d000000	            mov rdi, qword [0x0400654f] 	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x400654f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4006554	            0x31d2	                            xor edx, edx	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x4006556	      0xe800000000	                          call 0x400655b	       306	refs.c	FUNCTION_16	IF_1	CALL_2
0x400655b	            0x85c0	                           test eax, eax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400655d	     0xf888afeffff	                            js 0x40063ed	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4006563	            0x31d2	                            xor edx, edx	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4006565	            0x89c6	                            mov esi, eax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4006567	          0x4889df	                            mov rdi, rbx	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400656a	      0xe800000000	                          call 0x400656f	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400656f	          0x4885c0	                           test rax, rax	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4006572	     0xf8475feffff	                            je 0x40063ed	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x4006578	           0xfb603	                   movzx eax, byte [rbx]	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400657b	          0x83e00e	                            and eax, 0xe	       307	refs.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400657e	            0x3c08	                               cmp al, 8	       311	refs.c	FUNCTION_16	IF_3
0x4006580	            0x7492	                            je 0x4006514	       311	refs.c	FUNCTION_16	IF_3
0x4006582	    0x41bffeffffff	                    mov r15d, 0xfffffffe	       312	refs.c	FUNCTION_16	IF_3
0x4006588	      0xe966feffff	                           jmp 0x40063f3	       312	refs.c	FUNCTION_16	IF_3
0x400658d	    0x48c744241000	               mov qword [rsp + 0x10], 0	        90	string3.h	FUNCTION_139	CALL_5
0x4006596	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_139	CALL_5
0x400659f	    0xc74424200000	               mov dword [rsp + 0x20], 0	        90	string3.h	FUNCTION_139	CALL_5
0x40065a7	      0xe946ffffff	                           jmp 0x40064f2	        90	string3.h	FUNCTION_139	CALL_5
0x40065ac	      0xe800000000	                          call 0x40065b1	      1802	refs.c	FUNCTION_96
0x40065b1	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40065b6	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40065bb	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40065c0	      0xe800000000	                          call 0x40065c5	      1673	refs.c	FUNCTION_89	IF_2
register_ref_store_map	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:functions,0:CALL,4	67
0x4000340	            0x4157	                                push r15	      1687	refs.c	FUNCTION_90
0x4000342	            0x4156	                                push r14	      1687	refs.c	FUNCTION_90
0x4000344	          0x4989f7	                            mov r15, rsi	      1687	refs.c	FUNCTION_90
0x4000347	            0x4155	                                push r13	      1687	refs.c	FUNCTION_90
0x4000349	            0x4154	                                push r12	      1687	refs.c	FUNCTION_90
0x400034b	          0x4989fd	                            mov r13, rdi	      1687	refs.c	FUNCTION_90
0x400034e	              0x55	                                push rbp	      1687	refs.c	FUNCTION_90
0x400034f	              0x53	                                push rbx	      1687	refs.c	FUNCTION_90
0x4000350	          0x4989d6	                            mov r14, rdx	      1687	refs.c	FUNCTION_90
0x4000353	          0x4889cd	                            mov rbp, rcx	      1687	refs.c	FUNCTION_90
0x4000356	        0x4883ec08	                              sub rsp, 8	      1687	refs.c	FUNCTION_90
0x400035a	          0x8b471c	            mov eax, dword [rdi + 0x1c] 	      1688	refs.c	FUNCTION_90	IF_1
0x400035d	            0x85c0	                           test eax, eax	      1688	refs.c	FUNCTION_90	IF_1
0x400035f	            0x746f	                            je 0x40003d0	      1688	refs.c	FUNCTION_90	IF_1
0x4000361	          0x4889ef	                            mov rdi, rbp	      1620	refs.c	FUNCTION_86
0x4000364	      0xe800000000	                          call 0x4000369	      1620	refs.c	FUNCTION_86
0x4000369	        0x4883f8e7	             cmp rax, 0xffffffffffffffe7	       785	git-compat-util.h	FUNCTION_200	IF_1
0x400036d	          0x4989c4	                            mov r12, rax	      1620	refs.c	FUNCTION_86
0x4000370	     0xf8791000000	                            ja 0x4000407	       785	git-compat-util.h	FUNCTION_200	IF_1
0x4000376	            0x747a	                            je 0x40003f2	       785	git-compat-util.h	FUNCTION_200	IF_1
0x4000378	        0x488d7019	                   lea rsi, [rax + 0x19]	      1620	refs.c	FUNCTION_86
0x400037c	      0xbf01000000	                              mov edi, 1	      1620	refs.c	FUNCTION_86
0x4000381	      0xe800000000	                          call 0x4000386	      1620	refs.c	FUNCTION_86
0x4000386	        0x488d7818	                   lea rdi, [rax + 0x18]	        53	string3.h	FUNCTION_136	CALL_3
0x400038a	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_136	CALL_3
0x400038d	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_136	CALL_3
0x4000390	          0x4889c3	                            mov rbx, rax	      1620	refs.c	FUNCTION_86
0x4000393	      0xe800000000	                          call 0x4000398	        53	string3.h	FUNCTION_136	CALL_3
0x4000398	          0x4889ef	                            mov rdi, rbp	      1621	refs.c	FUNCTION_86	CALL_2
0x400039b	      0xe800000000	                          call 0x40003a0	      1621	refs.c	FUNCTION_86	CALL_2
0x40003a0	    0x48c703000000	                      mov qword [rbx], 0	       249	hashmap.h	FUNCTION_176
0x40003a7	          0x894308	                mov dword [rbx + 8], eax	       248	hashmap.h	FUNCTION_176
0x40003aa	          0x4889de	                            mov rsi, rbx	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40003ad	        0x4c897310	             mov qword [rbx + 0x10], r14	      1622	refs.c	FUNCTION_86
0x40003b1	          0x4c89ef	                            mov rdi, r13	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40003b4	      0xe800000000	                          call 0x40003b9	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40003b9	          0x4885c0	                           test rax, rax	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40003bc	            0x7522	                           jne 0x40003e0	      1691	refs.c	FUNCTION_90	IF_2	CALL_3
0x40003be	        0x4883c408	                              add rsp, 8	      1693	refs.c	FUNCTION_90
0x40003c2	              0x5b	                                 pop rbx	      1693	refs.c	FUNCTION_90
0x40003c3	              0x5d	                                 pop rbp	      1693	refs.c	FUNCTION_90
0x40003c4	            0x415c	                                 pop r12	      1693	refs.c	FUNCTION_90
0x40003c6	            0x415d	                                 pop r13	      1693	refs.c	FUNCTION_90
0x40003c8	            0x415e	                                 pop r14	      1693	refs.c	FUNCTION_90
0x40003ca	            0x415f	                                 pop r15	      1693	refs.c	FUNCTION_90
0x40003cc	              0xc3	                                     ret	      1693	refs.c	FUNCTION_90
0x40003cd	           0xf1f00	                         nop dword [rax]	      1693	refs.c	FUNCTION_90
0x40003d0	            0x31c9	                            xor ecx, ecx	      1689	refs.c	FUNCTION_90	CALL_1
0x40003d2	            0x31d2	                            xor edx, edx	      1689	refs.c	FUNCTION_90	CALL_1
0x40003d4	      0xbe00000000	                              mov esi, 0	      1689	refs.c	FUNCTION_90	CALL_1
0x40003d9	      0xe800000000	                          call 0x40003de	      1689	refs.c	FUNCTION_90	CALL_1
0x40003de	            0xeb81	                           jmp 0x4000361	      1689	refs.c	FUNCTION_90	CALL_1
0x40003e0	          0x4889ea	                            mov rdx, rbp	      1692	refs.c	FUNCTION_90	CALL_4
0x40003e3	          0x4c89fe	                            mov rsi, r15	      1692	refs.c	FUNCTION_90	CALL_4
0x40003e6	      0xbf00000000	                              mov edi, 0	      1692	refs.c	FUNCTION_90	CALL_4
0x40003eb	            0x31c0	                            xor eax, eax	      1692	refs.c	FUNCTION_90	CALL_4
0x40003ed	      0xe800000000	                          call 0x40003f2	      1692	refs.c	FUNCTION_90	CALL_4
0x40003f2	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40003f7	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x40003fb	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4000400	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4000402	      0xe800000000	                          call 0x4000407	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4000407	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x400040a	      0xbe18000000	                           mov esi, 0x18	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x400040f	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4000414	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4000416	      0xe800000000	                          call 0x400041b	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
resolve_gitlink_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:functions,0:CALL,3	93
0x4005d90	            0x4157	                                push r15	      1580	refs.c	FUNCTION_84
0x4005d92	            0x4156	                                push r14	      1580	refs.c	FUNCTION_84
0x4005d94	          0x4989d7	                            mov r15, rdx	      1580	refs.c	FUNCTION_84
0x4005d97	            0x4155	                                push r13	      1580	refs.c	FUNCTION_84
0x4005d99	            0x4154	                                push r12	      1580	refs.c	FUNCTION_84
0x4005d9b	              0x55	                                push rbp	      1580	refs.c	FUNCTION_84
0x4005d9c	              0x53	                                push rbx	      1580	refs.c	FUNCTION_84
0x4005d9d	          0x4889f3	                            mov rbx, rsi	      1580	refs.c	FUNCTION_84
0x4005da0	        0x4883ec38	                           sub rsp, 0x38	      1580	refs.c	FUNCTION_84
0x4005da4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1580	refs.c	FUNCTION_84
0x4005dad	      0x4889442428	             mov qword [rsp + 0x28], rax	      1580	refs.c	FUNCTION_84
0x4005db2	            0x31c0	                            xor eax, eax	      1580	refs.c	FUNCTION_84
0x4005db4	      0xe800000000	                          call 0x4005db9	      1584	refs.c	FUNCTION_84	CALL_1
0x4005db9	          0x4885c0	                           test rax, rax	      1586	refs.c	FUNCTION_84	IF_1
0x4005dbc	     0xf8486000000	                            je 0x4005e48	      1586	refs.c	FUNCTION_84	IF_1
0x4005dc2	      0x4c8d742410	                   lea r14, [rsp + 0x10]	      1482	refs.c	FUNCTION_81	IF_1
0x4005dc7	          0x4d85ff	                           test r15, r15	      1482	refs.c	FUNCTION_81	IF_1
0x4005dca	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005dcf	          0x4889df	                            mov rdi, rbx	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005dd2	          0x4989c4	                            mov r12, rax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005dd5	        0x4d0f45f7	                         cmovne r14, r15	      1482	refs.c	FUNCTION_81	IF_1
0x4005dd9	      0xe800000000	                          call 0x4005dde	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005dde	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005de0	            0x755b	                           jne 0x4005e3d	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005de2	      0xbd05000000	                              mov ebp, 5	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005de7	          0x4531ed	                          xor r13d, r13d	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005dea	    0x660f1f440000	                    nop word [rax + rax]	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4005df0	        0x498b0424	                    mov rax, qword [r12]	      1467	refs.c	FUNCTION_80	CALL_1
0x4005df4	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x4005dfc	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1467	refs.c	FUNCTION_80	CALL_1
0x4005e01	      0xb900000000	                              mov ecx, 0	      1467	refs.c	FUNCTION_80	CALL_1
0x4005e06	          0x4c89f2	                            mov rdx, r14	      1467	refs.c	FUNCTION_80	CALL_1
0x4005e09	          0x4889de	                            mov rsi, rbx	      1467	refs.c	FUNCTION_80	CALL_1
0x4005e0c	          0x4c89e7	                            mov rdi, r12	      1467	refs.c	FUNCTION_80	CALL_1
0x4005e0f	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x4005e12	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4005e14	            0x757a	                           jne 0x4005e90	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4005e16	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1533	refs.c	FUNCTION_81	FOR_1
0x4005e1a	          0x4109c5	                            or r13d, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x4005e1d	            0xa801	                              test al, 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4005e1f	     0xf84c3000000	                            je 0x4005ee8	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4005e25	    0x488b1d000000	            mov rbx, qword [0x04005e2c] 	      1543	refs.c	FUNCTION_81	FOR_1
0x4005e2c	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4005e31	          0x4889df	                            mov rdi, rbx	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4005e34	      0xe800000000	                          call 0x4005e39	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4005e39	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4005e3b	            0x7433	                            je 0x4005e70	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4005e3d	      0xe800000000	                          call 0x4005e42	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4005e42	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4005e48	      0xb8ffffffff	                     mov eax, 0xffffffff	      1591	refs.c	FUNCTION_84	IF_2
0x4005e4d	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1593	refs.c	FUNCTION_84
0x4005e52	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1593	refs.c	FUNCTION_84
0x4005e5b	     0xf858f000000	                           jne 0x4005ef0	      1593	refs.c	FUNCTION_84
0x4005e61	        0x4883c438	                           add rsp, 0x38	      1593	refs.c	FUNCTION_84
0x4005e65	              0x5b	                                 pop rbx	      1593	refs.c	FUNCTION_84
0x4005e66	              0x5d	                                 pop rbp	      1593	refs.c	FUNCTION_84
0x4005e67	            0x415c	                                 pop r12	      1593	refs.c	FUNCTION_84
0x4005e69	            0x415d	                                 pop r13	      1593	refs.c	FUNCTION_84
0x4005e6b	            0x415e	                                 pop r14	      1593	refs.c	FUNCTION_84
0x4005e6d	            0x415f	                                 pop r15	      1593	refs.c	FUNCTION_84
0x4005e6f	              0xc3	                                     ret	      1593	refs.c	FUNCTION_84
0x4005e70	          0x83ed01	                              sub ebp, 1	      1506	refs.c	FUNCTION_81	FOR_1
0x4005e73	     0xf8577ffffff	                           jne 0x4005df0	      1506	refs.c	FUNCTION_81	FOR_1
0x4005e79	      0xe800000000	                          call 0x4005e7e	      1559	refs.c	FUNCTION_81
0x4005e7e	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x4005e84	            0xebc2	                           jmp 0x4005e48	      1559	refs.c	FUNCTION_81
0x4005e86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1559	refs.c	FUNCTION_81
0x4005e90	      0xe800000000	                          call 0x4005e95	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4005e95	            0x8b00	                    mov eax, dword [rax]	      1522	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4005e97	          0x8d50ec	                   lea edx, [rax - 0x14]	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4005e9a	          0x83fa01	                              cmp edx, 1	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4005e9d	            0x7605	                           jbe 0x4005ea4	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4005e9f	          0x83f802	                              cmp eax, 2	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4005ea2	            0x75a4	                           jne 0x4005e48	      1523	refs.c	FUNCTION_81	FOR_1	IF_5	IF_7
0x4005ea4	    0x49c706000000	                      mov qword [r14], 0	        90	string3.h	FUNCTION_139	CALL_5
0x4005eab	    0x49c746080000	                  mov qword [r14 + 8], 0	        90	string3.h	FUNCTION_139	CALL_5
0x4005eb3	    0x41c746100000	               mov dword [r14 + 0x10], 0	        90	string3.h	FUNCTION_139	CALL_5
0x4005ebb	          0x4885db	                           test rbx, rbx	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4005ebe	            0x7488	                            je 0x4005e48	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4005ec0	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4005ec5	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x4005eca	          0x4c89ff	                            mov rdi, r15	       975	cache.h	FUNCTION_155	CALL_1
0x4005ecd	      0xe800000000	                          call 0x4005ed2	       975	cache.h	FUNCTION_155	CALL_1
0x4005ed2	            0x85c0	                           test eax, eax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4005ed4	           0xf94c0	                                 sete al	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4005ed7	           0xfb6c0	                           movzx eax, al	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4005eda	            0xf7d8	                                 neg eax	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4005edc	      0xe96cffffff	                           jmp 0x4005e4d	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4005ee1	     0xf1f80000000	                         nop dword [rax]	      1589	refs.c	FUNCTION_84	IF_2	CALL_2
0x4005ee8	        0x4183e508	                             and r13d, 8	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4005eec	            0x74cd	                            je 0x4005ebb	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4005eee	            0xebb4	                           jmp 0x4005ea4	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x4005ef0	      0xe800000000	                          call 0x4005ef5	      1593	refs.c	FUNCTION_84
for_each_tag_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	87
0x40011b0	            0x4155	                                push r13	       379	refs.c	FUNCTION_21
0x40011b2	            0x4154	                                push r12	       379	refs.c	FUNCTION_21
0x40011b4	              0x55	                                push rbp	       379	refs.c	FUNCTION_21
0x40011b5	              0x53	                                push rbx	       379	refs.c	FUNCTION_21
0x40011b6	          0x4889f5	                            mov rbp, rsi	       379	refs.c	FUNCTION_21
0x40011b9	          0x4889fb	                            mov rbx, rdi	       379	refs.c	FUNCTION_21
0x40011bc	        0x4883ec08	                              sub rsp, 8	       379	refs.c	FUNCTION_21
0x40011c0	    0x4c8b2d000000	            mov r13, qword [0x040011c7] 	       380	refs.c	FUNCTION_21	CALL_2
0x40011c7	        0x4d8b6518	            mov r12, qword [r13 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40011cb	          0x4d85e4	                           test r12, r12	      1669	refs.c	FUNCTION_89	IF_1
0x40011ce	            0x7460	                            je 0x4001230	      1669	refs.c	FUNCTION_89	IF_1
0x40011d0	    0x8b0500000000	            mov eax, dword [0x040011d6] 	      1348	refs.c	FUNCTION_68	IF_1
0x40011d6	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x40011d8	     0xf88ca000000	                            js 0x40012a8	      1348	refs.c	FUNCTION_68	IF_1
0x40011de	            0x31d2	                            xor edx, edx	      1353	refs.c	FUNCTION_68	CALL_2
0x40011e0	            0x85c0	                           test eax, eax	      1353	refs.c	FUNCTION_68	CALL_2
0x40011e2	        0x498b0424	                    mov rax, qword [r12]	      1353	refs.c	FUNCTION_68	CALL_2
0x40011e6	           0xf95c2	                                setne dl	      1353	refs.c	FUNCTION_68	CALL_2
0x40011e9	      0xbe00000000	                              mov esi, 0	      1353	refs.c	FUNCTION_68	CALL_2
0x40011ee	          0x4c89e7	                            mov rdi, r12	      1353	refs.c	FUNCTION_68	CALL_2
0x40011f1	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x40011f4	      0xba0a000000	                            mov edx, 0xa	      1360	refs.c	FUNCTION_68	CALL_3
0x40011f9	      0xbe00000000	                              mov esi, 0	      1360	refs.c	FUNCTION_68	CALL_3
0x40011fe	          0x4889c7	                            mov rdi, rax	      1360	refs.c	FUNCTION_68	CALL_3
0x4001201	      0xe800000000	                          call 0x4001206	      1360	refs.c	FUNCTION_68	CALL_3
0x4001206	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x400120a	     0xf84af000000	                            je 0x40012bf	      1363	refs.c	FUNCTION_68	IF_4
0x4001210	        0x4883c408	                              add rsp, 8	       381	refs.c	FUNCTION_21
0x4001214	          0x4889ea	                            mov rdx, rbp	      1388	refs.c	FUNCTION_69	CALL_2
0x4001217	          0x4889de	                            mov rsi, rbx	      1388	refs.c	FUNCTION_69	CALL_2
0x400121a	              0x5b	                                 pop rbx	       381	refs.c	FUNCTION_21
0x400121b	              0x5d	                                 pop rbp	       381	refs.c	FUNCTION_21
0x400121c	            0x415c	                                 pop r12	       381	refs.c	FUNCTION_21
0x400121e	            0x415d	                                 pop r13	       381	refs.c	FUNCTION_21
0x4001220	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4001223	      0xe900000000	                           jmp 0x4001228	      1388	refs.c	FUNCTION_69	CALL_2
0x4001228	     0xf1f84000000	                   nop dword [rax + rax]	      1388	refs.c	FUNCTION_69	CALL_2
0x4001230	        0x4d8b4d00	                     mov r9, qword [r13]	      1672	refs.c	FUNCTION_89	IF_2
0x4001234	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4001237	     0xf8498000000	                            je 0x40012d5	      1672	refs.c	FUNCTION_89	IF_2
0x400123d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001242	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001248	     0xf1f84000000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4001250	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001254	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001259	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400125c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400125e	            0x7420	                            je 0x4001280	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001260	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4001263	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4001266	            0x75e8	                           jne 0x4001250	        27	refs.c	FUNCTION_1	FOR_1
0x4001268	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400126d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4001272	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4001274	      0xe800000000	                          call 0x4001279	      1661	refs.c	FUNCTION_88	CALL_2
0x4001279	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4001280	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4001285	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4001288	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400128b	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x400128e	        0x49894518	             mov qword [r13 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4001292	            0x7557	                           jne 0x40012eb	      1383	refs.c	FUNCTION_69	IF_1
0x4001294	        0x4883c408	                              add rsp, 8	       381	refs.c	FUNCTION_21
0x4001298	            0x31c0	                            xor eax, eax	       381	refs.c	FUNCTION_21
0x400129a	              0x5b	                                 pop rbx	       381	refs.c	FUNCTION_21
0x400129b	              0x5d	                                 pop rbp	       381	refs.c	FUNCTION_21
0x400129c	            0x415c	                                 pop r12	       381	refs.c	FUNCTION_21
0x400129e	            0x415d	                                 pop r13	       381	refs.c	FUNCTION_21
0x40012a0	              0xc3	                                     ret	       381	refs.c	FUNCTION_21
0x40012a1	     0xf1f80000000	                         nop dword [rax]	       381	refs.c	FUNCTION_21
0x40012a8	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x40012aa	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x40012af	      0xe800000000	                          call 0x40012b4	      1349	refs.c	FUNCTION_68	CALL_1
0x40012b4	    0x890500000000	            mov dword [0x040012ba], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x40012ba	      0xe91fffffff	                           jmp 0x40011de	      1349	refs.c	FUNCTION_68	CALL_1
0x40012bf	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40012c4	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x40012c9	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40012ce	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x40012d0	      0xe800000000	                          call 0x40012d5	      1364	refs.c	FUNCTION_68	IF_4
0x40012d5	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40012da	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40012df	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40012e4	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40012e6	      0xe800000000	                          call 0x40012eb	      1673	refs.c	FUNCTION_89	IF_2
0x40012eb	          0x4989c4	                            mov r12, rax	      1383	refs.c	FUNCTION_69	IF_1
0x40012ee	      0xe9ddfeffff	                           jmp 0x40011d0	      1383	refs.c	FUNCTION_69	IF_1
copy_reflog_msg	SWITCH,0:FOR,0:WHILE,2:ELSE,0:DO,0:IF,2:functions,0:CALL,0	47
0x40027b0	        0x488d4701	                      lea rax, [rdi + 1]	       781	refs.c	FUNCTION_45
0x40027b4	          0xc60709	                       mov byte [rdi], 9	       781	refs.c	FUNCTION_45
0x40027b7	    0x41b801000000	                              mov r8d, 1	       779	refs.c	FUNCTION_45
0x40027bd	    0x41b920000000	                           mov r9d, 0x20	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x40027c3	        0x4883c601	                              add rsi, 1	       782	refs.c	FUNCTION_45	WHILE_1
0x40027c7	         0xfb656ff	               movzx edx, byte [rsi - 1]	       782	refs.c	FUNCTION_45	WHILE_1
0x40027cb	            0x84d2	                             test dl, dl	       782	refs.c	FUNCTION_45	WHILE_1
0x40027cd	            0x7426	                            je 0x40027f5	       782	refs.c	FUNCTION_45	WHILE_1
0x40027cf	          0x4585c0	                           test r8d, r8d	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x40027d2	           0xfb6ca	                           movzx ecx, dl	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x40027d5	            0x7451	                            je 0x4002828	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x40027d7	    0xf68100000000	                      test byte [rcx], 1	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x40027de	            0x75e3	                           jne 0x40027c3	       783	refs.c	FUNCTION_45	WHILE_1	IF_1
0x40027e0	          0x4531c0	                            xor r8d, r8d	       785	refs.c	FUNCTION_45	WHILE_1
0x40027e3	        0x4883c601	                              add rsi, 1	       782	refs.c	FUNCTION_45	WHILE_1
0x40027e7	            0x8810	                      mov byte [rax], dl	       788	refs.c	FUNCTION_45	WHILE_1
0x40027e9	        0x4883c001	                              add rax, 1	       788	refs.c	FUNCTION_45	WHILE_1
0x40027ed	         0xfb656ff	               movzx edx, byte [rsi - 1]	       782	refs.c	FUNCTION_45	WHILE_1
0x40027f1	            0x84d2	                             test dl, dl	       782	refs.c	FUNCTION_45	WHILE_1
0x40027f3	            0x75da	                           jne 0x40027cf	       782	refs.c	FUNCTION_45	WHILE_1
0x40027f5	          0x4839f8	                            cmp rax, rdi	       790	refs.c	FUNCTION_45	WHILE_2
0x40027f8	            0x770f	                            ja 0x4002809	       790	refs.c	FUNCTION_45	WHILE_2
0x40027fa	            0xeb1a	                           jmp 0x4002816	       790	refs.c	FUNCTION_45	WHILE_2
0x40027fc	         0xf1f4000	                         nop dword [rax]	       790	refs.c	FUNCTION_45	WHILE_2
0x4002800	        0x4883e801	                              sub rax, 1	       791	refs.c	FUNCTION_45	WHILE_2
0x4002804	          0x4839c7	                            cmp rdi, rax	       790	refs.c	FUNCTION_45	WHILE_2
0x4002807	            0x7437	                            je 0x4002840	       790	refs.c	FUNCTION_45	WHILE_2
0x4002809	         0xfb650ff	               movzx edx, byte [rax - 1]	       790	refs.c	FUNCTION_45	WHILE_2
0x400280d	    0xf68200000000	                      test byte [rdx], 1	       790	refs.c	FUNCTION_45	WHILE_2
0x4002814	            0x75ea	                           jne 0x4002800	       790	refs.c	FUNCTION_45	WHILE_2
0x4002816	          0xc6000a	                     mov byte [rax], 0xa	       792	refs.c	FUNCTION_45
0x4002819	        0x4883c001	                              add rax, 1	       793	refs.c	FUNCTION_45
0x400281d	          0x4829f8	                            sub rax, rdi	       793	refs.c	FUNCTION_45
0x4002820	              0xc3	                                     ret	       794	refs.c	FUNCTION_45
0x4002821	     0xf1f80000000	                         nop dword [rax]	       794	refs.c	FUNCTION_45
0x4002828	     0xfb689000000	                   movzx ecx, byte [rcx]	       794	refs.c	FUNCTION_45
0x400282f	          0x83e101	                              and ecx, 1	       794	refs.c	FUNCTION_45
0x4002832	            0x84c9	                             test cl, cl	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4002834	        0x440fb6c1	                           movzx r8d, cl	       785	refs.c	FUNCTION_45	WHILE_1
0x4002838	        0x410f45d1	                         cmovne edx, r9d	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x400283c	            0xeba5	                           jmp 0x40027e3	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x400283e	            0x6690	                                     nop	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4002840	          0x4889f8	                            mov rax, rdi	       787	refs.c	FUNCTION_45	WHILE_1	IF_2
0x4002843	          0xc6000a	                     mov byte [rax], 0xa	       792	refs.c	FUNCTION_45
0x4002846	        0x4883c001	                              add rax, 1	       793	refs.c	FUNCTION_45
0x400284a	          0x4829f8	                            sub rax, rdi	       793	refs.c	FUNCTION_45
0x400284d	              0xc3	                                     ret	       794	refs.c	FUNCTION_45
expand_ref_prefix	SWITCH,0:FOR,1:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	30
0x4002220	            0x4155	                                push r13	       511	refs.c	FUNCTION_32
0x4002222	            0x4154	                                push r12	       511	refs.c	FUNCTION_32
0x4002224	          0x4989fd	                            mov r13, rdi	       511	refs.c	FUNCTION_32
0x4002227	              0x55	                                push rbp	       511	refs.c	FUNCTION_32
0x4002228	              0x53	                                push rbx	       511	refs.c	FUNCTION_32
0x4002229	          0x4889f7	                            mov rdi, rsi	       513	refs.c	FUNCTION_32	CALL_1
0x400222c	          0x4989f4	                            mov r12, rsi	       511	refs.c	FUNCTION_32
0x400222f	        0x4883ec08	                              sub rsp, 8	       511	refs.c	FUNCTION_32
0x4002233	      0xe800000000	                          call 0x4002238	       513	refs.c	FUNCTION_32	CALL_1
0x4002238	    0x488b35000000	            mov rsi, qword [0x0400223f] 	       515	refs.c	FUNCTION_32	FOR_1
0x400223f	          0x4885f6	                           test rsi, rsi	       515	refs.c	FUNCTION_32	FOR_1
0x4002242	            0x7427	                            je 0x400226b	       515	refs.c	FUNCTION_32	FOR_1
0x4002244	            0x89c5	                            mov ebp, eax	       515	refs.c	FUNCTION_32	FOR_1
0x4002246	      0xbb00000000	                              mov ebx, 0	       515	refs.c	FUNCTION_32	FOR_1
0x400224b	       0xf1f440000	                   nop dword [rax + rax]	       515	refs.c	FUNCTION_32	FOR_1
0x4002250	            0x31c0	                            xor eax, eax	       516	refs.c	FUNCTION_32	CALL_2
0x4002252	        0x4883c308	                              add rbx, 8	       515	refs.c	FUNCTION_32	FOR_1
0x4002256	          0x4c89e1	                            mov rcx, r12	       516	refs.c	FUNCTION_32	CALL_2
0x4002259	            0x89ea	                            mov edx, ebp	       516	refs.c	FUNCTION_32	CALL_2
0x400225b	          0x4c89ef	                            mov rdi, r13	       516	refs.c	FUNCTION_32	CALL_2
0x400225e	      0xe800000000	                          call 0x4002263	       516	refs.c	FUNCTION_32	CALL_2
0x4002263	          0x488b33	                    mov rsi, qword [rbx]	       515	refs.c	FUNCTION_32	FOR_1
0x4002266	          0x4885f6	                           test rsi, rsi	       515	refs.c	FUNCTION_32	FOR_1
0x4002269	            0x75e5	                           jne 0x4002250	       515	refs.c	FUNCTION_32	FOR_1
0x400226b	        0x4883c408	                              add rsp, 8	       517	refs.c	FUNCTION_32
0x400226f	              0x5b	                                 pop rbx	       517	refs.c	FUNCTION_32
0x4002270	              0x5d	                                 pop rbp	       517	refs.c	FUNCTION_32
0x4002271	            0x415c	                                 pop r12	       517	refs.c	FUNCTION_32
0x4002273	            0x415d	                                 pop r13	       517	refs.c	FUNCTION_32
0x4002275	              0xc3	                                     ret	       517	refs.c	FUNCTION_32
refs_init_db	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	46
0x40059c0	              0x55	                                push rbp	      1565	refs.c	FUNCTION_82
0x40059c1	              0x53	                                push rbx	      1565	refs.c	FUNCTION_82
0x40059c2	          0x4889fd	                            mov rbp, rdi	      1565	refs.c	FUNCTION_82
0x40059c5	        0x4883ec08	                              sub rsp, 8	      1565	refs.c	FUNCTION_82
0x40059c9	    0x488b1d000000	            mov rbx, qword [0x040059d0] 	      1566	refs.c	FUNCTION_82	CALL_1
0x40059d0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40059d4	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x40059d7	            0x7417	                            je 0x40059f0	      1669	refs.c	FUNCTION_89	IF_1
0x40059d9	          0x488b07	                    mov rax, qword [rdi]	      1568	refs.c	FUNCTION_82	CALL_2
0x40059dc	          0x4889ee	                            mov rsi, rbp	      1568	refs.c	FUNCTION_82	CALL_2
0x40059df	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1568	refs.c	FUNCTION_82	CALL_2
0x40059e3	        0x4883c408	                              add rsp, 8	      1569	refs.c	FUNCTION_82
0x40059e7	              0x5b	                                 pop rbx	      1569	refs.c	FUNCTION_82
0x40059e8	              0x5d	                                 pop rbp	      1569	refs.c	FUNCTION_82
0x40059e9	            0xffe0	                                 jmp rax	      1568	refs.c	FUNCTION_82	CALL_2
0x40059eb	       0xf1f440000	                   nop dword [rax + rax]	      1568	refs.c	FUNCTION_82	CALL_2
0x40059f0	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x40059f3	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x40059f6	            0x7454	                            je 0x4005a4c	      1672	refs.c	FUNCTION_89	IF_2
0x40059f8	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40059fd	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4005a03	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4005a08	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005a0c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005a11	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005a14	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005a16	            0x7420	                            je 0x4005a38	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005a18	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4005a1b	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4005a1e	            0x75e8	                           jne 0x4005a08	        27	refs.c	FUNCTION_1	FOR_1
0x4005a20	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4005a25	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4005a2a	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4005a2c	      0xe800000000	                          call 0x4005a31	      1661	refs.c	FUNCTION_88	CALL_2
0x4005a31	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4005a38	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4005a3b	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4005a40	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4005a43	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4005a47	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4005a4a	            0xeb8d	                           jmp 0x40059d9	      1676	refs.c	FUNCTION_89
0x4005a4c	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4005a51	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4005a56	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4005a5b	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4005a5d	      0xe800000000	                          call 0x4005a62	      1673	refs.c	FUNCTION_89	IF_2
resolve_refdup	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	65
0x40058d0	            0x4154	                                push r12	       210	refs.c	FUNCTION_8
0x40058d2	              0x55	                                push rbp	       210	refs.c	FUNCTION_8
0x40058d3	          0x4889fd	                            mov rbp, rdi	       210	refs.c	FUNCTION_8
0x40058d6	              0x53	                                push rbx	       210	refs.c	FUNCTION_8
0x40058d7	          0x4189f4	                           mov r12d, esi	       210	refs.c	FUNCTION_8
0x40058da	          0x4989c8	                             mov r8, rcx	       210	refs.c	FUNCTION_8
0x40058dd	        0x4883ec10	                           sub rsp, 0x10	       210	refs.c	FUNCTION_8
0x40058e1	    0x488b1d000000	            mov rbx, qword [0x040058e8] 	       211	refs.c	FUNCTION_8	CALL_2
0x40058e8	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40058ec	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x40058ef	            0x742f	                            je 0x4005920	      1669	refs.c	FUNCTION_89	IF_1
0x40058f1	          0x4889d1	                            mov rcx, rdx	       203	refs.c	FUNCTION_7	CALL_1
0x40058f4	          0x4889ee	                            mov rsi, rbp	       203	refs.c	FUNCTION_7	CALL_1
0x40058f7	          0x4489e2	                           mov edx, r12d	       203	refs.c	FUNCTION_7	CALL_1
0x40058fa	      0xe800000000	                          call 0x40058ff	       203	refs.c	FUNCTION_7	CALL_1
0x40058ff	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x4005902	     0xf8490000000	                            je 0x4005998	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x4005908	        0x4883c410	                           add rsp, 0x10	       214	refs.c	FUNCTION_8
0x400590c	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x400590f	              0x5b	                                 pop rbx	       214	refs.c	FUNCTION_8
0x4005910	              0x5d	                                 pop rbp	       214	refs.c	FUNCTION_8
0x4005911	            0x415c	                                 pop r12	       214	refs.c	FUNCTION_8
0x4005913	      0xe900000000	                           jmp 0x4005918	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x4005918	     0xf1f84000000	                   nop dword [rax + rax]	       924	git-compat-util.h	FUNCTION_205	CALL_1
0x4005920	          0x4c8b13	                    mov r10, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4005923	          0x4d85d2	                           test r10, r10	      1672	refs.c	FUNCTION_89	IF_2
0x4005926	            0x747b	                            je 0x40059a3	      1672	refs.c	FUNCTION_89	IF_2
0x4005928	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400592d	    0x41b900000000	                              mov r9d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4005933	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4005938	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400593c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005941	          0x4c89cf	                             mov rdi, r9	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005944	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005946	            0x7420	                            je 0x4005968	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005948	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x400594b	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x400594e	            0x75e8	                           jne 0x4005938	        27	refs.c	FUNCTION_1	FOR_1
0x4005950	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4005955	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400595a	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x400595c	      0xe800000000	                          call 0x4005961	      1661	refs.c	FUNCTION_88	CALL_2
0x4005961	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4005968	      0x4c89442408	                 mov qword [rsp + 8], r8	      1661	refs.c	FUNCTION_88	CALL_2
0x400596d	        0x48891424	                    mov qword [rsp], rdx	      1661	refs.c	FUNCTION_88	CALL_2
0x4005971	          0x4c89d7	                            mov rdi, r10	      1663	refs.c	FUNCTION_88	CALL_3
0x4005974	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4005979	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400597c	        0x488b1424	                    mov rdx, qword [rsp]	      1663	refs.c	FUNCTION_88	CALL_3
0x4005980	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4005984	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4005987	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1676	refs.c	FUNCTION_89
0x400598c	      0xe960ffffff	                           jmp 0x40058f1	      1676	refs.c	FUNCTION_89
0x4005991	     0xf1f80000000	                         nop dword [rax]	      1676	refs.c	FUNCTION_89
0x4005998	        0x4883c410	                           add rsp, 0x10	       214	refs.c	FUNCTION_8
0x400599c	            0x31c0	                            xor eax, eax	       214	refs.c	FUNCTION_8
0x400599e	              0x5b	                                 pop rbx	       214	refs.c	FUNCTION_8
0x400599f	              0x5d	                                 pop rbp	       214	refs.c	FUNCTION_8
0x40059a0	            0x415c	                                 pop r12	       214	refs.c	FUNCTION_8
0x40059a2	              0xc3	                                     ret	       214	refs.c	FUNCTION_8
0x40059a3	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40059a8	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40059ad	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40059b2	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40059b4	      0xe800000000	                          call 0x40059b9	      1673	refs.c	FUNCTION_89	IF_2
normalize_glob_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,1:DO,0:IF,3:functions,0:CALL,8	110
0x4001900	            0x4155	                                push r13	       420	refs.c	FUNCTION_27
0x4001902	            0x4154	                                push r12	       420	refs.c	FUNCTION_27
0x4001904	              0x55	                                push rbp	       420	refs.c	FUNCTION_27
0x4001905	              0x53	                                push rbx	       420	refs.c	FUNCTION_27
0x4001906	        0x4883ec28	                           sub rsp, 0x28	       420	refs.c	FUNCTION_27
0x400190a	    0x64488b042528	                mov rax, qword fs:[0x28]	       420	refs.c	FUNCTION_27
0x4001913	      0x4889442418	             mov qword [rsp + 0x18], rax	       420	refs.c	FUNCTION_27
0x4001918	            0x31c0	                            xor eax, eax	       420	refs.c	FUNCTION_27
0x400191a	          0x803a2f	                    cmp byte [rdx], 0x2f	       423	refs.c	FUNCTION_27	IF_1
0x400191d	    0x48c704240000	                      mov qword [rsp], 0	       421	refs.c	FUNCTION_27
0x4001925	    0x48c744240800	                  mov qword [rsp + 8], 0	       421	refs.c	FUNCTION_27
0x400192e	    0x48c744241000	               mov qword [rsp + 0x10], 0	       421	refs.c	FUNCTION_27
0x4001937	     0xf8454010000	                            je 0x4001a91	       423	refs.c	FUNCTION_27	IF_1
0x400193d	          0x4885f6	                           test rsi, rsi	       426	refs.c	FUNCTION_27	IF_2
0x4001940	          0x4989fc	                            mov r12, rdi	       426	refs.c	FUNCTION_27	IF_2
0x4001943	          0x4989f5	                            mov r13, rsi	       426	refs.c	FUNCTION_27	IF_2
0x4001946	          0x4889d3	                            mov rbx, rdx	       426	refs.c	FUNCTION_27	IF_2
0x4001949	     0xf8401010000	                            je 0x4001a50	       426	refs.c	FUNCTION_27	IF_2
0x400194f	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001952	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001955	      0xe800000000	                          call 0x400195a	       279	strbuf.h	FUNCTION_129	CALL_2
0x400195a	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_129	CALL_2
0x400195d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001960	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001963	      0xe800000000	                          call 0x4001968	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001968	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x400196b	      0xe800000000	                          call 0x4001970	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001970	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001973	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001976	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001979	      0xe800000000	                          call 0x400197e	       279	strbuf.h	FUNCTION_129	CALL_2
0x400197e	      0x488b442408	                mov rax, qword [rsp + 8]	       540	git-compat-util.h	FUNCTION_196	IF_1	CALL_2
0x4001983	          0x4885c0	                           test rax, rax	       540	git-compat-util.h	FUNCTION_196	IF_1	CALL_2
0x4001986	            0x743c	                            je 0x40019c4	       540	git-compat-util.h	FUNCTION_196	IF_1	CALL_2
0x4001988	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       496	strbuf.h	FUNCTION_130	IF_1	CALL_1
0x400198d	        0x4883e801	                              sub rax, 1	       540	git-compat-util.h	FUNCTION_196	IF_1	CALL_2
0x4001991	        0x488d3401	                    lea rsi, [rcx + rax]	       540	git-compat-util.h	FUNCTION_196	IF_1	CALL_2
0x4001995	          0x803e2f	                    cmp byte [rsi], 0x2f	       540	git-compat-util.h	FUNCTION_196	IF_1	CALL_2
0x4001998	            0x752a	                           jne 0x40019c4	       540	git-compat-util.h	FUNCTION_196	IF_1	CALL_2
0x400199a	        0x488b1424	                    mov rdx, qword [rsp]	       162	strbuf.h	FUNCTION_127	IF_1
0x400199e	      0x4889442408	                mov qword [rsp + 8], rax	       542	git-compat-util.h	FUNCTION_196
0x40019a3	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_127	IF_1
0x40019a7	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_127	IF_1
0x40019ab	          0x4839d0	                            cmp rax, rdx	       162	strbuf.h	FUNCTION_127	IF_1
0x40019ae	     0xf87f6000000	                            ja 0x4001aaa	       162	strbuf.h	FUNCTION_127	IF_1
0x40019b4	    0x4881f9000000	                              cmp rcx, 0	       165	strbuf.h	FUNCTION_127	IF_2
0x40019bb	     0xf84be000000	                            je 0x4001a7f	       165	strbuf.h	FUNCTION_127	IF_2
0x40019c1	          0xc60600	                       mov byte [rsi], 0	       166	strbuf.h	FUNCTION_127	IF_2
0x40019c4	            0x31f6	                            xor esi, esi	       434	refs.c	FUNCTION_27	CALL_6
0x40019c6	          0x4889ef	                            mov rdi, rbp	       434	refs.c	FUNCTION_27	CALL_6
0x40019c9	      0xe800000000	                          call 0x40019ce	       434	refs.c	FUNCTION_27	CALL_6
0x40019ce	        0x49890424	                    mov qword [r12], rax	       434	refs.c	FUNCTION_27	CALL_6
0x40019d2	           0xfb613	                   movzx edx, byte [rbx]	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019d5	            0x84d2	                             test dl, dl	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019d7	            0x7432	                            je 0x4001a0b	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019d9	          0x83ea2a	                           sub edx, 0x2a	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019dc	          0x80fa31	                            cmp dl, 0x31	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019df	            0x7657	                           jbe 0x4001a38	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019e1	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_237	WHILE_1
0x40019eb	       0xf1f440000	                   nop dword [rax + rax]	      1115	string2.h	FUNCTION_237	WHILE_1
0x40019f0	        0x4883c301	                              add rbx, 1	      1116	string2.h	FUNCTION_237	WHILE_1
0x40019f4	           0xfb613	                   movzx edx, byte [rbx]	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019f7	            0x84d2	                             test dl, dl	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019f9	            0x7410	                            je 0x4001a0b	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019fb	          0x83ea2a	                           sub edx, 0x2a	      1114	string2.h	FUNCTION_237	WHILE_1
0x40019fe	          0x80fa31	                            cmp dl, 0x31	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001a01	            0x77ed	                            ja 0x40019f0	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001a03	        0x480fa3d1	                             bt rcx, rdx	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001a07	            0x73e7	                           jae 0x40019f0	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001a09	            0x31c0	                            xor eax, eax	       435	refs.c	FUNCTION_27	CALL_7
0x4001a0b	      0x4989442408	                mov qword [r12 + 8], rax	       435	refs.c	FUNCTION_27	CALL_7
0x4001a10	          0x4889ef	                            mov rdi, rbp	       436	refs.c	FUNCTION_27	CALL_8
0x4001a13	      0xe800000000	                          call 0x4001a18	       436	refs.c	FUNCTION_27	CALL_8
0x4001a18	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       437	refs.c	FUNCTION_27
0x4001a1d	    0x644833042528	                xor rax, qword fs:[0x28]	       437	refs.c	FUNCTION_27
0x4001a26	            0x757d	                           jne 0x4001aa5	       437	refs.c	FUNCTION_27
0x4001a28	        0x4883c428	                           add rsp, 0x28	       437	refs.c	FUNCTION_27
0x4001a2c	              0x5b	                                 pop rbx	       437	refs.c	FUNCTION_27
0x4001a2d	              0x5d	                                 pop rbp	       437	refs.c	FUNCTION_27
0x4001a2e	            0x415c	                                 pop r12	       437	refs.c	FUNCTION_27
0x4001a30	            0x415d	                                 pop r13	       437	refs.c	FUNCTION_27
0x4001a32	              0xc3	                                     ret	       437	refs.c	FUNCTION_27
0x4001a33	       0xf1f440000	                   nop dword [rax + rax]	       437	refs.c	FUNCTION_27
0x4001a38	    0x48b901002000	             movabs rcx, 0x2000000200001	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001a42	        0x480fa3d1	                             bt rcx, rdx	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001a46	            0x7399	                           jae 0x40019e1	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001a48	            0xebbf	                           jmp 0x4001a09	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001a4a	    0x660f1f440000	                    nop word [rax + rax]	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001a50	      0xbe00000000	                              mov esi, 0	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4001a55	          0x4889d7	                            mov rdi, rdx	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4001a58	          0x4889e5	                            mov rbp, rsp	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4001a5b	      0xe800000000	                          call 0x4001a60	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4001a60	            0x85c0	                           test eax, eax	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4001a62	     0xf8500ffffff	                           jne 0x4001968	       429	refs.c	FUNCTION_27	ELSE_1	IF_3	CALL_2
0x4001a68	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001a6d	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001a72	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001a75	      0xe800000000	                          call 0x4001a7a	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001a7a	      0xe9e9feffff	                           jmp 0x4001968	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001a7f	    0x803d00000000	                cmp byte [0x04001a86], 0	       168	strbuf.h	FUNCTION_127	CALL_2
0x4001a86	     0xf8438ffffff	                            je 0x40019c4	       168	strbuf.h	FUNCTION_127	CALL_2
0x4001a8c	      0xe800000000	                          call 0x4001a91	       168	strbuf.h	FUNCTION_127	CALL_2
0x4001a91	      0xba00000000	                              mov edx, 0	       424	refs.c	FUNCTION_27	IF_1
0x4001a96	      0xbea8010000	                          mov esi, 0x1a8	       424	refs.c	FUNCTION_27	IF_1
0x4001a9b	      0xbf00000000	                              mov edi, 0	       424	refs.c	FUNCTION_27	IF_1
0x4001aa0	      0xe800000000	                          call 0x4001aa5	       424	refs.c	FUNCTION_27	IF_1
0x4001aa5	      0xe800000000	                          call 0x4001aaa	       437	refs.c	FUNCTION_27
0x4001aaa	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_127	CALL_1
0x4001aaf	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_127	CALL_1
0x4001ab1	      0xe800000000	                          call 0x4001ab6	       163	strbuf.h	FUNCTION_127	CALL_1
for_each_glob_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,1	183
0x4001df0	            0x4154	                                push r12	       469	refs.c	FUNCTION_29
0x4001df2	              0x55	                                push rbp	       469	refs.c	FUNCTION_29
0x4001df3	          0x4989fc	                            mov r12, rdi	       469	refs.c	FUNCTION_29
0x4001df6	              0x53	                                push rbx	       469	refs.c	FUNCTION_29
0x4001df7	          0x4889f3	                            mov rbx, rsi	       469	refs.c	FUNCTION_29
0x4001dfa	      0xbe00000000	                              mov esi, 0	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001dff	          0x4889df	                            mov rdi, rbx	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001e02	          0x4889d5	                            mov rbp, rdx	       469	refs.c	FUNCTION_29
0x4001e05	        0x4883ec40	                           sub rsp, 0x40	       469	refs.c	FUNCTION_29
0x4001e09	    0x64488b042528	                mov rax, qword fs:[0x28]	       469	refs.c	FUNCTION_29
0x4001e12	      0x4889442438	             mov qword [rsp + 0x38], rax	       469	refs.c	FUNCTION_29
0x4001e17	            0x31c0	                            xor eax, eax	       469	refs.c	FUNCTION_29
0x4001e19	    0x48c704240000	                      mov qword [rsp], 0	       442	refs.c	FUNCTION_28
0x4001e21	    0x48c744240800	                  mov qword [rsp + 8], 0	       442	refs.c	FUNCTION_28
0x4001e2a	    0x48c744241000	               mov qword [rsp + 0x10], 0	       442	refs.c	FUNCTION_28
0x4001e33	      0xe800000000	                          call 0x4001e38	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001e38	            0x85c0	                           test eax, eax	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001e3a	     0xf8410010000	                            je 0x4001f50	       446	refs.c	FUNCTION_28	IF_1	CALL_1
0x4001e40	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001e43	      0xe800000000	                          call 0x4001e48	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001e48	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001e4b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001e4e	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001e51	      0xe800000000	                          call 0x4001e56	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001e56	           0xfb603	                   movzx eax, byte [rbx]	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e59	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e5b	     0xf84af010000	                            je 0x4002010	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e61	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e64	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e66	     0xf86c4000000	                           jbe 0x4001f30	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e6c	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001e76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001e80	        0x4883c301	                              add rbx, 1	      1116	string2.h	FUNCTION_237	WHILE_1
0x4001e84	           0xfb603	                   movzx eax, byte [rbx]	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e87	            0x84c0	                             test al, al	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e89	     0xf8481010000	                            je 0x4002010	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e8f	          0x83e82a	                           sub eax, 0x2a	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e92	            0x3c31	                            cmp al, 0x31	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e94	            0x77ea	                            ja 0x4001e80	      1114	string2.h	FUNCTION_237	WHILE_1
0x4001e96	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001e9a	            0x73e4	                           jae 0x4001e80	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001e9c	      0x48896c2430	             mov qword [rsp + 0x30], rbp	       461	refs.c	FUNCTION_28
0x4001ea1	    0x488b2d000000	            mov rbp, qword [0x04001ea8] 	      1398	refs.c	FUNCTION_71	CALL_2
0x4001ea8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       459	refs.c	FUNCTION_28
0x4001ead	      0x4c89642428	             mov qword [rsp + 0x28], r12	       460	refs.c	FUNCTION_28
0x4001eb2	        0x488b5d18	            mov rbx, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4001eb6	      0x4889442420	             mov qword [rsp + 0x20], rax	       459	refs.c	FUNCTION_28
0x4001ebb	          0x4885db	                           test rbx, rbx	      1669	refs.c	FUNCTION_89	IF_1
0x4001ebe	     0xf84ac000000	                            je 0x4001f70	      1669	refs.c	FUNCTION_89	IF_1
0x4001ec4	    0x8b0500000000	            mov eax, dword [0x04001eca] 	      1348	refs.c	FUNCTION_68	IF_1
0x4001eca	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4001ecc	     0xf881e010000	                            js 0x4001ff0	      1348	refs.c	FUNCTION_68	IF_1
0x4001ed2	            0x31d2	                            xor edx, edx	      1353	refs.c	FUNCTION_68	CALL_2
0x4001ed4	            0x85c0	                           test eax, eax	      1353	refs.c	FUNCTION_68	CALL_2
0x4001ed6	          0x488b03	                    mov rax, qword [rbx]	      1353	refs.c	FUNCTION_68	CALL_2
0x4001ed9	           0xf95c2	                                setne dl	      1353	refs.c	FUNCTION_68	CALL_2
0x4001edc	      0xbe00000000	                              mov esi, 0	      1353	refs.c	FUNCTION_68	CALL_2
0x4001ee1	          0x4889df	                            mov rdi, rbx	      1353	refs.c	FUNCTION_68	CALL_2
0x4001ee4	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x4001ee7	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4001eeb	     0xf84f0010000	                            je 0x40020e1	      1363	refs.c	FUNCTION_68	IF_4
0x4001ef1	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1388	refs.c	FUNCTION_69	CALL_2
0x4001ef6	      0xbe00000000	                              mov esi, 0	      1388	refs.c	FUNCTION_69	CALL_2
0x4001efb	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4001efe	      0xe800000000	                          call 0x4001f03	      1388	refs.c	FUNCTION_69	CALL_2
0x4001f03	            0x89c3	                            mov ebx, eax	      1388	refs.c	FUNCTION_69	CALL_2
0x4001f05	          0x4889e7	                            mov rdi, rsp	       464	refs.c	FUNCTION_28	CALL_9
0x4001f08	      0xe800000000	                          call 0x4001f0d	       464	refs.c	FUNCTION_28	CALL_9
0x4001f0d	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       471	refs.c	FUNCTION_29
0x4001f12	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       471	refs.c	FUNCTION_29
0x4001f1b	            0x89d8	                            mov eax, ebx	       471	refs.c	FUNCTION_29
0x4001f1d	     0xf85a3010000	                           jne 0x40020c6	       471	refs.c	FUNCTION_29
0x4001f23	        0x4883c440	                           add rsp, 0x40	       471	refs.c	FUNCTION_29
0x4001f27	              0x5b	                                 pop rbx	       471	refs.c	FUNCTION_29
0x4001f28	              0x5d	                                 pop rbp	       471	refs.c	FUNCTION_29
0x4001f29	            0x415c	                                 pop r12	       471	refs.c	FUNCTION_29
0x4001f2b	              0xc3	                                     ret	       471	refs.c	FUNCTION_29
0x4001f2c	         0xf1f4000	                         nop dword [rax]	       471	refs.c	FUNCTION_29
0x4001f30	    0x48ba01002000	             movabs rdx, 0x2000000200001	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001f3a	        0x480fa3c2	                             bt rdx, rax	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001f3e	     0xf8328ffffff	                           jae 0x4001e6c	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001f44	      0xe953ffffff	                           jmp 0x4001e9c	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001f49	     0xf1f80000000	                         nop dword [rax]	      1115	string2.h	FUNCTION_237	WHILE_1
0x4001f50	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001f55	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001f5a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001f5d	      0xe800000000	                          call 0x4001f62	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001f62	      0xe9d9feffff	                           jmp 0x4001e40	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001f67	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_129	CALL_2
0x4001f70	        0x4c8b4d00	                     mov r9, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x4001f74	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4001f77	     0xf844e010000	                            je 0x40020cb	      1672	refs.c	FUNCTION_89	IF_2
0x4001f7d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001f82	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001f88	     0xf1f84000000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4001f90	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001f94	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001f99	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001f9c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001f9e	           0xf97c3	                                 seta bl	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001fa1	           0xf92c2	                                 setb dl	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001fa4	            0x29d3	                            sub ebx, edx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001fa6	           0xfbedb	                           movsx ebx, bl	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001fa9	            0x85db	                           test ebx, ebx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001fab	            0x7423	                            je 0x4001fd0	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001fad	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4001fb0	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4001fb3	            0x75db	                           jne 0x4001f90	        27	refs.c	FUNCTION_1	FOR_1
0x4001fb5	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4001fba	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4001fbf	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4001fc1	      0xe800000000	                          call 0x4001fc6	      1661	refs.c	FUNCTION_88	CALL_2
0x4001fc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4001fd0	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4001fd5	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4001fd8	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4001fdb	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4001fde	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x4001fe2	     0xf841dffffff	                            je 0x4001f05	      1383	refs.c	FUNCTION_69	IF_1
0x4001fe8	          0x4889c3	                            mov rbx, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4001feb	      0xe9d4feffff	                           jmp 0x4001ec4	      1383	refs.c	FUNCTION_69	IF_1
0x4001ff0	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x4001ff2	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x4001ff7	      0xe800000000	                          call 0x4001ffc	      1349	refs.c	FUNCTION_68	CALL_1
0x4001ffc	    0x890500000000	            mov dword [0x04002002], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x4002002	      0xe9cbfeffff	                           jmp 0x4001ed2	      1349	refs.c	FUNCTION_68	CALL_1
0x4002007	    0x660f1f840000	                    nop word [rax + rax]	      1349	refs.c	FUNCTION_68	CALL_1
0x4002010	      0x488b442408	                mov rax, qword [rsp + 8]	       595	strbuf.h	FUNCTION_134	IF_1
0x4002015	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_134	IF_1
0x4002018	            0x744b	                            je 0x4002065	       595	strbuf.h	FUNCTION_134	IF_1
0x400201a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       595	strbuf.h	FUNCTION_134	IF_1
0x400201f	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	       595	strbuf.h	FUNCTION_134	IF_1
0x4002024	            0x743f	                            je 0x4002065	       595	strbuf.h	FUNCTION_134	IF_1
0x4002026	        0x488b0c24	                    mov rcx, qword [rsp]	       595	strbuf.h	FUNCTION_134	IF_1
0x400202a	          0x4885c9	                           test rcx, rcx	       141	strbuf.h	FUNCTION_126
0x400202d	     0xf8585000000	                           jne 0x40020b8	       141	strbuf.h	FUNCTION_126
0x4002033	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_128	CALL_2
0x4002038	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_128	CALL_2
0x400203b	      0xe800000000	                          call 0x4002040	       228	strbuf.h	FUNCTION_128	CALL_2
0x4002040	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       228	strbuf.h	FUNCTION_128	CALL_2
0x4002045	      0x488b442408	                mov rax, qword [rsp + 8]	       228	strbuf.h	FUNCTION_128	CALL_2
0x400204a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_128
0x400204e	      0x48894c2408	                mov qword [rsp + 8], rcx	       229	strbuf.h	FUNCTION_128
0x4002053	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_128
0x4002057	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_128
0x400205c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_128
0x4002061	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_128
0x4002065	        0x488b0424	                    mov rax, qword [rsp]	       230	strbuf.h	FUNCTION_128
0x4002069	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_126
0x400206c	            0x7537	                           jne 0x40020a5	       141	strbuf.h	FUNCTION_126
0x400206e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_128	CALL_2
0x4002073	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_128	CALL_2
0x4002076	      0xe800000000	                          call 0x400207b	       228	strbuf.h	FUNCTION_128	CALL_2
0x400207b	      0x488b542408	                mov rdx, qword [rsp + 8]	       228	strbuf.h	FUNCTION_128	CALL_2
0x4002080	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_128
0x4002084	      0x4889442408	                mov qword [rsp + 8], rax	       229	strbuf.h	FUNCTION_128
0x4002089	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_128
0x400208e	        0xc604102a	              mov byte [rax + rdx], 0x2a	       229	strbuf.h	FUNCTION_128
0x4002092	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_128
0x4002097	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_128
0x400209c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_128
0x40020a0	      0xe9f7fdffff	                           jmp 0x4001e9c	       230	strbuf.h	FUNCTION_128
0x40020a5	      0x488b542408	                mov rdx, qword [rsp + 8]	       141	strbuf.h	FUNCTION_126
0x40020aa	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020ae	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020b1	            0x75cd	                           jne 0x4002080	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020b3	            0xebb9	                           jmp 0x400206e	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020b5	           0xf1f00	                         nop dword [rax]	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020b8	        0x4883e901	                              sub rcx, 1	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020bc	          0x4839c1	                            cmp rcx, rax	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020bf	            0x7589	                           jne 0x400204a	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020c1	      0xe96dffffff	                           jmp 0x4002033	       227	strbuf.h	FUNCTION_128	IF_1	CALL_1
0x40020c6	      0xe800000000	                          call 0x40020cb	       471	refs.c	FUNCTION_29
0x40020cb	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40020d0	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40020d5	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40020da	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40020dc	      0xe800000000	                          call 0x40020e1	      1673	refs.c	FUNCTION_89	IF_2
0x40020e1	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40020e6	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x40020eb	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40020f0	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x40020f2	      0xe800000000	                          call 0x40020f7	      1364	refs.c	FUNCTION_68	IF_4
for_each_namespaced_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,5	104
0x4004da0	            0x4156	                                push r14	      1442	refs.c	FUNCTION_77
0x4004da2	            0x4155	                                push r13	      1442	refs.c	FUNCTION_77
0x4004da4	            0x4154	                                push r12	      1442	refs.c	FUNCTION_77
0x4004da6	              0x55	                                push rbp	      1442	refs.c	FUNCTION_77
0x4004da7	          0x4989f4	                            mov r12, rsi	      1442	refs.c	FUNCTION_77
0x4004daa	              0x53	                                push rbx	      1442	refs.c	FUNCTION_77
0x4004dab	          0x4889fd	                            mov rbp, rdi	      1442	refs.c	FUNCTION_77
0x4004dae	        0x4883ec20	                           sub rsp, 0x20	      1442	refs.c	FUNCTION_77
0x4004db2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1442	refs.c	FUNCTION_77
0x4004dbb	      0x4889442418	             mov qword [rsp + 0x18], rax	      1442	refs.c	FUNCTION_77
0x4004dc0	            0x31c0	                            xor eax, eax	      1442	refs.c	FUNCTION_77
0x4004dc2	    0x48c704240000	                      mov qword [rsp], 0	      1443	refs.c	FUNCTION_77
0x4004dca	    0x48c744240800	                  mov qword [rsp + 8], 0	      1443	refs.c	FUNCTION_77
0x4004dd3	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1443	refs.c	FUNCTION_77
0x4004ddc	      0xe800000000	                          call 0x4004de1	      1445	refs.c	FUNCTION_77	CALL_2
0x4004de1	      0xbe00000000	                              mov esi, 0	      1445	refs.c	FUNCTION_77	CALL_2
0x4004de6	          0x4889c2	                            mov rdx, rax	      1445	refs.c	FUNCTION_77	CALL_2
0x4004de9	          0x4889e7	                            mov rdi, rsp	      1445	refs.c	FUNCTION_77	CALL_2
0x4004dec	            0x31c0	                            xor eax, eax	      1445	refs.c	FUNCTION_77	CALL_2
0x4004dee	      0xe800000000	                          call 0x4004df3	      1445	refs.c	FUNCTION_77	CALL_2
0x4004df3	    0x4c8b35000000	            mov r14, qword [0x04004dfa] 	      1446	refs.c	FUNCTION_77	CALL_4
0x4004dfa	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      1447	refs.c	FUNCTION_77
0x4004dff	        0x498b5e18	            mov rbx, qword [r14 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4004e03	          0x4885db	                           test rbx, rbx	      1669	refs.c	FUNCTION_89	IF_1
0x4004e06	            0x7468	                            je 0x4004e70	      1669	refs.c	FUNCTION_89	IF_1
0x4004e08	    0x8b0500000000	            mov eax, dword [0x04004e0e] 	      1348	refs.c	FUNCTION_68	IF_1
0x4004e0e	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4004e10	     0xf88da000000	                            js 0x4004ef0	      1348	refs.c	FUNCTION_68	IF_1
0x4004e16	            0x31d2	                            xor edx, edx	      1353	refs.c	FUNCTION_68	CALL_2
0x4004e18	            0x85c0	                           test eax, eax	      1353	refs.c	FUNCTION_68	CALL_2
0x4004e1a	          0x488b03	                    mov rax, qword [rbx]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004e1d	           0xf95c2	                                setne dl	      1353	refs.c	FUNCTION_68	CALL_2
0x4004e20	          0x4c89ee	                            mov rsi, r13	      1353	refs.c	FUNCTION_68	CALL_2
0x4004e23	          0x4889df	                            mov rdi, rbx	      1353	refs.c	FUNCTION_68	CALL_2
0x4004e26	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004e29	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4004e2d	     0xf84d9000000	                            je 0x4004f0c	      1363	refs.c	FUNCTION_68	IF_4
0x4004e33	          0x4c89e2	                            mov rdx, r12	      1388	refs.c	FUNCTION_69	CALL_2
0x4004e36	          0x4889ee	                            mov rsi, rbp	      1388	refs.c	FUNCTION_69	CALL_2
0x4004e39	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4004e3c	      0xe800000000	                          call 0x4004e41	      1388	refs.c	FUNCTION_69	CALL_2
0x4004e41	            0x89c3	                            mov ebx, eax	      1388	refs.c	FUNCTION_69	CALL_2
0x4004e43	          0x4889e7	                            mov rdi, rsp	      1448	refs.c	FUNCTION_77	CALL_5
0x4004e46	      0xe800000000	                          call 0x4004e4b	      1448	refs.c	FUNCTION_77	CALL_5
0x4004e4b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1450	refs.c	FUNCTION_77
0x4004e50	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1450	refs.c	FUNCTION_77
0x4004e59	            0x89d8	                            mov eax, ebx	      1450	refs.c	FUNCTION_77
0x4004e5b	     0xf85a6000000	                           jne 0x4004f07	      1450	refs.c	FUNCTION_77
0x4004e61	        0x4883c420	                           add rsp, 0x20	      1450	refs.c	FUNCTION_77
0x4004e65	              0x5b	                                 pop rbx	      1450	refs.c	FUNCTION_77
0x4004e66	              0x5d	                                 pop rbp	      1450	refs.c	FUNCTION_77
0x4004e67	            0x415c	                                 pop r12	      1450	refs.c	FUNCTION_77
0x4004e69	            0x415d	                                 pop r13	      1450	refs.c	FUNCTION_77
0x4004e6b	            0x415e	                                 pop r14	      1450	refs.c	FUNCTION_77
0x4004e6d	              0xc3	                                     ret	      1450	refs.c	FUNCTION_77
0x4004e6e	            0x6690	                                     nop	      1450	refs.c	FUNCTION_77
0x4004e70	          0x4d8b0e	                     mov r9, qword [r14]	      1672	refs.c	FUNCTION_89	IF_2
0x4004e73	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4004e76	     0xf84a6000000	                            je 0x4004f22	      1672	refs.c	FUNCTION_89	IF_2
0x4004e7c	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4004e81	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4004e87	    0x660f1f840000	                    nop word [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4004e90	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004e94	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004e99	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004e9c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004e9e	           0xf97c3	                                 seta bl	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004ea1	           0xf92c2	                                 setb dl	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004ea4	            0x29d3	                            sub ebx, edx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004ea6	           0xfbedb	                           movsx ebx, bl	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004ea9	            0x85db	                           test ebx, ebx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004eab	            0x7423	                            je 0x4004ed0	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004ead	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4004eb0	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4004eb3	            0x75db	                           jne 0x4004e90	        27	refs.c	FUNCTION_1	FOR_1
0x4004eb5	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4004eba	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4004ebf	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4004ec1	      0xe800000000	                          call 0x4004ec6	      1661	refs.c	FUNCTION_88	CALL_2
0x4004ec6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4004ed0	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4004ed5	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4004ed8	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4004edb	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4004ede	        0x49894618	             mov qword [r14 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4004ee2	     0xf845bffffff	                            je 0x4004e43	      1383	refs.c	FUNCTION_69	IF_1
0x4004ee8	          0x4889c3	                            mov rbx, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4004eeb	      0xe918ffffff	                           jmp 0x4004e08	      1383	refs.c	FUNCTION_69	IF_1
0x4004ef0	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x4004ef2	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x4004ef7	      0xe800000000	                          call 0x4004efc	      1349	refs.c	FUNCTION_68	CALL_1
0x4004efc	    0x890500000000	            mov dword [0x04004f02], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x4004f02	      0xe90fffffff	                           jmp 0x4004e16	      1349	refs.c	FUNCTION_68	CALL_1
0x4004f07	      0xe800000000	                          call 0x4004f0c	      1450	refs.c	FUNCTION_77
0x4004f0c	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004f11	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x4004f16	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004f1b	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x4004f1d	      0xe800000000	                          call 0x4004f22	      1364	refs.c	FUNCTION_68	IF_4
0x4004f22	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4004f27	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4004f2c	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4004f31	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4004f33	      0xe800000000	                          call 0x4004f38	      1673	refs.c	FUNCTION_89	IF_2
refs_for_each_fullref_in	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,1	53
0x4004ba0	          0x4585c0	                           test r8d, r8d	      1428	refs.c	FUNCTION_75	IF_1
0x4004ba3	            0x4156	                                push r14	      1425	refs.c	FUNCTION_75
0x4004ba5	            0x4155	                                push r13	      1425	refs.c	FUNCTION_75
0x4004ba7	            0x4154	                                push r12	      1425	refs.c	FUNCTION_75
0x4004ba9	              0x55	                                push rbp	      1425	refs.c	FUNCTION_75
0x4004baa	        0x400f95c5	                               setne bpl	      1428	refs.c	FUNCTION_75	IF_1
0x4004bae	          0x4885ff	                           test rdi, rdi	      1383	refs.c	FUNCTION_69	IF_1
0x4004bb1	              0x53	                                push rbx	      1425	refs.c	FUNCTION_75
0x4004bb2	            0x744c	                            je 0x4004c00	      1383	refs.c	FUNCTION_69	IF_1
0x4004bb4	    0x8b0500000000	            mov eax, dword [0x04004bba] 	      1348	refs.c	FUNCTION_68	IF_1
0x4004bba	          0x4989cd	                            mov r13, rcx	      1348	refs.c	FUNCTION_68	IF_1
0x4004bbd	          0x4989d4	                            mov r12, rdx	      1348	refs.c	FUNCTION_68	IF_1
0x4004bc0	          0x4989f6	                            mov r14, rsi	      1348	refs.c	FUNCTION_68	IF_1
0x4004bc3	          0x4889fb	                            mov rbx, rdi	      1348	refs.c	FUNCTION_68	IF_1
0x4004bc6	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4004bc8	            0x7846	                            js 0x4004c10	      1348	refs.c	FUNCTION_68	IF_1
0x4004bca	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4004bcc	          0x488b03	                    mov rax, qword [rbx]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004bcf	        0x400fb6ed	                          movzx ebp, bpl	      1353	refs.c	FUNCTION_68	CALL_2
0x4004bd3	      0xba01000000	                              mov edx, 1	      1353	refs.c	FUNCTION_68	CALL_2
0x4004bd8	          0x4c89f6	                            mov rsi, r14	      1353	refs.c	FUNCTION_68	CALL_2
0x4004bdb	          0x4889df	                            mov rdi, rbx	      1353	refs.c	FUNCTION_68	CALL_2
0x4004bde	           0xf44d5	                          cmove edx, ebp	      1353	refs.c	FUNCTION_68	CALL_2
0x4004be1	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004be4	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4004be8	            0x743a	                            je 0x4004c24	      1363	refs.c	FUNCTION_68	IF_4
0x4004bea	              0x5b	                                 pop rbx	      1431	refs.c	FUNCTION_75
0x4004beb	          0x4c89ea	                            mov rdx, r13	      1388	refs.c	FUNCTION_69	CALL_2
0x4004bee	          0x4c89e6	                            mov rsi, r12	      1388	refs.c	FUNCTION_69	CALL_2
0x4004bf1	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4004bf4	              0x5d	                                 pop rbp	      1431	refs.c	FUNCTION_75
0x4004bf5	            0x415c	                                 pop r12	      1431	refs.c	FUNCTION_75
0x4004bf7	            0x415d	                                 pop r13	      1431	refs.c	FUNCTION_75
0x4004bf9	            0x415e	                                 pop r14	      1431	refs.c	FUNCTION_75
0x4004bfb	      0xe900000000	                           jmp 0x4004c00	      1388	refs.c	FUNCTION_69	CALL_2
0x4004c00	              0x5b	                                 pop rbx	      1431	refs.c	FUNCTION_75
0x4004c01	            0x31c0	                            xor eax, eax	      1431	refs.c	FUNCTION_75
0x4004c03	              0x5d	                                 pop rbp	      1431	refs.c	FUNCTION_75
0x4004c04	            0x415c	                                 pop r12	      1431	refs.c	FUNCTION_75
0x4004c06	            0x415d	                                 pop r13	      1431	refs.c	FUNCTION_75
0x4004c08	            0x415e	                                 pop r14	      1431	refs.c	FUNCTION_75
0x4004c0a	              0xc3	                                     ret	      1431	refs.c	FUNCTION_75
0x4004c0b	       0xf1f440000	                   nop dword [rax + rax]	      1431	refs.c	FUNCTION_75
0x4004c10	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x4004c12	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x4004c17	      0xe800000000	                          call 0x4004c1c	      1349	refs.c	FUNCTION_68	CALL_1
0x4004c1c	    0x890500000000	            mov dword [0x04004c22], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x4004c22	            0xeba6	                           jmp 0x4004bca	      1349	refs.c	FUNCTION_68	CALL_1
0x4004c24	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004c29	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x4004c2e	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004c33	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x4004c35	      0xe800000000	                          call 0x4004c3a	      1364	refs.c	FUNCTION_68	IF_4
update_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	62
0x4007520	            0x4155	                                push r13	      1117	refs.c	FUNCTION_60
0x4007522	            0x4154	                                push r12	      1117	refs.c	FUNCTION_60
0x4007524	          0x4989cd	                            mov r13, rcx	      1117	refs.c	FUNCTION_60
0x4007527	              0x55	                                push rbp	      1117	refs.c	FUNCTION_60
0x4007528	              0x53	                                push rbx	      1117	refs.c	FUNCTION_60
0x4007529	          0x4889fd	                            mov rbp, rdi	      1117	refs.c	FUNCTION_60
0x400752c	          0x4989f4	                            mov r12, rsi	      1117	refs.c	FUNCTION_60
0x400752f	        0x4883ec18	                           sub rsp, 0x18	      1117	refs.c	FUNCTION_60
0x4007533	    0x488b1d000000	            mov rbx, qword [0x0400753a] 	      1118	refs.c	FUNCTION_60	CALL_2
0x400753a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x400753e	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4007541	            0x742d	                            je 0x4007570	      1669	refs.c	FUNCTION_89	IF_1
0x4007543	        0x4883ec08	                              sub rsp, 8	      1118	refs.c	FUNCTION_60	CALL_2
0x4007547	          0x4889d1	                            mov rcx, rdx	      1118	refs.c	FUNCTION_60	CALL_2
0x400754a	          0x4889ee	                            mov rsi, rbp	      1118	refs.c	FUNCTION_60	CALL_2
0x400754d	            0x4151	                                 push r9	      1118	refs.c	FUNCTION_60	CALL_2
0x400754f	          0x4c89e2	                            mov rdx, r12	      1118	refs.c	FUNCTION_60	CALL_2
0x4007552	          0x4589c1	                            mov r9d, r8d	      1118	refs.c	FUNCTION_60	CALL_2
0x4007555	          0x4d89e8	                             mov r8, r13	      1118	refs.c	FUNCTION_60	CALL_2
0x4007558	      0xe800000000	                          call 0x400755d	      1118	refs.c	FUNCTION_60	CALL_2
0x400755d	        0x4883c428	                           add rsp, 0x28	      1120	refs.c	FUNCTION_60
0x4007561	              0x5b	                                 pop rbx	      1120	refs.c	FUNCTION_60
0x4007562	              0x5d	                                 pop rbp	      1120	refs.c	FUNCTION_60
0x4007563	            0x415c	                                 pop r12	      1120	refs.c	FUNCTION_60
0x4007565	            0x415d	                                 pop r13	      1120	refs.c	FUNCTION_60
0x4007567	              0xc3	                                     ret	      1120	refs.c	FUNCTION_60
0x4007568	     0xf1f84000000	                   nop dword [rax + rax]	      1120	refs.c	FUNCTION_60
0x4007570	          0x4c8b1b	                    mov r11, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4007573	          0x4d85db	                           test r11, r11	      1672	refs.c	FUNCTION_89	IF_2
0x4007576	            0x746b	                            je 0x40075e3	      1672	refs.c	FUNCTION_89	IF_2
0x4007578	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400757d	    0x41ba00000000	                             mov r10d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4007583	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4007588	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400758c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007591	          0x4c89d7	                            mov rdi, r10	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007594	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007596	            0x7418	                            je 0x40075b0	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007598	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x400759b	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x400759e	            0x75e8	                           jne 0x4007588	        27	refs.c	FUNCTION_1	FOR_1
0x40075a0	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40075a5	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40075aa	      0xe800000000	                          call 0x40075af	      1661	refs.c	FUNCTION_88	CALL_2
0x40075af	              0x90	                                     nop	      1661	refs.c	FUNCTION_88	CALL_2
0x40075b0	      0x44894c240c	              mov dword [rsp + 0xc], r9d	      1661	refs.c	FUNCTION_88	CALL_2
0x40075b5	      0x4489442408	                mov dword [rsp + 8], r8d	      1661	refs.c	FUNCTION_88	CALL_2
0x40075ba	          0x4c89df	                            mov rdi, r11	      1663	refs.c	FUNCTION_88	CALL_3
0x40075bd	        0x48891424	                    mov qword [rsp], rdx	      1663	refs.c	FUNCTION_88	CALL_3
0x40075c1	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x40075c6	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x40075c9	        0x488b1424	                    mov rdx, qword [rsp]	      1663	refs.c	FUNCTION_88	CALL_3
0x40075cd	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x40075d1	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x40075d4	      0x448b442408	                mov r8d, dword [rsp + 8]	      1676	refs.c	FUNCTION_89
0x40075d9	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      1676	refs.c	FUNCTION_89
0x40075de	      0xe960ffffff	                           jmp 0x4007543	      1676	refs.c	FUNCTION_89
0x40075e3	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40075e8	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40075ed	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40075f2	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40075f4	      0xe800000000	                          call 0x40075f9	      1673	refs.c	FUNCTION_89	IF_2
shorten_unambiguous_ref	SWITCH,0:FOR,4:WHILE,0:ELSE,0:DO,0:IF,7:functions,0:CALL,15	292
0x4003750	            0x4157	                                push r15	      1123	refs.c	FUNCTION_61
0x4003752	            0x4156	                                push r14	      1123	refs.c	FUNCTION_61
0x4003754	            0x4155	                                push r13	      1123	refs.c	FUNCTION_61
0x4003756	            0x4154	                                push r12	      1123	refs.c	FUNCTION_61
0x4003758	              0x55	                                push rbp	      1123	refs.c	FUNCTION_61
0x4003759	              0x53	                                push rbx	      1123	refs.c	FUNCTION_61
0x400375a	    0x4881ec880000	                           sub rsp, 0x88	      1123	refs.c	FUNCTION_61
0x4003761	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      1123	refs.c	FUNCTION_61
0x4003766	    0x8b3d00000000	            mov edi, dword [0x0400376c] 	      1130	refs.c	FUNCTION_61	IF_1
0x400376c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1123	refs.c	FUNCTION_61
0x4003775	      0x4889442478	             mov qword [rsp + 0x78], rax	      1123	refs.c	FUNCTION_61
0x400377a	            0x31c0	                            xor eax, eax	      1123	refs.c	FUNCTION_61
0x400377c	        0x8974242c	             mov dword [rsp + 0x2c], esi	      1123	refs.c	FUNCTION_61
0x4003780	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1128	refs.c	FUNCTION_61
0x4003789	            0x85ff	                           test edi, edi	      1130	refs.c	FUNCTION_61	IF_1
0x400378b	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1128	refs.c	FUNCTION_61
0x4003794	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1128	refs.c	FUNCTION_61
0x400379d	     0xf85c1010000	                           jne 0x4003964	      1130	refs.c	FUNCTION_61	IF_1
0x40037a3	    0x488b3d000000	            mov rdi, qword [0x040037aa] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037aa	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037ad	     0xf843f040000	                            je 0x4003bf2	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037b3	      0xe800000000	                          call 0x40037b8	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x40037b8	    0x488b3d000000	            mov rdi, qword [0x040037bf] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037bf	        0x4c8d68ff	                      lea r13, [rax - 1]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x40037c3	    0xc70500000000	               mov dword [0x040037cd], 1	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037cd	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037d0	     0xf8474040000	                            je 0x4003c4a	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037d6	      0xe800000000	                          call 0x40037db	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x40037db	    0x488b3d000000	            mov rdi, qword [0x040037e2] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037e2	      0x4d8d6c05ff	                lea r13, [r13 + rax - 1]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x40037e7	    0xc70500000000	               mov dword [0x040037f1], 2	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037f1	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037f4	     0xf845a040000	                            je 0x4003c54	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x40037fa	      0xe800000000	                          call 0x40037ff	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x40037ff	    0x488b3d000000	            mov rdi, qword [0x04003806] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003806	      0x4d8d6c05ff	                lea r13, [r13 + rax - 1]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x400380b	    0xc70500000000	               mov dword [0x04003815], 3	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003815	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003818	     0xf8440040000	                            je 0x4003c5e	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400381e	      0xe800000000	                          call 0x4003823	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4003823	    0x488b3d000000	            mov rdi, qword [0x0400382a] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400382a	      0x4d8d6c05ff	                lea r13, [r13 + rax - 1]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x400382f	    0xc70500000000	               mov dword [0x04003839], 4	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003839	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400383c	     0xf8426040000	                            je 0x4003c68	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003842	      0xe800000000	                          call 0x4003847	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4003847	    0x488b3d000000	            mov rdi, qword [0x0400384e] 	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400384e	      0x4d8d6c05ff	                lea r13, [r13 + rax - 1]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x4003853	    0xc70500000000	               mov dword [0x0400385d], 5	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400385d	          0x4885ff	                           test rdi, rdi	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003860	     0xf84da030000	                            je 0x4003c40	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003866	      0xe800000000	                          call 0x400386b	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x400386b	    0xc70500000000	               mov dword [0x04003875], 6	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003875	      0x4d8d6c05ff	                lea r13, [r13 + rax - 1]	      1143	refs.c	FUNCTION_61	IF_1	CALL_1
0x400387a	      0xb806000000	                              mov eax, 6	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x400387f	    0x488d34c50000	                        lea rsi, [rax*8]	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003887	          0x4889f0	                            mov rax, rsi	       785	git-compat-util.h	FUNCTION_200	IF_1
0x400388a	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_200	IF_1
0x400388d	          0x4c39e8	                            cmp rax, r13	       785	git-compat-util.h	FUNCTION_200	IF_1
0x4003890	     0xf82dc030000	                            jb 0x4003c72	       785	git-compat-util.h	FUNCTION_200	IF_1
0x4003896	        0x4a8d3c2e	                    lea rdi, [rsi + r13]	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x400389a	      0xe800000000	                          call 0x400389f	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x400389f	    0x486315000000	         movsxd rdx, dword [0x040038a6] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x40038a6	    0x488905000000	            mov qword [0x040038ad], rax 	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x40038ad	            0x85d2	                           test edx, edx	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x40038af	            0x7e7f	                           jle 0x4003930	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x40038b1	          0x4d85ed	                           test r13, r13	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038b4	     0xf8454030000	                            je 0x4003c0e	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038ba	            0x31ed	                            xor ebp, ebp	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038bc	            0x31db	                            xor ebx, ebx	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038be	          0x4531e4	                          xor r12d, r12d	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038c1	            0xeb19	                           jmp 0x40038dc	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038c3	       0xf1f440000	                   nop dword [rax + rax]	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038c8	        0x4883c508	                              add rbp, 8	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038cc	          0x4c39eb	                            cmp rbx, r13	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038cf	     0xf8339030000	                           jae 0x4003c0e	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038d5	    0x488b05000000	            mov rax, qword [0x040038dc] 	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x40038dc	        0x488d3cd3	                  lea rdi, [rbx + rdx*8]	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x40038e0	        0x4883ec08	                              sub rsp, 8	        64	stdio2.h	FUNCTION_244	CALL_1
0x40038e4	          0x4c89ee	                            mov rsi, r13	        64	stdio2.h	FUNCTION_244	CALL_1
0x40038e7	          0x4829de	                            sub rsi, rbx	        64	stdio2.h	FUNCTION_244	CALL_1
0x40038ea	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_244	CALL_1
0x40038f1	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_244	CALL_1
0x40038f6	          0x4801c7	                            add rdi, rax	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x40038f9	    0x41b902000000	                              mov r9d, 2	        64	stdio2.h	FUNCTION_244	CALL_1
0x40038ff	        0x4183c401	                             add r12d, 1	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003903	        0x48893c28	              mov qword [rax + rbp], rdi	      1150	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003907	    0x4c8b85000000	                     mov r8, qword [rbp]	        64	stdio2.h	FUNCTION_244	CALL_1
0x400390e	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_244	CALL_1
0x4003910	      0x6800000000	                                  push 0	        64	stdio2.h	FUNCTION_244	CALL_1
0x4003915	      0xe800000000	                          call 0x400391a	        64	stdio2.h	FUNCTION_244	CALL_1
0x400391a	    0x486315000000	         movsxd rdx, dword [0x04003921] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003921	          0x83c001	                              add eax, 1	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003924	            0x4898	                                    cdqe	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003926	          0x4801c3	                            add rbx, rax	      1151	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003929	              0x59	                                 pop rcx	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400392a	          0x4439e2	                           cmp edx, r12d	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400392d	              0x5e	                                 pop rsi	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x400392e	            0x7f98	                            jg 0x40038c8	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003930	            0x85d2	                           test edx, edx	      1157	refs.c	FUNCTION_61	IF_2
0x4003932	            0x7530	                           jne 0x4003964	      1157	refs.c	FUNCTION_61	IF_2
0x4003934	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1216	refs.c	FUNCTION_61	CALL_15
0x4003939	      0xe800000000	                          call 0x400393e	      1216	refs.c	FUNCTION_61	CALL_15
0x400393e	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      1217	refs.c	FUNCTION_61
0x4003943	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1217	refs.c	FUNCTION_61
0x400394c	     0xf8545030000	                           jne 0x4003c97	      1217	refs.c	FUNCTION_61
0x4003952	    0x4881c4880000	                           add rsp, 0x88	      1217	refs.c	FUNCTION_61
0x4003959	              0x5b	                                 pop rbx	      1217	refs.c	FUNCTION_61
0x400395a	              0x5d	                                 pop rbp	      1217	refs.c	FUNCTION_61
0x400395b	            0x415c	                                 pop r12	      1217	refs.c	FUNCTION_61
0x400395d	            0x415d	                                 pop r13	      1217	refs.c	FUNCTION_61
0x400395f	            0x415e	                                 pop r14	      1217	refs.c	FUNCTION_61
0x4003961	            0x415f	                                 pop r15	      1217	refs.c	FUNCTION_61
0x4003963	              0xc3	                                     ret	      1217	refs.c	FUNCTION_61
0x4003964	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1161	refs.c	FUNCTION_61	CALL_7
0x4003969	      0xe800000000	                          call 0x400396e	      1161	refs.c	FUNCTION_61	CALL_7
0x400396e	      0x4889442410	             mov qword [rsp + 0x10], rax	      1161	refs.c	FUNCTION_61	CALL_7
0x4003973	    0x8b0500000000	            mov eax, dword [0x04003979] 	      1164	refs.c	FUNCTION_61	FOR_3
0x4003979	        0x448d78ff	                     lea r15d, [rax - 1]	      1164	refs.c	FUNCTION_61	FOR_3
0x400397d	          0x4963c7	                        movsxd rax, r15d	      1164	refs.c	FUNCTION_61	FOR_3
0x4003980	        0x48c1e003	                              shl rax, 3	      1164	refs.c	FUNCTION_61	FOR_3
0x4003984	          0x4585ff	                         test r15d, r15d	      1164	refs.c	FUNCTION_61	FOR_3
0x4003987	      0x4889442418	             mov qword [rsp + 0x18], rax	      1164	refs.c	FUNCTION_61	FOR_3
0x400398c	            0x7f1a	                            jg 0x40039a8	      1164	refs.c	FUNCTION_61	FOR_3
0x400398e	      0xe936020000	                           jmp 0x4003bc9	      1164	refs.c	FUNCTION_61	FOR_3
0x4003993	       0xf1f440000	                   nop dword [rax + rax]	      1164	refs.c	FUNCTION_61	FOR_3
0x4003998	    0x48836c241808	               sub qword [rsp + 0x18], 8	      1164	refs.c	FUNCTION_61	FOR_3
0x400399e	        0x4183ef01	                             sub r15d, 1	      1164	refs.c	FUNCTION_61	FOR_3
0x40039a2	     0xf8421020000	                            je 0x4003bc9	      1164	refs.c	FUNCTION_61	FOR_3
0x40039a8	    0x488b05000000	            mov rax, qword [0x040039af] 	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039af	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039b4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039b9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039be	        0x488b3408	              mov rsi, qword [rax + rcx]	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039c2	            0x31c0	                            xor eax, eax	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039c4	      0xe800000000	                          call 0x40039c9	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039c9	          0x83f801	                              cmp eax, 1	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039cc	            0x75ca	                           jne 0x4003998	      1169	refs.c	FUNCTION_61	FOR_3	IF_3	CALL_8
0x40039ce	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x40039d3	      0xe800000000	                          call 0x40039d8	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x40039d8	        0x89442428	             mov dword [rsp + 0x28], eax	      1172	refs.c	FUNCTION_61	FOR_3	CALL_9
0x40039dc	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1178	refs.c	FUNCTION_61	FOR_3	IF_4
0x40039e0	            0x85c0	                           test eax, eax	      1178	refs.c	FUNCTION_61	FOR_3	IF_4
0x40039e2	     0xf8400020000	                            je 0x4003be8	      1178	refs.c	FUNCTION_61	FOR_3	IF_4
0x40039e8	    0x8b0500000000	            mov eax, dword [0x040039ee] 	      1179	refs.c	FUNCTION_61	FOR_3	IF_4
0x40039ee	          0x83f800	                              cmp eax, 0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40039f1	        0x8944240c	              mov dword [rsp + 0xc], eax	      1179	refs.c	FUNCTION_61	FOR_3	IF_4
0x40039f5	     0xf8e35020000	                           jle 0x4003c30	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x40039fb	    0x41be00000000	                             mov r14d, 0	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a01	          0x4531ed	                          xor r13d, r13d	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a04	            0xeb2d	                           jmp 0x4003a33	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a10	      0xe800000000	                          call 0x4003a15	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003a15	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003a1b	       0xf1f440000	                   nop dword [rax + rax]	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4003a20	        0x4183c501	                             add r13d, 1	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a24	        0x4983c608	                              add r14, 8	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a28	      0x443b6c240c	            cmp r13d, dword [rsp + 0xc] 	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a2d	     0xf84e3000000	                            je 0x4003b16	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a33	          0x4539ef	                          cmp r15d, r13d	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x4003a36	            0x74e8	                            je 0x4003a20	      1189	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_5
0x4003a38	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       165	strbuf.h	FUNCTION_127	IF_2
0x4003a3d	          0x498b36	                    mov rsi, qword [r14]	      1186	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003a40	    0x48c744244800	               mov qword [rsp + 0x48], 0	       164	strbuf.h	FUNCTION_127
0x4003a49	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_127	IF_2
0x4003a4f	     0xf842b010000	                            je 0x4003b80	       165	strbuf.h	FUNCTION_127	IF_2
0x4003a55	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_127	IF_2
0x4003a58	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003a5d	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003a61	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003a66	            0x31c0	                            xor eax, eax	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003a68	      0xe800000000	                          call 0x4003a6d	      1198	refs.c	FUNCTION_61	FOR_3	FOR_4	CALL_10
0x4003a6d	    0x488b2d000000	            mov rbp, qword [0x04003a74] 	      1574	refs.c	FUNCTION_83	CALL_2
0x4003a74	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x4003a79	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4003a7d	          0x4d85e4	                           test r12, r12	      1669	refs.c	FUNCTION_89	IF_1
0x4003a80	     0xf84aa000000	                            je 0x4003b30	      1669	refs.c	FUNCTION_89	IF_1
0x4003a86	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003a8b	          0x4889df	                            mov rdi, rbx	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003a8e	      0xe800000000	                          call 0x4003a93	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003a93	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003a95	     0xf8575ffffff	                           jne 0x4003a10	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003a9b	      0xbd05000000	                              mov ebp, 5	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x4003aa0	        0x498b0424	                    mov rax, qword [r12]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003aa4	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x4003aac	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003ab1	      0xb900000000	                              mov ecx, 0	      1467	refs.c	FUNCTION_80	CALL_1
0x4003ab6	      0x488d542460	                   lea rdx, [rsp + 0x60]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003abb	          0x4889de	                            mov rsi, rbx	      1467	refs.c	FUNCTION_80	CALL_1
0x4003abe	          0x4c89e7	                            mov rdi, r12	      1467	refs.c	FUNCTION_80	CALL_1
0x4003ac1	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x4003ac4	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003ac6	     0xf8554ffffff	                           jne 0x4003a20	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4003acc	      0xf644243c01	               test byte [rsp + 0x3c], 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4003ad1	     0xf84d9000000	                            je 0x4003bb0	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4003ad7	    0x488b1d000000	            mov rbx, qword [0x04003ade] 	      1543	refs.c	FUNCTION_81	FOR_1
0x4003ade	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003ae3	          0x4889df	                            mov rdi, rbx	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003ae6	      0xe800000000	                          call 0x4003aeb	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003aeb	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003aed	     0xf851dffffff	                           jne 0x4003a10	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4003af3	          0x83ed01	                              sub ebp, 1	      1506	refs.c	FUNCTION_81	FOR_1
0x4003af6	            0x75a8	                           jne 0x4003aa0	      1506	refs.c	FUNCTION_81	FOR_1
0x4003af8	      0xe800000000	                          call 0x4003afd	      1559	refs.c	FUNCTION_81
0x4003afd	        0x4183c501	                             add r13d, 1	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003b01	        0x4983c608	                              add r14, 8	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003b05	      0x443b6c240c	            cmp r13d, dword [rsp + 0xc] 	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003b0a	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x4003b10	     0xf851dffffff	                           jne 0x4003a33	      1185	refs.c	FUNCTION_61	FOR_3	FOR_4
0x4003b16	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_12
0x4003b1b	      0xe800000000	                          call 0x4003b20	      1209	refs.c	FUNCTION_61	FOR_3	IF_7	CALL_12
0x4003b20	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003b25	      0xe914feffff	                           jmp 0x400393e	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003b2a	    0x660f1f440000	                    nop word [rax + rax]	      1210	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003b30	        0x4c8b4500	                     mov r8, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x4003b34	          0x4d85c0	                             test r8, r8	      1672	refs.c	FUNCTION_89	IF_2
0x4003b37	     0xf8444010000	                            je 0x4003c81	      1672	refs.c	FUNCTION_89	IF_2
0x4003b3d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4003b42	      0xba00000000	                              mov edx, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4003b47	    0x660f1f840000	                    nop word [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4003b50	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4003b54	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4003b59	          0x4889d7	                            mov rdi, rdx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4003b5c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4003b5e	            0x7438	                            je 0x4003b98	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4003b60	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4003b63	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4003b66	            0x75e8	                           jne 0x4003b50	        27	refs.c	FUNCTION_1	FOR_1
0x4003b68	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4003b6d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4003b72	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4003b74	      0xe800000000	                          call 0x4003b79	      1661	refs.c	FUNCTION_88	CALL_2
0x4003b79	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4003b80	    0x803d00000000	                cmp byte [0x04003b87], 0	       168	strbuf.h	FUNCTION_127	CALL_2
0x4003b87	     0xf84cbfeffff	                            je 0x4003a58	       168	strbuf.h	FUNCTION_127	CALL_2
0x4003b8d	      0xe800000000	                          call 0x4003b92	       168	strbuf.h	FUNCTION_127	CALL_2
0x4003b92	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_127	CALL_2
0x4003b98	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4003b9d	          0x4c89c7	                             mov rdi, r8	      1663	refs.c	FUNCTION_88	CALL_3
0x4003ba0	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4003ba3	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x4003ba7	          0x4989c4	                            mov r12, rax	      1676	refs.c	FUNCTION_89
0x4003baa	      0xe9d7feffff	                           jmp 0x4003a86	      1676	refs.c	FUNCTION_89
0x4003baf	              0x90	                                     nop	      1676	refs.c	FUNCTION_89
0x4003bb0	          0x4885db	                           test rbx, rbx	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x4003bb3	     0xf8467feffff	                            je 0x4003a20	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x4003bb9	    0x48836c241808	               sub qword [rsp + 0x18], 8	      1200	refs.c	FUNCTION_61	FOR_3	FOR_4	IF_6	CALL_11
0x4003bbf	        0x4183ef01	                             sub r15d, 1	      1164	refs.c	FUNCTION_61	FOR_3
0x4003bc3	     0xf85dffdffff	                           jne 0x40039a8	      1164	refs.c	FUNCTION_61	FOR_3
0x4003bc9	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1214	refs.c	FUNCTION_61	CALL_13
0x4003bce	      0xe800000000	                          call 0x4003bd3	      1214	refs.c	FUNCTION_61	CALL_13
0x4003bd3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1215	refs.c	FUNCTION_61	CALL_14
0x4003bd8	      0xe800000000	                          call 0x4003bdd	      1215	refs.c	FUNCTION_61	CALL_14
0x4003bdd	      0xe952fdffff	                           jmp 0x4003934	      1215	refs.c	FUNCTION_61	CALL_14
0x4003be2	    0x660f1f440000	                    nop word [rax + rax]	      1215	refs.c	FUNCTION_61	CALL_14
0x4003be8	      0x44897c240c	             mov dword [rsp + 0xc], r15d	      1215	refs.c	FUNCTION_61	CALL_14
0x4003bed	      0xe909feffff	                           jmp 0x40039fb	      1215	refs.c	FUNCTION_61	CALL_14
0x4003bf2	            0x31ff	                            xor edi, edi	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4003bf4	      0xe800000000	                          call 0x4003bf9	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4003bf9	    0x8b1500000000	            mov edx, dword [0x04003bff] 	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003bff	    0x488905000000	            mov qword [0x04003c06], rax 	      1145	refs.c	FUNCTION_61	IF_1	CALL_4
0x4003c06	            0x85d2	                           test edx, edx	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003c08	     0xf8e22fdffff	                           jle 0x4003930	      1148	refs.c	FUNCTION_61	IF_1	FOR_2
0x4003c0e	      0xb900000000	                              mov ecx, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4003c13	      0xba7d040000	                          mov edx, 0x47d	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4003c18	      0xbe00000000	                              mov esi, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4003c1d	      0xbf00000000	                              mov edi, 0	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4003c22	      0xe800000000	                          call 0x4003c27	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4003c27	    0x660f1f840000	                    nop word [rax + rax]	      1149	refs.c	FUNCTION_61	IF_1	FOR_2	CALL_5
0x4003c30	     0xf8562fdffff	                           jne 0x4003998	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003c36	      0xe9dbfeffff	                           jmp 0x4003b16	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003c3b	       0xf1f440000	                   nop dword [rax + rax]	      1208	refs.c	FUNCTION_61	FOR_3	IF_7
0x4003c40	      0xb805000000	                              mov eax, 5	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c45	      0xe935fcffff	                           jmp 0x400387f	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c4a	      0xb801000000	                              mov eax, 1	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c4f	      0xe92bfcffff	                           jmp 0x400387f	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c54	      0xb802000000	                              mov eax, 2	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c59	      0xe921fcffff	                           jmp 0x400387f	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c5e	      0xb803000000	                              mov eax, 3	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c63	      0xe917fcffff	                           jmp 0x400387f	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c68	      0xb804000000	                              mov eax, 4	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c6d	      0xe90dfcffff	                           jmp 0x400387f	      1141	refs.c	FUNCTION_61	IF_1	FOR_1
0x4003c72	          0x4c89ea	                            mov rdx, r13	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4003c75	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4003c7a	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4003c7c	      0xe800000000	                          call 0x4003c81	       786	git-compat-util.h	FUNCTION_200	IF_1	CALL_1
0x4003c81	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4003c86	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4003c8b	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4003c90	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4003c92	      0xe800000000	                          call 0x4003c97	      1673	refs.c	FUNCTION_89	IF_2
0x4003c97	      0xe800000000	                          call 0x4003c9c	      1217	refs.c	FUNCTION_61
for_each_remote_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	87
0x4001590	            0x4155	                                push r13	       399	refs.c	FUNCTION_25
0x4001592	            0x4154	                                push r12	       399	refs.c	FUNCTION_25
0x4001594	              0x55	                                push rbp	       399	refs.c	FUNCTION_25
0x4001595	              0x53	                                push rbx	       399	refs.c	FUNCTION_25
0x4001596	          0x4889f5	                            mov rbp, rsi	       399	refs.c	FUNCTION_25
0x4001599	          0x4889fb	                            mov rbx, rdi	       399	refs.c	FUNCTION_25
0x400159c	        0x4883ec08	                              sub rsp, 8	       399	refs.c	FUNCTION_25
0x40015a0	    0x4c8b2d000000	            mov r13, qword [0x040015a7] 	       400	refs.c	FUNCTION_25	CALL_2
0x40015a7	        0x4d8b6518	            mov r12, qword [r13 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40015ab	          0x4d85e4	                           test r12, r12	      1669	refs.c	FUNCTION_89	IF_1
0x40015ae	            0x7460	                            je 0x4001610	      1669	refs.c	FUNCTION_89	IF_1
0x40015b0	    0x8b0500000000	            mov eax, dword [0x040015b6] 	      1348	refs.c	FUNCTION_68	IF_1
0x40015b6	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x40015b8	     0xf88ca000000	                            js 0x4001688	      1348	refs.c	FUNCTION_68	IF_1
0x40015be	            0x31d2	                            xor edx, edx	      1353	refs.c	FUNCTION_68	CALL_2
0x40015c0	            0x85c0	                           test eax, eax	      1353	refs.c	FUNCTION_68	CALL_2
0x40015c2	        0x498b0424	                    mov rax, qword [r12]	      1353	refs.c	FUNCTION_68	CALL_2
0x40015c6	           0xf95c2	                                setne dl	      1353	refs.c	FUNCTION_68	CALL_2
0x40015c9	      0xbe00000000	                              mov esi, 0	      1353	refs.c	FUNCTION_68	CALL_2
0x40015ce	          0x4c89e7	                            mov rdi, r12	      1353	refs.c	FUNCTION_68	CALL_2
0x40015d1	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x40015d4	      0xba0d000000	                            mov edx, 0xd	      1360	refs.c	FUNCTION_68	CALL_3
0x40015d9	      0xbe00000000	                              mov esi, 0	      1360	refs.c	FUNCTION_68	CALL_3
0x40015de	          0x4889c7	                            mov rdi, rax	      1360	refs.c	FUNCTION_68	CALL_3
0x40015e1	      0xe800000000	                          call 0x40015e6	      1360	refs.c	FUNCTION_68	CALL_3
0x40015e6	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x40015ea	     0xf84af000000	                            je 0x400169f	      1363	refs.c	FUNCTION_68	IF_4
0x40015f0	        0x4883c408	                              add rsp, 8	       401	refs.c	FUNCTION_25
0x40015f4	          0x4889ea	                            mov rdx, rbp	      1388	refs.c	FUNCTION_69	CALL_2
0x40015f7	          0x4889de	                            mov rsi, rbx	      1388	refs.c	FUNCTION_69	CALL_2
0x40015fa	              0x5b	                                 pop rbx	       401	refs.c	FUNCTION_25
0x40015fb	              0x5d	                                 pop rbp	       401	refs.c	FUNCTION_25
0x40015fc	            0x415c	                                 pop r12	       401	refs.c	FUNCTION_25
0x40015fe	            0x415d	                                 pop r13	       401	refs.c	FUNCTION_25
0x4001600	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4001603	      0xe900000000	                           jmp 0x4001608	      1388	refs.c	FUNCTION_69	CALL_2
0x4001608	     0xf1f84000000	                   nop dword [rax + rax]	      1388	refs.c	FUNCTION_69	CALL_2
0x4001610	        0x4d8b4d00	                     mov r9, qword [r13]	      1672	refs.c	FUNCTION_89	IF_2
0x4001614	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4001617	     0xf8498000000	                            je 0x40016b5	      1672	refs.c	FUNCTION_89	IF_2
0x400161d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001622	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001628	     0xf1f84000000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4001630	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001634	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001639	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400163c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400163e	            0x7420	                            je 0x4001660	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001640	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4001643	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4001646	            0x75e8	                           jne 0x4001630	        27	refs.c	FUNCTION_1	FOR_1
0x4001648	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400164d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4001652	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4001654	      0xe800000000	                          call 0x4001659	      1661	refs.c	FUNCTION_88	CALL_2
0x4001659	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4001660	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4001665	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4001668	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400166b	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x400166e	        0x49894518	             mov qword [r13 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4001672	            0x7557	                           jne 0x40016cb	      1383	refs.c	FUNCTION_69	IF_1
0x4001674	        0x4883c408	                              add rsp, 8	       401	refs.c	FUNCTION_25
0x4001678	            0x31c0	                            xor eax, eax	       401	refs.c	FUNCTION_25
0x400167a	              0x5b	                                 pop rbx	       401	refs.c	FUNCTION_25
0x400167b	              0x5d	                                 pop rbp	       401	refs.c	FUNCTION_25
0x400167c	            0x415c	                                 pop r12	       401	refs.c	FUNCTION_25
0x400167e	            0x415d	                                 pop r13	       401	refs.c	FUNCTION_25
0x4001680	              0xc3	                                     ret	       401	refs.c	FUNCTION_25
0x4001681	     0xf1f80000000	                         nop dword [rax]	       401	refs.c	FUNCTION_25
0x4001688	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x400168a	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x400168f	      0xe800000000	                          call 0x4001694	      1349	refs.c	FUNCTION_68	CALL_1
0x4001694	    0x890500000000	            mov dword [0x0400169a], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x400169a	      0xe91fffffff	                           jmp 0x40015be	      1349	refs.c	FUNCTION_68	CALL_1
0x400169f	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40016a4	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x40016a9	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40016ae	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x40016b0	      0xe800000000	                          call 0x40016b5	      1364	refs.c	FUNCTION_68	IF_4
0x40016b5	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40016ba	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40016bf	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40016c4	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40016c6	      0xe800000000	                          call 0x40016cb	      1673	refs.c	FUNCTION_89	IF_2
0x40016cb	          0x4989c4	                            mov r12, rax	      1383	refs.c	FUNCTION_69	IF_1
0x40016ce	      0xe9ddfeffff	                           jmp 0x40015b0	      1383	refs.c	FUNCTION_69	IF_1
get_submodule_ref_store	SWITCH,0:FOR,0:WHILE,1:ELSE,0:DO,0:IF,6:functions,0:CALL,10	119
0x4005bd0	            0x4155	                                push r13	      1696	refs.c	FUNCTION_91
0x4005bd2	            0x4154	                                push r12	      1696	refs.c	FUNCTION_91
0x4005bd4	              0x55	                                push rbp	      1696	refs.c	FUNCTION_91
0x4005bd5	              0x53	                                push rbx	      1696	refs.c	FUNCTION_91
0x4005bd6	        0x4883ec38	                           sub rsp, 0x38	      1696	refs.c	FUNCTION_91
0x4005bda	    0x64488b042528	                mov rax, qword fs:[0x28]	      1696	refs.c	FUNCTION_91
0x4005be3	      0x4889442428	             mov qword [rsp + 0x28], rax	      1696	refs.c	FUNCTION_91
0x4005be8	            0x31c0	                            xor eax, eax	      1696	refs.c	FUNCTION_91
0x4005bea	          0x4885ff	                           test rdi, rdi	      1702	refs.c	FUNCTION_91	IF_1
0x4005bed	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1697	refs.c	FUNCTION_91
0x4005bf6	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1697	refs.c	FUNCTION_91
0x4005bff	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1697	refs.c	FUNCTION_91
0x4005c08	            0x7435	                            je 0x4005c3f	      1702	refs.c	FUNCTION_91	IF_1
0x4005c0a	          0x4889fb	                            mov rbx, rdi	      1702	refs.c	FUNCTION_91	IF_1
0x4005c0d	      0xe800000000	                          call 0x4005c12	      1705	refs.c	FUNCTION_91	CALL_1
0x4005c12	          0x4885c0	                           test rax, rax	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c15	            0x7428	                            je 0x4005c3f	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c17	      0x807c03ff2f	         cmp byte [rbx + rax - 1], 0x2f 	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c1c	        0x488d70ff	                      lea rsi, [rax - 1]	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c20	            0x7418	                            je 0x4005c3a	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c22	            0xeb3c	                           jmp 0x4005c60	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c24	         0xf1f4000	                         nop dword [rax]	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c28	      0x807c33ff2f	         cmp byte [rbx + rsi - 1], 0x2f 	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c2d	        0x488d46ff	                      lea rax, [rsi - 1]	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c31	     0xf8591000000	                           jne 0x4005cc8	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c37	          0x4889c6	                            mov rsi, rax	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c3a	          0x4885f6	                           test rsi, rsi	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c3d	            0x75e9	                           jne 0x4005c28	      1706	refs.c	FUNCTION_91	WHILE_1
0x4005c3f	            0x31c0	                            xor eax, eax	      1703	refs.c	FUNCTION_91	IF_1
0x4005c41	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1737	refs.c	FUNCTION_91
0x4005c46	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1737	refs.c	FUNCTION_91
0x4005c4f	     0xf852c010000	                           jne 0x4005d81	      1737	refs.c	FUNCTION_91
0x4005c55	        0x4883c438	                           add rsp, 0x38	      1737	refs.c	FUNCTION_91
0x4005c59	              0x5b	                                 pop rbx	      1737	refs.c	FUNCTION_91
0x4005c5a	              0x5d	                                 pop rbp	      1737	refs.c	FUNCTION_91
0x4005c5b	            0x415c	                                 pop r12	      1737	refs.c	FUNCTION_91
0x4005c5d	            0x415d	                                 pop r13	      1737	refs.c	FUNCTION_91
0x4005c5f	              0xc3	                                     ret	      1737	refs.c	FUNCTION_91
0x4005c60	        0x803c0300	                 cmp byte [rbx + rax], 0	      1711	refs.c	FUNCTION_91	IF_3
0x4005c64	            0x7559	                           jne 0x4005cbf	      1711	refs.c	FUNCTION_91	IF_3
0x4005c66	    0x8b0500000000	            mov eax, dword [0x04005c6c] 	      1641	refs.c	FUNCTION_87	IF_1
0x4005c6c	          0x4531ed	                          xor r13d, r13d	      1699	refs.c	FUNCTION_91
0x4005c6f	            0x85c0	                           test eax, eax	      1641	refs.c	FUNCTION_87	IF_1
0x4005c71	            0x746d	                            je 0x4005ce0	      1641	refs.c	FUNCTION_87	IF_1
0x4005c73	          0x4889df	                            mov rdi, rbx	      1645	refs.c	FUNCTION_87	CALL_2
0x4005c76	      0xe800000000	                          call 0x4005c7b	      1645	refs.c	FUNCTION_87	CALL_2
0x4005c7b	          0x4889da	                            mov rdx, rbx	       308	hashmap.h	FUNCTION_178	CALL_2
0x4005c7e	          0x4889e6	                            mov rsi, rsp	       308	hashmap.h	FUNCTION_178	CALL_2
0x4005c81	      0xbf00000000	                              mov edi, 0	       308	hashmap.h	FUNCTION_178	CALL_2
0x4005c86	        0x89442408	                mov dword [rsp + 8], eax	       248	hashmap.h	FUNCTION_176
0x4005c8a	    0x48c704240000	                      mov qword [rsp], 0	       249	hashmap.h	FUNCTION_176
0x4005c92	      0xe800000000	                          call 0x4005c97	       308	hashmap.h	FUNCTION_178	CALL_2
0x4005c97	          0x4885c0	                           test rax, rax	      1646	refs.c	FUNCTION_87
0x4005c9a	            0x7444	                            je 0x4005ce0	      1646	refs.c	FUNCTION_87
0x4005c9c	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      1646	refs.c	FUNCTION_87
0x4005ca0	          0x4885ed	                           test rbp, rbp	      1716	refs.c	FUNCTION_91	IF_4
0x4005ca3	            0x743b	                            je 0x4005ce0	      1716	refs.c	FUNCTION_91	IF_4
0x4005ca5	      0x4c8d642410	                   lea r12, [rsp + 0x10]	      1716	refs.c	FUNCTION_91	IF_4
0x4005caa	          0x4c89e7	                            mov rdi, r12	      1733	refs.c	FUNCTION_91	CALL_9
0x4005cad	      0xe800000000	                          call 0x4005cb2	      1733	refs.c	FUNCTION_91	CALL_9
0x4005cb2	          0x4c89ef	                            mov rdi, r13	      1734	refs.c	FUNCTION_91	CALL_10
0x4005cb5	      0xe800000000	                          call 0x4005cba	      1734	refs.c	FUNCTION_91	CALL_10
0x4005cba	          0x4889e8	                            mov rax, rbp	      1736	refs.c	FUNCTION_91
0x4005cbd	            0xeb82	                           jmp 0x4005c41	      1736	refs.c	FUNCTION_91
0x4005cbf	          0x4889c6	                            mov rsi, rax	      1736	refs.c	FUNCTION_91
0x4005cc2	    0x660f1f440000	                    nop word [rax + rax]	      1736	refs.c	FUNCTION_91
0x4005cc8	          0x4889df	                            mov rdi, rbx	      1713	refs.c	FUNCTION_91	CALL_2
0x4005ccb	      0xe800000000	                          call 0x4005cd0	      1713	refs.c	FUNCTION_91	CALL_2
0x4005cd0	          0x4889c3	                            mov rbx, rax	      1713	refs.c	FUNCTION_91	CALL_2
0x4005cd3	          0x4989c5	                            mov r13, rax	      1713	refs.c	FUNCTION_91	CALL_2
0x4005cd6	    0x8b0500000000	            mov eax, dword [0x04005cdc] 	      1641	refs.c	FUNCTION_87	IF_1
0x4005cdc	            0x85c0	                           test eax, eax	      1641	refs.c	FUNCTION_87	IF_1
0x4005cde	            0x7593	                           jne 0x4005c73	      1641	refs.c	FUNCTION_87	IF_1
0x4005ce0	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       279	strbuf.h	FUNCTION_129	CALL_2
0x4005ce5	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x4005ce8	      0xe800000000	                          call 0x4005ced	       279	strbuf.h	FUNCTION_129	CALL_2
0x4005ced	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_129	CALL_2
0x4005cf0	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_129	CALL_2
0x4005cf3	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_129	CALL_2
0x4005cf6	      0xe800000000	                          call 0x4005cfb	       279	strbuf.h	FUNCTION_129	CALL_2
0x4005cfb	          0x4c89e7	                            mov rdi, r12	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4005cfe	      0xe800000000	                          call 0x4005d03	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4005d03	            0x85c0	                           test eax, eax	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4005d05	            0x7504	                           jne 0x4005d0b	      1720	refs.c	FUNCTION_91	IF_5	CALL_5
0x4005d07	            0x31ed	                            xor ebp, ebp	        27	refs.c	FUNCTION_1	FOR_1
0x4005d09	            0xeb9f	                           jmp 0x4005caa	        27	refs.c	FUNCTION_1	FOR_1
0x4005d0b	          0x4889de	                            mov rsi, rbx	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4005d0e	          0x4c89e7	                            mov rdi, r12	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4005d11	      0xe800000000	                          call 0x4005d16	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4005d16	            0x85c0	                           test eax, eax	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4005d18	            0x75ed	                           jne 0x4005d07	      1723	refs.c	FUNCTION_91	IF_6	CALL_6
0x4005d1a	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      1727	refs.c	FUNCTION_91	CALL_7
0x4005d1f	      0xb800000000	                              mov eax, 0	        27	refs.c	FUNCTION_1	FOR_1
0x4005d24	    0x41b800000000	                              mov r8d, 0	        27	refs.c	FUNCTION_1	FOR_1
0x4005d2a	            0xeb0c	                           jmp 0x4005d38	        27	refs.c	FUNCTION_1	FOR_1
0x4005d2c	         0xf1f4000	                         nop dword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4005d30	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4005d33	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4005d36	            0x7438	                            je 0x4005d70	        27	refs.c	FUNCTION_1	FOR_1
0x4005d38	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005d3c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005d41	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005d44	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005d46	            0x75e8	                           jne 0x4005d30	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4005d48	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4005d4b	      0xbe05000000	                              mov esi, 5	      1663	refs.c	FUNCTION_88	CALL_3
0x4005d50	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4005d53	          0x4889d9	                            mov rcx, rbx	      1729	refs.c	FUNCTION_91	CALL_8
0x4005d56	          0x4889c2	                            mov rdx, rax	      1729	refs.c	FUNCTION_91	CALL_8
0x4005d59	      0xbe00000000	                              mov esi, 0	      1729	refs.c	FUNCTION_91	CALL_8
0x4005d5e	      0xbf00000000	                              mov edi, 0	      1729	refs.c	FUNCTION_91	CALL_8
0x4005d63	          0x4889c5	                            mov rbp, rax	      1663	refs.c	FUNCTION_88	CALL_3
0x4005d66	      0xe8d5a5ffff	         call sym.register_ref_store_map	      1729	refs.c	FUNCTION_91	CALL_8
0x4005d6b	      0xe93affffff	                           jmp 0x4005caa	      1729	refs.c	FUNCTION_91	CALL_8
0x4005d70	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4005d75	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4005d7a	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4005d7c	      0xe800000000	                          call 0x4005d81	      1661	refs.c	FUNCTION_88	CALL_2
0x4005d81	      0xe800000000	                          call 0x4005d86	      1737	refs.c	FUNCTION_91
copy_existing_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	53
0x4008310	            0x4154	                                push r12	      2154	refs.c	FUNCTION_124
0x4008312	              0x55	                                push rbp	      2154	refs.c	FUNCTION_124
0x4008313	          0x4889fd	                            mov rbp, rdi	      2154	refs.c	FUNCTION_124
0x4008316	              0x53	                                push rbx	      2154	refs.c	FUNCTION_124
0x4008317	          0x4989f4	                            mov r12, rsi	      2154	refs.c	FUNCTION_124
0x400831a	        0x4883ec10	                           sub rsp, 0x10	      2154	refs.c	FUNCTION_124
0x400831e	    0x488b1d000000	            mov rbx, qword [0x04008325] 	      2155	refs.c	FUNCTION_124	CALL_2
0x4008325	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4008329	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x400832c	            0x7422	                            je 0x4008350	      1669	refs.c	FUNCTION_89	IF_1
0x400832e	          0x488b07	                    mov rax, qword [rdi]	      2150	refs.c	FUNCTION_123	CALL_1
0x4008331	          0x4889d1	                            mov rcx, rdx	      2150	refs.c	FUNCTION_123	CALL_1
0x4008334	          0x4889ee	                            mov rsi, rbp	      2150	refs.c	FUNCTION_123	CALL_1
0x4008337	          0x4c89e2	                            mov rdx, r12	      2150	refs.c	FUNCTION_123	CALL_1
0x400833a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      2150	refs.c	FUNCTION_123	CALL_1
0x400833e	        0x4883c410	                           add rsp, 0x10	      2156	refs.c	FUNCTION_124
0x4008342	              0x5b	                                 pop rbx	      2156	refs.c	FUNCTION_124
0x4008343	              0x5d	                                 pop rbp	      2156	refs.c	FUNCTION_124
0x4008344	            0x415c	                                 pop r12	      2156	refs.c	FUNCTION_124
0x4008346	            0xffe0	                                 jmp rax	      2150	refs.c	FUNCTION_123	CALL_1
0x4008348	     0xf1f84000000	                   nop dword [rax + rax]	      2150	refs.c	FUNCTION_123	CALL_1
0x4008350	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4008353	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4008356	            0x7461	                            je 0x40083b9	      1672	refs.c	FUNCTION_89	IF_2
0x4008358	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400835d	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4008363	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4008368	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400836c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4008371	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4008374	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4008376	            0x7420	                            je 0x4008398	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4008378	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x400837b	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x400837e	            0x75e8	                           jne 0x4008368	        27	refs.c	FUNCTION_1	FOR_1
0x4008380	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4008385	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400838a	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x400838c	      0xe800000000	                          call 0x4008391	      1661	refs.c	FUNCTION_88	CALL_2
0x4008391	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4008398	      0x4889542408	                mov qword [rsp + 8], rdx	      1661	refs.c	FUNCTION_88	CALL_2
0x400839d	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x40083a0	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x40083a5	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x40083a8	      0x488b542408	                mov rdx, qword [rsp + 8]	      1663	refs.c	FUNCTION_88	CALL_3
0x40083ad	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x40083b1	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x40083b4	      0xe975ffffff	                           jmp 0x400832e	      1676	refs.c	FUNCTION_89
0x40083b9	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40083be	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40083c3	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40083c8	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40083ca	      0xe800000000	                  call section_end..text	      1673	refs.c	FUNCTION_89	IF_2
ref_transaction_begin	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	50
0x4002b40	            0x4154	                                push r12	       946	refs.c	FUNCTION_52
0x4002b42	              0x55	                                push rbp	       946	refs.c	FUNCTION_52
0x4002b43	          0x4989fc	                            mov r12, rdi	       946	refs.c	FUNCTION_52
0x4002b46	    0x488b2d000000	            mov rbp, qword [0x04002b4d] 	       947	refs.c	FUNCTION_52	CALL_2
0x4002b4d	              0x53	                                push rbx	       946	refs.c	FUNCTION_52
0x4002b4e	        0x488b5d18	            mov rbx, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4002b52	          0x4885db	                           test rbx, rbx	      1669	refs.c	FUNCTION_89	IF_1
0x4002b55	            0x7421	                            je 0x4002b78	      1669	refs.c	FUNCTION_89	IF_1
0x4002b57	          0x4d85e4	                           test r12, r12	       938	refs.c	FUNCTION_51	CALL_1
0x4002b5a	            0x7478	                            je 0x4002bd4	       938	refs.c	FUNCTION_51	CALL_1
0x4002b5c	      0xbe30000000	                           mov esi, 0x30	       940	refs.c	FUNCTION_51	CALL_2
0x4002b61	      0xbf01000000	                              mov edi, 1	       940	refs.c	FUNCTION_51	CALL_2
0x4002b66	      0xe800000000	                          call 0x4002b6b	       940	refs.c	FUNCTION_51	CALL_2
0x4002b6b	          0x488918	                    mov qword [rax], rbx	       941	refs.c	FUNCTION_51
0x4002b6e	              0x5b	                                 pop rbx	       948	refs.c	FUNCTION_52
0x4002b6f	              0x5d	                                 pop rbp	       948	refs.c	FUNCTION_52
0x4002b70	            0x415c	                                 pop r12	       948	refs.c	FUNCTION_52
0x4002b72	              0xc3	                                     ret	       948	refs.c	FUNCTION_52
0x4002b73	       0xf1f440000	                   nop dword [rax + rax]	       948	refs.c	FUNCTION_52
0x4002b78	        0x4c8b4d00	                     mov r9, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x4002b7c	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4002b7f	            0x7458	                            je 0x4002bd9	      1672	refs.c	FUNCTION_89	IF_2
0x4002b81	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4002b86	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4002b8c	         0xf1f4000	                         nop dword [rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4002b90	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002b94	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002b99	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002b9c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002b9e	            0x7420	                            je 0x4002bc0	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002ba0	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4002ba3	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4002ba6	            0x75e8	                           jne 0x4002b90	        27	refs.c	FUNCTION_1	FOR_1
0x4002ba8	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4002bad	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4002bb2	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4002bb4	      0xe800000000	                          call 0x4002bb9	      1661	refs.c	FUNCTION_88	CALL_2
0x4002bb9	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4002bc0	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4002bc5	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4002bc8	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4002bcb	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x4002bcf	          0x4889c3	                            mov rbx, rax	      1676	refs.c	FUNCTION_89
0x4002bd2	            0xeb83	                           jmp 0x4002b57	      1676	refs.c	FUNCTION_89
0x4002bd4	      0xe800000000	                          call 0x4002bd9	      1676	refs.c	FUNCTION_89
0x4002bd9	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4002bde	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4002be3	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4002be8	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4002bea	      0xe800000000	                          call 0x4002bef	      1673	refs.c	FUNCTION_89	IF_2
check_refname_format	SWITCH,0:FOR,0:WHILE,1:ELSE,0:DO,0:IF,5:functions,0:CALL,1	83
0x40004d0	            0x4155	                                push r13	       120	refs.c	FUNCTION_4
0x40004d2	            0x4154	                                push r12	       120	refs.c	FUNCTION_4
0x40004d4	          0x4189f5	                           mov r13d, esi	       120	refs.c	FUNCTION_4
0x40004d7	              0x55	                                push rbp	       120	refs.c	FUNCTION_4
0x40004d8	              0x53	                                push rbx	       120	refs.c	FUNCTION_4
0x40004d9	          0x4889fb	                            mov rbx, rdi	       120	refs.c	FUNCTION_4
0x40004dc	        0x4883ec08	                              sub rsp, 8	       120	refs.c	FUNCTION_4
0x40004e0	          0x803f40	                    cmp byte [rdi], 0x40	       123	refs.c	FUNCTION_4	IF_1
0x40004e3	            0x750b	                           jne 0x40004f0	       123	refs.c	FUNCTION_4	IF_1
0x40004e5	        0x807f0100	                   cmp byte [rdi + 1], 0	       123	refs.c	FUNCTION_4	IF_1
0x40004e9	      0xb8ffffffff	                     mov eax, 0xffffffff	       125	refs.c	FUNCTION_4	IF_1
0x40004ee	            0x743d	                            je 0x400052d	       123	refs.c	FUNCTION_4	IF_1
0x40004f0	          0x4531e4	                          xor r12d, r12d	       123	refs.c	FUNCTION_4	IF_1
0x40004f3	       0xf1f440000	                   nop dword [rax + rax]	       123	refs.c	FUNCTION_4	IF_1
0x40004f8	          0x4889df	                            mov rdi, rbx	       123	refs.c	FUNCTION_4	IF_1
0x40004fb	            0x31c9	                            xor ecx, ecx	        77	refs.c	FUNCTION_3
0x40004fd	           0xfb607	                   movzx eax, byte [rdi]	        80	refs.c	FUNCTION_3	FOR_1
0x4000500	    0x80b800000000	                       cmp byte [rax], 5	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000507	          0x4889c2	                            mov rdx, rax	        80	refs.c	FUNCTION_3	FOR_1
0x400050a	            0x7739	                            ja 0x4000545	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400050c	     0xfb680000000	                   movzx eax, byte [rax]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000513	    0xff24c5000000	                       jmp qword [rax*8]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x400051a	    0x660f1f440000	                    nop word [rax + rax]	        82	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x4000520	          0x80f92e	                            cmp cl, 0x2e	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000523	            0x7520	                           jne 0x4000545	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000525	           0xf1f00	                         nop dword [rax]	        86	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_1
0x4000528	      0xb8ffffffff	                     mov eax, 0xffffffff	       125	refs.c	FUNCTION_4	IF_1
0x400052d	        0x4883c408	                              add rsp, 8	       145	refs.c	FUNCTION_4
0x4000531	              0x5b	                                 pop rbx	       145	refs.c	FUNCTION_4
0x4000532	              0x5d	                                 pop rbp	       145	refs.c	FUNCTION_4
0x4000533	            0x415c	                                 pop r12	       145	refs.c	FUNCTION_4
0x4000535	            0x415d	                                 pop r13	       145	refs.c	FUNCTION_4
0x4000537	              0xc3	                                     ret	       145	refs.c	FUNCTION_4
0x4000538	     0xf1f84000000	                   nop dword [rax + rax]	       145	refs.c	FUNCTION_4
0x4000540	          0x80f940	                            cmp cl, 0x40	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000543	            0x74e3	                            je 0x4000528	        90	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_2
0x4000545	        0x4883c701	                              add rdi, 1	        79	refs.c	FUNCTION_3	FOR_1
0x4000549	            0x89d1	                            mov ecx, edx	       106	refs.c	FUNCTION_3	FOR_1
0x400054b	            0xebb0	                           jmp 0x40004fd	       106	refs.c	FUNCTION_3	FOR_1
0x400054d	           0xf1f00	                         nop dword [rax]	       106	refs.c	FUNCTION_3	FOR_1
0x4000550	          0x4839fb	                            cmp rbx, rdi	       109	refs.c	FUNCTION_3	IF_4
0x4000553	            0x74d3	                            je 0x4000528	       109	refs.c	FUNCTION_3	IF_4
0x4000555	          0x803b2e	                    cmp byte [rbx], 0x2e	       111	refs.c	FUNCTION_3	IF_5
0x4000558	            0x74ce	                            je 0x4000528	       111	refs.c	FUNCTION_3	IF_5
0x400055a	          0x4889fd	                            mov rbp, rdi	       113	refs.c	FUNCTION_3	IF_6
0x400055d	          0x4829dd	                            sub rbp, rbx	       113	refs.c	FUNCTION_3	IF_6
0x4000560	        0x4883fd04	                              cmp rbp, 4	       113	refs.c	FUNCTION_3	IF_6
0x4000564	            0x7e17	                           jle 0x400057d	       113	refs.c	FUNCTION_3	IF_6
0x4000566	        0x4883ef05	                              sub rdi, 5	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x400056a	      0xba05000000	                              mov edx, 5	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x400056f	      0xbe00000000	                              mov esi, 0	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x4000574	      0xe800000000	                          call 0x4000579	       114	refs.c	FUNCTION_3	IF_6	CALL_1
0x4000579	            0x85c0	                           test eax, eax	       113	refs.c	FUNCTION_3	IF_6
0x400057b	            0x74ab	                            je 0x4000528	       113	refs.c	FUNCTION_3	IF_6
0x400057d	            0x85ed	                           test ebp, ebp	       130	refs.c	FUNCTION_4	WHILE_1	IF_2
0x400057f	            0x7ea7	                           jle 0x4000528	       130	refs.c	FUNCTION_4	WHILE_1	IF_2
0x4000581	          0x4863c5	                         movsxd rax, ebp	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x4000584	        0x4183c401	                             add r12d, 1	       133	refs.c	FUNCTION_4	WHILE_1
0x4000588	        0x803c0300	                 cmp byte [rbx + rax], 0	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x400058c	            0x7422	                            je 0x40005b0	       134	refs.c	FUNCTION_4	WHILE_1	IF_3
0x400058e	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	       137	refs.c	FUNCTION_4	WHILE_1
0x4000593	      0xe960ffffff	                           jmp 0x40004f8	       138	refs.c	FUNCTION_4	WHILE_1
0x4000598	     0xf1f84000000	                   nop dword [rax + rax]	       138	refs.c	FUNCTION_4	WHILE_1
0x40005a0	        0x41f6c502	                            test r13b, 2	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40005a4	            0x7482	                            je 0x4000528	        96	refs.c	FUNCTION_3	FOR_1	SWITCH_1	IF_3
0x40005a6	        0x4183e5fd	                    and r13d, 0xfffffffd	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x40005aa	            0xeb99	                           jmp 0x4000545	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x40005ac	         0xf1f4000	                         nop dword [rax]	       103	refs.c	FUNCTION_3	FOR_1	SWITCH_1
0x40005b0	      0x807c03ff2e	         cmp byte [rbx + rax - 1], 0x2e 	       140	refs.c	FUNCTION_4	IF_4
0x40005b5	     0xf846dffffff	                            je 0x4000528	       140	refs.c	FUNCTION_4	IF_4
0x40005bb	        0x4183e501	                             and r13d, 1	       142	refs.c	FUNCTION_4	IF_5
0x40005bf	        0x4183f501	                             xor r13d, 1	       142	refs.c	FUNCTION_4	IF_5
0x40005c3	        0x4183fc01	                             cmp r12d, 1	       142	refs.c	FUNCTION_4	IF_5
0x40005c7	           0xf94c0	                                 sete al	       142	refs.c	FUNCTION_4	IF_5
0x40005ca	        0x4883c408	                              add rsp, 8	       145	refs.c	FUNCTION_4
0x40005ce	          0x4121c5	                           and r13d, eax	       142	refs.c	FUNCTION_4	IF_5
0x40005d1	          0x4489e8	                           mov eax, r13d	       142	refs.c	FUNCTION_4	IF_5
0x40005d4	              0x5b	                                 pop rbx	       145	refs.c	FUNCTION_4
0x40005d5	            0xf7d8	                                 neg eax	       142	refs.c	FUNCTION_4	IF_5
0x40005d7	              0x5d	                                 pop rbp	       145	refs.c	FUNCTION_4
0x40005d8	            0x415c	                                 pop r12	       145	refs.c	FUNCTION_4
0x40005da	            0x415d	                                 pop r13	       145	refs.c	FUNCTION_4
0x40005dc	              0xc3	                                     ret	       145	refs.c	FUNCTION_4
delete_reflog	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	46
0x4007fa0	              0x55	                                push rbp	      2086	refs.c	FUNCTION_115
0x4007fa1	              0x53	                                push rbx	      2086	refs.c	FUNCTION_115
0x4007fa2	          0x4889fd	                            mov rbp, rdi	      2086	refs.c	FUNCTION_115
0x4007fa5	        0x4883ec08	                              sub rsp, 8	      2086	refs.c	FUNCTION_115
0x4007fa9	    0x488b1d000000	            mov rbx, qword [0x04007fb0] 	      2087	refs.c	FUNCTION_115	CALL_2
0x4007fb0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4007fb4	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4007fb7	            0x7417	                            je 0x4007fd0	      1669	refs.c	FUNCTION_89	IF_1
0x4007fb9	          0x488b07	                    mov rax, qword [rdi]	      2082	refs.c	FUNCTION_114	CALL_1
0x4007fbc	          0x4889ee	                            mov rsi, rbp	      2082	refs.c	FUNCTION_114	CALL_1
0x4007fbf	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      2082	refs.c	FUNCTION_114	CALL_1
0x4007fc6	        0x4883c408	                              add rsp, 8	      2088	refs.c	FUNCTION_115
0x4007fca	              0x5b	                                 pop rbx	      2088	refs.c	FUNCTION_115
0x4007fcb	              0x5d	                                 pop rbp	      2088	refs.c	FUNCTION_115
0x4007fcc	            0xffe0	                                 jmp rax	      2082	refs.c	FUNCTION_114	CALL_1
0x4007fce	            0x6690	                                     nop	      2082	refs.c	FUNCTION_114	CALL_1
0x4007fd0	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4007fd3	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4007fd6	            0x7454	                            je 0x400802c	      1672	refs.c	FUNCTION_89	IF_2
0x4007fd8	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4007fdd	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4007fe3	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4007fe8	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007fec	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007ff1	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007ff4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007ff6	            0x7420	                            je 0x4008018	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007ff8	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4007ffb	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4007ffe	            0x75e8	                           jne 0x4007fe8	        27	refs.c	FUNCTION_1	FOR_1
0x4008000	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4008005	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400800a	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x400800c	      0xe800000000	                          call 0x4008011	      1661	refs.c	FUNCTION_88	CALL_2
0x4008011	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4008018	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x400801b	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4008020	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4008023	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4008027	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x400802a	            0xeb8d	                           jmp 0x4007fb9	      1676	refs.c	FUNCTION_89
0x400802c	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4008031	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4008036	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x400803b	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x400803d	      0xe800000000	                          call 0x4008042	      1673	refs.c	FUNCTION_89	IF_2
refs_delete_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:functions,0:CALL,11	341
0x4006980	            0x4157	                                push r15	       744	refs.c	FUNCTION_43
0x4006982	            0x4156	                                push r14	       744	refs.c	FUNCTION_43
0x4006984	            0x4155	                                push r13	       744	refs.c	FUNCTION_43
0x4006986	            0x4154	                                push r12	       744	refs.c	FUNCTION_43
0x4006988	          0x4989fc	                            mov r12, rdi	       744	refs.c	FUNCTION_43
0x400698b	              0x55	                                push rbp	       744	refs.c	FUNCTION_43
0x400698c	              0x53	                                push rbx	       744	refs.c	FUNCTION_43
0x400698d	      0xbf00000000	                              mov edi, 0	       617	refs.c	FUNCTION_37
0x4006992	          0x4889cb	                            mov rbx, rcx	       744	refs.c	FUNCTION_43
0x4006995	      0xb905000000	                              mov ecx, 5	       617	refs.c	FUNCTION_37
0x400699a	          0x4889d5	                            mov rbp, rdx	       744	refs.c	FUNCTION_43
0x400699d	        0x4883ec58	                           sub rsp, 0x58	       744	refs.c	FUNCTION_43
0x40069a1	          0x4589c5	                           mov r13d, r8d	       744	refs.c	FUNCTION_43
0x40069a4	    0x64488b042528	                mov rax, qword fs:[0x28]	       744	refs.c	FUNCTION_43
0x40069ad	      0x4889442448	             mov qword [rsp + 0x48], rax	       744	refs.c	FUNCTION_43
0x40069b2	            0x31c0	                            xor eax, eax	       744	refs.c	FUNCTION_43
0x40069b4	      0x4889742408	                mov qword [rsp + 8], rsi	       744	refs.c	FUNCTION_43
0x40069b9	    0x48c744241000	               mov qword [rsp + 0x10], 0	       746	refs.c	FUNCTION_43
0x40069c2	          0x4889d6	                            mov rsi, rdx	       617	refs.c	FUNCTION_37
0x40069c5	    0x48c744241800	               mov qword [rsp + 0x18], 0	       746	refs.c	FUNCTION_43
0x40069ce	    0x48c744242000	               mov qword [rsp + 0x20], 0	       746	refs.c	FUNCTION_43
0x40069d7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       618	refs.c	FUNCTION_37	CALL_1
0x40069d9	     0xf85f1000000	                           jne 0x4006ad0	       618	refs.c	FUNCTION_37	CALL_1
0x40069df	      0xbe30000000	                           mov esi, 0x30	       940	refs.c	FUNCTION_51	CALL_2
0x40069e4	      0xbf01000000	                              mov edi, 1	       940	refs.c	FUNCTION_51	CALL_2
0x40069e9	      0xe800000000	                          call 0x40069ee	       940	refs.c	FUNCTION_51	CALL_2
0x40069ee	          0x4885db	                           test rbx, rbx	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x40069f1	          0x4989c7	                            mov r15, rax	       940	refs.c	FUNCTION_51	CALL_2
0x40069f4	          0x4c8920	                    mov qword [rax], r12	       941	refs.c	FUNCTION_51
0x40069f7	            0x741a	                            je 0x4006a13	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x40069f9	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x40069fe	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x4006a03	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_155	CALL_1
0x4006a06	      0xe800000000	                          call 0x4006a0b	       975	cache.h	FUNCTION_155	CALL_1
0x4006a0b	            0x85c0	                           test eax, eax	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4006a0d	     0xf84b7040000	                            je 0x4006eca	      1049	refs.c	FUNCTION_57	IF_1	CALL_1
0x4006a13	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4006a18	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x4006a1d	      0xbf00000000	                              mov edi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x4006a22	      0xe800000000	                          call 0x4006a27	       975	cache.h	FUNCTION_155	CALL_1
0x4006a27	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006a29	     0xf8591020000	                           jne 0x4006cc0	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006a2f	          0x4889ef	                            mov rdi, rbp	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x4006a32	      0xe800000000	                          call 0x4006a37	      1015	refs.c	FUNCTION_55	IF_1	CALL_4
0x4006a37	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006a39	           0xf94c0	                                 sete al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006a3c	            0x84c0	                             test al, al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006a3e	     0xf85e5030000	                           jne 0x4006e29	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006a44	    0x41f7c5fcffff	                   test r13d, 0xfffffffc	      1021	refs.c	FUNCTION_55	IF_2
0x4006a4b	     0xf8583040000	                           jne 0x4006ed4	      1021	refs.c	FUNCTION_55	IF_2
0x4006a51	        0x4883fb01	                              cmp rbx, 1	      1024	refs.c	FUNCTION_55
0x4006a55	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1026	refs.c	FUNCTION_55	CALL_6
0x4006a5a	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4006a5f	            0x19d2	                            sbb edx, edx	      1024	refs.c	FUNCTION_55
0x4006a61	          0x4989d8	                             mov r8, rbx	      1026	refs.c	FUNCTION_55	CALL_6
0x4006a64	      0xb900000000	                              mov ecx, 0	      1026	refs.c	FUNCTION_55	CALL_6
0x4006a69	          0x83e2f8	                     and edx, 0xfffffff8	      1024	refs.c	FUNCTION_55
0x4006a6c	          0x4889ee	                            mov rsi, rbp	      1026	refs.c	FUNCTION_55	CALL_6
0x4006a6f	          0x4c89ff	                            mov rdi, r15	      1026	refs.c	FUNCTION_55	CALL_6
0x4006a72	          0x83c20c	                            add edx, 0xc	      1024	refs.c	FUNCTION_55
0x4006a75	          0x4409ea	                            or edx, r13d	      1026	refs.c	FUNCTION_55	CALL_6
0x4006a78	      0xe800000000	                          call 0x4006a7d	      1026	refs.c	FUNCTION_55	CALL_6
0x4006a7d	          0x4c89e6	                            mov rsi, r12	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4006a80	          0x4c89ff	                            mov rdi, r15	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4006a83	      0xe800000000	                          call 0x4006a88	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4006a88	            0x85c0	                           test eax, eax	       756	refs.c	FUNCTION_43	IF_2
0x4006a8a	          0x4189c6	                           mov r14d, eax	       757	refs.c	FUNCTION_43	IF_2	CALL_7
0x4006a8d	     0xf845d020000	                            je 0x4006cf0	       756	refs.c	FUNCTION_43	IF_2
0x4006a93	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       758	refs.c	FUNCTION_43	IF_2
0x4006a98	            0x31c0	                            xor eax, eax	       758	refs.c	FUNCTION_43	IF_2
0x4006a9a	      0xbf00000000	                              mov edi, 0	       758	refs.c	FUNCTION_43	IF_2
0x4006a9f	      0xe800000000	                          call 0x4006aa4	       758	refs.c	FUNCTION_43	IF_2
0x4006aa4	        0x418b4720	            mov eax, dword [r15 + 0x20] 	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006aa8	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006aab	     0xf847f010000	                            je 0x4006c30	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006ab1	     0xf8289010000	                            jb 0x4006c40	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006ab7	          0x83f802	                              cmp eax, 2	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006aba	     0xf8480010000	                            je 0x4006c40	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006ac0	      0xbf00000000	                              mov edi, 0	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4006ac5	            0x31c0	                            xor eax, eax	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4006ac7	      0xe800000000	                          call 0x4006acc	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4006acc	         0xf1f4000	                         nop dword [rax]	       966	refs.c	FUNCTION_53	SWITCH_1	CALL_2
0x4006ad0	      0xbe00000000	                              mov esi, 0	       618	refs.c	FUNCTION_37	CALL_1
0x4006ad5	          0x4889d7	                            mov rdi, rdx	       618	refs.c	FUNCTION_37	CALL_1
0x4006ad8	      0xe800000000	                          call 0x4006add	       618	refs.c	FUNCTION_37	CALL_1
0x4006add	            0x85c0	                           test eax, eax	       617	refs.c	FUNCTION_37
0x4006adf	     0xf85fafeffff	                           jne 0x40069df	       617	refs.c	FUNCTION_37
0x4006ae5	      0xbe00000000	                              mov esi, 0	       619	refs.c	FUNCTION_37	CALL_2
0x4006aea	          0x4889ef	                            mov rdi, rbp	       619	refs.c	FUNCTION_37	CALL_2
0x4006aed	      0xe800000000	                          call 0x4006af2	       619	refs.c	FUNCTION_37	CALL_2
0x4006af2	            0x85c0	                           test eax, eax	       618	refs.c	FUNCTION_37	CALL_1
0x4006af4	          0x4189c6	                           mov r14d, eax	       619	refs.c	FUNCTION_37	CALL_2
0x4006af7	     0xf85e2feffff	                           jne 0x40069df	       618	refs.c	FUNCTION_37	CALL_1
0x4006afd	         0xfb64500	                   movzx eax, byte [rbp]	       626	refs.c	FUNCTION_38	FOR_1
0x4006b01	            0x84c0	                             test al, al	       626	refs.c	FUNCTION_38	FOR_1
0x4006b03	            0x743d	                            je 0x4006b42	       626	refs.c	FUNCTION_38	FOR_1
0x4006b05	          0x4889ea	                            mov rdx, rbp	       626	refs.c	FUNCTION_38	FOR_1
0x4006b08	            0xeb1d	                           jmp 0x4006b27	       626	refs.c	FUNCTION_38	FOR_1
0x4006b0a	    0x660f1f440000	                    nop word [rax + rax]	       626	refs.c	FUNCTION_38	FOR_1
0x4006b10	            0x3c5f	                            cmp al, 0x5f	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4006b12	            0x7408	                            je 0x4006b1c	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4006b14	            0x3c2d	                            cmp al, 0x2d	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4006b16	     0xf85c3feffff	                           jne 0x40069df	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4006b1c	        0x4883c201	                              add rdx, 1	       626	refs.c	FUNCTION_38	FOR_1
0x4006b20	           0xfb602	                   movzx eax, byte [rdx]	       626	refs.c	FUNCTION_38	FOR_1
0x4006b23	            0x84c0	                             test al, al	       626	refs.c	FUNCTION_38	FOR_1
0x4006b25	            0x741b	                            je 0x4006b42	       626	refs.c	FUNCTION_38	FOR_1
0x4006b27	           0xfb6c8	                           movzx ecx, al	      1000	git-compat-util.h	FUNCTION_208	IF_1
0x4006b2a	    0xf68100000000	                      test byte [rcx], 4	      1000	git-compat-util.h	FUNCTION_208	IF_1
0x4006b31	            0x74dd	                            je 0x4006b10	      1000	git-compat-util.h	FUNCTION_208	IF_1
0x4006b33	            0xa820	                           test al, 0x20	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4006b35	            0x75d9	                           jne 0x4006b10	       627	refs.c	FUNCTION_38	FOR_1	IF_1
0x4006b37	        0x4883c201	                              add rdx, 1	       626	refs.c	FUNCTION_38	FOR_1
0x4006b3b	           0xfb602	                   movzx eax, byte [rdx]	       626	refs.c	FUNCTION_38	FOR_1
0x4006b3e	            0x84c0	                             test al, al	       626	refs.c	FUNCTION_38	FOR_1
0x4006b40	            0x75e5	                           jne 0x4006b27	       626	refs.c	FUNCTION_38	FOR_1
0x4006b42	    0x4c8b2d000000	            mov r13, qword [0x04006b49] 	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4006b49	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4006b4d	          0x4885c0	                           test rax, rax	      1669	refs.c	FUNCTION_89	IF_1
0x4006b50	     0xf840a020000	                            je 0x4006d60	      1669	refs.c	FUNCTION_89	IF_1
0x4006b56	          0x4939c4	                            cmp r12, rax	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4006b59	     0xf8552030000	                           jne 0x4006eb1	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4006b5f	            0x31c0	                            xor eax, eax	       712	refs.c	FUNCTION_42	CALL_1
0x4006b61	          0x4889ee	                            mov rsi, rbp	       712	refs.c	FUNCTION_42	CALL_1
0x4006b64	      0xbf00000000	                              mov edi, 0	       712	refs.c	FUNCTION_42	CALL_1
0x4006b69	      0xe800000000	                          call 0x4006b6e	       712	refs.c	FUNCTION_42	CALL_1
0x4006b6e	          0x4885db	                           test rbx, rbx	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4006b71	          0x4989c4	                            mov r12, rax	       712	refs.c	FUNCTION_42	CALL_1
0x4006b74	     0xf8466010000	                            je 0x4006ce0	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4006b7a	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4006b7f	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_155	CALL_1
0x4006b84	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_155	CALL_1
0x4006b87	      0xe800000000	                          call 0x4006b8c	       975	cache.h	FUNCTION_155	CALL_1
0x4006b8c	            0x85c0	                           test eax, eax	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4006b8e	     0xf844c010000	                            je 0x4006ce0	       714	refs.c	FUNCTION_42	IF_1	CALL_2
0x4006b94	    0x8b0500000000	            mov eax, dword [0x04006b9a] 	       650	refs.c	FUNCTION_40	IF_1
0x4006b9a	            0x85c0	                           test eax, eax	       650	refs.c	FUNCTION_40	IF_1
0x4006b9c	     0xf841b020000	                            je 0x4006dbd	       650	refs.c	FUNCTION_40	IF_1
0x4006ba2	    0x48630d000000	         movsxd rcx, dword [0x04006ba9] 	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4006ba9	      0xba01000000	                              mov edx, 1	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4006bae	          0x4c89e6	                            mov rsi, r12	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4006bb1	      0xbf00000000	                              mov edi, 0	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4006bb6	      0xe800000000	                          call 0x4006bbb	       718	refs.c	FUNCTION_42	IF_1	CALL_3
0x4006bbb	            0x85c0	                           test eax, eax	       721	refs.c	FUNCTION_42	IF_1	IF_2
0x4006bbd	     0xf88ba020000	                            js 0x4006e7d	       721	refs.c	FUNCTION_42	IF_1	IF_2
0x4006bc3	    0x4c8b2d000000	            mov r13, qword [0x04006bca] 	       233	refs.c	FUNCTION_10	CALL_2
0x4006bca	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4006bce	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4006bd1	     0xf8404020000	                            je 0x4006ddb	      1669	refs.c	FUNCTION_89	IF_1
0x4006bd7	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4006bdc	          0x4531c0	                            xor r8d, r8d	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4006bdf	      0xba01000000	                              mov edx, 1	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4006be4	          0x4889ee	                            mov rsi, rbp	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4006be7	      0xe800000000	                          call 0x4006bec	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4006bec	          0x4885c0	                           test rax, rax	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4006bef	     0xf8474020000	                            je 0x4006e69	       226	refs.c	FUNCTION_9	IF_1	CALL_1
0x4006bf5	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       975	cache.h	FUNCTION_155	CALL_1
0x4006bfa	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_155	CALL_1
0x4006bff	          0x4889de	                            mov rsi, rbx	       975	cache.h	FUNCTION_155	CALL_1
0x4006c02	      0xe800000000	                          call 0x4006c07	       975	cache.h	FUNCTION_155	CALL_1
0x4006c07	            0x85c0	                           test eax, eax	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4006c09	          0x4189c6	                           mov r14d, eax	       975	cache.h	FUNCTION_155	CALL_1
0x4006c0c	     0xf8533020000	                           jne 0x4006e45	       725	refs.c	FUNCTION_42	IF_1	IF_4	CALL_9
0x4006c12	          0x4c89e7	                            mov rdi, r12	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4006c15	      0xe800000000	                          call 0x4006c1a	       731	refs.c	FUNCTION_42	IF_1	CALL_12
0x4006c1a	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_223	CALL_1
0x4006c1f	      0xe800000000	                          call 0x4006c24	       304	lockfile.h	FUNCTION_223	CALL_1
0x4006c24	            0xeb71	                           jmp 0x4006c97	       304	lockfile.h	FUNCTION_223	CALL_1
0x4006c26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       304	lockfile.h	FUNCTION_223	CALL_1
0x4006c30	      0xbf00000000	                              mov edi, 0	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x4006c35	            0x31c0	                            xor eax, eax	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x4006c37	      0xe800000000	                          call 0x4006c3c	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x4006c3c	         0xf1f4000	                         nop dword [rax]	       963	refs.c	FUNCTION_53	SWITCH_1	CALL_1
0x4006c40	            0x31db	                            xor ebx, ebx	       970	refs.c	FUNCTION_53	FOR_1
0x4006c42	      0x49837f1800	               cmp qword [r15 + 0x18], 0	       970	refs.c	FUNCTION_53	FOR_1
0x4006c47	            0x742f	                            je 0x4006c78	       970	refs.c	FUNCTION_53	FOR_1
0x4006c49	     0xf1f80000000	                         nop dword [rax]	       970	refs.c	FUNCTION_53	FOR_1
0x4006c50	        0x498b4708	                mov rax, qword [r15 + 8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006c54	        0x488b04d8	            mov rax, qword [rax + rbx*8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006c58	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006c5c	      0xe800000000	                          call 0x4006c61	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006c61	        0x498b4708	                mov rax, qword [r15 + 8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4006c65	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4006c69	        0x4883c301	                              add rbx, 1	       970	refs.c	FUNCTION_53	FOR_1
0x4006c6d	      0xe800000000	                          call 0x4006c72	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4006c72	        0x493b5f18	            cmp rbx, qword [r15 + 0x18] 	       970	refs.c	FUNCTION_53	FOR_1
0x4006c76	            0x72d8	                            jb 0x4006c50	       970	refs.c	FUNCTION_53	FOR_1
0x4006c78	        0x498b7f08	                mov rdi, qword [r15 + 8]	       974	refs.c	FUNCTION_53	CALL_5
0x4006c7c	    0x41be01000000	                             mov r14d, 1	       761	refs.c	FUNCTION_43	IF_2
0x4006c82	      0xe800000000	                          call 0x4006c87	       974	refs.c	FUNCTION_53	CALL_5
0x4006c87	          0x4c89ff	                            mov rdi, r15	       975	refs.c	FUNCTION_53	CALL_6
0x4006c8a	      0xe800000000	                          call 0x4006c8f	       975	refs.c	FUNCTION_53	CALL_6
0x4006c8f	          0x4c89e7	                            mov rdi, r12	       760	refs.c	FUNCTION_43	IF_2	CALL_9
0x4006c92	      0xe800000000	                          call 0x4006c97	       760	refs.c	FUNCTION_43	IF_2	CALL_9
0x4006c97	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       766	refs.c	FUNCTION_43
0x4006c9c	    0x644833342528	                xor rsi, qword fs:[0x28]	       766	refs.c	FUNCTION_43
0x4006ca5	          0x4489f0	                           mov eax, r14d	       766	refs.c	FUNCTION_43
0x4006ca8	     0xf85ca010000	                           jne 0x4006e78	       766	refs.c	FUNCTION_43
0x4006cae	        0x4883c458	                           add rsp, 0x58	       766	refs.c	FUNCTION_43
0x4006cb2	              0x5b	                                 pop rbx	       766	refs.c	FUNCTION_43
0x4006cb3	              0x5d	                                 pop rbp	       766	refs.c	FUNCTION_43
0x4006cb4	            0x415c	                                 pop r12	       766	refs.c	FUNCTION_43
0x4006cb6	            0x415d	                                 pop r13	       766	refs.c	FUNCTION_43
0x4006cb8	            0x415e	                                 pop r14	       766	refs.c	FUNCTION_43
0x4006cba	            0x415f	                                 pop r15	       766	refs.c	FUNCTION_43
0x4006cbc	              0xc3	                                     ret	       766	refs.c	FUNCTION_43
0x4006cbd	           0xf1f00	                         nop dword [rax]	       766	refs.c	FUNCTION_43
0x4006cc0	      0xbe01000000	                              mov esi, 1	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4006cc5	          0x4889ef	                            mov rdi, rbp	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4006cc8	      0xe800000000	                          call 0x4006ccd	      1014	refs.c	FUNCTION_55	IF_1	CALL_3
0x4006ccd	            0x85c0	                           test eax, eax	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006ccf	           0xf95c0	                                setne al	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006cd2	      0xe965fdffff	                           jmp 0x4006a3c	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006cd7	    0x660f1f840000	                    nop word [rax + rax]	      1013	refs.c	FUNCTION_55	IF_1	CALL_2
0x4006ce0	          0x4c89e7	                            mov rdi, r12	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4006ce3	      0xe800000000	                          call 0x4006ce8	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4006ce8	            0xebad	                           jmp 0x4006c97	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4006cea	    0x660f1f440000	                    nop word [rax + rax]	       734	refs.c	FUNCTION_42	ELSE_1	CALL_14
0x4006cf0	        0x418b4720	            mov eax, dword [r15 + 0x20] 	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006cf4	          0x83f801	                              cmp eax, 1	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006cf7	     0xf8433ffffff	                            je 0x4006c30	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006cfd	            0x7209	                            jb 0x4006d08	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006cff	          0x83f802	                              cmp eax, 2	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006d02	     0xf85b8fdffff	                           jne 0x4006ac0	       957	refs.c	FUNCTION_53	SWITCH_1
0x4006d08	            0x31db	                            xor ebx, ebx	       970	refs.c	FUNCTION_53	FOR_1
0x4006d0a	      0x49837f1800	               cmp qword [r15 + 0x18], 0	       970	refs.c	FUNCTION_53	FOR_1
0x4006d0f	            0x742f	                            je 0x4006d40	       970	refs.c	FUNCTION_53	FOR_1
0x4006d11	     0xf1f80000000	                         nop dword [rax]	       970	refs.c	FUNCTION_53	FOR_1
0x4006d18	        0x498b4708	                mov rax, qword [r15 + 8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006d1c	        0x488b04d8	            mov rax, qword [rax + rbx*8]	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006d20	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006d24	      0xe800000000	                          call 0x4006d29	       971	refs.c	FUNCTION_53	FOR_1	CALL_3
0x4006d29	        0x498b4708	                mov rax, qword [r15 + 8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4006d2d	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4006d31	        0x4883c301	                              add rbx, 1	       970	refs.c	FUNCTION_53	FOR_1
0x4006d35	      0xe800000000	                          call 0x4006d3a	       972	refs.c	FUNCTION_53	FOR_1	CALL_4
0x4006d3a	        0x493b5f18	            cmp rbx, qword [r15 + 0x18] 	       970	refs.c	FUNCTION_53	FOR_1
0x4006d3e	            0x72d8	                            jb 0x4006d18	       970	refs.c	FUNCTION_53	FOR_1
0x4006d40	        0x498b7f08	                mov rdi, qword [r15 + 8]	       974	refs.c	FUNCTION_53	CALL_5
0x4006d44	      0xe800000000	                          call 0x4006d49	       974	refs.c	FUNCTION_53	CALL_5
0x4006d49	          0x4c89ff	                            mov rdi, r15	       975	refs.c	FUNCTION_53	CALL_6
0x4006d4c	      0xe800000000	                          call 0x4006d51	       975	refs.c	FUNCTION_53	CALL_6
0x4006d51	          0x4c89e7	                            mov rdi, r12	       764	refs.c	FUNCTION_43	CALL_11
0x4006d54	      0xe800000000	                          call 0x4006d59	       764	refs.c	FUNCTION_43	CALL_11
0x4006d59	      0xe939ffffff	                           jmp 0x4006c97	       765	refs.c	FUNCTION_43
0x4006d5e	            0x6690	                                     nop	       765	refs.c	FUNCTION_43
0x4006d60	        0x4d8b5500	                    mov r10, qword [r13]	      1672	refs.c	FUNCTION_89	IF_2
0x4006d64	          0x4d85d2	                           test r10, r10	      1672	refs.c	FUNCTION_89	IF_2
0x4006d67	     0xf842e010000	                            je 0x4006e9b	      1672	refs.c	FUNCTION_89	IF_2
0x4006d6d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006d72	    0x41b900000000	                              mov r9d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006d78	     0xf1f84000000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4006d80	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006d84	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006d89	          0x4c89cf	                             mov rdi, r9	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006d8c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006d8e	            0x7419	                            je 0x4006da9	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006d90	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4006d93	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4006d96	            0x75e8	                           jne 0x4006d80	        27	refs.c	FUNCTION_1	FOR_1
0x4006d98	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4006d9d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4006da2	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4006da4	      0xe800000000	                          call 0x4006da9	      1661	refs.c	FUNCTION_88	CALL_2
0x4006da9	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4006dae	          0x4c89d7	                            mov rdi, r10	      1663	refs.c	FUNCTION_88	CALL_3
0x4006db1	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4006db4	        0x49894518	             mov qword [r13 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4006db8	      0xe999fdffff	                           jmp 0x4006b56	      1675	refs.c	FUNCTION_89	CALL_1
0x4006dbd	      0xbe00000000	                              mov esi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4006dc2	      0xbf00000000	                              mov edi, 0	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4006dc7	      0xe800000000	                          call 0x4006dcc	       651	refs.c	FUNCTION_40	IF_1	CALL_1
0x4006dcc	    0xc70500000000	               mov dword [0x04006dd6], 1	       652	refs.c	FUNCTION_40	IF_1
0x4006dd6	      0xe9c7fdffff	                           jmp 0x4006ba2	       652	refs.c	FUNCTION_40	IF_1
0x4006ddb	        0x4d8b4500	                     mov r8, qword [r13]	      1672	refs.c	FUNCTION_89	IF_2
0x4006ddf	          0x4d85c0	                             test r8, r8	      1672	refs.c	FUNCTION_89	IF_2
0x4006de2	     0xf84b3000000	                            je 0x4006e9b	      1672	refs.c	FUNCTION_89	IF_2
0x4006de8	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006ded	    0x41b900000000	                              mov r9d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006df3	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4006df8	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006dfc	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006e01	          0x4c89cf	                             mov rdi, r9	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006e04	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006e06	            0x740a	                            je 0x4006e12	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006e08	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4006e0b	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4006e0e	            0x75e8	                           jne 0x4006df8	        27	refs.c	FUNCTION_1	FOR_1
0x4006e10	            0xeb86	                           jmp 0x4006d98	        27	refs.c	FUNCTION_1	FOR_1
0x4006e12	          0x4c89c7	                             mov rdi, r8	      1663	refs.c	FUNCTION_88	CALL_3
0x4006e15	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4006e1a	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4006e1d	        0x49894518	             mov qword [r13 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4006e21	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4006e24	      0xe9aefdffff	                           jmp 0x4006bd7	      1676	refs.c	FUNCTION_89
0x4006e29	      0x4c8d642410	                   lea r12, [rsp + 0x10]	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4006e2e	          0x4889ea	                            mov rdx, rbp	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4006e31	      0xbe00000000	                              mov esi, 0	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4006e36	            0x31c0	                            xor eax, eax	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4006e38	          0x4c89e7	                            mov rdi, r12	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4006e3b	      0xe800000000	                          call 0x4006e40	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4006e40	      0xe94efcffff	                           jmp 0x4006a93	      1016	refs.c	FUNCTION_55	IF_1	CALL_5
0x4006e45	          0x4889ee	                            mov rsi, rbp	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4006e48	      0xbf00000000	                              mov edi, 0	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4006e4d	            0x31c0	                            xor eax, eax	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4006e4f	      0xe800000000	                          call 0x4006e54	       726	refs.c	FUNCTION_42	IF_1	IF_4	CALL_10
0x4006e54	      0xbf00000000	                              mov edi, 0	       304	lockfile.h	FUNCTION_223	CALL_1
0x4006e59	    0x41beffffffff	                    mov r14d, 0xffffffff	       728	refs.c	FUNCTION_42	IF_1	IF_4
0x4006e5f	      0xe800000000	                          call 0x4006e64	       304	lockfile.h	FUNCTION_223	CALL_1
0x4006e64	      0xe92efeffff	                           jmp 0x4006c97	       304	lockfile.h	FUNCTION_223	CALL_1
0x4006e69	          0x4889ee	                            mov rsi, rbp	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4006e6c	      0xbf00000000	                              mov edi, 0	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4006e71	            0x31c0	                            xor eax, eax	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4006e73	      0xe800000000	                          call 0x4006e78	       724	refs.c	FUNCTION_42	IF_1	CALL_8
0x4006e78	      0xe800000000	                          call 0x4006e7d	       766	refs.c	FUNCTION_43
0x4006e7d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_185
0x4006e82	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_185
0x4006e84	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_185
0x4006e89	      0xe800000000	                          call 0x4006e8e	        54	gettext.h	FUNCTION_185
0x4006e8e	          0x4c89e6	                            mov rsi, r12	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4006e91	          0x4889c7	                            mov rdi, rax	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4006e94	            0x31c0	                            xor eax, eax	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4006e96	      0xe800000000	                          call 0x4006e9b	       722	refs.c	FUNCTION_42	IF_1	CALL_6
0x4006e9b	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4006ea0	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4006ea5	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4006eaa	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4006eac	      0xe800000000	                          call 0x4006eb1	      1673	refs.c	FUNCTION_89	IF_2
0x4006eb1	      0xb900000000	                              mov ecx, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4006eb6	      0xbaed020000	                          mov edx, 0x2ed	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4006ebb	      0xbe00000000	                              mov esi, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4006ec0	      0xbf00000000	                              mov edi, 0	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4006ec5	      0xe800000000	                          call 0x4006eca	       749	refs.c	FUNCTION_43	IF_1	CALL_3
0x4006eca	      0xbf00000000	                              mov edi, 0	      1050	refs.c	FUNCTION_57	CALL_2
0x4006ecf	      0xe800000000	                          call 0x4006ed4	      1050	refs.c	FUNCTION_57	CALL_2
0x4006ed4	          0x4489e9	                           mov ecx, r13d	      1022	refs.c	FUNCTION_55	IF_2
0x4006ed7	      0xba00000000	                              mov edx, 0	      1022	refs.c	FUNCTION_55	IF_2
0x4006edc	      0xbefe030000	                          mov esi, 0x3fe	      1022	refs.c	FUNCTION_55	IF_2
0x4006ee1	      0xbf00000000	                              mov edi, 0	      1022	refs.c	FUNCTION_55	IF_2
0x4006ee6	            0x31c0	                            xor eax, eax	      1022	refs.c	FUNCTION_55	IF_2
0x4006ee8	      0xe800000000	                          call 0x4006eed	      1022	refs.c	FUNCTION_55	IF_2
for_each_branch_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	87
0x40013a0	            0x4155	                                push r13	       389	refs.c	FUNCTION_23
0x40013a2	            0x4154	                                push r12	       389	refs.c	FUNCTION_23
0x40013a4	              0x55	                                push rbp	       389	refs.c	FUNCTION_23
0x40013a5	              0x53	                                push rbx	       389	refs.c	FUNCTION_23
0x40013a6	          0x4889f5	                            mov rbp, rsi	       389	refs.c	FUNCTION_23
0x40013a9	          0x4889fb	                            mov rbx, rdi	       389	refs.c	FUNCTION_23
0x40013ac	        0x4883ec08	                              sub rsp, 8	       389	refs.c	FUNCTION_23
0x40013b0	    0x4c8b2d000000	            mov r13, qword [0x040013b7] 	       390	refs.c	FUNCTION_23	CALL_2
0x40013b7	        0x4d8b6518	            mov r12, qword [r13 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40013bb	          0x4d85e4	                           test r12, r12	      1669	refs.c	FUNCTION_89	IF_1
0x40013be	            0x7460	                            je 0x4001420	      1669	refs.c	FUNCTION_89	IF_1
0x40013c0	    0x8b0500000000	            mov eax, dword [0x040013c6] 	      1348	refs.c	FUNCTION_68	IF_1
0x40013c6	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x40013c8	     0xf88ca000000	                            js 0x4001498	      1348	refs.c	FUNCTION_68	IF_1
0x40013ce	            0x31d2	                            xor edx, edx	      1353	refs.c	FUNCTION_68	CALL_2
0x40013d0	            0x85c0	                           test eax, eax	      1353	refs.c	FUNCTION_68	CALL_2
0x40013d2	        0x498b0424	                    mov rax, qword [r12]	      1353	refs.c	FUNCTION_68	CALL_2
0x40013d6	           0xf95c2	                                setne dl	      1353	refs.c	FUNCTION_68	CALL_2
0x40013d9	      0xbe00000000	                              mov esi, 0	      1353	refs.c	FUNCTION_68	CALL_2
0x40013de	          0x4c89e7	                            mov rdi, r12	      1353	refs.c	FUNCTION_68	CALL_2
0x40013e1	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x40013e4	      0xba0b000000	                            mov edx, 0xb	      1360	refs.c	FUNCTION_68	CALL_3
0x40013e9	      0xbe00000000	                              mov esi, 0	      1360	refs.c	FUNCTION_68	CALL_3
0x40013ee	          0x4889c7	                            mov rdi, rax	      1360	refs.c	FUNCTION_68	CALL_3
0x40013f1	      0xe800000000	                          call 0x40013f6	      1360	refs.c	FUNCTION_68	CALL_3
0x40013f6	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x40013fa	     0xf84af000000	                            je 0x40014af	      1363	refs.c	FUNCTION_68	IF_4
0x4001400	        0x4883c408	                              add rsp, 8	       391	refs.c	FUNCTION_23
0x4001404	          0x4889ea	                            mov rdx, rbp	      1388	refs.c	FUNCTION_69	CALL_2
0x4001407	          0x4889de	                            mov rsi, rbx	      1388	refs.c	FUNCTION_69	CALL_2
0x400140a	              0x5b	                                 pop rbx	       391	refs.c	FUNCTION_23
0x400140b	              0x5d	                                 pop rbp	       391	refs.c	FUNCTION_23
0x400140c	            0x415c	                                 pop r12	       391	refs.c	FUNCTION_23
0x400140e	            0x415d	                                 pop r13	       391	refs.c	FUNCTION_23
0x4001410	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4001413	      0xe900000000	                           jmp 0x4001418	      1388	refs.c	FUNCTION_69	CALL_2
0x4001418	     0xf1f84000000	                   nop dword [rax + rax]	      1388	refs.c	FUNCTION_69	CALL_2
0x4001420	        0x4d8b4d00	                     mov r9, qword [r13]	      1672	refs.c	FUNCTION_89	IF_2
0x4001424	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4001427	     0xf8498000000	                            je 0x40014c5	      1672	refs.c	FUNCTION_89	IF_2
0x400142d	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001432	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4001438	     0xf1f84000000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4001440	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001444	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001449	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400144c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400144e	            0x7420	                            je 0x4001470	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4001450	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4001453	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4001456	            0x75e8	                           jne 0x4001440	        27	refs.c	FUNCTION_1	FOR_1
0x4001458	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400145d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4001462	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4001464	      0xe800000000	                          call 0x4001469	      1661	refs.c	FUNCTION_88	CALL_2
0x4001469	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4001470	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4001475	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4001478	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x400147b	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x400147e	        0x49894518	             mov qword [r13 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4001482	            0x7557	                           jne 0x40014db	      1383	refs.c	FUNCTION_69	IF_1
0x4001484	        0x4883c408	                              add rsp, 8	       391	refs.c	FUNCTION_23
0x4001488	            0x31c0	                            xor eax, eax	       391	refs.c	FUNCTION_23
0x400148a	              0x5b	                                 pop rbx	       391	refs.c	FUNCTION_23
0x400148b	              0x5d	                                 pop rbp	       391	refs.c	FUNCTION_23
0x400148c	            0x415c	                                 pop r12	       391	refs.c	FUNCTION_23
0x400148e	            0x415d	                                 pop r13	       391	refs.c	FUNCTION_23
0x4001490	              0xc3	                                     ret	       391	refs.c	FUNCTION_23
0x4001491	     0xf1f80000000	                         nop dword [rax]	       391	refs.c	FUNCTION_23
0x4001498	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x400149a	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x400149f	      0xe800000000	                          call 0x40014a4	      1349	refs.c	FUNCTION_68	CALL_1
0x40014a4	    0x890500000000	            mov dword [0x040014aa], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x40014aa	      0xe91fffffff	                           jmp 0x40013ce	      1349	refs.c	FUNCTION_68	CALL_1
0x40014af	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40014b4	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x40014b9	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x40014be	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x40014c0	      0xe800000000	                          call 0x40014c5	      1364	refs.c	FUNCTION_68	IF_4
0x40014c5	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40014ca	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40014cf	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40014d4	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40014d6	      0xe800000000	                          call 0x40014db	      1673	refs.c	FUNCTION_89	IF_2
0x40014db	          0x4989c4	                            mov r12, rax	      1383	refs.c	FUNCTION_69	IF_1
0x40014de	      0xe9ddfeffff	                           jmp 0x40013c0	      1383	refs.c	FUNCTION_69	IF_1
ref_resolves_to_object	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,2:functions,0:CALL,1	36
0x40008a0	              0x55	                                push rbp	       187	refs.c	FUNCTION_6
0x40008a1	              0x53	                                push rbx	       187	refs.c	FUNCTION_6
0x40008a2	            0x31db	                            xor ebx, ebx	       189	refs.c	FUNCTION_6	IF_1
0x40008a4	        0x4883ec08	                              sub rsp, 8	       187	refs.c	FUNCTION_6
0x40008a8	          0x83e204	                              and edx, 4	       188	refs.c	FUNCTION_6	IF_1
0x40008ab	            0x7413	                            je 0x40008c0	       188	refs.c	FUNCTION_6	IF_1
0x40008ad	        0x4883c408	                              add rsp, 8	       195	refs.c	FUNCTION_6
0x40008b1	            0x89d8	                            mov eax, ebx	       195	refs.c	FUNCTION_6
0x40008b3	              0x5b	                                 pop rbx	       195	refs.c	FUNCTION_6
0x40008b4	              0x5d	                                 pop rbp	       195	refs.c	FUNCTION_6
0x40008b5	              0xc3	                                     ret	       195	refs.c	FUNCTION_6
0x40008b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       195	refs.c	FUNCTION_6
0x40008c0	          0x4889f0	                            mov rax, rsi	       195	refs.c	FUNCTION_6
0x40008c3	          0x4889fd	                            mov rbp, rdi	       195	refs.c	FUNCTION_6
0x40008c6	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_170	CALL_1
0x40008c8	          0x4889c7	                            mov rdi, rax	      1251	cache.h	FUNCTION_170	CALL_1
0x40008cb	      0xe800000000	                          call 0x40008d0	      1251	cache.h	FUNCTION_170	CALL_1
0x40008d0	            0x85c0	                           test eax, eax	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x40008d2	            0x89c3	                            mov ebx, eax	      1251	cache.h	FUNCTION_170	CALL_1
0x40008d4	            0x7412	                            je 0x40008e8	       190	refs.c	FUNCTION_6	IF_2	CALL_1
0x40008d6	      0xbb01000000	                              mov ebx, 1	       194	refs.c	FUNCTION_6
0x40008db	        0x4883c408	                              add rsp, 8	       195	refs.c	FUNCTION_6
0x40008df	            0x89d8	                            mov eax, ebx	       195	refs.c	FUNCTION_6
0x40008e1	              0x5b	                                 pop rbx	       195	refs.c	FUNCTION_6
0x40008e2	              0x5d	                                 pop rbp	       195	refs.c	FUNCTION_6
0x40008e3	              0xc3	                                     ret	       195	refs.c	FUNCTION_6
0x40008e4	         0xf1f4000	                         nop dword [rax]	       195	refs.c	FUNCTION_6
0x40008e8	          0x4889ee	                            mov rsi, rbp	       191	refs.c	FUNCTION_6	IF_2
0x40008eb	      0xbf00000000	                              mov edi, 0	       191	refs.c	FUNCTION_6	IF_2
0x40008f0	            0x31c0	                            xor eax, eax	       191	refs.c	FUNCTION_6	IF_2
0x40008f2	      0xe800000000	                          call 0x40008f7	       191	refs.c	FUNCTION_6	IF_2
0x40008f7	        0x4883c408	                              add rsp, 8	       195	refs.c	FUNCTION_6
0x40008fb	            0x89d8	                            mov eax, ebx	       195	refs.c	FUNCTION_6
0x40008fd	              0x5b	                                 pop rbx	       195	refs.c	FUNCTION_6
0x40008fe	              0x5d	                                 pop rbp	       195	refs.c	FUNCTION_6
0x40008ff	              0xc3	                                     ret	       195	refs.c	FUNCTION_6
create_symref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	53
0x40065e0	            0x4154	                                push r12	      1816	refs.c	FUNCTION_98
0x40065e2	              0x55	                                push rbp	      1816	refs.c	FUNCTION_98
0x40065e3	          0x4889fd	                            mov rbp, rdi	      1816	refs.c	FUNCTION_98
0x40065e6	              0x53	                                push rbx	      1816	refs.c	FUNCTION_98
0x40065e7	          0x4989f4	                            mov r12, rsi	      1816	refs.c	FUNCTION_98
0x40065ea	        0x4883ec10	                           sub rsp, 0x10	      1816	refs.c	FUNCTION_98
0x40065ee	    0x488b1d000000	            mov rbx, qword [0x040065f5] 	      1817	refs.c	FUNCTION_98	CALL_2
0x40065f5	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40065f9	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x40065fc	            0x7422	                            je 0x4006620	      1669	refs.c	FUNCTION_89	IF_1
0x40065fe	          0x488b07	                    mov rax, qword [rdi]	      1809	refs.c	FUNCTION_97	CALL_1
0x4006601	          0x4889d1	                            mov rcx, rdx	      1809	refs.c	FUNCTION_97	CALL_1
0x4006604	          0x4889ee	                            mov rsi, rbp	      1809	refs.c	FUNCTION_97	CALL_1
0x4006607	          0x4c89e2	                            mov rdx, r12	      1809	refs.c	FUNCTION_97	CALL_1
0x400660a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1809	refs.c	FUNCTION_97	CALL_1
0x400660e	        0x4883c410	                           add rsp, 0x10	      1819	refs.c	FUNCTION_98
0x4006612	              0x5b	                                 pop rbx	      1819	refs.c	FUNCTION_98
0x4006613	              0x5d	                                 pop rbp	      1819	refs.c	FUNCTION_98
0x4006614	            0x415c	                                 pop r12	      1819	refs.c	FUNCTION_98
0x4006616	            0xffe0	                                 jmp rax	      1809	refs.c	FUNCTION_97	CALL_1
0x4006618	     0xf1f84000000	                   nop dword [rax + rax]	      1809	refs.c	FUNCTION_97	CALL_1
0x4006620	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4006623	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4006626	            0x7461	                            je 0x4006689	      1672	refs.c	FUNCTION_89	IF_2
0x4006628	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400662d	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4006633	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4006638	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400663c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006641	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006644	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006646	            0x7420	                            je 0x4006668	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4006648	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x400664b	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x400664e	            0x75e8	                           jne 0x4006638	        27	refs.c	FUNCTION_1	FOR_1
0x4006650	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4006655	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400665a	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x400665c	      0xe800000000	                          call 0x4006661	      1661	refs.c	FUNCTION_88	CALL_2
0x4006661	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4006668	      0x4889542408	                mov qword [rsp + 8], rdx	      1661	refs.c	FUNCTION_88	CALL_2
0x400666d	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4006670	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4006675	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4006678	      0x488b542408	                mov rdx, qword [rsp + 8]	      1663	refs.c	FUNCTION_88	CALL_3
0x400667d	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4006681	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4006684	      0xe975ffffff	                           jmp 0x40065fe	      1676	refs.c	FUNCTION_89
0x4006689	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x400668e	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4006693	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4006698	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x400669a	      0xe800000000	                          call 0x400669f	      1673	refs.c	FUNCTION_89	IF_2
for_each_ref_in	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	96
0x4004900	            0x4156	                                push r14	      1408	refs.c	FUNCTION_73
0x4004902	    0x4c8b35000000	            mov r14, qword [0x04004909] 	      1409	refs.c	FUNCTION_73	CALL_2
0x4004909	            0x4155	                                push r13	      1408	refs.c	FUNCTION_73
0x400490b	            0x4154	                                push r12	      1408	refs.c	FUNCTION_73
0x400490d	          0x4989d4	                            mov r12, rdx	      1408	refs.c	FUNCTION_73
0x4004910	              0x55	                                push rbp	      1408	refs.c	FUNCTION_73
0x4004911	              0x53	                                push rbx	      1408	refs.c	FUNCTION_73
0x4004912	          0x4889f5	                            mov rbp, rsi	      1408	refs.c	FUNCTION_73
0x4004915	        0x4d8b6e18	            mov r13, qword [r14 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4004919	          0x4889fb	                            mov rbx, rdi	      1408	refs.c	FUNCTION_73
0x400491c	          0x4d85ed	                           test r13, r13	      1669	refs.c	FUNCTION_89	IF_1
0x400491f	            0x7467	                            je 0x4004988	      1669	refs.c	FUNCTION_89	IF_1
0x4004921	      0xe800000000	                          call 0x4004926	      1404	refs.c	FUNCTION_72	CALL_2
0x4004926	          0x4189c6	                           mov r14d, eax	      1404	refs.c	FUNCTION_72	CALL_2
0x4004929	    0x8b0500000000	            mov eax, dword [0x0400492f] 	      1348	refs.c	FUNCTION_68	IF_1
0x400492f	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4004931	     0xf88c9000000	                            js 0x4004a00	      1348	refs.c	FUNCTION_68	IF_1
0x4004937	            0x31d2	                            xor edx, edx	      1353	refs.c	FUNCTION_68	CALL_2
0x4004939	            0x85c0	                           test eax, eax	      1353	refs.c	FUNCTION_68	CALL_2
0x400493b	        0x498b4500	                    mov rax, qword [r13]	      1353	refs.c	FUNCTION_68	CALL_2
0x400493f	           0xf95c2	                                setne dl	      1353	refs.c	FUNCTION_68	CALL_2
0x4004942	          0x4889de	                            mov rsi, rbx	      1353	refs.c	FUNCTION_68	CALL_2
0x4004945	          0x4c89ef	                            mov rdi, r13	      1353	refs.c	FUNCTION_68	CALL_2
0x4004948	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x400494b	          0x4585f6	                         test r14d, r14d	      1359	refs.c	FUNCTION_68	IF_3
0x400494e	            0x7520	                           jne 0x4004970	      1359	refs.c	FUNCTION_68	IF_3
0x4004950	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4004954	     0xf84bd000000	                            je 0x4004a17	      1363	refs.c	FUNCTION_68	IF_4
0x400495a	              0x5b	                                 pop rbx	      1410	refs.c	FUNCTION_73
0x400495b	          0x4c89e2	                            mov rdx, r12	      1388	refs.c	FUNCTION_69	CALL_2
0x400495e	          0x4889ee	                            mov rsi, rbp	      1388	refs.c	FUNCTION_69	CALL_2
0x4004961	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4004964	              0x5d	                                 pop rbp	      1410	refs.c	FUNCTION_73
0x4004965	            0x415c	                                 pop r12	      1410	refs.c	FUNCTION_73
0x4004967	            0x415d	                                 pop r13	      1410	refs.c	FUNCTION_73
0x4004969	            0x415e	                                 pop r14	      1410	refs.c	FUNCTION_73
0x400496b	      0xe900000000	                           jmp 0x4004970	      1388	refs.c	FUNCTION_69	CALL_2
0x4004970	          0x4489f2	                           mov edx, r14d	      1360	refs.c	FUNCTION_68	CALL_3
0x4004973	      0xbe00000000	                              mov esi, 0	      1360	refs.c	FUNCTION_68	CALL_3
0x4004978	          0x4889c7	                            mov rdi, rax	      1360	refs.c	FUNCTION_68	CALL_3
0x400497b	      0xe800000000	                          call 0x4004980	      1360	refs.c	FUNCTION_68	CALL_3
0x4004980	            0xebce	                           jmp 0x4004950	      1360	refs.c	FUNCTION_68	CALL_3
0x4004982	    0x660f1f440000	                    nop word [rax + rax]	      1360	refs.c	FUNCTION_68	CALL_3
0x4004988	          0x4d8b0e	                     mov r9, qword [r14]	      1672	refs.c	FUNCTION_89	IF_2
0x400498b	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x400498e	     0xf8499000000	                            je 0x4004a2d	      1672	refs.c	FUNCTION_89	IF_2
0x4004994	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4004999	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400499f	              0x90	                                     nop	      1672	refs.c	FUNCTION_89	IF_2
0x40049a0	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40049a4	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40049a9	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40049ac	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40049ae	            0x7420	                            je 0x40049d0	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40049b0	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x40049b3	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x40049b6	            0x75e8	                           jne 0x40049a0	        27	refs.c	FUNCTION_1	FOR_1
0x40049b8	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40049bd	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40049c2	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x40049c4	      0xe800000000	                          call 0x40049c9	      1661	refs.c	FUNCTION_88	CALL_2
0x40049c9	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x40049d0	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x40049d3	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x40049d8	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x40049db	          0x4889df	                            mov rdi, rbx	      1404	refs.c	FUNCTION_72	CALL_2
0x40049de	          0x4989c5	                            mov r13, rax	      1663	refs.c	FUNCTION_88	CALL_3
0x40049e1	        0x49894618	             mov qword [r14 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x40049e5	      0xe800000000	                          call 0x40049ea	      1404	refs.c	FUNCTION_72	CALL_2
0x40049ea	          0x4d85ed	                           test r13, r13	      1383	refs.c	FUNCTION_69	IF_1
0x40049ed	            0x7554	                           jne 0x4004a43	      1383	refs.c	FUNCTION_69	IF_1
0x40049ef	              0x5b	                                 pop rbx	      1410	refs.c	FUNCTION_73
0x40049f0	            0x31c0	                            xor eax, eax	      1410	refs.c	FUNCTION_73
0x40049f2	              0x5d	                                 pop rbp	      1410	refs.c	FUNCTION_73
0x40049f3	            0x415c	                                 pop r12	      1410	refs.c	FUNCTION_73
0x40049f5	            0x415d	                                 pop r13	      1410	refs.c	FUNCTION_73
0x40049f7	            0x415e	                                 pop r14	      1410	refs.c	FUNCTION_73
0x40049f9	              0xc3	                                     ret	      1410	refs.c	FUNCTION_73
0x40049fa	    0x660f1f440000	                    nop word [rax + rax]	      1410	refs.c	FUNCTION_73
0x4004a00	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x4004a02	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x4004a07	      0xe800000000	                          call 0x4004a0c	      1349	refs.c	FUNCTION_68	CALL_1
0x4004a0c	    0x890500000000	            mov dword [0x04004a12], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x4004a12	      0xe920ffffff	                           jmp 0x4004937	      1349	refs.c	FUNCTION_68	CALL_1
0x4004a17	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004a1c	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x4004a21	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004a26	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x4004a28	      0xe800000000	                          call 0x4004a2d	      1364	refs.c	FUNCTION_68	IF_4
0x4004a2d	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4004a32	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4004a37	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4004a3c	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4004a3e	      0xe800000000	                          call 0x4004a43	      1673	refs.c	FUNCTION_89	IF_2
0x4004a43	          0x4189c6	                           mov r14d, eax	      1404	refs.c	FUNCTION_72	CALL_2
0x4004a46	      0xe9defeffff	                           jmp 0x4004929	      1404	refs.c	FUNCTION_72	CALL_2
rename_ref	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	53
0x4008240	            0x4154	                                push r12	      2143	refs.c	FUNCTION_122
0x4008242	              0x55	                                push rbp	      2143	refs.c	FUNCTION_122
0x4008243	          0x4889fd	                            mov rbp, rdi	      2143	refs.c	FUNCTION_122
0x4008246	              0x53	                                push rbx	      2143	refs.c	FUNCTION_122
0x4008247	          0x4989f4	                            mov r12, rsi	      2143	refs.c	FUNCTION_122
0x400824a	        0x4883ec10	                           sub rsp, 0x10	      2143	refs.c	FUNCTION_122
0x400824e	    0x488b1d000000	            mov rbx, qword [0x04008255] 	      2144	refs.c	FUNCTION_122	CALL_2
0x4008255	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4008259	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x400825c	            0x7422	                            je 0x4008280	      1669	refs.c	FUNCTION_89	IF_1
0x400825e	          0x488b07	                    mov rax, qword [rdi]	      2139	refs.c	FUNCTION_121	CALL_1
0x4008261	          0x4889d1	                            mov rcx, rdx	      2139	refs.c	FUNCTION_121	CALL_1
0x4008264	          0x4889ee	                            mov rsi, rbp	      2139	refs.c	FUNCTION_121	CALL_1
0x4008267	          0x4c89e2	                            mov rdx, r12	      2139	refs.c	FUNCTION_121	CALL_1
0x400826a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2139	refs.c	FUNCTION_121	CALL_1
0x400826e	        0x4883c410	                           add rsp, 0x10	      2145	refs.c	FUNCTION_122
0x4008272	              0x5b	                                 pop rbx	      2145	refs.c	FUNCTION_122
0x4008273	              0x5d	                                 pop rbp	      2145	refs.c	FUNCTION_122
0x4008274	            0x415c	                                 pop r12	      2145	refs.c	FUNCTION_122
0x4008276	            0xffe0	                                 jmp rax	      2139	refs.c	FUNCTION_121	CALL_1
0x4008278	     0xf1f84000000	                   nop dword [rax + rax]	      2139	refs.c	FUNCTION_121	CALL_1
0x4008280	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4008283	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4008286	            0x7461	                            je 0x40082e9	      1672	refs.c	FUNCTION_89	IF_2
0x4008288	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400828d	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4008293	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4008298	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400829c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40082a1	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40082a4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40082a6	            0x7420	                            je 0x40082c8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40082a8	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x40082ab	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x40082ae	            0x75e8	                           jne 0x4008298	        27	refs.c	FUNCTION_1	FOR_1
0x40082b0	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40082b5	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40082ba	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x40082bc	      0xe800000000	                          call 0x40082c1	      1661	refs.c	FUNCTION_88	CALL_2
0x40082c1	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x40082c8	      0x4889542408	                mov qword [rsp + 8], rdx	      1661	refs.c	FUNCTION_88	CALL_2
0x40082cd	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x40082d0	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x40082d5	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x40082d8	      0x488b542408	                mov rdx, qword [rsp + 8]	      1663	refs.c	FUNCTION_88	CALL_3
0x40082dd	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x40082e1	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x40082e4	      0xe975ffffff	                           jmp 0x400825e	      1676	refs.c	FUNCTION_89
0x40082e9	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40082ee	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x40082f3	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x40082f8	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x40082fa	      0xe800000000	                          call 0x40082ff	      1673	refs.c	FUNCTION_89	IF_2
parse_hide_refs_config	SWITCH,0:FOR,0:WHILE,1:ELSE,0:DO,0:IF,3:functions,0:CALL,6	79
0x4003ca0	              0x55	                                push rbp	      1222	refs.c	FUNCTION_62
0x4003ca1	              0x53	                                push rbx	      1222	refs.c	FUNCTION_62
0x4003ca2	      0xb912000000	                           mov ecx, 0x12	      1224	refs.c	FUNCTION_62	IF_1
0x4003ca7	          0x4889f3	                            mov rbx, rsi	      1222	refs.c	FUNCTION_62
0x4003caa	      0xbe00000000	                              mov esi, 0	      1224	refs.c	FUNCTION_62	IF_1
0x4003caf	          0x4889fd	                            mov rbp, rdi	      1222	refs.c	FUNCTION_62
0x4003cb2	        0x4883ec18	                           sub rsp, 0x18	      1222	refs.c	FUNCTION_62
0x4003cb6	          0x4989d1	                             mov r9, rdx	      1222	refs.c	FUNCTION_62
0x4003cb9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1222	refs.c	FUNCTION_62
0x4003cc2	      0x4889442408	                mov qword [rsp + 8], rax	      1222	refs.c	FUNCTION_62
0x4003cc7	            0x31c0	                            xor eax, eax	      1222	refs.c	FUNCTION_62
0x4003cc9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1224	refs.c	FUNCTION_62	IF_1
0x4003ccb	     0xf857f000000	                           jne 0x4003d50	      1224	refs.c	FUNCTION_62	IF_1
0x4003cd1	          0x4885db	                           test rbx, rbx	      1230	refs.c	FUNCTION_62	IF_1	IF_2
0x4003cd4	     0xf84c9000000	                            je 0x4003da3	      1230	refs.c	FUNCTION_62	IF_1	IF_2
0x4003cda	          0x4889df	                            mov rdi, rbx	      1232	refs.c	FUNCTION_62	IF_1	CALL_3
0x4003cdd	      0xe800000000	                          call 0x4003ce2	      1232	refs.c	FUNCTION_62	IF_1	CALL_3
0x4003ce2	          0x4889c7	                            mov rdi, rax	      1233	refs.c	FUNCTION_62	IF_1	CALL_4
0x4003ce5	          0x4889c3	                            mov rbx, rax	      1232	refs.c	FUNCTION_62	IF_1	CALL_3
0x4003ce8	      0xe800000000	                          call 0x4003ced	      1233	refs.c	FUNCTION_62	IF_1	CALL_4
0x4003ced	            0x85c0	                           test eax, eax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003cef	            0x7432	                            je 0x4003d23	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003cf1	          0x4863c8	                         movsxd rcx, eax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003cf4	      0x807c0bff2f	         cmp byte [rbx + rcx - 1], 0x2f 	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003cf9	            0x7528	                           jne 0x4003d23	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003cfb	          0x83e801	                              sub eax, 1	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003cfe	        0x488d140b	                    lea rdx, [rbx + rcx]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d02	          0x4829c1	                            sub rcx, rax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d05	        0x488d040b	                    lea rax, [rbx + rcx]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d09	            0xeb0f	                           jmp 0x4003d1a	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d0b	       0xf1f440000	                   nop dword [rax + rax]	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d10	        0x4883ea01	                              sub rdx, 1	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d14	        0x807aff2f	                cmp byte [rdx - 1], 0x2f	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d18	            0x7509	                           jne 0x4003d23	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d1a	          0x4839c2	                            cmp rdx, rax	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d1d	        0xc642ff00	                   mov byte [rdx - 1], 0	      1235	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d21	            0x75ed	                           jne 0x4003d10	      1234	refs.c	FUNCTION_62	IF_1	WHILE_1
0x4003d23	    0x488b3d000000	            mov rdi, qword [0x04003d2a] 	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x4003d2a	          0x4885ff	                           test rdi, rdi	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x4003d2d	            0x7455	                            je 0x4003d84	      1236	refs.c	FUNCTION_62	IF_1	IF_3
0x4003d2f	          0x4889de	                            mov rsi, rbx	      1240	refs.c	FUNCTION_62	IF_1	CALL_6
0x4003d32	      0xe800000000	                          call 0x4003d37	      1240	refs.c	FUNCTION_62	IF_1	CALL_6
0x4003d37	            0x31c0	                            xor eax, eax	      1242	refs.c	FUNCTION_62
0x4003d39	      0x488b742408	                mov rsi, qword [rsp + 8]	      1243	refs.c	FUNCTION_62
0x4003d3e	    0x644833342528	                xor rsi, qword fs:[0x28]	      1243	refs.c	FUNCTION_62
0x4003d47	            0x756c	                           jne 0x4003db5	      1243	refs.c	FUNCTION_62
0x4003d49	        0x4883c418	                           add rsp, 0x18	      1243	refs.c	FUNCTION_62
0x4003d4d	              0x5b	                                 pop rbx	      1243	refs.c	FUNCTION_62
0x4003d4e	              0x5d	                                 pop rbp	      1243	refs.c	FUNCTION_62
0x4003d4f	              0xc3	                                     ret	      1243	refs.c	FUNCTION_62
0x4003d50	            0x31c9	                            xor ecx, ecx	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d52	            0x31d2	                            xor edx, edx	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d54	          0x4989e0	                             mov r8, rsp	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d57	          0x4c89ce	                             mov rsi, r9	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d5a	          0x4889ef	                            mov rdi, rbp	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d5d	      0xe800000000	                          call 0x4003d62	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d62	            0x85c0	                           test eax, eax	      1224	refs.c	FUNCTION_62	IF_1
0x4003d64	            0x751a	                           jne 0x4003d80	      1224	refs.c	FUNCTION_62	IF_1
0x4003d66	        0x488b3424	                    mov rsi, qword [rsp]	      1226	refs.c	FUNCTION_62	IF_1
0x4003d6a	      0xbf00000000	                              mov edi, 0	      1226	refs.c	FUNCTION_62	IF_1
0x4003d6f	      0xb909000000	                              mov ecx, 9	      1226	refs.c	FUNCTION_62	IF_1
0x4003d74	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d76	     0xf8455ffffff	                            je 0x4003cd1	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d7c	            0xebbb	                           jmp 0x4003d39	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d7e	            0x6690	                                     nop	      1225	refs.c	FUNCTION_62	IF_1	CALL_1
0x4003d80	            0x31c0	                            xor eax, eax	      1242	refs.c	FUNCTION_62
0x4003d82	            0xebb5	                           jmp 0x4003d39	      1242	refs.c	FUNCTION_62
0x4003d84	      0xbf01000000	                              mov edi, 1	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_5
0x4003d89	      0xbe20000000	                           mov esi, 0x20	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_5
0x4003d8e	      0xe800000000	                          call 0x4003d93	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_5
0x4003d93	    0x488905000000	            mov qword [0x04003d9a], rax 	      1237	refs.c	FUNCTION_62	IF_1	IF_3	CALL_5
0x4003d9a	        0x80481001	                 or byte [rax + 0x10], 1	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x4003d9e	          0x4889c7	                            mov rdi, rax	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x4003da1	            0xeb8c	                           jmp 0x4003d2f	      1238	refs.c	FUNCTION_62	IF_1	IF_3
0x4003da3	          0x4889ef	                            mov rdi, rbp	      1231	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003da6	      0xe800000000	                          call 0x4003dab	      1231	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003dab	      0xb8ffffffff	                     mov eax, 0xffffffff	      1231	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003db0	      0xe984ffffff	                           jmp 0x4003d39	      1231	refs.c	FUNCTION_62	IF_1	CALL_2
0x4003db5	      0xe800000000	                          call 0x4003dba	      1243	refs.c	FUNCTION_62
for_each_reflog	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	49
0x4007bb0	            0x4154	                                push r12	      2024	refs.c	FUNCTION_105
0x4007bb2	    0x4c8b25000000	            mov r12, qword [0x04007bb9] 	      2025	refs.c	FUNCTION_105	CALL_2
0x4007bb9	              0x55	                                push rbp	      2024	refs.c	FUNCTION_105
0x4007bba	              0x53	                                push rbx	      2024	refs.c	FUNCTION_105
0x4007bbb	          0x4889fb	                            mov rbx, rdi	      2024	refs.c	FUNCTION_105
0x4007bbe	          0x4889f5	                            mov rbp, rsi	      2024	refs.c	FUNCTION_105
0x4007bc1	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4007bc6	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4007bc9	            0x741d	                            je 0x4007be8	      1669	refs.c	FUNCTION_89	IF_1
0x4007bcb	          0x488b07	                    mov rax, qword [rdi]	      2018	refs.c	FUNCTION_104	CALL_1
0x4007bce	          0xff5078	                 call qword [rax + 0x78]	      2018	refs.c	FUNCTION_104	CALL_1
0x4007bd1	          0x4889ea	                            mov rdx, rbp	      2020	refs.c	FUNCTION_104	CALL_2
0x4007bd4	          0x4889de	                            mov rsi, rbx	      2020	refs.c	FUNCTION_104	CALL_2
0x4007bd7	          0x4889c7	                            mov rdi, rax	      2020	refs.c	FUNCTION_104	CALL_2
0x4007bda	              0x5b	                                 pop rbx	      2026	refs.c	FUNCTION_105
0x4007bdb	              0x5d	                                 pop rbp	      2026	refs.c	FUNCTION_105
0x4007bdc	            0x415c	                                 pop r12	      2026	refs.c	FUNCTION_105
0x4007bde	      0xe900000000	                           jmp 0x4007be3	      2020	refs.c	FUNCTION_104	CALL_2
0x4007be3	       0xf1f440000	                   nop dword [rax + rax]	      2020	refs.c	FUNCTION_104	CALL_2
0x4007be8	        0x4d8b0c24	                     mov r9, qword [r12]	      1672	refs.c	FUNCTION_89	IF_2
0x4007bec	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4007bef	            0x7454	                            je 0x4007c45	      1672	refs.c	FUNCTION_89	IF_2
0x4007bf1	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4007bf6	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4007bfc	         0xf1f4000	                         nop dword [rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4007c00	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007c04	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007c09	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007c0c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007c0e	            0x7420	                            je 0x4007c30	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007c10	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4007c13	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4007c16	            0x75e8	                           jne 0x4007c00	        27	refs.c	FUNCTION_1	FOR_1
0x4007c18	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4007c1d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4007c22	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4007c24	      0xe800000000	                          call 0x4007c29	      1661	refs.c	FUNCTION_88	CALL_2
0x4007c29	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4007c30	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4007c33	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4007c38	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4007c3b	      0x4989442418	             mov qword [r12 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4007c40	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4007c43	            0xeb86	                           jmp 0x4007bcb	      1676	refs.c	FUNCTION_89
0x4007c45	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4007c4a	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4007c4f	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4007c54	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4007c56	      0xe800000000	                          call 0x4007c5b	      1673	refs.c	FUNCTION_89	IF_2
for_each_fullref_in	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,1:functions,0:CALL,2	93
0x4004a50	            0x4157	                                push r15	      1413	refs.c	FUNCTION_74
0x4004a52	            0x4156	                                push r14	      1413	refs.c	FUNCTION_74
0x4004a54	          0x4989fe	                            mov r14, rdi	      1413	refs.c	FUNCTION_74
0x4004a57	            0x4155	                                push r13	      1413	refs.c	FUNCTION_74
0x4004a59	            0x4154	                                push r12	      1413	refs.c	FUNCTION_74
0x4004a5b	          0x4989d4	                            mov r12, rdx	      1413	refs.c	FUNCTION_74
0x4004a5e	              0x55	                                push rbp	      1413	refs.c	FUNCTION_74
0x4004a5f	              0x53	                                push rbx	      1413	refs.c	FUNCTION_74
0x4004a60	          0x4889f5	                            mov rbp, rsi	      1413	refs.c	FUNCTION_74
0x4004a63	        0x4883ec08	                              sub rsp, 8	      1413	refs.c	FUNCTION_74
0x4004a67	    0x4c8b3d000000	            mov r15, qword [0x04004a6e] 	      1418	refs.c	FUNCTION_74	CALL_2
0x4004a6e	            0x85c9	                           test ecx, ecx	      1416	refs.c	FUNCTION_74	IF_1
0x4004a70	           0xf95c3	                                setne bl	      1416	refs.c	FUNCTION_74	IF_1
0x4004a73	        0x4d8b6f18	            mov r13, qword [r15 + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4004a77	          0x4d85ed	                           test r13, r13	      1669	refs.c	FUNCTION_89	IF_1
0x4004a7a	            0x7454	                            je 0x4004ad0	      1669	refs.c	FUNCTION_89	IF_1
0x4004a7c	    0x8b0500000000	            mov eax, dword [0x04004a82] 	      1348	refs.c	FUNCTION_68	IF_1
0x4004a82	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4004a84	     0xf88be000000	                            js 0x4004b48	      1348	refs.c	FUNCTION_68	IF_1
0x4004a8a	            0x85c0	                           test eax, eax	      1348	refs.c	FUNCTION_68	IF_1
0x4004a8c	        0x498b4500	                    mov rax, qword [r13]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004a90	           0xfb6db	                           movzx ebx, bl	      1353	refs.c	FUNCTION_68	CALL_2
0x4004a93	      0xba01000000	                              mov edx, 1	      1353	refs.c	FUNCTION_68	CALL_2
0x4004a98	          0x4c89f6	                            mov rsi, r14	      1353	refs.c	FUNCTION_68	CALL_2
0x4004a9b	          0x4c89ef	                            mov rdi, r13	      1353	refs.c	FUNCTION_68	CALL_2
0x4004a9e	           0xf44d3	                          cmove edx, ebx	      1353	refs.c	FUNCTION_68	CALL_2
0x4004aa1	          0xff5068	                 call qword [rax + 0x68]	      1353	refs.c	FUNCTION_68	CALL_2
0x4004aa4	        0xf6400801	                  test byte [rax + 8], 1	      1363	refs.c	FUNCTION_68	IF_4
0x4004aa8	     0xf84b1000000	                            je 0x4004b5f	      1363	refs.c	FUNCTION_68	IF_4
0x4004aae	        0x4883c408	                              add rsp, 8	      1420	refs.c	FUNCTION_74
0x4004ab2	          0x4c89e2	                            mov rdx, r12	      1388	refs.c	FUNCTION_69	CALL_2
0x4004ab5	          0x4889ee	                            mov rsi, rbp	      1388	refs.c	FUNCTION_69	CALL_2
0x4004ab8	              0x5b	                                 pop rbx	      1420	refs.c	FUNCTION_74
0x4004ab9	              0x5d	                                 pop rbp	      1420	refs.c	FUNCTION_74
0x4004aba	            0x415c	                                 pop r12	      1420	refs.c	FUNCTION_74
0x4004abc	            0x415d	                                 pop r13	      1420	refs.c	FUNCTION_74
0x4004abe	            0x415e	                                 pop r14	      1420	refs.c	FUNCTION_74
0x4004ac0	            0x415f	                                 pop r15	      1420	refs.c	FUNCTION_74
0x4004ac2	          0x4889c7	                            mov rdi, rax	      1388	refs.c	FUNCTION_69	CALL_2
0x4004ac5	      0xe900000000	                           jmp 0x4004aca	      1388	refs.c	FUNCTION_69	CALL_2
0x4004aca	    0x660f1f440000	                    nop word [rax + rax]	      1388	refs.c	FUNCTION_69	CALL_2
0x4004ad0	          0x4d8b0f	                     mov r9, qword [r15]	      1672	refs.c	FUNCTION_89	IF_2
0x4004ad3	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4004ad6	     0xf8499000000	                            je 0x4004b75	      1672	refs.c	FUNCTION_89	IF_2
0x4004adc	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4004ae1	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4004ae7	    0x660f1f840000	                    nop word [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4004af0	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004af4	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004af9	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004afc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004afe	            0x7420	                            je 0x4004b20	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4004b00	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4004b03	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4004b06	            0x75e8	                           jne 0x4004af0	        27	refs.c	FUNCTION_1	FOR_1
0x4004b08	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4004b0d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4004b12	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4004b14	      0xe800000000	                          call 0x4004b19	      1661	refs.c	FUNCTION_88	CALL_2
0x4004b19	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4004b20	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4004b25	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4004b28	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4004b2b	          0x4885c0	                           test rax, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4004b2e	        0x49894718	             mov qword [r15 + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4004b32	            0x7557	                           jne 0x4004b8b	      1383	refs.c	FUNCTION_69	IF_1
0x4004b34	        0x4883c408	                              add rsp, 8	      1420	refs.c	FUNCTION_74
0x4004b38	            0x31c0	                            xor eax, eax	      1420	refs.c	FUNCTION_74
0x4004b3a	              0x5b	                                 pop rbx	      1420	refs.c	FUNCTION_74
0x4004b3b	              0x5d	                                 pop rbp	      1420	refs.c	FUNCTION_74
0x4004b3c	            0x415c	                                 pop r12	      1420	refs.c	FUNCTION_74
0x4004b3e	            0x415d	                                 pop r13	      1420	refs.c	FUNCTION_74
0x4004b40	            0x415e	                                 pop r14	      1420	refs.c	FUNCTION_74
0x4004b42	            0x415f	                                 pop r15	      1420	refs.c	FUNCTION_74
0x4004b44	              0xc3	                                     ret	      1420	refs.c	FUNCTION_74
0x4004b45	           0xf1f00	                         nop dword [rax]	      1420	refs.c	FUNCTION_74
0x4004b48	            0x31f6	                            xor esi, esi	      1349	refs.c	FUNCTION_68	CALL_1
0x4004b4a	      0xbf00000000	                              mov edi, 0	      1349	refs.c	FUNCTION_68	CALL_1
0x4004b4f	      0xe800000000	                          call 0x4004b54	      1349	refs.c	FUNCTION_68	CALL_1
0x4004b54	    0x890500000000	            mov dword [0x04004b5a], eax 	      1349	refs.c	FUNCTION_68	CALL_1
0x4004b5a	      0xe92bffffff	                           jmp 0x4004a8a	      1349	refs.c	FUNCTION_68	CALL_1
0x4004b5f	      0xba00000000	                              mov edx, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004b64	      0xbe54050000	                          mov esi, 0x554	      1364	refs.c	FUNCTION_68	IF_4
0x4004b69	      0xbf00000000	                              mov edi, 0	      1364	refs.c	FUNCTION_68	IF_4
0x4004b6e	            0x31c0	                            xor eax, eax	      1364	refs.c	FUNCTION_68	IF_4
0x4004b70	      0xe800000000	                          call 0x4004b75	      1364	refs.c	FUNCTION_68	IF_4
0x4004b75	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4004b7a	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4004b7f	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4004b84	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4004b86	      0xe800000000	                          call 0x4004b8b	      1673	refs.c	FUNCTION_89	IF_2
0x4004b8b	          0x4989c5	                            mov r13, rax	      1383	refs.c	FUNCTION_69	IF_1
0x4004b8e	      0xe9e9feffff	                           jmp 0x4004a7c	      1383	refs.c	FUNCTION_69	IF_1
safe_create_reflog	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	53
0x4007ed0	            0x4154	                                push r12	      2075	refs.c	FUNCTION_113
0x4007ed2	              0x55	                                push rbp	      2075	refs.c	FUNCTION_113
0x4007ed3	          0x4889fd	                            mov rbp, rdi	      2075	refs.c	FUNCTION_113
0x4007ed6	              0x53	                                push rbx	      2075	refs.c	FUNCTION_113
0x4007ed7	          0x4189f4	                           mov r12d, esi	      2075	refs.c	FUNCTION_113
0x4007eda	        0x4883ec10	                           sub rsp, 0x10	      2075	refs.c	FUNCTION_113
0x4007ede	    0x488b1d000000	            mov rbx, qword [0x04007ee5] 	      2076	refs.c	FUNCTION_113	CALL_2
0x4007ee5	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4007ee9	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x4007eec	            0x7422	                            je 0x4007f10	      1669	refs.c	FUNCTION_89	IF_1
0x4007eee	          0x488b07	                    mov rax, qword [rdi]	      2070	refs.c	FUNCTION_112	CALL_1
0x4007ef1	          0x4889d1	                            mov rcx, rdx	      2070	refs.c	FUNCTION_112	CALL_1
0x4007ef4	          0x4889ee	                            mov rsi, rbp	      2070	refs.c	FUNCTION_112	CALL_1
0x4007ef7	          0x4489e2	                           mov edx, r12d	      2070	refs.c	FUNCTION_112	CALL_1
0x4007efa	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2070	refs.c	FUNCTION_112	CALL_1
0x4007f01	        0x4883c410	                           add rsp, 0x10	      2078	refs.c	FUNCTION_113
0x4007f05	              0x5b	                                 pop rbx	      2078	refs.c	FUNCTION_113
0x4007f06	              0x5d	                                 pop rbp	      2078	refs.c	FUNCTION_113
0x4007f07	            0x415c	                                 pop r12	      2078	refs.c	FUNCTION_113
0x4007f09	            0xffe0	                                 jmp rax	      2070	refs.c	FUNCTION_112	CALL_1
0x4007f0b	       0xf1f440000	                   nop dword [rax + rax]	      2070	refs.c	FUNCTION_112	CALL_1
0x4007f10	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x4007f13	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x4007f16	            0x7461	                            je 0x4007f79	      1672	refs.c	FUNCTION_89	IF_2
0x4007f18	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4007f1d	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x4007f23	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x4007f28	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007f2c	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007f31	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007f34	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007f36	            0x7420	                            je 0x4007f58	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4007f38	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4007f3b	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4007f3e	            0x75e8	                           jne 0x4007f28	        27	refs.c	FUNCTION_1	FOR_1
0x4007f40	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4007f45	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4007f4a	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4007f4c	      0xe800000000	                          call 0x4007f51	      1661	refs.c	FUNCTION_88	CALL_2
0x4007f51	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4007f58	      0x4889542408	                mov qword [rsp + 8], rdx	      1661	refs.c	FUNCTION_88	CALL_2
0x4007f5d	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x4007f60	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4007f65	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4007f68	      0x488b542408	                mov rdx, qword [rsp + 8]	      1663	refs.c	FUNCTION_88	CALL_3
0x4007f6d	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x4007f71	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4007f74	      0xe975ffffff	                           jmp 0x4007eee	      1676	refs.c	FUNCTION_89
0x4007f79	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4007f7e	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4007f83	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4007f88	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4007f8a	      0xe800000000	                          call 0x4007f8f	      1673	refs.c	FUNCTION_89	IF_2
expand_ref	SWITCH,0:FOR,1:WHILE,0:ELSE,2:DO,0:IF,5:functions,0:CALL,6	214
0x4002280	            0x4157	                                push r15	       548	refs.c	FUNCTION_35
0x4002282	            0x4156	                                push r14	       548	refs.c	FUNCTION_35
0x4002284	            0x4155	                                push r13	       548	refs.c	FUNCTION_35
0x4002286	            0x4154	                                push r12	       548	refs.c	FUNCTION_35
0x4002288	              0x55	                                push rbp	       548	refs.c	FUNCTION_35
0x4002289	              0x53	                                push rbx	       548	refs.c	FUNCTION_35
0x400228a	    0x4881eca80000	                           sub rsp, 0xa8	       548	refs.c	FUNCTION_35
0x4002291	    0x48c701000000	                      mov qword [rcx], 0	       553	refs.c	FUNCTION_35
0x4002298	        0x8974241c	             mov dword [rsp + 0x1c], esi	       548	refs.c	FUNCTION_35
0x400229c	    0x488b35000000	            mov rsi, qword [0x040022a3] 	       554	refs.c	FUNCTION_35	FOR_1
0x40022a3	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	       548	refs.c	FUNCTION_35
0x40022ac	    0x48899c249800	             mov qword [rsp + 0x98], rbx	       548	refs.c	FUNCTION_35
0x40022b4	            0x31db	                            xor ebx, ebx	       548	refs.c	FUNCTION_35
0x40022b6	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       548	refs.c	FUNCTION_35
0x40022bb	      0x4889542420	             mov qword [rsp + 0x20], rdx	       548	refs.c	FUNCTION_35
0x40022c0	          0x4885f6	                           test rsi, rsi	       554	refs.c	FUNCTION_35	FOR_1
0x40022c3	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       548	refs.c	FUNCTION_35
0x40022c8	    0x48c744244000	               mov qword [rsp + 0x40], 0	       551	refs.c	FUNCTION_35
0x40022d1	    0x48c744244800	               mov qword [rsp + 0x48], 0	       551	refs.c	FUNCTION_35
0x40022da	    0x48c744245000	               mov qword [rsp + 0x50], 0	       551	refs.c	FUNCTION_35
0x40022e3	     0xf8404030000	                            je 0x40025ed	       554	refs.c	FUNCTION_35	FOR_1
0x40022e9	          0x4989d6	                            mov r14, rdx	       554	refs.c	FUNCTION_35	FOR_1
0x40022ec	      0xb800000000	                              mov eax, 0	       554	refs.c	FUNCTION_35	FOR_1
0x40022f1	    0x41bf00000000	                             mov r15d, 0	       554	refs.c	FUNCTION_35	FOR_1
0x40022f7	    0xc74424180000	               mov dword [rsp + 0x18], 0	       554	refs.c	FUNCTION_35	FOR_1
0x40022ff	            0xeb67	                           jmp 0x4002368	       554	refs.c	FUNCTION_35	FOR_1
0x4002301	     0xf1f80000000	                         nop dword [rax]	       554	refs.c	FUNCTION_35	FOR_1
0x4002308	      0xe800000000	                          call 0x400230d	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x400230d	          0x4531ed	                          xor r13d, r13d	      1486	refs.c	FUNCTION_81
0x4002310	    0xc70016000000	                   mov dword [rax], 0x16	      1491	refs.c	FUNCTION_81	IF_3	IF_4
0x4002316	        0x4183e504	                             and r13d, 4	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x400231a	            0x7426	                            je 0x4002342	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x400231c	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002321	      0xbe2f000000	                           mov esi, 0x2f	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002326	          0x4889df	                            mov rdi, rbx	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002329	      0xe800000000	                          call 0x400232e	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x400232e	          0x4885c0	                           test rax, rax	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002331	            0x740f	                            je 0x4002342	       571	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002333	          0x4889de	                            mov rsi, rbx	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_5
0x4002336	      0xbf00000000	                              mov edi, 0	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_5
0x400233b	            0x31c0	                            xor eax, eax	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_5
0x400233d	      0xe800000000	                          call 0x4002342	       572	refs.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_5
0x4002342	        0x4983c708	                              add r15, 8	       554	refs.c	FUNCTION_35	FOR_1
0x4002346	          0x498b37	                    mov rsi, qword [r15]	       554	refs.c	FUNCTION_35	FOR_1
0x4002349	          0x4885f6	                           test rsi, rsi	       554	refs.c	FUNCTION_35	FOR_1
0x400234c	     0xf8448020000	                            je 0x400259a	       554	refs.c	FUNCTION_35	FOR_1
0x4002352	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       559	refs.c	FUNCTION_35	FOR_1
0x4002356	            0x85d2	                           test edx, edx	       559	refs.c	FUNCTION_35	FOR_1
0x4002358	     0xf85ad010000	                           jne 0x400250b	       559	refs.c	FUNCTION_35	FOR_1
0x400235e	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       559	refs.c	FUNCTION_35	FOR_1
0x4002363	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       559	refs.c	FUNCTION_35	FOR_1
0x4002368	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_127	IF_2
0x400236e	    0x48c744244800	               mov qword [rsp + 0x48], 0	       164	strbuf.h	FUNCTION_127
0x4002377	     0xf84e3010000	                            je 0x4002560	       165	strbuf.h	FUNCTION_127	IF_2
0x400237d	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_127	IF_2
0x4002380	          0x498b37	                    mov rsi, qword [r15]	       166	strbuf.h	FUNCTION_127	IF_2
0x4002383	      0x488d442440	                   lea rax, [rsp + 0x40]	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4002388	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x400238d	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4002391	      0x4889442408	                mov qword [rsp + 8], rax	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4002396	          0x4889c7	                            mov rdi, rax	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x4002399	            0x31c0	                            xor eax, eax	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x400239b	      0xe800000000	                          call 0x40023a0	       561	refs.c	FUNCTION_35	FOR_1	CALL_1
0x40023a0	    0x488b2d000000	            mov rbp, qword [0x040023a7] 	      1574	refs.c	FUNCTION_83	CALL_2
0x40023a7	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       562	refs.c	FUNCTION_35	FOR_1	CALL_2
0x40023ac	        0x4c8b6518	            mov r12, qword [rbp + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x40023b0	          0x4d85e4	                           test r12, r12	      1669	refs.c	FUNCTION_89	IF_1
0x40023b3	     0xf845f010000	                            je 0x4002518	      1669	refs.c	FUNCTION_89	IF_1
0x40023b9	    0x488d84248000	                   lea rax, [rsp + 0x80]	      1482	refs.c	FUNCTION_81	IF_1
0x40023c1	          0x4d85f6	                           test r14, r14	      1482	refs.c	FUNCTION_81	IF_1
0x40023c4	      0xbe01000000	                              mov esi, 1	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40023c9	          0x4889df	                            mov rdi, rbx	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40023cc	        0x4c0f44f0	                          cmove r14, rax	      1482	refs.c	FUNCTION_81	IF_1
0x40023d0	      0xe800000000	                          call 0x40023d5	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40023d5	            0x85c0	                           test eax, eax	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40023d7	     0xf852bffffff	                           jne 0x4002308	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40023dd	      0xbd05000000	                              mov ebp, 5	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40023e2	          0x4531ed	                          xor r13d, r13d	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40023e5	           0xf1f00	                         nop dword [rax]	      1488	refs.c	FUNCTION_81	IF_3	CALL_1
0x40023e8	        0x498b0424	                    mov rax, qword [r12]	      1467	refs.c	FUNCTION_80	CALL_1
0x40023ec	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1507	refs.c	FUNCTION_81	FOR_1
0x40023f4	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      1467	refs.c	FUNCTION_80	CALL_1
0x40023f9	      0xb900000000	                              mov ecx, 0	      1467	refs.c	FUNCTION_80	CALL_1
0x40023fe	          0x4c89f2	                            mov rdx, r14	      1467	refs.c	FUNCTION_80	CALL_1
0x4002401	          0x4889de	                            mov rsi, rbx	      1467	refs.c	FUNCTION_80	CALL_1
0x4002404	          0x4c89e7	                            mov rdi, r12	      1467	refs.c	FUNCTION_80	CALL_1
0x4002407	          0xff5070	                 call qword [rax + 0x70]	      1467	refs.c	FUNCTION_80	CALL_1
0x400240a	            0x85c0	                           test eax, eax	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x400240c	     0xf857e010000	                           jne 0x4002590	      1509	refs.c	FUNCTION_81	FOR_1	IF_5	CALL_3
0x4002412	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      1533	refs.c	FUNCTION_81	FOR_1
0x4002416	          0x4109c5	                            or r13d, eax	      1533	refs.c	FUNCTION_81	FOR_1
0x4002419	            0xa801	                              test al, 1	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x400241b	     0xf848f000000	                            je 0x40024b0	      1535	refs.c	FUNCTION_81	FOR_1	IF_9
0x4002421	    0x488b1d000000	            mov rbx, qword [0x04002428] 	      1543	refs.c	FUNCTION_81	FOR_1
0x4002428	      0xbe01000000	                              mov esi, 1	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x400242d	          0x4889df	                            mov rdi, rbx	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4002430	      0xe800000000	                          call 0x4002435	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4002435	            0x85c0	                           test eax, eax	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4002437	            0x7457	                            je 0x4002490	      1548	refs.c	FUNCTION_81	FOR_1	IF_12	CALL_7
0x4002439	      0xe800000000	                          call 0x400243e	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400243e	    0xc70016000000	                   mov dword [rax], 0x16	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4002444	          0x4489e8	                           mov eax, r13d	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4002447	          0x83e001	                              and eax, 1	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x400244a	    0x660f1f440000	                    nop word [rax + rax]	      1551	refs.c	FUNCTION_81	FOR_1	IF_12	IF_13
0x4002450	            0x85c0	                           test eax, eax	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x4002452	     0xf84befeffff	                            je 0x4002316	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x4002458	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x400245d	      0xbf00000000	                              mov edi, 0	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x4002462	      0xb905000000	                              mov ecx, 5	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x4002467	          0x4889c6	                            mov rsi, rax	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x400246a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x400246c	     0xf84a4feffff	                            je 0x4002316	       569	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4
0x4002472	          0x4889c6	                            mov rsi, rax	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4002475	      0xbf00000000	                              mov edi, 0	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x400247a	            0x31c0	                            xor eax, eax	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x400247c	      0xe800000000	                          call 0x4002481	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4002481	      0xe9bcfeffff	                           jmp 0x4002342	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4002486	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       570	refs.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_4
0x4002490	          0x83ed01	                              sub ebp, 1	      1506	refs.c	FUNCTION_81	FOR_1
0x4002493	     0xf854fffffff	                           jne 0x40023e8	      1506	refs.c	FUNCTION_81	FOR_1
0x4002499	      0xe800000000	                          call 0x400249e	      1559	refs.c	FUNCTION_81
0x400249e	    0xc70028000000	                   mov dword [rax], 0x28	      1559	refs.c	FUNCTION_81
0x40024a4	          0x4489e8	                           mov eax, r13d	      1559	refs.c	FUNCTION_81
0x40024a7	          0x83e001	                              and eax, 1	      1559	refs.c	FUNCTION_81
0x40024aa	            0xeba4	                           jmp 0x4002450	      1559	refs.c	FUNCTION_81
0x40024ac	         0xf1f4000	                         nop dword [rax]	      1559	refs.c	FUNCTION_81
0x40024b0	        0x41f6c508	                            test r13b, 8	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40024b4	            0x741b	                            je 0x40024d1	      1536	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40024b6	    0x49c706000000	                      mov qword [r14], 0	        90	string3.h	FUNCTION_139	CALL_5
0x40024bd	    0x49c746080000	                  mov qword [r14 + 8], 0	        90	string3.h	FUNCTION_139	CALL_5
0x40024c5	        0x4183cd04	                              or r13d, 4	      1538	refs.c	FUNCTION_81	FOR_1	IF_9	IF_10
0x40024c9	    0x41c746100000	               mov dword [r14 + 0x10], 0	        90	string3.h	FUNCTION_139	CALL_5
0x40024d1	          0x4885db	                           test rbx, rbx	       564	refs.c	FUNCTION_35	FOR_1	IF_1
0x40024d4	     0xf846affffff	                            je 0x4002444	       564	refs.c	FUNCTION_35	FOR_1	IF_1
0x40024da	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40024de	            0x85c0	                           test eax, eax	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40024e0	          0x8d6801	                      lea ebp, [rax + 1]	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40024e3	     0xf84ef000000	                            je 0x40025d8	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x40024e9	    0x8b0500000000	            mov eax, dword [0x040024ef] 	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x40024ef	            0x85c0	                           test eax, eax	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x40024f1	     0xf84a9000000	                            je 0x40025a0	       567	refs.c	FUNCTION_35	FOR_1	IF_1	IF_3
0x40024f7	        0x4983c708	                              add r15, 8	       554	refs.c	FUNCTION_35	FOR_1
0x40024fb	          0x498b37	                    mov rsi, qword [r15]	       554	refs.c	FUNCTION_35	FOR_1
0x40024fe	          0x4885f6	                           test rsi, rsi	       554	refs.c	FUNCTION_35	FOR_1
0x4002501	     0xf8499000000	                            je 0x40025a0	       554	refs.c	FUNCTION_35	FOR_1
0x4002507	        0x896c2418	             mov dword [rsp + 0x18], ebp	       565	refs.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x400250b	      0x4c8d742460	                   lea r14, [rsp + 0x60]	       559	refs.c	FUNCTION_35	FOR_1
0x4002510	      0xe94efeffff	                           jmp 0x4002363	       559	refs.c	FUNCTION_35	FOR_1
0x4002515	           0xf1f00	                         nop dword [rax]	       559	refs.c	FUNCTION_35	FOR_1
0x4002518	        0x4c8b4500	                     mov r8, qword [rbp]	      1672	refs.c	FUNCTION_89	IF_2
0x400251c	          0x4d85c0	                             test r8, r8	      1672	refs.c	FUNCTION_89	IF_2
0x400251f	     0xf84de000000	                            je 0x4002603	      1672	refs.c	FUNCTION_89	IF_2
0x4002525	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400252a	      0xba00000000	                              mov edx, 0	      1672	refs.c	FUNCTION_89	IF_2
0x400252f	              0x90	                                     nop	      1672	refs.c	FUNCTION_89	IF_2
0x4002530	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002534	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002539	          0x4889d7	                            mov rdi, rdx	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400253c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x400253e	            0x7438	                            je 0x4002578	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x4002540	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x4002543	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x4002546	            0x75e8	                           jne 0x4002530	        27	refs.c	FUNCTION_1	FOR_1
0x4002548	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x400254d	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x4002552	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x4002554	      0xe800000000	                          call 0x4002559	      1661	refs.c	FUNCTION_88	CALL_2
0x4002559	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x4002560	    0x803d00000000	                cmp byte [0x04002567], 0	       168	strbuf.h	FUNCTION_127	CALL_2
0x4002567	     0xf8416feffff	                            je 0x4002383	       168	strbuf.h	FUNCTION_127	CALL_2
0x400256d	      0xe800000000	                          call 0x4002572	       168	strbuf.h	FUNCTION_127	CALL_2
0x4002572	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_127	CALL_2
0x4002578	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x400257d	          0x4c89c7	                             mov rdi, r8	      1663	refs.c	FUNCTION_88	CALL_3
0x4002580	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4002583	        0x48894518	            mov qword [rbp + 0x18], rax 	      1675	refs.c	FUNCTION_89	CALL_1
0x4002587	          0x4989c4	                            mov r12, rax	      1676	refs.c	FUNCTION_89
0x400258a	      0xe92afeffff	                           jmp 0x40023b9	      1676	refs.c	FUNCTION_89
0x400258f	              0x90	                                     nop	      1676	refs.c	FUNCTION_89
0x4002590	      0x440b6c243c	             or r13d, dword [rsp + 0x3c]	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x4002595	      0xe9aafeffff	                           jmp 0x4002444	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x400259a	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x400259e	            0x6690	                                     nop	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x40025a0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1511	refs.c	FUNCTION_81	FOR_1	IF_5
0x40025a5	      0xe800000000	                          call 0x40025aa	       575	refs.c	FUNCTION_35	CALL_6
0x40025aa	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	       577	refs.c	FUNCTION_35
0x40025b2	    0x644833142528	                xor rdx, qword fs:[0x28]	       577	refs.c	FUNCTION_35
0x40025bb	            0x89e8	                            mov eax, ebp	       577	refs.c	FUNCTION_35
0x40025bd	            0x753f	                           jne 0x40025fe	       577	refs.c	FUNCTION_35
0x40025bf	    0x4881c4a80000	                           add rsp, 0xa8	       577	refs.c	FUNCTION_35
0x40025c6	              0x5b	                                 pop rbx	       577	refs.c	FUNCTION_35
0x40025c7	              0x5d	                                 pop rbp	       577	refs.c	FUNCTION_35
0x40025c8	            0x415c	                                 pop r12	       577	refs.c	FUNCTION_35
0x40025ca	            0x415d	                                 pop r13	       577	refs.c	FUNCTION_35
0x40025cc	            0x415e	                                 pop r14	       577	refs.c	FUNCTION_35
0x40025ce	            0x415f	                                 pop r15	       577	refs.c	FUNCTION_35
0x40025d0	              0xc3	                                     ret	       577	refs.c	FUNCTION_35
0x40025d1	     0xf1f80000000	                         nop dword [rax]	       577	refs.c	FUNCTION_35
0x40025d8	          0x4889df	                            mov rdi, rbx	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40025db	      0xe800000000	                          call 0x40025e0	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40025e0	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40025e5	          0x488902	                    mov qword [rdx], rax	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40025e8	      0xe9fcfeffff	                           jmp 0x40024e9	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40025ed	      0x488d442440	                   lea rax, [rsp + 0x40]	       566	refs.c	FUNCTION_35	FOR_1	IF_1	CALL_3
0x40025f2	            0x31ed	                            xor ebp, ebp	       550	refs.c	FUNCTION_35
0x40025f4	      0x4889442408	                mov qword [rsp + 8], rax	       550	refs.c	FUNCTION_35
0x40025f9	          0x4889c7	                            mov rdi, rax	       550	refs.c	FUNCTION_35
0x40025fc	            0xeba7	                           jmp 0x40025a5	       550	refs.c	FUNCTION_35
0x40025fe	      0xe800000000	                          call 0x4002603	       577	refs.c	FUNCTION_35
0x4002603	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4002608	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x400260d	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4002612	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4002614	      0xe800000000	                          call 0x4002619	      1673	refs.c	FUNCTION_89	IF_2
refname_is_safe	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,1:IF,3:functions,0:CALL,5	68
0x40005e0	            0x4154	                                push r12	       148	refs.c	FUNCTION_5
0x40005e2	      0xb800000000	                              mov eax, 0	       148	refs.c	FUNCTION_5
0x40005e7	              0x55	                                push rbp	       148	refs.c	FUNCTION_5
0x40005e8	              0x53	                                push rbx	       148	refs.c	FUNCTION_5
0x40005e9	          0x4889fb	                            mov rbx, rdi	       148	refs.c	FUNCTION_5
0x40005ec	            0xeb0f	                           jmp 0x40005fd	       148	refs.c	FUNCTION_5
0x40005ee	            0x6690	                                     nop	       148	refs.c	FUNCTION_5
0x40005f0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x40005f4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_193	DO_1
0x40005f8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_193	DO_1
0x40005fb	            0x7570	                           jne 0x400066d	       488	git-compat-util.h	FUNCTION_193	DO_1
0x40005fd	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000600	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000602	            0x75ec	                           jne 0x40005f0	       484	git-compat-util.h	FUNCTION_193	DO_1	IF_1
0x4000604	          0x4889df	                            mov rdi, rbx	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x4000607	      0xe800000000	                          call 0x400060c	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x400060c	          0x4889c7	                            mov rdi, rax	       154	refs.c	FUNCTION_5	IF_1	CALL_2
0x400060f	            0x31c0	                            xor eax, eax	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x4000611	          0x4885ff	                           test rdi, rdi	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000614	            0x7442	                            je 0x4000658	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000616	          0x803b2f	                    cmp byte [rbx], 0x2f	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000619	            0x743d	                            je 0x4000658	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x400061b	      0x807c3bff2f	         cmp byte [rbx + rdi - 1], 0x2f 	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000620	            0x7436	                            je 0x4000658	       157	refs.c	FUNCTION_5	IF_1	IF_2
0x4000622	      0xe800000000	                          call 0x4000627	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x4000627	          0x4889de	                            mov rsi, rbx	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400062a	          0x4889c7	                            mov rdi, rax	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400062d	          0x4989c4	                            mov r12, rax	       165	refs.c	FUNCTION_5	IF_1	CALL_3
0x4000630	            0x31ed	                            xor ebp, ebp	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000632	      0xe800000000	                          call 0x4000637	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000637	            0x85c0	                           test eax, eax	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000639	            0x7513	                           jne 0x400064e	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400063b	          0x4889de	                            mov rsi, rbx	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400063e	          0x4c89e7	                            mov rdi, r12	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000641	            0x31ed	                            xor ebp, ebp	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000643	      0xe800000000	                          call 0x4000648	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x4000648	            0x85c0	                           test eax, eax	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400064a	        0x400f94c5	                                sete bpl	       166	refs.c	FUNCTION_5	IF_1	CALL_4
0x400064e	          0x4c89e7	                            mov rdi, r12	       167	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000651	      0xe800000000	                          call 0x4000656	       167	refs.c	FUNCTION_5	IF_1	CALL_5
0x4000656	            0x89e8	                            mov eax, ebp	       168	refs.c	FUNCTION_5	IF_1
0x4000658	              0x5b	                                 pop rbx	       177	refs.c	FUNCTION_5
0x4000659	              0x5d	                                 pop rbp	       177	refs.c	FUNCTION_5
0x400065a	            0x415c	                                 pop r12	       177	refs.c	FUNCTION_5
0x400065c	              0xc3	                                     ret	       177	refs.c	FUNCTION_5
0x400065d	           0xf1f00	                         nop dword [rax]	       177	refs.c	FUNCTION_5
0x4000660	            0xa820	                           test al, 0x20	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000662	            0x7518	                           jne 0x400067c	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000664	        0x4883c701	                              add rdi, 1	       174	refs.c	FUNCTION_5	DO_1
0x4000668	          0x803f00	                       cmp byte [rdi], 0	       175	refs.c	FUNCTION_5	DO_1
0x400066b	            0x7423	                            je 0x4000690	       175	refs.c	FUNCTION_5	DO_1
0x400066d	           0xfb617	                   movzx edx, byte [rdi]	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000670	    0xf68200000000	                      test byte [rdx], 4	      1000	git-compat-util.h	FUNCTION_208	IF_1
0x4000677	          0x4889d0	                            mov rax, rdx	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x400067a	            0x75e4	                           jne 0x4000660	      1000	git-compat-util.h	FUNCTION_208	IF_1
0x400067c	            0x3c5f	                            cmp al, 0x5f	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x400067e	            0x74e4	                            je 0x4000664	       172	refs.c	FUNCTION_5	DO_1	IF_3
0x4000680	              0x5b	                                 pop rbx	       177	refs.c	FUNCTION_5
0x4000681	            0x31c0	                            xor eax, eax	       158	refs.c	FUNCTION_5	IF_1	IF_2
0x4000683	              0x5d	                                 pop rbp	       177	refs.c	FUNCTION_5
0x4000684	            0x415c	                                 pop r12	       177	refs.c	FUNCTION_5
0x4000686	              0xc3	                                     ret	       177	refs.c	FUNCTION_5
0x4000687	    0x660f1f840000	                    nop word [rax + rax]	       177	refs.c	FUNCTION_5
0x4000690	              0x5b	                                 pop rbx	       177	refs.c	FUNCTION_5
0x4000691	      0xb801000000	                              mov eax, 1	       176	refs.c	FUNCTION_5
0x4000696	              0x5d	                                 pop rbp	       177	refs.c	FUNCTION_5
0x4000697	            0x415c	                                 pop r12	       177	refs.c	FUNCTION_5
0x4000699	              0xc3	                                     ret	       177	refs.c	FUNCTION_5
refs_pack_refs	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,1	3
0x4006100	          0x488b07	                    mov rax, qword [rdi]	      1774	refs.c	FUNCTION_94	CALL_1
0x4006103	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1774	refs.c	FUNCTION_94	CALL_1
0x4006107	            0xffe0	                                 jmp rax	      1774	refs.c	FUNCTION_94	CALL_1
delete_refs	SWITCH,0:FOR,0:WHILE,0:ELSE,0:DO,0:IF,0:functions,0:CALL,2	53
0x4008170	            0x4154	                                push r12	      2132	refs.c	FUNCTION_120
0x4008172	              0x55	                                push rbp	      2132	refs.c	FUNCTION_120
0x4008173	          0x4889fd	                            mov rbp, rdi	      2132	refs.c	FUNCTION_120
0x4008176	              0x53	                                push rbx	      2132	refs.c	FUNCTION_120
0x4008177	          0x4989f4	                            mov r12, rsi	      2132	refs.c	FUNCTION_120
0x400817a	        0x4883ec10	                           sub rsp, 0x10	      2132	refs.c	FUNCTION_120
0x400817e	    0x488b1d000000	            mov rbx, qword [0x04008185] 	      2133	refs.c	FUNCTION_120	CALL_2
0x4008185	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1669	refs.c	FUNCTION_89	IF_1
0x4008189	          0x4885ff	                           test rdi, rdi	      1669	refs.c	FUNCTION_89	IF_1
0x400818c	            0x7422	                            je 0x40081b0	      1669	refs.c	FUNCTION_89	IF_1
0x400818e	          0x488b07	                    mov rax, qword [rdi]	      2127	refs.c	FUNCTION_119	CALL_1
0x4008191	            0x89d1	                            mov ecx, edx	      2127	refs.c	FUNCTION_119	CALL_1
0x4008193	          0x4889ee	                            mov rsi, rbp	      2127	refs.c	FUNCTION_119	CALL_1
0x4008196	          0x4c89e2	                            mov rdx, r12	      2127	refs.c	FUNCTION_119	CALL_1
0x4008199	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2127	refs.c	FUNCTION_119	CALL_1
0x400819d	        0x4883c410	                           add rsp, 0x10	      2134	refs.c	FUNCTION_120
0x40081a1	              0x5b	                                 pop rbx	      2134	refs.c	FUNCTION_120
0x40081a2	              0x5d	                                 pop rbp	      2134	refs.c	FUNCTION_120
0x40081a3	            0x415c	                                 pop r12	      2134	refs.c	FUNCTION_120
0x40081a5	            0xffe0	                                 jmp rax	      2127	refs.c	FUNCTION_119	CALL_1
0x40081a7	    0x660f1f840000	                    nop word [rax + rax]	      2127	refs.c	FUNCTION_119	CALL_1
0x40081b0	          0x4c8b0b	                     mov r9, qword [rbx]	      1672	refs.c	FUNCTION_89	IF_2
0x40081b3	          0x4d85c9	                             test r9, r9	      1672	refs.c	FUNCTION_89	IF_2
0x40081b6	            0x745f	                            je 0x4008217	      1672	refs.c	FUNCTION_89	IF_2
0x40081b8	      0xb800000000	                              mov eax, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40081bd	    0x41b800000000	                              mov r8d, 0	      1672	refs.c	FUNCTION_89	IF_2
0x40081c3	       0xf1f440000	                   nop dword [rax + rax]	      1672	refs.c	FUNCTION_89	IF_2
0x40081c8	        0x488b7008	                mov rsi, qword [rax + 8]	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40081cc	      0xb906000000	                              mov ecx, 6	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40081d1	          0x4c89c7	                             mov rdi, r8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40081d4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40081d6	            0x7420	                            je 0x40081f8	        28	refs.c	FUNCTION_1	FOR_1	IF_1
0x40081d8	          0x488b00	                    mov rax, qword [rax]	        27	refs.c	FUNCTION_1	FOR_1
0x40081db	          0x4885c0	                           test rax, rax	        27	refs.c	FUNCTION_1	FOR_1
0x40081de	            0x75e8	                           jne 0x40081c8	        27	refs.c	FUNCTION_1	FOR_1
0x40081e0	      0xbe00000000	                              mov esi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40081e5	      0xbf00000000	                              mov edi, 0	      1661	refs.c	FUNCTION_88	CALL_2
0x40081ea	            0x31c0	                            xor eax, eax	      1661	refs.c	FUNCTION_88	CALL_2
0x40081ec	      0xe800000000	                          call 0x40081f1	      1661	refs.c	FUNCTION_88	CALL_2
0x40081f1	     0xf1f80000000	                         nop dword [rax]	      1661	refs.c	FUNCTION_88	CALL_2
0x40081f8	        0x8954240c	              mov dword [rsp + 0xc], edx	      1661	refs.c	FUNCTION_88	CALL_2
0x40081fc	          0x4c89cf	                             mov rdi, r9	      1663	refs.c	FUNCTION_88	CALL_3
0x40081ff	      0xbe0f000000	                            mov esi, 0xf	      1663	refs.c	FUNCTION_88	CALL_3
0x4008204	          0xff5010	                 call qword [rax + 0x10]	      1663	refs.c	FUNCTION_88	CALL_3
0x4008207	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1663	refs.c	FUNCTION_88	CALL_3
0x400820b	        0x48894318	             mov qword [rbx + 0x18], rax	      1675	refs.c	FUNCTION_89	CALL_1
0x400820f	          0x4889c7	                            mov rdi, rax	      1676	refs.c	FUNCTION_89
0x4008212	      0xe977ffffff	                           jmp 0x400818e	      1676	refs.c	FUNCTION_89
0x4008217	      0xba00000000	                              mov edx, 0	      1673	refs.c	FUNCTION_89	IF_2
0x400821c	      0xbe89060000	                          mov esi, 0x689	      1673	refs.c	FUNCTION_89	IF_2
0x4008221	      0xbf00000000	                              mov edi, 0	      1673	refs.c	FUNCTION_89	IF_2
0x4008226	            0x31c0	                            xor eax, eax	      1673	refs.c	FUNCTION_89	IF_2
0x4008228	      0xe800000000	                          call 0x400822d	      1673	refs.c	FUNCTION_89	IF_2
