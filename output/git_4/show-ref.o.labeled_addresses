exclude_existing_callback	CALL,0:IF,0:WHILE,0:FOR,0:ELSE,0:DO,0:functions,0:SWITCH,0	5
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       154	show-ref.c	FUNCTION_6
0x4000044	    0xc70500000000	               mov dword [0x0400004e], 1	       153	show-ref.c	FUNCTION_6
0x400004e	          0x488930	                    mov qword [rax], rsi	       154	show-ref.c	FUNCTION_6
0x4000051	            0x31c0	                            xor eax, eax	       156	show-ref.c	FUNCTION_6
0x4000053	              0xc3	                                     ret	       156	show-ref.c	FUNCTION_6
exclude_existing	CALL,10:IF,8:WHILE,1:FOR,1:ELSE,0:DO,0:functions,0:SWITCH,0	134
0x40000a0	            0x4156	                                push r14	       104	show-ref.c	FUNCTION_4
0x40000a2	            0x4155	                                push r13	       104	show-ref.c	FUNCTION_4
0x40000a4	            0x4154	                                push r12	       104	show-ref.c	FUNCTION_4
0x40000a6	              0x55	                                push rbp	       104	show-ref.c	FUNCTION_4
0x40000a7	          0x4889fd	                            mov rbp, rdi	       104	show-ref.c	FUNCTION_4
0x40000aa	              0x53	                                push rbx	       104	show-ref.c	FUNCTION_4
0x40000ab	    0x4881ec100400	                          sub rsp, 0x410	       104	show-ref.c	FUNCTION_4
0x40000b2	    0x64488b042528	                mov rax, qword fs:[0x28]	       104	show-ref.c	FUNCTION_4
0x40000bb	    0x488984240804	            mov qword [rsp + 0x408], rax	       104	show-ref.c	FUNCTION_4
0x40000c3	            0x31c0	                            xor eax, eax	       104	show-ref.c	FUNCTION_4
0x40000c5	          0x4885ff	                           test rdi, rdi	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000c8	     0xf84ac010000	                            je 0x400027a	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000ce	      0xe800000000	                          call 0x40000d3	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000d3	          0x4189c4	                           mov r12d, eax	       107	show-ref.c	FUNCTION_4	CALL_1
0x40000d6	      0xbe00000000	                              mov esi, 0	       109	show-ref.c	FUNCTION_4	CALL_2
0x40000db	      0xbf00000000	                              mov edi, 0	       109	show-ref.c	FUNCTION_4	CALL_2
0x40000e0	          0x4989e6	                            mov r14, rsp	       109	show-ref.c	FUNCTION_4	CALL_2
0x40000e3	          0x4d63ec	                        movsxd r13, r12d	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40000e6	      0xe800000000	                          call 0x40000eb	       109	show-ref.c	FUNCTION_4	CALL_2
0x40000eb	       0xf1f440000	                   nop dword [rax + rax]	       109	show-ref.c	FUNCTION_4	CALL_2
0x40000f0	    0x488b15000000	            mov rdx, qword [0x040000f7] 	       263	stdio2.h	FUNCTION_21	CALL_8
0x40000f7	      0xbe00040000	                          mov esi, 0x400	       263	stdio2.h	FUNCTION_21	CALL_8
0x40000fc	          0x4c89f7	                            mov rdi, r14	       263	stdio2.h	FUNCTION_21	CALL_8
0x40000ff	      0xe800000000	                          call 0x4000104	       263	stdio2.h	FUNCTION_21	CALL_8
0x4000104	          0x4885c0	                           test rax, rax	       110	show-ref.c	FUNCTION_4	WHILE_1	CALL_3
0x4000107	     0xf844a010000	                            je 0x4000257	       110	show-ref.c	FUNCTION_4	WHILE_1	CALL_3
0x400010d	          0x4c89f2	                            mov rdx, r14	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000110	            0x8b0a	                    mov ecx, dword [rdx]	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000112	        0x4883c204	                              add rdx, 4	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000116	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400011c	            0xf7d1	                                 not ecx	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400011e	            0x21c8	                            and eax, ecx	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000120	      0x2580808080	                     and eax, 0x80808080	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000125	            0x74e9	                            je 0x4000110	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000127	            0x89c1	                            mov ecx, eax	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000129	          0xc1e910	                           shr ecx, 0x10	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400012c	      0xa980800000	                        test eax, 0x8080	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000131	           0xf44c1	                          cmove eax, ecx	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000134	        0x488d4a02	                      lea rcx, [rdx + 2]	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000138	            0x89c6	                            mov esi, eax	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400013a	        0x480f44d1	                          cmove rdx, rcx	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400013e	          0x4000c6	                             add sil, al	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000141	        0x4883da03	                              sbb rdx, 3	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000145	          0x4c29f2	                            sub rdx, r14	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x4000148	            0x85d2	                           test edx, edx	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x400014a	            0x89d0	                            mov eax, edx	       112	show-ref.c	FUNCTION_4	WHILE_1	CALL_4
0x400014c	     0xf8ebe000000	                           jle 0x4000210	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000152	          0x83ea01	                              sub edx, 1	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000155	          0x4863ca	                         movsxd rcx, edx	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000158	        0x803c0c0a	               cmp byte [rsp + rcx], 0xa	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x400015c	     0xf84c6000000	                            je 0x4000228	       114	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000162	          0x83f802	                              cmp eax, 2	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000165	          0x4863d0	                         movsxd rdx, eax	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000168	            0x7e26	                           jle 0x4000190	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x400016a	      0x498d4c16fd	                lea rcx, [r14 + rdx - 3]	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x400016f	          0x80395e	                    cmp byte [rcx], 0x5e	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000172	            0x751c	                           jne 0x4000190	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000174	        0x8079017b	                cmp byte [rcx + 1], 0x7b	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000178	            0x7516	                           jne 0x4000190	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x400017a	        0x8079027d	                cmp byte [rcx + 2], 0x7d	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x400017e	            0x7510	                           jne 0x4000190	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000180	        0x80790300	                   cmp byte [rcx + 3], 0	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000184	            0x750a	                           jne 0x4000190	       116	show-ref.c	FUNCTION_4	WHILE_1	IF_2	CALL_5
0x4000186	          0x8d50fd	                      lea edx, [rax - 3]	       117	show-ref.c	FUNCTION_4	WHILE_1	IF_2
0x4000189	          0x4863d2	                         movsxd rdx, edx	       118	show-ref.c	FUNCTION_4	WHILE_1	IF_2
0x400018c	        0xc6041400	                 mov byte [rsp + rdx], 0	       118	show-ref.c	FUNCTION_4	WHILE_1	IF_2
0x4000190	          0x4c01f2	                            add rdx, r14	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000193	          0x4c39f2	                            cmp rdx, r14	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000196	     0xf8683000000	                           jbe 0x400021f	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x400019c	         0xfb642ff	               movzx eax, byte [rdx - 1]	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001a0	          0x4889d3	                            mov rbx, rdx	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001a3	    0xf68000000000	                      test byte [rax], 1	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001aa	            0x7411	                            je 0x40001bd	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001ac	            0xeb18	                           jmp 0x40001c6	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001ae	            0x6690	                                     nop	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001b0	         0xfb643ff	               movzx eax, byte [rbx - 1]	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001b4	    0xf68000000000	                      test byte [rax], 1	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001bb	            0x7509	                           jne 0x40001c6	       121	show-ref.c	FUNCTION_4	WHILE_1	FOR_1	IF_3	CALL_6
0x40001bd	        0x4883eb01	                              sub rbx, 1	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x40001c1	          0x4c39f3	                            cmp rbx, r14	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x40001c4	            0x75ea	                           jne 0x40001b0	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x40001c6	          0x4885ed	                           test rbp, rbp	       123	show-ref.c	FUNCTION_4	WHILE_1	IF_4
0x40001c9	            0x7422	                            je 0x40001ed	       123	show-ref.c	FUNCTION_4	WHILE_1	IF_4
0x40001cb	          0x4829da	                            sub rdx, rbx	       125	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_5
0x40001ce	          0x4139d4	                           cmp r12d, edx	       125	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_5
0x40001d1	     0xf8f19ffffff	                            jg 0x40000f0	       125	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_5
0x40001d7	          0x4c89ea	                            mov rdx, r13	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001da	          0x4889ee	                            mov rsi, rbp	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001dd	          0x4889df	                            mov rdi, rbx	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001e0	      0xe800000000	                          call 0x40001e5	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001e5	            0x85c0	                           test eax, eax	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001e7	     0xf8503ffffff	                           jne 0x40000f0	       127	show-ref.c	FUNCTION_4	WHILE_1	IF_4	IF_6	CALL_7
0x40001ed	            0x31f6	                            xor esi, esi	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001ef	          0x4889df	                            mov rdi, rbx	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001f2	      0xe800000000	                          call 0x40001f7	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001f7	            0x85c0	                           test eax, eax	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001f9	          0x4889de	                            mov rsi, rbx	       131	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_9
0x40001fc	            0x743a	                            je 0x4000238	       130	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_8
0x40001fe	      0xbf00000000	                              mov edi, 0	       131	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_9
0x4000203	            0x31c0	                            xor eax, eax	       131	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_9
0x4000205	      0xe800000000	                          call 0x400020a	       131	show-ref.c	FUNCTION_4	WHILE_1	IF_7	CALL_9
0x400020a	      0xe9e1feffff	                           jmp 0x40000f0	       132	show-ref.c	FUNCTION_4	WHILE_1	IF_7
0x400020f	              0x90	                                     nop	       132	show-ref.c	FUNCTION_4	WHILE_1	IF_7
0x4000210	          0x4863d2	                         movsxd rdx, edx	       132	show-ref.c	FUNCTION_4	WHILE_1	IF_7
0x4000213	          0x4c01f2	                            add rdx, r14	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000216	          0x4c39f2	                            cmp rdx, r14	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000219	     0xf877dffffff	                            ja 0x400019c	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x400021f	          0x4889d3	                            mov rbx, rdx	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000222	            0xeba2	                           jmp 0x40001c6	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000224	         0xf1f4000	                         nop dword [rax]	       120	show-ref.c	FUNCTION_4	WHILE_1	FOR_1
0x4000228	        0xc6040c00	                 mov byte [rsp + rcx], 0	       115	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x400022c	            0x89d0	                            mov eax, edx	       115	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x400022e	      0xe92fffffff	                           jmp 0x4000162	       115	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000233	       0xf1f440000	                   nop dword [rax + rax]	       115	show-ref.c	FUNCTION_4	WHILE_1	IF_1
0x4000238	      0xbf00000000	                              mov edi, 0	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x400023d	      0xe800000000	                          call 0x4000242	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x4000242	            0x85c0	                           test eax, eax	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x4000244	     0xf85a6feffff	                           jne 0x40000f0	       134	show-ref.c	FUNCTION_4	WHILE_1	IF_8	CALL_10
0x400024a	          0x4c89f7	                            mov rdi, r14	       104	stdio2.h	CALL_34
0x400024d	      0xe800000000	                          call 0x4000252	       104	stdio2.h	CALL_34
0x4000252	      0xe999feffff	                           jmp 0x40000f0	       104	stdio2.h	CALL_34
0x4000257	    0x488bbc240804	           mov rdi, qword [rsp + 0x408] 	       139	show-ref.c	FUNCTION_4
0x400025f	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       139	show-ref.c	FUNCTION_4
0x4000268	            0x7518	                           jne 0x4000282	       139	show-ref.c	FUNCTION_4
0x400026a	    0x4881c4100400	                          add rsp, 0x410	       139	show-ref.c	FUNCTION_4
0x4000271	              0x5b	                                 pop rbx	       139	show-ref.c	FUNCTION_4
0x4000272	              0x5d	                                 pop rbp	       139	show-ref.c	FUNCTION_4
0x4000273	            0x415c	                                 pop r12	       139	show-ref.c	FUNCTION_4
0x4000275	            0x415d	                                 pop r13	       139	show-ref.c	FUNCTION_4
0x4000277	            0x415e	                                 pop r14	       139	show-ref.c	FUNCTION_4
0x4000279	              0xc3	                                     ret	       139	show-ref.c	FUNCTION_4
0x400027a	          0x4531e4	                          xor r12d, r12d	       107	show-ref.c	FUNCTION_4	CALL_1
0x400027d	      0xe954feffff	                           jmp 0x40000d6	       107	show-ref.c	FUNCTION_4	CALL_1
0x4000282	      0xe800000000	                          call 0x4000287	       139	show-ref.c	FUNCTION_4
hash_callback	CALL,1:IF,1:WHILE,0:FOR,0:ELSE,0:DO,0:functions,0:SWITCH,0	7
0x4000060	          0x4885f6	                           test rsi, rsi	       145	show-ref.c	FUNCTION_5	IF_1
0x4000063	    0xc70500000000	               mov dword [0x0400006d], 1	       143	show-ref.c	FUNCTION_5
0x400006d	            0x7409	                            je 0x4000078	       145	show-ref.c	FUNCTION_5	IF_1
0x400006f	      0xe900000000	                           jmp 0x4000074	       147	show-ref.c	FUNCTION_5	CALL_1
0x4000074	         0xf1f4000	                         nop dword [rax]	       147	show-ref.c	FUNCTION_5	CALL_1
0x4000078	            0x31c0	                            xor eax, eax	       148	show-ref.c	FUNCTION_5
0x400007a	              0xc3	                                     ret	       148	show-ref.c	FUNCTION_5
cmd_show_ref	CALL,11:IF,9:WHILE,1:FOR,0:ELSE,2:DO,0:functions,0:SWITCH,0	151
0x40004f0	              0x55	                                push rbp	       182	show-ref.c	FUNCTION_7
0x40004f1	              0x53	                                push rbx	       182	show-ref.c	FUNCTION_7
0x40004f2	          0x4531c9	                            xor r9d, r9d	       183	show-ref.c	FUNCTION_7	CALL_1
0x40004f5	    0x41b800000000	                              mov r8d, 0	       183	show-ref.c	FUNCTION_7	CALL_1
0x40004fb	      0xb900000000	                              mov ecx, 0	       183	show-ref.c	FUNCTION_7	CALL_1
0x4000500	          0x4889f5	                            mov rbp, rsi	       182	show-ref.c	FUNCTION_7
0x4000503	        0x4883ec48	                           sub rsp, 0x48	       182	show-ref.c	FUNCTION_7
0x4000507	    0x64488b042528	                mov rax, qword fs:[0x28]	       182	show-ref.c	FUNCTION_7
0x4000510	      0x4889442438	             mov qword [rsp + 0x38], rax	       182	show-ref.c	FUNCTION_7
0x4000515	            0x31c0	                            xor eax, eax	       182	show-ref.c	FUNCTION_7
0x4000517	      0xe800000000	                          call 0x400051c	       183	show-ref.c	FUNCTION_7	CALL_1
0x400051c	    0x8b1d00000000	            mov ebx, dword [0x04000522] 	       186	show-ref.c	FUNCTION_7	IF_1
0x4000522	            0x85db	                           test ebx, ebx	       186	show-ref.c	FUNCTION_7	IF_1
0x4000524	     0xf85c6010000	                           jne 0x40006f0	       186	show-ref.c	FUNCTION_7	IF_1
0x400052a	        0x488b7d00	                    mov rdi, qword [rbp]	       190	show-ref.c	FUNCTION_7	IF_2
0x400052e	    0x48892d000000	            mov qword [0x04000535], rbp 	       189	show-ref.c	FUNCTION_7
0x4000535	          0x4885ff	                           test rdi, rdi	       190	show-ref.c	FUNCTION_7	IF_2
0x4000538	     0xf84ca010000	                            je 0x4000708	       190	show-ref.c	FUNCTION_7	IF_2
0x400053e	    0x448b1d000000	           mov r11d, dword [0x04000545] 	       193	show-ref.c	FUNCTION_7	IF_3
0x4000545	          0x4585db	                         test r11d, r11d	       193	show-ref.c	FUNCTION_7	IF_3
0x4000548	     0xf85f1000000	                           jne 0x400063f	       193	show-ref.c	FUNCTION_7	IF_3
0x400054e	    0x8b3500000000	            mov esi, dword [0x04000554] 	       212	show-ref.c	FUNCTION_7	IF_7
0x4000554	            0x85f6	                           test esi, esi	       212	show-ref.c	FUNCTION_7	IF_7
0x4000556	     0xf85d4010000	                           jne 0x4000730	       212	show-ref.c	FUNCTION_7	IF_7
0x400055c	            0x31f6	                            xor esi, esi	       214	show-ref.c	FUNCTION_7	CALL_10
0x400055e	      0xbf00000000	                              mov edi, 0	       214	show-ref.c	FUNCTION_7	CALL_10
0x4000563	      0xe800000000	                          call 0x4000568	       214	show-ref.c	FUNCTION_7	CALL_10
0x4000568	    0x8b0d00000000	            mov ecx, dword [0x0400056e] 	       215	show-ref.c	FUNCTION_7	IF_8
0x400056e	            0x85c9	                           test ecx, ecx	       215	show-ref.c	FUNCTION_7	IF_8
0x4000570	            0x751d	                           jne 0x400058f	       215	show-ref.c	FUNCTION_7	IF_8
0x4000572	    0x8b1500000000	            mov edx, dword [0x04000578] 	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x4000578	            0x85d2	                           test edx, edx	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x400057a	            0x740e	                            je 0x400058a	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x400057c	    0x8b0500000000	            mov eax, dword [0x04000582] 	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x4000582	            0x85c0	                           test eax, eax	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x4000584	     0xf84d6010000	                            je 0x4000760	       216	show-ref.c	FUNCTION_7	IF_8	IF_9
0x400058a	      0xbb01000000	                              mov ebx, 1	       218	show-ref.c	FUNCTION_7	IF_8
0x400058f	            0x89d8	                            mov eax, ebx	       221	show-ref.c	FUNCTION_7
0x4000591	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       221	show-ref.c	FUNCTION_7
0x4000596	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       221	show-ref.c	FUNCTION_7
0x400059f	     0xf85b6010000	                           jne 0x400075b	       221	show-ref.c	FUNCTION_7
0x40005a5	        0x4883c448	                           add rsp, 0x48	       221	show-ref.c	FUNCTION_7
0x40005a9	              0x5b	                                 pop rbx	       221	show-ref.c	FUNCTION_7
0x40005aa	              0x5d	                                 pop rbp	       221	show-ref.c	FUNCTION_7
0x40005ab	              0xc3	                                     ret	       221	show-ref.c	FUNCTION_7
0x40005ac	         0xf1f4000	                         nop dword [rax]	       221	show-ref.c	FUNCTION_7
0x40005b0	    0x8b3500000000	            mov esi, dword [0x040005b6] 	        32	show-ref.c	FUNCTION_1	CALL_4
0x40005b6	          0x4889e7	                            mov rdi, rsp	        32	show-ref.c	FUNCTION_1	CALL_4
0x40005b9	      0xe800000000	                          call 0x40005be	        32	show-ref.c	FUNCTION_1	CALL_4
0x40005be	    0x448b0d000000	            mov r9d, dword [0x040005c5] 	        33	show-ref.c	FUNCTION_1	IF_3
0x40005c5	          0x4585c9	                           test r9d, r9d	        33	show-ref.c	FUNCTION_1	IF_3
0x40005c8	     0xf84da000000	                            je 0x40006a8	        33	show-ref.c	FUNCTION_1	IF_3
0x40005ce	          0x4889c7	                            mov rdi, rax	       104	stdio2.h	CALL_34
0x40005d1	      0xe800000000	                          call 0x40005d6	       104	stdio2.h	CALL_34
0x40005d6	    0x448b05000000	            mov r8d, dword [0x040005dd] 	        38	show-ref.c	FUNCTION_1	IF_4
0x40005dd	          0x4585c0	                           test r8d, r8d	        38	show-ref.c	FUNCTION_1	IF_4
0x40005e0	            0x743e	                            je 0x4000620	        38	show-ref.c	FUNCTION_1	IF_4
0x40005e2	      0x488d742420	                   lea rsi, [rsp + 0x20]	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x40005e7	          0x4889ef	                            mov rdi, rbp	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x40005ea	      0xe800000000	                          call 0x40005ef	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x40005ef	            0x85c0	                           test eax, eax	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x40005f1	            0x752d	                           jne 0x4000620	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x40005f3	    0x8b3500000000	            mov esi, dword [0x040005f9] 	        42	show-ref.c	FUNCTION_1	IF_5	CALL_6
0x40005f9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        42	show-ref.c	FUNCTION_1	IF_5	CALL_6
0x40005fe	      0xe800000000	                          call 0x4000603	        42	show-ref.c	FUNCTION_1	IF_5	CALL_6
0x4000603	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_34
0x4000606	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_34
0x4000609	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_34
0x400060e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_34
0x4000613	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_34
0x4000615	      0xe800000000	                          call 0x400061a	       104	stdio2.h	CALL_34
0x400061a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_34
0x4000620	    0x488b05000000	            mov rax, qword [0x04000627] 	       207	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x4000627	        0x488b7808	                mov rdi, qword [rax + 8]	       196	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x400062b	        0x488d5008	                      lea rdx, [rax + 8]	       207	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x400062f	    0x488915000000	            mov qword [0x04000636], rdx 	       207	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x4000636	          0x4885ff	                           test rdi, rdi	       196	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x4000639	     0xf8450ffffff	                            je 0x400058f	       196	show-ref.c	FUNCTION_7	IF_3	WHILE_1
0x400063f	      0xbe00000000	                              mov esi, 0	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000644	      0xe800000000	                          call 0x4000649	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000649	            0x85c0	                           test eax, eax	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x400064b	    0x488b05000000	            mov rax, qword [0x04000652] 	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000652	          0x488b00	                    mov rax, qword [rax]	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000655	            0x7511	                           jne 0x4000668	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000657	      0xbf00000000	                              mov edi, 0	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x400065c	      0xb905000000	                              mov ecx, 5	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000661	          0x4889c6	                            mov rsi, rax	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000664	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000666	            0x7560	                           jne 0x40006c8	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000668	          0x4889e6	                            mov rsi, rsp	       200	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_6
0x400066b	          0x4889c7	                            mov rdi, rax	       200	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_6
0x400066e	      0xe800000000	                          call 0x4000673	       200	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_6
0x4000673	            0x85c0	                           test eax, eax	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000675	            0x7551	                           jne 0x40006c8	       199	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_5
0x4000677	    0x488b05000000	            mov rax, qword [0x0400067e] 	       201	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_7
0x400067e	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_47	CALL_1
0x4000680	          0x4889e7	                            mov rdi, rsp	      1251	cache.h	FUNCTION_47	CALL_1
0x4000683	          0x488b28	                    mov rbp, qword [rax]	       201	show-ref.c	FUNCTION_7	IF_3	WHILE_1	IF_5	CALL_7
0x4000686	      0xe800000000	                          call 0x400068b	      1251	cache.h	FUNCTION_47	CALL_1
0x400068b	            0x85c0	                           test eax, eax	        25	show-ref.c	FUNCTION_1	IF_1	CALL_1
0x400068d	     0xf84ae000000	                            je 0x4000741	        25	show-ref.c	FUNCTION_1	IF_1	CALL_1
0x4000693	    0x448b15000000	           mov r10d, dword [0x0400069a] 	        29	show-ref.c	FUNCTION_1	IF_2
0x400069a	          0x4585d2	                         test r10d, r10d	        29	show-ref.c	FUNCTION_1	IF_2
0x400069d	            0x7581	                           jne 0x4000620	        29	show-ref.c	FUNCTION_1	IF_2
0x400069f	      0xe90cffffff	                           jmp 0x40005b0	        29	show-ref.c	FUNCTION_1	IF_2
0x40006a4	         0xf1f4000	                         nop dword [rax]	        29	show-ref.c	FUNCTION_1	IF_2
0x40006a8	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_34
0x40006ab	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_34
0x40006ae	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_34
0x40006b3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_34
0x40006b8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_34
0x40006ba	      0xe800000000	                          call 0x40006bf	       104	stdio2.h	CALL_34
0x40006bf	      0xe912ffffff	                           jmp 0x40005d6	       104	stdio2.h	CALL_34
0x40006c4	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_34
0x40006c8	    0x8b3d00000000	            mov edi, dword [0x040006ce] 	       203	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006ce	            0x85ff	                           test edi, edi	       203	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006d0	     0xf85b4feffff	                           jne 0x400058a	       203	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006d6	    0x488b05000000	            mov rax, qword [0x040006dd] 	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006dd	      0xbf00000000	                              mov edi, 0	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006e2	          0x488b30	                    mov rsi, qword [rax]	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006e5	            0x31c0	                            xor eax, eax	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006e7	      0xe800000000	                          call 0x40006ec	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006ec	         0xf1f4000	                         nop dword [rax]	       204	show-ref.c	FUNCTION_7	IF_3	WHILE_1	ELSE_1	IF_6
0x40006f0	    0x488b3d000000	            mov rdi, qword [0x040006f7] 	       187	show-ref.c	FUNCTION_7	CALL_2
0x40006f7	      0xe8a4f9ffff	               call sym.exclude_existing	       187	show-ref.c	FUNCTION_7	CALL_2
0x40006fc	            0x89c3	                            mov ebx, eax	       187	show-ref.c	FUNCTION_7	CALL_2
0x40006fe	      0xe98cfeffff	                           jmp 0x400058f	       187	show-ref.c	FUNCTION_7	CALL_2
0x4000703	       0xf1f440000	                   nop dword [rax + rax]	       187	show-ref.c	FUNCTION_7	CALL_2
0x4000708	    0x8b2d00000000	            mov ebp, dword [0x0400070e] 	       193	show-ref.c	FUNCTION_7	IF_3
0x400070e	    0x48c705000000	               mov qword [0x04000719], 0	       191	show-ref.c	FUNCTION_7	IF_2
0x4000719	            0x85ed	                           test ebp, ebp	       193	show-ref.c	FUNCTION_7	IF_3
0x400071b	     0xf842dfeffff	                            je 0x400054e	       193	show-ref.c	FUNCTION_7	IF_3
0x4000721	      0xbf00000000	                              mov edi, 0	       195	show-ref.c	FUNCTION_7	IF_3	CALL_3
0x4000726	            0x31c0	                            xor eax, eax	       195	show-ref.c	FUNCTION_7	IF_3	CALL_3
0x4000728	      0xe800000000	                          call 0x400072d	       195	show-ref.c	FUNCTION_7	IF_3	CALL_3
0x400072d	           0xf1f00	                         nop dword [rax]	       195	show-ref.c	FUNCTION_7	IF_3	CALL_3
0x4000730	            0x31f6	                            xor esi, esi	       213	show-ref.c	FUNCTION_7	CALL_9
0x4000732	      0xbf00000000	                              mov edi, 0	       213	show-ref.c	FUNCTION_7	CALL_9
0x4000737	      0xe800000000	                          call 0x400073c	       213	show-ref.c	FUNCTION_7	CALL_9
0x400073c	      0xe91bfeffff	                           jmp 0x400055c	       213	show-ref.c	FUNCTION_7	CALL_9
0x4000741	          0x4889e7	                            mov rdi, rsp	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000744	      0xe800000000	                          call 0x4000749	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000749	          0x4889ee	                            mov rsi, rbp	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x400074c	          0x4889c2	                            mov rdx, rax	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x400074f	      0xbf00000000	                              mov edi, 0	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000754	            0x31c0	                            xor eax, eax	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x4000756	      0xe800000000	                          call 0x400075b	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x400075b	      0xe800000000	                          call 0x4000760	       221	show-ref.c	FUNCTION_7
0x4000760	      0xbf00000000	                              mov edi, 0	       217	show-ref.c	FUNCTION_7	IF_8	CALL_11
0x4000765	            0x31c0	                            xor eax, eax	       217	show-ref.c	FUNCTION_7	IF_8	CALL_11
0x4000767	      0xe800000000	                  call section_end..text	       217	show-ref.c	FUNCTION_7	IF_8	CALL_11
add_existing	CALL,1:IF,0:WHILE,0:FOR,0:ELSE,0:DO,0:functions,0:SWITCH,0	7
0x4000080	        0x4883ec08	                              sub rsp, 8	        88	show-ref.c	FUNCTION_3
0x4000084	          0x4889fe	                            mov rsi, rdi	        88	show-ref.c	FUNCTION_3
0x4000087	          0x4889cf	                            mov rdi, rcx	        90	show-ref.c	FUNCTION_3	CALL_1
0x400008a	      0xe800000000	                          call 0x400008f	        90	show-ref.c	FUNCTION_3	CALL_1
0x400008f	            0x31c0	                            xor eax, eax	        92	show-ref.c	FUNCTION_3
0x4000091	        0x4883c408	                              add rsp, 8	        92	show-ref.c	FUNCTION_3
0x4000095	              0xc3	                                     ret	        92	show-ref.c	FUNCTION_3
show_ref	CALL,7:IF,8:WHILE,1:FOR,0:ELSE,0:DO,0:functions,0:SWITCH,0	149
0x4000290	            0x4157	                                push r15	        49	show-ref.c	FUNCTION_2
0x4000292	            0x4156	                                push r14	        49	show-ref.c	FUNCTION_2
0x4000294	            0x4155	                                push r13	        49	show-ref.c	FUNCTION_2
0x4000296	            0x4154	                                push r12	        49	show-ref.c	FUNCTION_2
0x4000298	          0x4989fd	                            mov r13, rdi	        49	show-ref.c	FUNCTION_2
0x400029b	              0x55	                                push rbp	        49	show-ref.c	FUNCTION_2
0x400029c	              0x53	                                push rbx	        49	show-ref.c	FUNCTION_2
0x400029d	        0x4883ec38	                           sub rsp, 0x38	        49	show-ref.c	FUNCTION_2
0x40002a1	    0x448b1d000000	           mov r11d, dword [0x040002a8] 	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x40002a8	    0x64488b042528	                mov rax, qword fs:[0x28]	        49	show-ref.c	FUNCTION_2
0x40002b1	      0x4889442428	             mov qword [rsp + 0x28], rax	        49	show-ref.c	FUNCTION_2
0x40002b6	            0x31c0	                            xor eax, eax	        49	show-ref.c	FUNCTION_2
0x40002b8	      0x4889742408	                mov qword [rsp + 8], rsi	        49	show-ref.c	FUNCTION_2
0x40002bd	          0x4585db	                         test r11d, r11d	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x40002c0	            0x7466	                            je 0x4000328	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x40002c2	      0xbf00000000	                              mov edi, 0	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x40002c7	      0xb905000000	                              mov ecx, 5	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x40002cc	          0x4c89ee	                            mov rsi, r13	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x40002cf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x40002d1	            0x7555	                           jne 0x4000328	        50	show-ref.c	FUNCTION_2	IF_1	CALL_1
0x40002d3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1251	cache.h	FUNCTION_47	CALL_1
0x40002d8	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_47	CALL_1
0x40002da	    0x830500000000	               add dword [0x040002e1], 1	        79	show-ref.c	FUNCTION_2
0x40002e1	      0xe800000000	                          call 0x40002e6	      1251	cache.h	FUNCTION_47	CALL_1
0x40002e6	            0x85c0	                           test eax, eax	        25	show-ref.c	FUNCTION_1	IF_1	CALL_1
0x40002e8	     0xf84db010000	                            je 0x40004c9	        25	show-ref.c	FUNCTION_1	IF_1	CALL_1
0x40002ee	    0x8b3500000000	            mov esi, dword [0x040002f4] 	        29	show-ref.c	FUNCTION_1	IF_2
0x40002f4	            0x85f6	                           test esi, esi	        29	show-ref.c	FUNCTION_1	IF_2
0x40002f6	     0xf842c010000	                            je 0x4000428	        29	show-ref.c	FUNCTION_1	IF_2
0x40002fc	            0x31c0	                            xor eax, eax	        84	show-ref.c	FUNCTION_2
0x40002fe	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	        84	show-ref.c	FUNCTION_2
0x4000303	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        84	show-ref.c	FUNCTION_2
0x400030c	     0xf85d3010000	                           jne 0x40004e5	        84	show-ref.c	FUNCTION_2
0x4000312	        0x4883c438	                           add rsp, 0x38	        84	show-ref.c	FUNCTION_2
0x4000316	              0x5b	                                 pop rbx	        84	show-ref.c	FUNCTION_2
0x4000317	              0x5d	                                 pop rbp	        84	show-ref.c	FUNCTION_2
0x4000318	            0x415c	                                 pop r12	        84	show-ref.c	FUNCTION_2
0x400031a	            0x415d	                                 pop r13	        84	show-ref.c	FUNCTION_2
0x400031c	            0x415e	                                 pop r14	        84	show-ref.c	FUNCTION_2
0x400031e	            0x415f	                                 pop r15	        84	show-ref.c	FUNCTION_2
0x4000320	              0xc3	                                     ret	        84	show-ref.c	FUNCTION_2
0x4000321	     0xf1f80000000	                         nop dword [rax]	        84	show-ref.c	FUNCTION_2
0x4000328	    0x448b15000000	           mov r10d, dword [0x0400032f] 	        53	show-ref.c	FUNCTION_2	IF_2
0x400032f	          0x4585d2	                         test r10d, r10d	        53	show-ref.c	FUNCTION_2	IF_2
0x4000332	     0xf84a8000000	                            je 0x40003e0	        53	show-ref.c	FUNCTION_2	IF_2
0x4000338	    0x448b05000000	            mov r8d, dword [0x0400033f] 	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x400033f	          0x4585c0	                           test r8d, r8d	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x4000342	     0xf85a8000000	                           jne 0x40003f0	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x4000348	      0xbe00000000	                              mov esi, 0	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x400034d	          0x4c89ef	                            mov rdi, r13	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000350	      0xe800000000	                          call 0x4000355	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000355	            0x85c0	                           test eax, eax	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000357	            0x74a3	                            je 0x40002fc	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000359	    0x488b2d000000	            mov rbp, qword [0x04000360] 	        61	show-ref.c	FUNCTION_2	IF_4
0x4000360	          0x4885ed	                           test rbp, rbp	        61	show-ref.c	FUNCTION_2	IF_4
0x4000363	     0xf846affffff	                            je 0x40002d3	        61	show-ref.c	FUNCTION_2	IF_4
0x4000369	          0x4c89ef	                            mov rdi, r13	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x400036c	      0xe800000000	                          call 0x4000371	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x4000371	          0x4c63f0	                         movsxd r14, eax	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x4000374	          0x4d89f4	                            mov r12, r14	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x4000377	    0x660f1f840000	                    nop word [rax + rax]	        62	show-ref.c	FUNCTION_2	IF_4	CALL_4
0x4000380	        0x4883c508	                              add rbp, 8	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x4000384	        0x488b5df8	                mov rbx, qword [rbp - 8]	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x4000388	          0x4885db	                           test rbx, rbx	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x400038b	     0xf846bffffff	                            je 0x40002fc	        64	show-ref.c	FUNCTION_2	IF_4	WHILE_1
0x4000391	          0x4889df	                            mov rdi, rbx	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x4000394	      0xe800000000	                          call 0x4000399	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x4000399	          0x4139c4	                           cmp r12d, eax	        66	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_5
0x400039c	          0x4989c7	                            mov r15, rax	        65	show-ref.c	FUNCTION_2	IF_4	WHILE_1	CALL_5
0x400039f	            0x7cdf	                            jl 0x4000380	        66	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_5
0x40003a1	          0x4863d0	                         movsxd rdx, eax	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x40003a4	          0x4c89f6	                            mov rsi, r14	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x40003a7	          0x4889df	                            mov rdi, rbx	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x40003aa	          0x4829d6	                            sub rsi, rdx	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x40003ad	          0x4c01ee	                            add rsi, r13	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x40003b0	      0xe800000000	                          call 0x40003b5	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x40003b5	            0x85c0	                           test eax, eax	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x40003b7	            0x75c7	                           jne 0x4000380	        68	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_6	CALL_6
0x40003b9	          0x4539fc	                          cmp r12d, r15d	        70	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_7
0x40003bc	     0xf8411ffffff	                            je 0x40002d3	        70	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_7
0x40003c2	          0x4489e0	                           mov eax, r12d	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x40003c5	          0x4429f8	                           sub eax, r15d	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x40003c8	            0x4898	                                    cdqe	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x40003ca	    0x41807c05ff2f	         cmp byte [r13 + rax - 1], 0x2f 	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x40003d0	            0x75ae	                           jne 0x4000380	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x40003d2	      0xe9fcfeffff	                           jmp 0x40002d3	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x40003d7	    0x660f1f840000	                    nop word [rax + rax]	        72	show-ref.c	FUNCTION_2	IF_4	WHILE_1	IF_8
0x40003e0	    0x448b0d000000	            mov r9d, dword [0x040003e7] 	        53	show-ref.c	FUNCTION_2	IF_2
0x40003e7	          0x4585c9	                           test r9d, r9d	        53	show-ref.c	FUNCTION_2	IF_2
0x40003ea	     0xf8469ffffff	                            je 0x4000359	        53	show-ref.c	FUNCTION_2	IF_2
0x40003f0	      0xbe00000000	                              mov esi, 0	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x40003f5	          0x4c89ef	                            mov rdi, r13	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x40003f8	      0xe800000000	                          call 0x40003fd	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x40003fd	            0x85c0	                           test eax, eax	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x40003ff	     0xf8494000000	                            je 0x4000499	        56	show-ref.c	FUNCTION_2	IF_2	CALL_2
0x4000405	    0x8b0500000000	            mov eax, dword [0x0400040b] 	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x400040b	            0x85c0	                           test eax, eax	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x400040d	     0xf8446ffffff	                            je 0x4000359	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000413	      0xbe00000000	                              mov esi, 0	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000418	          0x4c89ef	                            mov rdi, r13	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x400041b	      0xe800000000	                          call 0x4000420	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000420	      0xe934ffffff	                           jmp 0x4000359	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000425	           0xf1f00	                         nop dword [rax]	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x4000428	    0x8b3500000000	            mov esi, dword [0x0400042e] 	        32	show-ref.c	FUNCTION_1	CALL_4
0x400042e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        32	show-ref.c	FUNCTION_1	CALL_4
0x4000433	      0xe800000000	                          call 0x4000438	        32	show-ref.c	FUNCTION_1	CALL_4
0x4000438	    0x8b0d00000000	            mov ecx, dword [0x0400043e] 	        33	show-ref.c	FUNCTION_1	IF_3
0x400043e	            0x85c9	                           test ecx, ecx	        33	show-ref.c	FUNCTION_1	IF_3
0x4000440	            0x746e	                            je 0x40004b0	        33	show-ref.c	FUNCTION_1	IF_3
0x4000442	          0x4889c7	                            mov rdi, rax	       104	stdio2.h	CALL_34
0x4000445	      0xe800000000	                          call 0x400044a	       104	stdio2.h	CALL_34
0x400044a	    0x8b1500000000	            mov edx, dword [0x04000450] 	        38	show-ref.c	FUNCTION_1	IF_4
0x4000450	            0x85d2	                           test edx, edx	        38	show-ref.c	FUNCTION_1	IF_4
0x4000452	     0xf84a4feffff	                            je 0x40002fc	        38	show-ref.c	FUNCTION_1	IF_4
0x4000458	      0x488d742410	                   lea rsi, [rsp + 0x10]	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x400045d	          0x4c89ef	                            mov rdi, r13	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x4000460	      0xe800000000	                          call 0x4000465	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x4000465	            0x85c0	                           test eax, eax	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x4000467	     0xf858ffeffff	                           jne 0x40002fc	        41	show-ref.c	FUNCTION_1	IF_5	CALL_5
0x400046d	    0x8b3500000000	            mov esi, dword [0x04000473] 	        42	show-ref.c	FUNCTION_1	IF_5	CALL_6
0x4000473	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        42	show-ref.c	FUNCTION_1	IF_5	CALL_6
0x4000478	      0xe800000000	                          call 0x400047d	        42	show-ref.c	FUNCTION_1	IF_5	CALL_6
0x400047d	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_34
0x4000480	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_34
0x4000483	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_34
0x4000488	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_34
0x400048d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_34
0x400048f	      0xe800000000	                          call 0x4000494	       104	stdio2.h	CALL_34
0x4000494	      0xe963feffff	                           jmp 0x40002fc	       104	stdio2.h	CALL_34
0x4000499	    0x8b3d00000000	            mov edi, dword [0x0400049f] 	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x400049f	            0x85ff	                           test edi, edi	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40004a1	     0xf8455feffff	                            je 0x40002fc	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40004a7	      0xe99cfeffff	                           jmp 0x4000348	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40004ac	         0xf1f4000	                         nop dword [rax]	        57	show-ref.c	FUNCTION_2	IF_2	CALL_3
0x40004b0	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_34
0x40004b3	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_34
0x40004b6	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_34
0x40004bb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_34
0x40004c0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_34
0x40004c2	      0xe800000000	                          call 0x40004c7	       104	stdio2.h	CALL_34
0x40004c7	            0xeb81	                           jmp 0x400044a	       104	stdio2.h	CALL_34
0x40004c9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x40004ce	      0xe800000000	                          call 0x40004d3	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x40004d3	          0x4c89ee	                            mov rsi, r13	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x40004d6	          0x4889c2	                            mov rdx, rax	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x40004d9	      0xbf00000000	                              mov edi, 0	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x40004de	            0x31c0	                            xor eax, eax	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x40004e0	      0xe800000000	                          call 0x40004e5	        26	show-ref.c	FUNCTION_1	IF_1	CALL_2
0x40004e5	      0xe800000000	                          call 0x40004ea	        84	show-ref.c	FUNCTION_2
