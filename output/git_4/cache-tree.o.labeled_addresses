cache_tree_update	CALL,2:FOR,0:WHILE,0:DO,0:IF,2:functions,0:ELSE,0:SWITCH,0	153
0x4001e40	            0x4157	                                push r15	       427	cache-tree.c	FUNCTION_13
0x4001e42	            0x4156	                                push r14	       427	cache-tree.c	FUNCTION_13
0x4001e44	            0x4155	                                push r13	       427	cache-tree.c	FUNCTION_13
0x4001e46	            0x4154	                                push r12	       427	cache-tree.c	FUNCTION_13
0x4001e48	              0x55	                                push rbp	       427	cache-tree.c	FUNCTION_13
0x4001e49	              0x53	                                push rbx	       427	cache-tree.c	FUNCTION_13
0x4001e4a	        0x4883ec48	                           sub rsp, 0x48	       427	cache-tree.c	FUNCTION_13
0x4001e4e	          0x8b470c	              mov eax, dword [rdi + 0xc]	       430	cache-tree.c	FUNCTION_13
0x4001e51	    0x64488b142528	                mov rdx, qword fs:[0x28]	       427	cache-tree.c	FUNCTION_13
0x4001e5a	      0x4889542438	             mov qword [rsp + 0x38], rdx	       427	cache-tree.c	FUNCTION_13
0x4001e5f	            0x31d2	                            xor edx, edx	       427	cache-tree.c	FUNCTION_13
0x4001e61	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       428	cache-tree.c	FUNCTION_13
0x4001e65	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       427	cache-tree.c	FUNCTION_13
0x4001e6a	        0x89442420	             mov dword [rsp + 0x20], eax	       430	cache-tree.c	FUNCTION_13
0x4001e6e	        0x89742424	             mov dword [rsp + 0x24], esi	       427	cache-tree.c	FUNCTION_13
0x4001e72	      0x4889542418	             mov qword [rsp + 0x18], rdx	       428	cache-tree.c	FUNCTION_13
0x4001e77	          0x488b17	                    mov rdx, qword [rdi]	       429	cache-tree.c	FUNCTION_13
0x4001e7a	      0x4889542410	             mov qword [rsp + 0x10], rdx	       429	cache-tree.c	FUNCTION_13
0x4001e7f	            0x89c2	                            mov edx, eax	       430	cache-tree.c	FUNCTION_13
0x4001e81	            0x89f0	                            mov eax, esi	       155	cache-tree.c	FUNCTION_9
0x4001e83	          0x83e008	                              and eax, 8	       155	cache-tree.c	FUNCTION_9
0x4001e86	            0x85d2	                           test edx, edx	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001e88	            0x7e7f	                           jle 0x4001f09	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001e8a	            0x85c0	                           test eax, eax	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001e8c	     0xf85b8010000	                           jne 0x400204a	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001e92	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001e97	            0x89d0	                            mov eax, edx	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001e99	          0x4531ed	                          xor r13d, r13d	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001e9c	          0x83e801	                              sub eax, 1	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001e9f	      0x488d5cc608	              lea rbx, [rsi + rax*8 + 8]	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001ea4	          0x4889f5	                            mov rbp, rsi	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001ea7	    0x660f1f840000	                    nop word [rax + rax]	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001eb0	        0x4c8b6500	                    mov r12, qword [rbp]	       160	cache-tree.c	FUNCTION_9	FOR_1
0x4001eb4	    0x41f744243800	        test dword [r12 + 0x38], 0x3000 	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4001ebd	            0x7438	                            je 0x4001ef7	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4001ebf	        0x4183c501	                             add r13d, 1	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x4001ec3	        0x4183fd0a	                           cmp r13d, 0xa	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x4001ec7	     0xf8f5b010000	                            jg 0x4002028	       164	cache-tree.c	FUNCTION_9	FOR_1	IF_1	IF_3
0x4001ecd	      0x498d7c2444	                   lea rdi, [r12 + 0x44]	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4001ed2	      0xe800000000	                          call 0x4001ed7	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4001ed7	    0x488b3d000000	            mov rdi, qword [0x04001ede] 	        97	stdio2.h	CALL_9
0x4001ede	      0x498d4c2458	                   lea rcx, [r12 + 0x58]	        97	stdio2.h	CALL_9
0x4001ee3	          0x4989c0	                             mov r8, rax	       168	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4001ee6	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4001eeb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4001ef0	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4001ef2	      0xe800000000	                          call 0x4001ef7	        97	stdio2.h	CALL_9
0x4001ef7	        0x4883c508	                              add rbp, 8	        97	stdio2.h	CALL_9
0x4001efb	          0x4839dd	                            cmp rbp, rbx	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001efe	            0x75b0	                           jne 0x4001eb0	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4001f00	          0x4585ed	                         test r13d, r13d	       172	cache-tree.c	FUNCTION_9	IF_4
0x4001f03	     0xf853a010000	                           jne 0x4002043	       172	cache-tree.c	FUNCTION_9	IF_4
0x4001f09	      0x837c242001	               cmp dword [rsp + 0x20], 1	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f0e	     0xf8eb4000000	                           jle 0x4001fc8	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f14	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f18	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f1d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f25	          0x83e802	                              sub eax, 2	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f28	          0x4989cf	                            mov r15, rcx	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f2b	      0x4c8d74c108	              lea r14, [rcx + rax*8 + 8]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f30	            0xeb0f	                           jmp 0x4001f41	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f32	    0x660f1f440000	                    nop word [rax + rax]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f38	        0x4983c708	                              add r15, 8	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f3c	          0x4d39fe	                            cmp r14, r15	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f3f	            0x747f	                            je 0x4001fc0	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001f41	          0x498b07	                    mov rax, qword [r15]	       185	cache-tree.c	FUNCTION_9	FOR_2
0x4001f44	        0x4d8b6f08	                mov r13, qword [r15 + 8]	       186	cache-tree.c	FUNCTION_9	FOR_2
0x4001f48	        0x488d6858	                   lea rbp, [rax + 0x58]	       185	cache-tree.c	FUNCTION_9	FOR_2
0x4001f4c	        0x4d8d6558	                   lea r12, [r13 + 0x58]	       186	cache-tree.c	FUNCTION_9	FOR_2
0x4001f50	          0x4889ef	                            mov rdi, rbp	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_2
0x4001f53	      0xe800000000	                          call 0x4001f58	       187	cache-tree.c	FUNCTION_9	FOR_2	CALL_2
0x4001f58	          0x4c89e7	                            mov rdi, r12	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_3
0x4001f5b	          0x4863d8	                         movsxd rbx, eax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_3
0x4001f5e	      0xe800000000	                          call 0x4001f63	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_3
0x4001f63	          0x4839c3	                            cmp rbx, rax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_3
0x4001f66	            0x73d0	                           jae 0x4001f38	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_3
0x4001f68	          0x4889da	                            mov rdx, rbx	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_4
0x4001f6b	          0x4c89e6	                            mov rsi, r12	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_4
0x4001f6e	          0x4889ef	                            mov rdi, rbp	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_4
0x4001f71	      0xe800000000	                          call 0x4001f76	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_4
0x4001f76	            0x85c0	                           test eax, eax	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_3
0x4001f78	            0x75be	                           jne 0x4001f38	       188	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_3
0x4001f7a	    0x41807c1d582f	      cmp byte [r13 + rbx + 0x58], 0x2f 	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_4
0x4001f80	            0x75b6	                           jne 0x4001f38	       189	cache-tree.c	FUNCTION_9	FOR_2	IF_5	CALL_4
0x4001f82	      0x8344240c01	                add dword [rsp + 0xc], 1	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001f87	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001f8b	          0x83f80a	                            cmp eax, 0xa	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001f8e	     0xf8f94000000	                            jg 0x4002028	       191	cache-tree.c	FUNCTION_9	FOR_2	IF_5	IF_6
0x4001f94	    0x488b3d000000	            mov rdi, qword [0x04001f9b] 	        97	stdio2.h	CALL_9
0x4001f9b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4001f9d	          0x4d89e0	                             mov r8, r12	        97	stdio2.h	CALL_9
0x4001fa0	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_9
0x4001fa3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4001fa8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4001fad	        0x4983c708	                              add r15, 8	        97	stdio2.h	CALL_9
0x4001fb1	      0xe800000000	                          call 0x4001fb6	        97	stdio2.h	CALL_9
0x4001fb6	          0x4d39fe	                            cmp r14, r15	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001fb9	            0x7586	                           jne 0x4001f41	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001fbb	       0xf1f440000	                   nop dword [rax + rax]	       180	cache-tree.c	FUNCTION_9	FOR_2
0x4001fc0	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       199	cache-tree.c	FUNCTION_9	IF_7
0x4001fc4	            0x85f6	                           test esi, esi	       199	cache-tree.c	FUNCTION_9	IF_7
0x4001fc6	            0x757b	                           jne 0x4002043	       199	cache-tree.c	FUNCTION_9	IF_7
0x4001fc8	        0x4883ec08	                              sub rsp, 8	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fcc	          0x4531c0	                            xor r8d, r8d	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fcf	      0xb900000000	                              mov ecx, 0	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fd4	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fd8	              0x50	                                push rax	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fd9	        0x8b542430	            mov edx, dword [rsp + 0x30] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fdd	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fe2	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fe7	      0x4c8d4c2444	                    lea r9, [rsp + 0x44]	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001fec	      0xe88ff3ffff	                     call sym.update_one	       435	cache-tree.c	FUNCTION_13	CALL_2
0x4001ff1	            0x85c0	                           test eax, eax	       436	cache-tree.c	FUNCTION_13	IF_2
0x4001ff3	              0x5a	                                 pop rdx	       436	cache-tree.c	FUNCTION_13	IF_2
0x4001ff4	              0x59	                                 pop rcx	       436	cache-tree.c	FUNCTION_13	IF_2
0x4001ff5	            0x780b	                            js 0x4002002	       436	cache-tree.c	FUNCTION_13	IF_2
0x4001ff7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       438	cache-tree.c	FUNCTION_13
0x4001ffc	        0x83481420	             or dword [rax + 0x14], 0x20	       438	cache-tree.c	FUNCTION_13
0x4002000	            0x31c0	                            xor eax, eax	       439	cache-tree.c	FUNCTION_13
0x4002002	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       440	cache-tree.c	FUNCTION_13
0x4002007	    0x644833342528	                xor rsi, qword fs:[0x28]	       440	cache-tree.c	FUNCTION_13
0x4002010	            0x756e	                           jne 0x4002080	       440	cache-tree.c	FUNCTION_13
0x4002012	        0x4883c448	                           add rsp, 0x48	       440	cache-tree.c	FUNCTION_13
0x4002016	              0x5b	                                 pop rbx	       440	cache-tree.c	FUNCTION_13
0x4002017	              0x5d	                                 pop rbp	       440	cache-tree.c	FUNCTION_13
0x4002018	            0x415c	                                 pop r12	       440	cache-tree.c	FUNCTION_13
0x400201a	            0x415d	                                 pop r13	       440	cache-tree.c	FUNCTION_13
0x400201c	            0x415e	                                 pop r14	       440	cache-tree.c	FUNCTION_13
0x400201e	            0x415f	                                 pop r15	       440	cache-tree.c	FUNCTION_13
0x4002020	              0xc3	                                     ret	       440	cache-tree.c	FUNCTION_13
0x4002021	     0xf1f80000000	                         nop dword [rax]	       440	cache-tree.c	FUNCTION_13
0x4002028	    0x488b0d000000	            mov rcx, qword [0x0400202f] 	        97	stdio2.h	CALL_9
0x400202f	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_9
0x4002034	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4002039	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_9
0x400203e	      0xe800000000	                          call 0x4002043	        97	stdio2.h	CALL_9
0x4002043	      0xb8ffffffff	                     mov eax, 0xffffffff	        97	stdio2.h	CALL_9
0x4002048	            0xebb8	                           jmp 0x4002002	        97	stdio2.h	CALL_9
0x400204a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        97	stdio2.h	CALL_9
0x400204f	          0x8d52ff	                      lea edx, [rdx - 1]	        97	stdio2.h	CALL_9
0x4002052	          0x4889f0	                            mov rax, rsi	        97	stdio2.h	CALL_9
0x4002055	      0x488d4cd608	              lea rcx, [rsi + rdx*8 + 8]	        97	stdio2.h	CALL_9
0x400205a	            0xeb11	                           jmp 0x400206d	        97	stdio2.h	CALL_9
0x400205c	         0xf1f4000	                         nop dword [rax]	        97	stdio2.h	CALL_9
0x4002060	        0x4883c008	                              add rax, 8	        97	stdio2.h	CALL_9
0x4002064	          0x4839c1	                            cmp rcx, rax	       159	cache-tree.c	FUNCTION_9	FOR_1
0x4002067	     0xf849cfeffff	                            je 0x4001f09	       159	cache-tree.c	FUNCTION_9	FOR_1
0x400206d	          0x488b10	                    mov rdx, qword [rax]	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4002070	    0xf74238003000	        test dword [rdx + 0x38], 0x3000 	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4002077	            0x74e7	                            je 0x4002060	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4002079	      0xb8ffffffff	                     mov eax, 0xffffffff	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x400207e	            0xeb82	                           jmp 0x4002002	       161	cache-tree.c	FUNCTION_9	FOR_1	IF_1
0x4002080	      0xe800000000	                          call 0x4002085	       440	cache-tree.c	FUNCTION_13
write_cache_as_tree	CALL,2:FOR,0:WHILE,0:DO,0:IF,0:functions,0:ELSE,0:SWITCH,0	134
0x4002290	            0x4156	                                push r14	       655	cache-tree.c	FUNCTION_20
0x4002292	            0x4155	                                push r13	       655	cache-tree.c	FUNCTION_20
0x4002294	          0x4189f6	                           mov r14d, esi	       655	cache-tree.c	FUNCTION_20
0x4002297	            0x4154	                                push r12	       655	cache-tree.c	FUNCTION_20
0x4002299	              0x55	                                push rbp	       655	cache-tree.c	FUNCTION_20
0x400229a	          0x4989fc	                            mov r12, rdi	       655	cache-tree.c	FUNCTION_20
0x400229d	              0x53	                                push rbx	       655	cache-tree.c	FUNCTION_20
0x400229e	          0x4989d5	                            mov r13, rdx	       655	cache-tree.c	FUNCTION_20
0x40022a1	        0x4883ec10	                           sub rsp, 0x10	       655	cache-tree.c	FUNCTION_20
0x40022a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       655	cache-tree.c	FUNCTION_20
0x40022ae	      0x4889442408	                mov qword [rsp + 8], rax	       655	cache-tree.c	FUNCTION_20
0x40022b3	            0x31c0	                            xor eax, eax	       655	cache-tree.c	FUNCTION_20
0x40022b5	      0xe800000000	                          call 0x40022ba	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40022ba	            0x31c9	                            xor ecx, ecx	       175	lockfile.h	FUNCTION_43	CALL_1
0x40022bc	      0xba01000000	                              mov edx, 1	       175	lockfile.h	FUNCTION_43	CALL_1
0x40022c1	          0x4889c6	                            mov rsi, rax	       175	lockfile.h	FUNCTION_43	CALL_1
0x40022c4	          0x4889e7	                            mov rdi, rsp	       175	lockfile.h	FUNCTION_43	CALL_1
0x40022c7	          0x4889c3	                            mov rbx, rax	       656	cache-tree.c	FUNCTION_20	CALL_2
0x40022ca	    0x48c704240000	                      mov qword [rsp], 0	       606	cache-tree.c	FUNCTION_19
0x40022d2	      0xe800000000	                          call 0x40022d7	       175	lockfile.h	FUNCTION_43	CALL_1
0x40022d7	      0xe800000000	                          call 0x40022dc	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40022dc	          0x4889de	                            mov rsi, rbx	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40022df	          0x4889c2	                            mov rdx, rax	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40022e2	      0xbf00000000	                              mov edi, 0	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40022e7	      0xe800000000	                          call 0x40022ec	       611	cache-tree.c	FUNCTION_19	CALL_3
0x40022ec	            0x85c0	                           test eax, eax	       612	cache-tree.c	FUNCTION_19	IF_1
0x40022ee	     0xf8899010000	                            js 0x400248d	       612	cache-tree.c	FUNCTION_19	IF_1
0x40022f4	        0x41f6c602	                            test r14b, 2	       616	cache-tree.c	FUNCTION_19	IF_2
0x40022f8	     0xf85ca000000	                           jne 0x40023c8	       616	cache-tree.c	FUNCTION_19	IF_2
0x40022fe	    0x488b1d000000	            mov rbx, qword [0x04002305] 	       616	cache-tree.c	FUNCTION_19	IF_2
0x4002305	          0x4885db	                           test rbx, rbx	       619	cache-tree.c	FUNCTION_19	IF_3
0x4002308	     0xf8422010000	                            je 0x4002430	       619	cache-tree.c	FUNCTION_19	IF_3
0x400230e	            0x8b03	                    mov eax, dword [rbx]	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4002310	            0x85c0	                           test eax, eax	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4002312	            0x781c	                            js 0x4002330	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4002314	        0x488d7b04	                      lea rdi, [rbx + 4]	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4002318	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_75	CALL_1
0x400231a	      0xe800000000	                          call 0x400231f	      1251	cache.h	FUNCTION_75	CALL_1
0x400231f	            0x85c0	                           test eax, eax	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4002321	            0x740d	                            je 0x4002330	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4002323	          0x4889df	                            mov rdi, rbx	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x4002326	      0xe885dfffff	  call sym.cache_tree_fully_valid.part.4	       226	cache-tree.c	FUNCTION_11	IF_2	CALL_1
0x400232b	            0x85c0	                           test eax, eax	       623	cache-tree.c	FUNCTION_19	IF_4
0x400232d	            0x7528	                           jne 0x4002357	       623	cache-tree.c	FUNCTION_19	IF_4
0x400232f	              0x90	                                     nop	       623	cache-tree.c	FUNCTION_19	IF_4
0x4002330	          0x4489f6	                           mov esi, r14d	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x4002333	      0xbf00000000	                              mov edi, 0	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x4002338	      0xe800000000	                          call 0x400233d	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x400233d	            0x85c0	                           test eax, eax	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x400233f	     0xf883e010000	                            js 0x4002483	       624	cache-tree.c	FUNCTION_19	IF_4	IF_5	CALL_7
0x4002345	      0xba01000000	                              mov edx, 1	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x400234a	          0x4889e6	                            mov rsi, rsp	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x400234d	      0xbf00000000	                              mov edi, 0	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x4002352	      0xe800000000	                          call 0x4002357	       628	cache-tree.c	FUNCTION_19	IF_4	CALL_8
0x4002357	          0x4d85ed	                           test r13, r13	       637	cache-tree.c	FUNCTION_19	IF_6
0x400235a	     0xf84f8000000	                            je 0x4002458	       637	cache-tree.c	FUNCTION_19	IF_6
0x4002360	    0x488b3d000000	            mov rdi, qword [0x04002367] 	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x4002367	          0x4c89ee	                            mov rsi, r13	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x400236a	      0xe801deffff	                call sym.cache_tree_find	       639	cache-tree.c	FUNCTION_19	IF_6	CALL_9
0x400236f	          0x4885c0	                           test rax, rax	       640	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x4002372	     0xf841f010000	                            je 0x4002497	       640	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x4002378	        0x488d5004	                      lea rdx, [rax + 4]	        53	string3.h	FUNCTION_80	CALL_3
0x400237c	        0x488b4004	                mov rax, qword [rax + 4]	        53	string3.h	FUNCTION_80	CALL_3
0x4002380	            0x31db	                            xor ebx, ebx	       607	cache-tree.c	FUNCTION_19
0x4002382	        0x49890424	                    mov qword [r12], rax	        53	string3.h	FUNCTION_80	CALL_3
0x4002386	        0x488b4208	                mov rax, qword [rdx + 8]	        53	string3.h	FUNCTION_80	CALL_3
0x400238a	      0x4989442408	                mov qword [r12 + 8], rax	        53	string3.h	FUNCTION_80	CALL_3
0x400238f	          0x8b4210	            mov eax, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_80	CALL_3
0x4002392	      0x4189442410	             mov dword [r12 + 0x10], eax	        53	string3.h	FUNCTION_80	CALL_3
0x4002397	          0x4889e7	                            mov rdi, rsp	       304	lockfile.h	FUNCTION_52	CALL_1
0x400239a	      0xe800000000	                          call 0x400239f	       304	lockfile.h	FUNCTION_52	CALL_1
0x400239f	      0x488b742408	                mov rsi, qword [rsp + 8]	       657	cache-tree.c	FUNCTION_20
0x40023a4	    0x644833342528	                xor rsi, qword fs:[0x28]	       657	cache-tree.c	FUNCTION_20
0x40023ad	            0x89d8	                            mov eax, ebx	       657	cache-tree.c	FUNCTION_20
0x40023af	     0xf85ec000000	                           jne 0x40024a1	       657	cache-tree.c	FUNCTION_20
0x40023b5	        0x4883c410	                           add rsp, 0x10	       657	cache-tree.c	FUNCTION_20
0x40023b9	              0x5b	                                 pop rbx	       657	cache-tree.c	FUNCTION_20
0x40023ba	              0x5d	                                 pop rbp	       657	cache-tree.c	FUNCTION_20
0x40023bb	            0x415c	                                 pop r12	       657	cache-tree.c	FUNCTION_20
0x40023bd	            0x415d	                                 pop r13	       657	cache-tree.c	FUNCTION_20
0x40023bf	            0x415e	                                 pop r14	       657	cache-tree.c	FUNCTION_20
0x40023c1	              0xc3	                                     ret	       657	cache-tree.c	FUNCTION_20
0x40023c2	    0x660f1f440000	                    nop word [rax + rax]	       657	cache-tree.c	FUNCTION_20
0x40023c8	    0x488b2d000000	            mov rbp, qword [0x040023cf] 	        21	cache-tree.c	FUNCTION_2
0x40023cf	          0x4885ed	                           test rbp, rbp	        23	cache-tree.c	FUNCTION_2	IF_1
0x40023d2	            0x745c	                            je 0x4002430	        23	cache-tree.c	FUNCTION_2	IF_1
0x40023d4	          0x8b5518	            mov edx, dword [rbp + 0x18] 	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40023d7	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40023db	            0x85d2	                           test edx, edx	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40023dd	            0x7e36	                           jle 0x4002415	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40023df	            0x31db	                            xor ebx, ebx	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40023e1	     0xf1f80000000	                         nop dword [rax]	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40023e8	        0x488b3cd9	            mov rdi, qword [rcx + rbx*8]	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40023ec	          0x4885ff	                           test rdi, rdi	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40023ef	            0x7419	                            je 0x400240a	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40023f1	      0xe800000000	                          call 0x40023f6	        27	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40023f6	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40023fa	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40023fe	      0xe800000000	                          call 0x4002403	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4002403	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4002407	          0x8b5518	            mov edx, dword [rbp + 0x18] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x400240a	          0x8d4301	                      lea eax, [rbx + 1]	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x400240d	        0x4883c301	                              add rbx, 1	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4002411	            0x39d0	                            cmp eax, edx	        25	cache-tree.c	FUNCTION_2	FOR_1
0x4002413	            0x7cd3	                            jl 0x40023e8	        25	cache-tree.c	FUNCTION_2	FOR_1
0x4002415	          0x4889cf	                            mov rdi, rcx	        30	cache-tree.c	FUNCTION_2	CALL_3
0x4002418	      0xe800000000	                          call 0x400241d	        30	cache-tree.c	FUNCTION_2	CALL_3
0x400241d	          0x4889ef	                            mov rdi, rbp	        31	cache-tree.c	FUNCTION_2	CALL_4
0x4002420	      0xe800000000	                          call 0x4002425	        31	cache-tree.c	FUNCTION_2	CALL_4
0x4002425	    0x48c705000000	               mov qword [0x04002430], 0	        32	cache-tree.c	FUNCTION_2
0x4002430	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4002435	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x400243a	      0xe800000000	                          call 0x400243f	        13	cache-tree.c	FUNCTION_1	CALL_1
0x400243f	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x4002445	    0x488905000000	            mov qword [0x0400244c], rax 	       620	cache-tree.c	FUNCTION_19	CALL_5
0x400244c	      0xe9dffeffff	                           jmp 0x4002330	       620	cache-tree.c	FUNCTION_19	CALL_5
0x4002451	     0xf1f80000000	                         nop dword [rax]	       620	cache-tree.c	FUNCTION_19	CALL_5
0x4002458	    0x488b15000000	            mov rdx, qword [0x0400245f] 	        53	string3.h	FUNCTION_80	CALL_3
0x400245f	            0x31db	                            xor ebx, ebx	       607	cache-tree.c	FUNCTION_19
0x4002461	        0x488d4204	                      lea rax, [rdx + 4]	        53	string3.h	FUNCTION_80	CALL_3
0x4002465	        0x488b5204	                mov rdx, qword [rdx + 4]	        53	string3.h	FUNCTION_80	CALL_3
0x4002469	        0x49891424	                    mov qword [r12], rdx	        53	string3.h	FUNCTION_80	CALL_3
0x400246d	        0x488b5008	                mov rdx, qword [rax + 8]	        53	string3.h	FUNCTION_80	CALL_3
0x4002471	      0x4989542408	                mov qword [r12 + 8], rdx	        53	string3.h	FUNCTION_80	CALL_3
0x4002476	          0x8b4010	            mov eax, dword [rax + 0x10] 	        53	string3.h	FUNCTION_80	CALL_3
0x4002479	      0x4189442410	             mov dword [r12 + 0x10], eax	        53	string3.h	FUNCTION_80	CALL_3
0x400247e	      0xe914ffffff	                           jmp 0x4002397	        53	string3.h	FUNCTION_80	CALL_3
0x4002483	      0xbbfeffffff	                     mov ebx, 0xfffffffe	       625	cache-tree.c	FUNCTION_19	IF_4	IF_5
0x4002488	      0xe90affffff	                           jmp 0x4002397	       625	cache-tree.c	FUNCTION_19	IF_4	IF_5
0x400248d	      0xbbffffffff	                     mov ebx, 0xffffffff	       613	cache-tree.c	FUNCTION_19	IF_1
0x4002492	      0xe900ffffff	                           jmp 0x4002397	       613	cache-tree.c	FUNCTION_19	IF_1
0x4002497	      0xbbfdffffff	                     mov ebx, 0xfffffffd	       641	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x400249c	      0xe9f6feffff	                           jmp 0x4002397	       641	cache-tree.c	FUNCTION_19	IF_6	IF_7
0x40024a1	      0xe800000000	                          call 0x40024a6	       657	cache-tree.c	FUNCTION_20
prime_cache_tree_rec	CALL,9:FOR,0:WHILE,1:DO,0:IF,2:functions,0:ELSE,1:SWITCH,0	75
0x4000920	            0x4155	                                push r13	       660	cache-tree.c	FUNCTION_21
0x4000922	            0x4154	                                push r12	       660	cache-tree.c	FUNCTION_21
0x4000924	              0x55	                                push rbp	       660	cache-tree.c	FUNCTION_21
0x4000925	              0x53	                                push rbx	       660	cache-tree.c	FUNCTION_21
0x4000926	          0x4889fd	                            mov rbp, rdi	       660	cache-tree.c	FUNCTION_21
0x4000929	            0x31db	                            xor ebx, ebx	       667	cache-tree.c	FUNCTION_21
0x400092b	        0x4883ec58	                           sub rsp, 0x58	       660	cache-tree.c	FUNCTION_21
0x400092f	        0x488b4e04	                mov rcx, qword [rsi + 4]	        53	string3.h	FUNCTION_80	CALL_3
0x4000933	    0x64488b042528	                mov rax, qword fs:[0x28]	       660	cache-tree.c	FUNCTION_21
0x400093c	      0x4889442448	             mov qword [rsp + 0x48], rax	       660	cache-tree.c	FUNCTION_21
0x4000941	            0x31c0	                            xor eax, eax	       660	cache-tree.c	FUNCTION_21
0x4000943	        0x48894f04	                mov qword [rdi + 4], rcx	        53	string3.h	FUNCTION_80	CALL_3
0x4000947	        0x488b4e0c	              mov rcx, qword [rsi + 0xc]	        53	string3.h	FUNCTION_80	CALL_3
0x400094b	        0x48894f0c	              mov qword [rdi + 0xc], rcx	        53	string3.h	FUNCTION_80	CALL_3
0x400094f	          0x8b5614	            mov edx, dword [rsi + 0x14] 	        53	string3.h	FUNCTION_80	CALL_3
0x4000952	          0x895714	             mov dword [rdi + 0x14], edx	        53	string3.h	FUNCTION_80	CALL_3
0x4000955	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4000959	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       666	cache-tree.c	FUNCTION_21	CALL_2
0x400095e	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4000962	      0xe800000000	                          call 0x4000967	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4000967	    0x660f1f840000	                    nop word [rax + rax]	       666	cache-tree.c	FUNCTION_21	CALL_2
0x4000970	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000975	          0x4889e6	                            mov rsi, rsp	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000978	      0xe800000000	                          call 0x400097d	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x400097d	            0x85c0	                           test eax, eax	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x400097f	     0xf8483000000	                            je 0x4000a08	       668	cache-tree.c	FUNCTION_21	WHILE_1	CALL_3
0x4000985	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4000989	      0x2500f00000	                         and eax, 0xf000	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x400098e	      0x3d00400000	                         cmp eax, 0x4000	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4000993	            0x740b	                            je 0x40009a0	       669	cache-tree.c	FUNCTION_21	WHILE_1	IF_1	CALL_4
0x4000995	          0x83c301	                              add ebx, 1	       670	cache-tree.c	FUNCTION_21	WHILE_1	IF_1
0x4000998	            0xebd6	                           jmp 0x4000970	       670	cache-tree.c	FUNCTION_21	WHILE_1	IF_1
0x400099a	    0x660f1f440000	                    nop word [rax + rax]	       670	cache-tree.c	FUNCTION_21	WHILE_1	IF_1
0x40009a0	        0x488b3c24	                    mov rdi, qword [rsp]	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x40009a4	      0xe800000000	                          call 0x40009a9	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x40009a9	          0xf60001	                      test byte [rax], 1	       674	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	IF_2
0x40009ac	          0x4989c4	                            mov r12, rax	       673	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_5
0x40009af	            0x747f	                            je 0x4000a30	       674	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	IF_2
0x40009b1	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	       676	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_7
0x40009b6	          0x4c89ef	                            mov rdi, r13	        95	cache-tree.c	FUNCTION_6	CALL_1
0x40009b9	      0xe800000000	                          call 0x40009be	        95	cache-tree.c	FUNCTION_6	CALL_1
0x40009be	      0xb901000000	                              mov ecx, 1	        96	cache-tree.c	FUNCTION_6	CALL_2
0x40009c3	            0x89c2	                            mov edx, eax	        96	cache-tree.c	FUNCTION_6	CALL_2
0x40009c5	          0x4c89ee	                            mov rsi, r13	        96	cache-tree.c	FUNCTION_6	CALL_2
0x40009c8	          0x4889ef	                            mov rdi, rbp	        96	cache-tree.c	FUNCTION_6	CALL_2
0x40009cb	      0xe840fdffff	                   call sym.find_subtree	        96	cache-tree.c	FUNCTION_6	CALL_2
0x40009d0	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40009d5	          0x4989c5	                            mov r13, rax	        96	cache-tree.c	FUNCTION_6	CALL_2
0x40009d8	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40009dd	      0xe800000000	                          call 0x40009e2	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40009e2	          0x4c89e6	                            mov rsi, r12	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x40009e5	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x40009eb	          0x4889c7	                            mov rdi, rax	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x40009ee	        0x49894500	                    mov qword [r13], rax	       677	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_8
0x40009f2	      0xe829ffffff	           call sym.prime_cache_tree_rec	       678	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1	CALL_9
0x40009f7	        0x498b4500	                    mov rax, qword [r13]	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x40009fb	             0x318	                    add ebx, dword [rax]	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x40009fd	      0xe96effffff	                           jmp 0x4000970	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000a02	    0x660f1f440000	                    nop word [rax + rax]	       679	cache-tree.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000a08	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       683	cache-tree.c	FUNCTION_21
0x4000a0d	    0x644833042528	                xor rax, qword fs:[0x28]	       683	cache-tree.c	FUNCTION_21
0x4000a16	          0x895d00	                    mov dword [rbp], ebx	       682	cache-tree.c	FUNCTION_21
0x4000a19	            0x7524	                           jne 0x4000a3f	       683	cache-tree.c	FUNCTION_21
0x4000a1b	        0x4883c458	                           add rsp, 0x58	       683	cache-tree.c	FUNCTION_21
0x4000a1f	              0x5b	                                 pop rbx	       683	cache-tree.c	FUNCTION_21
0x4000a20	              0x5d	                                 pop rbp	       683	cache-tree.c	FUNCTION_21
0x4000a21	            0x415c	                                 pop r12	       683	cache-tree.c	FUNCTION_21
0x4000a23	            0x415d	                                 pop r13	       683	cache-tree.c	FUNCTION_21
0x4000a25	              0xc3	                                     ret	       683	cache-tree.c	FUNCTION_21
0x4000a26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       683	cache-tree.c	FUNCTION_21
0x4000a30	            0x31f6	                            xor esi, esi	        22	tree.h	FUNCTION_92	CALL_1
0x4000a32	          0x4889c7	                            mov rdi, rax	        22	tree.h	FUNCTION_92	CALL_1
0x4000a35	      0xe800000000	                          call 0x4000a3a	        22	tree.h	FUNCTION_92	CALL_1
0x4000a3a	      0xe972ffffff	                           jmp 0x40009b1	        22	tree.h	FUNCTION_92	CALL_1
0x4000a3f	      0xe800000000	                          call 0x4000a44	       683	cache-tree.c	FUNCTION_21
update_main_cache_tree	CALL,2:FOR,0:WHILE,0:DO,0:IF,1:functions,0:ELSE,0:SWITCH,0	18
0x4002620	    0x48833d000000	               cmp qword [0x04002628], 0	       727	cache-tree.c	FUNCTION_25	IF_1
0x4002628	              0x53	                                push rbx	       726	cache-tree.c	FUNCTION_25
0x4002629	            0x89fb	                            mov ebx, edi	       726	cache-tree.c	FUNCTION_25
0x400262b	            0x7413	                            je 0x4002640	       727	cache-tree.c	FUNCTION_25	IF_1
0x400262d	            0x89de	                            mov esi, ebx	       729	cache-tree.c	FUNCTION_25	CALL_2
0x400262f	      0xbf00000000	                              mov edi, 0	       729	cache-tree.c	FUNCTION_25	CALL_2
0x4002634	              0x5b	                                 pop rbx	       730	cache-tree.c	FUNCTION_25
0x4002635	      0xe906f8ffff	               jmp sym.cache_tree_update	       729	cache-tree.c	FUNCTION_25	CALL_2
0x400263a	    0x660f1f440000	                    nop word [rax + rax]	       729	cache-tree.c	FUNCTION_25	CALL_2
0x4002640	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4002645	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x400264a	      0xe800000000	                          call 0x400264f	        13	cache-tree.c	FUNCTION_1	CALL_1
0x400264f	            0x89de	                            mov esi, ebx	       729	cache-tree.c	FUNCTION_25	CALL_2
0x4002651	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x4002657	      0xbf00000000	                              mov edi, 0	       729	cache-tree.c	FUNCTION_25	CALL_2
0x400265c	              0x5b	                                 pop rbx	       730	cache-tree.c	FUNCTION_25
0x400265d	    0x488905000000	            mov qword [0x04002664], rax 	       728	cache-tree.c	FUNCTION_25	CALL_1
0x4002664	      0xe9d7f7ffff	               jmp sym.cache_tree_update	       729	cache-tree.c	FUNCTION_25	CALL_2
cache_tree_invalidate_path	CALL,1:FOR,0:WHILE,0:DO,0:IF,1:functions,0:ELSE,0:SWITCH,0	9
0x4001de0	              0x53	                                push rbx	       146	cache-tree.c	FUNCTION_8
0x4001de1	          0x4889fb	                            mov rbx, rdi	       146	cache-tree.c	FUNCTION_8
0x4001de4	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4001de8	      0xe843f3ffff	             call sym.do_invalidate_path	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4001ded	            0x85c0	                           test eax, eax	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4001def	            0x7404	                            je 0x4001df5	       147	cache-tree.c	FUNCTION_8	IF_1	CALL_1
0x4001df1	        0x834b1420	             or dword [rbx + 0x14], 0x20	       148	cache-tree.c	FUNCTION_8	IF_1
0x4001df5	              0x5b	                                 pop rbx	       149	cache-tree.c	FUNCTION_8
0x4001df6	              0xc3	                                     ret	       149	cache-tree.c	FUNCTION_8
cache_tree_read	CALL,1:FOR,0:WHILE,0:DO,0:IF,1:functions,0:ELSE,0:SWITCH,0	11
0x40020a0	        0x4883ec18	                           sub rsp, 0x18	       572	cache-tree.c	FUNCTION_17
0x40020a4	            0x31c0	                            xor eax, eax	       572	cache-tree.c	FUNCTION_17
0x40020a6	      0x48897c2408	                mov qword [rsp + 8], rdi	       572	cache-tree.c	FUNCTION_17
0x40020ab	        0x48893424	                    mov qword [rsp], rsi	       572	cache-tree.c	FUNCTION_17
0x40020af	          0x803f00	                       cmp byte [rdi], 0	       573	cache-tree.c	FUNCTION_17	IF_1
0x40020b2	            0x750d	                           jne 0x40020c1	       573	cache-tree.c	FUNCTION_17	IF_1
0x40020b4	      0x488d7c2408	                      lea rdi, [rsp + 8]	       575	cache-tree.c	FUNCTION_17	CALL_1
0x40020b9	          0x4889e6	                            mov rsi, rsp	       575	cache-tree.c	FUNCTION_17	CALL_1
0x40020bc	      0xe87ffaffff	                       call sym.read_one	       575	cache-tree.c	FUNCTION_17	CALL_1
0x40020c1	        0x4883c418	                           add rsp, 0x18	       576	cache-tree.c	FUNCTION_17
0x40020c5	              0xc3	                                     ret	       576	cache-tree.c	FUNCTION_17
read_one	CALL,10:FOR,1:WHILE,2:DO,0:IF,9:functions,0:ELSE,1:SWITCH,0	162
0x4001b40	            0x4157	                                push r15	       488	cache-tree.c	FUNCTION_16
0x4001b42	            0x4156	                                push r14	       488	cache-tree.c	FUNCTION_16
0x4001b44	            0x4155	                                push r13	       488	cache-tree.c	FUNCTION_16
0x4001b46	            0x4154	                                push r12	       488	cache-tree.c	FUNCTION_16
0x4001b48	              0x55	                                push rbp	       488	cache-tree.c	FUNCTION_16
0x4001b49	              0x53	                                push rbx	       488	cache-tree.c	FUNCTION_16
0x4001b4a	        0x4883ec48	                           sub rsp, 0x48	       488	cache-tree.c	FUNCTION_16
0x4001b4e	          0x488b06	                    mov rax, qword [rsi]	       490	cache-tree.c	FUNCTION_16
0x4001b51	          0x488b17	                    mov rdx, qword [rdi]	       489	cache-tree.c	FUNCTION_16
0x4001b54	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       488	cache-tree.c	FUNCTION_16
0x4001b5d	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       488	cache-tree.c	FUNCTION_16
0x4001b62	            0x31c9	                            xor ecx, ecx	       488	cache-tree.c	FUNCTION_16
0x4001b64	    0x488b0d000000	            mov rcx, qword [0x04001b6b] 	       495	cache-tree.c	FUNCTION_16
0x4001b6b	      0x48897c2408	                mov qword [rsp + 8], rdi	       488	cache-tree.c	FUNCTION_16
0x4001b70	          0x4885c0	                           test rax, rax	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001b73	      0x4889542418	             mov qword [rsp + 0x18], rdx	       489	cache-tree.c	FUNCTION_16
0x4001b78	      0x4889442420	             mov qword [rsp + 0x20], rax	       490	cache-tree.c	FUNCTION_16
0x4001b7d	    0x48c744243000	               mov qword [rsp + 0x30], 0	       497	cache-tree.c	FUNCTION_16
0x4001b86	        0x488b4958	            mov rcx, qword [rcx + 0x58] 	       495	cache-tree.c	FUNCTION_16
0x4001b8a	        0x488b5910	            mov rbx, qword [rcx + 0x10] 	       495	cache-tree.c	FUNCTION_16
0x4001b8e	            0x742c	                            je 0x4001bbc	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001b90	          0x803a00	                       cmp byte [rdx], 0	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001b93	          0x4989f4	                            mov r12, rsi	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001b96	            0x7453	                            je 0x4001beb	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001b98	        0x4883e801	                              sub rax, 1	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001b9c	            0xeb0b	                           jmp 0x4001ba9	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001b9e	            0x6690	                                     nop	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001ba0	        0x4883e801	                              sub rax, 1	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001ba4	          0x803a00	                       cmp byte [rdx], 0	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001ba7	            0x7447	                            je 0x4001bf0	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001ba9	        0x4883c201	                              add rdx, 1	       501	cache-tree.c	FUNCTION_16	WHILE_1
0x4001bad	          0x4885c0	                           test rax, rax	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001bb0	      0x4889442420	             mov qword [rsp + 0x20], rax	       500	cache-tree.c	FUNCTION_16	WHILE_1
0x4001bb5	      0x4889542418	             mov qword [rsp + 0x18], rdx	       501	cache-tree.c	FUNCTION_16	WHILE_1
0x4001bba	            0x75e4	                           jne 0x4001ba0	       499	cache-tree.c	FUNCTION_16	WHILE_1
0x4001bbc	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       567	cache-tree.c	FUNCTION_16	CALL_10
0x4001bc1	      0xe800000000	                          call 0x4001bc6	       567	cache-tree.c	FUNCTION_16	CALL_10
0x4001bc6	            0x31c0	                            xor eax, eax	       568	cache-tree.c	FUNCTION_16
0x4001bc8	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       569	cache-tree.c	FUNCTION_16
0x4001bcd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       569	cache-tree.c	FUNCTION_16
0x4001bd6	     0xf85ba010000	                           jne 0x4001d96	       569	cache-tree.c	FUNCTION_16
0x4001bdc	        0x4883c448	                           add rsp, 0x48	       569	cache-tree.c	FUNCTION_16
0x4001be0	              0x5b	                                 pop rbx	       569	cache-tree.c	FUNCTION_16
0x4001be1	              0x5d	                                 pop rbp	       569	cache-tree.c	FUNCTION_16
0x4001be2	            0x415c	                                 pop r12	       569	cache-tree.c	FUNCTION_16
0x4001be4	            0x415d	                                 pop r13	       569	cache-tree.c	FUNCTION_16
0x4001be6	            0x415e	                                 pop r14	       569	cache-tree.c	FUNCTION_16
0x4001be8	            0x415f	                                 pop r15	       569	cache-tree.c	FUNCTION_16
0x4001bea	              0xc3	                                     ret	       569	cache-tree.c	FUNCTION_16
0x4001beb	        0x4883e801	                              sub rax, 1	       569	cache-tree.c	FUNCTION_16
0x4001bef	              0x90	                                     nop	       569	cache-tree.c	FUNCTION_16
0x4001bf0	        0x4883c201	                              add rdx, 1	       505	cache-tree.c	FUNCTION_16
0x4001bf4	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4001bf9	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4001bfe	      0x4889542418	             mov qword [rsp + 0x18], rdx	       505	cache-tree.c	FUNCTION_16
0x4001c03	      0x4889442420	             mov qword [rsp + 0x20], rax	       505	cache-tree.c	FUNCTION_16
0x4001c08	      0xe800000000	                          call 0x4001c0d	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4001c0d	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       508	cache-tree.c	FUNCTION_16
0x4001c12	      0x488d742428	                   lea rsi, [rsp + 0x28]	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4001c17	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x4001c1d	      0xba0a000000	                            mov edx, 0xa	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4001c22	          0x4989c5	                            mov r13, rax	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4001c25	      0x4889442430	             mov qword [rsp + 0x30], rax	       506	cache-tree.c	FUNCTION_16	CALL_1
0x4001c2a	          0x4c89ff	                            mov rdi, r15	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4001c2d	      0xe800000000	                          call 0x4001c32	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4001c32	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	       510	cache-tree.c	FUNCTION_16	IF_2
0x4001c37	        0x41894500	                    mov dword [r13], eax	       509	cache-tree.c	FUNCTION_16	CALL_2
0x4001c3b	          0x4d39f7	                            cmp r15, r14	       510	cache-tree.c	FUNCTION_16	IF_2
0x4001c3e	     0xf8478ffffff	                            je 0x4001bbc	       510	cache-tree.c	FUNCTION_16	IF_2
0x4001c44	      0x488d742428	                   lea rsi, [rsp + 0x28]	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4001c49	      0xba0a000000	                            mov edx, 0xa	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4001c4e	          0x4c89f7	                            mov rdi, r14	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4001c51	      0xe800000000	                          call 0x4001c56	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4001c56	      0x4c3b742428	            cmp r14, qword [rsp + 0x28] 	       514	cache-tree.c	FUNCTION_16	IF_3
0x4001c5b	          0x4989c5	                            mov r13, rax	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4001c5e	     0xf8458ffffff	                            je 0x4001bbc	       514	cache-tree.c	FUNCTION_16	IF_3
0x4001c64	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c69	          0x4885c0	                           test rax, rax	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c6c	     0xf844affffff	                            je 0x4001bbc	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c72	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c77	           0xfb616	                   movzx edx, byte [rsi]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c7a	            0x84d2	                             test dl, dl	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c7c	            0x743a	                            je 0x4001cb8	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c7e	          0x80fa0a	                             cmp dl, 0xa	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c81	            0x7435	                            je 0x4001cb8	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c83	        0x4883e801	                              sub rax, 1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c87	            0xeb17	                           jmp 0x4001ca0	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c89	     0xf1f80000000	                         nop dword [rax]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c90	           0xfb616	                   movzx edx, byte [rsi]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c93	        0x4883e801	                              sub rax, 1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c97	            0x84d2	                             test dl, dl	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c99	            0x7425	                            je 0x4001cc0	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c9b	          0x80fa0a	                             cmp dl, 0xa	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001c9e	            0x7420	                            je 0x4001cc0	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001ca0	        0x4883c601	                              add rsi, 1	       518	cache-tree.c	FUNCTION_16	WHILE_2
0x4001ca4	          0x4885c0	                           test rax, rax	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001ca7	      0x4889442420	             mov qword [rsp + 0x20], rax	       517	cache-tree.c	FUNCTION_16	WHILE_2
0x4001cac	      0x4889742418	             mov qword [rsp + 0x18], rsi	       518	cache-tree.c	FUNCTION_16	WHILE_2
0x4001cb1	            0x75dd	                           jne 0x4001c90	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001cb3	      0xe904ffffff	                           jmp 0x4001bbc	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001cb8	        0x4883e801	                              sub rax, 1	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001cbc	         0xf1f4000	                         nop dword [rax]	       516	cache-tree.c	FUNCTION_16	WHILE_2
0x4001cc0	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	       523	cache-tree.c	FUNCTION_16	IF_5
0x4001cc5	        0x4883c601	                              add rsi, 1	       522	cache-tree.c	FUNCTION_16
0x4001cc9	      0x4889442420	             mov qword [rsp + 0x20], rax	       522	cache-tree.c	FUNCTION_16
0x4001cce	      0x4889742418	             mov qword [rsp + 0x18], rsi	       522	cache-tree.c	FUNCTION_16
0x4001cd3	          0x418b16	                    mov edx, dword [r14]	       523	cache-tree.c	FUNCTION_16	IF_5
0x4001cd6	            0x85d2	                           test edx, edx	       523	cache-tree.c	FUNCTION_16	IF_5
0x4001cd8	            0x7826	                            js 0x4001d00	       523	cache-tree.c	FUNCTION_16	IF_5
0x4001cda	            0x89db	                            mov ebx, ebx	       523	cache-tree.c	FUNCTION_16	IF_5
0x4001cdc	          0x4839d8	                            cmp rax, rbx	       524	cache-tree.c	FUNCTION_16	IF_5	IF_6
0x4001cdf	     0xf82d7feffff	                            jb 0x4001bbc	       524	cache-tree.c	FUNCTION_16	IF_5	IF_6
0x4001ce5	        0x498d7e04	                      lea rdi, [r14 + 4]	        53	string3.h	FUNCTION_80	CALL_3
0x4001ce9	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_80	CALL_3
0x4001cec	      0xe800000000	                          call 0x4001cf1	        53	string3.h	FUNCTION_80	CALL_3
0x4001cf1	      0x48015c2418	            add qword [rsp + 0x18], rbx 	       527	cache-tree.c	FUNCTION_16	IF_5
0x4001cf6	      0x48295c2420	             sub qword [rsp + 0x20], rbx	       528	cache-tree.c	FUNCTION_16	IF_5
0x4001cfb	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	       528	cache-tree.c	FUNCTION_16	IF_5
0x4001d00	        0x418d7d02	                      lea edi, [r13 + 2]	       546	cache-tree.c	FUNCTION_16
0x4001d04	      0xbe08000000	                              mov esi, 8	       547	cache-tree.c	FUNCTION_16	CALL_6
0x4001d09	            0x31db	                            xor ebx, ebx	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4001d0b	          0x4589ef	                          mov r15d, r13d	       513	cache-tree.c	FUNCTION_16	CALL_3
0x4001d0e	        0x41897e1c	             mov dword [r14 + 0x1c], edi	       546	cache-tree.c	FUNCTION_16
0x4001d12	          0x4863ff	                         movsxd rdi, edi	       547	cache-tree.c	FUNCTION_16	CALL_6
0x4001d15	      0xe800000000	                          call 0x4001d1a	       547	cache-tree.c	FUNCTION_16	CALL_6
0x4001d1a	          0x4585ed	                         test r13d, r13d	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4001d1d	        0x49894620	             mov qword [r14 + 0x20], rax	       547	cache-tree.c	FUNCTION_16	CALL_6
0x4001d21	            0x7f2c	                            jg 0x4001d4f	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4001d23	            0xeb4b	                           jmp 0x4001d70	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4001d25	           0xf1f00	                         nop dword [rax]	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4001d28	          0x4c89f7	                            mov rdi, r14	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4001d2b	          0x83c301	                              add ebx, 1	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4001d2e	      0xe800000000	                          call 0x4001d33	        95	cache-tree.c	FUNCTION_6	CALL_1
0x4001d33	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4001d38	      0xb901000000	                              mov ecx, 1	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4001d3d	            0x89c2	                            mov edx, eax	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4001d3f	          0x4c89f6	                            mov rsi, r14	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4001d42	      0xe8c9e9ffff	                   call sym.find_subtree	        96	cache-tree.c	FUNCTION_6	CALL_2
0x4001d47	          0x4139df	                           cmp r15d, ebx	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4001d4a	          0x488928	                    mov qword [rax], rbp	       558	cache-tree.c	FUNCTION_16	FOR_1
0x4001d4d	            0x7421	                            je 0x4001d70	       548	cache-tree.c	FUNCTION_16	FOR_1
0x4001d4f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_7
0x4001d54	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_7
0x4001d59	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       552	cache-tree.c	FUNCTION_16	FOR_1
0x4001d5e	      0xe8ddfdffff	                       call sym.read_one	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_7
0x4001d63	          0x4885c0	                           test rax, rax	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4001d66	          0x4889c5	                            mov rbp, rax	       554	cache-tree.c	FUNCTION_16	FOR_1	CALL_7
0x4001d69	            0x75bd	                           jne 0x4001d28	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4001d6b	      0xe94cfeffff	                           jmp 0x4001bbc	       555	cache-tree.c	FUNCTION_16	FOR_1	IF_8
0x4001d70	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       560	cache-tree.c	FUNCTION_16	IF_9
0x4001d75	        0x443b6818	           cmp r13d, dword [rax + 0x18] 	       560	cache-tree.c	FUNCTION_16	IF_9
0x4001d79	            0x7520	                           jne 0x4001d9b	       560	cache-tree.c	FUNCTION_16	IF_9
0x4001d7b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       562	cache-tree.c	FUNCTION_16
0x4001d80	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       562	cache-tree.c	FUNCTION_16
0x4001d85	          0x488911	                    mov qword [rcx], rdx	       562	cache-tree.c	FUNCTION_16
0x4001d88	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       563	cache-tree.c	FUNCTION_16
0x4001d8d	        0x49891424	                    mov qword [r12], rdx	       563	cache-tree.c	FUNCTION_16
0x4001d91	      0xe932feffff	                           jmp 0x4001bc8	       564	cache-tree.c	FUNCTION_16
0x4001d96	      0xe800000000	                          call 0x4001d9b	       569	cache-tree.c	FUNCTION_16
0x4001d9b	      0xbf00000000	                              mov edi, 0	       561	cache-tree.c	FUNCTION_16	CALL_9
0x4001da0	            0x31c0	                            xor eax, eax	       561	cache-tree.c	FUNCTION_16	CALL_9
0x4001da2	      0xe800000000	                          call 0x4001da7	       561	cache-tree.c	FUNCTION_16	CALL_9
do_invalidate_path	CALL,5:FOR,0:WHILE,0:DO,0:IF,4:functions,0:ELSE,0:SWITCH,0	160
0x4001130	            0x4157	                                push r15	       100	cache-tree.c	FUNCTION_7
0x4001132	            0x4156	                                push r14	       100	cache-tree.c	FUNCTION_7
0x4001134	            0x4155	                                push r13	       100	cache-tree.c	FUNCTION_7
0x4001136	            0x4154	                                push r12	       100	cache-tree.c	FUNCTION_7
0x4001138	              0x55	                                push rbp	       100	cache-tree.c	FUNCTION_7
0x4001139	              0x53	                                push rbx	       100	cache-tree.c	FUNCTION_7
0x400113a	        0x4883ec18	                           sub rsp, 0x18	       100	cache-tree.c	FUNCTION_7
0x400113e	          0x4885ff	                           test rdi, rdi	       116	cache-tree.c	FUNCTION_7	IF_1
0x4001141	     0xf8419020000	                            je 0x4001360	       116	cache-tree.c	FUNCTION_7	IF_1
0x4001147	          0x4889f5	                            mov rbp, rsi	       116	cache-tree.c	FUNCTION_7	IF_1
0x400114a	          0x4989fd	                            mov r13, rdi	       116	cache-tree.c	FUNCTION_7	IF_1
0x400114d	      0xbe2f000000	                           mov esi, 0x2f	       118	cache-tree.c	FUNCTION_7
0x4001152	          0x4889ef	                            mov rdi, rbp	       118	cache-tree.c	FUNCTION_7
0x4001155	      0xe800000000	                          call 0x400115a	       118	cache-tree.c	FUNCTION_7
0x400115a	          0x4189c6	                           mov r14d, eax	       119	cache-tree.c	FUNCTION_7
0x400115d	    0x41c74500ffff	            mov dword [r13], 0xffffffff 	       120	cache-tree.c	FUNCTION_7
0x4001165	      0x4889442408	                mov qword [rsp + 8], rax	       118	cache-tree.c	FUNCTION_7
0x400116a	          0x4129ee	                           sub r14d, ebp	       119	cache-tree.c	FUNCTION_7
0x400116d	          0x803800	                       cmp byte [rax], 0	       121	cache-tree.c	FUNCTION_7	IF_2
0x4001170	     0xf85ba000000	                           jne 0x4001230	       121	cache-tree.c	FUNCTION_7	IF_2
0x4001176	        0x458b4518	            mov r8d, dword [r13 + 0x18] 	       121	cache-tree.c	FUNCTION_7	IF_2
0x400117a	          0x4531ff	                          xor r15d, r15d	        49	cache-tree.c	FUNCTION_4
0x400117d	          0x4963c6	                        movsxd rax, r14d	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4001180	        0x4d8b6520	            mov r12, qword [r13 + 0x20] 	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4001184	      0x4889442408	                mov qword [rsp + 8], rax	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4001189	          0x4539c7	                           cmp r15d, r8d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400118c	            0x7d3a	                           jge 0x40011c8	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400118e	            0x6690	                                     nop	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001190	          0x4489c0	                            mov eax, r8d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4001193	          0x4429f8	                           sub eax, r15d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4001196	            0x89c3	                            mov ebx, eax	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4001198	          0xc1eb1f	                           shr ebx, 0x1f	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400119b	             0x1d8	                            add eax, ebx	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400119d	            0xd1f8	                              sar eax, 1	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400119f	        0x428d1c38	                    lea ebx, [rax + r15]	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40011a3	          0x4863c3	                         movsxd rax, ebx	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x40011a6	        0x498b34c4	            mov rsi, qword [r12 + rax*8]	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x40011aa	        0x443b760c	            cmp r14d, dword [rsi + 0xc] 	        38	cache-tree.c	FUNCTION_3	IF_1
0x40011ae	     0xf8c53010000	                            jl 0x4001307	        38	cache-tree.c	FUNCTION_3	IF_1
0x40011b4	     0xf8e26010000	                           jle 0x40012e0	        40	cache-tree.c	FUNCTION_3	IF_2
0x40011ba	        0x448d7b01	                     lea r15d, [rbx + 1]	        61	cache-tree.c	FUNCTION_4	WHILE_1	ELSE_1
0x40011be	          0x4539c7	                           cmp r15d, r8d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40011c1	            0x7ccd	                            jl 0x4001190	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40011c3	       0xf1f440000	                   nop dword [rax + rax]	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40011c8	          0x4489fb	                           mov ebx, r15d	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x40011cb	            0xf7d3	                                 not ebx	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x40011cd	            0x85db	                           test ebx, ebx	       124	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40011cf	     0xf887b010000	                            js 0x4001350	       124	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40011d5	          0x4c63f3	                         movsxd r14, ebx	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x40011d8	        0x4b8b3cf4	            mov rdi, qword [r12 + r14*8]	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x40011dc	    0x4a8d2cf50000	                        lea rbp, [r14*8]	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x40011e4	      0xe800000000	                          call 0x40011e9	       125	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_2
0x40011e9	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x40011ed	        0x4a8b3cf0	            mov rdi, qword [rax + r14*8]	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x40011f1	      0xe800000000	                          call 0x40011f6	       126	cache-tree.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x40011f6	        0x418b4518	            mov eax, dword [r13 + 0x18] 	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40011fa	            0x89c2	                            mov edx, eax	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40011fc	            0x29da	                            sub edx, ebx	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x40011fe	          0x83ea01	                              sub edx, 1	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4001201	          0x4863d2	                         movsxd rdx, edx	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4001204	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_110	IF_1
0x4001207	     0xf8513010000	                           jne 0x4001320	       861	git-compat-util.h	FUNCTION_110	IF_1
0x400120d	          0x83e801	                              sub eax, 1	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4001210	      0xbd01000000	                              mov ebp, 1	       137	cache-tree.c	FUNCTION_7	IF_2
0x4001215	        0x41894518	             mov dword [r13 + 0x18], eax	       135	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4001219	        0x4883c418	                           add rsp, 0x18	       143	cache-tree.c	FUNCTION_7
0x400121d	            0x89e8	                            mov eax, ebp	       143	cache-tree.c	FUNCTION_7
0x400121f	              0x5b	                                 pop rbx	       143	cache-tree.c	FUNCTION_7
0x4001220	              0x5d	                                 pop rbp	       143	cache-tree.c	FUNCTION_7
0x4001221	            0x415c	                                 pop r12	       143	cache-tree.c	FUNCTION_7
0x4001223	            0x415d	                                 pop r13	       143	cache-tree.c	FUNCTION_7
0x4001225	            0x415e	                                 pop r14	       143	cache-tree.c	FUNCTION_7
0x4001227	            0x415f	                                 pop r15	       143	cache-tree.c	FUNCTION_7
0x4001229	              0xc3	                                     ret	       143	cache-tree.c	FUNCTION_7
0x400122a	    0x660f1f440000	                    nop word [rax + rax]	       143	cache-tree.c	FUNCTION_7
0x4001230	        0x458b6518	           mov r12d, dword [r13 + 0x18] 	       143	cache-tree.c	FUNCTION_7
0x4001234	          0x4531ff	                          xor r15d, r15d	        49	cache-tree.c	FUNCTION_4
0x4001237	          0x4963c6	                        movsxd rax, r14d	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400123a	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400123e	        0x48890424	                    mov qword [rsp], rax	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4001242	          0x4539e7	                          cmp r15d, r12d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001245	            0x7d39	                           jge 0x4001280	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001247	    0x660f1f840000	                    nop word [rax + rax]	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001250	          0x4489e0	                           mov eax, r12d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4001253	          0x4429f8	                           sub eax, r15d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4001256	            0x89c3	                            mov ebx, eax	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4001258	          0xc1eb1f	                           shr ebx, 0x1f	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400125b	             0x1d8	                            add eax, ebx	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400125d	            0xd1f8	                              sar eax, 1	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x400125f	        0x428d1c38	                    lea ebx, [rax + r15]	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x4001263	          0x4863c3	                         movsxd rax, ebx	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x4001266	      0x498b74c500	            mov rsi, qword [r13 + rax*8]	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x400126b	        0x443b760c	            cmp r14d, dword [rsi + 0xc] 	        38	cache-tree.c	FUNCTION_3	IF_1
0x400126f	            0x7c5d	                            jl 0x40012ce	        38	cache-tree.c	FUNCTION_3	IF_1
0x4001271	            0x7e45	                           jle 0x40012b8	        40	cache-tree.c	FUNCTION_3	IF_2
0x4001273	        0x448d7b01	                     lea r15d, [rbx + 1]	        61	cache-tree.c	FUNCTION_4	WHILE_1	ELSE_1
0x4001277	          0x4539e7	                          cmp r15d, r12d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400127a	            0x7cd4	                            jl 0x4001250	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400127c	         0xf1f4000	                         nop dword [rax]	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001280	          0x4489fb	                           mov ebx, r15d	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x4001283	            0xf7d3	                                 not ebx	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x4001285	            0x85db	                           test ebx, ebx	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4001287	      0xbd01000000	                              mov ebp, 1	       137	cache-tree.c	FUNCTION_7	IF_2
0x400128c	            0x788b	                            js 0x4001219	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x400128e	          0x4863db	                         movsxd rbx, ebx	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4001291	      0x498b44dd00	            mov rax, qword [r13 + rbx*8]	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4001296	          0x4885c0	                           test rax, rax	       140	cache-tree.c	FUNCTION_7	IF_4
0x4001299	     0xf847affffff	                            je 0x4001219	       140	cache-tree.c	FUNCTION_7	IF_4
0x400129f	      0x488b742408	                mov rsi, qword [rsp + 8]	       141	cache-tree.c	FUNCTION_7	CALL_5
0x40012a4	          0x488b38	                    mov rdi, qword [rax]	       141	cache-tree.c	FUNCTION_7	CALL_5
0x40012a7	        0x4883c601	                              add rsi, 1	       141	cache-tree.c	FUNCTION_7	CALL_5
0x40012ab	      0xe880feffff	             call sym.do_invalidate_path	       141	cache-tree.c	FUNCTION_7	CALL_5
0x40012b0	      0xe964ffffff	                           jmp 0x4001219	       141	cache-tree.c	FUNCTION_7	CALL_5
0x40012b5	           0xf1f00	                         nop dword [rax]	       141	cache-tree.c	FUNCTION_7	CALL_5
0x40012b8	        0x488b1424	                    mov rdx, qword [rsp]	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012bc	        0x4883c614	                           add rsi, 0x14	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012c0	          0x4889ef	                            mov rdi, rbp	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012c3	      0xe800000000	                          call 0x40012c8	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012c8	            0x85c0	                           test eax, eax	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x40012ca	            0x74b9	                            je 0x4001285	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x40012cc	            0x79a5	                           jns 0x4001273	        58	cache-tree.c	FUNCTION_4	WHILE_1	IF_2
0x40012ce	          0x4439fb	                           cmp ebx, r15d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40012d1	          0x4189dc	                           mov r12d, ebx	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40012d4	     0xf8f76ffffff	                            jg 0x4001250	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40012da	            0xeba4	                           jmp 0x4001280	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40012dc	         0xf1f4000	                         nop dword [rax]	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40012e0	      0x488b542408	                mov rdx, qword [rsp + 8]	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012e5	        0x4883c614	                           add rsi, 0x14	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012e9	          0x4889ef	                            mov rdi, rbp	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012ec	        0x44890424	                    mov dword [rsp], r8d	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012f0	      0xe800000000	                          call 0x40012f5	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40012f5	            0x85c0	                           test eax, eax	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x40012f7	     0xf84d0feffff	                            je 0x40011cd	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x40012fd	        0x448b0424	                    mov r8d, dword [rsp]	        58	cache-tree.c	FUNCTION_4	WHILE_1	IF_2
0x4001301	     0xf89b3feffff	                           jns 0x40011ba	        58	cache-tree.c	FUNCTION_4	WHILE_1	IF_2
0x4001307	          0x4439fb	                           cmp ebx, r15d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400130a	          0x4189d8	                            mov r8d, ebx	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400130d	     0xf8f7dfeffff	                            jg 0x4001190	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001313	      0xe9b0feffff	                           jmp 0x40011c8	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001318	     0xf1f84000000	                   nop dword [rax + rax]	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001320	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_107	IF_1
0x400132a	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_107	IF_1
0x400132d	            0x7738	                            ja 0x4001367	       795	git-compat-util.h	FUNCTION_107	IF_1
0x400132f	        0x498b7d20	            mov rdi, qword [r13 + 0x20] 	       133	cache-tree.c	FUNCTION_7	IF_2	IF_3
0x4001333	        0x48c1e203	                              shl rdx, 3	        59	string3.h	FUNCTION_81	CALL_3
0x4001337	      0x488d742f08	                lea rsi, [rdi + rbp + 8]	        59	string3.h	FUNCTION_81	CALL_3
0x400133c	          0x4801ef	                            add rdi, rbp	        59	string3.h	FUNCTION_81	CALL_3
0x400133f	      0xe800000000	                          call 0x4001344	        59	string3.h	FUNCTION_81	CALL_3
0x4001344	        0x418b4518	            mov eax, dword [r13 + 0x18] 	        59	string3.h	FUNCTION_81	CALL_3
0x4001348	      0xe9c0feffff	                           jmp 0x400120d	        59	string3.h	FUNCTION_81	CALL_3
0x400134d	           0xf1f00	                         nop dword [rax]	        59	string3.h	FUNCTION_81	CALL_3
0x4001350	      0xbd01000000	                              mov ebp, 1	       137	cache-tree.c	FUNCTION_7	IF_2
0x4001355	      0xe9bffeffff	                           jmp 0x4001219	       137	cache-tree.c	FUNCTION_7	IF_2
0x400135a	    0x660f1f440000	                    nop word [rax + rax]	       137	cache-tree.c	FUNCTION_7	IF_2
0x4001360	            0x31ed	                            xor ebp, ebp	       117	cache-tree.c	FUNCTION_7	IF_1
0x4001362	      0xe9b2feffff	                           jmp 0x4001219	       117	cache-tree.c	FUNCTION_7	IF_1
0x4001367	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_107	IF_1	CALL_1
0x400136c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_107	IF_1	CALL_1
0x4001371	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_107	IF_1	CALL_1
0x4001373	      0xe800000000	                          call 0x4001378	       796	git-compat-util.h	FUNCTION_107	IF_1	CALL_1
cache_tree_matches_traversal	CALL,3:FOR,0:WHILE,0:DO,0:IF,1:functions,0:ELSE,0:SWITCH,0	65
0x4002560	            0x4156	                                push r14	       715	cache-tree.c	FUNCTION_24
0x4002562	            0x4155	                                push r13	       715	cache-tree.c	FUNCTION_24
0x4002564	            0x4154	                                push r12	       715	cache-tree.c	FUNCTION_24
0x4002566	              0x55	                                push rbp	       715	cache-tree.c	FUNCTION_24
0x4002567	          0x4889f5	                            mov rbp, rsi	       715	cache-tree.c	FUNCTION_24
0x400256a	              0x53	                                push rbx	       715	cache-tree.c	FUNCTION_24
0x400256b	        0x488b5a08	                mov rbx, qword [rdx + 8]	       715	cache-tree.c	FUNCTION_24
0x400256f	          0x4885db	                           test rbx, rbx	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002572	            0x745f	                            je 0x40025d3	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002574	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002578	          0x4989d4	                            mov r12, rdx	       706	cache-tree.c	FUNCTION_23	IF_1
0x400257b	          0x4d85ed	                           test r13, r13	       706	cache-tree.c	FUNCTION_23	IF_1
0x400257e	            0x7446	                            je 0x40025c6	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002580	        0x4d8b7508	                mov r14, qword [r13 + 8]	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002584	          0x4d85f6	                           test r14, r14	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002587	            0x7431	                            je 0x40025ba	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002589	        0x498b4608	                mov rax, qword [r14 + 8]	       706	cache-tree.c	FUNCTION_23	IF_1
0x400258d	          0x4885c0	                           test rax, rax	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002590	            0x741c	                            je 0x40025ae	       706	cache-tree.c	FUNCTION_23	IF_1
0x4002592	        0x488b7008	                mov rsi, qword [rax + 8]	       708	cache-tree.c	FUNCTION_23	CALL_1
0x4002596	        0x488d5018	                   lea rdx, [rax + 0x18]	       708	cache-tree.c	FUNCTION_23	CALL_1
0x400259a	      0xe831e0ffff	call sym.find_cache_tree_from_traversal.isra.2	       708	cache-tree.c	FUNCTION_23	CALL_1
0x400259f	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025a3	          0x4889c7	                            mov rdi, rax	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025a6	      0xe8c5dbffff	                call sym.cache_tree_find	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025ab	          0x4889c7	                            mov rdi, rax	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025ae	        0x498b7518	            mov rsi, qword [r13 + 0x18] 	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025b2	      0xe8b9dbffff	                call sym.cache_tree_find	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025b7	          0x4889c7	                            mov rdi, rax	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025ba	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025be	      0xe8addbffff	                call sym.cache_tree_find	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025c3	          0x4889c7	                            mov rdi, rax	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025c6	      0x498b742418	            mov rsi, qword [r12 + 0x18] 	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025cb	      0xe8a0dbffff	                call sym.cache_tree_find	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025d0	          0x4889c7	                            mov rdi, rax	       709	cache-tree.c	FUNCTION_23	CALL_2
0x40025d3	        0x488b7508	                mov rsi, qword [rbp + 8]	       719	cache-tree.c	FUNCTION_24	CALL_2
0x40025d7	      0xe894dbffff	                call sym.cache_tree_find	       719	cache-tree.c	FUNCTION_24	CALL_2
0x40025dc	          0x4885c0	                           test rax, rax	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x40025df	            0x742f	                            je 0x4002610	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x40025e1	            0x8b18	                    mov ebx, dword [rax]	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x40025e3	            0x85db	                           test ebx, ebx	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x40025e5	            0x7e29	                           jle 0x4002610	       720	cache-tree.c	FUNCTION_24	IF_1	CALL_3
0x40025e7	        0x488b7d00	                    mov rdi, qword [rbp]	       975	cache.h	FUNCTION_60	CALL_1
0x40025eb	        0x488d7004	                      lea rsi, [rax + 4]	       975	cache.h	FUNCTION_60	CALL_1
0x40025ef	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_60	CALL_1
0x40025f4	      0xe800000000	                          call 0x40025f9	       975	cache.h	FUNCTION_60	CALL_1
0x40025f9	            0x85c0	                           test eax, eax	       722	cache-tree.c	FUNCTION_24
0x40025fb	      0xb800000000	                              mov eax, 0	       722	cache-tree.c	FUNCTION_24
0x4002600	           0xf45d8	                         cmovne ebx, eax	       722	cache-tree.c	FUNCTION_24
0x4002603	            0x89d8	                            mov eax, ebx	       723	cache-tree.c	FUNCTION_24
0x4002605	              0x5b	                                 pop rbx	       723	cache-tree.c	FUNCTION_24
0x4002606	              0x5d	                                 pop rbp	       723	cache-tree.c	FUNCTION_24
0x4002607	            0x415c	                                 pop r12	       723	cache-tree.c	FUNCTION_24
0x4002609	            0x415d	                                 pop r13	       723	cache-tree.c	FUNCTION_24
0x400260b	            0x415e	                                 pop r14	       723	cache-tree.c	FUNCTION_24
0x400260d	              0xc3	                                     ret	       723	cache-tree.c	FUNCTION_24
0x400260e	            0x6690	                                     nop	       723	cache-tree.c	FUNCTION_24
0x4002610	            0x31db	                            xor ebx, ebx	       722	cache-tree.c	FUNCTION_24
0x4002612	            0x89d8	                            mov eax, ebx	       723	cache-tree.c	FUNCTION_24
0x4002614	              0x5b	                                 pop rbx	       723	cache-tree.c	FUNCTION_24
0x4002615	              0x5d	                                 pop rbp	       723	cache-tree.c	FUNCTION_24
0x4002616	            0x415c	                                 pop r12	       723	cache-tree.c	FUNCTION_24
0x4002618	            0x415d	                                 pop r13	       723	cache-tree.c	FUNCTION_24
0x400261a	            0x415e	                                 pop r14	       723	cache-tree.c	FUNCTION_24
0x400261c	              0xc3	                                     ret	       723	cache-tree.c	FUNCTION_24
prime_cache_tree	CALL,3:FOR,0:WHILE,0:DO,0:IF,0:functions,0:ELSE,0:SWITCH,0	49
0x40024b0	            0x4155	                                push r13	       686	cache-tree.c	FUNCTION_22
0x40024b2	            0x4154	                                push r12	       686	cache-tree.c	FUNCTION_22
0x40024b4	          0x4989f5	                            mov r13, rsi	       686	cache-tree.c	FUNCTION_22
0x40024b7	              0x55	                                push rbp	       686	cache-tree.c	FUNCTION_22
0x40024b8	              0x53	                                push rbx	       686	cache-tree.c	FUNCTION_22
0x40024b9	          0x4989fc	                            mov r12, rdi	       686	cache-tree.c	FUNCTION_22
0x40024bc	        0x4883ec08	                              sub rsp, 8	       686	cache-tree.c	FUNCTION_22
0x40024c0	        0x488b6f20	            mov rbp, qword [rdi + 0x20] 	        21	cache-tree.c	FUNCTION_2
0x40024c4	          0x4885ed	                           test rbp, rbp	        23	cache-tree.c	FUNCTION_2	IF_1
0x40024c7	            0x745d	                            je 0x4002526	        23	cache-tree.c	FUNCTION_2	IF_1
0x40024c9	          0x8b5518	            mov edx, dword [rbp + 0x18] 	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40024cc	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40024d0	            0x85d2	                           test edx, edx	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40024d2	            0x7e39	                           jle 0x400250d	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40024d4	            0x31db	                            xor ebx, ebx	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40024d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        25	cache-tree.c	FUNCTION_2	FOR_1
0x40024e0	        0x488b3cd9	            mov rdi, qword [rcx + rbx*8]	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40024e4	          0x4885ff	                           test rdi, rdi	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40024e7	            0x7419	                            je 0x4002502	        26	cache-tree.c	FUNCTION_2	FOR_1	IF_2
0x40024e9	      0xe800000000	                          call 0x40024ee	        27	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40024ee	        0x488b4520	            mov rax, qword [rbp + 0x20] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40024f2	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40024f6	      0xe800000000	                          call 0x40024fb	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40024fb	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x40024ff	          0x8b5518	            mov edx, dword [rbp + 0x18] 	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4002502	          0x8d4301	                      lea eax, [rbx + 1]	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4002505	        0x4883c301	                              add rbx, 1	        28	cache-tree.c	FUNCTION_2	FOR_1	IF_2	CALL_2
0x4002509	            0x39d0	                            cmp eax, edx	        25	cache-tree.c	FUNCTION_2	FOR_1
0x400250b	            0x7cd3	                            jl 0x40024e0	        25	cache-tree.c	FUNCTION_2	FOR_1
0x400250d	          0x4889cf	                            mov rdi, rcx	        30	cache-tree.c	FUNCTION_2	CALL_3
0x4002510	      0xe800000000	                          call 0x4002515	        30	cache-tree.c	FUNCTION_2	CALL_3
0x4002515	          0x4889ef	                            mov rdi, rbp	        31	cache-tree.c	FUNCTION_2	CALL_4
0x4002518	      0xe800000000	                          call 0x400251d	        31	cache-tree.c	FUNCTION_2	CALL_4
0x400251d	    0x49c744242000	               mov qword [r12 + 0x20], 0	        32	cache-tree.c	FUNCTION_2
0x4002526	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x400252b	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4002530	      0xe800000000	                          call 0x4002535	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4002535	          0x4c89ee	                            mov rsi, r13	       689	cache-tree.c	FUNCTION_22	CALL_3
0x4002538	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x400253e	          0x4889c7	                            mov rdi, rax	       689	cache-tree.c	FUNCTION_22	CALL_3
0x4002541	      0x4989442420	             mov qword [r12 + 0x20], rax	       688	cache-tree.c	FUNCTION_22	CALL_2
0x4002546	      0xe8d5e3ffff	           call sym.prime_cache_tree_rec	       689	cache-tree.c	FUNCTION_22	CALL_3
0x400254b	    0x41834c241420	             or dword [r12 + 0x14], 0x20	       690	cache-tree.c	FUNCTION_22
0x4002551	        0x4883c408	                              add rsp, 8	       691	cache-tree.c	FUNCTION_22
0x4002555	              0x5b	                                 pop rbx	       691	cache-tree.c	FUNCTION_22
0x4002556	              0x5d	                                 pop rbp	       691	cache-tree.c	FUNCTION_22
0x4002557	            0x415c	                                 pop r12	       691	cache-tree.c	FUNCTION_22
0x4002559	            0x415d	                                 pop r13	       691	cache-tree.c	FUNCTION_22
0x400255b	              0xc3	                                     ret	       691	cache-tree.c	FUNCTION_22
write_one	CALL,8:FOR,1:WHILE,0:DO,0:IF,4:functions,0:ELSE,1:SWITCH,0	93
0x4000040	            0x4157	                                push r15	       444	cache-tree.c	FUNCTION_14
0x4000042	            0x4156	                                push r14	       444	cache-tree.c	FUNCTION_14
0x4000044	          0x4989fe	                            mov r14, rdi	       444	cache-tree.c	FUNCTION_14
0x4000047	            0x4155	                                push r13	       444	cache-tree.c	FUNCTION_14
0x4000049	          0x4989f5	                            mov r13, rsi	       444	cache-tree.c	FUNCTION_14
0x400004c	            0x4154	                                push r12	       444	cache-tree.c	FUNCTION_14
0x400004e	          0x8d7164	                   lea esi, [rcx + 0x64]	       453	cache-tree.c	FUNCTION_14	CALL_1
0x4000051	              0x55	                                push rbp	       444	cache-tree.c	FUNCTION_14
0x4000052	              0x53	                                push rbx	       444	cache-tree.c	FUNCTION_14
0x4000053	          0x4889d5	                            mov rbp, rdx	       444	cache-tree.c	FUNCTION_14
0x4000056	            0x89cb	                            mov ebx, ecx	       444	cache-tree.c	FUNCTION_14
0x4000058	        0x4883ec18	                           sub rsp, 0x18	       444	cache-tree.c	FUNCTION_14
0x400005c	          0x4863f6	                         movsxd rsi, esi	       453	cache-tree.c	FUNCTION_14	CALL_1
0x400005f	      0xe800000000	                          call 0x4000064	       453	cache-tree.c	FUNCTION_14	CALL_1
0x4000064	          0x4863d3	                         movsxd rdx, ebx	       454	cache-tree.c	FUNCTION_14	CALL_2
0x4000067	          0x4889ee	                            mov rsi, rbp	       454	cache-tree.c	FUNCTION_14	CALL_2
0x400006a	          0x4c89f7	                            mov rdi, r14	       454	cache-tree.c	FUNCTION_14	CALL_2
0x400006d	      0xe800000000	                          call 0x4000072	       454	cache-tree.c	FUNCTION_14	CALL_2
0x4000072	        0x458b4518	            mov r8d, dword [r13 + 0x18] 	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000076	        0x418b4d00	                    mov ecx, dword [r13]	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400007a	            0x31d2	                            xor edx, edx	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400007c	            0x31c0	                            xor eax, eax	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400007e	      0xbe00000000	                              mov esi, 0	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000083	          0x4c89f7	                            mov rdi, r14	       455	cache-tree.c	FUNCTION_14	CALL_3
0x4000086	      0xe800000000	                          call 0x400008b	       455	cache-tree.c	FUNCTION_14	CALL_3
0x400008b	        0x418b5500	                    mov edx, dword [r13]	       467	cache-tree.c	FUNCTION_14	IF_2
0x400008f	            0x85d2	                           test edx, edx	       467	cache-tree.c	FUNCTION_14	IF_2
0x4000091	            0x781b	                            js 0x40000ae	       467	cache-tree.c	FUNCTION_14	IF_2
0x4000093	    0x488b05000000	            mov rax, qword [0x0400009a] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_5
0x400009a	        0x498d7504	                      lea rsi, [r13 + 4]	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_5
0x400009e	          0x4c89f7	                            mov rdi, r14	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_5
0x40000a1	        0x488b4058	            mov rax, qword [rax + 0x58] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_5
0x40000a5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_5
0x40000a9	      0xe800000000	                          call 0x40000ae	       468	cache-tree.c	FUNCTION_14	IF_2	CALL_5
0x40000ae	        0x418b4518	            mov eax, dword [r13 + 0x18] 	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000b2	            0x85c0	                           test eax, eax	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000b4	     0xf8ea6000000	                           jle 0x4000160	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000ba	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000be	          0x4531e4	                          xor r12d, r12d	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000c1	            0x31db	                            xor ebx, ebx	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000c3	          0x488b28	                    mov rbp, qword [rax]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000c6	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000c9	        0x4c8d7d14	                   lea r15, [rbp + 0x14]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000cd	           0xf1f00	                         nop dword [rax]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000d0	        0x488b7500	                    mov rsi, qword [rbp]	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_8
0x40000d4	          0x4c89fa	                            mov rdx, r15	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_8
0x40000d7	          0x4c89f7	                            mov rdi, r14	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_8
0x40000da	          0x83c301	                              add ebx, 1	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000dd	      0xe85effffff	                      call sym.write_one	       478	cache-tree.c	FUNCTION_14	FOR_1	CALL_8
0x40000e2	        0x41395d18	            cmp dword [r13 + 0x18], ebx 	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000e6	            0x7e78	                           jle 0x4000160	       470	cache-tree.c	FUNCTION_14	FOR_1
0x40000e8	        0x498b4520	            mov rax, qword [r13 + 0x20] 	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000ec	            0x85db	                           test ebx, ebx	       472	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x40000ee	      0x4d8d442408	                       lea r8, [r12 + 8]	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000f3	      0x4a8b6c2008	         mov rbp, qword [rax + r12 + 8] 	       471	cache-tree.c	FUNCTION_14	FOR_1
0x40000f8	            0x7456	                            je 0x4000150	       472	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x40000fa	        0x4a8b3420	              mov rsi, qword [rax + r12]	       473	cache-tree.c	FUNCTION_14	FOR_1	IF_3
0x40000fe	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_6
0x4000101	          0x8b460c	              mov eax, dword [rsi + 0xc]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_6
0x4000104	            0x39c8	                            cmp eax, ecx	        38	cache-tree.c	FUNCTION_3	IF_1
0x4000106	            0x7e10	                           jle 0x4000118	        38	cache-tree.c	FUNCTION_3	IF_1
0x4000108	      0xbf00000000	                              mov edi, 0	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x400010d	            0x31c0	                            xor eax, eax	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x400010f	      0xe800000000	                          call 0x4000114	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x4000114	         0xf1f4000	                         nop dword [rax]	       476	cache-tree.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x4000118	            0x39c8	                            cmp eax, ecx	        40	cache-tree.c	FUNCTION_3	IF_2
0x400011a	        0x4c8d7d14	                   lea r15, [rbp + 0x14]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_6
0x400011e	            0x7c25	                            jl 0x4000145	        40	cache-tree.c	FUNCTION_3	IF_2
0x4000120	          0x4863d1	                         movsxd rdx, ecx	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000123	        0x4883c614	                           add rsi, 0x14	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000127	          0x4c89ff	                            mov rdi, r15	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400012a	      0x4c89442408	                 mov qword [rsp + 8], r8	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400012f	        0x894c2404	                mov dword [rsp + 4], ecx	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000133	      0xe800000000	                          call 0x4000138	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000138	            0x85c0	                           test eax, eax	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_6
0x400013a	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_6
0x400013e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_6
0x4000143	            0x7ec3	                           jle 0x4000108	       474	cache-tree.c	FUNCTION_14	FOR_1	IF_3	IF_4	CALL_6
0x4000145	          0x4d89c4	                             mov r12, r8	       444	cache-tree.c	FUNCTION_14
0x4000148	            0xeb86	                           jmp 0x40000d0	       444	cache-tree.c	FUNCTION_14
0x400014a	    0x660f1f440000	                    nop word [rax + rax]	       444	cache-tree.c	FUNCTION_14
0x4000150	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	       444	cache-tree.c	FUNCTION_14
0x4000153	        0x4c8d7d14	                   lea r15, [rbp + 0x14]	       444	cache-tree.c	FUNCTION_14
0x4000157	            0xebec	                           jmp 0x4000145	       444	cache-tree.c	FUNCTION_14
0x4000159	     0xf1f80000000	                         nop dword [rax]	       444	cache-tree.c	FUNCTION_14
0x4000160	        0x4883c418	                           add rsp, 0x18	       480	cache-tree.c	FUNCTION_14
0x4000164	              0x5b	                                 pop rbx	       480	cache-tree.c	FUNCTION_14
0x4000165	              0x5d	                                 pop rbp	       480	cache-tree.c	FUNCTION_14
0x4000166	            0x415c	                                 pop r12	       480	cache-tree.c	FUNCTION_14
0x4000168	            0x415d	                                 pop r13	       480	cache-tree.c	FUNCTION_14
0x400016a	            0x415e	                                 pop r14	       480	cache-tree.c	FUNCTION_14
0x400016c	            0x415f	                                 pop r15	       480	cache-tree.c	FUNCTION_14
0x400016e	              0xc3	                                     ret	       480	cache-tree.c	FUNCTION_14
cache_tree_write	CALL,1:FOR,0:WHILE,0:DO,0:IF,0:functions,0:ELSE,0:SWITCH,0	3
0x4002090	            0x31c9	                            xor ecx, ecx	       484	cache-tree.c	FUNCTION_15	CALL_1
0x4002092	      0xba00000000	                              mov edx, 0	       484	cache-tree.c	FUNCTION_15	CALL_1
0x4002097	      0xe9a4dfffff	                       jmp sym.write_one	       484	cache-tree.c	FUNCTION_15	CALL_1
update_one	CALL,30:FOR,1:WHILE,2:DO,0:IF,19:functions,0:ELSE,4:SWITCH,0	474
0x4001380	            0x4157	                                push r15	       242	cache-tree.c	FUNCTION_12
0x4001382	            0x4156	                                push r14	       242	cache-tree.c	FUNCTION_12
0x4001384	            0x4155	                                push r13	       242	cache-tree.c	FUNCTION_12
0x4001386	            0x4154	                                push r12	       242	cache-tree.c	FUNCTION_12
0x4001388	              0x55	                                push rbp	       242	cache-tree.c	FUNCTION_12
0x4001389	              0x53	                                push rbx	       242	cache-tree.c	FUNCTION_12
0x400138a	    0x4881ecb80000	                           sub rsp, 0xb8	       242	cache-tree.c	FUNCTION_12
0x4001391	    0x64488b042528	                mov rax, qword fs:[0x28]	       242	cache-tree.c	FUNCTION_12
0x400139a	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       242	cache-tree.c	FUNCTION_12
0x40013a2	            0x31c0	                            xor eax, eax	       242	cache-tree.c	FUNCTION_12
0x40013a4	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       242	cache-tree.c	FUNCTION_12
0x40013a9	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	       246	cache-tree.c	FUNCTION_12
0x40013b0	    0x8bbc24f00000	            mov edi, dword [rsp + 0xf0] 	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40013b7	      0x4889742418	             mov qword [rsp + 0x18], rsi	       242	cache-tree.c	FUNCTION_12
0x40013bc	        0x89542414	             mov dword [rsp + 0x14], edx	       242	cache-tree.c	FUNCTION_12
0x40013c0	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       242	cache-tree.c	FUNCTION_12
0x40013c5	          0x83e010	                           and eax, 0x10	       246	cache-tree.c	FUNCTION_12
0x40013c8	      0x4489442444	             mov dword [rsp + 0x44], r8d	       242	cache-tree.c	FUNCTION_12
0x40013cd	      0x4c894c2438	              mov qword [rsp + 0x38], r9	       242	cache-tree.c	FUNCTION_12
0x40013d2	          0x83e704	                              and edi, 4	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40013d5	        0x89442468	             mov dword [rsp + 0x68], eax	       246	cache-tree.c	FUNCTION_12
0x40013d9	        0x897c246c	             mov dword [rsp + 0x6c], edi	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40013dd	            0x7408	                            je 0x40013e7	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40013df	            0x85c0	                           test eax, eax	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40013e1	     0xf852f070000	                           jne 0x4001b16	       250	cache-tree.c	FUNCTION_12	CALL_1
0x40013e7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       252	cache-tree.c	FUNCTION_12
0x40013ec	    0xc70000000000	                      mov dword [rax], 0	       252	cache-tree.c	FUNCTION_12
0x40013f2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40013f7	            0x8b38	                    mov edi, dword [rax]	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40013f9	            0x85ff	                           test edi, edi	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40013fb	            0x7813	                            js 0x4001410	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x40013fd	        0x488d7804	                      lea rdi, [rax + 4]	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x4001401	            0x31f6	                            xor esi, esi	      1251	cache.h	FUNCTION_75	CALL_1
0x4001403	      0xe800000000	                          call 0x4001408	      1251	cache.h	FUNCTION_75	CALL_1
0x4001408	            0x85c0	                           test eax, eax	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x400140a	     0xf85b0050000	                           jne 0x40019c0	       254	cache-tree.c	FUNCTION_12	IF_1	CALL_2
0x4001410	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4001415	          0x8b5018	            mov edx, dword [rax + 0x18] 	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4001418	            0x85d2	                           test edx, edx	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400141a	            0x7e27	                           jle 0x4001443	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400141c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4001420	          0x83ea01	                              sub edx, 1	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4001423	      0x488d4cd008	              lea rcx, [rax + rdx*8 + 8]	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4001428	     0xf1f84000000	                   nop dword [rax + rax]	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4001430	          0x488b10	                    mov rdx, qword [rax]	       263	cache-tree.c	FUNCTION_12	FOR_1
0x4001433	        0x4883c008	                              add rax, 8	       263	cache-tree.c	FUNCTION_12	FOR_1
0x4001437	          0x4839c8	                            cmp rax, rcx	       262	cache-tree.c	FUNCTION_12	FOR_1
0x400143a	    0xc74210000000	               mov dword [rdx + 0x10], 0	       263	cache-tree.c	FUNCTION_12	FOR_1
0x4001441	            0x75ed	                           jne 0x4001430	       262	cache-tree.c	FUNCTION_12	FOR_1
0x4001443	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4001447	            0x85f6	                           test esi, esi	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4001449	     0xf8e55060000	                           jle 0x4001aa4	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x400144f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4001454	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001458	          0x488b00	                    mov rax, qword [rax]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x400145b	          0x3b483c	            cmp ecx, dword [rax + 0x3c] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x400145e	        0x488d6858	                   lea rbp, [rax + 0x58]	       275	cache-tree.c	FUNCTION_12	WHILE_1
0x4001462	     0xf8d73060000	                           jge 0x4001adb	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001468	          0x4c63f1	                         movsxd r14, ecx	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x400146b	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001470	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001475	            0x31db	                            xor ebx, ebx	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001477	          0x4589f4	                          mov r12d, r14d	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x400147a	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x400147f	      0xe9a4000000	                           jmp 0x4001528	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001484	         0xf1f4000	                         nop dword [rax]	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001488	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x400148d	          0x4c29f8	                            sub rax, r15	       290	cache-tree.c	FUNCTION_12	WHILE_1
0x4001490	          0x4c89fe	                            mov rsi, r15	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x4001493	      0xb901000000	                              mov ecx, 1	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x4001498	            0x89c2	                            mov edx, eax	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x400149a	      0x4889442408	                mov qword [rsp + 8], rax	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x400149f	      0xe86cf2ffff	                   call sym.find_subtree	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x40014a4	          0x488b38	                    mov rdi, qword [rax]	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40014a7	          0x4989c7	                            mov r15, rax	       291	cache-tree.c	FUNCTION_12	WHILE_1	CALL_5
0x40014aa	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40014af	          0x4885ff	                           test rdi, rdi	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40014b2	     0xf843a050000	                            je 0x40019f2	       292	cache-tree.c	FUNCTION_12	WHILE_1	IF_4
0x40014b8	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014bc	        0x4883ec08	                              sub rsp, 8	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014c0	      0x478d441c01	                lea r8d, [r12 + r11 + 1]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014c5	    0x8b8424f80000	            mov eax, dword [rsp + 0xf8] 	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014cc	          0x4889e9	                            mov rcx, rbp	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014cf	          0x4c89ee	                            mov rsi, r13	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014d2	            0x29da	                            sub edx, ebx	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014d4	              0x50	                                push rax	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014d5	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014da	      0xe8a1feffff	                     call sym.update_one	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x40014df	            0x85c0	                           test eax, eax	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x40014e1	              0x5a	                                 pop rdx	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x40014e2	              0x59	                                 pop rcx	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x40014e3	     0xf8838050000	                            js 0x4001a21	       300	cache-tree.c	FUNCTION_12	WHILE_1	IF_5
0x40014e9	     0xf8440060000	                            je 0x4001b2f	       302	cache-tree.c	FUNCTION_12	WHILE_1	IF_6
0x40014ef	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x40014f4	             0x1c3	                            add ebx, eax	       304	cache-tree.c	FUNCTION_12	WHILE_1
0x40014f6	        0x41894708	                mov dword [r15 + 8], eax	       305	cache-tree.c	FUNCTION_12	WHILE_1
0x40014fa	        0x8b442470	            mov eax, dword [rsp + 0x70] 	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x40014fe	             0x101	                    add dword [rcx], eax	       306	cache-tree.c	FUNCTION_12	WHILE_1
0x4001500	        0x395c2414	            cmp dword [rsp + 0x14], ebx 	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4001504	    0x41c747100100	               mov dword [r15 + 0x10], 1	       307	cache-tree.c	FUNCTION_12	WHILE_1
0x400150c	            0x7e52	                           jle 0x4001560	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x400150e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4001513	          0x4863c3	                         movsxd rax, ebx	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x4001516	        0x4c8d2cc1	                  lea r13, [rcx + rax*8]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x400151a	        0x498b4500	                    mov rax, qword [r13]	       270	cache-tree.c	FUNCTION_12	WHILE_1
0x400151e	        0x4439603c	           cmp dword [rax + 0x3c], r12d 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001522	        0x488d6858	                   lea rbp, [rax + 0x58]	       275	cache-tree.c	FUNCTION_12	WHILE_1
0x4001526	            0x7e38	                           jle 0x4001560	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001528	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x400152d	          0x4c89f2	                            mov rdx, r14	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001530	          0x4889ee	                            mov rsi, rbp	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001533	      0xe800000000	                          call 0x4001538	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x4001538	            0x85c0	                           test eax, eax	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x400153a	            0x7524	                           jne 0x4001560	       277	cache-tree.c	FUNCTION_12	WHILE_1	IF_2	CALL_3
0x400153c	      0x4e8d7c3500	                    lea r15, [rbp + r14]	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_4
0x4001541	      0xbe2f000000	                           mov esi, 0x2f	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_4
0x4001546	          0x4c89ff	                            mov rdi, r15	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_4
0x4001549	      0xe800000000	                          call 0x400154e	       280	cache-tree.c	FUNCTION_12	WHILE_1	CALL_4
0x400154e	          0x4885c0	                           test rax, rax	       281	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x4001551	     0xf8531ffffff	                           jne 0x4001488	       281	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x4001557	          0x83c301	                              add ebx, 1	       282	cache-tree.c	FUNCTION_12	WHILE_1	IF_3
0x400155a	        0x395c2414	            cmp dword [rsp + 0x14], ebx 	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x400155e	            0x7fae	                            jg 0x400150e	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4001560	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       269	cache-tree.c	FUNCTION_12	WHILE_1
0x4001565	        0x448b7818	           mov r15d, dword [rax + 0x18] 	       207	cache-tree.c	FUNCTION_10
0x4001569	        0x4c8b7020	            mov r14, qword [rax + 0x20] 	       207	cache-tree.c	FUNCTION_10
0x400156d	          0x4585ff	                         test r15d, r15d	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4001570	     0xf8eee040000	                           jle 0x4001a64	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4001576	            0x31db	                            xor ebx, ebx	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4001578	          0x4531ed	                          xor r13d, r13d	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x400157b	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4001580	            0xeb1a	                           jmp 0x400159c	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4001582	    0x660f1f440000	                    nop word [rax + rax]	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4001588	        0x4883c301	                              add rbx, 1	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x400158c	          0x4963c5	                        movsxd rax, r13d	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x400158f	        0x4183c501	                             add r13d, 1	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x4001593	          0x4139df	                           cmp r15d, ebx	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4001596	        0x49892cc6	            mov qword [r14 + rax*8], rbp	       212	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x400159a	            0x7e2a	                           jle 0x40015c6	       209	cache-tree.c	FUNCTION_10	FOR_1
0x400159c	        0x498b2cde	            mov rbp, qword [r14 + rbx*8]	       210	cache-tree.c	FUNCTION_10	FOR_1
0x40015a0	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       211	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x40015a3	            0x85c0	                           test eax, eax	       211	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x40015a5	            0x75e1	                           jne 0x4001588	       211	cache-tree.c	FUNCTION_10	FOR_1	IF_1
0x40015a7	          0x4889ef	                            mov rdi, rbp	       214	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_1
0x40015aa	        0x4883c301	                              add rbx, 1	       214	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_1
0x40015ae	      0xe800000000	                          call 0x40015b3	       214	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_1
0x40015b3	          0x4889ef	                            mov rdi, rbp	       215	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_2
0x40015b6	      0xe800000000	                          call 0x40015bb	       215	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1	CALL_2
0x40015bb	    0x41836c241801	               sub dword [r12 + 0x18], 1	       216	cache-tree.c	FUNCTION_10	FOR_1	ELSE_1
0x40015c1	          0x4139df	                           cmp r15d, ebx	       209	cache-tree.c	FUNCTION_10	FOR_1
0x40015c4	            0x7fd6	                            jg 0x400159c	       209	cache-tree.c	FUNCTION_10	FOR_1
0x40015c6	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       315	cache-tree.c	FUNCTION_12	CALL_10
0x40015cb	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_10
0x40015d0	      0xe800000000	                          call 0x40015d5	       315	cache-tree.c	FUNCTION_12	CALL_10
0x40015d5	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x40015da	          0x4585db	                         test r11d, r11d	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x40015dd	     0xf8ee3040000	                           jle 0x4001ac6	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x40015e3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40015e8	          0x488b18	                    mov rbx, qword [rax]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40015eb	        0x488d4358	                   lea rax, [rbx + 0x58]	       328	cache-tree.c	FUNCTION_12	WHILE_2
0x40015ef	        0x448b733c	           mov r14d, dword [rbx + 0x3c] 	       329	cache-tree.c	FUNCTION_12	WHILE_2
0x40015f3	      0x4889442430	             mov qword [rsp + 0x30], rax	       328	cache-tree.c	FUNCTION_12	WHILE_2
0x40015f8	      0x4863442444	         movsxd rax, dword [rsp + 0x44] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x40015fd	          0x4439f0	                           cmp eax, r14d	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x4001600	     0xf8dc0040000	                           jge 0x4001ac6	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x4001606	    0x448ba424f000	           mov r12d, dword [rsp + 0xf0] 	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x400160e	      0x4889442458	             mov qword [rsp + 0x58], rax	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x4001613	    0xc74424400000	               mov dword [rsp + 0x40], 0	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x400161b	    0xc74424600000	               mov dword [rsp + 0x60], 0	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x4001623	        0x4183e401	                             and r12d, 1	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x4001627	        0x4183f401	                             xor r12d, 1	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x400162b	          0x4489e0	                           mov eax, r12d	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x400162e	          0x83e001	                              and eax, 1	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x4001631	        0x88442467	               mov byte [rsp + 0x67], al	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x4001635	           0xf1f00	                         nop dword [rax]	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x4001638	      0x488b6c2458	            mov rbp, qword [rsp + 0x58] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x400163d	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x4001642	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x4001647	          0x4889ea	                            mov rdx, rbp	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x400164a	          0x4c89fe	                            mov rsi, r15	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x400164d	      0xe800000000	                          call 0x4001652	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x4001652	            0x85c0	                           test eax, eax	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x4001654	     0xf8567010000	                           jne 0x40017c1	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x400165a	          0x4c89f8	                            mov rax, r15	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x400165d	      0xbe2f000000	                           mov esi, 0x2f	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x4001662	          0x4801e8	                            add rax, rbp	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x4001665	          0x4889c7	                            mov rdi, rax	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x4001668	          0x4889c5	                            mov rbp, rax	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x400166b	      0x4889442408	                mov qword [rsp + 8], rax	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x4001670	      0xe800000000	                          call 0x4001675	       333	cache-tree.c	FUNCTION_12	WHILE_2	CALL_12
0x4001675	          0x4885c0	                           test rax, rax	       334	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001678	     0xf84a2020000	                            je 0x4001920	       334	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x400167e	          0x4189c7	                           mov r15d, eax	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001681	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001686	          0x4531ed	                          xor r13d, r13d	        49	cache-tree.c	FUNCTION_4
0x4001689	          0x4129ef	                           sub r15d, ebp	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x400168c	      0x48895c2450	             mov qword [rsp + 0x50], rbx	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001691	        0x448b7018	           mov r14d, dword [rax + 0x18] 	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001695	        0x4c8b6020	            mov r12, qword [rax + 0x20] 	       335	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001699	          0x4963c7	                        movsxd rax, r15d	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400169c	          0x4489f2	                           mov edx, r14d	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400169f	          0x4c89e3	                            mov rbx, r12	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40016a2	          0x4589fe	                          mov r14d, r15d	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40016a5	          0x4589ec	                          mov r12d, r13d	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40016a8	          0x4189d7	                           mov r15d, edx	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40016ab	          0x4989c5	                            mov r13, rax	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40016ae	          0x4539fc	                          cmp r12d, r15d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016b1	            0x7d3d	                           jge 0x40016f0	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016b3	       0xf1f440000	                   nop dword [rax + rax]	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016b8	          0x4489f8	                           mov eax, r15d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40016bb	          0x4429e0	                           sub eax, r12d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40016be	            0x89c5	                            mov ebp, eax	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40016c0	          0xc1ed1f	                           shr ebp, 0x1f	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40016c3	             0x1e8	                            add eax, ebp	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40016c5	            0xd1f8	                              sar eax, 1	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40016c7	        0x428d2c20	                    lea ebp, [rax + r12]	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40016cb	          0x4863c5	                         movsxd rax, ebp	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x40016ce	        0x488b34c3	            mov rsi, qword [rbx + rax*8]	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x40016d2	        0x443b760c	            cmp r14d, dword [rsi + 0xc] 	        38	cache-tree.c	FUNCTION_3	IF_1
0x40016d6	     0xf8c83010000	                            jl 0x400185f	        38	cache-tree.c	FUNCTION_3	IF_1
0x40016dc	     0xf8e5e010000	                           jle 0x4001840	        40	cache-tree.c	FUNCTION_3	IF_2
0x40016e2	        0x448d6501	                     lea r12d, [rbp + 1]	        61	cache-tree.c	FUNCTION_4	WHILE_1	ELSE_1
0x40016e6	          0x4539fc	                          cmp r12d, r15d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016e9	            0x7ccd	                            jl 0x40016b8	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016eb	       0xf1f440000	                   nop dword [rax + rax]	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016f0	          0x4589e5	                          mov r13d, r12d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016f3	          0x4589f7	                          mov r15d, r14d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016f6	          0x4989dc	                            mov r12, rbx	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40016f9	          0x41f7d5	                                not r13d	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x40016fc	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x4001701	          0x4585ed	                         test r13d, r13d	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4001704	     0xf88fd010000	                            js 0x4001907	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x400170a	          0x4d63ed	                        movsxd r13, r13d	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x400170d	        0x4b8b2cec	            mov rbp, qword [r12 + r13*8]	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4001711	          0x4885ed	                           test rbp, rbp	       337	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9
0x4001714	     0xf84ed010000	                            je 0x4001907	       337	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9
0x400171a	        0x488b4500	                    mov rax, qword [rbp]	       341	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x400171e	          0x8b7d08	                mov edi, dword [rbp + 8]	       340	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001721	    0x41bd00400000	                        mov r13d, 0x4000	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x4001727	         0x17c2440	             add dword [rsp + 0x40], edi	       340	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x400172b	        0x4c8d6004	                      lea r12, [rax + 4]	       341	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x400172f	            0x8b00	                    mov eax, dword [rax]	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001731	          0x4189c6	                           mov r14d, eax	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001734	        0x41c1ee1f	                          shr r14d, 0x1f	       343	cache-tree.c	FUNCTION_12	WHILE_2	IF_8
0x4001738	            0x85c0	                           test eax, eax	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x400173a	      0xb801000000	                              mov eax, 1	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x400173f	       0xf49442460	          cmovns eax, dword [rsp + 0x60]	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x4001744	      0x4489742450	            mov dword [rsp + 0x50], r14d	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x4001749	        0x89442460	             mov dword [rsp + 0x60], eax	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x400174d	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_60	CALL_1
0x4001752	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_60	CALL_1
0x4001757	          0x4c89e7	                            mov rdi, r12	       975	cache.h	FUNCTION_60	CALL_1
0x400175a	      0xe800000000	                          call 0x400175f	       975	cache.h	FUNCTION_60	CALL_1
0x400175f	            0x85c0	                           test eax, eax	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x4001761	     0xf84f9010000	                            je 0x4001960	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x4001767	      0x807c246700	                cmp byte [rsp + 0x67], 0	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x400176c	            0x740d	                            je 0x400177b	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x400176e	    0x4181fd00e000	                        cmp r13d, 0xe000	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x4001775	     0xf85d5010000	                           jne 0x4001950	       356	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_15
0x400177b	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x400177e	      0xa900000200	                       test eax, 0x20000	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4001783	     0xf84e7000000	                            je 0x4001870	       370	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4001789	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       371	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x400178e	          0x830001	                      add dword [rax], 1	       371	cache-tree.c	FUNCTION_12	WHILE_2	IF_13
0x4001791	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4001795	        0x394c2440	            cmp dword [rsp + 0x40], ecx 	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x4001799	            0x7d26	                           jge 0x40017c1	       318	cache-tree.c	FUNCTION_12	WHILE_2
0x400179b	      0x4863442440	         movsxd rax, dword [rsp + 0x40] 	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40017a0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40017a5	        0x488b1cc1	            mov rbx, qword [rcx + rax*8]	       319	cache-tree.c	FUNCTION_12	WHILE_2
0x40017a9	        0x448b733c	           mov r14d, dword [rbx + 0x3c] 	       329	cache-tree.c	FUNCTION_12	WHILE_2
0x40017ad	      0x4439742444	           cmp dword [rsp + 0x44], r14d 	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x40017b2	        0x488d4358	                   lea rax, [rbx + 0x58]	       328	cache-tree.c	FUNCTION_12	WHILE_2
0x40017b6	      0x4889442430	             mov qword [rsp + 0x30], rax	       328	cache-tree.c	FUNCTION_12	WHILE_2
0x40017bb	     0xf8c77feffff	                            jl 0x4001638	       330	cache-tree.c	FUNCTION_12	WHILE_2	IF_7	CALL_11
0x40017c1	      0x448b4c2468	            mov r9d, dword [rsp + 0x68] 	       401	cache-tree.c	FUNCTION_12	IF_16
0x40017c6	          0x4585c9	                           test r9d, r9d	       401	cache-tree.c	FUNCTION_12	IF_16
0x40017c9	     0xf8556020000	                           jne 0x4001a25	       401	cache-tree.c	FUNCTION_12	IF_16
0x40017cf	      0x448b44246c	            mov r8d, dword [rsp + 0x6c] 	       408	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18
0x40017d4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_26
0x40017d9	    0x488b15000000	            mov rdx, qword [0x040017e0] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_26
0x40017e0	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_26
0x40017e5	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_26
0x40017ed	          0x4585c0	                           test r8d, r8d	       408	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18
0x40017f0	        0x488d4804	                      lea rcx, [rax + 4]	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_26
0x40017f4	     0xf851d020000	                           jne 0x4001a17	       408	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18
0x40017fa	      0xe800000000	                          call 0x40017ff	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_27
0x40017ff	            0x85c0	                           test eax, eax	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_27
0x4001801	     0xf85fb020000	                           jne 0x4001b02	       410	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_27
0x4001807	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       416	cache-tree.c	FUNCTION_12	CALL_29
0x400180c	      0xe800000000	                          call 0x4001811	       416	cache-tree.c	FUNCTION_12	CALL_29
0x4001811	        0x8b542460	            mov edx, dword [rsp + 0x60] 	       417	cache-tree.c	FUNCTION_12
0x4001815	      0xb8ffffffff	                     mov eax, 0xffffffff	       417	cache-tree.c	FUNCTION_12
0x400181a	            0x85d2	                           test edx, edx	       417	cache-tree.c	FUNCTION_12
0x400181c	            0x750b	                           jne 0x4001829	       417	cache-tree.c	FUNCTION_12
0x400181e	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       417	cache-tree.c	FUNCTION_12
0x4001823	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       417	cache-tree.c	FUNCTION_12
0x4001827	            0x2b01	                    sub eax, dword [rcx]	       417	cache-tree.c	FUNCTION_12
0x4001829	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       417	cache-tree.c	FUNCTION_12
0x400182e	        0x8b5c2440	            mov ebx, dword [rsp + 0x40] 	       423	cache-tree.c	FUNCTION_12
0x4001832	            0x8901	                    mov dword [rcx], eax	       417	cache-tree.c	FUNCTION_12
0x4001834	      0xe98e010000	                           jmp 0x40019c7	       423	cache-tree.c	FUNCTION_12
0x4001839	     0xf1f80000000	                         nop dword [rax]	       423	cache-tree.c	FUNCTION_12
0x4001840	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4001845	        0x4883c614	                           add rsi, 0x14	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4001849	          0x4c89ea	                            mov rdx, r13	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400184c	      0xe800000000	                          call 0x4001851	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4001851	            0x85c0	                           test eax, eax	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x4001853	     0xf8497000000	                            je 0x40018f0	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x4001859	     0xf8983feffff	                           jns 0x40016e2	        58	cache-tree.c	FUNCTION_4	WHILE_1	IF_2
0x400185f	          0x4439e5	                           cmp ebp, r12d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001862	          0x4189ef	                           mov r15d, ebp	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001865	     0xf8f4dfeffff	                            jg 0x40016b8	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400186b	      0xe980feffff	                           jmp 0x40016f0	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4001870	          0x4885ed	                           test rbp, rbp	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x4001873	     0xf842f010000	                            je 0x40019a8	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x4001879	          0x4585f6	                         test r14d, r14d	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_19
0x400187c	            0x741a	                            je 0x4001898	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_19
0x400187e	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_60	CALL_1
0x4001883	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_60	CALL_1
0x4001888	          0x4c89e7	                            mov rdi, r12	       975	cache.h	FUNCTION_60	CALL_1
0x400188b	      0xe800000000	                          call 0x4001890	       975	cache.h	FUNCTION_60	CALL_1
0x4001890	            0x85c0	                           test eax, eax	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_19
0x4001892	     0xf84f9feffff	                            je 0x4001791	       388	cache-tree.c	FUNCTION_12	WHILE_2	IF_15	CALL_19
0x4001898	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_20
0x400189d	        0x418d7764	                   lea esi, [r15 + 0x64]	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_20
0x40018a1	          0x4863f6	                         movsxd rsi, esi	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_20
0x40018a4	          0x4889df	                            mov rdi, rbx	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_20
0x40018a7	      0xe800000000	                          call 0x40018ac	       391	cache-tree.c	FUNCTION_12	WHILE_2	CALL_20
0x40018ac	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_21
0x40018b1	          0x4489ea	                           mov edx, r13d	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_21
0x40018b4	          0x4889df	                            mov rdi, rbx	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_21
0x40018b7	            0x31c0	                            xor eax, eax	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_21
0x40018b9	          0x4531c9	                            xor r9d, r9d	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_21
0x40018bc	          0x4489f9	                           mov ecx, r15d	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_21
0x40018bf	      0xbe00000000	                              mov esi, 0	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_21
0x40018c4	      0xe800000000	                          call 0x40018c9	       392	cache-tree.c	FUNCTION_12	WHILE_2	CALL_21
0x40018c9	    0x488b05000000	            mov rax, qword [0x040018d0] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_22
0x40018d0	          0x4c89e6	                            mov rsi, r12	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_22
0x40018d3	          0x4889df	                            mov rdi, rbx	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_22
0x40018d6	        0x488b4058	            mov rax, qword [rax + 0x58] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_22
0x40018da	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_22
0x40018de	      0xe800000000	                          call 0x40018e3	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_22
0x40018e3	      0xe9a9feffff	                           jmp 0x4001791	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_22
0x40018e8	     0xf1f84000000	                   nop dword [rax + rax]	       393	cache-tree.c	FUNCTION_12	WHILE_2	CALL_22
0x40018f0	          0x4189ed	                           mov r13d, ebp	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40018f3	          0x4989dc	                            mov r12, rbx	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40018f6	          0x4589f7	                          mov r15d, r14d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40018f9	          0x4585ed	                         test r13d, r13d	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x40018fc	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4001901	     0xf8903feffff	                           jns 0x400170a	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4001907	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_14
0x400190c	      0x488b542408	                mov rdx, qword [rsp + 8]	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_14
0x4001911	          0x4489fe	                           mov esi, r15d	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_14
0x4001914	      0xbf00000000	                              mov edi, 0	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_14
0x4001919	            0x31c0	                            xor eax, eax	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_14
0x400191b	      0xe800000000	                          call 0x4001920	       338	cache-tree.c	FUNCTION_12	WHILE_2	IF_8	IF_9	CALL_14
0x4001920	      0x442b742444	            sub r14d, dword [rsp + 0x44]	       352	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4001925	        0x4c8d6344	                   lea r12, [rbx + 0x44]	       350	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4001929	        0x448b6b34	           mov r13d, dword [rbx + 0x34] 	       351	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x400192d	      0x8344244001	               add dword [rsp + 0x40], 1	       353	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x4001932	    0xc74424500000	               mov dword [rsp + 0x50], 0	       325	cache-tree.c	FUNCTION_12	WHILE_2
0x400193a	            0x31ed	                            xor ebp, ebp	       320	cache-tree.c	FUNCTION_12	WHILE_2
0x400193c	          0x4589f7	                          mov r15d, r14d	       352	cache-tree.c	FUNCTION_12	WHILE_2	ELSE_1
0x400193f	          0x4531f6	                          xor r14d, r14d	       326	cache-tree.c	FUNCTION_12	WHILE_2
0x4001942	      0xe906feffff	                           jmp 0x400174d	       326	cache-tree.c	FUNCTION_12	WHILE_2
0x4001947	    0x660f1f840000	                    nop word [rax + rax]	       326	cache-tree.c	FUNCTION_12	WHILE_2
0x4001950	          0x4c89e7	                            mov rdi, r12	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_16
0x4001953	      0xe800000000	                          call 0x4001958	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_16
0x4001958	            0x85c0	                           test eax, eax	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_16
0x400195a	     0xf851bfeffff	                           jne 0x400177b	       357	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_16
0x4001960	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       358	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x4001965	      0xbbffffffff	                     mov ebx, 0xffffffff	       360	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x400196a	      0xe800000000	                          call 0x400196f	       358	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	CALL_17
0x400196f	      0x448b542450	           mov r10d, dword [rsp + 0x50] 	       359	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4001974	          0x4585d2	                         test r10d, r10d	       359	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4001977	            0x754e	                           jne 0x40019c7	       359	cache-tree.c	FUNCTION_12	WHILE_2	IF_11	IF_12
0x4001979	      0x448b742444	           mov r14d, dword [rsp + 0x44] 	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x400197e	          0x4c89e7	                            mov rdi, r12	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x4001981	      0xe800000000	                          call 0x4001986	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x4001986	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x400198b	          0x4889c2	                            mov rdx, rax	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x400198e	          0x4489ee	                           mov esi, r13d	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x4001991	          0x4501fe	                          add r14d, r15d	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x4001994	      0xbf00000000	                              mov edi, 0	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x4001999	            0x31c0	                            xor eax, eax	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x400199b	          0x4489f1	                           mov ecx, r14d	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x400199e	      0xe800000000	                          call 0x40019a3	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x40019a3	            0xeb22	                           jmp 0x40019c7	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x40019a5	           0xf1f00	                         nop dword [rax]	       361	cache-tree.c	FUNCTION_12	WHILE_2	IF_11
0x40019a8	      0xa900000020	                    test eax, 0x20000000	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x40019ad	     0xf84c6feffff	                            je 0x4001879	       380	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x40019b3	    0xc74424600100	               mov dword [rsp + 0x60], 1	       381	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x40019bb	      0xe9d1fdffff	                           jmp 0x4001791	       381	cache-tree.c	FUNCTION_12	WHILE_2	IF_14
0x40019c0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       255	cache-tree.c	FUNCTION_12	IF_1
0x40019c5	            0x8b18	                    mov ebx, dword [rax]	       255	cache-tree.c	FUNCTION_12	IF_1
0x40019c7	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       424	cache-tree.c	FUNCTION_12
0x40019cf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       424	cache-tree.c	FUNCTION_12
0x40019d8	            0x89d8	                            mov eax, ebx	       424	cache-tree.c	FUNCTION_12
0x40019da	     0xf850a010000	                           jne 0x4001aea	       424	cache-tree.c	FUNCTION_12
0x40019e0	    0x4881c4b80000	                           add rsp, 0xb8	       424	cache-tree.c	FUNCTION_12
0x40019e7	              0x5b	                                 pop rbx	       424	cache-tree.c	FUNCTION_12
0x40019e8	              0x5d	                                 pop rbp	       424	cache-tree.c	FUNCTION_12
0x40019e9	            0x415c	                                 pop r12	       424	cache-tree.c	FUNCTION_12
0x40019eb	            0x415d	                                 pop r13	       424	cache-tree.c	FUNCTION_12
0x40019ed	            0x415e	                                 pop r14	       424	cache-tree.c	FUNCTION_12
0x40019ef	            0x415f	                                 pop r15	       424	cache-tree.c	FUNCTION_12
0x40019f1	              0xc3	                                     ret	       424	cache-tree.c	FUNCTION_12
0x40019f2	      0xbf01000000	                              mov edi, 1	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40019f7	      0xbe28000000	                           mov esi, 0x28	        13	cache-tree.c	FUNCTION_1	CALL_1
0x40019fc	      0xe800000000	                          call 0x4001a01	        13	cache-tree.c	FUNCTION_1	CALL_1
0x4001a01	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4001a06	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	        14	cache-tree.c	FUNCTION_1
0x4001a0c	          0x4889c7	                            mov rdi, rax	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4001a0f	          0x498907	                    mov qword [r15], rax	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4001a12	      0xe9a1faffff	                           jmp 0x40014b8	       293	cache-tree.c	FUNCTION_12	WHILE_1	CALL_6
0x4001a17	      0xe800000000	                          call 0x4001a1c	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_26
0x4001a1c	      0xe9e6fdffff	                           jmp 0x4001807	       409	cache-tree.c	FUNCTION_12	ELSE_2	ELSE_3	IF_18	CALL_26
0x4001a21	            0x89c3	                            mov ebx, eax	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4001a23	            0xeba2	                           jmp 0x40019c7	       294	cache-tree.c	FUNCTION_12	WHILE_1	CALL_7
0x4001a25	    0x488b15000000	            mov rdx, qword [0x04001a2c] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_23
0x4001a2c	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_23
0x4001a31	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_23
0x4001a39	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_23
0x4001a41	      0xe800000000	                          call 0x4001a46	       403	cache-tree.c	FUNCTION_12	IF_16	CALL_23
0x4001a46	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_24
0x4001a4e	      0xe800000000	                          call 0x4001a53	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_24
0x4001a53	            0x85c0	                           test eax, eax	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_24
0x4001a55	            0x7521	                           jne 0x4001a78	       404	cache-tree.c	FUNCTION_12	IF_16	IF_17	CALL_24
0x4001a57	    0xc74424600100	               mov dword [rsp + 0x60], 1	       407	cache-tree.c	FUNCTION_12	IF_16	ELSE_2
0x4001a5f	      0xe9a3fdffff	                           jmp 0x4001807	       407	cache-tree.c	FUNCTION_12	IF_16	ELSE_2
0x4001a64	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       315	cache-tree.c	FUNCTION_12	CALL_10
0x4001a69	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_10
0x4001a6e	      0xe800000000	                          call 0x4001a73	       315	cache-tree.c	FUNCTION_12	CALL_10
0x4001a73	      0xe96bfbffff	                           jmp 0x40015e3	       315	cache-tree.c	FUNCTION_12	CALL_10
0x4001a78	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_80	CALL_3
0x4001a7d	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	        53	string3.h	FUNCTION_80	CALL_3
0x4001a85	        0x48894704	                mov qword [rdi + 4], rax	        53	string3.h	FUNCTION_80	CALL_3
0x4001a89	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	        53	string3.h	FUNCTION_80	CALL_3
0x4001a91	        0x4889470c	              mov qword [rdi + 0xc], rax	        53	string3.h	FUNCTION_80	CALL_3
0x4001a95	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	        53	string3.h	FUNCTION_80	CALL_3
0x4001a9c	          0x894714	             mov dword [rdi + 0x14], eax	        53	string3.h	FUNCTION_80	CALL_3
0x4001a9f	      0xe963fdffff	                           jmp 0x4001807	        53	string3.h	FUNCTION_80	CALL_3
0x4001aa4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       207	cache-tree.c	FUNCTION_10
0x4001aa9	        0x448b7818	           mov r15d, dword [rax + 0x18] 	       207	cache-tree.c	FUNCTION_10
0x4001aad	          0x4585ff	                         test r15d, r15d	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4001ab0	            0x7f3d	                            jg 0x4001aef	       209	cache-tree.c	FUNCTION_10	FOR_1
0x4001ab2	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       315	cache-tree.c	FUNCTION_12	CALL_10
0x4001ab7	      0xbe00200000	                         mov esi, 0x2000	       315	cache-tree.c	FUNCTION_12	CALL_10
0x4001abc	      0x48897c2448	             mov qword [rsp + 0x48], rdi	       315	cache-tree.c	FUNCTION_12	CALL_10
0x4001ac1	      0xe800000000	                          call 0x4001ac6	       315	cache-tree.c	FUNCTION_12	CALL_10
0x4001ac6	    0xc74424400000	               mov dword [rsp + 0x40], 0	       317	cache-tree.c	FUNCTION_12
0x4001ace	    0xc74424600000	               mov dword [rsp + 0x60], 0	       247	cache-tree.c	FUNCTION_12
0x4001ad6	      0xe9e6fcffff	                           jmp 0x40017c1	       247	cache-tree.c	FUNCTION_12
0x4001adb	      0x488d442470	                   lea rax, [rsp + 0x70]	       247	cache-tree.c	FUNCTION_12
0x4001ae0	      0x4889442448	             mov qword [rsp + 0x48], rax	       247	cache-tree.c	FUNCTION_12
0x4001ae5	      0xe976faffff	                           jmp 0x4001560	       247	cache-tree.c	FUNCTION_12
0x4001aea	      0xe800000000	                          call 0x4001aef	       424	cache-tree.c	FUNCTION_12
0x4001aef	        0x4c8b7020	            mov r14, qword [rax + 0x20] 	       424	cache-tree.c	FUNCTION_12
0x4001af3	      0x488d442470	                   lea rax, [rsp + 0x70]	       424	cache-tree.c	FUNCTION_12
0x4001af8	      0x4889442448	             mov qword [rsp + 0x48], rax	       424	cache-tree.c	FUNCTION_12
0x4001afd	      0xe974faffff	                           jmp 0x4001576	       424	cache-tree.c	FUNCTION_12
0x4001b02	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       412	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_28
0x4001b07	      0xbbffffffff	                     mov ebx, 0xffffffff	       413	cache-tree.c	FUNCTION_12	ELSE_4	IF_19
0x4001b0c	      0xe800000000	                          call 0x4001b11	       412	cache-tree.c	FUNCTION_12	ELSE_4	IF_19	CALL_28
0x4001b11	      0xe9b1feffff	                           jmp 0x40019c7	       413	cache-tree.c	FUNCTION_12	ELSE_4	IF_19
0x4001b16	      0xb900000000	                              mov ecx, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4001b1b	      0xbafa000000	                           mov edx, 0xfa	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4001b20	      0xbe00000000	                              mov esi, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4001b25	      0xbf00000000	                              mov edi, 0	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4001b2a	      0xe800000000	                          call 0x4001b2f	       250	cache-tree.c	FUNCTION_12	CALL_1
0x4001b2f	      0xbf00000000	                              mov edi, 0	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4001b34	            0x31c0	                            xor eax, eax	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
0x4001b36	      0xe800000000	                          call 0x4001b3b	       303	cache-tree.c	FUNCTION_12	WHILE_1	CALL_8
cache_tree_find	CALL,1:FOR,0:WHILE,2:DO,0:IF,2:functions,0:ELSE,0:SWITCH,0	98
0x4000170	          0x4885ff	                           test rdi, rdi	       580	cache-tree.c	FUNCTION_18	IF_1
0x4000173	     0xf8428010000	                            je 0x40002a1	       580	cache-tree.c	FUNCTION_18	IF_1
0x4000179	            0x4157	                                push r15	       579	cache-tree.c	FUNCTION_18
0x400017b	            0x4156	                                push r14	       579	cache-tree.c	FUNCTION_18
0x400017d	            0x4155	                                push r13	       579	cache-tree.c	FUNCTION_18
0x400017f	            0x4154	                                push r12	       579	cache-tree.c	FUNCTION_18
0x4000181	          0x4989f4	                            mov r12, rsi	       579	cache-tree.c	FUNCTION_18
0x4000184	              0x55	                                push rbp	       579	cache-tree.c	FUNCTION_18
0x4000185	              0x53	                                push rbx	       579	cache-tree.c	FUNCTION_18
0x4000186	          0x4889fb	                            mov rbx, rdi	       579	cache-tree.c	FUNCTION_18
0x4000189	        0x4883ec18	                           sub rsp, 0x18	       579	cache-tree.c	FUNCTION_18
0x400018d	           0xfb606	                   movzx eax, byte [rsi]	       579	cache-tree.c	FUNCTION_18
0x4000190	            0x84c0	                             test al, al	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x4000192	     0xf84ad000000	                            je 0x4000245	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x4000198	     0xf1f84000000	                   nop dword [rax + rax]	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x40001a0	      0xbe2f000000	                           mov esi, 0x2f	       586	cache-tree.c	FUNCTION_18	WHILE_1
0x40001a5	          0x4c89e7	                            mov rdi, r12	       586	cache-tree.c	FUNCTION_18	WHILE_1
0x40001a8	          0x4531ed	                          xor r13d, r13d	        49	cache-tree.c	FUNCTION_4
0x40001ab	      0xe800000000	                          call 0x40001b0	       586	cache-tree.c	FUNCTION_18	WHILE_1
0x40001b0	        0x448b7318	           mov r14d, dword [rbx + 0x18] 	       586	cache-tree.c	FUNCTION_18	WHILE_1
0x40001b4	            0x89c5	                            mov ebp, eax	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x40001b6	      0x4889442408	                mov qword [rsp + 8], rax	       586	cache-tree.c	FUNCTION_18	WHILE_1
0x40001bb	          0x4429e5	                           sub ebp, r12d	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x40001be	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	       591	cache-tree.c	FUNCTION_18	WHILE_1	CALL_1
0x40001c2	          0x4863c5	                         movsxd rax, ebp	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40001c5	          0x4539f5	                          cmp r13d, r14d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40001c8	        0x48890424	                    mov qword [rsp], rax	        42	cache-tree.c	FUNCTION_3	CALL_1
0x40001cc	            0x7d32	                           jge 0x4000200	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40001ce	            0x6690	                                     nop	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40001d0	          0x4489f0	                           mov eax, r14d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40001d3	          0x4429e8	                           sub eax, r13d	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40001d6	            0x89c3	                            mov ebx, eax	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40001d8	          0xc1eb1f	                           shr ebx, 0x1f	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40001db	             0x1d8	                            add eax, ebx	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40001dd	            0xd1f8	                              sar eax, 1	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40001df	        0x428d1c28	                    lea ebx, [rax + r13]	        52	cache-tree.c	FUNCTION_4	WHILE_1
0x40001e3	          0x4863c3	                         movsxd rax, ebx	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x40001e6	        0x498b34c7	            mov rsi, qword [r15 + rax*8]	        53	cache-tree.c	FUNCTION_4	WHILE_1
0x40001ea	          0x3b6e0c	              cmp ebp, dword [rsi + 0xc]	        38	cache-tree.c	FUNCTION_3	IF_1
0x40001ed	     0xf8c87000000	                            jl 0x400027a	        38	cache-tree.c	FUNCTION_3	IF_1
0x40001f3	            0x7e6b	                           jle 0x4000260	        40	cache-tree.c	FUNCTION_3	IF_2
0x40001f5	        0x448d6b01	                     lea r13d, [rbx + 1]	        61	cache-tree.c	FUNCTION_4	WHILE_1	ELSE_1
0x40001f9	          0x4539f5	                          cmp r13d, r14d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40001fc	            0x7cd2	                            jl 0x40001d0	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x40001fe	            0x6690	                                     nop	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4000200	          0x4489eb	                           mov ebx, r13d	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x4000203	            0xf7d3	                                 not ebx	        63	cache-tree.c	FUNCTION_4	ELSE_1
0x4000205	            0x85db	                           test ebx, ebx	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4000207	     0xf8883000000	                            js 0x4000290	        73	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x400020d	          0x4863db	                         movsxd rbx, ebx	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4000210	        0x498b04df	            mov rax, qword [r15 + rbx*8]	        74	cache-tree.c	ELSE_1	FUNCTION_5	IF_1
0x4000214	          0x4885c0	                           test rax, rax	       592	cache-tree.c	FUNCTION_18	WHILE_1	IF_2
0x4000217	            0x7477	                            je 0x4000290	       592	cache-tree.c	FUNCTION_18	WHILE_1	IF_2
0x4000219	      0x4c8b642408	                mov r12, qword [rsp + 8]	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400021e	          0x488b18	                    mov rbx, qword [rax]	       594	cache-tree.c	FUNCTION_18	WHILE_1
0x4000221	      0x410fb60424	                   movzx eax, byte [r12]	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000226	            0x3c2f	                            cmp al, 0x2f	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000228	     0xf8562ffffff	                           jne 0x4000190	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400022e	            0x6690	                                     nop	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000230	        0x4983c401	                              add r12, 1	       598	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000234	      0x410fb60424	                   movzx eax, byte [r12]	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x4000239	            0x3c2f	                            cmp al, 0x2f	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400023b	            0x74f3	                            je 0x4000230	       597	cache-tree.c	FUNCTION_18	WHILE_1	WHILE_2
0x400023d	            0x84c0	                             test al, al	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x400023f	     0xf855bffffff	                           jne 0x40001a0	       582	cache-tree.c	FUNCTION_18	WHILE_1
0x4000245	        0x4883c418	                           add rsp, 0x18	       601	cache-tree.c	FUNCTION_18
0x4000249	          0x4889d8	                            mov rax, rbx	       601	cache-tree.c	FUNCTION_18
0x400024c	              0x5b	                                 pop rbx	       601	cache-tree.c	FUNCTION_18
0x400024d	              0x5d	                                 pop rbp	       601	cache-tree.c	FUNCTION_18
0x400024e	            0x415c	                                 pop r12	       601	cache-tree.c	FUNCTION_18
0x4000250	            0x415d	                                 pop r13	       601	cache-tree.c	FUNCTION_18
0x4000252	            0x415e	                                 pop r14	       601	cache-tree.c	FUNCTION_18
0x4000254	            0x415f	                                 pop r15	       601	cache-tree.c	FUNCTION_18
0x4000256	              0xc3	                                     ret	       601	cache-tree.c	FUNCTION_18
0x4000257	    0x660f1f840000	                    nop word [rax + rax]	       601	cache-tree.c	FUNCTION_18
0x4000260	        0x488b1424	                    mov rdx, qword [rsp]	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000264	        0x4883c614	                           add rsi, 0x14	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000268	          0x4c89e7	                            mov rdi, r12	        42	cache-tree.c	FUNCTION_3	CALL_1
0x400026b	      0xe800000000	                          call 0x4000270	        42	cache-tree.c	FUNCTION_3	CALL_1
0x4000270	            0x85c0	                           test eax, eax	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x4000272	            0x7491	                            je 0x4000205	        56	cache-tree.c	FUNCTION_4	WHILE_1	IF_1
0x4000274	     0xf897bffffff	                           jns 0x40001f5	        58	cache-tree.c	FUNCTION_4	WHILE_1	IF_2
0x400027a	          0x4439eb	                           cmp ebx, r13d	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400027d	          0x4189de	                           mov r14d, ebx	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4000280	     0xf8f4affffff	                            jg 0x40001d0	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4000286	      0xe975ffffff	                           jmp 0x4000200	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x400028b	       0xf1f440000	                   nop dword [rax + rax]	        51	cache-tree.c	FUNCTION_4	WHILE_1
0x4000290	        0x4883c418	                           add rsp, 0x18	       601	cache-tree.c	FUNCTION_18
0x4000294	            0x31c0	                            xor eax, eax	       581	cache-tree.c	FUNCTION_18	IF_1
0x4000296	              0x5b	                                 pop rbx	       601	cache-tree.c	FUNCTION_18
0x4000297	              0x5d	                                 pop rbp	       601	cache-tree.c	FUNCTION_18
0x4000298	            0x415c	                                 pop r12	       601	cache-tree.c	FUNCTION_18
0x400029a	            0x415d	                                 pop r13	       601	cache-tree.c	FUNCTION_18
0x400029c	            0x415e	                                 pop r14	       601	cache-tree.c	FUNCTION_18
0x400029e	            0x415f	                                 pop r15	       601	cache-tree.c	FUNCTION_18
0x40002a0	              0xc3	                                     ret	       601	cache-tree.c	FUNCTION_18
0x40002a1	            0x31c0	                            xor eax, eax	       581	cache-tree.c	FUNCTION_18	IF_1
0x40002a3	              0xc3	                                     ret	       601	cache-tree.c	FUNCTION_18
