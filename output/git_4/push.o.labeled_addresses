cmd_push	IF,9:ELSE,3:FOR,0:WHILE,0:DO,0:functions,0:CALL,40:SWITCH,0	759
0x40009a0	            0x4157	                                push r15	       565	push.c	FUNCTION_22
0x40009a2	            0x4156	                                push r14	       565	push.c	FUNCTION_22
0x40009a4	      0xb9d0000000	                           mov ecx, 0xd0	       575	push.c	FUNCTION_22
0x40009a9	            0x4155	                                push r13	       565	push.c	FUNCTION_22
0x40009ab	            0x4154	                                push r12	       565	push.c	FUNCTION_22
0x40009ad	          0x4989d5	                            mov r13, rdx	       565	push.c	FUNCTION_22
0x40009b0	              0x55	                                push rbp	       565	push.c	FUNCTION_22
0x40009b1	              0x53	                                push rbx	       565	push.c	FUNCTION_22
0x40009b2	            0x89fd	                            mov ebp, edi	       565	push.c	FUNCTION_22
0x40009b4	          0x4989f4	                            mov r12, rsi	       565	push.c	FUNCTION_22
0x40009b7	    0x41be00000000	                             mov r14d, 0	       621	push.c	FUNCTION_22
0x40009bd	    0x4881ec380700	                          sub rsp, 0x738	       565	push.c	FUNCTION_22
0x40009c4	    0x64488b042528	                mov rax, qword fs:[0x28]	       565	push.c	FUNCTION_22
0x40009cd	    0x488984242807	            mov qword [rsp + 0x728], rax	       565	push.c	FUNCTION_22
0x40009d5	            0x31c0	                            xor eax, eax	       565	push.c	FUNCTION_22
0x40009d7	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	       575	push.c	FUNCTION_22
0x40009df	    0x808c24900000	                 or byte [rsp + 0x90], 1	       571	push.c	FUNCTION_22
0x40009e7	    0xc74424240000	               mov dword [rsp + 0x24], 0	       566	push.c	FUNCTION_22
0x40009ef	    0xc74424280000	               mov dword [rsp + 0x28], 0	       567	push.c	FUNCTION_22
0x40009f7	    0xc744242cffff	     mov dword [rsp + 0x2c], 0xffffffff 	       568	push.c	FUNCTION_22
0x40009ff	      0x488d5c2424	                   lea rbx, [rsp + 0x24]	       575	push.c	FUNCTION_22
0x4000a04	          0xf348ab	              rep stosq qword [rdi], rax	       575	push.c	FUNCTION_22
0x4000a07	      0x488d442430	                   lea rax, [rsp + 0x30]	       575	push.c	FUNCTION_22
0x4000a0c	    0x48c744243000	               mov qword [rsp + 0x30], 0	       570	push.c	FUNCTION_22
0x4000a15	      0xbf00000000	                              mov edi, 0	       616	push.c	FUNCTION_22	CALL_23
0x4000a1a	    0x48c784248000	               mov qword [rsp + 0x80], 0	       571	push.c	FUNCTION_22
0x4000a26	    0xc78424880000	               mov dword [rsp + 0x88], 0	       571	push.c	FUNCTION_22
0x4000a31	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	       571	push.c	FUNCTION_22
0x4000a3c	    0x48c784249800	               mov qword [rsp + 0x98], 0	       571	push.c	FUNCTION_22
0x4000a48	    0xc78424a00000	            mov dword [rsp + 0xa0], 0xc 	       575	push.c	FUNCTION_22
0x4000a53	    0xc78424a40000	           mov dword [rsp + 0xa4], 0x76 	       575	push.c	FUNCTION_22
0x4000a5e	    0x48c78424a800	               mov qword [rsp + 0xa8], 0	       575	push.c	FUNCTION_22
0x4000a6a	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       575	push.c	FUNCTION_22
0x4000a76	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       575	push.c	FUNCTION_22
0x4000a82	    0xc78424c80000	               mov dword [rsp + 0xc8], 2	       575	push.c	FUNCTION_22
0x4000a8d	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       575	push.c	FUNCTION_22
0x4000a99	    0xc78424e00000	            mov dword [rsp + 0xe0], 0xc 	       575	push.c	FUNCTION_22
0x4000aa4	    0xc78424e40000	           mov dword [rsp + 0xe4], 0x71 	       575	push.c	FUNCTION_22
0x4000aaf	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	       575	push.c	FUNCTION_22
0x4000abb	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	       575	push.c	FUNCTION_22
0x4000ac7	    0x48c784240001	              mov qword [rsp + 0x100], 0	       575	push.c	FUNCTION_22
0x4000ad3	    0xc78424080100	              mov dword [rsp + 0x108], 2	       575	push.c	FUNCTION_22
0x4000ade	    0x48c784241001	              mov qword [rsp + 0x110], 0	       575	push.c	FUNCTION_22
0x4000aea	    0x488984243001	            mov qword [rsp + 0x130], rax	       575	push.c	FUNCTION_22
0x4000af2	      0x488d442428	                   lea rax, [rsp + 0x28]	       575	push.c	FUNCTION_22
0x4000af7	    0xc78424200100	              mov dword [rsp + 0x120], 9	       575	push.c	FUNCTION_22
0x4000b02	    0x48c784242801	              mov qword [rsp + 0x128], 0	       575	push.c	FUNCTION_22
0x4000b0e	    0x488984243002	            mov qword [rsp + 0x230], rax	       575	push.c	FUNCTION_22
0x4000b16	      0x488d44242c	                   lea rax, [rsp + 0x2c]	       575	push.c	FUNCTION_22
0x4000b1b	    0x48c784243801	              mov qword [rsp + 0x138], 0	       575	push.c	FUNCTION_22
0x4000b27	    0x48c784244001	              mov qword [rsp + 0x140], 0	       575	push.c	FUNCTION_22
0x4000b33	    0xc78424600100	              mov dword [rsp + 0x160], 4	       575	push.c	FUNCTION_22
0x4000b3e	    0x48c784246801	              mov qword [rsp + 0x168], 0	       575	push.c	FUNCTION_22
0x4000b4a	    0x48899c247001	            mov qword [rsp + 0x170], rbx	       575	push.c	FUNCTION_22
0x4000b52	    0x48c784248001	              mov qword [rsp + 0x180], 0	       575	push.c	FUNCTION_22
0x4000b5e	    0xc78424880100	              mov dword [rsp + 0x188], 2	       575	push.c	FUNCTION_22
0x4000b69	    0x48c784249801	              mov qword [rsp + 0x198], 1	       575	push.c	FUNCTION_22
0x4000b75	    0xc78424a00100	              mov dword [rsp + 0x1a0], 4	       575	push.c	FUNCTION_22
0x4000b80	    0x48c78424a801	              mov qword [rsp + 0x1a8], 0	       575	push.c	FUNCTION_22
0x4000b8c	    0x48899c24b001	            mov qword [rsp + 0x1b0], rbx	       575	push.c	FUNCTION_22
0x4000b94	    0x48c78424c001	              mov qword [rsp + 0x1c0], 0	       575	push.c	FUNCTION_22
0x4000ba0	    0xc78424c80100	              mov dword [rsp + 0x1c8], 2	       575	push.c	FUNCTION_22
0x4000bab	    0x48c78424d801	            mov qword [rsp + 0x1d8], 0xa	       575	push.c	FUNCTION_22
0x4000bb7	    0xc78424e00100	              mov dword [rsp + 0x1e0], 7	       575	push.c	FUNCTION_22
0x4000bc2	    0xc78424e40100	          mov dword [rsp + 0x1e4], 0x64 	       575	push.c	FUNCTION_22
0x4000bcd	    0x48c78424e801	              mov qword [rsp + 0x1e8], 0	       575	push.c	FUNCTION_22
0x4000bd9	    0x48c78424f001	              mov qword [rsp + 0x1f0], 0	       575	push.c	FUNCTION_22
0x4000be5	    0x48c784240002	              mov qword [rsp + 0x200], 0	       575	push.c	FUNCTION_22
0x4000bf1	    0xc78424080200	              mov dword [rsp + 0x208], 2	       575	push.c	FUNCTION_22
0x4000bfc	    0x48c784241802	              mov qword [rsp + 0x218], 1	       575	push.c	FUNCTION_22
0x4000c08	    0xc78424200200	              mov dword [rsp + 0x220], 7	       575	push.c	FUNCTION_22
0x4000c13	    0x48c784242802	              mov qword [rsp + 0x228], 0	       575	push.c	FUNCTION_22
0x4000c1f	    0x48c784244002	              mov qword [rsp + 0x240], 0	       575	push.c	FUNCTION_22
0x4000c2b	    0xc78424480200	              mov dword [rsp + 0x248], 2	       575	push.c	FUNCTION_22
0x4000c36	    0x48c784245802	              mov qword [rsp + 0x258], 1	       575	push.c	FUNCTION_22
0x4000c42	    0xc78424600200	              mov dword [rsp + 0x260], 4	       575	push.c	FUNCTION_22
0x4000c4d	    0xc78424640200	          mov dword [rsp + 0x264], 0x6e 	       575	push.c	FUNCTION_22
0x4000c58	    0x48c784246802	              mov qword [rsp + 0x268], 0	       575	push.c	FUNCTION_22
0x4000c64	    0x48899c247002	            mov qword [rsp + 0x270], rbx	       575	push.c	FUNCTION_22
0x4000c6c	    0x48c784248002	              mov qword [rsp + 0x280], 0	       575	push.c	FUNCTION_22
0x4000c78	    0xc78424880200	              mov dword [rsp + 0x288], 2	       575	push.c	FUNCTION_22
0x4000c83	    0x48c784249802	              mov qword [rsp + 0x298], 4	       575	push.c	FUNCTION_22
0x4000c8f	    0xc78424a00200	              mov dword [rsp + 0x2a0], 4	       575	push.c	FUNCTION_22
0x4000c9a	    0x48c78424a802	              mov qword [rsp + 0x2a8], 0	       575	push.c	FUNCTION_22
0x4000ca6	    0x48899c24b002	            mov qword [rsp + 0x2b0], rbx	       575	push.c	FUNCTION_22
0x4000cae	    0x48c78424c002	              mov qword [rsp + 0x2c0], 0	       575	push.c	FUNCTION_22
0x4000cba	    0xc78424c80200	              mov dword [rsp + 0x2c8], 2	       575	push.c	FUNCTION_22
0x4000cc5	    0x48c78424d802	          mov qword [rsp + 0x2d8], 0x10 	       575	push.c	FUNCTION_22
0x4000cd1	    0xc78424e00200	              mov dword [rsp + 0x2e0], 4	       575	push.c	FUNCTION_22
0x4000cdc	    0xc78424e40200	          mov dword [rsp + 0x2e4], 0x66 	       575	push.c	FUNCTION_22
0x4000ce7	    0x48c78424e802	              mov qword [rsp + 0x2e8], 0	       575	push.c	FUNCTION_22
0x4000cf3	    0x48899c24f002	            mov qword [rsp + 0x2f0], rbx	       575	push.c	FUNCTION_22
0x4000cfb	    0x48c784240003	              mov qword [rsp + 0x300], 0	       575	push.c	FUNCTION_22
0x4000d07	    0xc78424080300	              mov dword [rsp + 0x308], 2	       575	push.c	FUNCTION_22
0x4000d12	    0x48c784241803	              mov qword [rsp + 0x318], 2	       575	push.c	FUNCTION_22
0x4000d1e	    0xc78424200300	           mov dword [rsp + 0x320], 0xc 	       575	push.c	FUNCTION_22
0x4000d29	    0x48c784242803	              mov qword [rsp + 0x328], 0	       575	push.c	FUNCTION_22
0x4000d35	    0x48c784243003	              mov qword [rsp + 0x330], 0	       575	push.c	FUNCTION_22
0x4000d41	    0x48c784243803	              mov qword [rsp + 0x338], 0	       575	push.c	FUNCTION_22
0x4000d4d	    0x48c784244003	              mov qword [rsp + 0x340], 0	       575	push.c	FUNCTION_22
0x4000d59	    0xc78424480300	              mov dword [rsp + 0x348], 1	       575	push.c	FUNCTION_22
0x4000d64	    0x48c784245003	              mov qword [rsp + 0x350], 0	       575	push.c	FUNCTION_22
0x4000d70	    0xc78424600300	           mov dword [rsp + 0x360], 0xc 	       575	push.c	FUNCTION_22
0x4000d7b	    0x48c784246803	              mov qword [rsp + 0x368], 0	       575	push.c	FUNCTION_22
0x4000d87	    0x48c784247003	              mov qword [rsp + 0x370], 0	       575	push.c	FUNCTION_22
0x4000d93	    0x48c784247803	              mov qword [rsp + 0x378], 0	       575	push.c	FUNCTION_22
0x4000d9f	    0x48c784248003	              mov qword [rsp + 0x380], 0	       575	push.c	FUNCTION_22
0x4000dab	    0xc78424880300	              mov dword [rsp + 0x388], 1	       575	push.c	FUNCTION_22
0x4000db6	    0x48c784249003	              mov qword [rsp + 0x390], 0	       575	push.c	FUNCTION_22
0x4000dc2	    0xc78424a00300	              mov dword [rsp + 0x3a0], 7	       575	push.c	FUNCTION_22
0x4000dcd	    0x48c78424a803	              mov qword [rsp + 0x3a8], 0	       575	push.c	FUNCTION_22
0x4000dd9	    0x48c78424b003	              mov qword [rsp + 0x3b0], 0	       575	push.c	FUNCTION_22
0x4000de5	    0x48c78424c003	              mov qword [rsp + 0x3c0], 0	       575	push.c	FUNCTION_22
0x4000df1	    0xc78424c80300	         mov dword [rsp + 0x3c8], 0x202 	       575	push.c	FUNCTION_22
0x4000dfc	    0x48c78424d803	              mov qword [rsp + 0x3d8], 1	       575	push.c	FUNCTION_22
0x4000e08	    0xc78424e00300	              mov dword [rsp + 0x3e0], 9	       575	push.c	FUNCTION_22
0x4000e13	    0x48c78424e803	              mov qword [rsp + 0x3e8], 0	       575	push.c	FUNCTION_22
0x4000e1f	    0x48c78424f003	              mov qword [rsp + 0x3f0], 0	       575	push.c	FUNCTION_22
0x4000e2b	    0x48c78424f803	              mov qword [rsp + 0x3f8], 0	       575	push.c	FUNCTION_22
0x4000e37	    0x48c784240004	              mov qword [rsp + 0x400], 0	       575	push.c	FUNCTION_22
0x4000e43	    0xc78424200400	              mov dword [rsp + 0x420], 9	       575	push.c	FUNCTION_22
0x4000e4e	    0x48c784242804	              mov qword [rsp + 0x428], 0	       575	push.c	FUNCTION_22
0x4000e5a	    0x48c784243004	              mov qword [rsp + 0x430], 0	       575	push.c	FUNCTION_22
0x4000e66	    0x48c784243804	              mov qword [rsp + 0x438], 0	       575	push.c	FUNCTION_22
0x4000e72	    0x48c784244004	              mov qword [rsp + 0x440], 0	       575	push.c	FUNCTION_22
0x4000e7e	    0xc78424600400	              mov dword [rsp + 0x460], 4	       575	push.c	FUNCTION_22
0x4000e89	    0xc78424640400	          mov dword [rsp + 0x464], 0x75 	       575	push.c	FUNCTION_22
0x4000e94	    0x48c784246804	              mov qword [rsp + 0x468], 0	       575	push.c	FUNCTION_22
0x4000ea0	    0x48899c247004	            mov qword [rsp + 0x470], rbx	       575	push.c	FUNCTION_22
0x4000ea8	    0x48c784248004	              mov qword [rsp + 0x480], 0	       575	push.c	FUNCTION_22
0x4000eb4	    0xc78424880400	              mov dword [rsp + 0x488], 2	       575	push.c	FUNCTION_22
0x4000ebf	    0x48c784249804	          mov qword [rsp + 0x498], 0x20 	       575	push.c	FUNCTION_22
0x4000ecb	    0xc78424a00400	              mov dword [rsp + 0x4a0], 7	       575	push.c	FUNCTION_22
0x4000ed6	    0x48c78424a804	              mov qword [rsp + 0x4a8], 0	       575	push.c	FUNCTION_22
0x4000ee2	    0x48c78424b004	              mov qword [rsp + 0x4b0], 0	       575	push.c	FUNCTION_22
0x4000eee	    0x48c78424c004	              mov qword [rsp + 0x4c0], 0	       575	push.c	FUNCTION_22
0x4000efa	    0xc78424c80400	              mov dword [rsp + 0x4c8], 2	       575	push.c	FUNCTION_22
0x4000f05	    0x48c78424d804	              mov qword [rsp + 0x4d8], 1	       575	push.c	FUNCTION_22
0x4000f11	    0xc78424e00400	              mov dword [rsp + 0x4e0], 4	       575	push.c	FUNCTION_22
0x4000f1c	    0x48c78424e804	              mov qword [rsp + 0x4e8], 0	       575	push.c	FUNCTION_22
0x4000f28	    0x48899c24f004	            mov qword [rsp + 0x4f0], rbx	       575	push.c	FUNCTION_22
0x4000f30	    0x48c784240005	              mov qword [rsp + 0x500], 0	       575	push.c	FUNCTION_22
0x4000f3c	    0xc78424080500	              mov dword [rsp + 0x508], 2	       575	push.c	FUNCTION_22
0x4000f47	    0x48c784241805	          mov qword [rsp + 0x518], 0x80 	       575	push.c	FUNCTION_22
0x4000f53	    0x48898424b005	            mov qword [rsp + 0x5b0], rax	       575	push.c	FUNCTION_22
0x4000f5b	    0x488d84248000	                   lea rax, [rsp + 0x80]	       575	push.c	FUNCTION_22
0x4000f63	    0xc78424200500	              mov dword [rsp + 0x520], 4	       575	push.c	FUNCTION_22
0x4000f6e	    0x48c784242805	              mov qword [rsp + 0x528], 0	       575	push.c	FUNCTION_22
0x4000f7a	    0x48899c243005	            mov qword [rsp + 0x530], rbx	       575	push.c	FUNCTION_22
0x4000f82	    0x488984243006	            mov qword [rsp + 0x630], rax	       575	push.c	FUNCTION_22
0x4000f8a	    0x48c784244005	              mov qword [rsp + 0x540], 0	       575	push.c	FUNCTION_22
0x4000f96	    0xc78424480500	              mov dword [rsp + 0x548], 2	       575	push.c	FUNCTION_22
0x4000fa1	    0x48c784245805	         mov qword [rsp + 0x558], 0x200 	       575	push.c	FUNCTION_22
0x4000fad	    0xc78424600500	              mov dword [rsp + 0x560], 4	       575	push.c	FUNCTION_22
0x4000fb8	    0x48c784246805	              mov qword [rsp + 0x568], 0	       575	push.c	FUNCTION_22
0x4000fc4	    0x48899c247005	            mov qword [rsp + 0x570], rbx	       575	push.c	FUNCTION_22
0x4000fcc	    0x48c784248005	              mov qword [rsp + 0x580], 0	       575	push.c	FUNCTION_22
0x4000fd8	    0xc78424880500	              mov dword [rsp + 0x588], 2	       575	push.c	FUNCTION_22
0x4000fe3	    0x48c784249805	         mov qword [rsp + 0x598], 0x400 	       575	push.c	FUNCTION_22
0x4000fef	    0xc78424a00500	           mov dword [rsp + 0x5a0], 0xc 	       575	push.c	FUNCTION_22
0x4000ffa	    0x48c78424a805	              mov qword [rsp + 0x5a8], 0	       575	push.c	FUNCTION_22
0x4001006	    0x48c78424b805	              mov qword [rsp + 0x5b8], 0	       575	push.c	FUNCTION_22
0x4001012	    0x48c78424c005	              mov qword [rsp + 0x5c0], 0	       575	push.c	FUNCTION_22
0x400101e	    0xc78424c80500	              mov dword [rsp + 0x5c8], 1	       575	push.c	FUNCTION_22
0x4001029	    0x48c78424d005	              mov qword [rsp + 0x5d0], 0	       575	push.c	FUNCTION_22
0x4001035	    0xc78424e00500	              mov dword [rsp + 0x5e0], 4	       575	push.c	FUNCTION_22
0x4001040	    0x48c78424e805	              mov qword [rsp + 0x5e8], 0	       575	push.c	FUNCTION_22
0x400104c	    0x48899c24f005	            mov qword [rsp + 0x5f0], rbx	       575	push.c	FUNCTION_22
0x4001054	    0x48c784240006	              mov qword [rsp + 0x600], 0	       575	push.c	FUNCTION_22
0x4001060	    0xc78424080600	              mov dword [rsp + 0x608], 2	       575	push.c	FUNCTION_22
0x400106b	    0x48c784241806	        mov qword [rsp + 0x618], 0x2000 	       575	push.c	FUNCTION_22
0x4001077	    0xc78424200600	           mov dword [rsp + 0x620], 0xc 	       575	push.c	FUNCTION_22
0x4001082	    0xc78424240600	          mov dword [rsp + 0x624], 0x6f 	       575	push.c	FUNCTION_22
0x400108d	    0x48c784242806	              mov qword [rsp + 0x628], 0	       575	push.c	FUNCTION_22
0x4001099	    0x48c784243806	              mov qword [rsp + 0x638], 0	       575	push.c	FUNCTION_22
0x40010a5	    0x48c784244006	              mov qword [rsp + 0x640], 0	       575	push.c	FUNCTION_22
0x40010b1	    0x48c784245006	              mov qword [rsp + 0x650], 0	       575	push.c	FUNCTION_22
0x40010bd	    0xc78424600600	              mov dword [rsp + 0x660], 7	       575	push.c	FUNCTION_22
0x40010c8	    0xc78424640600	          mov dword [rsp + 0x664], 0x34 	       575	push.c	FUNCTION_22
0x40010d3	    0x48c784246806	              mov qword [rsp + 0x668], 0	       575	push.c	FUNCTION_22
0x40010df	    0x48c784247006	              mov qword [rsp + 0x670], 0	       575	push.c	FUNCTION_22
0x40010eb	    0x48c784248006	              mov qword [rsp + 0x680], 0	       575	push.c	FUNCTION_22
0x40010f7	    0xc78424880600	              mov dword [rsp + 0x688], 2	       575	push.c	FUNCTION_22
0x4001102	    0x48c784249806	              mov qword [rsp + 0x698], 1	       575	push.c	FUNCTION_22
0x400110e	    0xc78424a00600	              mov dword [rsp + 0x6a0], 7	       575	push.c	FUNCTION_22
0x4001119	    0xc78424a40600	          mov dword [rsp + 0x6a4], 0x36 	       575	push.c	FUNCTION_22
0x4001124	    0x48c78424a806	              mov qword [rsp + 0x6a8], 0	       575	push.c	FUNCTION_22
0x4001130	    0x48c78424b006	              mov qword [rsp + 0x6b0], 0	       575	push.c	FUNCTION_22
0x400113c	    0x48c78424c006	              mov qword [rsp + 0x6c0], 0	       575	push.c	FUNCTION_22
0x4001148	    0xc78424c80600	              mov dword [rsp + 0x6c8], 2	       575	push.c	FUNCTION_22
0x4001153	    0x48c78424d806	              mov qword [rsp + 0x6d8], 2	       575	push.c	FUNCTION_22
0x400115f	      0xe800000000	                          call 0x4001164	       616	push.c	FUNCTION_22	CALL_23
0x4001164	          0x4889de	                            mov rsi, rbx	       617	push.c	FUNCTION_22	CALL_24
0x4001167	      0xbf00000000	                              mov edi, 0	       617	push.c	FUNCTION_22	CALL_24
0x400116c	      0xe800000000	                          call 0x4001171	       617	push.c	FUNCTION_22	CALL_24
0x4001171	    0x488d8c24a000	                   lea rcx, [rsp + 0xa0]	       618	push.c	FUNCTION_22	CALL_25
0x4001179	          0x4531c9	                            xor r9d, r9d	       618	push.c	FUNCTION_22	CALL_25
0x400117c	            0x89ef	                            mov edi, ebp	       618	push.c	FUNCTION_22	CALL_25
0x400117e	    0x41b800000000	                              mov r8d, 0	       618	push.c	FUNCTION_22	CALL_25
0x4001184	          0x4c89ea	                            mov rdx, r13	       618	push.c	FUNCTION_22	CALL_25
0x4001187	          0x4c89e6	                            mov rsi, r12	       618	push.c	FUNCTION_22	CALL_25
0x400118a	      0xe800000000	                          call 0x400118f	       618	push.c	FUNCTION_22	CALL_25
0x400118f	    0x448b94248800	           mov r10d, dword [rsp + 0x88] 	       621	push.c	FUNCTION_22
0x4001197	            0x89c5	                            mov ebp, eax	       618	push.c	FUNCTION_22	CALL_25
0x4001199	    0x488d84248000	                   lea rax, [rsp + 0x80]	       621	push.c	FUNCTION_22
0x40011a1	          0x4585d2	                         test r10d, r10d	       621	push.c	FUNCTION_22
0x40011a4	        0x4c0f45f0	                         cmovne r14, rax	       621	push.c	FUNCTION_22
0x40011a8	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       483	push.c	FUNCTION_20	SWITCH_1
0x40011ac	          0x83f801	                              cmp eax, 1	       483	push.c	FUNCTION_20	SWITCH_1
0x40011af	     0xf8463050000	                            je 0x4001718	       483	push.c	FUNCTION_20	SWITCH_1
0x40011b5	          0x83f802	                              cmp eax, 2	       483	push.c	FUNCTION_20	SWITCH_1
0x40011b8	     0xf8442050000	                            je 0x4001700	       483	push.c	FUNCTION_20	SWITCH_1
0x40011be	            0x85c0	                           test eax, eax	       483	push.c	FUNCTION_20	SWITCH_1
0x40011c0	     0xf8423050000	                            je 0x40016e9	       483	push.c	FUNCTION_20	SWITCH_1
0x40011c6	    0x448b0d000000	            mov r9d, dword [0x040011cd] 	       624	push.c	FUNCTION_22	IF_1
0x40011cd	          0x4585c9	                           test r9d, r9d	       624	push.c	FUNCTION_22	IF_1
0x40011d0	     0xf843a040000	                            je 0x4001610	       624	push.c	FUNCTION_22	IF_1
0x40011d6	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	       624	push.c	FUNCTION_22	IF_1
0x40011db	          0x4585c0	                           test r8d, r8d	       624	push.c	FUNCTION_22	IF_1
0x40011de	     0xf8591080000	                           jne 0x4001a75	       624	push.c	FUNCTION_22	IF_1
0x40011e4	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       624	push.c	FUNCTION_22	IF_1
0x40011e8	          0x83e009	                              and eax, 9	       624	push.c	FUNCTION_22	IF_1
0x40011eb	     0xf8584080000	                           jne 0x4001a75	       624	push.c	FUNCTION_22	IF_1
0x40011f1	          0x83fd01	                              cmp ebp, 1	       626	push.c	FUNCTION_22	IF_2
0x40011f4	     0xf8eda080000	                           jle 0x4001ad4	       626	push.c	FUNCTION_22	IF_2
0x40011fa	    0x8b1500000000	            mov edx, dword [0x04001200] 	       629	push.c	FUNCTION_22	IF_3
0x4001200	          0x83fafc	             cmp edx, 0xfffffffffffffffc	       629	push.c	FUNCTION_22	IF_3
0x4001203	     0xf841a040000	                            je 0x4001623	       629	push.c	FUNCTION_22	IF_3
0x4001209	          0x83faff	             cmp edx, 0xffffffffffffffff	       631	push.c	FUNCTION_22	ELSE_1	IF_4
0x400120c	     0xf84fe050000	                            je 0x4001810	       631	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001212	          0x83fafb	             cmp edx, 0xfffffffffffffffb	       633	push.c	FUNCTION_22	ELSE_2	IF_5
0x4001215	     0xf8402060000	                            je 0x400181d	       633	push.c	FUNCTION_22	ELSE_2	IF_5
0x400121b	            0x85c0	                           test eax, eax	       636	push.c	FUNCTION_22	IF_6
0x400121d	     0xf850d040000	                           jne 0x4001630	       636	push.c	FUNCTION_22	IF_6
0x4001223	            0x85ed	                           test ebp, ebp	       639	push.c	FUNCTION_22	IF_7
0x4001225	     0xf8ed5010000	                           jle 0x4001400	       639	push.c	FUNCTION_22	IF_7
0x400122b	        0x498b0424	                    mov rax, qword [r12]	       640	push.c	FUNCTION_22	IF_7
0x400122f	        0x4983c408	                              add r12, 8	       641	push.c	FUNCTION_22	IF_7	CALL_32
0x4001233	          0x83ed01	                              sub ebp, 1	       115	push.c	FUNCTION_5	FOR_1
0x4001236	      0x4889442418	             mov qword [rsp + 0x18], rax	       640	push.c	FUNCTION_22	IF_7
0x400123b	      0x4889442430	             mov qword [rsp + 0x30], rax	       640	push.c	FUNCTION_22	IF_7
0x4001240	     0xf84ba010000	                            je 0x4001400	       115	push.c	FUNCTION_5	FOR_1
0x4001246	    0x48c744241000	               mov qword [rsp + 0x10], 0	       115	push.c	FUNCTION_5	FOR_1
0x400124f	    0x48c744240800	                  mov qword [rsp + 8], 0	       115	push.c	FUNCTION_5	FOR_1
0x4001258	            0x31db	                            xor ebx, ebx	       115	push.c	FUNCTION_5	FOR_1
0x400125a	    0x49bdffffffff	         movabs r13, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001264	      0xe9f6000000	                           jmp 0x400135f	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001269	     0xf1f80000000	                         nop dword [rax]	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001270	      0x41807f0161	                cmp byte [r15 + 1], 0x61	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4001275	     0xf85fd000000	                           jne 0x4001378	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x400127b	      0x41807f0267	                cmp byte [r15 + 2], 0x67	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4001280	     0xf85f2000000	                           jne 0x4001378	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4001286	      0x41807f0300	                   cmp byte [r15 + 3], 0	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x400128b	     0xf85e7000000	                           jne 0x4001378	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4001291	          0x83c301	                              add ebx, 1	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4001294	    0x48c744246000	               mov qword [rsp + 0x60], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x400129d	    0x48c744246800	               mov qword [rsp + 0x68], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x40012a6	            0x39dd	                            cmp ebp, ebx	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40012a8	    0x48c744247000	               mov qword [rsp + 0x70], 0	       118	push.c	FUNCTION_5	FOR_1	IF_1
0x40012b1	     0xf8e51070000	                           jle 0x4001a08	       119	push.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x40012b7	    0x8b3d00000000	            mov edi, dword [0x040012bd] 	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x40012bd	      0x498b541408	         mov rdx, qword [r12 + rdx + 8] 	       121	push.c	FUNCTION_5	FOR_1	IF_1
0x40012c2	            0x85ff	                           test edi, edi	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x40012c4	     0xf842e030000	                            je 0x40015f8	       122	push.c	FUNCTION_5	FOR_1	IF_1	IF_3
0x40012ca	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x40012cf	      0xbe00000000	                              mov esi, 0	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x40012d4	            0x31c0	                            xor eax, eax	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x40012d6	      0xe800000000	                          call 0x40012db	       123	push.c	FUNCTION_5	FOR_1	IF_1	CALL_4
0x40012db	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x40012e0	            0x31f6	                            xor esi, esi	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x40012e2	      0xe800000000	                          call 0x40012e7	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x40012e7	          0x4989c7	                            mov r15, rax	       102	push.c	FUNCTION_4	IF_4	IF_5	CALL_9
0x40012ea	    0x8b0500000000	            mov eax, dword [0x040012f0] 	        67	push.c	FUNCTION_3
0x40012f0	          0x8d4801	                      lea ecx, [rax + 1]	        67	push.c	FUNCTION_3
0x40012f3	    0x8b0500000000	            mov eax, dword [0x040012f9] 	        68	push.c	FUNCTION_3	CALL_1
0x40012f9	    0x890d00000000	            mov dword [0x040012ff], ecx 	        67	push.c	FUNCTION_3
0x40012ff	            0x39c1	                            cmp ecx, eax	        68	push.c	FUNCTION_3	CALL_1
0x4001301	     0xf8ed9000000	                           jle 0x40013e0	        68	push.c	FUNCTION_3	CALL_1
0x4001307	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        68	push.c	FUNCTION_3	CALL_1
0x400130b	            0x89c6	                            mov esi, eax	        68	push.c	FUNCTION_3	CALL_1
0x400130d	          0xc1ee1f	                           shr esi, 0x1f	        68	push.c	FUNCTION_3	CALL_1
0x4001310	             0x1c6	                            add esi, eax	        68	push.c	FUNCTION_3	CALL_1
0x4001312	            0xd1fe	                              sar esi, 1	        68	push.c	FUNCTION_3	CALL_1
0x4001314	            0x39ce	                            cmp esi, ecx	        68	push.c	FUNCTION_3	CALL_1
0x4001316	           0xf4cf1	                          cmovl esi, ecx	        68	push.c	FUNCTION_3	CALL_1
0x4001319	          0x4863d6	                         movsxd rdx, esi	        68	push.c	FUNCTION_3	CALL_1
0x400131c	    0x893500000000	            mov dword [0x04001322], esi 	        68	push.c	FUNCTION_3	CALL_1
0x4001322	          0x4c39ea	                            cmp rdx, r13	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001325	     0xf8725070000	                            ja 0x4001a50	       795	git-compat-util.h	FUNCTION_37	IF_1
0x400132b	    0x488b3d000000	            mov rdi, qword [0x04001332] 	        68	push.c	FUNCTION_3	CALL_1
0x4001332	    0x488d34d50000	                        lea rsi, [rdx*8]	        68	push.c	FUNCTION_3	CALL_1
0x400133a	          0x83c301	                              add ebx, 1	       115	push.c	FUNCTION_5	FOR_1
0x400133d	      0xe800000000	                          call 0x4001342	        68	push.c	FUNCTION_3	CALL_1
0x4001342	    0x8b0d00000000	            mov ecx, dword [0x04001348] 	        68	push.c	FUNCTION_3	CALL_1
0x4001348	            0x39dd	                            cmp ebp, ebx	       115	push.c	FUNCTION_5	FOR_1
0x400134a	    0x488905000000	            mov qword [0x04001351], rax 	        68	push.c	FUNCTION_3	CALL_1
0x4001351	          0x4863c9	                         movsxd rcx, ecx	        69	push.c	FUNCTION_3
0x4001354	      0x4c897cc8f8	        mov qword [rax + rcx*8 - 8], r15	        69	push.c	FUNCTION_3
0x4001359	     0xf8ea1000000	                           jle 0x4001400	       115	push.c	FUNCTION_5	FOR_1
0x400135f	          0x4863c3	                         movsxd rax, ebx	       116	push.c	FUNCTION_5	FOR_1
0x4001362	        0x4d8b3cc4	            mov r15, qword [r12 + rax*8]	       116	push.c	FUNCTION_5	FOR_1
0x4001366	    0x488d14c50000	                        lea rdx, [rax*8]	       116	push.c	FUNCTION_5	FOR_1
0x400136e	        0x41803f74	                    cmp byte [r15], 0x74	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4001372	     0xf84f8feffff	                            je 0x4001270	       117	push.c	FUNCTION_5	FOR_1	IF_1	CALL_1
0x4001378	    0x8b3500000000	            mov esi, dword [0x0400137e] 	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x400137e	            0x85f6	                           test esi, esi	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x4001380	     0xf847a010000	                            je 0x4001500	       127	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x4001386	      0xbe3a000000	                           mov esi, 0x3a	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x400138b	          0x4c89ff	                            mov rdi, r15	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x400138e	    0x48c744246000	               mov qword [rsp + 0x60], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x4001397	    0x48c744246800	               mov qword [rsp + 0x68], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x40013a0	    0x48c744247000	               mov qword [rsp + 0x70], 0	       128	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4
0x40013a9	      0xe800000000	                          call 0x40013ae	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40013ae	          0x4885c0	                           test rax, rax	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40013b1	     0xf85aa060000	                           jne 0x4001a61	       129	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	IF_5	CALL_7
0x40013b7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40013bc	          0x4c89fa	                            mov rdx, r15	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40013bf	      0xbe00000000	                              mov esi, 0	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40013c4	            0x31c0	                            xor eax, eax	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40013c6	      0xe800000000	                          call 0x40013cb	       131	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_10
0x40013cb	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x40013d0	            0x31f6	                            xor esi, esi	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x40013d2	      0xe800000000	                          call 0x40013d7	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x40013d7	          0x4989c7	                            mov r15, rax	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x40013da	      0xe90bffffff	                           jmp 0x40012ea	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x40013df	              0x90	                                     nop	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x40013e0	    0x488b05000000	            mov rax, qword [0x040013e7] 	       132	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_11
0x40013e7	          0x83c301	                              add ebx, 1	       115	push.c	FUNCTION_5	FOR_1
0x40013ea	          0x4863c9	                         movsxd rcx, ecx	        69	push.c	FUNCTION_3
0x40013ed	            0x39dd	                            cmp ebp, ebx	       115	push.c	FUNCTION_5	FOR_1
0x40013ef	      0x4c897cc8f8	        mov qword [rax + rcx*8 - 8], r15	        69	push.c	FUNCTION_3
0x40013f4	     0xf8f65ffffff	                            jg 0x400135f	       115	push.c	FUNCTION_5	FOR_1
0x40013fa	    0x660f1f440000	                    nop word [rax + rax]	       115	push.c	FUNCTION_5	FOR_1
0x4001400	          0x498b1e	                    mov rbx, qword [r14]	       644	push.c	FUNCTION_22	CALL_33
0x4001403	          0x4885db	                           test rbx, rbx	       644	push.c	FUNCTION_22	CALL_33
0x4001406	            0x7431	                            je 0x4001439	       644	push.c	FUNCTION_22	CALL_33
0x4001408	        0x418b6e08	                mov ebp, dword [r14 + 8]	       644	push.c	FUNCTION_22	CALL_33
0x400140c	        0x48c1e504	                              shl rbp, 4	       644	push.c	FUNCTION_22	CALL_33
0x4001410	          0x4801dd	                            add rbp, rbx	       644	push.c	FUNCTION_22	CALL_33
0x4001413	            0xeb1f	                           jmp 0x4001434	       644	push.c	FUNCTION_22	CALL_33
0x4001415	           0xf1f00	                         nop dword [rax]	       644	push.c	FUNCTION_22	CALL_33
0x4001418	          0x488b3b	                    mov rdi, qword [rbx]	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x400141b	      0xbe0a000000	                            mov esi, 0xa	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001420	      0xe800000000	                          call 0x4001425	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001425	          0x4885c0	                           test rax, rax	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x4001428	     0xf85ad050000	                           jne 0x40019db	       645	push.c	FUNCTION_22	IF_8	CALL_34
0x400142e	        0x4883c310	                           add rbx, 0x10	       644	push.c	FUNCTION_22	CALL_33
0x4001432	            0x7405	                            je 0x4001439	       644	push.c	FUNCTION_22	CALL_33
0x4001434	          0x4839eb	                            cmp rbx, rbp	       644	push.c	FUNCTION_22	CALL_33
0x4001437	            0x72df	                            jb 0x4001418	       644	push.c	FUNCTION_22	CALL_33
0x4001439	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	       648	push.c	FUNCTION_22	CALL_37
0x400143e	        0x8b5c2424	            mov ebx, dword [rsp + 0x24] 	       648	push.c	FUNCTION_22	CALL_37
0x4001442	          0x4889ef	                            mov rdi, rbp	       397	push.c	FUNCTION_18	CALL_1
0x4001445	      0xe800000000	                          call 0x400144a	       397	push.c	FUNCTION_18	CALL_1
0x400144a	          0x4885c0	                           test rax, rax	       401	push.c	FUNCTION_18	IF_1
0x400144d	          0x4989c5	                            mov r13, rax	       397	push.c	FUNCTION_18	CALL_1
0x4001450	     0xf84ba040000	                            je 0x4001910	       401	push.c	FUNCTION_18	IF_1
0x4001456	    0x418b95800000	            mov edx, dword [r13 + 0x80] 	       415	push.c	FUNCTION_18	IF_3
0x400145d	            0x89d8	                            mov eax, ebx	       415	push.c	FUNCTION_18	IF_3
0x400145f	        0x418b4e08	                mov ecx, dword [r14 + 8]	       418	push.c	FUNCTION_18	IF_4
0x4001463	          0x83c80a	                             or eax, 0xa	       415	push.c	FUNCTION_18	IF_3
0x4001466	            0x85d2	                           test edx, edx	       415	push.c	FUNCTION_18	IF_3
0x4001468	           0xf45d8	                         cmovne ebx, eax	       415	push.c	FUNCTION_18	IF_3
0x400146b	            0x89d8	                            mov eax, ebx	       418	push.c	FUNCTION_18	IF_4
0x400146d	          0x80cc40	                             or ah, 0x40	       418	push.c	FUNCTION_18	IF_4
0x4001470	            0x85c9	                           test ecx, ecx	       418	push.c	FUNCTION_18	IF_4
0x4001472	           0xf45d8	                         cmovne ebx, eax	       418	push.c	FUNCTION_18	IF_4
0x4001475	          0xf6c301	                              test bl, 1	       420	push.c	FUNCTION_18	IF_5
0x4001478	     0xf8532020000	                           jne 0x40016b0	       420	push.c	FUNCTION_18	IF_5
0x400147e	          0xf6c308	                              test bl, 8	       426	push.c	FUNCTION_18	IF_7
0x4001481	     0xf84a9020000	                            je 0x4001730	       426	push.c	FUNCTION_18	IF_7
0x4001487	    0x488b05000000	            mov rax, qword [0x0400148e] 	       426	push.c	FUNCTION_18	IF_7
0x400148e	          0x4885c0	                           test rax, rax	       426	push.c	FUNCTION_18	IF_7
0x4001491	     0xf8450050000	                            je 0x40019e7	       426	push.c	FUNCTION_18	IF_7
0x4001497	          0x488b30	                    mov rsi, qword [rax]	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x400149a	      0xbf00000000	                              mov edi, 0	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x400149f	      0xb90c000000	                            mov ecx, 0xc	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x40014a4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x40014a9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x40014ab	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x40014b0	     0xf85b9030000	                           jne 0x400186f	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x40014b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       427	push.c	FUNCTION_18	IF_7	IF_8	CALL_9
0x40014c0	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_52
0x40014c2	      0xe800000000	                          call 0x40014c7	        54	gettext.h	FUNCTION_52
0x40014c7	          0x4889c7	                            mov rdi, rax	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x40014ca	            0x31c0	                            xor eax, eax	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x40014cc	      0xe800000000	                          call 0x40014d1	       429	push.c	FUNCTION_18	IF_7	CALL_11
0x40014d1	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       649	push.c	FUNCTION_22	CALL_38
0x40014d9	            0x31f6	                            xor esi, esi	       649	push.c	FUNCTION_22	CALL_38
0x40014db	      0xe800000000	                          call 0x40014e0	       649	push.c	FUNCTION_22	CALL_38
0x40014e0	            0x31f6	                            xor esi, esi	       650	push.c	FUNCTION_22	CALL_39
0x40014e2	      0xbf00000000	                              mov edi, 0	       650	push.c	FUNCTION_22	CALL_39
0x40014e7	      0xe800000000	                          call 0x40014ec	       650	push.c	FUNCTION_22	CALL_39
0x40014ec	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	       652	push.c	FUNCTION_22	CALL_40
0x40014f4	      0xbf00000000	                              mov edi, 0	       652	push.c	FUNCTION_22	CALL_40
0x40014f9	      0xe800000000	                          call 0x40014fe	       652	push.c	FUNCTION_22	CALL_40
0x40014fe	            0x6690	                                     nop	       652	push.c	FUNCTION_22	CALL_40
0x4001500	      0xbe3a000000	                           mov esi, 0x3a	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x4001505	          0x4c89ff	                            mov rdi, r15	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x4001508	      0xe800000000	                          call 0x400150d	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x400150d	          0x4885c0	                           test rax, rax	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x4001510	     0xf85d4fdffff	                           jne 0x40012ea	       133	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_12
0x4001516	    0x48837c240800	                  cmp qword [rsp + 8], 0	       134	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7
0x400151c	     0xf847e040000	                            je 0x40019a0	       134	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7
0x4001522	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x4001527	      0x488d542438	                   lea rdx, [rsp + 0x38]	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x400152c	          0x4c89ff	                            mov rdi, r15	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x400152f	    0x48c744243800	               mov qword [rsp + 0x38], 0	        75	push.c	FUNCTION_4
0x4001538	      0xe800000000	                          call 0x400153d	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x400153d	          0x83f801	                              cmp eax, 1	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x4001540	     0xf85a4fdffff	                           jne 0x40012ea	        78	push.c	FUNCTION_4	IF_1	CALL_1
0x4001546	      0x488b542408	                mov rdx, qword [rsp + 8]	        81	push.c	FUNCTION_4	IF_2
0x400154b	        0x488b7a50	            mov rdi, qword [rdx + 0x50] 	        81	push.c	FUNCTION_4	IF_2
0x400154f	          0x4885ff	                           test rdi, rdi	        81	push.c	FUNCTION_4	IF_2
0x4001552	     0xf8421030000	                            je 0x4001879	        81	push.c	FUNCTION_4	IF_2
0x4001558	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        84	push.c	FUNCTION_4	IF_2
0x400155d	          0x8b7258	            mov esi, dword [rdx + 0x58] 	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4001560	      0x488d542440	                   lea rdx, [rsp + 0x40]	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4001565	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_57	CALL_6
0x400156e	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_57	CALL_6
0x4001577	        0x4883c070	                           add rax, 0x70	        84	push.c	FUNCTION_4	IF_2
0x400157b	      0x4889442448	             mov qword [rsp + 0x48], rax	        84	push.c	FUNCTION_4	IF_2
0x4001580	      0xe800000000	                          call 0x4001585	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4001585	            0x85c0	                           test eax, eax	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4001587	     0xf85ec020000	                           jne 0x4001879	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x400158d	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	        86	push.c	FUNCTION_4	IF_2	IF_3
0x4001592	          0x4d85c0	                             test r8, r8	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x4001595	     0xf84de020000	                            je 0x4001879	        85	push.c	FUNCTION_4	IF_2	IF_3	CALL_3
0x400159b	      0xf644244001	               test byte [rsp + 0x40], 1	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015a0	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015a5	      0xb800000000	                              mov eax, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015aa	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015af	      0xba00000000	                              mov edx, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015b4	      0xbe00000000	                              mov esi, 0	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015b9	    0x48c744246000	               mov qword [rsp + 0x60], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x40015c2	    0x48c744246800	               mov qword [rsp + 0x68], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x40015cb	    0x48c744247000	               mov qword [rsp + 0x70], 0	        87	push.c	FUNCTION_4	IF_2	IF_3
0x40015d4	        0x480f44d0	                          cmove rdx, rax	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015d8	            0x31c0	                            xor eax, eax	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015da	      0xe800000000	                          call 0x40015df	        88	push.c	FUNCTION_4	IF_2	IF_3	CALL_4
0x40015df	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x40015e4	            0x31f6	                            xor esi, esi	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x40015e6	      0xe800000000	                          call 0x40015eb	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x40015eb	          0x4989c7	                            mov r15, rax	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x40015ee	      0xe9f7fcffff	                           jmp 0x40012ea	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x40015f3	       0xf1f440000	                   nop dword [rax + rax]	        91	push.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x40015f8	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x40015fd	      0xbe00000000	                              mov esi, 0	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x4001602	            0x31c0	                            xor eax, eax	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x4001604	      0xe800000000	                          call 0x4001609	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x4001609	      0xe9cdfcffff	                           jmp 0x40012db	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x400160e	            0x6690	                                     nop	       125	push.c	FUNCTION_5	FOR_1	IF_1	CALL_5
0x4001610	    0x8b1500000000	            mov edx, dword [0x04001616] 	       629	push.c	FUNCTION_22	IF_3
0x4001616	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       629	push.c	FUNCTION_22	IF_3
0x400161a	          0x83fafc	             cmp edx, 0xfffffffffffffffc	       629	push.c	FUNCTION_22	IF_3
0x400161d	     0xf85e6fbffff	                           jne 0x4001209	       629	push.c	FUNCTION_22	IF_3
0x4001623	      0x834c242440	            or dword [rsp + 0x24], 0x40 	       630	push.c	FUNCTION_22	IF_3
0x4001628	            0x85c0	                           test eax, eax	       636	push.c	FUNCTION_22	IF_6
0x400162a	     0xf84f3fbffff	                            je 0x4001223	       636	push.c	FUNCTION_22	IF_6
0x4001630	    0x8b0500000000	            mov eax, dword [0x04001636] 	        67	push.c	FUNCTION_3
0x4001636	          0x8d4801	                      lea ecx, [rax + 1]	        67	push.c	FUNCTION_3
0x4001639	    0x8b0500000000	            mov eax, dword [0x0400163f] 	        68	push.c	FUNCTION_3	CALL_1
0x400163f	    0x890d00000000	            mov dword [0x04001645], ecx 	        67	push.c	FUNCTION_3
0x4001645	            0x39c1	                            cmp ecx, eax	        68	push.c	FUNCTION_3	CALL_1
0x4001647	     0xf8e16020000	                           jle 0x4001863	        68	push.c	FUNCTION_3	CALL_1
0x400164d	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        68	push.c	FUNCTION_3	CALL_1
0x4001651	            0x89c2	                            mov edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x4001653	          0xc1ea1f	                           shr edx, 0x1f	        68	push.c	FUNCTION_3	CALL_1
0x4001656	             0x1c2	                            add edx, eax	        68	push.c	FUNCTION_3	CALL_1
0x4001658	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001662	            0xd1fa	                              sar edx, 1	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001664	            0x39ca	                            cmp edx, ecx	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001666	           0xf4cd1	                          cmovl edx, ecx	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001669	    0x891500000000	            mov dword [0x0400166f], edx 	       795	git-compat-util.h	FUNCTION_37	IF_1
0x400166f	          0x4863d2	                         movsxd rdx, edx	        68	push.c	FUNCTION_3	CALL_1
0x4001672	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4001675	     0xf87d5030000	                            ja 0x4001a50	       795	git-compat-util.h	FUNCTION_37	IF_1
0x400167b	    0x488b3d000000	            mov rdi, qword [0x04001682] 	        68	push.c	FUNCTION_3	CALL_1
0x4001682	    0x488d34d50000	                        lea rsi, [rdx*8]	        68	push.c	FUNCTION_3	CALL_1
0x400168a	      0xe800000000	                          call 0x400168f	        68	push.c	FUNCTION_3	CALL_1
0x400168f	    0x8b0d00000000	            mov ecx, dword [0x04001695] 	        68	push.c	FUNCTION_3	CALL_1
0x4001695	    0x488905000000	            mov qword [0x0400169c], rax 	        68	push.c	FUNCTION_3	CALL_1
0x400169c	          0x4863d1	                         movsxd rdx, ecx	        69	push.c	FUNCTION_3
0x400169f	    0x48c744d0f800	          mov qword [rax + rdx*8 - 8], 0	        69	push.c	FUNCTION_3
0x40016a8	      0xe976fbffff	                           jmp 0x4001223	        69	push.c	FUNCTION_3
0x40016ad	           0xf1f00	                         nop dword [rax]	        69	push.c	FUNCTION_3
0x40016b0	    0x488b05000000	            mov rax, qword [0x040016b7] 	       420	push.c	FUNCTION_18	IF_5
0x40016b7	          0x4885c0	                           test rax, rax	       420	push.c	FUNCTION_18	IF_5
0x40016ba	     0xf84af020000	                            je 0x400196f	       420	push.c	FUNCTION_18	IF_5
0x40016c0	          0x488b30	                    mov rsi, qword [rax]	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x40016c3	      0xbf00000000	                              mov edi, 0	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x40016c8	      0xb90c000000	                            mov ecx, 0xc	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x40016cd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x40016d2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x40016d4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x40016d9	     0xf84e1fdffff	                            je 0x40014c0	       421	push.c	FUNCTION_18	IF_5	IF_6	CALL_6
0x40016df	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x40016e4	      0xe9d7fdffff	                           jmp 0x40014c0	        54	gettext.h	FUNCTION_52
0x40016e9	    0x81642424ffe7	      and dword [rsp + 0x24], 0xffffe7ff	       485	push.c	FUNCTION_20	SWITCH_1
0x40016f1	      0xe9d0faffff	                           jmp 0x40011c6	       485	push.c	FUNCTION_20	SWITCH_1
0x40016f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       485	push.c	FUNCTION_20	SWITCH_1
0x4001700	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       489	push.c	FUNCTION_20	SWITCH_1
0x4001704	          0x80e4ef	                            and ah, 0xef	       489	push.c	FUNCTION_20	SWITCH_1
0x4001707	          0x80cc08	                                or ah, 8	       489	push.c	FUNCTION_20	SWITCH_1
0x400170a	        0x89442424	             mov dword [rsp + 0x24], eax	       489	push.c	FUNCTION_20	SWITCH_1
0x400170e	      0xe9b3faffff	                           jmp 0x40011c6	       489	push.c	FUNCTION_20	SWITCH_1
0x4001713	       0xf1f440000	                   nop dword [rax + rax]	       489	push.c	FUNCTION_20	SWITCH_1
0x4001718	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       493	push.c	FUNCTION_20	SWITCH_1
0x400171c	          0x80e4f7	                            and ah, 0xf7	       493	push.c	FUNCTION_20	SWITCH_1
0x400171f	          0x80cc10	                             or ah, 0x10	       493	push.c	FUNCTION_20	SWITCH_1
0x4001722	        0x89442424	             mov dword [rsp + 0x24], eax	       493	push.c	FUNCTION_20	SWITCH_1
0x4001726	      0xe99bfaffff	                           jmp 0x40011c6	       493	push.c	FUNCTION_20	SWITCH_1
0x400172b	       0xf1f440000	                   nop dword [rax + rax]	       493	push.c	FUNCTION_20	SWITCH_1
0x4001730	            0x89d8	                            mov eax, ebx	       432	push.c	FUNCTION_18	IF_9
0x4001732	          0x83e009	                              and eax, 9	       432	push.c	FUNCTION_18	IF_9
0x4001735	          0x83f809	                              cmp eax, 9	       432	push.c	FUNCTION_18	IF_9
0x4001738	     0xf843f020000	                            je 0x400197d	       432	push.c	FUNCTION_18	IF_9
0x400173e	    0x48833d000000	               cmp qword [0x04001746], 0	       437	push.c	FUNCTION_18	IF_10
0x4001746	            0x751d	                           jne 0x4001765	       437	push.c	FUNCTION_18	IF_10
0x4001748	        0x418b4558	            mov eax, dword [r13 + 0x58] 	       438	push.c	FUNCTION_18	IF_10	IF_11
0x400174c	            0x85c0	                           test eax, eax	       438	push.c	FUNCTION_18	IF_10	IF_11
0x400174e	     0xf84c0020000	                            je 0x4001a14	       438	push.c	FUNCTION_18	IF_10	IF_11
0x4001754	        0x498b5548	            mov rdx, qword [r13 + 0x48] 	       439	push.c	FUNCTION_18	IF_10	IF_11
0x4001758	    0x890500000000	            mov dword [0x0400175e], eax 	       440	push.c	FUNCTION_18	IF_10	IF_11
0x400175e	    0x488915000000	            mov qword [0x04001765], rdx 	       439	push.c	FUNCTION_18	IF_10	IF_11
0x4001765	        0x418b4540	            mov eax, dword [r13 + 0x40] 	       147	push.c	FUNCTION_6	IF_1
0x4001769	            0x85c0	                           test eax, eax	       147	push.c	FUNCTION_6	IF_1
0x400176b	     0xf84b9000000	                            je 0x400182a	       147	push.c	FUNCTION_6	IF_1
0x4001771	        0x498b6d38	            mov rbp, qword [r13 + 0x38] 	       148	push.c	FUNCTION_6	IF_1
0x4001775	            0x85c0	                           test eax, eax	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x4001777	     0xf8e57020000	                           jle 0x40019d4	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x400177d	          0x83e801	                              sub eax, 1	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x4001780	          0xf6c740	                           test bh, 0x40	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x4001783	     0xf85ae010000	                           jne 0x4001937	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x4001789	      0x4c8d74c508	              lea r14, [rbp + rax*8 + 8]	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x400178e	          0x4531e4	                          xor r12d, r12d	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x4001791	     0xf1f80000000	                         nop dword [rax]	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x4001798	        0x488b7500	                    mov rsi, qword [rbp]	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x400179c	          0x4c89ef	                            mov rdi, r13	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x400179f	      0xe800000000	                          call 0x40017a4	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x40017a4	            0x89de	                            mov esi, ebx	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40017a6	          0x4889c7	                            mov rdi, rax	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40017a9	      0xe8a2ecffff	              call sym.push_with_options	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x40017ae	          0x83f801	                              cmp eax, 1	       453	push.c	FUNCTION_18	IF_13	FOR_1	IF_15
0x40017b1	        0x4183dcff	            sbb r12d, 0xffffffffffffffff	       453	push.c	FUNCTION_18	IF_13	FOR_1	IF_15
0x40017b5	        0x4883c508	                              add rbp, 8	       453	push.c	FUNCTION_18	IF_13	FOR_1	IF_15
0x40017b9	          0x4939ee	                            cmp r14, rbp	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40017bc	            0x75da	                           jne 0x4001798	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40017be	            0x31db	                            xor ebx, ebx	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40017c0	          0x4585e4	                         test r12d, r12d	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40017c3	           0xf95c3	                                setne bl	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40017c6	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	       649	push.c	FUNCTION_22	CALL_38
0x40017ce	            0x31f6	                            xor esi, esi	       649	push.c	FUNCTION_22	CALL_38
0x40017d0	      0xe800000000	                          call 0x40017d5	       649	push.c	FUNCTION_22	CALL_38
0x40017d5	            0x31f6	                            xor esi, esi	       650	push.c	FUNCTION_22	CALL_39
0x40017d7	      0xbf00000000	                              mov edi, 0	       650	push.c	FUNCTION_22	CALL_39
0x40017dc	      0xe800000000	                          call 0x40017e1	       650	push.c	FUNCTION_22	CALL_39
0x40017e1	    0x488b94242807	           mov rdx, qword [rsp + 0x728] 	       655	push.c	FUNCTION_22
0x40017e9	    0x644833142528	                xor rdx, qword fs:[0x28]	       655	push.c	FUNCTION_22
0x40017f2	            0x89d8	                            mov eax, ebx	       655	push.c	FUNCTION_22
0x40017f4	     0xf85ee020000	                           jne 0x4001ae8	       655	push.c	FUNCTION_22
0x40017fa	    0x4881c4380700	                          add rsp, 0x738	       655	push.c	FUNCTION_22
0x4001801	              0x5b	                                 pop rbx	       655	push.c	FUNCTION_22
0x4001802	              0x5d	                                 pop rbp	       655	push.c	FUNCTION_22
0x4001803	            0x415c	                                 pop r12	       655	push.c	FUNCTION_22
0x4001805	            0x415d	                                 pop r13	       655	push.c	FUNCTION_22
0x4001807	            0x415e	                                 pop r14	       655	push.c	FUNCTION_22
0x4001809	            0x415f	                                 pop r15	       655	push.c	FUNCTION_22
0x400180b	              0xc3	                                     ret	       655	push.c	FUNCTION_22
0x400180c	         0xf1f4000	                         nop dword [rax]	       655	push.c	FUNCTION_22
0x4001810	    0x814c24240001	            or dword [rsp + 0x24], 0x100	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x4001818	      0xe9fef9ffff	                           jmp 0x400121b	       632	push.c	FUNCTION_22	ELSE_1	IF_4
0x400181d	    0x814c24240080	           or dword [rsp + 0x24], 0x8000	       634	push.c	FUNCTION_22	ELSE_2	IF_5
0x4001825	      0xe9f1f9ffff	                           jmp 0x400121b	       634	push.c	FUNCTION_22	ELSE_2	IF_5
0x400182a	        0x418b4530	            mov eax, dword [r13 + 0x30] 	       152	push.c	FUNCTION_6
0x400182e	        0x498b6d28	            mov rbp, qword [r13 + 0x28] 	       151	push.c	FUNCTION_6
0x4001832	            0x85c0	                           test eax, eax	       446	push.c	FUNCTION_18	IF_13
0x4001834	     0xf853bffffff	                           jne 0x4001775	       446	push.c	FUNCTION_18	IF_13
0x400183a	            0x31f6	                            xor esi, esi	       456	push.c	FUNCTION_18	ELSE_2
0x400183c	          0x4c89ef	                            mov rdi, r13	       456	push.c	FUNCTION_18	ELSE_2
0x400183f	      0xe800000000	                          call 0x4001844	       456	push.c	FUNCTION_18	ELSE_2
0x4001844	          0xf6c740	                           test bh, 0x40	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x4001847	            0x7404	                            je 0x400184d	       458	push.c	FUNCTION_18	ELSE_2	IF_16
0x4001849	        0x4c897030	             mov qword [rax + 0x30], r14	       459	push.c	FUNCTION_18	ELSE_2	IF_16
0x400184d	            0x89de	                            mov esi, ebx	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x400184f	          0x4889c7	                            mov rdi, rax	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x4001852	            0x31db	                            xor ebx, ebx	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x4001854	      0xe8f7ebffff	              call sym.push_with_options	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x4001859	            0x85c0	                           test eax, eax	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x400185b	           0xf95c3	                                setne bl	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x400185e	      0xe963ffffff	                           jmp 0x40017c6	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x4001863	    0x488b05000000	            mov rax, qword [0x0400186a] 	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x400186a	      0xe92dfeffff	                           jmp 0x400169c	       460	push.c	FUNCTION_18	ELSE_2	IF_17	CALL_18
0x400186f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x4001874	      0xe947fcffff	                           jmp 0x40014c0	        54	gettext.h	FUNCTION_52
0x4001879	    0x833d00000000	               cmp dword [0x04001880], 3	        95	push.c	FUNCTION_4	IF_4
0x4001880	     0xf8564faffff	                           jne 0x40012ea	        95	push.c	FUNCTION_4	IF_4
0x4001886	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x400188b	      0xbe00000000	                              mov esi, 0	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x4001890	        0x488d7870	                   lea rdi, [rax + 0x70]	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x4001894	      0xe800000000	                          call 0x4001899	        96	push.c	FUNCTION_4	IF_4	CALL_6
0x4001899	            0x85c0	                           test eax, eax	        95	push.c	FUNCTION_4	IF_4
0x400189b	     0xf8449faffff	                            je 0x40012ea	        95	push.c	FUNCTION_4	IF_4
0x40018a1	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40018a6	        0x488d787b	                   lea rdi, [rax + 0x7b]	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40018aa	      0xe800000000	                          call 0x40018af	        97	push.c	FUNCTION_4	IF_4	CALL_7
0x40018af	        0x83783001	               cmp dword [rax + 0x30], 1	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40018b3	     0xf8531faffff	                           jne 0x40012ea	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40018b9	        0x488b4028	            mov rax, qword [rax + 0x28] 	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40018bd	          0x488b10	                    mov rdx, qword [rax]	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40018c0	      0x48837a0800	                  cmp qword [rdx + 8], 0	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40018c5	     0xf841ffaffff	                            je 0x40012ea	        98	push.c	FUNCTION_4	IF_4	IF_5
0x40018cb	    0x48c744247000	               mov qword [rsp + 0x70], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x40018d4	          0x488b00	                    mov rax, qword [rax]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x40018d7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x40018dc	          0x4c89fa	                            mov rdx, r15	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x40018df	      0xbe00000000	                              mov esi, 0	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x40018e4	    0x48c744246000	               mov qword [rsp + 0x60], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x40018ed	    0x48c744246800	               mov qword [rsp + 0x68], 0	        99	push.c	FUNCTION_4	IF_4	IF_5
0x40018f6	        0x488b4808	                mov rcx, qword [rax + 8]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x40018fa	            0x31c0	                            xor eax, eax	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x40018fc	      0xe800000000	                          call 0x4001901	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x4001901	      0xe9d5f9ffff	                           jmp 0x40012db	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x4001906	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       100	push.c	FUNCTION_4	IF_4	IF_5	CALL_8
0x4001910	          0x4885ed	                           test rbp, rbp	       402	push.c	FUNCTION_18	IF_1	IF_2
0x4001913	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x4001918	     0xf84a0000000	                            je 0x40019be	       402	push.c	FUNCTION_18	IF_1	IF_2
0x400191e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x4001923	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_52
0x4001925	      0xe800000000	                          call 0x400192a	        54	gettext.h	FUNCTION_52
0x400192a	          0x4889ee	                            mov rsi, rbp	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x400192d	          0x4889c7	                            mov rdi, rax	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4001930	            0x31c0	                            xor eax, eax	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4001932	      0xe800000000	                          call 0x4001937	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x4001937	      0x4c8d7cc508	              lea r15, [rbp + rax*8 + 8]	       403	push.c	FUNCTION_18	IF_1	CALL_3
0x400193c	          0x4531e4	                          xor r12d, r12d	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x400193f	              0x90	                                     nop	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x4001940	        0x488b7500	                    mov rsi, qword [rbp]	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x4001944	          0x4c89ef	                            mov rdi, r13	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x4001947	      0xe800000000	                          call 0x400194c	       448	push.c	FUNCTION_18	IF_13	FOR_1
0x400194c	            0x89de	                            mov esi, ebx	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x400194e	        0x4c897030	             mov qword [rax + 0x30], r14	       451	push.c	FUNCTION_18	IF_13	FOR_1	IF_14
0x4001952	          0x4889c7	                            mov rdi, rax	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x4001955	      0xe8f6eaffff	              call sym.push_with_options	       452	push.c	FUNCTION_18	IF_13	FOR_1	IF_15	CALL_16
0x400195a	          0x83f801	                              cmp eax, 1	       453	push.c	FUNCTION_18	IF_13	FOR_1	IF_15
0x400195d	        0x4183dcff	            sbb r12d, 0xffffffffffffffff	       453	push.c	FUNCTION_18	IF_13	FOR_1	IF_15
0x4001961	        0x4883c508	                              add rbp, 8	       453	push.c	FUNCTION_18	IF_13	FOR_1	IF_15
0x4001965	          0x4939ef	                            cmp r15, rbp	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x4001968	            0x75d6	                           jne 0x4001940	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x400196a	      0xe94ffeffff	                           jmp 0x40017be	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x400196f	            0x89d8	                            mov eax, ebx	       432	push.c	FUNCTION_18	IF_9
0x4001971	          0x83e009	                              and eax, 9	       432	push.c	FUNCTION_18	IF_9
0x4001974	          0x83f809	                              cmp eax, 9	       432	push.c	FUNCTION_18	IF_9
0x4001977	     0xf85e8fdffff	                           jne 0x4001765	       432	push.c	FUNCTION_18	IF_9
0x400197d	      0xbf00000000	                              mov edi, 0	       432	push.c	FUNCTION_18	IF_9
0x4001982	      0xe8b9eaffff	                       call sym._.part.3	       432	push.c	FUNCTION_18	IF_9
0x4001987	          0x4889c7	                            mov rdi, rax	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x400198a	            0x31c0	                            xor eax, eax	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x400198c	      0xe800000000	                          call 0x4001991	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4001991	      0xe93bfbffff	                           jmp 0x40014d1	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x4001996	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       434	push.c	FUNCTION_18	IF_9	CALL_12
0x40019a0	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x40019a5	      0xe800000000	                          call 0x40019aa	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x40019aa	      0x4889442408	                mov qword [rsp + 8], rax	       136	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_13
0x40019af	      0xe800000000	                          call 0x40019b4	       137	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_14
0x40019b4	      0x4889442410	             mov qword [rsp + 0x10], rax	       137	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_14
0x40019b9	      0xe964fbffff	                           jmp 0x4001522	       137	push.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	IF_7	CALL_14
0x40019be	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x40019c3	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_52
0x40019c5	      0xe800000000	                          call 0x40019ca	        54	gettext.h	FUNCTION_52
0x40019ca	          0x4889c7	                            mov rdi, rax	       646	push.c	FUNCTION_22	CALL_36
0x40019cd	            0x31c0	                            xor eax, eax	       646	push.c	FUNCTION_22	CALL_36
0x40019cf	      0xe800000000	                          call 0x40019d4	       646	push.c	FUNCTION_22	CALL_36
0x40019d4	            0x31db	                            xor ebx, ebx	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40019d6	      0xe9ebfdffff	                           jmp 0x40017c6	       447	push.c	FUNCTION_18	IF_13	FOR_1
0x40019db	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x40019e0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x40019e5	            0xebdc	                           jmp 0x40019c3	        54	gettext.h	FUNCTION_52
0x40019e7	            0x89d8	                            mov eax, ebx	       432	push.c	FUNCTION_18	IF_9
0x40019e9	          0x83e009	                              and eax, 9	       432	push.c	FUNCTION_18	IF_9
0x40019ec	          0x83f809	                              cmp eax, 9	       432	push.c	FUNCTION_18	IF_9
0x40019ef	            0x748c	                            je 0x400197d	       432	push.c	FUNCTION_18	IF_9
0x40019f1	        0x418b4558	            mov eax, dword [r13 + 0x58] 	       438	push.c	FUNCTION_18	IF_10	IF_11
0x40019f5	            0x85c0	                           test eax, eax	       438	push.c	FUNCTION_18	IF_10	IF_11
0x40019f7	     0xf8468fdffff	                            je 0x4001765	       438	push.c	FUNCTION_18	IF_10	IF_11
0x40019fd	      0xe952fdffff	                           jmp 0x4001754	       438	push.c	FUNCTION_18	IF_10	IF_11
0x4001a02	    0x660f1f440000	                    nop word [rax + rax]	       438	push.c	FUNCTION_18	IF_10	IF_11
0x4001a08	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x4001a0d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x4001a12	            0xebaf	                           jmp 0x40019c3	        54	gettext.h	FUNCTION_52
0x4001a14	            0x31ff	                            xor edi, edi	       250	push.c	FUNCTION_11	CALL_1
0x4001a16	      0xe800000000	                          call 0x4001a1b	       250	push.c	FUNCTION_11	CALL_1
0x4001a1b	            0x31ff	                            xor edi, edi	       244	push.c	FUNCTION_10	CALL_1
0x4001a1d	          0x4889c5	                            mov rbp, rax	       250	push.c	FUNCTION_11	CALL_1
0x4001a20	      0xe800000000	                          call 0x4001a25	       244	push.c	FUNCTION_10	CALL_1
0x4001a25	          0x4885c0	                           test rax, rax	       245	push.c	FUNCTION_10
0x4001a28	           0xf95c2	                                setne dl	       245	push.c	FUNCTION_10
0x4001a2b	          0x4939c5	                            cmp r13, rax	       245	push.c	FUNCTION_10
0x4001a2e	           0xf95c0	                                setne al	       245	push.c	FUNCTION_10
0x4001a31	            0x21d0	                            and eax, edx	       245	push.c	FUNCTION_10
0x4001a33	    0x833d00000000	               cmp dword [0x04001a3a], 5	       253	push.c	FUNCTION_11	SWITCH_1
0x4001a3a	           0xfb6d0	                           movzx edx, al	       245	push.c	FUNCTION_10
0x4001a3d	     0xf87e9000000	                            ja 0x4001b2c	       253	push.c	FUNCTION_11	SWITCH_1
0x4001a43	    0x8b0d00000000	            mov ecx, dword [0x04001a49] 	       253	push.c	FUNCTION_11	SWITCH_1
0x4001a49	    0xff24cd000000	                       jmp qword [rcx*8]	       253	push.c	FUNCTION_11	SWITCH_1
0x4001a50	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4001a55	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4001a5a	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4001a5c	      0xe800000000	                          call 0x4001a61	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4001a61	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4001a66	      0xe8d5e9ffff	                       call sym._.part.3	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4001a6b	          0x4889c7	                            mov rdi, rax	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x4001a6e	            0x31c0	                            xor eax, eax	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x4001a70	      0xe800000000	                          call 0x4001a75	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x4001a75	      0xbf00000000	                              mov edi, 0	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x4001a7a	      0xe8c1e9ffff	                       call sym._.part.3	       130	push.c	FUNCTION_5	FOR_1	ELSE_2	IF_4	CALL_9
0x4001a7f	          0x4889c7	                            mov rdi, rax	       625	push.c	FUNCTION_22	CALL_28
0x4001a82	            0x31c0	                            xor eax, eax	       625	push.c	FUNCTION_22	CALL_28
0x4001a84	      0xe800000000	                          call 0x4001a89	       625	push.c	FUNCTION_22	CALL_28
0x4001a89	          0x4885ed	                           test rbp, rbp	       236	push.c	FUNCTION_9	IF_1
0x4001a8c	        0x498d7d10	                   lea rdi, [r13 + 0x10]	       236	push.c	FUNCTION_9	IF_1
0x4001a90	    0x48c744246000	               mov qword [rsp + 0x60], 0	       234	push.c	FUNCTION_9
0x4001a99	    0x48c744246800	               mov qword [rsp + 0x68], 0	       234	push.c	FUNCTION_9
0x4001aa2	    0x48c744247000	               mov qword [rsp + 0x70], 0	       234	push.c	FUNCTION_9
0x4001aab	            0x7440	                            je 0x4001aed	       236	push.c	FUNCTION_9	IF_1
0x4001aad	        0x488b5508	                mov rdx, qword [rbp + 8]	       238	push.c	FUNCTION_9	CALL_3
0x4001ab1	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       238	push.c	FUNCTION_9	CALL_3
0x4001ab6	      0xbe00000000	                              mov esi, 0	       238	push.c	FUNCTION_9	CALL_3
0x4001abb	            0x31c0	                            xor eax, eax	       238	push.c	FUNCTION_9	CALL_3
0x4001abd	          0x4889d1	                            mov rcx, rdx	       238	push.c	FUNCTION_9	CALL_3
0x4001ac0	      0xe800000000	                          call 0x4001ac5	       238	push.c	FUNCTION_9	CALL_3
0x4001ac5	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       239	push.c	FUNCTION_9	CALL_4
0x4001aca	      0xe871e5ffff	                    call sym.add_refspec	       239	push.c	FUNCTION_9	CALL_4
0x4001acf	      0xe991fcffff	                           jmp 0x4001765	       239	push.c	FUNCTION_9	CALL_4
0x4001ad4	      0xbf00000000	                              mov edi, 0	       239	push.c	FUNCTION_9	CALL_4
0x4001ad9	      0xe862e9ffff	                       call sym._.part.3	       239	push.c	FUNCTION_9	CALL_4
0x4001ade	          0x4889c7	                            mov rdi, rax	       627	push.c	FUNCTION_22	CALL_30
0x4001ae1	            0x31c0	                            xor eax, eax	       627	push.c	FUNCTION_22	CALL_30
0x4001ae3	      0xe800000000	                          call 0x4001ae8	       627	push.c	FUNCTION_22	CALL_30
0x4001ae8	      0xe800000000	                          call 0x4001aed	       655	push.c	FUNCTION_22
0x4001aed	      0xe800000000	                          call 0x4001af2	       655	push.c	FUNCTION_22
0x4001af2	            0x31c9	                            xor ecx, ecx	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4001af4	          0x4889ee	                            mov rsi, rbp	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4001af7	          0x4c89ef	                            mov rdi, r13	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4001afa	      0xe841ecffff	            call sym.setup_push_upstream	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4001aff	      0xe961fcffff	                           jmp 0x4001765	       268	push.c	FUNCTION_11	SWITCH_1	CALL_6
0x4001b04	            0x84c0	                             test al, al	       261	push.c	FUNCTION_11	SWITCH_1	IF_1
0x4001b06	            0x7581	                           jne 0x4001a89	       261	push.c	FUNCTION_11	SWITCH_1	IF_1
0x4001b08	      0xb901000000	                              mov ecx, 1	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4001b0d	          0x4889ee	                            mov rsi, rbp	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4001b10	          0x4c89ef	                            mov rdi, r13	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4001b13	      0xe828ecffff	            call sym.setup_push_upstream	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4001b18	      0xe948fcffff	                           jmp 0x4001765	       264	push.c	FUNCTION_11	SWITCH_1	CALL_5
0x4001b1d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x4001b22	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x4001b27	      0xe997feffff	                           jmp 0x40019c3	        54	gettext.h	FUNCTION_52
0x4001b2c	      0xbf00000000	                              mov edi, 0	       256	push.c	FUNCTION_11	SWITCH_1	CALL_3
0x4001b31	      0xe80ae5ffff	                    call sym.add_refspec	       256	push.c	FUNCTION_11	SWITCH_1	CALL_3
0x4001b36	      0xe92afcffff	                           jmp 0x4001765	       256	push.c	FUNCTION_11	SWITCH_1	CALL_3
git_push_config	IF,16:ELSE,10:FOR,0:WHILE,0:DO,0:functions,0:CALL,26:SWITCH,1	208
0x40000e0	            0x4155	                                push r13	       500	push.c	FUNCTION_21
0x40000e2	            0x4154	                                push r12	       500	push.c	FUNCTION_21
0x40000e4	          0x4989d5	                            mov r13, rdx	       500	push.c	FUNCTION_21
0x40000e7	              0x55	                                push rbp	       500	push.c	FUNCTION_21
0x40000e8	              0x53	                                push rbx	       500	push.c	FUNCTION_21
0x40000e9	            0x31d2	                            xor edx, edx	       505	push.c	FUNCTION_21	CALL_1
0x40000eb	          0x4889fd	                            mov rbp, rdi	       500	push.c	FUNCTION_21
0x40000ee	          0x4989f4	                            mov r12, rsi	       500	push.c	FUNCTION_21
0x40000f1	        0x4883ec18	                           sub rsp, 0x18	       500	push.c	FUNCTION_21
0x40000f5	    0x64488b042528	                mov rax, qword fs:[0x28]	       500	push.c	FUNCTION_21
0x40000fe	      0x4889442408	                mov qword [rsp + 8], rax	       500	push.c	FUNCTION_21
0x4000103	            0x31c0	                            xor eax, eax	       500	push.c	FUNCTION_21
0x4000105	      0xe800000000	                          call 0x400010a	       505	push.c	FUNCTION_21	CALL_1
0x400010a	            0x85c0	                           test eax, eax	       506	push.c	FUNCTION_21	IF_1
0x400010c	            0x89c3	                            mov ebx, eax	       505	push.c	FUNCTION_21	CALL_1
0x400010e	     0xf85ac000000	                           jne 0x40001c0	       506	push.c	FUNCTION_21	IF_1
0x4000114	      0xbf00000000	                              mov edi, 0	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4000119	      0xb910000000	                           mov ecx, 0x10	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x400011e	          0x4889ee	                            mov rsi, rbp	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4000121	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4000123	           0xf97c3	                                 seta bl	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4000126	           0xf92c0	                                 setb al	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4000129	            0x29c3	                            sub ebx, eax	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x400012b	           0xfbedb	                           movsx ebx, bl	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x400012e	            0x85db	                           test ebx, ebx	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4000130	     0xf84b2000000	                            je 0x40001e8	       509	push.c	FUNCTION_21	IF_2	CALL_2
0x4000136	      0xbf00000000	                              mov edi, 0	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x400013b	      0xb90d000000	                            mov ecx, 0xd	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x4000140	          0x4889ee	                            mov rsi, rbp	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x4000143	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x4000145	     0xf84ed000000	                            je 0x4000238	       515	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	CALL_4
0x400014b	      0xbf00000000	                              mov edi, 0	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x4000150	      0xb917000000	                           mov ecx, 0x17	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x4000155	          0x4889ee	                            mov rsi, rbp	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x4000158	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x400015a	     0xf8418010000	                            je 0x4000278	       532	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_11
0x4000160	      0xbf00000000	                              mov edi, 0	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x4000165	      0xb912000000	                           mov ecx, 0x12	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x400016a	          0x4889ee	                            mov rsi, rbp	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x400016d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x400016f	     0xf8493000000	                            je 0x4000208	       536	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_14
0x4000175	      0xbf00000000	                              mov edi, 0	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x400017a	      0xb910000000	                           mov ecx, 0x10	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x400017f	          0x4889ee	                            mov rsi, rbp	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x4000182	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x4000184	           0xf97c3	                                 seta bl	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x4000187	           0xf92c0	                                 setb al	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x400018a	            0x29c3	                            sub ebx, eax	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x400018c	           0xfbedb	                           movsx ebx, bl	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x400018f	            0x85db	                           test ebx, ebx	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x4000191	     0xf8519010000	                           jne 0x40002b0	       540	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_16
0x4000197	          0x4d85e4	                           test r12, r12	       541	push.c	FUNCTION_21	ELSE_6	IF_10	IF_11
0x400019a	     0xf8446020000	                            je 0x40003e6	       541	push.c	FUNCTION_21	ELSE_6	IF_10	IF_11
0x40001a0	      0x41803c2400	                       cmp byte [r12], 0	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x40001a5	     0xf85b5010000	                           jne 0x4000360	       544	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x40001ab	            0x31f6	                            xor esi, esi	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x40001ad	      0xbf00000000	                              mov edi, 0	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x40001b2	      0xe800000000	                          call 0x40001b7	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x40001b7	    0x660f1f840000	                    nop word [rax + rax]	       545	push.c	FUNCTION_21	ELSE_6	IF_10	ELSE_7	IF_12
0x40001c0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       562	push.c	FUNCTION_21
0x40001c5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       562	push.c	FUNCTION_21
0x40001ce	            0x89d8	                            mov eax, ebx	       562	push.c	FUNCTION_21
0x40001d0	     0xf8520020000	                           jne 0x40003f6	       562	push.c	FUNCTION_21
0x40001d6	        0x4883c418	                           add rsp, 0x18	       562	push.c	FUNCTION_21
0x40001da	              0x5b	                                 pop rbx	       562	push.c	FUNCTION_21
0x40001db	              0x5d	                                 pop rbp	       562	push.c	FUNCTION_21
0x40001dc	            0x415c	                                 pop r12	       562	push.c	FUNCTION_21
0x40001de	            0x415d	                                 pop r13	       562	push.c	FUNCTION_21
0x40001e0	              0xc3	                                     ret	       562	push.c	FUNCTION_21
0x40001e1	     0xf1f80000000	                         nop dword [rax]	       562	push.c	FUNCTION_21
0x40001e8	          0x4c89e6	                            mov rsi, r12	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x40001eb	          0x4889ef	                            mov rdi, rbp	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x40001ee	      0xe800000000	                          call 0x40001f3	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x40001f3	            0x85c0	                           test eax, eax	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x40001f5	     0xf84a5000000	                            je 0x40002a0	       510	push.c	FUNCTION_21	IF_2	IF_3	CALL_3
0x40001fb	    0x41814d000004	                   or dword [r13], 0x400	       511	push.c	FUNCTION_21	IF_2	IF_3
0x4000203	            0xebbb	                           jmp 0x40001c0	       511	push.c	FUNCTION_21	IF_2	IF_3
0x4000205	           0xf1f00	                         nop dword [rax]	       511	push.c	FUNCTION_21	IF_2	IF_3
0x4000208	          0x4c89e6	                            mov rsi, r12	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x400020b	          0x4889ef	                            mov rdi, rbp	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x400020e	      0xe800000000	                          call 0x4000213	       537	push.c	FUNCTION_21	ELSE_5	IF_9	CALL_15
0x4000213	            0x85c0	                           test eax, eax	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x4000215	           0xf95c0	                                setne al	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x4000218	           0xfb6c0	                           movzx eax, al	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x400021b	            0xf7d8	                                 neg eax	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x400021d	    0x890500000000	            mov dword [0x04000223], eax 	       539	push.c	FUNCTION_21	ELSE_5	IF_9
0x4000223	            0x31d2	                            xor edx, edx	       561	push.c	FUNCTION_21	CALL_26
0x4000225	          0x4c89e6	                            mov rsi, r12	       561	push.c	FUNCTION_21	CALL_26
0x4000228	          0x4889ef	                            mov rdi, rbp	       561	push.c	FUNCTION_21	CALL_26
0x400022b	      0xe800000000	                          call 0x4000230	       561	push.c	FUNCTION_21	CALL_26
0x4000230	            0x89c3	                            mov ebx, eax	       561	push.c	FUNCTION_21	CALL_26
0x4000232	            0xeb8c	                           jmp 0x40001c0	       561	push.c	FUNCTION_21	CALL_26
0x4000234	         0xf1f4000	                         nop dword [rax]	       561	push.c	FUNCTION_21	CALL_26
0x4000238	          0x4889e6	                            mov rsi, rsp	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x400023b	      0xbf00000000	                              mov edi, 0	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x4000240	      0xe800000000	                          call 0x4000245	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x4000245	            0x85c0	                           test eax, eax	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x4000247	            0x75da	                           jne 0x4000223	       517	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	CALL_5
0x4000249	        0x488b3c24	                    mov rdi, qword [rsp]	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x400024d	      0xe800000000	                          call 0x4000252	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x4000252	            0x85c0	                           test eax, eax	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x4000254	     0xf8466010000	                            je 0x40003c0	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x400025a	          0x83f801	                              cmp eax, 1	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x400025d	     0xf852d010000	                           jne 0x4000390	       518	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	CALL_6
0x4000263	        0x418b4500	                    mov eax, dword [r13]	       489	push.c	FUNCTION_20	SWITCH_1
0x4000267	          0x80e4ef	                            and ah, 0xef	       489	push.c	FUNCTION_20	SWITCH_1
0x400026a	          0x80cc08	                                or ah, 8	       489	push.c	FUNCTION_20	SWITCH_1
0x400026d	        0x41894500	                    mov dword [r13], eax	       489	push.c	FUNCTION_20	SWITCH_1
0x4000271	            0xebb0	                           jmp 0x4000223	       489	push.c	FUNCTION_20	SWITCH_1
0x4000273	       0xf1f440000	                   nop dword [rax + rax]	       489	push.c	FUNCTION_20	SWITCH_1
0x4000278	          0x4889e6	                            mov rsi, rsp	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x400027b	      0xbf00000000	                              mov edi, 0	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x4000280	      0xe800000000	                          call 0x4000285	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x4000285	            0x85c0	                           test eax, eax	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x4000287	            0x759a	                           jne 0x4000223	       534	push.c	FUNCTION_21	ELSE_4	IF_7	IF_8	CALL_12
0x4000289	        0x488b3424	                    mov rsi, qword [rsp]	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x400028d	          0x4889ef	                            mov rdi, rbp	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x4000290	      0xe800000000	                          call 0x4000295	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x4000295	    0x890500000000	            mov dword [0x0400029b], eax 	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x400029b	            0xeb86	                           jmp 0x4000223	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x400029d	           0xf1f00	                         nop dword [rax]	       535	push.c	FUNCTION_21	ELSE_4	IF_7	CALL_13
0x40002a0	    0x41816500fffb	             and dword [r13], 0xfffffbff	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40002a8	      0xe913ffffff	                           jmp 0x40001c0	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40002ad	           0xf1f00	                         nop dword [rax]	       513	push.c	FUNCTION_21	IF_2	ELSE_1
0x40002b0	      0xbf00000000	                              mov edi, 0	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002b5	      0xb90b000000	                            mov ecx, 0xb	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002ba	          0x4889ee	                            mov rsi, rbp	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002bd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002bf	          0x4989ed	                            mov r13, rbp	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002c2	           0xf92c0	                                 setb al	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002c5	           0xf97c3	                                 seta bl	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002c8	            0x29c3	                            sub ebx, eax	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002ca	      0xb800000000	                              mov eax, 0	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002cf	           0xfbedb	                           movsx ebx, bl	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002d2	            0x85db	                           test ebx, ebx	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002d4	            0x751c	                           jne 0x40002f2	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002d6	      0xe99d000000	                           jmp 0x4000378	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002db	       0xf1f440000	                   nop dword [rax + rax]	       549	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_20
0x40002e0	        0x4983c501	                              add r13, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40002e4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40002e8	        0x413a55ff	                  cmp dl, byte [r13 - 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40002ec	     0xf8531ffffff	                           jne 0x4000223	       488	git-compat-util.h	FUNCTION_29	DO_1
0x40002f2	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x40002f5	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x40002f7	            0x75e7	                           jne 0x40002e0	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x40002f9	      0xbe00000000	                              mov esi, 0	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x40002fe	          0x4c89ef	                            mov rdi, r13	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x4000301	      0xe800000000	                          call 0x4000306	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x4000306	            0x85c0	                           test eax, eax	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x4000308	            0x741e	                            je 0x4000328	        35	push.c	FUNCTION_1	IF_1	CALL_1
0x400030a	      0xbe00000000	                              mov esi, 0	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x400030f	          0x4c89ef	                            mov rdi, r13	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x4000312	            0x31db	                            xor ebx, ebx	       555	push.c	FUNCTION_21	ELSE_10	IF_14	IF_15
0x4000314	      0xe800000000	                          call 0x4000319	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x4000319	            0x89c2	                            mov edx, eax	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x400031b	      0xb801000000	                              mov eax, 1	        38	push.c	FUNCTION_1	IF_2
0x4000320	            0x85d2	                           test edx, edx	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x4000322	     0xf8598feffff	                           jne 0x40001c0	        37	push.c	FUNCTION_1	IF_2	CALL_2
0x4000328	          0x4d85e4	                           test r12, r12	       556	push.c	FUNCTION_21	ELSE_10	IF_14	IF_16
0x400032b	     0xf84b5000000	                            je 0x40003e6	       556	push.c	FUNCTION_21	ELSE_10	IF_14	IF_16
0x4000331	            0x4898	                                    cdqe	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4000333	          0x4c89e7	                            mov rdi, r12	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4000336	        0x488d0480	                  lea rax, [rax + rax*4]	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400033a	          0x4889c6	                            mov rsi, rax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400033d	        0x48c1e604	                              shl rsi, 4	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4000341	          0x4829c6	                            sub rsi, rax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4000344	    0x4881c6000000	                              add rsi, 0	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x400034b	      0xe800000000	                          call 0x4000350	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4000350	            0x89c3	                            mov ebx, eax	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4000352	      0xe969feffff	                           jmp 0x40001c0	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4000357	    0x660f1f840000	                    nop word [rax + rax]	       558	push.c	FUNCTION_21	ELSE_10	IF_14	CALL_25
0x4000360	          0x4c89e6	                            mov rsi, r12	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x4000363	      0xbf00000000	                              mov edi, 0	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x4000368	      0xe800000000	                          call 0x400036d	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x400036d	      0xe94efeffff	                           jmp 0x40001c0	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x4000372	    0x660f1f440000	                    nop word [rax + rax]	       547	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_19
0x4000378	          0x4c89e6	                            mov rsi, r12	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x400037b	          0x4889ef	                            mov rdi, rbp	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x400037e	      0xe800000000	                          call 0x4000383	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x4000383	    0x890500000000	            mov dword [0x04000389], eax 	       550	push.c	FUNCTION_21	ELSE_9	IF_13	CALL_21
0x4000389	      0xe932feffff	                           jmp 0x40001c0	       551	push.c	FUNCTION_21	ELSE_9	IF_13
0x400038e	            0x6690	                                     nop	       551	push.c	FUNCTION_21	ELSE_9	IF_13
0x4000390	        0x488b3c24	                    mov rdi, qword [rsp]	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x4000394	          0x4885ff	                           test rdi, rdi	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x4000397	            0x7434	                            je 0x40003cd	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x4000399	      0xbe00000000	                              mov esi, 0	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x400039e	      0xe800000000	                          call 0x40003a3	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x40003a3	            0x85c0	                           test eax, eax	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x40003a5	            0x7526	                           jne 0x40003cd	       526	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	IF_6	CALL_9
0x40003a7	        0x418b4500	                    mov eax, dword [r13]	       493	push.c	FUNCTION_20	SWITCH_1
0x40003ab	          0x80e4f7	                            and ah, 0xf7	       493	push.c	FUNCTION_20	SWITCH_1
0x40003ae	          0x80cc10	                             or ah, 0x10	       493	push.c	FUNCTION_20	SWITCH_1
0x40003b1	        0x41894500	                    mov dword [r13], eax	       493	push.c	FUNCTION_20	SWITCH_1
0x40003b5	      0xe969feffff	                           jmp 0x4000223	       493	push.c	FUNCTION_20	SWITCH_1
0x40003ba	    0x660f1f440000	                    nop word [rax + rax]	       493	push.c	FUNCTION_20	SWITCH_1
0x40003c0	    0x41816500ffe7	             and dword [r13], 0xffffe7ff	       485	push.c	FUNCTION_20	SWITCH_1
0x40003c8	      0xe956feffff	                           jmp 0x4000223	       485	push.c	FUNCTION_20	SWITCH_1
0x40003cd	          0x4889ee	                            mov rsi, rbp	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x40003d0	      0xbf00000000	                              mov edi, 0	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x40003d5	            0x31c0	                            xor eax, eax	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x40003d7	      0xe800000000	                          call 0x40003dc	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x40003dc	      0xbbffffffff	                     mov ebx, 0xffffffff	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x40003e1	      0xe9dafdffff	                           jmp 0x40001c0	       529	push.c	FUNCTION_21	ELSE_1	ELSE_2	IF_4	IF_5	SWITCH_1	ELSE_3
0x40003e6	          0x4889ef	                            mov rdi, rbp	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x40003e9	          0x83cbff	                      or ebx, 0xffffffff	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x40003ec	      0xe800000000	                          call 0x40003f1	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x40003f1	      0xe9cafdffff	                           jmp 0x40001c0	       542	push.c	FUNCTION_21	ELSE_6	IF_10	CALL_17
0x40003f6	      0xe800000000	                          call 0x40003fb	       562	push.c	FUNCTION_21
setup_push_upstream	IF,6:ELSE,0:FOR,0:WHILE,0:DO,0:functions,0:CALL,12:SWITCH,0	152
0x4000740	            0x4156	                                push r14	       200	push.c	FUNCTION_8
0x4000742	            0x4155	                                push r13	       200	push.c	FUNCTION_8
0x4000744	          0x4989fd	                            mov r13, rdi	       200	push.c	FUNCTION_8
0x4000747	            0x4154	                                push r12	       200	push.c	FUNCTION_8
0x4000749	              0x55	                                push rbp	       200	push.c	FUNCTION_8
0x400074a	              0x53	                                push rbx	       200	push.c	FUNCTION_8
0x400074b	        0x4883ec20	                           sub rsp, 0x20	       200	push.c	FUNCTION_8
0x400074f	    0x64488b042528	                mov rax, qword fs:[0x28]	       200	push.c	FUNCTION_8
0x4000758	      0x4889442418	             mov qword [rsp + 0x18], rax	       200	push.c	FUNCTION_8
0x400075d	            0x31c0	                            xor eax, eax	       200	push.c	FUNCTION_8
0x400075f	          0x4885f6	                           test rsi, rsi	       203	push.c	FUNCTION_8	IF_1
0x4000762	    0x48c704240000	                      mov qword [rsp], 0	       201	push.c	FUNCTION_8
0x400076a	    0x48c744240800	                  mov qword [rsp + 8], 0	       201	push.c	FUNCTION_8
0x4000773	    0x48c744241000	               mov qword [rsp + 0x10], 0	       201	push.c	FUNCTION_8
0x400077c	     0xf848a010000	                            je 0x400090c	       203	push.c	FUNCTION_8	IF_1
0x4000782	          0x8b4630	            mov eax, dword [rsi + 0x30] 	       205	push.c	FUNCTION_8	IF_2
0x4000785	          0x4889f3	                            mov rbx, rsi	       205	push.c	FUNCTION_8	IF_2
0x4000788	            0x85c0	                           test eax, eax	       205	push.c	FUNCTION_8	IF_2
0x400078a	     0xf841d010000	                            je 0x40008ad	       205	push.c	FUNCTION_8	IF_2
0x4000790	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	       205	push.c	FUNCTION_8	IF_2
0x4000794	          0x4885f6	                           test rsi, rsi	       205	push.c	FUNCTION_8	IF_2
0x4000797	     0xf8410010000	                            je 0x40008ad	       205	push.c	FUNCTION_8	IF_2
0x400079d	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       205	push.c	FUNCTION_8	IF_2
0x40007a2	     0xf8405010000	                            je 0x40008ad	       205	push.c	FUNCTION_8	IF_2
0x40007a8	          0x83f801	                              cmp eax, 1	       213	push.c	FUNCTION_8	IF_3
0x40007ab	     0xf8541010000	                           jne 0x40008f2	       213	push.c	FUNCTION_8	IF_3
0x40007b1	            0x85d2	                           test edx, edx	       216	push.c	FUNCTION_8	IF_4
0x40007b3	     0xf8518010000	                           jne 0x40008d1	       216	push.c	FUNCTION_8	IF_4
0x40007b9	            0x85c9	                           test ecx, ecx	       222	push.c	FUNCTION_8	IF_5
0x40007bb	          0x488b06	                    mov rax, qword [rsi]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007be	     0xf84dc000000	                            je 0x40008a0	       222	push.c	FUNCTION_8	IF_5
0x40007c4	        0x488b6808	                mov rbp, qword [rax + 8]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007c8	        0x4c8b6308	                mov r12, qword [rbx + 8]	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007cc	          0x4889ee	                            mov rsi, rbp	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007cf	          0x4c89e7	                            mov rdi, r12	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007d2	      0xe800000000	                          call 0x40007d7	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007d7	            0x85c0	                           test eax, eax	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007d9	     0xf853d010000	                           jne 0x400091c	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007df	          0x4889e9	                            mov rcx, rbp	       224	push.c	FUNCTION_8	IF_5	IF_6	CALL_9
0x40007e2	            0x31c0	                            xor eax, eax	       228	push.c	FUNCTION_8	CALL_11
0x40007e4	          0x4c89e2	                            mov rdx, r12	       228	push.c	FUNCTION_8	CALL_11
0x40007e7	      0xbe00000000	                              mov esi, 0	       228	push.c	FUNCTION_8	CALL_11
0x40007ec	          0x4889e7	                            mov rdi, rsp	       228	push.c	FUNCTION_8	CALL_11
0x40007ef	      0xe800000000	                          call 0x40007f4	       228	push.c	FUNCTION_8	CALL_11
0x40007f4	    0x8b0500000000	            mov eax, dword [0x040007fa] 	        67	push.c	FUNCTION_3
0x40007fa	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       229	push.c	FUNCTION_8	CALL_12
0x40007ff	          0x8d4801	                      lea ecx, [rax + 1]	        67	push.c	FUNCTION_3
0x4000802	    0x8b0500000000	            mov eax, dword [0x04000808] 	        68	push.c	FUNCTION_3	CALL_1
0x4000808	    0x890d00000000	            mov dword [0x0400080e], ecx 	        67	push.c	FUNCTION_3
0x400080e	            0x39c1	                            cmp ecx, eax	        68	push.c	FUNCTION_3	CALL_1
0x4000810	            0x7e7e	                           jle 0x4000890	        68	push.c	FUNCTION_3	CALL_1
0x4000812	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        68	push.c	FUNCTION_3	CALL_1
0x4000816	            0x89c6	                            mov esi, eax	        68	push.c	FUNCTION_3	CALL_1
0x4000818	          0xc1ee1f	                           shr esi, 0x1f	        68	push.c	FUNCTION_3	CALL_1
0x400081b	             0x1c6	                            add esi, eax	        68	push.c	FUNCTION_3	CALL_1
0x400081d	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4000827	            0xd1fe	                              sar esi, 1	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4000829	            0x39ce	                            cmp esi, ecx	       795	git-compat-util.h	FUNCTION_37	IF_1
0x400082b	           0xf4cf1	                          cmovl esi, ecx	       795	git-compat-util.h	FUNCTION_37	IF_1
0x400082e	          0x4863d6	                         movsxd rdx, esi	        68	push.c	FUNCTION_3	CALL_1
0x4000831	    0x893500000000	            mov dword [0x04000837], esi 	        68	push.c	FUNCTION_3	CALL_1
0x4000837	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_37	IF_1
0x400083a	     0xf8740010000	                            ja 0x4000980	       795	git-compat-util.h	FUNCTION_37	IF_1
0x4000840	    0x488b3d000000	            mov rdi, qword [0x04000847] 	        68	push.c	FUNCTION_3	CALL_1
0x4000847	    0x488d34d50000	                        lea rsi, [rdx*8]	        68	push.c	FUNCTION_3	CALL_1
0x400084f	      0xe800000000	                          call 0x4000854	        68	push.c	FUNCTION_3	CALL_1
0x4000854	    0x8b0d00000000	            mov ecx, dword [0x0400085a] 	        68	push.c	FUNCTION_3	CALL_1
0x400085a	    0x488905000000	            mov qword [0x04000861], rax 	        68	push.c	FUNCTION_3	CALL_1
0x4000861	          0x4863c9	                         movsxd rcx, ecx	        69	push.c	FUNCTION_3
0x4000864	      0x48895cc8f8	        mov qword [rax + rcx*8 - 8], rbx	        69	push.c	FUNCTION_3
0x4000869	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       230	push.c	FUNCTION_8
0x400086e	    0x644833042528	                xor rax, qword fs:[0x28]	       230	push.c	FUNCTION_8
0x4000877	     0xf859a000000	                           jne 0x4000917	       230	push.c	FUNCTION_8
0x400087d	        0x4883c420	                           add rsp, 0x20	       230	push.c	FUNCTION_8
0x4000881	              0x5b	                                 pop rbx	       230	push.c	FUNCTION_8
0x4000882	              0x5d	                                 pop rbp	       230	push.c	FUNCTION_8
0x4000883	            0x415c	                                 pop r12	       230	push.c	FUNCTION_8
0x4000885	            0x415d	                                 pop r13	       230	push.c	FUNCTION_8
0x4000887	            0x415e	                                 pop r14	       230	push.c	FUNCTION_8
0x4000889	              0xc3	                                     ret	       230	push.c	FUNCTION_8
0x400088a	    0x660f1f440000	                    nop word [rax + rax]	       230	push.c	FUNCTION_8
0x4000890	    0x488b05000000	            mov rax, qword [0x04000897] 	       230	push.c	FUNCTION_8
0x4000897	            0xebc8	                           jmp 0x4000861	       230	push.c	FUNCTION_8
0x4000899	     0xf1f80000000	                         nop dword [rax]	       230	push.c	FUNCTION_8
0x40008a0	        0x488b4808	                mov rcx, qword [rax + 8]	       230	push.c	FUNCTION_8
0x40008a4	        0x4c8b6308	                mov r12, qword [rbx + 8]	       230	push.c	FUNCTION_8
0x40008a8	      0xe935ffffff	                           jmp 0x40007e2	       230	push.c	FUNCTION_8
0x40008ad	          0x488b1b	                    mov rbx, qword [rbx]	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008b0	        0x498b6d10	            mov rbp, qword [r13 + 0x10] 	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008b4	      0xbf00000000	                              mov edi, 0	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008b9	      0xe882fbffff	                       call sym._.part.3	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008be	          0x4889c7	                            mov rdi, rax	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008c1	            0x31c0	                            xor eax, eax	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008c3	          0x4889d9	                            mov rcx, rbx	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008c6	          0x4889ea	                            mov rdx, rbp	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008c9	          0x4889de	                            mov rsi, rbx	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008cc	      0xe800000000	                          call 0x40008d1	       206	push.c	FUNCTION_8	IF_2	CALL_4
0x40008d1	          0x488b2b	                    mov rbp, qword [rbx]	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008d4	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008d8	      0xbf00000000	                              mov edi, 0	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008dd	      0xe85efbffff	                       call sym._.part.3	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008e2	          0x4889c7	                            mov rdi, rax	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008e5	            0x31c0	                            xor eax, eax	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008e7	          0x4889ea	                            mov rdx, rbp	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008ea	          0x4889de	                            mov rsi, rbx	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008ed	      0xe800000000	                          call 0x40008f2	       217	push.c	FUNCTION_8	IF_4	CALL_8
0x40008f2	          0x488b1b	                    mov rbx, qword [rbx]	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x40008f5	      0xbf00000000	                              mov edi, 0	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x40008fa	      0xe841fbffff	                       call sym._.part.3	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x40008ff	          0x4889de	                            mov rsi, rbx	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000902	          0x4889c7	                            mov rdi, rax	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000905	            0x31c0	                            xor eax, eax	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x4000907	      0xe800000000	                          call 0x400090c	       214	push.c	FUNCTION_8	IF_3	CALL_6
0x400090c	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       204	push.c	FUNCTION_8	CALL_2
0x4000910	      0xbf00000000	                              mov edi, 0	       204	push.c	FUNCTION_8	CALL_2
0x4000915	            0xebe3	                           jmp 0x40008fa	       204	push.c	FUNCTION_8	CALL_2
0x4000917	      0xe800000000	                          call 0x400091c	       230	push.c	FUNCTION_8
0x400091c	          0x4889e8	                            mov rax, rbp	       230	push.c	FUNCTION_8
0x400091f	      0xba00000000	                              mov edx, 0	       230	push.c	FUNCTION_8
0x4000924	            0xeb17	                           jmp 0x400093d	       230	push.c	FUNCTION_8
0x4000926	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       230	push.c	FUNCTION_8
0x4000930	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000934	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_29	DO_1
0x4000938	          0x3a48ff	                  cmp cl, byte [rax - 1]	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400093b	            0x750a	                           jne 0x4000947	       488	git-compat-util.h	FUNCTION_29	DO_1
0x400093d	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000940	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000942	            0x75ec	                           jne 0x4000930	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000944	          0x4889c5	                            mov rbp, rax	       484	git-compat-util.h	FUNCTION_29	DO_1	IF_1
0x4000947	    0x833d00000000	               cmp dword [0x0400094e], 5	       173	push.c	FUNCTION_7	IF_1
0x400094e	    0x41bc00000000	                             mov r12d, 0	       164	push.c	FUNCTION_7
0x4000954	            0x743b	                            je 0x4000991	       173	push.c	FUNCTION_7	IF_1
0x4000956	          0x4c8b33	                    mov r14, qword [rbx]	       177	push.c	FUNCTION_7	CALL_4
0x4000959	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	       177	push.c	FUNCTION_7	CALL_4
0x400095d	      0xbf00000000	                              mov edi, 0	       177	push.c	FUNCTION_7	CALL_4
0x4000962	      0xe8d9faffff	                       call sym._.part.3	       177	push.c	FUNCTION_7	CALL_4
0x4000967	          0x4d89e1	                             mov r9, r12	       177	push.c	FUNCTION_7	CALL_4
0x400096a	          0x4889c7	                            mov rdi, rax	       177	push.c	FUNCTION_7	CALL_4
0x400096d	          0x4889ea	                            mov rdx, rbp	       177	push.c	FUNCTION_7	CALL_4
0x4000970	          0x4d89f0	                             mov r8, r14	       177	push.c	FUNCTION_7	CALL_4
0x4000973	          0x4889d9	                            mov rcx, rbx	       177	push.c	FUNCTION_7	CALL_4
0x4000976	          0x4889de	                            mov rsi, rbx	       177	push.c	FUNCTION_7	CALL_4
0x4000979	            0x31c0	                            xor eax, eax	       177	push.c	FUNCTION_7	CALL_4
0x400097b	      0xe800000000	                          call 0x4000980	       177	push.c	FUNCTION_7	CALL_4
0x4000980	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4000985	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x400098a	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x400098c	      0xe800000000	                          call 0x4000991	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4000991	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x4000996	      0xe8a5faffff	                       call sym._.part.3	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x400099b	          0x4989c4	                            mov r12, rax	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
0x400099e	            0xebb6	                           jmp 0x4000956	       796	git-compat-util.h	FUNCTION_37	IF_1	CALL_1
push_with_options	IF,11:ELSE,4:FOR,0:WHILE,0:DO,0:functions,0:CALL,16:SWITCH,0	175
0x4000450	            0x4155	                                push r13	       345	push.c	FUNCTION_17
0x4000452	            0x4154	                                push r12	       345	push.c	FUNCTION_17
0x4000454	              0x55	                                push rbp	       345	push.c	FUNCTION_17
0x4000455	              0x53	                                push rbx	       345	push.c	FUNCTION_17
0x4000456	            0x89f5	                            mov ebp, esi	       345	push.c	FUNCTION_17
0x4000458	          0x4889fb	                            mov rbx, rdi	       345	push.c	FUNCTION_17
0x400045b	        0x4883ec18	                           sub rsp, 0x18	       345	push.c	FUNCTION_17
0x400045f	    0x8b1500000000	            mov edx, dword [0x04000465] 	       349	push.c	FUNCTION_17	CALL_1
0x4000465	    0x8b3500000000	            mov esi, dword [0x0400046b] 	       349	push.c	FUNCTION_17	CALL_1
0x400046b	    0x64488b042528	                mov rax, qword fs:[0x28]	       345	push.c	FUNCTION_17
0x4000474	      0x4889442408	                mov qword [rsp + 8], rax	       345	push.c	FUNCTION_17
0x4000479	            0x31c0	                            xor eax, eax	       345	push.c	FUNCTION_17
0x400047b	      0xe800000000	                          call 0x4000480	       349	push.c	FUNCTION_17	CALL_1
0x4000480	    0x488b15000000	            mov rdx, qword [0x04000487] 	       352	push.c	FUNCTION_17	IF_1
0x4000487	    0x8b0500000000	            mov eax, dword [0x0400048d] 	       350	push.c	FUNCTION_17
0x400048d	          0x4885d2	                           test rdx, rdx	       352	push.c	FUNCTION_17	IF_1
0x4000490	          0x894358	             mov dword [rbx + 0x58], eax	       350	push.c	FUNCTION_17
0x4000493	            0x740d	                            je 0x40004a2	       352	push.c	FUNCTION_17	IF_1
0x4000495	      0xbe00000000	                              mov esi, 0	       353	push.c	FUNCTION_17	IF_1	CALL_2
0x400049a	          0x4889df	                            mov rdi, rbx	       353	push.c	FUNCTION_17	IF_1	CALL_2
0x400049d	      0xe800000000	                          call 0x40004a2	       353	push.c	FUNCTION_17	IF_1	CALL_2
0x40004a2	    0x448b2d000000	           mov r13d, dword [0x040004a9] 	       355	push.c	FUNCTION_17	CALL_3
0x40004a9	      0xb800000000	                              mov eax, 0	       355	push.c	FUNCTION_17	CALL_3
0x40004ae	      0xba00000000	                              mov edx, 0	       355	push.c	FUNCTION_17	CALL_3
0x40004b3	      0xbe00000000	                              mov esi, 0	       355	push.c	FUNCTION_17	CALL_3
0x40004b8	          0x4889df	                            mov rdi, rbx	       355	push.c	FUNCTION_17	CALL_3
0x40004bb	          0x4585ed	                         test r13d, r13d	       355	push.c	FUNCTION_17	CALL_3
0x40004be	        0x480f45d0	                         cmovne rdx, rax	       355	push.c	FUNCTION_17	CALL_3
0x40004c2	      0xe800000000	                          call 0x40004c7	       355	push.c	FUNCTION_17	CALL_3
0x40004c7	      0xbf00000000	                              mov edi, 0	       357	push.c	FUNCTION_17	IF_2	CALL_4
0x40004cc	      0xe800000000	                          call 0x40004d1	       357	push.c	FUNCTION_17	IF_2	CALL_4
0x40004d1	            0x85c0	                           test eax, eax	       357	push.c	FUNCTION_17	IF_2	CALL_4
0x40004d3	            0x7515	                           jne 0x40004ea	       357	push.c	FUNCTION_17	IF_2	CALL_4
0x40004d5	        0x488b4350	            mov rax, qword [rbx + 0x50] 	       358	push.c	FUNCTION_17	IF_2	IF_3
0x40004d9	          0x4885c0	                           test rax, rax	       358	push.c	FUNCTION_17	IF_2	IF_3
0x40004dc	     0xf8449020000	                            je 0x400072b	       358	push.c	FUNCTION_17	IF_2	IF_3
0x40004e2	    0x48c740280000	               mov qword [rax + 0x28], 0	       361	push.c	FUNCTION_17	IF_2
0x40004ea	    0x448b25000000	           mov r12d, dword [0x040004f1] 	       364	push.c	FUNCTION_17	IF_4
0x40004f1	          0x4585e4	                         test r12d, r12d	       364	push.c	FUNCTION_17	IF_4
0x40004f4	            0x7e2e	                           jle 0x4000524	       364	push.c	FUNCTION_17	IF_4
0x40004f6	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	       365	push.c	FUNCTION_17	CALL_6
0x40004fa	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x40004ff	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x4000504	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_52
0x4000506	      0xe800000000	                          call 0x400050b	        54	gettext.h	FUNCTION_52
0x400050b	    0x488b3d000000	            mov rdi, qword [0x04000512] 	        97	stdio2.h	CALL_107
0x4000512	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_107
0x4000515	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_107
0x4000518	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_107
0x400051d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_107
0x400051f	      0xe800000000	                          call 0x4000524	        97	stdio2.h	CALL_107
0x4000524	    0x488b15000000	            mov rdx, qword [0x0400052b] 	       366	push.c	FUNCTION_17	CALL_7
0x400052b	    0x8b3500000000	            mov esi, dword [0x04000531] 	       366	push.c	FUNCTION_17	CALL_7
0x4000531	      0x4c8d442404	                       lea r8, [rsp + 4]	       366	push.c	FUNCTION_17	CALL_7
0x4000536	            0x89e9	                            mov ecx, ebp	       366	push.c	FUNCTION_17	CALL_7
0x4000538	          0x4889df	                            mov rdi, rbx	       366	push.c	FUNCTION_17	CALL_7
0x400053b	      0xe800000000	                          call 0x4000540	       366	push.c	FUNCTION_17	CALL_7
0x4000540	            0x85c0	                           test eax, eax	       368	push.c	FUNCTION_17	IF_5
0x4000542	            0x89c5	                            mov ebp, eax	       366	push.c	FUNCTION_17	CALL_7
0x4000544	            0x756a	                           jne 0x40005b0	       368	push.c	FUNCTION_17	IF_5
0x4000546	          0x4889df	                            mov rdi, rbx	       374	push.c	FUNCTION_17	CALL_11
0x4000549	            0x31db	                            xor ebx, ebx	       376	push.c	FUNCTION_17	IF_6
0x400054b	      0xe800000000	                          call 0x4000550	       374	push.c	FUNCTION_17	CALL_11
0x4000550	             0x9c5	                             or ebp, eax	       375	push.c	FUNCTION_17	IF_6
0x4000552	            0x7434	                            je 0x4000588	       375	push.c	FUNCTION_17	IF_6
0x4000554	        0x8b442404	                mov eax, dword [rsp + 4]	       378	push.c	FUNCTION_17	IF_7
0x4000558	      0xbb01000000	                              mov ebx, 1	       390	push.c	FUNCTION_17
0x400055d	            0xa801	                              test al, 1	       378	push.c	FUNCTION_17	IF_7
0x400055f	     0xf85cb000000	                           jne 0x4000630	       378	push.c	FUNCTION_17	IF_7
0x4000565	            0xa802	                              test al, 2	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0x4000567	     0xf8533010000	                           jne 0x40006a0	       380	push.c	FUNCTION_17	ELSE_1	IF_8
0x400056d	            0xa804	                              test al, 4	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0x400056f	     0xf855b010000	                           jne 0x40006d0	       382	push.c	FUNCTION_17	ELSE_2	IF_9
0x4000575	            0xa808	                              test al, 8	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0x4000577	     0xf8583010000	                           jne 0x4000700	       384	push.c	FUNCTION_17	ELSE_3	IF_10
0x400057d	            0xa810	                           test al, 0x10	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0x400057f	     0xf85eb000000	                           jne 0x4000670	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0x4000585	           0xf1f00	                         nop dword [rax]	       386	push.c	FUNCTION_17	ELSE_4	IF_11
0x4000588	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       391	push.c	FUNCTION_17
0x400058d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       391	push.c	FUNCTION_17
0x4000596	            0x89d8	                            mov eax, ebx	       391	push.c	FUNCTION_17
0x4000598	     0xf859c010000	                           jne 0x400073a	       391	push.c	FUNCTION_17
0x400059e	        0x4883c418	                           add rsp, 0x18	       391	push.c	FUNCTION_17
0x40005a2	              0x5b	                                 pop rbx	       391	push.c	FUNCTION_17
0x40005a3	              0x5d	                                 pop rbp	       391	push.c	FUNCTION_17
0x40005a4	            0x415c	                                 pop r12	       391	push.c	FUNCTION_17
0x40005a6	            0x415d	                                 pop r13	       391	push.c	FUNCTION_17
0x40005a8	              0xc3	                                     ret	       391	push.c	FUNCTION_17
0x40005a9	     0xf1f80000000	                         nop dword [rax]	       391	push.c	FUNCTION_17
0x40005b0	    0x8b3500000000	            mov esi, dword [0x040005b6] 	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x40005b6	      0xbf02000000	                              mov edi, 2	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x40005bb	    0x41bc00000000	                             mov r12d, 0	        45	push.c	FUNCTION_2	IF_1
0x40005c1	      0xe800000000	                          call 0x40005c6	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x40005c6	    0x488b35000000	            mov rsi, qword [0x040005cd] 	        97	stdio2.h	CALL_107
0x40005cd	            0x85c0	                           test eax, eax	        45	push.c	FUNCTION_2	IF_1
0x40005cf	      0xbf00000000	                              mov edi, 0	        45	push.c	FUNCTION_2	IF_1
0x40005d4	        0x490f44fc	                          cmove rdi, r12	        45	push.c	FUNCTION_2	IF_1
0x40005d8	      0xe800000000	                          call 0x40005dd	        97	stdio2.h	CALL_107
0x40005dd	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	       370	push.c	FUNCTION_17	IF_5	CALL_9
0x40005e1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x40005e6	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_52
0x40005e8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x40005ed	      0xe800000000	                          call 0x40005f2	        54	gettext.h	FUNCTION_52
0x40005f2	          0x4c89ee	                            mov rsi, r13	       370	push.c	FUNCTION_17	IF_5	CALL_9
0x40005f5	          0x4889c7	                            mov rdi, rax	       370	push.c	FUNCTION_17	IF_5	CALL_9
0x40005f8	            0x31c0	                            xor eax, eax	       370	push.c	FUNCTION_17	IF_5	CALL_9
0x40005fa	      0xe800000000	                          call 0x40005ff	       370	push.c	FUNCTION_17	IF_5	CALL_9
0x40005ff	    0x8b3500000000	            mov esi, dword [0x04000605] 	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x4000605	      0xbf02000000	                              mov edi, 2	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x400060a	      0xe800000000	                          call 0x400060f	        44	push.c	FUNCTION_2	IF_1	CALL_1
0x400060f	    0x488b35000000	            mov rsi, qword [0x04000616] 	        97	stdio2.h	CALL_107
0x4000616	            0x85c0	                           test eax, eax	        45	push.c	FUNCTION_2	IF_1
0x4000618	      0xbf00000000	                              mov edi, 0	        45	push.c	FUNCTION_2	IF_1
0x400061d	        0x490f44fc	                          cmove rdi, r12	        45	push.c	FUNCTION_2	IF_1
0x4000621	      0xe800000000	                          call 0x4000626	        97	stdio2.h	CALL_107
0x4000626	      0xe91bffffff	                           jmp 0x4000546	        97	stdio2.h	CALL_107
0x400062b	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_107
0x4000630	    0x8b2d00000000	            mov ebp, dword [0x04000636] 	       311	push.c	FUNCTION_12	IF_1
0x4000636	            0x85ed	                           test ebp, ebp	       311	push.c	FUNCTION_12	IF_1
0x4000638	     0xf844affffff	                            je 0x4000588	       311	push.c	FUNCTION_12	IF_1
0x400063e	    0x448b1d000000	           mov r11d, dword [0x04000645] 	       311	push.c	FUNCTION_12	IF_1
0x4000645	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x400064a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x400064f	          0x4585db	                         test r11d, r11d	       311	push.c	FUNCTION_12	IF_1
0x4000652	     0xf8430ffffff	                            je 0x4000588	       311	push.c	FUNCTION_12	IF_1
0x4000658	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_52
0x400065a	      0xe800000000	                          call 0x400065f	        54	gettext.h	FUNCTION_52
0x400065f	          0x4889c7	                            mov rdi, rax	       341	push.c	FUNCTION_16	CALL_2
0x4000662	            0x31c0	                            xor eax, eax	       341	push.c	FUNCTION_16	CALL_2
0x4000664	      0xe800000000	                          call 0x4000669	       341	push.c	FUNCTION_16	CALL_2
0x4000669	      0xe91affffff	                           jmp 0x4000588	       341	push.c	FUNCTION_16	CALL_2
0x400066e	            0x6690	                                     nop	       341	push.c	FUNCTION_16	CALL_2
0x4000670	    0x8b1500000000	            mov edx, dword [0x04000676] 	       339	push.c	FUNCTION_16	IF_1
0x4000676	            0x85d2	                           test edx, edx	       339	push.c	FUNCTION_16	IF_1
0x4000678	     0xf840affffff	                            je 0x4000588	       339	push.c	FUNCTION_16	IF_1
0x400067e	    0x8b0500000000	            mov eax, dword [0x04000684] 	       339	push.c	FUNCTION_16	IF_1
0x4000684	            0x85c0	                           test eax, eax	       339	push.c	FUNCTION_16	IF_1
0x4000686	     0xf84fcfeffff	                            je 0x4000588	       339	push.c	FUNCTION_16	IF_1
0x400068c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x4000691	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x4000696	            0xebc0	                           jmp 0x4000658	        54	gettext.h	FUNCTION_52
0x4000698	     0xf1f84000000	                   nop dword [rax + rax]	        54	gettext.h	FUNCTION_52
0x40006a0	    0x448b15000000	           mov r10d, dword [0x040006a7] 	       318	push.c	FUNCTION_13	IF_1
0x40006a7	          0x4585d2	                         test r10d, r10d	       318	push.c	FUNCTION_13	IF_1
0x40006aa	     0xf84d8feffff	                            je 0x4000588	       318	push.c	FUNCTION_13	IF_1
0x40006b0	    0x448b0d000000	            mov r9d, dword [0x040006b7] 	       318	push.c	FUNCTION_13	IF_1
0x40006b7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x40006bc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x40006c1	          0x4585c9	                           test r9d, r9d	       318	push.c	FUNCTION_13	IF_1
0x40006c4	     0xf84befeffff	                            je 0x4000588	       318	push.c	FUNCTION_13	IF_1
0x40006ca	            0xeb8c	                           jmp 0x4000658	       318	push.c	FUNCTION_13	IF_1
0x40006cc	         0xf1f4000	                         nop dword [rax]	       318	push.c	FUNCTION_13	IF_1
0x40006d0	    0x448b05000000	            mov r8d, dword [0x040006d7] 	       325	push.c	FUNCTION_14	IF_1
0x40006d7	          0x4585c0	                           test r8d, r8d	       325	push.c	FUNCTION_14	IF_1
0x40006da	     0xf84a8feffff	                            je 0x4000588	       325	push.c	FUNCTION_14	IF_1
0x40006e0	    0x8b3d00000000	            mov edi, dword [0x040006e6] 	       325	push.c	FUNCTION_14	IF_1
0x40006e6	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x40006eb	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x40006f0	            0x85ff	                           test edi, edi	       325	push.c	FUNCTION_14	IF_1
0x40006f2	     0xf8490feffff	                            je 0x4000588	       325	push.c	FUNCTION_14	IF_1
0x40006f8	      0xe95bffffff	                           jmp 0x4000658	       325	push.c	FUNCTION_14	IF_1
0x40006fd	           0xf1f00	                         nop dword [rax]	       325	push.c	FUNCTION_14	IF_1
0x4000700	    0x8b3500000000	            mov esi, dword [0x04000706] 	       332	push.c	FUNCTION_15	IF_1
0x4000706	            0x85f6	                           test esi, esi	       332	push.c	FUNCTION_15	IF_1
0x4000708	     0xf847afeffff	                            je 0x4000588	       332	push.c	FUNCTION_15	IF_1
0x400070e	    0x8b0d00000000	            mov ecx, dword [0x04000714] 	       332	push.c	FUNCTION_15	IF_1
0x4000714	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_52
0x4000719	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_52
0x400071e	            0x85c9	                           test ecx, ecx	       332	push.c	FUNCTION_15	IF_1
0x4000720	     0xf8462feffff	                            je 0x4000588	       332	push.c	FUNCTION_15	IF_1
0x4000726	      0xe92dffffff	                           jmp 0x4000658	       332	push.c	FUNCTION_15	IF_1
0x400072b	      0xbe00000000	                              mov esi, 0	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0x4000730	      0xbf00000000	                              mov edi, 0	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0x4000735	      0xe800000000	                          call 0x400073a	       359	push.c	FUNCTION_17	IF_2	IF_3	CALL_5
0x400073a	      0xe800000000	                          call 0x400073f	       391	push.c	FUNCTION_17
