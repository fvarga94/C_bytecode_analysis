sq_quote_buf	DO,0:CALL,9:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,1:WHILE,2	152
0x4000680	            0x4157	                                push r15	        25	quote.c	FUNCTION_2
0x4000682	            0x4156	                                push r14	        25	quote.c	FUNCTION_2
0x4000684	          0x4989f6	                            mov r14, rsi	        25	quote.c	FUNCTION_2
0x4000687	            0x4155	                                push r13	        25	quote.c	FUNCTION_2
0x4000689	            0x4154	                                push r12	        25	quote.c	FUNCTION_2
0x400068b	          0x4531ed	                          xor r13d, r13d	        25	quote.c	FUNCTION_2
0x400068e	              0x55	                                push rbp	        25	quote.c	FUNCTION_2
0x400068f	              0x53	                                push rbx	        25	quote.c	FUNCTION_2
0x4000690	          0x4889fb	                            mov rbx, rdi	        25	quote.c	FUNCTION_2
0x4000693	        0x4883ec08	                              sub rsp, 8	        25	quote.c	FUNCTION_2
0x4000697	        0x48397710	            cmp qword [rdi + 0x10], rsi 	        28	quote.c	FUNCTION_2	IF_1
0x400069b	     0xf84f9010000	                            je 0x400089a	        28	quote.c	FUNCTION_2	IF_1
0x40006a1	          0x488b03	                    mov rax, qword [rbx]	        28	quote.c	FUNCTION_2	IF_1
0x40006a4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40006a7	     0xf85cb010000	                           jne 0x4000878	       141	strbuf.h	FUNCTION_26
0x40006ad	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40006b2	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40006b5	      0xe800000000	                          call 0x40006ba	       228	strbuf.h	FUNCTION_28	CALL_2
0x40006ba	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40006be	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40006c2	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40006c6	    0x49bc01000000	                movabs r12, 0x8200000001	       961	string2.h	FUNCTION_43	WHILE_1
0x40006d0	      0xbd01000000	                              mov ebp, 1	       961	string2.h	FUNCTION_43	WHILE_1
0x40006d5	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40006d9	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x40006dd	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40006e1	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40006e5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40006e9	        0x410fbe06	                   movsx eax, byte [r14]	       230	strbuf.h	FUNCTION_28
0x40006ed	           0xf1f00	                         nop dword [rax]	       230	strbuf.h	FUNCTION_28
0x40006f0	            0x84c0	                             test al, al	        32	quote.c	FUNCTION_2	WHILE_1
0x40006f2	     0xf8420010000	                            je 0x4000818	        32	quote.c	FUNCTION_2	WHILE_1
0x40006f8	          0x83f821	                           cmp eax, 0x21	       962	string2.h	FUNCTION_43	WHILE_1
0x40006fb	     0xf848f010000	                            je 0x4000890	       962	string2.h	FUNCTION_43	WHILE_1
0x4000701	          0x83f827	                           cmp eax, 0x27	       962	string2.h	FUNCTION_43	WHILE_1
0x4000704	     0xf8486010000	                            je 0x4000890	       962	string2.h	FUNCTION_43	WHILE_1
0x400070a	        0x498d7601	                      lea rsi, [r14 + 1]	       962	string2.h	FUNCTION_43	WHILE_1
0x400070e	            0x31d2	                            xor edx, edx	       962	string2.h	FUNCTION_43	WHILE_1
0x4000710	           0xfb60e	                   movzx ecx, byte [rsi]	       961	string2.h	FUNCTION_43	WHILE_1
0x4000713	          0x4c89e0	                            mov rax, r12	       961	string2.h	FUNCTION_43	WHILE_1
0x4000716	        0x4883c201	                              add rdx, 1	       963	string2.h	FUNCTION_43	WHILE_1
0x400071a	          0x4989f7	                            mov r15, rsi	       961	string2.h	FUNCTION_43	WHILE_1
0x400071d	        0x4883c601	                              add rsi, 1	       961	string2.h	FUNCTION_43	WHILE_1
0x4000721	          0x48d3e8	                             shr rax, cl	       961	string2.h	FUNCTION_43	WHILE_1
0x4000724	          0x83e001	                              and eax, 1	       961	string2.h	FUNCTION_43	WHILE_1
0x4000727	        0x4883f001	                              xor rax, 1	       961	string2.h	FUNCTION_43	WHILE_1
0x400072b	          0x80f927	                            cmp cl, 0x27	       961	string2.h	FUNCTION_43	WHILE_1
0x400072e	           0xf47c5	                          cmova eax, ebp	       961	string2.h	FUNCTION_43	WHILE_1
0x4000731	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_43	WHILE_1
0x4000733	            0x75db	                           jne 0x4000710	       961	string2.h	FUNCTION_43	WHILE_1
0x4000735	          0x4c89f6	                            mov rsi, r14	        34	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x4000738	          0x4889df	                            mov rdi, rbx	        34	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x400073b	          0x4d89fe	                            mov r14, r15	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x400073e	      0xe800000000	                          call 0x4000743	        34	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x4000743	        0x410fbe07	                   movsx eax, byte [r15]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x4000747	            0x3c27	                            cmp al, 0x27	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x4000749	            0x756f	                           jne 0x40007ba	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x400074b	            0xeb75	                           jmp 0x40007c2	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x400074d	           0xf1f00	                         nop dword [rax]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x4000750	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000755	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000758	      0xe800000000	                          call 0x400075d	       228	strbuf.h	FUNCTION_28	CALL_2
0x400075d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000761	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000765	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000769	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400076d	        0x44883c10	              mov byte [rax + rdx], r15b	       229	strbuf.h	FUNCTION_28
0x4000771	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000775	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000779	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400077d	          0x488b03	                    mov rax, qword [rbx]	       230	strbuf.h	FUNCTION_28
0x4000780	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000783	            0x757b	                           jne 0x4000800	       141	strbuf.h	FUNCTION_26
0x4000785	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400078a	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400078d	      0xe800000000	                          call 0x4000792	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000792	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000796	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400079a	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400079e	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40007a2	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x40007a6	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40007aa	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40007ae	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40007b2	        0x410fbe06	                   movsx eax, byte [r14]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40007b6	            0x3c27	                            cmp al, 0x27	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40007b8	            0x7408	                            je 0x40007c2	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40007ba	            0x3c21	                            cmp al, 0x21	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40007bc	     0xf852effffff	                           jne 0x40006f0	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40007c2	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40007c7	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x40007cc	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x40007cf	      0xe800000000	                          call 0x40007d4	       279	strbuf.h	FUNCTION_29	CALL_2
0x40007d4	          0x488b03	                    mov rax, qword [rbx]	       279	strbuf.h	FUNCTION_29	CALL_2
0x40007d7	        0x4983c601	                              add r14, 1	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_6
0x40007db	      0x450fb67eff	              movzx r15d, byte [r14 - 1]	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_6
0x40007e0	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40007e3	     0xf8467ffffff	                            je 0x4000750	       141	strbuf.h	FUNCTION_26
0x40007e9	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x40007ed	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40007f1	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40007f4	     0xf8567ffffff	                           jne 0x4000761	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40007fa	      0xe951ffffff	                           jmp 0x4000750	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40007ff	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000800	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000804	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000808	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400080b	            0x7589	                           jne 0x4000796	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400080d	      0xe973ffffff	                           jmp 0x4000785	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000812	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000818	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400081b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400081e	            0x7543	                           jne 0x4000863	       141	strbuf.h	FUNCTION_26
0x4000820	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000825	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000828	      0xe800000000	                          call 0x400082d	       228	strbuf.h	FUNCTION_28	CALL_2
0x400082d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000831	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000835	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000839	          0x4c89ef	                            mov rdi, r13	        43	quote.c	FUNCTION_2	CALL_9
0x400083c	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000840	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x4000844	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000848	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400084c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000850	        0x4883c408	                              add rsp, 8	        44	quote.c	FUNCTION_2
0x4000854	              0x5b	                                 pop rbx	        44	quote.c	FUNCTION_2
0x4000855	              0x5d	                                 pop rbp	        44	quote.c	FUNCTION_2
0x4000856	            0x415c	                                 pop r12	        44	quote.c	FUNCTION_2
0x4000858	            0x415d	                                 pop r13	        44	quote.c	FUNCTION_2
0x400085a	            0x415e	                                 pop r14	        44	quote.c	FUNCTION_2
0x400085c	            0x415f	                                 pop r15	        44	quote.c	FUNCTION_2
0x400085e	      0xe900000000	                           jmp 0x4000863	        43	quote.c	FUNCTION_2	CALL_9
0x4000863	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000867	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400086b	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400086e	            0x75c1	                           jne 0x4000831	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000870	            0xebae	                           jmp 0x4000820	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000872	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000878	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x400087c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000880	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000883	     0xf8535feffff	                           jne 0x40006be	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000889	      0xe91ffeffff	                           jmp 0x40006ad	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400088e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000890	          0x4d89f7	                            mov r15, r14	       961	string2.h	FUNCTION_43	WHILE_1
0x4000893	            0x31d2	                            xor edx, edx	       962	string2.h	FUNCTION_43	WHILE_1
0x4000895	      0xe99bfeffff	                           jmp 0x4000735	       962	string2.h	FUNCTION_43	WHILE_1
0x400089a	            0x31f6	                            xor esi, esi	        29	quote.c	FUNCTION_2	CALL_1
0x400089c	      0xe800000000	                          call 0x40008a1	        29	quote.c	FUNCTION_2	CALL_1
0x40008a1	          0x4989c5	                            mov r13, rax	        29	quote.c	FUNCTION_2	CALL_1
0x40008a4	      0xe9f8fdffff	                           jmp 0x40006a1	        29	quote.c	FUNCTION_2	CALL_1
write_name_quoted_relative	DO,0:CALL,3:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,0:WHILE,0	34
0x4001620	              0x55	                                push rbp	       323	quote.c	FUNCTION_18
0x4001621	              0x53	                                push rbx	       323	quote.c	FUNCTION_18
0x4001622	          0x4889d5	                            mov rbp, rdx	       323	quote.c	FUNCTION_18
0x4001625	            0x89cb	                            mov ebx, ecx	       323	quote.c	FUNCTION_18
0x4001627	        0x4883ec28	                           sub rsp, 0x28	       323	quote.c	FUNCTION_18
0x400162b	          0x4889e2	                            mov rdx, rsp	       326	quote.c	FUNCTION_18	CALL_1
0x400162e	    0x48c704240000	                      mov qword [rsp], 0	       324	quote.c	FUNCTION_18
0x4001636	    0x48c744240800	                  mov qword [rsp + 8], 0	       324	quote.c	FUNCTION_18
0x400163f	    0x64488b042528	                mov rax, qword fs:[0x28]	       323	quote.c	FUNCTION_18
0x4001648	      0x4889442418	             mov qword [rsp + 0x18], rax	       323	quote.c	FUNCTION_18
0x400164d	            0x31c0	                            xor eax, eax	       323	quote.c	FUNCTION_18
0x400164f	    0x48c744241000	               mov qword [rsp + 0x10], 0	       324	quote.c	FUNCTION_18
0x4001658	      0xe800000000	                          call 0x400165d	       326	quote.c	FUNCTION_18	CALL_1
0x400165d	            0x85db	                           test ebx, ebx	       313	quote.c	FUNCTION_17	IF_1
0x400165f	          0x4889ee	                            mov rsi, rbp	       292	quote.c	FUNCTION_15	CALL_1
0x4001662	          0x4889c7	                            mov rdi, rax	       292	quote.c	FUNCTION_15	CALL_1
0x4001665	            0x7531	                           jne 0x4001698	       313	quote.c	FUNCTION_17	IF_1
0x4001667	      0xe800000000	                          call 0x400166c	       316	quote.c	FUNCTION_17	ELSE_1	CALL_2
0x400166c	          0x4889ee	                            mov rsi, rbp	       318	quote.c	FUNCTION_17	CALL_3
0x400166f	            0x89df	                            mov edi, ebx	       318	quote.c	FUNCTION_17	CALL_3
0x4001671	      0xe800000000	                          call 0x4001676	       318	quote.c	FUNCTION_17	CALL_3
0x4001676	          0x4889e7	                            mov rdi, rsp	       329	quote.c	FUNCTION_18	CALL_3
0x4001679	      0xe800000000	                          call 0x400167e	       329	quote.c	FUNCTION_18	CALL_3
0x400167e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       330	quote.c	FUNCTION_18
0x4001683	    0x644833042528	                xor rax, qword fs:[0x28]	       330	quote.c	FUNCTION_18
0x400168c	            0x7511	                           jne 0x400169f	       330	quote.c	FUNCTION_18
0x400168e	        0x4883c428	                           add rsp, 0x28	       330	quote.c	FUNCTION_18
0x4001692	              0x5b	                                 pop rbx	       330	quote.c	FUNCTION_18
0x4001693	              0x5d	                                 pop rbp	       330	quote.c	FUNCTION_18
0x4001694	              0xc3	                                     ret	       330	quote.c	FUNCTION_18
0x4001695	           0xf1f00	                         nop dword [rax]	       330	quote.c	FUNCTION_18
0x4001698	      0xe8a3e9ffff	call sym.quote_c_style_counted.constprop.3	       292	quote.c	FUNCTION_15	CALL_1
0x400169d	            0xebcd	                           jmp 0x400166c	       292	quote.c	FUNCTION_15	CALL_1
0x400169f	      0xe800000000	                          call 0x40016a4	       330	quote.c	FUNCTION_18
sq_dequote_to_argv	DO,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,0:WHILE,0	124
0x4000c30	           0xfb607	                   movzx eax, byte [rdi]	       157	quote.c	FUNCTION_9	IF_1
0x4000c33	            0x84c0	                             test al, al	       157	quote.c	FUNCTION_9	IF_1
0x4000c35	     0xf8451010000	                            je 0x4000d8c	       157	quote.c	FUNCTION_9	IF_1
0x4000c3b	            0x4157	                                push r15	       175	quote.c	FUNCTION_10
0x4000c3d	            0x4156	                                push r14	       175	quote.c	FUNCTION_10
0x4000c3f	          0x4989cf	                            mov r15, rcx	       175	quote.c	FUNCTION_10
0x4000c42	            0x4155	                                push r13	       175	quote.c	FUNCTION_10
0x4000c44	            0x4154	                                push r12	       175	quote.c	FUNCTION_10
0x4000c46	          0x4989d6	                            mov r14, rdx	       175	quote.c	FUNCTION_10
0x4000c49	              0x55	                                push rbp	       175	quote.c	FUNCTION_10
0x4000c4a	              0x53	                                push rbx	       175	quote.c	FUNCTION_10
0x4000c4b	          0x4989f5	                            mov r13, rsi	       175	quote.c	FUNCTION_10
0x4000c4e	          0x4989fc	                            mov r12, rdi	       157	quote.c	FUNCTION_9	IF_1
0x4000c51	    0x48bdffffffff	         movabs rbp, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_68	IF_1
0x4000c5b	        0x4883ec08	                              sub rsp, 8	       175	quote.c	FUNCTION_10
0x4000c5f	              0x90	                                     nop	       175	quote.c	FUNCTION_10
0x4000c60	            0x3c27	                            cmp al, 0x27	       103	quote.c	FUNCTION_7	IF_1
0x4000c62	            0x752f	                           jne 0x4000c93	       103	quote.c	FUNCTION_7	IF_1
0x4000c64	          0x4c89e3	                            mov rbx, r12	       103	quote.c	FUNCTION_7	IF_1
0x4000c67	      0x498d7c2401	                      lea rdi, [r12 + 1]	       103	quote.c	FUNCTION_7	IF_1
0x4000c6c	         0xfb64301	               movzx eax, byte [rbx + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000c70	        0x488d57ff	                      lea rdx, [rdi - 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000c74	            0x84c0	                             test al, al	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000c76	            0x741b	                            je 0x4000c93	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000c78	            0x3c27	                            cmp al, 0x27	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000c7a	            0x7434	                            je 0x4000cb0	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000c7c	        0x4883c301	                              add rbx, 1	       106	quote.c	FUNCTION_7	FOR_1
0x4000c80	          0x8847ff	                  mov byte [rdi - 1], al	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000c83	         0xfb64301	               movzx eax, byte [rbx + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000c87	        0x4883c701	                              add rdi, 1	       106	quote.c	FUNCTION_7	FOR_1
0x4000c8b	        0x488d57ff	                      lea rdx, [rdi - 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000c8f	            0x84c0	                             test al, al	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000c91	            0x75e5	                           jne 0x4000c78	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000c93	        0x4883c408	                              add rsp, 8	       177	quote.c	FUNCTION_10
0x4000c97	      0xb8ffffffff	                     mov eax, 0xffffffff	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000c9c	              0x5b	                                 pop rbx	       177	quote.c	FUNCTION_10
0x4000c9d	              0x5d	                                 pop rbp	       177	quote.c	FUNCTION_10
0x4000c9e	            0x415c	                                 pop r12	       177	quote.c	FUNCTION_10
0x4000ca0	            0x415d	                                 pop r13	       177	quote.c	FUNCTION_10
0x4000ca2	            0x415e	                                 pop r14	       177	quote.c	FUNCTION_10
0x4000ca4	            0x415f	                                 pop r15	       177	quote.c	FUNCTION_10
0x4000ca6	              0xc3	                                     ret	       177	quote.c	FUNCTION_10
0x4000ca7	    0x660f1f840000	                    nop word [rax + rax]	       177	quote.c	FUNCTION_10
0x4000cb0	         0xfb64302	               movzx eax, byte [rbx + 2]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000cb4	            0x84c0	                             test al, al	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000cb6	     0xf84b4000000	                            je 0x4000d70	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000cbc	            0x3c5c	                            cmp al, 0x5c	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000cbe	            0x751b	                           jne 0x4000cdb	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000cc0	         0xfb64303	               movzx eax, byte [rbx + 3]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000cc4	            0x3c27	                            cmp al, 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000cc6	            0x7404	                            je 0x4000ccc	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000cc8	            0x3c21	                            cmp al, 0x21	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000cca	            0x750a	                           jne 0x4000cd6	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000ccc	        0x807b0427	                cmp byte [rbx + 4], 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000cd0	     0xf84aa000000	                            je 0x4000d80	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000cd6	      0xb85c000000	                           mov eax, 0x5c	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000cdb	            0x4898	                                    cdqe	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4000cdd	    0xf68000000000	                      test byte [rax], 1	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4000ce4	            0x74ad	                            je 0x4000c93	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4000ce6	        0x4883c302	                              add rbx, 2	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000cea	    0x660f1f440000	                    nop word [rax + rax]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000cf0	        0x4883c301	                              add rbx, 1	       137	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4000cf4	           0xfb603	                   movzx eax, byte [rbx]	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4000cf7	    0xf68000000000	                      test byte [rax], 1	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4000cfe	            0x75f0	                           jne 0x4000cf0	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4000d00	          0x4d85ed	                           test r13, r13	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x4000d03	          0xc60200	                       mov byte [rdx], 0	       139	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000d06	            0x741d	                            je 0x4000d25	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x4000d08	          0x49633e	                 movsxd rdi, dword [r14]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d0b	          0x418b07	                    mov eax, dword [r15]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d0e	            0x39c7	                            cmp edi, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d10	            0x7d1e	                           jge 0x4000d30	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d12	        0x498b4500	                    mov rax, qword [r13]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d16	          0x8d5701	                      lea edx, [rdi + 1]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000d19	          0x4885db	                           test rbx, rbx	       169	quote.c	FUNCTION_9	DO_1
0x4000d1c	          0x418916	                    mov dword [r14], edx	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000d1f	        0x4c8924f8	            mov qword [rax + rdi*8], r12	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000d23	            0x746a	                            je 0x4000d8f	       169	quote.c	FUNCTION_9	DO_1
0x4000d25	           0xfb603	                   movzx eax, byte [rbx]	       169	quote.c	FUNCTION_9	DO_1
0x4000d28	          0x4989dc	                            mov r12, rbx	       157	quote.c	FUNCTION_9	IF_1
0x4000d2b	      0xe930ffffff	                           jmp 0x4000c60	       157	quote.c	FUNCTION_9	IF_1
0x4000d30	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d34	            0x89c6	                            mov esi, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d36	          0xc1ee1f	                           shr esi, 0x1f	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d39	             0x1c6	                            add esi, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d3b	          0x8d4701	                      lea eax, [rdi + 1]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d3e	            0xd1fe	                              sar esi, 1	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d40	            0x39f7	                            cmp edi, esi	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d42	           0xf4df0	                         cmovge esi, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d45	          0x4863d6	                         movsxd rdx, esi	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d48	          0x418937	                    mov dword [r15], esi	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d4b	          0x4839ea	                            cmp rdx, rbp	       795	git-compat-util.h	FUNCTION_68	IF_1
0x4000d4e	            0x7750	                            ja 0x4000da0	       795	git-compat-util.h	FUNCTION_68	IF_1
0x4000d50	        0x498b7d00	                    mov rdi, qword [r13]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d54	    0x488d34d50000	                        lea rsi, [rdx*8]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d5c	      0xe800000000	                          call 0x4000d61	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d61	          0x49633e	                 movsxd rdi, dword [r14]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d64	        0x49894500	                    mov qword [r13], rax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d68	            0xebac	                           jmp 0x4000d16	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d6a	    0x660f1f440000	                    nop word [rax + rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000d70	          0x4d85ed	                           test r13, r13	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x4000d73	          0xc60200	                       mov byte [rdx], 0	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000d76	            0x7417	                            je 0x4000d8f	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x4000d78	            0x31db	                            xor ebx, ebx	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000d7a	            0xeb8c	                           jmp 0x4000d08	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000d7c	         0xf1f4000	                         nop dword [rax]	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000d80	          0x8847ff	                  mov byte [rdi - 1], al	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000d83	        0x4883c304	                              add rbx, 4	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000d87	      0xe9f7feffff	                           jmp 0x4000c83	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000d8c	            0x31c0	                            xor eax, eax	       158	quote.c	FUNCTION_9	IF_1
0x4000d8e	              0xc3	                                     ret	       177	quote.c	FUNCTION_10
0x4000d8f	        0x4883c408	                              add rsp, 8	       177	quote.c	FUNCTION_10
0x4000d93	            0x31c0	                            xor eax, eax	       158	quote.c	FUNCTION_9	IF_1
0x4000d95	              0x5b	                                 pop rbx	       177	quote.c	FUNCTION_10
0x4000d96	              0x5d	                                 pop rbp	       177	quote.c	FUNCTION_10
0x4000d97	            0x415c	                                 pop r12	       177	quote.c	FUNCTION_10
0x4000d99	            0x415d	                                 pop r13	       177	quote.c	FUNCTION_10
0x4000d9b	            0x415e	                                 pop r14	       177	quote.c	FUNCTION_10
0x4000d9d	            0x415f	                                 pop r15	       177	quote.c	FUNCTION_10
0x4000d9f	              0xc3	                                     ret	       177	quote.c	FUNCTION_10
0x4000da0	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_68	IF_1	CALL_1
0x4000da5	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_68	IF_1	CALL_1
0x4000daa	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_68	IF_1	CALL_1
0x4000dac	      0xe800000000	                          call 0x4000db1	       796	git-compat-util.h	FUNCTION_68	IF_1	CALL_1
unquote_c_style	DO,0:CALL,3:FOR,1:ELSE,0:SWITCH,2:functions,0:IF,4:WHILE,0	157
0x4001760	            0x4157	                                push r15	       358	quote.c	FUNCTION_20
0x4001762	            0x4156	                                push r14	       358	quote.c	FUNCTION_20
0x4001764	            0x4155	                                push r13	       358	quote.c	FUNCTION_20
0x4001766	            0x4154	                                push r12	       358	quote.c	FUNCTION_20
0x4001768	              0x55	                                push rbp	       358	quote.c	FUNCTION_20
0x4001769	              0x53	                                push rbx	       358	quote.c	FUNCTION_20
0x400176a	        0x4883ec08	                              sub rsp, 8	       358	quote.c	FUNCTION_20
0x400176e	          0x803e22	                    cmp byte [rsi], 0x22	       362	quote.c	FUNCTION_20	IF_1
0x4001771	        0x488b5f08	                mov rbx, qword [rdi + 8]	       359	quote.c	FUNCTION_20
0x4001775	     0xf8570010000	                           jne 0x40018eb	       362	quote.c	FUNCTION_20	IF_1
0x400177b	        0x4c8d7e01	                      lea r15, [rsi + 1]	       362	quote.c	FUNCTION_20	IF_1
0x400177f	          0x4989fe	                            mov r14, rdi	       362	quote.c	FUNCTION_20	IF_1
0x4001782	          0x4889d5	                            mov rbp, rdx	       362	quote.c	FUNCTION_20	IF_1
0x4001785	        0x410fbe07	                   movsx eax, byte [r15]	       961	string2.h	FUNCTION_43	WHILE_1
0x4001789	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_43	WHILE_1
0x400178b	     0xf8482010000	                            je 0x4001913	       961	string2.h	FUNCTION_43	WHILE_1
0x4001791	          0x83f822	                           cmp eax, 0x22	       962	string2.h	FUNCTION_43	WHILE_1
0x4001794	     0xf8479010000	                            je 0x4001913	       962	string2.h	FUNCTION_43	WHILE_1
0x400179a	          0x83f85c	                           cmp eax, 0x5c	       962	string2.h	FUNCTION_43	WHILE_1
0x400179d	     0xf8470010000	                            je 0x4001913	       962	string2.h	FUNCTION_43	WHILE_1
0x40017a3	        0x498d4f01	                      lea rcx, [r15 + 1]	       962	string2.h	FUNCTION_43	WHILE_1
0x40017a7	            0x31f6	                            xor esi, esi	       962	string2.h	FUNCTION_43	WHILE_1
0x40017a9	            0xeb16	                           jmp 0x40017c1	       962	string2.h	FUNCTION_43	WHILE_1
0x40017ab	       0xf1f440000	                   nop dword [rax + rax]	       962	string2.h	FUNCTION_43	WHILE_1
0x40017b0	        0x4883c101	                              add rcx, 1	       962	string2.h	FUNCTION_43	WHILE_1
0x40017b4	          0x83f85c	                           cmp eax, 0x5c	       962	string2.h	FUNCTION_43	WHILE_1
0x40017b7	            0x7416	                            je 0x40017cf	       962	string2.h	FUNCTION_43	WHILE_1
0x40017b9	          0x83f822	                           cmp eax, 0x22	       962	string2.h	FUNCTION_43	WHILE_1
0x40017bc	            0x7411	                            je 0x40017cf	       962	string2.h	FUNCTION_43	WHILE_1
0x40017be	          0x4889d6	                            mov rsi, rdx	       963	string2.h	FUNCTION_43	WHILE_1
0x40017c1	           0xfbe01	                   movsx eax, byte [rcx]	       961	string2.h	FUNCTION_43	WHILE_1
0x40017c4	        0x488d5601	                      lea rdx, [rsi + 1]	       963	string2.h	FUNCTION_43	WHILE_1
0x40017c8	          0x4989cd	                            mov r13, rcx	       961	string2.h	FUNCTION_43	WHILE_1
0x40017cb	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_43	WHILE_1
0x40017cd	            0x75e1	                           jne 0x40017b0	       961	string2.h	FUNCTION_43	WHILE_1
0x40017cf	        0x4c8d6602	                      lea r12, [rsi + 2]	       961	string2.h	FUNCTION_43	WHILE_1
0x40017d3	          0x4c89fe	                            mov rsi, r15	       367	quote.c	FUNCTION_20	FOR_1	CALL_1
0x40017d6	          0x4c89f7	                            mov rdi, r14	       367	quote.c	FUNCTION_20	FOR_1	CALL_1
0x40017d9	      0xe800000000	                          call 0x40017de	       367	quote.c	FUNCTION_20	FOR_1	CALL_1
0x40017de	      0x410fb64500	                   movzx eax, byte [r13]	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x40017e3	            0x3c22	                            cmp al, 0x22	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x40017e5	     0xf84d5000000	                            je 0x40018c0	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x40017eb	            0x3c5c	                            cmp al, 0x5c	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x40017ed	            0x7441	                            je 0x4001830	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x40017ef	          0x498b06	                    mov rax, qword [r14]	       162	strbuf.h	FUNCTION_27	IF_1
0x40017f2	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_27	IF_1
0x40017f6	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_27	IF_1
0x40017fa	          0x4839c3	                            cmp rbx, rax	       162	strbuf.h	FUNCTION_27	IF_1
0x40017fd	     0xf8774010000	                            ja 0x4001977	       162	strbuf.h	FUNCTION_27	IF_1
0x4001803	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0x4001807	        0x49895e08	                mov qword [r14 + 8], rbx	       164	strbuf.h	FUNCTION_27
0x400180b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0x4001811	     0xf84c7000000	                            je 0x40018de	       165	strbuf.h	FUNCTION_27	IF_2
0x4001817	        0xc6041800	                 mov byte [rax + rbx], 0	       166	strbuf.h	FUNCTION_27	IF_2
0x400181b	      0xb8ffffffff	                     mov eax, 0xffffffff	       412	quote.c	FUNCTION_20
0x4001820	        0x4883c408	                              add rsp, 8	       413	quote.c	FUNCTION_20
0x4001824	              0x5b	                                 pop rbx	       413	quote.c	FUNCTION_20
0x4001825	              0x5d	                                 pop rbp	       413	quote.c	FUNCTION_20
0x4001826	            0x415c	                                 pop r12	       413	quote.c	FUNCTION_20
0x4001828	            0x415d	                                 pop r13	       413	quote.c	FUNCTION_20
0x400182a	            0x415e	                                 pop r14	       413	quote.c	FUNCTION_20
0x400182c	            0x415f	                                 pop r15	       413	quote.c	FUNCTION_20
0x400182e	              0xc3	                                     ret	       413	quote.c	FUNCTION_20
0x400182f	              0x90	                                     nop	       413	quote.c	FUNCTION_20
0x4001830	      0x410fbe5501	               movsx edx, byte [r13 + 1]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001835	        0x4d8d7d02	                      lea r15, [r13 + 2]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001839	          0x8d42de	                   lea eax, [rdx - 0x22]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400183c	          0x4189d4	                           mov r12d, edx	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400183f	            0x3c54	                            cmp al, 0x54	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001841	            0x77ac	                            ja 0x40017ef	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001843	           0xfb6c0	                           movzx eax, al	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001846	    0xff24c5000000	                       jmp qword [rax*8]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400184d	      0x410fbe4502	               movsx eax, byte [r13 + 2]	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x4001852	          0x83ea30	                           sub edx, 0x30	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001855	          0xc1e206	                              shl edx, 6	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001858	          0x83e830	                           sub eax, 0x30	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x400185b	          0x83f807	                              cmp eax, 7	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x400185e	            0x778f	                            ja 0x40017ef	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x4001860	      0x450fbe6503	              movsx r12d, byte [r13 + 3]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001865	          0xc1e003	                              shl eax, 3	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001868	        0x4d8d7d04	                      lea r15, [r13 + 4]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x400186c	             0x9d0	                             or eax, edx	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400186e	        0x4183ec30	                          sub r12d, 0x30	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001872	        0x4183fc07	                             cmp r12d, 7	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001876	     0xf8773ffffff	                            ja 0x40017ef	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x400187c	          0x4109c4	                            or r12d, eax	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x400187f	              0x90	                                     nop	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001880	          0x498b06	                    mov rax, qword [r14]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001883	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001886	            0x7478	                            je 0x4001900	       141	strbuf.h	FUNCTION_26
0x4001888	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_26
0x400188c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001890	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001893	            0x746b	                            je 0x4001900	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001895	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001899	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400189d	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40018a1	        0x44882410	              mov byte [rax + rdx], r12b	       229	strbuf.h	FUNCTION_28
0x40018a5	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40018a9	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_28
0x40018ad	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40018b1	      0xe9cffeffff	                           jmp 0x4001785	       230	strbuf.h	FUNCTION_28
0x40018b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       230	strbuf.h	FUNCTION_28
0x40018c0	          0x4885ed	                           test rbp, rbp	       372	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x40018c3	            0x745e	                            je 0x4001923	       372	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x40018c5	        0x4b8d3427	                    lea rsi, [r15 + r12]	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x40018c9	            0x31c0	                            xor eax, eax	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x40018cb	        0x48897500	                    mov qword [rbp], rsi	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x40018cf	        0x4883c408	                              add rsp, 8	       413	quote.c	FUNCTION_20
0x40018d3	              0x5b	                                 pop rbx	       413	quote.c	FUNCTION_20
0x40018d4	              0x5d	                                 pop rbp	       413	quote.c	FUNCTION_20
0x40018d5	            0x415c	                                 pop r12	       413	quote.c	FUNCTION_20
0x40018d7	            0x415d	                                 pop r13	       413	quote.c	FUNCTION_20
0x40018d9	            0x415e	                                 pop r14	       413	quote.c	FUNCTION_20
0x40018db	            0x415f	                                 pop r15	       413	quote.c	FUNCTION_20
0x40018dd	              0xc3	                                     ret	       413	quote.c	FUNCTION_20
0x40018de	    0x803d00000000	                cmp byte [0x040018e5], 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40018e5	     0xf8598000000	                           jne 0x4001983	       168	strbuf.h	FUNCTION_27	CALL_2
0x40018eb	        0x4883c408	                              add rsp, 8	       413	quote.c	FUNCTION_20
0x40018ef	      0xb8ffffffff	                     mov eax, 0xffffffff	       363	quote.c	FUNCTION_20	IF_1
0x40018f4	              0x5b	                                 pop rbx	       413	quote.c	FUNCTION_20
0x40018f5	              0x5d	                                 pop rbp	       413	quote.c	FUNCTION_20
0x40018f6	            0x415c	                                 pop r12	       413	quote.c	FUNCTION_20
0x40018f8	            0x415d	                                 pop r13	       413	quote.c	FUNCTION_20
0x40018fa	            0x415e	                                 pop r14	       413	quote.c	FUNCTION_20
0x40018fc	            0x415f	                                 pop r15	       413	quote.c	FUNCTION_20
0x40018fe	              0xc3	                                     ret	       413	quote.c	FUNCTION_20
0x40018ff	              0x90	                                     nop	       413	quote.c	FUNCTION_20
0x4001900	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001905	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001908	      0xe800000000	                          call 0x400190d	       228	strbuf.h	FUNCTION_28	CALL_2
0x400190d	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001911	            0xeb82	                           jmp 0x4001895	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001913	          0x4d89fd	                            mov r13, r15	       962	string2.h	FUNCTION_43	WHILE_1
0x4001916	    0x41bc01000000	                             mov r12d, 1	       962	string2.h	FUNCTION_43	WHILE_1
0x400191c	            0x31d2	                            xor edx, edx	       960	string2.h	FUNCTION_43
0x400191e	      0xe9b0feffff	                           jmp 0x40017d3	       960	string2.h	FUNCTION_43
0x4001923	            0x31c0	                            xor eax, eax	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4001925	      0xe9f6feffff	                           jmp 0x4001820	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x400192a	    0x41bc07000000	                             mov r12d, 7	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001930	      0xe94bffffff	                           jmp 0x4001880	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001935	    0x41bc0b000000	                           mov r12d, 0xb	       388	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400193b	      0xe940ffffff	                           jmp 0x4001880	       388	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001940	    0x41bc0c000000	                           mov r12d, 0xc	       384	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001946	      0xe935ffffff	                           jmp 0x4001880	       384	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400194b	    0x41bc0a000000	                           mov r12d, 0xa	       385	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001951	      0xe92affffff	                           jmp 0x4001880	       385	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001956	    0x41bc0d000000	                           mov r12d, 0xd	       386	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400195c	      0xe91fffffff	                           jmp 0x4001880	       386	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001961	    0x41bc09000000	                             mov r12d, 9	       387	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001967	      0xe914ffffff	                           jmp 0x4001880	       387	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400196c	    0x41bc08000000	                             mov r12d, 8	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001972	      0xe909ffffff	                           jmp 0x4001880	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001977	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_27	CALL_1
0x400197c	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_27	CALL_1
0x400197e	      0xe800000000	                          call 0x4001983	       163	strbuf.h	FUNCTION_27	CALL_1
0x4001983	      0xe800000000	                          call 0x4001988	       163	strbuf.h	FUNCTION_27	CALL_1
python_quote_buf	DO,0:CALL,6:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,2:WHILE,1	147
0x4001b10	            0x4154	                                push r12	       433	quote.c	FUNCTION_22
0x4001b12	              0x55	                                push rbp	       433	quote.c	FUNCTION_22
0x4001b13	          0x4989f4	                            mov r12, rsi	       433	quote.c	FUNCTION_22
0x4001b16	              0x53	                                push rbx	       433	quote.c	FUNCTION_22
0x4001b17	          0x488b07	                    mov rax, qword [rdi]	       433	quote.c	FUNCTION_22
0x4001b1a	          0x4889fb	                            mov rbx, rdi	       433	quote.c	FUNCTION_22
0x4001b1d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001b20	     0xf852a020000	                           jne 0x4001d50	       141	strbuf.h	FUNCTION_26
0x4001b26	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b2b	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b2e	      0xe800000000	                          call 0x4001b33	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b33	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b37	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001b3b	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001b3f	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001b43	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x4001b47	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001b4b	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001b4f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001b53	        0x4983c401	                              add r12, 1	       440	quote.c	FUNCTION_22	WHILE_1
0x4001b57	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       440	quote.c	FUNCTION_22	WHILE_1
0x4001b5d	          0x4084ed	                           test bpl, bpl	       440	quote.c	FUNCTION_22	WHILE_1
0x4001b60	            0x7466	                            je 0x4001bc8	       440	quote.c	FUNCTION_22	WHILE_1
0x4001b62	        0x4080fd0a	                            cmp bpl, 0xa	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x4001b66	     0xf8404010000	                            je 0x4001c70	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x4001b6c	        0x4080fd27	                           cmp bpl, 0x27	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001b70	     0xf84b2000000	                            je 0x4001c28	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001b76	        0x4080fd5c	                           cmp bpl, 0x5c	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001b7a	     0xf84a8000000	                            je 0x4001c28	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001b80	          0x488b03	                    mov rax, qword [rbx]	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001b83	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001b86	     0xf8584000000	                           jne 0x4001c10	       141	strbuf.h	FUNCTION_26
0x4001b8c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b91	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b94	      0xe800000000	                          call 0x4001b99	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b99	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b9d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001ba1	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001ba5	        0x4983c401	                              add r12, 1	       440	quote.c	FUNCTION_22	WHILE_1
0x4001ba9	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001bad	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_28
0x4001bb1	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001bb5	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001bb9	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001bbd	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       440	quote.c	FUNCTION_22	WHILE_1
0x4001bc3	          0x4084ed	                           test bpl, bpl	       440	quote.c	FUNCTION_22	WHILE_1
0x4001bc6	            0x759a	                           jne 0x4001b62	       440	quote.c	FUNCTION_22	WHILE_1
0x4001bc8	          0x488b03	                    mov rax, qword [rbx]	       440	quote.c	FUNCTION_22	WHILE_1
0x4001bcb	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001bce	     0xf855c010000	                           jne 0x4001d30	       141	strbuf.h	FUNCTION_26
0x4001bd4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001bd9	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001bdc	      0xe800000000	                          call 0x4001be1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001be1	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001be5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001be9	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001bed	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001bf1	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x4001bf5	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001bf9	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001bfd	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001c01	              0x5b	                                 pop rbx	       451	quote.c	FUNCTION_22
0x4001c02	              0x5d	                                 pop rbp	       451	quote.c	FUNCTION_22
0x4001c03	            0x415c	                                 pop r12	       451	quote.c	FUNCTION_22
0x4001c05	              0xc3	                                     ret	       451	quote.c	FUNCTION_22
0x4001c06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       451	quote.c	FUNCTION_22
0x4001c10	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001c14	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001c18	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001c1b	            0x7580	                           jne 0x4001b9d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001c1d	      0xe96affffff	                           jmp 0x4001b8c	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001c22	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001c28	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001c2b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001c2e	     0xf85b4000000	                           jne 0x4001ce8	       141	strbuf.h	FUNCTION_26
0x4001c34	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001c39	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001c3c	      0xe800000000	                          call 0x4001c41	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001c41	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001c45	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001c49	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001c4d	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001c51	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001c55	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001c59	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001c5d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001c61	      0xe91affffff	                           jmp 0x4001b80	       230	strbuf.h	FUNCTION_28
0x4001c66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       230	strbuf.h	FUNCTION_28
0x4001c70	          0x488b03	                    mov rax, qword [rbx]	       230	strbuf.h	FUNCTION_28
0x4001c73	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001c76	     0xf8594000000	                           jne 0x4001d10	       141	strbuf.h	FUNCTION_26
0x4001c7c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001c81	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001c84	      0xe800000000	                          call 0x4001c89	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001c89	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001c8d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001c91	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001c95	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001c99	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001c9d	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001ca1	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001ca5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001ca9	          0x488b03	                    mov rax, qword [rbx]	       230	strbuf.h	FUNCTION_28
0x4001cac	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001caf	            0x754f	                           jne 0x4001d00	       141	strbuf.h	FUNCTION_26
0x4001cb1	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001cb6	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001cb9	      0xe800000000	                          call 0x4001cbe	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001cbe	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001cc2	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001cc6	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001cca	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001cce	        0xc604106e	              mov byte [rax + rdx], 0x6e	       229	strbuf.h	FUNCTION_28
0x4001cd2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001cd6	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001cda	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001cde	      0xe970feffff	                           jmp 0x4001b53	       444	quote.c	FUNCTION_22	WHILE_1	IF_1
0x4001ce3	       0xf1f440000	                   nop dword [rax + rax]	       444	quote.c	FUNCTION_22	WHILE_1	IF_1
0x4001ce8	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001cec	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001cf0	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001cf3	     0xf854cffffff	                           jne 0x4001c45	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001cf9	      0xe936ffffff	                           jmp 0x4001c34	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001cfe	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d00	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001d04	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d08	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d0b	            0x75b5	                           jne 0x4001cc2	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d0d	            0xeba2	                           jmp 0x4001cb1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d0f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d10	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001d14	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d18	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d1b	     0xf856cffffff	                           jne 0x4001c8d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d21	      0xe956ffffff	                           jmp 0x4001c7c	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d30	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001d34	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d38	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d3b	     0xf85a4feffff	                           jne 0x4001be5	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d41	      0xe98efeffff	                           jmp 0x4001bd4	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d50	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_26
0x4001d54	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d58	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d5b	     0xf85d6fdffff	                           jne 0x4001b37	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001d61	      0xe9c0fdffff	                           jmp 0x4001b26	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
sq_quotef	DO,0:CALL,5:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,0:WHILE,0	44
0x4000920	              0x53	                                push rbx	        63	quote.c	FUNCTION_4
0x4000921	          0x4889fb	                            mov rbx, rdi	        63	quote.c	FUNCTION_4
0x4000924	    0x4881ecf00000	                           sub rsp, 0xf0	        63	quote.c	FUNCTION_4
0x400092b	            0x84c0	                             test al, al	        63	quote.c	FUNCTION_4
0x400092d	      0x4889542450	             mov qword [rsp + 0x50], rdx	        63	quote.c	FUNCTION_4
0x4000932	      0x48894c2458	             mov qword [rsp + 0x58], rcx	        63	quote.c	FUNCTION_4
0x4000937	      0x4c89442460	              mov qword [rsp + 0x60], r8	        63	quote.c	FUNCTION_4
0x400093c	      0x4c894c2468	              mov qword [rsp + 0x68], r9	        63	quote.c	FUNCTION_4
0x4000941	            0x743d	                            je 0x4000980	        63	quote.c	FUNCTION_4
0x4000943	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	        63	quote.c	FUNCTION_4
0x4000948	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	        63	quote.c	FUNCTION_4
0x4000950	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	        63	quote.c	FUNCTION_4
0x4000958	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	        63	quote.c	FUNCTION_4
0x4000960	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	        63	quote.c	FUNCTION_4
0x4000968	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	        63	quote.c	FUNCTION_4
0x4000970	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	        63	quote.c	FUNCTION_4
0x4000978	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	        63	quote.c	FUNCTION_4
0x4000980	    0x64488b042528	                mov rax, qword fs:[0x28]	        63	quote.c	FUNCTION_4
0x4000989	      0x4889442438	             mov qword [rsp + 0x38], rax	        63	quote.c	FUNCTION_4
0x400098e	            0x31c0	                            xor eax, eax	        63	quote.c	FUNCTION_4
0x4000990	    0x488d84240001	                  lea rax, [rsp + 0x100]	        67	quote.c	FUNCTION_4	CALL_1
0x4000998	      0x488d542420	                   lea rdx, [rsp + 0x20]	        68	quote.c	FUNCTION_4	CALL_2
0x400099d	          0x4889e7	                            mov rdi, rsp	        68	quote.c	FUNCTION_4	CALL_2
0x40009a0	      0x4889442428	             mov qword [rsp + 0x28], rax	        67	quote.c	FUNCTION_4	CALL_1
0x40009a5	      0x488d442440	                   lea rax, [rsp + 0x40]	        67	quote.c	FUNCTION_4	CALL_1
0x40009aa	    0x48c704240000	                      mov qword [rsp], 0	        64	quote.c	FUNCTION_4
0x40009b2	    0x48c744240800	                  mov qword [rsp + 8], 0	        64	quote.c	FUNCTION_4
0x40009bb	    0x48c744241000	               mov qword [rsp + 0x10], 0	        64	quote.c	FUNCTION_4
0x40009c4	      0x4889442430	             mov qword [rsp + 0x30], rax	        67	quote.c	FUNCTION_4	CALL_1
0x40009c9	    0xc74424201000	           mov dword [rsp + 0x20], 0x10 	        67	quote.c	FUNCTION_4	CALL_1
0x40009d1	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	        67	quote.c	FUNCTION_4	CALL_1
0x40009d9	      0xe800000000	                          call 0x40009de	        68	quote.c	FUNCTION_4	CALL_2
0x40009de	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        71	quote.c	FUNCTION_4	CALL_4
0x40009e3	          0x4889df	                            mov rdi, rbx	        71	quote.c	FUNCTION_4	CALL_4
0x40009e6	      0xe800000000	                          call 0x40009eb	        71	quote.c	FUNCTION_4	CALL_4
0x40009eb	          0x4889e7	                            mov rdi, rsp	        72	quote.c	FUNCTION_4	CALL_5
0x40009ee	      0xe800000000	                          call 0x40009f3	        72	quote.c	FUNCTION_4	CALL_5
0x40009f3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        73	quote.c	FUNCTION_4
0x40009f8	    0x644833042528	                xor rax, qword fs:[0x28]	        73	quote.c	FUNCTION_4
0x4000a01	            0x7509	                           jne 0x4000a0c	        73	quote.c	FUNCTION_4
0x4000a03	    0x4881c4f00000	                           add rsp, 0xf0	        73	quote.c	FUNCTION_4
0x4000a0a	              0x5b	                                 pop rbx	        73	quote.c	FUNCTION_4
0x4000a0b	              0xc3	                                     ret	        73	quote.c	FUNCTION_4
0x4000a0c	      0xe800000000	                          call 0x4000a11	        73	quote.c	FUNCTION_4
sq_dequote	DO,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,0:WHILE,0	39
0x4000bb0	          0x803f27	                    cmp byte [rdi], 0x27	       103	quote.c	FUNCTION_7	IF_1
0x4000bb3	            0x752f	                           jne 0x4000be4	       103	quote.c	FUNCTION_7	IF_1
0x4000bb5	          0x4889fe	                            mov rsi, rdi	       103	quote.c	FUNCTION_7	IF_1
0x4000bb8	        0x488d4f01	                      lea rcx, [rdi + 1]	       103	quote.c	FUNCTION_7	IF_1
0x4000bbc	         0xfb65601	               movzx edx, byte [rsi + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000bc0	        0x488d41ff	                      lea rax, [rcx - 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000bc4	            0x84d2	                             test dl, dl	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000bc6	            0x741c	                            je 0x4000be4	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000bc8	          0x80fa27	                            cmp dl, 0x27	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000bcb	            0x7423	                            je 0x4000bf0	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000bcd	        0x4883c601	                              add rsi, 1	       106	quote.c	FUNCTION_7	FOR_1
0x4000bd1	          0x8851ff	                  mov byte [rcx - 1], dl	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000bd4	         0xfb65601	               movzx edx, byte [rsi + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000bd8	        0x4883c101	                              add rcx, 1	       106	quote.c	FUNCTION_7	FOR_1
0x4000bdc	        0x488d41ff	                      lea rax, [rcx - 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000be0	            0x84d2	                             test dl, dl	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000be2	            0x75e4	                           jne 0x4000bc8	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000be4	            0x31c0	                            xor eax, eax	       135	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4000be6	              0xc3	                                     ret	       149	quote.c	FUNCTION_8
0x4000be7	    0x660f1f840000	                    nop word [rax + rax]	       149	quote.c	FUNCTION_8
0x4000bf0	         0xfb65602	               movzx edx, byte [rsi + 2]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bf4	            0x84d2	                             test dl, dl	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bf6	            0x7428	                            je 0x4000c20	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bf8	          0x80fa5c	                            cmp dl, 0x5c	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bfb	            0x75e7	                           jne 0x4000be4	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000bfd	         0xfb64603	               movzx eax, byte [rsi + 3]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000c01	            0x3c27	                            cmp al, 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000c03	            0x7404	                            je 0x4000c09	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000c05	            0x3c21	                            cmp al, 0x21	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000c07	            0x75db	                           jne 0x4000be4	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000c09	        0x807e0427	                cmp byte [rsi + 4], 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000c0d	            0x75d5	                           jne 0x4000be4	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000c0f	          0x8841ff	                  mov byte [rcx - 1], al	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000c12	        0x4883c604	                              add rsi, 4	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000c16	            0xebbc	                           jmp 0x4000bd4	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000c18	     0xf1f84000000	                   nop dword [rax + rax]	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000c20	          0xc60000	                       mov byte [rax], 0	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c23	          0x4889f8	                            mov rax, rdi	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000c26	              0xc3	                                     ret	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
quote_path_relative	DO,0:CALL,4:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,0:WHILE,0	39
0x40016b0	              0x55	                                push rbp	       335	quote.c	FUNCTION_19
0x40016b1	              0x53	                                push rbx	       335	quote.c	FUNCTION_19
0x40016b2	          0x4889d3	                            mov rbx, rdx	       335	quote.c	FUNCTION_19
0x40016b5	        0x4883ec28	                           sub rsp, 0x28	       335	quote.c	FUNCTION_19
0x40016b9	          0x4889e2	                            mov rdx, rsp	       337	quote.c	FUNCTION_19	CALL_1
0x40016bc	    0x48c704240000	                      mov qword [rsp], 0	       336	quote.c	FUNCTION_19
0x40016c4	    0x48c744240800	                  mov qword [rsp + 8], 0	       336	quote.c	FUNCTION_19
0x40016cd	    0x64488b042528	                mov rax, qword fs:[0x28]	       335	quote.c	FUNCTION_19
0x40016d6	      0x4889442418	             mov qword [rsp + 0x18], rax	       335	quote.c	FUNCTION_19
0x40016db	            0x31c0	                            xor eax, eax	       335	quote.c	FUNCTION_19
0x40016dd	    0x48c744241000	               mov qword [rsp + 0x10], 0	       336	quote.c	FUNCTION_19
0x40016e6	      0xe800000000	                          call 0x40016eb	       337	quote.c	FUNCTION_19	CALL_1
0x40016eb	          0x4889c5	                            mov rbp, rax	       337	quote.c	FUNCTION_19	CALL_1
0x40016ee	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0x40016f2	    0x48c743080000	                  mov qword [rbx + 8], 0	       164	strbuf.h	FUNCTION_27
0x40016fa	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0x4001700	            0x743e	                            je 0x4001740	       165	strbuf.h	FUNCTION_27	IF_2
0x4001702	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_27	IF_2
0x4001705	          0x4889ef	                            mov rdi, rbp	       339	quote.c	FUNCTION_19	CALL_3
0x4001708	      0xe800000000	                          call 0x400170d	       339	quote.c	FUNCTION_19	CALL_3
0x400170d	            0x31c9	                            xor ecx, ecx	       339	quote.c	FUNCTION_19	CALL_3
0x400170f	          0x4889da	                            mov rdx, rbx	       339	quote.c	FUNCTION_19	CALL_3
0x4001712	          0x4889c6	                            mov rsi, rax	       339	quote.c	FUNCTION_19	CALL_3
0x4001715	          0x4889ef	                            mov rdi, rbp	       339	quote.c	FUNCTION_19	CALL_3
0x4001718	      0xe8d3eaffff	call sym.quote_c_style_counted.constprop.4	       339	quote.c	FUNCTION_19	CALL_3
0x400171d	          0x4889e7	                            mov rdi, rsp	       340	quote.c	FUNCTION_19	CALL_4
0x4001720	      0xe800000000	                          call 0x4001725	       340	quote.c	FUNCTION_19	CALL_4
0x4001725	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       343	quote.c	FUNCTION_19
0x400172a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       343	quote.c	FUNCTION_19
0x4001733	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       342	quote.c	FUNCTION_19
0x4001737	            0x7515	                           jne 0x400174e	       343	quote.c	FUNCTION_19
0x4001739	        0x4883c428	                           add rsp, 0x28	       343	quote.c	FUNCTION_19
0x400173d	              0x5b	                                 pop rbx	       343	quote.c	FUNCTION_19
0x400173e	              0x5d	                                 pop rbp	       343	quote.c	FUNCTION_19
0x400173f	              0xc3	                                     ret	       343	quote.c	FUNCTION_19
0x4001740	    0x803d00000000	                cmp byte [0x04001747], 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4001747	            0x74bc	                            je 0x4001705	       168	strbuf.h	FUNCTION_27	CALL_2
0x4001749	      0xe800000000	                          call 0x400174e	       168	strbuf.h	FUNCTION_27	CALL_2
0x400174e	      0xe800000000	                          call 0x4001753	       343	quote.c	FUNCTION_19
sq_dequote_to_argv_array	DO,0:CALL,1:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,0:WHILE,0	81
0x4000dc0	           0xfb607	                   movzx eax, byte [rdi]	       157	quote.c	FUNCTION_9	IF_1
0x4000dc3	            0x84c0	                             test al, al	       157	quote.c	FUNCTION_9	IF_1
0x4000dc5	     0xf84e1000000	                            je 0x4000eac	       157	quote.c	FUNCTION_9	IF_1
0x4000dcb	              0x55	                                push rbp	       180	quote.c	FUNCTION_11
0x4000dcc	              0x53	                                push rbx	       180	quote.c	FUNCTION_11
0x4000dcd	          0x4889f5	                            mov rbp, rsi	       180	quote.c	FUNCTION_11
0x4000dd0	          0x4889fe	                            mov rsi, rdi	       157	quote.c	FUNCTION_9	IF_1
0x4000dd3	        0x4883ec08	                              sub rsp, 8	       180	quote.c	FUNCTION_11
0x4000dd7	    0x660f1f840000	                    nop word [rax + rax]	       180	quote.c	FUNCTION_11
0x4000de0	            0x3c27	                            cmp al, 0x27	       103	quote.c	FUNCTION_7	IF_1
0x4000de2	            0x752e	                           jne 0x4000e12	       103	quote.c	FUNCTION_7	IF_1
0x4000de4	          0x4889f3	                            mov rbx, rsi	       103	quote.c	FUNCTION_7	IF_1
0x4000de7	        0x488d5601	                      lea rdx, [rsi + 1]	       103	quote.c	FUNCTION_7	IF_1
0x4000deb	         0xfb64301	               movzx eax, byte [rbx + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000def	        0x488d4aff	                      lea rcx, [rdx - 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000df3	            0x84c0	                             test al, al	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000df5	            0x741b	                            je 0x4000e12	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000df7	            0x3c27	                            cmp al, 0x27	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000df9	            0x7425	                            je 0x4000e20	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000dfb	        0x4883c301	                              add rbx, 1	       106	quote.c	FUNCTION_7	FOR_1
0x4000dff	          0x8842ff	                  mov byte [rdx - 1], al	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000e02	         0xfb64301	               movzx eax, byte [rbx + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000e06	        0x4883c201	                              add rdx, 1	       106	quote.c	FUNCTION_7	FOR_1
0x4000e0a	        0x488d4aff	                      lea rcx, [rdx - 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000e0e	            0x84c0	                             test al, al	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000e10	            0x75e5	                           jne 0x4000df7	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000e12	        0x4883c408	                              add rsp, 8	       182	quote.c	FUNCTION_11
0x4000e16	      0xb8ffffffff	                     mov eax, 0xffffffff	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000e1b	              0x5b	                                 pop rbx	       182	quote.c	FUNCTION_11
0x4000e1c	              0x5d	                                 pop rbp	       182	quote.c	FUNCTION_11
0x4000e1d	              0xc3	                                     ret	       182	quote.c	FUNCTION_11
0x4000e1e	            0x6690	                                     nop	       182	quote.c	FUNCTION_11
0x4000e20	         0xfb64302	               movzx eax, byte [rbx + 2]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e24	            0x84c0	                             test al, al	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e26	            0x7468	                            je 0x4000e90	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e28	            0x3c5c	                            cmp al, 0x5c	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e2a	            0x7517	                           jne 0x4000e43	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e2c	         0xfb64303	               movzx eax, byte [rbx + 3]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000e30	            0x3c27	                            cmp al, 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000e32	            0x7404	                            je 0x4000e38	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000e34	            0x3c21	                            cmp al, 0x21	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000e36	            0x7506	                           jne 0x4000e3e	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000e38	        0x807b0427	                cmp byte [rbx + 4], 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000e3c	            0x7462	                            je 0x4000ea0	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000e3e	      0xb85c000000	                           mov eax, 0x5c	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x4000e43	            0x4898	                                    cdqe	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4000e45	    0xf68000000000	                      test byte [rax], 1	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4000e4c	            0x74c4	                            je 0x4000e12	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4000e4e	        0x4883c302	                              add rbx, 2	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e52	    0x660f1f440000	                    nop word [rax + rax]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e58	        0x4883c301	                              add rbx, 1	       137	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4000e5c	           0xfb603	                   movzx eax, byte [rbx]	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4000e5f	    0xf68000000000	                      test byte [rax], 1	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4000e66	            0x75f0	                           jne 0x4000e58	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x4000e68	          0x4885ed	                           test rbp, rbp	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x4000e6b	          0xc60100	                       mov byte [rcx], 0	       139	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e6e	            0x740d	                            je 0x4000e7d	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x4000e70	          0x4889ef	                            mov rdi, rbp	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x4000e73	      0xe800000000	                          call 0x4000e78	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x4000e78	          0x4885db	                           test rbx, rbx	       169	quote.c	FUNCTION_9	DO_1
0x4000e7b	            0x7432	                            je 0x4000eaf	       169	quote.c	FUNCTION_9	DO_1
0x4000e7d	           0xfb603	                   movzx eax, byte [rbx]	       169	quote.c	FUNCTION_9	DO_1
0x4000e80	          0x4889de	                            mov rsi, rbx	       157	quote.c	FUNCTION_9	IF_1
0x4000e83	      0xe958ffffff	                           jmp 0x4000de0	       157	quote.c	FUNCTION_9	IF_1
0x4000e88	     0xf1f84000000	                   nop dword [rax + rax]	       157	quote.c	FUNCTION_9	IF_1
0x4000e90	          0x4885ed	                           test rbp, rbp	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x4000e93	          0xc60100	                       mov byte [rcx], 0	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000e96	            0x7417	                            je 0x4000eaf	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x4000e98	            0x31db	                            xor ebx, ebx	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000e9a	            0xebd4	                           jmp 0x4000e70	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000e9c	         0xf1f4000	                         nop dword [rax]	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000ea0	          0x8842ff	                  mov byte [rdx - 1], al	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000ea3	        0x4883c304	                              add rbx, 4	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000ea7	      0xe956ffffff	                           jmp 0x4000e02	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x4000eac	            0x31c0	                            xor eax, eax	       158	quote.c	FUNCTION_9	IF_1
0x4000eae	              0xc3	                                     ret	       182	quote.c	FUNCTION_11
0x4000eaf	        0x4883c408	                              add rsp, 8	       182	quote.c	FUNCTION_11
0x4000eb3	            0x31c0	                            xor eax, eax	       158	quote.c	FUNCTION_9	IF_1
0x4000eb5	              0x5b	                                 pop rbx	       182	quote.c	FUNCTION_11
0x4000eb6	              0x5d	                                 pop rbp	       182	quote.c	FUNCTION_11
0x4000eb7	              0xc3	                                     ret	       182	quote.c	FUNCTION_11
tcl_quote_buf	DO,0:CALL,9:FOR,0:ELSE,0:SWITCH,1:functions,0:IF,0:WHILE,1	156
0x4001d70	            0x4154	                                push r12	       454	quote.c	FUNCTION_23
0x4001d72	              0x55	                                push rbp	       454	quote.c	FUNCTION_23
0x4001d73	          0x4989f4	                            mov r12, rsi	       454	quote.c	FUNCTION_23
0x4001d76	              0x53	                                push rbx	       454	quote.c	FUNCTION_23
0x4001d77	          0x488b07	                    mov rax, qword [rdi]	       454	quote.c	FUNCTION_23
0x4001d7a	          0x4889fd	                            mov rbp, rdi	       454	quote.c	FUNCTION_23
0x4001d7d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001d80	     0xf854a020000	                           jne 0x4001fd0	       141	strbuf.h	FUNCTION_26
0x4001d86	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001d8b	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001d8e	      0xe800000000	                          call 0x4001d93	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001d93	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001d97	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001d9b	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001d9f	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001da3	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_28
0x4001da7	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001dab	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4001daf	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001db3	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_28
0x4001db8	        0x4983c401	                              add r12, 1	       458	quote.c	FUNCTION_23	WHILE_1
0x4001dbc	    0x410fb65c24ff	               movzx ebx, byte [r12 - 1]	       458	quote.c	FUNCTION_23	WHILE_1
0x4001dc2	            0x84db	                             test bl, bl	       458	quote.c	FUNCTION_23	WHILE_1
0x4001dc4	            0x745a	                            je 0x4001e20	       458	quote.c	FUNCTION_23	WHILE_1
0x4001dc6	          0x80fb22	                            cmp bl, 0x22	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001dc9	     0xf84cc000000	                            je 0x4001e9b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001dcf	     0xf8fb3000000	                            jg 0x4001e88	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001dd5	          0x80fb0b	                             cmp bl, 0xb	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001dd8	     0xf8432010000	                            je 0x4001f10	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001dde	     0xf8f7c000000	                            jg 0x4001e60	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001de4	          0x80fb09	                               cmp bl, 9	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001de7	     0xf8453010000	                            je 0x4001f40	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001ded	          0x80fb0a	                             cmp bl, 0xa	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001df0	     0xf85df000000	                           jne 0x4001ed5	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001df6	        0x4983c401	                              add r12, 1	       458	quote.c	FUNCTION_23	WHILE_1
0x4001dfa	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001dff	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e04	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e07	      0xe800000000	                          call 0x4001e0c	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e0c	    0x410fb65c24ff	               movzx ebx, byte [r12 - 1]	       458	quote.c	FUNCTION_23	WHILE_1
0x4001e12	            0x84db	                             test bl, bl	       458	quote.c	FUNCTION_23	WHILE_1
0x4001e14	            0x75b0	                           jne 0x4001dc6	       458	quote.c	FUNCTION_23	WHILE_1
0x4001e16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       458	quote.c	FUNCTION_23	WHILE_1
0x4001e20	        0x488b4500	                    mov rax, qword [rbp]	       458	quote.c	FUNCTION_23	WHILE_1
0x4001e24	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001e27	     0xf858b010000	                           jne 0x4001fb8	       141	strbuf.h	FUNCTION_26
0x4001e2d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001e32	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001e35	      0xe800000000	                          call 0x4001e3a	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001e3a	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001e3e	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001e42	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001e46	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001e4a	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_28
0x4001e4e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001e52	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4001e56	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001e5a	              0x5b	                                 pop rbx	       486	quote.c	FUNCTION_23
0x4001e5b	              0x5d	                                 pop rbp	       486	quote.c	FUNCTION_23
0x4001e5c	            0x415c	                                 pop r12	       486	quote.c	FUNCTION_23
0x4001e5e	              0xc3	                                     ret	       486	quote.c	FUNCTION_23
0x4001e5f	              0x90	                                     nop	       486	quote.c	FUNCTION_23
0x4001e60	          0x80fb0c	                             cmp bl, 0xc	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e63	     0xf84f7000000	                            je 0x4001f60	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e69	          0x80fb0d	                             cmp bl, 0xd	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e6c	            0x7567	                           jne 0x4001ed5	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e6e	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e73	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e78	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e7b	      0xe800000000	                          call 0x4001e80	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e80	      0xe933ffffff	                           jmp 0x4001db8	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e85	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001e88	          0x80fb5d	                            cmp bl, 0x5d	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e8b	     0xf8fef000000	                            jg 0x4001f80	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e91	          0x80fb5b	                            cmp bl, 0x5b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e94	            0x7d05	                           jge 0x4001e9b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e96	          0x80fb24	                            cmp bl, 0x24	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e99	            0x753a	                           jne 0x4001ed5	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e9b	        0x488b4500	                    mov rax, qword [rbp]	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001e9f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001ea2	     0xf85f7000000	                           jne 0x4001f9f	       141	strbuf.h	FUNCTION_26
0x4001ea8	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ead	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001eb0	      0xe800000000	                          call 0x4001eb5	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001eb5	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001eb9	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001ebd	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001ec1	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001ec5	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001ec9	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001ecd	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4001ed1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001ed5	        0x488b4500	                    mov rax, qword [rbp]	       230	strbuf.h	FUNCTION_28
0x4001ed9	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001edc	            0x7552	                           jne 0x4001f30	       141	strbuf.h	FUNCTION_26
0x4001ede	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ee3	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ee6	      0xe800000000	                          call 0x4001eeb	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001eeb	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001eef	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001ef3	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001ef7	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001efb	          0x881c10	                mov byte [rax + rdx], bl	       229	strbuf.h	FUNCTION_28
0x4001efe	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001f02	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4001f06	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001f0a	      0xe9a9feffff	                           jmp 0x4001db8	       230	strbuf.h	FUNCTION_28
0x4001f0f	              0x90	                                     nop	       230	strbuf.h	FUNCTION_28
0x4001f10	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f15	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f1a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f1d	      0xe800000000	                          call 0x4001f22	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f22	      0xe991feffff	                           jmp 0x4001db8	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f27	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f30	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_26
0x4001f34	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001f38	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001f3b	            0x75b2	                           jne 0x4001eef	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001f3d	            0xeb9f	                           jmp 0x4001ede	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001f3f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001f40	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f45	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f4a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f4d	      0xe800000000	                          call 0x4001f52	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f52	      0xe961feffff	                           jmp 0x4001db8	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f57	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f60	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f65	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f6a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f6d	      0xe800000000	                          call 0x4001f72	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f72	      0xe941feffff	                           jmp 0x4001db8	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f77	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001f80	          0x80fb7b	                            cmp bl, 0x7b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001f83	     0xf8412ffffff	                            je 0x4001e9b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001f89	          0x80fb7d	                            cmp bl, 0x7d	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001f8c	     0xf8543ffffff	                           jne 0x4001ed5	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001f92	        0x488b4500	                    mov rax, qword [rbp]	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001f96	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001f99	     0xf8409ffffff	                            je 0x4001ea8	       141	strbuf.h	FUNCTION_26
0x4001f9f	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_26
0x4001fa3	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fa7	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001faa	     0xf8509ffffff	                           jne 0x4001eb9	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fb0	      0xe9f3feffff	                           jmp 0x4001ea8	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fb5	           0xf1f00	                         nop dword [rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fb8	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_26
0x4001fbc	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fc0	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fc3	     0xf8575feffff	                           jne 0x4001e3e	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fc9	      0xe95ffeffff	                           jmp 0x4001e2d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fce	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fd0	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_26
0x4001fd4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fd8	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fdb	     0xf85b6fdffff	                           jne 0x4001d97	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001fe1	      0xe9a0fdffff	                           jmp 0x4001d86	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
quote_two_c_style	DO,0:CALL,8:FOR,0:ELSE,1:SWITCH,0:functions,0:IF,3:WHILE,0	138
0x40013e0	            0x4154	                                push r12	       296	quote.c	FUNCTION_16
0x40013e2	              0x55	                                push rbp	       296	quote.c	FUNCTION_16
0x40013e3	          0x4989f1	                             mov r9, rsi	       296	quote.c	FUNCTION_16
0x40013e6	              0x53	                                push rbx	       296	quote.c	FUNCTION_16
0x40013e7	          0x4889f5	                            mov rbp, rsi	       296	quote.c	FUNCTION_16
0x40013ea	          0x4989fc	                            mov r12, rdi	       296	quote.c	FUNCTION_16
0x40013ed	          0x4889d3	                            mov rbx, rdx	       296	quote.c	FUNCTION_16
0x40013f0	            0x31f6	                            xor esi, esi	       253	quote.c	FUNCTION_14
0x40013f2	        0x4883ec10	                           sub rsp, 0x10	       296	quote.c	FUNCTION_16
0x40013f6	    0x448b15000000	           mov r10d, dword [0x040013fd] 	       296	quote.c	FUNCTION_16
0x40013fd	           0xf1f00	                         nop dword [rax]	       296	quote.c	FUNCTION_16
0x4001400	        0x410fb601	                    movzx eax, byte [r9]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001404	          0x4889c7	                            mov rdi, rax	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001407	     0xfbe80000000	                   movsx eax, byte [rax]	       206	quote.c	FUNCTION_12
0x400140e	          0x4189c0	                            mov r8d, eax	       206	quote.c	FUNCTION_12
0x4001411	          0x4401d0	                           add eax, r10d	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001414	            0x85c0	                           test eax, eax	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001416	      0xb800000000	                              mov eax, 0	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x400141b	            0x7f1d	                            jg 0x400143a	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x400141d	        0x4883c001	                              add rax, 1	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001421	      0x410fb61401	              movzx edx, byte [r9 + rax]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001426	          0x4889d7	                            mov rdi, rdx	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001429	     0xfbe92000000	                   movsx edx, byte [rdx]	       206	quote.c	FUNCTION_12
0x4001430	          0x4189d0	                            mov r8d, edx	       206	quote.c	FUNCTION_12
0x4001433	          0x4401d2	                           add edx, r10d	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001436	            0x85d2	                           test edx, edx	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4001438	            0x7ee3	                           jle 0x400141d	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x400143a	          0x4084ff	                           test dil, dil	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x400143d	            0x7429	                            je 0x4001468	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x400143f	            0x31d2	                            xor edx, edx	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x4001441	          0x4c39cd	                             cmp rbp, r9	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x4001444	      0x4d8d4c0101	                  lea r9, [r9 + rax + 1]	       269	quote.c	FUNCTION_14	FOR_1
0x4001449	           0xf94c2	                                 sete dl	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x400144c	          0x4801d6	                            add rsi, rdx	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x400144f	          0x4801c6	                            add rsi, rax	       266	quote.c	FUNCTION_14	FOR_1
0x4001452	        0x488d4602	                      lea rax, [rsi + 2]	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4001456	        0x4883c604	                              add rsi, 4	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x400145a	        0x4180f820	                           cmp r8b, 0x20	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x400145e	        0x480f4df0	                         cmovge rsi, rax	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4001462	            0xeb9c	                           jmp 0x4001400	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4001464	         0xf1f4000	                         nop dword [rax]	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4001468	          0x4801f0	                            add rax, rsi	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x400146b	          0x4c39cd	                             cmp rbp, r9	       282	quote.c	FUNCTION_14	IF_5
0x400146e	            0x7444	                            je 0x40014b4	       282	quote.c	FUNCTION_14	IF_5
0x4001470	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4001474	            0x743e	                            je 0x40014b4	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4001476	            0x85c9	                           test ecx, ecx	       299	quote.c	FUNCTION_16	IF_1	IF_2
0x4001478	     0xf8481000000	                            je 0x40014ff	       299	quote.c	FUNCTION_16	IF_1	IF_2
0x400147e	          0x4c89e2	                            mov rdx, r12	       292	quote.c	FUNCTION_15	CALL_1
0x4001481	          0x4889ef	                            mov rdi, rbp	       292	quote.c	FUNCTION_15	CALL_1
0x4001484	      0xb901000000	                              mov ecx, 1	       292	quote.c	FUNCTION_15	CALL_1
0x4001489	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4001490	      0xe85bedffff	call sym.quote_c_style_counted.constprop.4	       292	quote.c	FUNCTION_15	CALL_1
0x4001495	        0x4883c410	                           add rsp, 0x10	       309	quote.c	FUNCTION_16
0x4001499	          0x4c89e2	                            mov rdx, r12	       292	quote.c	FUNCTION_15	CALL_1
0x400149c	          0x4889df	                            mov rdi, rbx	       292	quote.c	FUNCTION_15	CALL_1
0x400149f	              0x5b	                                 pop rbx	       309	quote.c	FUNCTION_16
0x40014a0	              0x5d	                                 pop rbp	       309	quote.c	FUNCTION_16
0x40014a1	            0x415c	                                 pop r12	       309	quote.c	FUNCTION_16
0x40014a3	      0xb901000000	                              mov ecx, 1	       292	quote.c	FUNCTION_15	CALL_1
0x40014a8	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x40014af	      0xe93cedffff	jmp sym.quote_c_style_counted.constprop.4	       292	quote.c	FUNCTION_15	CALL_1
0x40014b4	            0x31f6	                            xor esi, esi	       292	quote.c	FUNCTION_15	CALL_1
0x40014b6	          0x4889df	                            mov rdi, rbx	       292	quote.c	FUNCTION_15	CALL_1
0x40014b9	        0x894c240c	              mov dword [rsp + 0xc], ecx	       292	quote.c	FUNCTION_15	CALL_1
0x40014bd	      0xe87eebffff	call sym.quote_c_style_counted.constprop.3	       292	quote.c	FUNCTION_15	CALL_1
0x40014c2	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x40014c5	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x40014c9	            0x75ab	                           jne 0x4001476	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x40014cb	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014ce	      0xe800000000	                          call 0x40014d3	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014d3	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014d6	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014d9	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014dc	      0xe800000000	                          call 0x40014e1	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014e1	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014e4	      0xe800000000	                          call 0x40014e9	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014e9	        0x4883c410	                           add rsp, 0x10	       309	quote.c	FUNCTION_16
0x40014ed	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014f0	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014f3	              0x5b	                                 pop rbx	       309	quote.c	FUNCTION_16
0x40014f4	              0x5d	                                 pop rbp	       309	quote.c	FUNCTION_16
0x40014f5	            0x415c	                                 pop r12	       309	quote.c	FUNCTION_16
0x40014f7	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014fa	      0xe900000000	                           jmp 0x40014ff	       279	strbuf.h	FUNCTION_29	CALL_2
0x40014ff	        0x498b1424	                    mov rdx, qword [r12]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001503	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_26
0x4001506	     0xf84a4000000	                            je 0x40015b0	       141	strbuf.h	FUNCTION_26
0x400150c	      0x498b442408	                mov rax, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x4001511	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001515	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001518	     0xf8492000000	                            je 0x40015b0	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400151e	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001523	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001527	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x400152e	          0x4889ef	                            mov rdi, rbp	       292	quote.c	FUNCTION_15	CALL_1
0x4001531	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001536	      0xb901000000	                              mov ecx, 1	       292	quote.c	FUNCTION_15	CALL_1
0x400153b	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x400153f	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001544	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x4001549	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400154d	          0x4c89e2	                            mov rdx, r12	       292	quote.c	FUNCTION_15	CALL_1
0x4001550	      0xe89becffff	call sym.quote_c_style_counted.constprop.4	       292	quote.c	FUNCTION_15	CALL_1
0x4001555	          0x4c89e2	                            mov rdx, r12	       292	quote.c	FUNCTION_15	CALL_1
0x4001558	      0xb901000000	                              mov ecx, 1	       292	quote.c	FUNCTION_15	CALL_1
0x400155d	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4001564	          0x4889df	                            mov rdi, rbx	       292	quote.c	FUNCTION_15	CALL_1
0x4001567	      0xe884ecffff	call sym.quote_c_style_counted.constprop.4	       292	quote.c	FUNCTION_15	CALL_1
0x400156c	        0x498b1424	                    mov rdx, qword [r12]	       292	quote.c	FUNCTION_15	CALL_1
0x4001570	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_26
0x4001573	            0x7552	                           jne 0x40015c7	       141	strbuf.h	FUNCTION_26
0x4001575	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400157a	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x400157d	      0xe800000000	                          call 0x4001582	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001582	      0x498b442408	                mov rax, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001587	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400158c	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001590	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001595	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x4001599	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400159e	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x40015a3	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40015a7	        0x4883c410	                           add rsp, 0x10	       309	quote.c	FUNCTION_16
0x40015ab	              0x5b	                                 pop rbx	       309	quote.c	FUNCTION_16
0x40015ac	              0x5d	                                 pop rbp	       309	quote.c	FUNCTION_16
0x40015ad	            0x415c	                                 pop r12	       309	quote.c	FUNCTION_16
0x40015af	              0xc3	                                     ret	       309	quote.c	FUNCTION_16
0x40015b0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015b5	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015b8	      0xe800000000	                          call 0x40015bd	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015bd	      0x498b442408	                mov rax, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015c2	      0xe957ffffff	                           jmp 0x400151e	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015c7	      0x498b442408	                mov rax, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x40015cc	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015d0	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015d3	            0x75b2	                           jne 0x4001587	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015d5	            0xeb9e	                           jmp 0x4001575	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
perl_quote_buf	DO,0:CALL,4:FOR,0:ELSE,0:SWITCH,0:functions,0:IF,1:WHILE,1	105
0x4001990	            0x4154	                                push r12	       418	quote.c	FUNCTION_21
0x4001992	              0x55	                                push rbp	       418	quote.c	FUNCTION_21
0x4001993	          0x4889f5	                            mov rbp, rsi	       418	quote.c	FUNCTION_21
0x4001996	              0x53	                                push rbx	       418	quote.c	FUNCTION_21
0x4001997	          0x488b07	                    mov rax, qword [rdi]	       418	quote.c	FUNCTION_21
0x400199a	          0x4889fb	                            mov rbx, rdi	       418	quote.c	FUNCTION_21
0x400199d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40019a0	     0xf854a010000	                           jne 0x4001af0	       141	strbuf.h	FUNCTION_26
0x40019a6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40019ab	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40019ae	      0xe800000000	                          call 0x40019b3	       228	strbuf.h	FUNCTION_28	CALL_2
0x40019b3	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40019b7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40019bb	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40019bf	        0x4c8d6501	                      lea r12, [rbp + 1]	       424	quote.c	FUNCTION_21	WHILE_1
0x40019c3	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40019c7	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x40019cb	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40019cf	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40019d3	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40019d7	         0xfb66d00	                   movzx ebp, byte [rbp]	       424	quote.c	FUNCTION_21	WHILE_1
0x40019db	          0x4084ed	                           test bpl, bpl	       424	quote.c	FUNCTION_21	WHILE_1
0x40019de	            0x7544	                           jne 0x4001a24	       424	quote.c	FUNCTION_21	WHILE_1
0x40019e0	      0xe9bb000000	                           jmp 0x4001aa0	       424	quote.c	FUNCTION_21	WHILE_1
0x40019e5	           0xf1f00	                         nop dword [rax]	       424	quote.c	FUNCTION_21	WHILE_1
0x40019e8	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40019ed	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40019f0	      0xe800000000	                          call 0x40019f5	       228	strbuf.h	FUNCTION_28	CALL_2
0x40019f5	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40019f9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40019fd	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001a01	        0x4983c401	                              add r12, 1	       424	quote.c	FUNCTION_21	WHILE_1
0x4001a05	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001a09	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_28
0x4001a0d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001a11	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001a15	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001a19	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       424	quote.c	FUNCTION_21	WHILE_1
0x4001a1f	          0x4084ed	                           test bpl, bpl	       424	quote.c	FUNCTION_21	WHILE_1
0x4001a22	            0x747c	                            je 0x4001aa0	       424	quote.c	FUNCTION_21	WHILE_1
0x4001a24	        0x4080fd27	                           cmp bpl, 0x27	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001a28	            0x7426	                            je 0x4001a50	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001a2a	        0x4080fd5c	                           cmp bpl, 0x5c	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001a2e	            0x7420	                            je 0x4001a50	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001a30	          0x488b03	                    mov rax, qword [rbx]	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001a33	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001a36	            0x74b0	                            je 0x40019e8	       141	strbuf.h	FUNCTION_26
0x4001a38	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001a3c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a40	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a43	            0x75b4	                           jne 0x40019f9	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a45	            0xeba1	                           jmp 0x40019e8	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a47	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a50	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a53	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001a56	            0x7538	                           jne 0x4001a90	       141	strbuf.h	FUNCTION_26
0x4001a58	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a5d	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a60	      0xe800000000	                          call 0x4001a65	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a65	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a69	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001a6d	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001a71	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001a75	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001a79	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001a7d	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001a81	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001a85	            0xeba9	                           jmp 0x4001a30	       230	strbuf.h	FUNCTION_28
0x4001a87	    0x660f1f840000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_28
0x4001a90	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001a94	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a98	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a9b	            0x75cc	                           jne 0x4001a69	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a9d	            0xebb9	                           jmp 0x4001a58	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a9f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001aa0	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001aa3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001aa6	            0x7538	                           jne 0x4001ae0	       141	strbuf.h	FUNCTION_26
0x4001aa8	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001aad	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ab0	      0xe800000000	                          call 0x4001ab5	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ab5	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ab9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001abd	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001ac1	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001ac5	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x4001ac9	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001acd	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001ad1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001ad5	              0x5b	                                 pop rbx	       430	quote.c	FUNCTION_21
0x4001ad6	              0x5d	                                 pop rbp	       430	quote.c	FUNCTION_21
0x4001ad7	            0x415c	                                 pop r12	       430	quote.c	FUNCTION_21
0x4001ad9	              0xc3	                                     ret	       430	quote.c	FUNCTION_21
0x4001ada	    0x660f1f440000	                    nop word [rax + rax]	       430	quote.c	FUNCTION_21
0x4001ae0	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001ae4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001ae8	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001aeb	            0x75cc	                           jne 0x4001ab9	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001aed	            0xebb9	                           jmp 0x4001aa8	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001aef	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001af0	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_26
0x4001af4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001af8	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001afb	     0xf85b6feffff	                           jne 0x40019b7	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001b01	      0xe9a0feffff	                           jmp 0x40019a6	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
sq_quote_argv	DO,0:CALL,3:FOR,1:ELSE,0:SWITCH,0:functions,0:IF,0:WHILE,0	41
0x4000a20	              0x55	                                push rbp	        76	quote.c	FUNCTION_5
0x4000a21	              0x53	                                push rbx	        76	quote.c	FUNCTION_5
0x4000a22	          0x4889f5	                            mov rbp, rsi	        76	quote.c	FUNCTION_5
0x4000a25	      0xbeff000000	                           mov esi, 0xff	        80	quote.c	FUNCTION_5	CALL_1
0x4000a2a	          0x4889fb	                            mov rbx, rdi	        76	quote.c	FUNCTION_5
0x4000a2d	        0x4883ec08	                              sub rsp, 8	        76	quote.c	FUNCTION_5
0x4000a31	      0xe800000000	                          call 0x4000a36	        80	quote.c	FUNCTION_5	CALL_1
0x4000a36	      0x48837d0000	                      cmp qword [rbp], 0	        81	quote.c	FUNCTION_5	FOR_1
0x4000a3b	            0x7547	                           jne 0x4000a84	        81	quote.c	FUNCTION_5	FOR_1
0x4000a3d	            0xeb61	                           jmp 0x4000aa0	        81	quote.c	FUNCTION_5	FOR_1
0x4000a3f	              0x90	                                     nop	        81	quote.c	FUNCTION_5	FOR_1
0x4000a40	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000a45	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000a48	      0xe800000000	                          call 0x4000a4d	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000a4d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000a51	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000a55	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000a59	          0x4889df	                            mov rdi, rbx	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x4000a5c	        0x4883c508	                              add rbp, 8	        81	quote.c	FUNCTION_5	FOR_1
0x4000a60	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000a64	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_28
0x4000a68	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000a6c	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000a70	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000a74	        0x488b75f8	                mov rsi, qword [rbp - 8]	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x4000a78	      0xe800000000	                          call 0x4000a7d	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x4000a7d	      0x48837d0000	                      cmp qword [rbp], 0	        81	quote.c	FUNCTION_5	FOR_1
0x4000a82	            0x741c	                            je 0x4000aa0	        81	quote.c	FUNCTION_5	FOR_1
0x4000a84	          0x488b03	                    mov rax, qword [rbx]	        81	quote.c	FUNCTION_5	FOR_1
0x4000a87	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000a8a	            0x74b4	                            je 0x4000a40	       141	strbuf.h	FUNCTION_26
0x4000a8c	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000a90	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000a94	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000a97	            0x75b8	                           jne 0x4000a51	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000a99	            0xeba5	                           jmp 0x4000a40	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000a9b	       0xf1f440000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000aa0	        0x4883c408	                              add rsp, 8	        85	quote.c	FUNCTION_5
0x4000aa4	              0x5b	                                 pop rbx	        85	quote.c	FUNCTION_5
0x4000aa5	              0x5d	                                 pop rbp	        85	quote.c	FUNCTION_5
0x4000aa6	              0xc3	                                     ret	        85	quote.c	FUNCTION_5
basic_regex_quote_buf	DO,0:CALL,8:FOR,0:ELSE,0:SWITCH,1:functions,0:IF,3:WHILE,1	162
0x4001ff0	            0x4155	                                push r13	       489	quote.c	FUNCTION_24
0x4001ff2	            0x4154	                                push r12	       489	quote.c	FUNCTION_24
0x4001ff4	          0x4989f4	                            mov r12, rsi	       489	quote.c	FUNCTION_24
0x4001ff7	              0x55	                                push rbp	       489	quote.c	FUNCTION_24
0x4001ff8	              0x53	                                push rbx	       489	quote.c	FUNCTION_24
0x4001ff9	          0x4889fb	                            mov rbx, rdi	       489	quote.c	FUNCTION_24
0x4001ffc	        0x4883ec08	                              sub rsp, 8	       489	quote.c	FUNCTION_24
0x4002000	           0xfb606	                   movzx eax, byte [rsi]	       492	quote.c	FUNCTION_24	IF_1
0x4002003	            0x3c5e	                            cmp al, 0x5e	       492	quote.c	FUNCTION_24	IF_1
0x4002005	     0xf846d010000	                            je 0x4002178	       492	quote.c	FUNCTION_24	IF_1
0x400200b	            0x3c2a	                            cmp al, 0x2a	       497	quote.c	FUNCTION_24	IF_2
0x400200d	     0xf841d010000	                            je 0x4002130	       497	quote.c	FUNCTION_24	IF_2
0x4002013	    0x49bd40040000	          movabs r13, 0x180000000000440 	       497	quote.c	FUNCTION_24	IF_2
0x400201d	            0xeb4d	                           jmp 0x400206c	       497	quote.c	FUNCTION_24	IF_2
0x400201f	              0x90	                                     nop	       497	quote.c	FUNCTION_24	IF_2
0x4002020	        0x490fa3c5	                             bt r13, rax	       497	quote.c	FUNCTION_24	IF_2
0x4002024	     0xf828e000000	                            jb 0x40020b8	       497	quote.c	FUNCTION_24	IF_2
0x400202a	            0x84c0	                             test al, al	       497	quote.c	FUNCTION_24	IF_2
0x400202c	            0x7554	                           jne 0x4002082	       497	quote.c	FUNCTION_24	IF_2
0x400202e	      0x41803c2400	                       cmp byte [r12], 0	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x4002033	     0xf84c7000000	                            je 0x4002100	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x4002039	          0x488b03	                    mov rax, qword [rbx]	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x400203c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400203f	            0x745f	                            je 0x40020a0	       141	strbuf.h	FUNCTION_26
0x4002041	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4002045	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002049	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400204c	            0x7452	                            je 0x40020a0	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400204e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002050	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4002054	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4002058	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400205c	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_28
0x4002060	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4002064	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4002068	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400206c	        0x4983c401	                              add r12, 1	       501	quote.c	FUNCTION_24	WHILE_1
0x4002070	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       501	quote.c	FUNCTION_24	WHILE_1
0x4002076	          0x4084ed	                           test bpl, bpl	       501	quote.c	FUNCTION_24	WHILE_1
0x4002079	            0x7475	                            je 0x40020f0	       501	quote.c	FUNCTION_24	WHILE_1
0x400207b	          0x8d45dc	                   lea eax, [rbp - 0x24]	       501	quote.c	FUNCTION_24	WHILE_1
0x400207e	            0x3c38	                            cmp al, 0x38	       501	quote.c	FUNCTION_24	WHILE_1
0x4002080	            0x769e	                           jbe 0x4002020	       501	quote.c	FUNCTION_24	WHILE_1
0x4002082	          0x488b03	                    mov rax, qword [rbx]	       501	quote.c	FUNCTION_24	WHILE_1
0x4002085	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4002088	            0x7416	                            je 0x40020a0	       141	strbuf.h	FUNCTION_26
0x400208a	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x400208e	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002092	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002095	            0x75b9	                           jne 0x4002050	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002097	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40020a0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40020a5	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40020a8	      0xe800000000	                          call 0x40020ad	       228	strbuf.h	FUNCTION_28	CALL_2
0x40020ad	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40020b1	            0xeb9d	                           jmp 0x4002050	       228	strbuf.h	FUNCTION_28	CALL_2
0x40020b3	       0xf1f440000	                   nop dword [rax + rax]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40020b8	          0x488b03	                    mov rax, qword [rbx]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40020bb	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40020be	            0x7448	                            je 0x4002108	       141	strbuf.h	FUNCTION_26
0x40020c0	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x40020c4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40020c8	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40020cb	            0x743b	                            je 0x4002108	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40020cd	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40020d1	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40020d5	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40020d9	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x40020dd	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40020e1	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40020e5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40020e9	      0xe94bffffff	                           jmp 0x4002039	       230	strbuf.h	FUNCTION_28
0x40020ee	            0x6690	                                     nop	       230	strbuf.h	FUNCTION_28
0x40020f0	        0x4883c408	                              add rsp, 8	       523	quote.c	FUNCTION_24
0x40020f4	              0x5b	                                 pop rbx	       523	quote.c	FUNCTION_24
0x40020f5	              0x5d	                                 pop rbp	       523	quote.c	FUNCTION_24
0x40020f6	            0x415c	                                 pop r12	       523	quote.c	FUNCTION_24
0x40020f8	            0x415d	                                 pop r13	       523	quote.c	FUNCTION_24
0x40020fa	              0xc3	                                     ret	       523	quote.c	FUNCTION_24
0x40020fb	       0xf1f440000	                   nop dword [rax + rax]	       523	quote.c	FUNCTION_24
0x4002100	          0x488b03	                    mov rax, qword [rbx]	       523	quote.c	FUNCTION_24
0x4002103	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4002106	            0x7518	                           jne 0x4002120	       141	strbuf.h	FUNCTION_26
0x4002108	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400210d	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002110	      0xe800000000	                          call 0x4002115	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002115	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002119	            0xebb2	                           jmp 0x40020cd	       228	strbuf.h	FUNCTION_28	CALL_2
0x400211b	       0xf1f440000	                   nop dword [rax + rax]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002120	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4002124	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002128	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400212b	            0x75a0	                           jne 0x40020cd	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400212d	            0xebd9	                           jmp 0x4002108	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400212f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002130	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002133	        0x4983c401	                              add r12, 1	       499	quote.c	FUNCTION_24	CALL_3
0x4002137	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400213a	     0xf85be000000	                           jne 0x40021fe	       141	strbuf.h	FUNCTION_26
0x4002140	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002145	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002148	      0xe800000000	                          call 0x400214d	       228	strbuf.h	FUNCTION_28	CALL_2
0x400214d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002151	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4002155	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4002159	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400215d	        0xc604102a	              mov byte [rax + rdx], 0x2a	       229	strbuf.h	FUNCTION_28
0x4002161	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4002165	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4002169	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400216d	      0xe9a1feffff	                           jmp 0x4002013	       230	strbuf.h	FUNCTION_28
0x4002172	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_28
0x4002178	          0x488b07	                    mov rax, qword [rdi]	       230	strbuf.h	FUNCTION_28
0x400217b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400217e	     0xf85ac000000	                           jne 0x4002230	       141	strbuf.h	FUNCTION_26
0x4002184	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002189	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400218c	      0xe800000000	                          call 0x4002191	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002191	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4002195	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4002199	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400219d	      0x498d6c2401	                      lea rbp, [r12 + 1]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x40021a2	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40021a6	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x40021aa	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40021ae	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40021b2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40021b6	          0x488b03	                    mov rax, qword [rbx]	       230	strbuf.h	FUNCTION_28
0x40021b9	      0x450fb62c24	                  movzx r13d, byte [r12]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x40021be	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40021c1	            0x7555	                           jne 0x4002218	       141	strbuf.h	FUNCTION_26
0x40021c3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40021c8	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40021cb	      0xe800000000	                          call 0x40021d0	       228	strbuf.h	FUNCTION_28	CALL_2
0x40021d0	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40021d4	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40021d8	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40021dc	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40021e0	        0x44882c10	              mov byte [rax + rdx], r13b	       229	strbuf.h	FUNCTION_28
0x40021e4	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40021e8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40021ec	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40021f0	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       230	strbuf.h	FUNCTION_28
0x40021f6	          0x4989ec	                            mov r12, rbp	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x40021f9	      0xe90dfeffff	                           jmp 0x400200b	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x40021fe	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4002202	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002206	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002209	     0xf8542ffffff	                           jne 0x4002151	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400220f	      0xe92cffffff	                           jmp 0x4002140	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002214	         0xf1f4000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002218	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x400221c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002220	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002223	            0x75af	                           jne 0x40021d4	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002225	            0xeb9c	                           jmp 0x40021c3	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002227	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002230	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_26
0x4002234	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002238	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400223b	     0xf8554ffffff	                           jne 0x4002195	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4002241	      0xe93effffff	                           jmp 0x4002184	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
sq_quote_argv_pretty	DO,0:CALL,2:FOR,1:ELSE,0:SWITCH,0:functions,0:IF,0:WHILE,0	68
0x4000ab0	        0x48833e00	                      cmp qword [rsi], 0	        91	quote.c	FUNCTION_6	FOR_1
0x4000ab4	     0xf84c1000000	                            je 0x4000b7b	        91	quote.c	FUNCTION_6	FOR_1
0x4000aba	            0x4155	                                push r13	        88	quote.c	FUNCTION_6
0x4000abc	            0x4154	                                push r12	        88	quote.c	FUNCTION_6
0x4000abe	          0x4989f5	                            mov r13, rsi	        88	quote.c	FUNCTION_6
0x4000ac1	              0x55	                                push rbp	        88	quote.c	FUNCTION_6
0x4000ac2	              0x53	                                push rbx	        88	quote.c	FUNCTION_6
0x4000ac3	          0x4889fd	                            mov rbp, rdi	        88	quote.c	FUNCTION_6
0x4000ac6	        0x4883ec08	                              sub rsp, 8	        88	quote.c	FUNCTION_6
0x4000aca	    0x660f1f440000	                    nop word [rax + rax]	        88	quote.c	FUNCTION_6
0x4000ad0	        0x488b4500	                    mov rax, qword [rbp]	        88	quote.c	FUNCTION_6
0x4000ad4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000ad7	     0xf85a3000000	                           jne 0x4000b80	       141	strbuf.h	FUNCTION_26
0x4000add	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000ae2	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000ae5	      0xe800000000	                          call 0x4000aea	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000aea	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000aee	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000af2	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000af6	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000afa	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_28
0x4000afe	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000b02	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4000b06	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000b0a	        0x4d8b6500	                    mov r12, qword [r13]	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x4000b0e	      0x410fb63424	                   movzx esi, byte [r12]	        51	quote.c	FUNCTION_3	FOR_1
0x4000b13	          0x4084f6	                           test sil, sil	        51	quote.c	FUNCTION_3	FOR_1
0x4000b16	            0x7434	                            je 0x4000b4c	        51	quote.c	FUNCTION_3	FOR_1
0x4000b18	          0x4c89e3	                            mov rbx, r12	        51	quote.c	FUNCTION_3	FOR_1
0x4000b1b	       0xf1f440000	                   nop dword [rax + rax]	        51	quote.c	FUNCTION_3	FOR_1
0x4000b20	        0x400fb6c6	                          movzx eax, sil	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000b24	    0xf68000000000	                      test byte [rax], 6	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000b2b	            0x7513	                           jne 0x4000b40	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000b2d	        0x400fbef6	                          movsx esi, sil	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000b31	      0xbf00000000	                              mov edi, 0	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000b36	      0xe800000000	                          call 0x4000b3b	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000b3b	          0x4885c0	                           test rax, rax	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000b3e	            0x7460	                            je 0x4000ba0	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000b40	        0x4883c301	                              add rbx, 1	        51	quote.c	FUNCTION_3	FOR_1
0x4000b44	           0xfb633	                   movzx esi, byte [rbx]	        51	quote.c	FUNCTION_3	FOR_1
0x4000b47	          0x4084f6	                           test sil, sil	        51	quote.c	FUNCTION_3	FOR_1
0x4000b4a	            0x75d4	                           jne 0x4000b20	        51	quote.c	FUNCTION_3	FOR_1
0x4000b4c	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000b4f	      0xe800000000	                          call 0x4000b54	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000b54	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000b57	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000b5a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000b5d	      0xe800000000	                          call 0x4000b62	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000b62	        0x4983c508	                              add r13, 8	        91	quote.c	FUNCTION_6	FOR_1
0x4000b66	      0x49837d0000	                      cmp qword [r13], 0	        91	quote.c	FUNCTION_6	FOR_1
0x4000b6b	     0xf855fffffff	                           jne 0x4000ad0	        91	quote.c	FUNCTION_6	FOR_1
0x4000b71	        0x4883c408	                              add rsp, 8	        95	quote.c	FUNCTION_6
0x4000b75	              0x5b	                                 pop rbx	        95	quote.c	FUNCTION_6
0x4000b76	              0x5d	                                 pop rbp	        95	quote.c	FUNCTION_6
0x4000b77	            0x415c	                                 pop r12	        95	quote.c	FUNCTION_6
0x4000b79	            0x415d	                                 pop r13	        95	quote.c	FUNCTION_6
0x4000b7b	            0xf3c3	                                     ret	        95	quote.c	FUNCTION_6
0x4000b7d	           0xf1f00	                         nop dword [rax]	        95	quote.c	FUNCTION_6
0x4000b80	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_26
0x4000b84	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b88	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b8b	     0xf855dffffff	                           jne 0x4000aee	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b91	      0xe947ffffff	                           jmp 0x4000add	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000ba0	          0x4c89e6	                            mov rsi, r12	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000ba3	          0x4889ef	                            mov rdi, rbp	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000ba6	      0xe800000000	                          call 0x4000bab	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000bab	            0xebb5	                           jmp 0x4000b62	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_1
