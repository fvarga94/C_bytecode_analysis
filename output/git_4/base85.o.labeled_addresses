encode_85	SWITCH,0:DO,0:CALL,0:ELSE,0:IF,1:functions,0:FOR,2:WHILE,1	104
0x4000210	            0x85d2	                           test edx, edx	        82	base85.c	FUNCTION_3	WHILE_1
0x4000212	     0xf844c010000	                            je 0x4000364	        82	base85.c	FUNCTION_3	WHILE_1
0x4000218	              0x55	                                push rbp	        80	base85.c	FUNCTION_3
0x4000219	          0x4189d0	                            mov r8d, edx	        80	base85.c	FUNCTION_3
0x400021c	              0x53	                                push rbx	        80	base85.c	FUNCTION_3
0x400021d	    0x41b9c1c0c0c0	                     mov r9d, 0xc0c0c0c1	        80	base85.c	FUNCTION_3
0x4000223	      0xbb43b22191	                     mov ebx, 0x9121b243	        80	base85.c	FUNCTION_3
0x4000228	    0x41bb7d188dda	                    mov r11d, 0xda8d187d	        80	base85.c	FUNCTION_3
0x400022e	    0x41ba7dc11c49	                    mov r10d, 0x491cc17d	        80	base85.c	FUNCTION_3
0x4000234	         0xf1f4000	                         nop dword [rax]	        80	base85.c	FUNCTION_3
0x4000238	           0xfb606	                   movzx eax, byte [rsi]	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400023b	            0x8b0e	                    mov ecx, dword [rsi]	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400023d	             0xfc9	                               bswap ecx	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400023f	          0xc1e018	                           shl eax, 0x18	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000242	        0x4183f801	                              cmp r8d, 1	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x4000246	     0xf84dc000000	                            je 0x4000328	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x400024c	         0xfb65601	               movzx edx, byte [rsi + 1]	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000250	          0xc1e210	                           shl edx, 0x10	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000253	             0x9d0	                             or eax, edx	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000255	        0x4183f802	                              cmp r8d, 2	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x4000259	     0xf84e1000000	                            je 0x4000340	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x400025f	        0x4183f803	                              cmp r8d, 3	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x4000263	         0xfb65602	               movzx edx, byte [rsi + 2]	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000267	     0xf84e3000000	                            je 0x4000350	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x400026d	        0x4883c604	                              add rsi, 4	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000271	        0x4183e804	                              sub r8d, 4	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x4000275	            0x89c8	                            mov eax, ecx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000277	        0x4883c705	                              add rdi, 5	        97	base85.c	FUNCTION_3	WHILE_1
0x400027b	          0x41f7e1	                                 mul r9d	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x400027e	          0xc1ea06	                              shr edx, 6	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000281	          0x6bc255	                     imul eax, edx, 0x55	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000284	            0x89d5	                            mov ebp, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000286	            0x89ca	                            mov edx, ecx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000288	            0x29c2	                            sub edx, eax	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x400028a	          0x4863c2	                         movsxd rax, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x400028d	     0xfb680000000	                   movzx eax, byte [rax]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000294	          0x8847ff	                  mov byte [rdi - 1], al	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000297	            0x89e8	                            mov eax, ebp	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000299	          0x41f7e1	                                 mul r9d	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x400029c	          0xc1ea06	                              shr edx, 6	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x400029f	          0x6bd255	                     imul edx, edx, 0x55	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002a2	            0x29d5	                            sub ebp, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002a4	          0x4863ed	                         movsxd rbp, ebp	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002a7	     0xfb685000000	                   movzx eax, byte [rbp]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002ae	          0x8847fe	                  mov byte [rdi - 2], al	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002b1	            0x89c8	                            mov eax, ecx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002b3	            0xf7e3	                                 mul ebx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002b5	          0xc1ea0c	                            shr edx, 0xc	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002b8	            0x89d0	                            mov eax, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002ba	            0x89d5	                            mov ebp, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002bc	          0x41f7e1	                                 mul r9d	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002bf	          0xc1ea06	                              shr edx, 6	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002c2	          0x6bd255	                     imul edx, edx, 0x55	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002c5	            0x29d5	                            sub ebp, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002c7	          0x4863ed	                         movsxd rbp, ebp	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002ca	     0xfb685000000	                   movzx eax, byte [rbp]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002d1	          0x8847fd	                  mov byte [rdi - 3], al	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002d4	            0x89c8	                            mov eax, ecx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002d6	          0x41f7e3	                                mul r11d	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002d9	          0xc1ea13	                           shr edx, 0x13	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002dc	            0x89d0	                            mov eax, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002de	            0x89d5	                            mov ebp, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002e0	          0x41f7e1	                                 mul r9d	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002e3	          0xc1ea06	                              shr edx, 6	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002e6	          0x6bd255	                     imul edx, edx, 0x55	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002e9	            0x29d5	                            sub ebp, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002eb	          0x4863ed	                         movsxd rbp, ebp	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002ee	     0xfb685000000	                   movzx eax, byte [rbp]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002f5	          0x8847fc	                  mov byte [rdi - 4], al	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002f8	            0x89c8	                            mov eax, ecx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002fa	          0x41f7e2	                                mul r10d	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002fd	            0x89c8	                            mov eax, ecx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x40002ff	            0x29d0	                            sub eax, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000301	            0xd1e8	                              shr eax, 1	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000303	             0x1d0	                            add eax, edx	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000305	          0xc1e819	                           shr eax, 0x19	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000308	            0x4898	                                    cdqe	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x400030a	     0xfb680000000	                   movzx eax, byte [rax]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000311	          0x8847fb	                  mov byte [rdi - 5], al	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x4000314	          0x4585c0	                           test r8d, r8d	        82	base85.c	FUNCTION_3	WHILE_1
0x4000317	     0xf851bffffff	                           jne 0x4000238	        82	base85.c	FUNCTION_3	WHILE_1
0x400031d	              0x5b	                                 pop rbx	       102	base85.c	FUNCTION_3
0x400031e	          0xc60700	                       mov byte [rdi], 0	       101	base85.c	FUNCTION_3
0x4000321	              0x5d	                                 pop rbp	       102	base85.c	FUNCTION_3
0x4000322	              0xc3	                                     ret	       102	base85.c	FUNCTION_3
0x4000323	       0xf1f440000	                   nop dword [rax + rax]	       102	base85.c	FUNCTION_3
0x4000328	        0x4883c601	                              add rsi, 1	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400032c	            0x89c1	                            mov ecx, eax	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400032e	          0x4531c0	                            xor r8d, r8d	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000331	      0xe93fffffff	                           jmp 0x4000275	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000336	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000340	        0x4883c602	                              add rsi, 2	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000344	            0x89c1	                            mov ecx, eax	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000346	          0x4531c0	                            xor r8d, r8d	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000349	      0xe927ffffff	                           jmp 0x4000275	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400034e	            0x6690	                                     nop	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000350	           0xfb6ca	                           movzx ecx, dl	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000353	        0x4883c603	                              add rsi, 3	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000357	          0x4531c0	                            xor r8d, r8d	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400035a	          0xc1e108	                              shl ecx, 8	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400035d	             0x9c1	                             or ecx, eax	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x400035f	      0xe911ffffff	                           jmp 0x4000275	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x4000364	          0xc60700	                       mov byte [rdi], 0	       101	base85.c	FUNCTION_3
0x4000367	              0xc3	                                     ret	       101	base85.c	FUNCTION_3
decode_85	SWITCH,0:DO,2:CALL,4:ELSE,0:IF,3:functions,0:FOR,0:WHILE,1	117
0x4000040	        0x4883ec08	                              sub rsp, 8	        41	base85.c	FUNCTION_2
0x4000044	    0x803d00000000	                cmp byte [0x0400004b], 0	        32	base85.c	FUNCTION_1	IF_1
0x400004b	          0x4989f0	                             mov r8, rsi	        41	base85.c	FUNCTION_2
0x400004e	            0x7526	                           jne 0x4000076	        32	base85.c	FUNCTION_1	IF_1
0x4000050	      0xb900000000	                              mov ecx, 0	        32	base85.c	FUNCTION_1	IF_1
0x4000055	      0xb801000000	                              mov eax, 1	        32	base85.c	FUNCTION_1	IF_1
0x400005a	    0x660f1f440000	                    nop word [rax + rax]	        32	base85.c	FUNCTION_1	IF_1
0x4000060	        0x480fbe31	                   movsx rsi, byte [rcx]	        36	base85.c	FUNCTION_1	FOR_1
0x4000064	        0x4883c101	                              add rcx, 1	        36	base85.c	FUNCTION_1	FOR_1
0x4000068	    0x888600000000	                      mov byte [rsi], al	        36	base85.c	FUNCTION_1	FOR_1
0x400006e	          0x83c001	                              add eax, 1	        36	base85.c	FUNCTION_1	FOR_1
0x4000071	          0x83f856	                           cmp eax, 0x56	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4000074	            0x75ea	                           jne 0x4000060	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4000076	            0x85d2	                           test edx, edx	        45	base85.c	FUNCTION_2	WHILE_1
0x4000078	     0xf8481010000	                            je 0x40001ff	        45	base85.c	FUNCTION_2	WHILE_1
0x400007e	        0x410fb600	                    movzx eax, byte [r8]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000082	          0x4889c6	                            mov rsi, rax	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000085	     0xfbe80000000	                   movsx eax, byte [rax]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x400008c	          0x83e801	                              sub eax, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x400008f	            0x89c1	                            mov ecx, eax	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x4000091	     0xf8839010000	                            js 0x40001d0	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x4000097	      0x410fb64001	                movzx eax, byte [r8 + 1]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x400009c	          0x4889c6	                            mov rsi, rax	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x400009f	     0xfbe80000000	                   movsx eax, byte [rax]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000a6	          0x83e801	                              sub eax, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000a9	     0xf8821010000	                            js 0x40001d0	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000af	          0x6bc955	                     imul ecx, ecx, 0x55	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000b2	             0x1c8	                            add eax, ecx	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000b4	      0x410fb64802	                movzx ecx, byte [r8 + 2]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000b9	    0x440fbe910000	                  movsx r10d, byte [rcx]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000c1	          0x4889ce	                            mov rsi, rcx	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000c4	      0xb904000000	                              mov ecx, 4	        67	base85.c	FUNCTION_2	WHILE_1
0x40000c9	        0x4183ea01	                             sub r10d, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000cd	     0xf88fd000000	                            js 0x40001d0	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000d3	      0x450fb64803	                movzx r9d, byte [r8 + 3]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000d8	          0x6bc055	                     imul eax, eax, 0x55	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000db	          0x4c89ce	                             mov rsi, r9	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000de	    0x450fbe890000	                    movsx r9d, byte [r9]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000e6	          0x4401d0	                           add eax, r10d	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000e9	        0x4183e901	                              sub r9d, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000ed	     0xf88dd000000	                            js 0x40001d0	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40000f3	          0x6bc055	                     imul eax, eax, 0x55	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000f6	          0x4401c8	                            add eax, r9d	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000f9	        0x4d8d4805	                        lea r9, [r8 + 5]	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40000fd	      0x450fb651ff	               movzx r10d, byte [r9 - 1]	        57	base85.c	FUNCTION_2	WHILE_1
0x4000102	          0x4c89d6	                            mov rsi, r10	        57	base85.c	FUNCTION_2	WHILE_1
0x4000105	    0x450fbe920000	                  movsx r10d, byte [r10]	        57	base85.c	FUNCTION_2	WHILE_1
0x400010d	        0x4183ea01	                             sub r10d, 1	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x4000111	     0xf88b9000000	                            js 0x40001d0	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x4000117	      0x3d03030303	                      cmp eax, 0x3030303	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x400011c	     0xf87c4000000	                            ja 0x40001e6	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000122	          0x6bc055	                     imul eax, eax, 0x55	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000125	          0x4489d6	                           mov esi, r10d	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000128	            0xf7d6	                                 not esi	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x400012a	            0x39c6	                            cmp esi, eax	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x400012c	     0xf82b4000000	                            jb 0x40001e6	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x4000132	          0x4401d0	                           add eax, r10d	        64	base85.c	FUNCTION_2	WHILE_1
0x4000135	            0x89ce	                            mov esi, ecx	        67	base85.c	FUNCTION_2	WHILE_1
0x4000137	          0x83fa04	                              cmp edx, 4	        67	base85.c	FUNCTION_2	WHILE_1
0x400013a	           0xf4ef2	                         cmovle esi, edx	        67	base85.c	FUNCTION_2	WHILE_1
0x400013d	          0xc1c008	                              rol eax, 8	        70	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000140	          0x4189f0	                            mov r8d, esi	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000143	            0x29f2	                            sub edx, esi	        68	base85.c	FUNCTION_2	WHILE_1
0x4000145	            0x8807	                      mov byte [rdi], al	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000147	        0x4183e801	                              sub r8d, 1	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400014b	            0x741c	                            je 0x4000169	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400014d	          0xc1c008	                              rol eax, 8	        70	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000150	          0x83fe02	                              cmp esi, 2	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000153	          0x884701	                  mov byte [rdi + 1], al	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000156	            0x7411	                            je 0x4000169	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000158	          0xc1c008	                              rol eax, 8	        70	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400015b	          0x83fe03	                              cmp esi, 3	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400015e	          0x884702	                  mov byte [rdi + 2], al	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000161	            0x7406	                            je 0x4000169	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000163	          0xc1c008	                              rol eax, 8	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000166	          0x884703	                  mov byte [rdi + 3], al	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x4000169	          0x4489c0	                            mov eax, r8d	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x400016c	            0x85d2	                           test edx, edx	        45	base85.c	FUNCTION_2	WHILE_1
0x400016e	      0x488d7c0701	                lea rdi, [rdi + rax + 1]	        45	base85.c	FUNCTION_2	WHILE_1
0x4000173	     0xf8486000000	                            je 0x40001ff	        45	base85.c	FUNCTION_2	WHILE_1
0x4000179	        0x410fb601	                    movzx eax, byte [r9]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x400017d	          0x4889c6	                            mov rsi, rax	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000180	     0xfbe80000000	                   movsx eax, byte [rax]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000187	          0x83e801	                              sub eax, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x400018a	          0x4189c0	                            mov r8d, eax	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x400018d	            0x7841	                            js 0x40001d0	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x400018f	      0x410fb64101	                movzx eax, byte [r9 + 1]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000194	          0x4889c6	                            mov rsi, rax	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x4000197	     0xfbe80000000	                   movsx eax, byte [rax]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x400019e	          0x83e801	                              sub eax, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40001a1	            0x782d	                            js 0x40001d0	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40001a3	        0x456bc055	                     imul r8d, r8d, 0x55	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40001a7	          0x4401c0	                            add eax, r8d	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40001aa	      0x450fb64102	                movzx r8d, byte [r9 + 2]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40001af	          0x4c89c6	                             mov rsi, r8	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40001b2	    0x450fbe800000	                    movsx r8d, byte [r8]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x40001ba	          0x4589c2	                           mov r10d, r8d	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40001bd	        0x4183ea01	                             sub r10d, 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40001c1	            0x780d	                            js 0x40001d0	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40001c3	          0x4d89c8	                              mov r8, r9	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40001c6	      0xe908ffffff	                           jmp 0x40000d3	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40001cb	       0xf1f440000	                   nop dword [rax + rax]	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0x40001d0	      0xbf00000000	                              mov edi, 0	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40001d5	            0x31c0	                            xor eax, eax	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40001d7	      0xe800000000	                          call 0x40001dc	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40001dc	      0xb8ffffffff	                     mov eax, 0xffffffff	        59	base85.c	FUNCTION_2	WHILE_1	CALL_3
0x40001e1	        0x4883c408	                              add rsp, 8	        77	base85.c	FUNCTION_2
0x40001e5	              0xc3	                                     ret	        77	base85.c	FUNCTION_2
0x40001e6	          0x4c89c6	                             mov rsi, r8	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x40001e9	      0xbf00000000	                              mov edi, 0	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x40001ee	            0x31c0	                            xor eax, eax	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x40001f0	      0xe800000000	                          call 0x40001f5	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x40001f5	      0xb8ffffffff	                     mov eax, 0xffffffff	        63	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x40001fa	        0x4883c408	                              add rsp, 8	        77	base85.c	FUNCTION_2
0x40001fe	              0xc3	                                     ret	        77	base85.c	FUNCTION_2
0x40001ff	            0x31c0	                            xor eax, eax	        76	base85.c	FUNCTION_2
0x4000201	            0xebde	                           jmp 0x40001e1	        76	base85.c	FUNCTION_2
