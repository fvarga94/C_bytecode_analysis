cmd_for_each_ref	ELSE,0:CALL,49:IF,5:DO,0:WHILE,0:FOR,1:functions,0:SWITCH,0	234
0x4000040	            0x4156	                                push r14	        18	for-each-ref.c	FUNCTION_1
0x4000042	            0x4155	                                push r13	        18	for-each-ref.c	FUNCTION_1
0x4000044	          0x4189fd	                           mov r13d, edi	        18	for-each-ref.c	FUNCTION_1
0x4000047	            0x4154	                                push r12	        18	for-each-ref.c	FUNCTION_1
0x4000049	              0x55	                                push rbp	        18	for-each-ref.c	FUNCTION_1
0x400004a	      0xb980000000	                           mov ecx, 0x80	        26	for-each-ref.c	FUNCTION_1
0x400004f	              0x53	                                push rbx	        18	for-each-ref.c	FUNCTION_1
0x4000050	          0x4989d6	                            mov r14, rdx	        18	for-each-ref.c	FUNCTION_1
0x4000053	          0x4889f5	                            mov rbp, rsi	        18	for-each-ref.c	FUNCTION_1
0x4000056	            0x31f6	                            xor esi, esi	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x4000058	    0x4881ecc00400	                          sub rsp, 0x4c0	        18	for-each-ref.c	FUNCTION_1
0x400005f	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	for-each-ref.c	FUNCTION_1
0x4000068	    0x48898424b804	            mov qword [rsp + 0x4b8], rax	        18	for-each-ref.c	FUNCTION_1
0x4000070	            0x31c0	                            xor eax, eax	        18	for-each-ref.c	FUNCTION_1
0x4000072	      0x4c8d642430	                   lea r12, [rsp + 0x30]	        26	for-each-ref.c	FUNCTION_1
0x4000077	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        26	for-each-ref.c	FUNCTION_1
0x400007f	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	        26	for-each-ref.c	FUNCTION_1
0x4000084	    0x48c744243800	               mov qword [rsp + 0x38], 0	        24	for-each-ref.c	FUNCTION_1
0x400008d	    0x48c744240800	                  mov qword [rsp + 8], 0	        20	for-each-ref.c	FUNCTION_1
0x4000096	          0xf348ab	              rep stosq qword [rdi], rax	        26	for-each-ref.c	FUNCTION_1
0x4000099	      0x498d54240c	                    lea rdx, [r12 + 0xc]	        26	for-each-ref.c	FUNCTION_1
0x400009e	      0x498d4c2408	                      lea rcx, [r12 + 8]	        26	for-each-ref.c	FUNCTION_1
0x40000a3	    0xc70424000000	                      mov dword [rsp], 0	        21	for-each-ref.c	FUNCTION_1
0x40000aa	    0xc74424040000	                  mov dword [rsp + 4], 0	        21	for-each-ref.c	FUNCTION_1
0x40000b2	    0x48c744244000	               mov qword [rsp + 0x40], 0	        24	for-each-ref.c	FUNCTION_1
0x40000bb	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_5	CALL_6
0x40000be	    0x48898c24c000	             mov qword [rsp + 0xc0], rcx	        26	for-each-ref.c	FUNCTION_1
0x40000c6	    0x48898c240001	            mov qword [rsp + 0x100], rcx	        26	for-each-ref.c	FUNCTION_1
0x40000ce	    0x48898c244001	            mov qword [rsp + 0x140], rcx	        26	for-each-ref.c	FUNCTION_1
0x40000d6	    0xc744243cffff	     mov dword [rsp + 0x3c], 0xffffffff 	        24	for-each-ref.c	FUNCTION_1
0x40000de	    0xc78424b00000	               mov dword [rsp + 0xb0], 4	        26	for-each-ref.c	FUNCTION_1
0x40000e9	    0xc78424b40000	           mov dword [rsp + 0xb4], 0x73 	        26	for-each-ref.c	FUNCTION_1
0x40000f4	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000100	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        26	for-each-ref.c	FUNCTION_1
0x400010c	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	        26	for-each-ref.c	FUNCTION_1
0x4000117	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	        26	for-each-ref.c	FUNCTION_1
0x4000123	    0xc78424f00000	               mov dword [rsp + 0xf0], 4	        26	for-each-ref.c	FUNCTION_1
0x400012e	    0xc78424f40000	           mov dword [rsp + 0xf4], 0x70 	        26	for-each-ref.c	FUNCTION_1
0x4000139	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000145	    0x48c784241001	              mov qword [rsp + 0x110], 0	        26	for-each-ref.c	FUNCTION_1
0x4000151	    0xc78424180100	              mov dword [rsp + 0x118], 2	        26	for-each-ref.c	FUNCTION_1
0x400015c	    0x48c784242801	              mov qword [rsp + 0x128], 2	        26	for-each-ref.c	FUNCTION_1
0x4000168	    0xc78424300100	              mov dword [rsp + 0x130], 4	        26	for-each-ref.c	FUNCTION_1
0x4000173	    0x48c784243801	              mov qword [rsp + 0x138], 0	        26	for-each-ref.c	FUNCTION_1
0x400017f	    0x48c784245001	              mov qword [rsp + 0x150], 0	        26	for-each-ref.c	FUNCTION_1
0x400018b	    0xc78424580100	              mov dword [rsp + 0x158], 2	        26	for-each-ref.c	FUNCTION_1
0x4000196	    0x488994248002	            mov qword [rsp + 0x280], rdx	        26	for-each-ref.c	FUNCTION_1
0x400019e	      0x488d542408	                      lea rdx, [rsp + 8]	        26	for-each-ref.c	FUNCTION_1
0x40001a3	    0x48898c248001	            mov qword [rsp + 0x180], rcx	        26	for-each-ref.c	FUNCTION_1
0x40001ab	    0x48c784246801	              mov qword [rsp + 0x168], 4	        26	for-each-ref.c	FUNCTION_1
0x40001b7	    0xc78424700100	              mov dword [rsp + 0x170], 4	        26	for-each-ref.c	FUNCTION_1
0x40001c2	      0xb90b000000	                            mov ecx, 0xb	        90	string3.h	FUNCTION_5	CALL_6
0x40001c7	    0x48899424c002	            mov qword [rsp + 0x2c0], rdx	        26	for-each-ref.c	FUNCTION_1
0x40001cf	        0x488d5308	                      lea rdx, [rbx + 8]	        26	for-each-ref.c	FUNCTION_1
0x40001d3	    0x48c784247801	              mov qword [rsp + 0x178], 0	        26	for-each-ref.c	FUNCTION_1
0x40001df	    0x48c784249001	              mov qword [rsp + 0x190], 0	        26	for-each-ref.c	FUNCTION_1
0x40001eb	    0xc78424980100	              mov dword [rsp + 0x198], 2	        26	for-each-ref.c	FUNCTION_1
0x40001f6	    0x48c78424a801	              mov qword [rsp + 0x1a8], 8	        26	for-each-ref.c	FUNCTION_1
0x4000202	    0xc78424b00100	              mov dword [rsp + 0x1b0], 2	        26	for-each-ref.c	FUNCTION_1
0x400020d	    0x48c78424d001	              mov qword [rsp + 0x1d0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000219	    0xc78424f00100	            mov dword [rsp + 0x1f0], 0xa	        26	for-each-ref.c	FUNCTION_1
0x4000224	    0x48c78424f801	              mov qword [rsp + 0x1f8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000230	    0x4889a4240002	            mov qword [rsp + 0x200], rsp	        26	for-each-ref.c	FUNCTION_1
0x4000238	    0x48c784240802	              mov qword [rsp + 0x208], 0	        26	for-each-ref.c	FUNCTION_1
0x4000244	    0x48c784241002	              mov qword [rsp + 0x210], 0	        26	for-each-ref.c	FUNCTION_1
0x4000250	    0xc78424300200	              mov dword [rsp + 0x230], 9	        26	for-each-ref.c	FUNCTION_1
0x400025b	    0x48c784243802	              mov qword [rsp + 0x238], 0	        26	for-each-ref.c	FUNCTION_1
0x4000267	    0x4c89a4244002	            mov qword [rsp + 0x240], r12	        26	for-each-ref.c	FUNCTION_1
0x400026f	    0x48c784244802	              mov qword [rsp + 0x248], 0	        26	for-each-ref.c	FUNCTION_1
0x400027b	    0x48c784245002	              mov qword [rsp + 0x250], 0	        26	for-each-ref.c	FUNCTION_1
0x4000287	    0xc78424700200	           mov dword [rsp + 0x270], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x4000292	    0x48c784247802	              mov qword [rsp + 0x278], 0	        26	for-each-ref.c	FUNCTION_1
0x400029e	    0x48c784248802	              mov qword [rsp + 0x288], 0	        26	for-each-ref.c	FUNCTION_1
0x40002aa	    0x48c784249002	              mov qword [rsp + 0x290], 0	        26	for-each-ref.c	FUNCTION_1
0x40002b6	    0xc78424980200	              mov dword [rsp + 0x298], 1	        26	for-each-ref.c	FUNCTION_1
0x40002c1	    0x48c78424a002	              mov qword [rsp + 0x2a0], 0	        26	for-each-ref.c	FUNCTION_1
0x40002cd	    0x48c78424a802	              mov qword [rsp + 0x2a8], 0	        26	for-each-ref.c	FUNCTION_1
0x40002d9	    0xc78424b00200	           mov dword [rsp + 0x2b0], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x40002e4	    0x48c78424b802	              mov qword [rsp + 0x2b8], 0	        26	for-each-ref.c	FUNCTION_1
0x40002f0	    0x48c78424c802	              mov qword [rsp + 0x2c8], 0	        26	for-each-ref.c	FUNCTION_1
0x40002fc	    0x48c78424d002	              mov qword [rsp + 0x2d0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000308	    0x48c78424e002	              mov qword [rsp + 0x2e0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000314	    0x488994240003	            mov qword [rsp + 0x300], rdx	        26	for-each-ref.c	FUNCTION_1
0x400031c	        0x488d5320	                   lea rdx, [rbx + 0x20]	        26	for-each-ref.c	FUNCTION_1
0x4000320	    0xc78424f00200	           mov dword [rsp + 0x2f0], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x400032b	    0x48c78424f802	              mov qword [rsp + 0x2f8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000337	    0x48899424c003	            mov qword [rsp + 0x3c0], rdx	        26	for-each-ref.c	FUNCTION_1
0x400033f	        0x488d5328	                   lea rdx, [rbx + 0x28]	        26	for-each-ref.c	FUNCTION_1
0x4000343	    0x48c784240803	              mov qword [rsp + 0x308], 0	        26	for-each-ref.c	FUNCTION_1
0x400034f	    0x48c784241003	              mov qword [rsp + 0x310], 0	        26	for-each-ref.c	FUNCTION_1
0x400035b	    0x48c784242003	              mov qword [rsp + 0x320], 0	        26	for-each-ref.c	FUNCTION_1
0x4000367	    0xc78424300300	           mov dword [rsp + 0x330], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x4000372	    0x48c784243803	              mov qword [rsp + 0x338], 0	        26	for-each-ref.c	FUNCTION_1
0x400037e	    0x48899c244003	            mov qword [rsp + 0x340], rbx	        26	for-each-ref.c	FUNCTION_1
0x4000386	    0x48c784244803	              mov qword [rsp + 0x348], 0	        26	for-each-ref.c	FUNCTION_1
0x4000392	    0x48c784245003	              mov qword [rsp + 0x350], 0	        26	for-each-ref.c	FUNCTION_1
0x400039e	    0xc78424580300	          mov dword [rsp + 0x358], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x40003a9	    0x48c784246003	              mov qword [rsp + 0x360], 0	        26	for-each-ref.c	FUNCTION_1
0x40003b5	    0x48c784246803	              mov qword [rsp + 0x368], 0	        26	for-each-ref.c	FUNCTION_1
0x40003c1	    0xc78424700300	           mov dword [rsp + 0x370], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x40003cc	    0x48c784247803	              mov qword [rsp + 0x378], 0	        26	for-each-ref.c	FUNCTION_1
0x40003d8	    0x48899c248003	            mov qword [rsp + 0x380], rbx	        26	for-each-ref.c	FUNCTION_1
0x40003e0	    0x48c784248803	              mov qword [rsp + 0x388], 0	        26	for-each-ref.c	FUNCTION_1
0x40003ec	    0x48c784249003	              mov qword [rsp + 0x390], 0	        26	for-each-ref.c	FUNCTION_1
0x40003f8	    0xc78424980300	          mov dword [rsp + 0x398], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x4000403	    0x48c78424a003	              mov qword [rsp + 0x3a0], 0	        26	for-each-ref.c	FUNCTION_1
0x400040f	    0x48c78424a803	              mov qword [rsp + 0x3a8], 0	        26	for-each-ref.c	FUNCTION_1
0x400041b	    0xc78424b00300	           mov dword [rsp + 0x3b0], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x4000426	    0x48c78424b803	              mov qword [rsp + 0x3b8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000432	    0x48c78424c803	              mov qword [rsp + 0x3c8], 0	        26	for-each-ref.c	FUNCTION_1
0x400043e	    0x48c78424d003	              mov qword [rsp + 0x3d0], 0	        26	for-each-ref.c	FUNCTION_1
0x400044a	    0xc78424d80300	          mov dword [rsp + 0x3d8], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x4000455	    0x48c78424e003	              mov qword [rsp + 0x3e0], 0	        26	for-each-ref.c	FUNCTION_1
0x4000461	    0x48c78424e803	              mov qword [rsp + 0x3e8], 0	        26	for-each-ref.c	FUNCTION_1
0x400046d	    0xc78424f00300	           mov dword [rsp + 0x3f0], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x4000478	    0x48c78424f803	              mov qword [rsp + 0x3f8], 0	        26	for-each-ref.c	FUNCTION_1
0x4000484	    0x488994240004	            mov qword [rsp + 0x400], rdx	        26	for-each-ref.c	FUNCTION_1
0x400048c	      0x488d542404	                      lea rdx, [rsp + 4]	        26	for-each-ref.c	FUNCTION_1
0x4000491	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_5	CALL_6
0x4000494	      0xbf00000000	                              mov edi, 0	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x4000499	    0x488994244004	            mov qword [rsp + 0x440], rdx	        26	for-each-ref.c	FUNCTION_1
0x40004a1	    0x48c784240804	              mov qword [rsp + 0x408], 0	        26	for-each-ref.c	FUNCTION_1
0x40004ad	    0x48c784241004	              mov qword [rsp + 0x410], 0	        26	for-each-ref.c	FUNCTION_1
0x40004b9	    0xc78424180400	          mov dword [rsp + 0x418], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x40004c4	    0x48c784242004	              mov qword [rsp + 0x420], 0	        26	for-each-ref.c	FUNCTION_1
0x40004d0	    0x48c784242804	              mov qword [rsp + 0x428], 0	        26	for-each-ref.c	FUNCTION_1
0x40004dc	    0xc78424300400	              mov dword [rsp + 0x430], 7	        26	for-each-ref.c	FUNCTION_1
0x40004e7	    0x48c784243804	              mov qword [rsp + 0x438], 0	        26	for-each-ref.c	FUNCTION_1
0x40004f3	    0x48c784245004	              mov qword [rsp + 0x450], 0	        26	for-each-ref.c	FUNCTION_1
0x40004ff	    0xc78424580400	              mov dword [rsp + 0x458], 2	        26	for-each-ref.c	FUNCTION_1
0x400050a	    0x48c784246804	              mov qword [rsp + 0x468], 1	        26	for-each-ref.c	FUNCTION_1
0x4000516	    0x48c744241000	               mov qword [rsp + 0x10], 0	        90	string3.h	FUNCTION_5	CALL_6
0x400051f	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_5	CALL_6
0x4000528	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_5	CALL_6
0x4000531	    0x48c744243000	               mov qword [rsp + 0x30], 0	        56	for-each-ref.c	FUNCTION_1
0x400053a	      0xe800000000	                          call 0x400053f	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x400053f	    0x488d8c24b000	                   lea rcx, [rsp + 0xb0]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x4000547	          0x4531c9	                            xor r9d, r9d	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x400054a	          0x4889ee	                            mov rsi, rbp	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x400054d	    0x41b800000000	                              mov r8d, 0	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x4000553	          0x4c89f2	                            mov rdx, r14	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x4000556	          0x4489ef	                           mov edi, r13d	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x4000559	      0xe800000000	                          call 0x400055e	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x400055e	          0x8b3424	                    mov esi, dword [rsp]	        61	for-each-ref.c	FUNCTION_1	IF_1
0x4000561	            0x85f6	                           test esi, esi	        61	for-each-ref.c	FUNCTION_1	IF_1
0x4000563	     0xf880a010000	                            js 0x4000673	        61	for-each-ref.c	FUNCTION_1	IF_1
0x4000569	        0x8b442438	            mov eax, dword [rsp + 0x38] 	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x400056d	          0x8d50ff	                      lea edx, [rax - 1]	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x4000570	            0x85c2	                           test edx, eax	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x4000572	     0xf8530010000	                           jne 0x40006a8	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x4000578	          0x4c89e7	                            mov rdi, r12	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x400057b	      0xe800000000	                          call 0x4000580	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x4000580	            0x85c0	                           test eax, eax	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x4000582	     0xf850e010000	                           jne 0x4000696	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x4000588	      0x488b442408	                mov rax, qword [rsp + 8]	        72	for-each-ref.c	FUNCTION_1	IF_4
0x400058d	          0x4885c0	                           test rax, rax	        72	for-each-ref.c	FUNCTION_1	IF_4
0x4000590	     0xf84ce000000	                            je 0x4000664	        72	for-each-ref.c	FUNCTION_1	IF_4
0x4000596	       0xfb6542404	               movzx edx, byte [rsp + 4]	        74	for-each-ref.c	FUNCTION_1
0x400059b	         0xfb6700c	            movzx esi, byte [rax + 0xc] 	        74	for-each-ref.c	FUNCTION_1
0x400059f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x40005a4	      0x48896c2450	             mov qword [rsp + 0x50], rbp	        77	for-each-ref.c	FUNCTION_1
0x40005a9	          0x83e201	                              and edx, 1	        74	for-each-ref.c	FUNCTION_1
0x40005ac	          0x83e6fd	                     and esi, 0xfffffffd	        74	for-each-ref.c	FUNCTION_1
0x40005af	          0x8d0c12	                    lea ecx, [rdx + rdx]	        74	for-each-ref.c	FUNCTION_1
0x40005b2	          0xc1e202	                              shl edx, 2	        75	for-each-ref.c	FUNCTION_1
0x40005b5	             0x9f1	                             or ecx, esi	        74	for-each-ref.c	FUNCTION_1
0x40005b7	          0x4889de	                            mov rsi, rbx	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x40005ba	          0x88480c	                mov byte [rax + 0xc], cl	        74	for-each-ref.c	FUNCTION_1
0x40005bd	     0xfb684249000	           movzx eax, byte [rsp + 0x90] 	        75	for-each-ref.c	FUNCTION_1
0x40005c5	          0x83e0fb	                     and eax, 0xfffffffb	        75	for-each-ref.c	FUNCTION_1
0x40005c8	             0x9c2	                             or edx, eax	        75	for-each-ref.c	FUNCTION_1
0x40005ca	          0x83ca02	                               or edx, 2	        78	for-each-ref.c	FUNCTION_1
0x40005cd	    0x889424900000	               mov byte [rsp + 0x90], dl	        78	for-each-ref.c	FUNCTION_1
0x40005d4	      0xba1f000000	                           mov edx, 0x1f	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x40005d9	      0xe800000000	                          call 0x40005de	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x40005de	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        80	for-each-ref.c	FUNCTION_1	CALL_47
0x40005e3	      0x488d742410	                   lea rsi, [rsp + 0x10]	        80	for-each-ref.c	FUNCTION_1	CALL_47
0x40005e8	      0xe800000000	                          call 0x40005ed	        80	for-each-ref.c	FUNCTION_1	CALL_47
0x40005ed	          0x8b0424	                    mov eax, dword [rsp]	        82	for-each-ref.c	FUNCTION_1	IF_5
0x40005f0	            0x85c0	                           test eax, eax	        82	for-each-ref.c	FUNCTION_1	IF_5
0x40005f2	            0x7564	                           jne 0x4000658	        82	for-each-ref.c	FUNCTION_1	IF_5
0x40005f4	        0x8b442410	            mov eax, dword [rsp + 0x10] 	        82	for-each-ref.c	FUNCTION_1	IF_5
0x40005f8	          0x890424	                    mov dword [rsp], eax	        83	for-each-ref.c	FUNCTION_1	IF_5
0x40005fb	            0x31ed	                            xor ebp, ebp	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x40005fd	            0x31db	                            xor ebx, ebx	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x40005ff	            0x85c0	                           test eax, eax	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x4000601	            0x7e22	                           jle 0x4000625	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x4000603	       0xf1f440000	                   nop dword [rax + rax]	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x4000608	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x400060d	          0x4c89e6	                            mov rsi, r12	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x4000610	          0x83c301	                              add ebx, 1	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x4000613	        0x488b3c28	              mov rdi, qword [rax + rbp]	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x4000617	        0x4883c508	                              add rbp, 8	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x400061b	      0xe800000000	                          call 0x4000620	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x4000620	          0x391c24	                    cmp dword [rsp], ebx	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x4000623	            0x7fe3	                            jg 0x4000608	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x4000625	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        86	for-each-ref.c	FUNCTION_1	CALL_49
0x400062a	      0xe800000000	                          call 0x400062f	        86	for-each-ref.c	FUNCTION_1	CALL_49
0x400062f	            0x31c0	                            xor eax, eax	        88	for-each-ref.c	FUNCTION_1
0x4000631	    0x488b8c24b804	           mov rcx, qword [rsp + 0x4b8] 	        88	for-each-ref.c	FUNCTION_1
0x4000639	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        88	for-each-ref.c	FUNCTION_1
0x4000642	            0x754d	                           jne 0x4000691	        88	for-each-ref.c	FUNCTION_1
0x4000644	    0x4881c4c00400	                          add rsp, 0x4c0	        88	for-each-ref.c	FUNCTION_1
0x400064b	              0x5b	                                 pop rbx	        88	for-each-ref.c	FUNCTION_1
0x400064c	              0x5d	                                 pop rbp	        88	for-each-ref.c	FUNCTION_1
0x400064d	            0x415c	                                 pop r12	        88	for-each-ref.c	FUNCTION_1
0x400064f	            0x415d	                                 pop r13	        88	for-each-ref.c	FUNCTION_1
0x4000651	            0x415e	                                 pop r14	        88	for-each-ref.c	FUNCTION_1
0x4000653	              0xc3	                                     ret	        88	for-each-ref.c	FUNCTION_1
0x4000654	         0xf1f4000	                         nop dword [rax]	        88	for-each-ref.c	FUNCTION_1
0x4000658	        0x8b542410	            mov edx, dword [rsp + 0x10] 	        82	for-each-ref.c	FUNCTION_1	IF_5
0x400065c	            0x39d0	                            cmp eax, edx	        82	for-each-ref.c	FUNCTION_1	IF_5
0x400065e	            0x7e9b	                           jle 0x40005fb	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000660	            0x89d0	                            mov eax, edx	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000662	            0xeb94	                           jmp 0x40005f8	        82	for-each-ref.c	FUNCTION_1	IF_5
0x4000664	      0xe800000000	                          call 0x4000669	        73	for-each-ref.c	FUNCTION_1	CALL_45
0x4000669	      0x4889442408	                mov qword [rsp + 8], rax	        73	for-each-ref.c	FUNCTION_1	CALL_45
0x400066e	      0xe923ffffff	                           jmp 0x4000596	        73	for-each-ref.c	FUNCTION_1	CALL_45
0x4000673	      0xbf00000000	                              mov edi, 0	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x4000678	            0x31c0	                            xor eax, eax	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x400067a	      0xe800000000	                          call 0x400067f	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x400067f	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_39
0x4000687	      0xbf00000000	                              mov edi, 0	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_39
0x400068c	      0xe800000000	                          call 0x4000691	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_39
0x4000691	      0xe800000000	                          call 0x4000696	        88	for-each-ref.c	FUNCTION_1
0x4000696	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	        70	for-each-ref.c	FUNCTION_1	CALL_44
0x400069e	      0xbf00000000	                              mov edi, 0	        70	for-each-ref.c	FUNCTION_1	CALL_44
0x40006a3	      0xe800000000	                          call 0x40006a8	        70	for-each-ref.c	FUNCTION_1	CALL_44
0x40006a8	      0xbf00000000	                              mov edi, 0	        66	for-each-ref.c	FUNCTION_1	IF_2	CALL_41
0x40006ad	            0x31c0	                            xor eax, eax	        66	for-each-ref.c	FUNCTION_1	IF_2	CALL_41
0x40006af	      0xe800000000	                          call 0x40006b4	        66	for-each-ref.c	FUNCTION_1	IF_2	CALL_41
0x40006b4	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_42
0x40006bc	      0xbf00000000	                              mov edi, 0	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_42
0x40006c1	      0xe800000000	                          call str.shell	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_42
