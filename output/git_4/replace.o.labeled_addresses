replace_object_oid	WHILE,0:ELSE,0:CALL,13:FOR,0:IF,3:DO,0:functions,0:SWITCH,0	146
0x4000320	            0x4157	                                push r15	       163	replace.c	FUNCTION_6
0x4000322	            0x4156	                                push r14	       163	replace.c	FUNCTION_6
0x4000324	          0x4989fe	                            mov r14, rdi	       163	replace.c	FUNCTION_6
0x4000327	            0x4155	                                push r13	       163	replace.c	FUNCTION_6
0x4000329	            0x4154	                                push r12	       163	replace.c	FUNCTION_6
0x400032b	          0x4989d7	                            mov r15, rdx	       163	replace.c	FUNCTION_6
0x400032e	              0x55	                                push rbp	       163	replace.c	FUNCTION_6
0x400032f	              0x53	                                push rbx	       163	replace.c	FUNCTION_6
0x4000330	            0x31d2	                            xor edx, edx	       171	replace.c	FUNCTION_6	CALL_1
0x4000332	          0x4989cc	                            mov r12, rcx	       163	replace.c	FUNCTION_6
0x4000335	          0x4489c5	                            mov ebp, r8d	       163	replace.c	FUNCTION_6
0x4000338	          0x4889f3	                            mov rbx, rsi	       163	replace.c	FUNCTION_6
0x400033b	        0x4883ec68	                           sub rsp, 0x68	       163	replace.c	FUNCTION_6
0x400033f	    0x488b3d000000	            mov rdi, qword [0x04000346] 	       171	replace.c	FUNCTION_6	CALL_1
0x4000346	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	replace.c	FUNCTION_6
0x400034f	      0x4889442458	             mov qword [rsp + 0x58], rax	       163	replace.c	FUNCTION_6
0x4000354	            0x31c0	                            xor eax, eax	       163	replace.c	FUNCTION_6
0x4000356	    0x48c704240000	                      mov qword [rsp], 0	       166	replace.c	FUNCTION_6
0x400035e	    0x48c744240800	                  mov qword [rsp + 8], 0	       166	replace.c	FUNCTION_6
0x4000367	    0x48c744241000	               mov qword [rsp + 0x10], 0	       166	replace.c	FUNCTION_6
0x4000370	    0x48c744242000	               mov qword [rsp + 0x20], 0	       168	replace.c	FUNCTION_6
0x4000379	    0x48c744242800	               mov qword [rsp + 0x28], 0	       168	replace.c	FUNCTION_6
0x4000382	    0x48c744243000	               mov qword [rsp + 0x30], 0	       168	replace.c	FUNCTION_6
0x400038b	      0xe800000000	                          call 0x4000390	       171	replace.c	FUNCTION_6	CALL_1
0x4000390	    0x488b3d000000	            mov rdi, qword [0x04000397] 	       172	replace.c	FUNCTION_6	CALL_2
0x4000397	            0x31d2	                            xor edx, edx	       172	replace.c	FUNCTION_6	CALL_2
0x4000399	          0x4c89e6	                            mov rsi, r12	       172	replace.c	FUNCTION_6	CALL_2
0x400039c	          0x4189c5	                           mov r13d, eax	       171	replace.c	FUNCTION_6	CALL_1
0x400039f	      0xe800000000	                          call 0x40003a4	       172	replace.c	FUNCTION_6	CALL_2
0x40003a4	            0x85ed	                           test ebp, ebp	       173	replace.c	FUNCTION_6	IF_1
0x40003a6	            0x7509	                           jne 0x40003b1	       173	replace.c	FUNCTION_6	IF_1
0x40003a8	          0x4139c5	                           cmp r13d, eax	       173	replace.c	FUNCTION_6	IF_1
0x40003ab	     0xf854f010000	                           jne 0x4000500	       173	replace.c	FUNCTION_6	IF_1
0x40003b1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_19	IF_2
0x40003b6	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_19
0x40003bf	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_19	IF_2
0x40003c5	     0xf84fd000000	                            je 0x40004c8	       165	strbuf.h	FUNCTION_19	IF_2
0x40003cb	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_19	IF_2
0x40003ce	          0x4889df	                            mov rdi, rbx	       147	replace.c	FUNCTION_5	CALL_2
0x40003d1	      0xe800000000	                          call 0x40003d6	       147	replace.c	FUNCTION_5	CALL_2
0x40003d6	    0x488b15000000	            mov rdx, qword [0x040003dd] 	       147	replace.c	FUNCTION_5	CALL_2
0x40003dd	          0x4889c1	                            mov rcx, rax	       147	replace.c	FUNCTION_5	CALL_2
0x40003e0	      0xbe00000000	                              mov esi, 0	       147	replace.c	FUNCTION_5	CALL_2
0x40003e5	            0x31c0	                            xor eax, eax	       147	replace.c	FUNCTION_5	CALL_2
0x40003e7	          0x4889e7	                            mov rdi, rsp	       147	replace.c	FUNCTION_5	CALL_2
0x40003ea	      0xe800000000	                          call 0x40003ef	       147	replace.c	FUNCTION_5	CALL_2
0x40003ef	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x40003f4	            0x31f6	                            xor esi, esi	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x40003f6	      0xe800000000	                          call 0x40003fb	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x40003fb	            0x85c0	                           test eax, eax	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x40003fd	     0xf8535010000	                           jne 0x4000538	       148	replace.c	FUNCTION_5	IF_1	CALL_3
0x4000403	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x4000408	      0x488d742440	                   lea rsi, [rsp + 0x40]	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x400040d	      0xe800000000	                          call 0x4000412	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x4000412	            0x85c0	                           test eax, eax	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x4000414	     0xf85c6000000	                           jne 0x40004e0	       151	replace.c	FUNCTION_5	IF_2	CALL_5
0x400041a	            0x85ed	                           test ebp, ebp	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x400041c	     0xf843e010000	                            je 0x4000560	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000422	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       186	replace.c	FUNCTION_6	CALL_8
0x4000427	      0xe800000000	                          call 0x400042c	       186	replace.c	FUNCTION_6	CALL_8
0x400042c	          0x4885c0	                           test rax, rax	       187	replace.c	FUNCTION_6	IF_3
0x400042f	          0x4889c5	                            mov rbp, rax	       186	replace.c	FUNCTION_6	CALL_8
0x4000432	            0x742b	                            je 0x400045f	       187	replace.c	FUNCTION_6	IF_3
0x4000434	        0x4883ec08	                              sub rsp, 8	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000438	          0x4531c9	                            xor r9d, r9d	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x400043b	          0x4531c0	                            xor r8d, r8d	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x400043e	      0x488d442428	                   lea rax, [rsp + 0x28]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000443	          0x4c89e2	                            mov rdx, r12	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000446	          0x4889ef	                            mov rdi, rbp	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000449	              0x50	                                push rax	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x400044a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x400044f	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000454	      0xe800000000	                          call 0x4000459	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x4000459	            0x85c0	                           test eax, eax	       187	replace.c	FUNCTION_6	IF_3
0x400045b	              0x5a	                                 pop rdx	       187	replace.c	FUNCTION_6	IF_3
0x400045c	              0x59	                                 pop rcx	       187	replace.c	FUNCTION_6	IF_3
0x400045d	            0x7451	                            je 0x40004b0	       187	replace.c	FUNCTION_6	IF_3
0x400045f	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       191	replace.c	FUNCTION_6	CALL_11
0x4000464	      0xbf00000000	                              mov edi, 0	       191	replace.c	FUNCTION_6	CALL_11
0x4000469	            0x31c0	                            xor eax, eax	       191	replace.c	FUNCTION_6	CALL_11
0x400046b	      0xbbffffffff	                     mov ebx, 0xffffffff	       191	replace.c	FUNCTION_6	CALL_11
0x4000470	      0xe800000000	                          call 0x4000475	       191	replace.c	FUNCTION_6	CALL_11
0x4000475	          0x4889ef	                            mov rdi, rbp	       193	replace.c	FUNCTION_6	CALL_12
0x4000478	      0xe800000000	                          call 0x400047d	       193	replace.c	FUNCTION_6	CALL_12
0x400047d	          0x4889e7	                            mov rdi, rsp	       194	replace.c	FUNCTION_6	CALL_13
0x4000480	      0xe800000000	                          call 0x4000485	       194	replace.c	FUNCTION_6	CALL_13
0x4000485	            0x89d8	                            mov eax, ebx	       195	replace.c	FUNCTION_6
0x4000487	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       196	replace.c	FUNCTION_6
0x400048c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       196	replace.c	FUNCTION_6
0x4000495	     0xf85d8000000	                           jne 0x4000573	       196	replace.c	FUNCTION_6
0x400049b	        0x4883c468	                           add rsp, 0x68	       196	replace.c	FUNCTION_6
0x400049f	              0x5b	                                 pop rbx	       196	replace.c	FUNCTION_6
0x40004a0	              0x5d	                                 pop rbp	       196	replace.c	FUNCTION_6
0x40004a1	            0x415c	                                 pop r12	       196	replace.c	FUNCTION_6
0x40004a3	            0x415d	                                 pop r13	       196	replace.c	FUNCTION_6
0x40004a5	            0x415e	                                 pop r14	       196	replace.c	FUNCTION_6
0x40004a7	            0x415f	                                 pop r15	       196	replace.c	FUNCTION_6
0x40004a9	              0xc3	                                     ret	       196	replace.c	FUNCTION_6
0x40004aa	    0x660f1f440000	                    nop word [rax + rax]	       196	replace.c	FUNCTION_6
0x40004b0	      0x488d742420	                   lea rsi, [rsp + 0x20]	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x40004b5	          0x4889ef	                            mov rdi, rbp	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x40004b8	      0xe800000000	                          call 0x40004bd	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x40004bd	            0x85c0	                           test eax, eax	       189	replace.c	FUNCTION_6	IF_3
0x40004bf	            0x759e	                           jne 0x400045f	       189	replace.c	FUNCTION_6	IF_3
0x40004c1	            0x31db	                            xor ebx, ebx	       169	replace.c	FUNCTION_6
0x40004c3	            0xebb0	                           jmp 0x4000475	       169	replace.c	FUNCTION_6
0x40004c5	           0xf1f00	                         nop dword [rax]	       169	replace.c	FUNCTION_6
0x40004c8	    0x803d00000000	                cmp byte [0x040004cf], 0	       168	strbuf.h	FUNCTION_19	CALL_2
0x40004cf	     0xf84f9feffff	                            je 0x40003ce	       168	strbuf.h	FUNCTION_19	CALL_2
0x40004d5	      0xe800000000	                          call 0x40004da	       168	strbuf.h	FUNCTION_19	CALL_2
0x40004da	    0x660f1f440000	                    nop word [rax + rax]	       168	strbuf.h	FUNCTION_19	CALL_2
0x40004e0	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_31	CALL_6
0x40004e9	    0x48c744244800	               mov qword [rsp + 0x48], 0	        90	string3.h	FUNCTION_31	CALL_6
0x40004f2	    0xc74424500000	               mov dword [rsp + 0x50], 0	        90	string3.h	FUNCTION_31	CALL_6
0x40004fa	      0xe923ffffff	                           jmp 0x4000422	        90	string3.h	FUNCTION_31	CALL_6
0x40004ff	              0x90	                                     nop	        90	string3.h	FUNCTION_31	CALL_6
0x4000500	            0x89c7	                            mov edi, eax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000502	      0xe800000000	                          call 0x4000507	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000507	          0x4489ef	                           mov edi, r13d	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400050a	          0x4889c3	                            mov rbx, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400050d	      0xe800000000	                          call 0x4000512	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000512	          0x4989d8	                             mov r8, rbx	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000515	          0x4889c2	                            mov rdx, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000518	          0x4c89f9	                            mov rcx, r15	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400051b	          0x4c89f6	                            mov rsi, r14	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400051e	      0xbf00000000	                              mov edi, 0	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000523	            0x31c0	                            xor eax, eax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000525	      0xe800000000	                          call 0x400052a	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400052a	      0xb8ffffffff	                     mov eax, 0xffffffff	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x400052f	      0xe953ffffff	                           jmp 0x4000487	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000534	         0xf1f4000	                         nop dword [rax]	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x4000538	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       149	replace.c	FUNCTION_5	CALL_4
0x400053d	      0xbf00000000	                              mov edi, 0	       149	replace.c	FUNCTION_5	CALL_4
0x4000542	            0x31c0	                            xor eax, eax	       149	replace.c	FUNCTION_5	CALL_4
0x4000544	      0xe800000000	                          call 0x4000549	       149	replace.c	FUNCTION_5	CALL_4
0x4000549	          0x4889e7	                            mov rdi, rsp	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x400054c	      0xe800000000	                          call 0x4000551	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x4000551	      0xb8ffffffff	                     mov eax, 0xffffffff	       183	replace.c	FUNCTION_6	IF_2
0x4000556	      0xe92cffffff	                           jmp 0x4000487	       183	replace.c	FUNCTION_6	IF_2
0x400055b	       0xf1f440000	                   nop dword [rax + rax]	       183	replace.c	FUNCTION_6	IF_2
0x4000560	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000565	      0xbf00000000	                              mov edi, 0	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x400056a	            0x31c0	                            xor eax, eax	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x400056c	      0xe800000000	                          call 0x4000571	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000571	            0xebd6	                           jmp 0x4000549	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x4000573	      0xe800000000	                          call 0x4000578	       196	replace.c	FUNCTION_6
create_graft	WHILE,0:ELSE,0:CALL,29:FOR,0:IF,8:DO,0:functions,0:SWITCH,0	219
0x4000580	            0x4157	                                push r15	       436	replace.c	FUNCTION_14
0x4000582	            0x4156	                                push r14	       436	replace.c	FUNCTION_14
0x4000584	          0x4989f7	                            mov r15, rsi	       436	replace.c	FUNCTION_14
0x4000587	            0x4155	                                push r13	       436	replace.c	FUNCTION_14
0x4000589	            0x4154	                                push r12	       436	replace.c	FUNCTION_14
0x400058b	              0x55	                                push rbp	       436	replace.c	FUNCTION_14
0x400058c	              0x53	                                push rbx	       436	replace.c	FUNCTION_14
0x400058d	    0x4881ecb80000	                           sub rsp, 0xb8	       436	replace.c	FUNCTION_14
0x4000594	    0x64488b042528	                mov rax, qword fs:[0x28]	       436	replace.c	FUNCTION_14
0x400059d	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       436	replace.c	FUNCTION_14
0x40005a5	            0x31c0	                            xor eax, eax	       436	replace.c	FUNCTION_14
0x40005a7	          0x488b06	                    mov rax, qword [rsi]	       438	replace.c	FUNCTION_14
0x40005aa	      0x488d742470	                   lea rsi, [rsp + 0x70]	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x40005af	        0x897c2404	                mov dword [rsp + 4], edi	       436	replace.c	FUNCTION_14
0x40005b3	        0x8954241c	             mov dword [rsp + 0x1c], edx	       436	replace.c	FUNCTION_14
0x40005b7	        0x894c2418	             mov dword [rsp + 0x18], ecx	       436	replace.c	FUNCTION_14
0x40005bb	    0x48c744243000	               mov qword [rsp + 0x30], 0	       440	replace.c	FUNCTION_14
0x40005c4	    0x48c744243800	               mov qword [rsp + 0x38], 0	       440	replace.c	FUNCTION_14
0x40005cd	          0x4889c7	                            mov rdi, rax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x40005d0	      0x4889442410	             mov qword [rsp + 0x10], rax	       438	replace.c	FUNCTION_14
0x40005d5	    0x48c744244000	               mov qword [rsp + 0x40], 0	       440	replace.c	FUNCTION_14
0x40005de	      0xe800000000	                          call 0x40005e3	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x40005e3	            0x85c0	                           test eax, eax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x40005e5	     0xf882a030000	                            js 0x4000915	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x40005eb	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       446	replace.c	FUNCTION_14	CALL_4
0x40005f0	      0xe800000000	                          call 0x40005f5	       446	replace.c	FUNCTION_14	CALL_4
0x40005f5	          0x4885c0	                           test rax, rax	       447	replace.c	FUNCTION_14	IF_2
0x40005f8	          0x4989c6	                            mov r14, rax	       446	replace.c	FUNCTION_14	CALL_4
0x40005fb	     0xf8420030000	                            je 0x4000921	       447	replace.c	FUNCTION_14	IF_2
0x4000601	      0x488d742428	                   lea rsi, [rsp + 0x28]	       450	replace.c	FUNCTION_14	CALL_7
0x4000606	          0x4889c7	                            mov rdi, rax	       450	replace.c	FUNCTION_14	CALL_7
0x4000609	      0xe800000000	                          call 0x400060e	       450	replace.c	FUNCTION_14	CALL_7
0x400060e	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       451	replace.c	FUNCTION_14	CALL_8
0x4000613	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       451	replace.c	FUNCTION_14	CALL_8
0x4000618	          0x4889c3	                            mov rbx, rax	       450	replace.c	FUNCTION_14	CALL_7
0x400061b	          0x4889c6	                            mov rsi, rax	       451	replace.c	FUNCTION_14	CALL_8
0x400061e	      0xe800000000	                          call 0x4000623	       451	replace.c	FUNCTION_14	CALL_8
0x4000623	          0x4889de	                            mov rsi, rbx	       452	replace.c	FUNCTION_14	CALL_9
0x4000626	          0x4c89f7	                            mov rdi, r14	       452	replace.c	FUNCTION_14	CALL_9
0x4000629	      0xe800000000	                          call 0x400062e	       452	replace.c	FUNCTION_14	CALL_9
0x400062e	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       360	replace.c	FUNCTION_11
0x4000633	    0x48c744245000	               mov qword [rsp + 0x50], 0	       354	replace.c	FUNCTION_11
0x400063c	    0x48c744245800	               mov qword [rsp + 0x58], 0	       354	replace.c	FUNCTION_11
0x4000645	    0x48c744246000	               mov qword [rsp + 0x60], 0	       354	replace.c	FUNCTION_11
0x400064e	        0x4883c02e	                           add rax, 0x2e	       360	replace.c	FUNCTION_11
0x4000652	      0x4889442408	                mov qword [rsp + 8], rax	       360	replace.c	FUNCTION_11
0x4000657	          0x4889c5	                            mov rbp, rax	       361	replace.c	FUNCTION_11
0x400065a	            0xeb08	                           jmp 0x4000664	       361	replace.c	FUNCTION_11
0x400065c	         0xf1f4000	                         nop dword [rax]	       361	replace.c	FUNCTION_11
0x4000660	        0x4883c530	                           add rbp, 0x30	       364	replace.c	FUNCTION_11	WHILE_1
0x4000664	      0xbe00000000	                              mov esi, 0	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000669	          0x4889ef	                            mov rdi, rbp	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x400066c	      0xe800000000	                          call 0x4000671	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000671	            0x85c0	                           test eax, eax	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000673	            0x75eb	                           jne 0x4000660	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x4000675	      0x837c240401	                  cmp dword [rsp + 4], 1	       367	replace.c	FUNCTION_11	FOR_1
0x400067a	      0x4c8d642450	                   lea r12, [rsp + 0x50]	       367	replace.c	FUNCTION_11	FOR_1
0x400067f	     0xf8eab000000	                           jle 0x4000730	       367	replace.c	FUNCTION_11	FOR_1
0x4000685	        0x8b442404	                mov eax, dword [rsp + 4]	       367	replace.c	FUNCTION_11	FOR_1
0x4000689	        0x498d5f08	                      lea rbx, [r15 + 8]	       367	replace.c	FUNCTION_11	FOR_1
0x400068d	      0x4c8d642450	                   lea r12, [rsp + 0x50]	       367	replace.c	FUNCTION_11	FOR_1
0x4000692	          0x83e802	                              sub eax, 2	       367	replace.c	FUNCTION_11	FOR_1
0x4000695	      0x4d8d6cc710	          lea r13, [r15 + rax*8 + 0x10] 	       367	replace.c	FUNCTION_11	FOR_1
0x400069a	            0xeb42	                           jmp 0x40006de	       367	replace.c	FUNCTION_11	FOR_1
0x400069c	         0xf1f4000	                         nop dword [rax]	       367	replace.c	FUNCTION_11	FOR_1
0x40006a0	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40006a8	      0xe800000000	                          call 0x40006ad	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40006ad	          0x4885c0	                           test rax, rax	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40006b0	     0xf8482010000	                            je 0x4000838	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x40006b6	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006be	        0x4883c308	                              add rbx, 8	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006c2	      0xe800000000	                          call 0x40006c7	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006c7	      0xbe00000000	                              mov esi, 0	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006cc	          0x4889c2	                            mov rdx, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006cf	          0x4c89e7	                            mov rdi, r12	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006d2	            0x31c0	                            xor eax, eax	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006d4	      0xe800000000	                          call 0x40006d9	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x40006d9	          0x4939dd	                            cmp r13, rbx	       367	replace.c	FUNCTION_11	FOR_1
0x40006dc	            0x7452	                            je 0x4000730	       367	replace.c	FUNCTION_11	FOR_1
0x40006de	          0x488b3b	                    mov rdi, qword [rbx]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x40006e1	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x40006e9	      0xe800000000	                          call 0x40006ee	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x40006ee	            0x85c0	                           test eax, eax	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x40006f0	            0x79ae	                           jns 0x40006a0	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x40006f2	          0x4c89e7	                            mov rdi, r12	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40006f5	      0xe800000000	                          call 0x40006fa	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x40006fa	          0x488b1b	                    mov rbx, qword [rbx]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x40006fd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x4000702	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x4000707	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_90
0x4000709	      0xe800000000	                          call 0x400070e	        54	gettext.h	FUNCTION_90
0x400070e	          0x4889de	                            mov rsi, rbx	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000711	          0x4889c7	                            mov rdi, rax	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000714	            0x31c0	                            xor eax, eax	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000716	      0xe800000000	                          call 0x400071b	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x400071b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x4000720	      0xbbffffffff	                     mov ebx, 0xffffffff	       466	replace.c	FUNCTION_14	IF_5
0x4000725	      0xe800000000	                          call 0x400072a	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x400072a	      0xe9d9000000	                           jmp 0x4000808	       466	replace.c	FUNCTION_14	IF_5
0x400072f	              0x90	                                     nop	       466	replace.c	FUNCTION_14	IF_5
0x4000730	      0x488b442408	                mov rax, qword [rsp + 8]	       382	replace.c	FUNCTION_11	CALL_12
0x4000735	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	       382	replace.c	FUNCTION_11	CALL_12
0x400073a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       382	replace.c	FUNCTION_11	CALL_12
0x400073f	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       382	replace.c	FUNCTION_11	CALL_12
0x4000744	          0x4889ea	                            mov rdx, rbp	       382	replace.c	FUNCTION_11	CALL_12
0x4000747	          0x4889c6	                            mov rsi, rax	       382	replace.c	FUNCTION_11	CALL_12
0x400074a	      0x482b742440	             sub rsi, qword [rsp + 0x40]	       382	replace.c	FUNCTION_11	CALL_12
0x400074f	          0x4829c2	                            sub rdx, rax	       382	replace.c	FUNCTION_11	CALL_12
0x4000752	      0xe800000000	                          call 0x4000757	       382	replace.c	FUNCTION_11	CALL_12
0x4000757	          0x4c89e7	                            mov rdi, r12	       385	replace.c	FUNCTION_11	CALL_13
0x400075a	      0xe800000000	                          call 0x400075f	       385	replace.c	FUNCTION_11	CALL_13
0x400075f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x4000764	      0xe800000000	                          call 0x4000769	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x4000769	            0x85c0	                           test eax, eax	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x400076b	     0xf85e7000000	                           jne 0x4000858	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x4000771	        0x8b442404	                mov eax, dword [rsp + 4]	       430	replace.c	FUNCTION_13
0x4000775	          0x4c89e2	                            mov rdx, r12	       432	replace.c	FUNCTION_13	CALL_1
0x4000778	          0x4c89f6	                            mov rsi, r14	       432	replace.c	FUNCTION_13	CALL_1
0x400077b	      0xbf00000000	                              mov edi, 0	       432	replace.c	FUNCTION_13	CALL_1
0x4000780	      0x4c897c2458	             mov qword [rsp + 0x58], r15	       431	replace.c	FUNCTION_13
0x4000785	        0x89442450	             mov dword [rsp + 0x50], eax	       430	replace.c	FUNCTION_13
0x4000789	      0xe800000000	                          call 0x400078e	       432	replace.c	FUNCTION_13	CALL_1
0x400078e	            0x85c0	                           test eax, eax	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x4000790	            0x7589	                           jne 0x400071b	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x4000792	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x4000797	    0x488b15000000	            mov rdx, qword [0x0400079e] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x400079e	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007a6	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007ab	      0xe800000000	                          call 0x40007b0	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007b0	            0x85c0	                           test eax, eax	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007b2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x40007b7	     0xf850b010000	                           jne 0x40008c8	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x40007bd	      0xe800000000	                          call 0x40007c2	       475	replace.c	FUNCTION_14	CALL_23
0x40007c2	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       975	cache.h	FUNCTION_51	CALL_1
0x40007ca	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       975	cache.h	FUNCTION_51	CALL_1
0x40007cf	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_51	CALL_1
0x40007d4	      0xe800000000	                          call 0x40007d9	       975	cache.h	FUNCTION_51	CALL_1
0x40007d9	            0x85c0	                           test eax, eax	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x40007db	            0x89c3	                            mov ebx, eax	       975	cache.h	FUNCTION_51	CALL_1
0x40007dd	     0xf85bd000000	                           jne 0x40008a0	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x40007e3	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x40007e7	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x40007ec	            0x85c0	                           test eax, eax	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x40007ee	     0xf8403010000	                            je 0x40008f7	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x40007f4	      0xe800000000	                          call 0x40007f9	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x40007f9	      0xbf00000000	                              mov edi, 0	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x40007fe	          0x4889c6	                            mov rsi, rax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x4000801	            0x31c0	                            xor eax, eax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x4000803	      0xe800000000	                          call 0x4000808	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x4000808	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       486	replace.c	FUNCTION_14
0x4000810	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       486	replace.c	FUNCTION_14
0x4000819	            0x89d8	                            mov eax, ebx	       486	replace.c	FUNCTION_14
0x400081b	     0xf850c010000	                           jne 0x400092d	       486	replace.c	FUNCTION_14
0x4000821	    0x4881c4b80000	                           add rsp, 0xb8	       486	replace.c	FUNCTION_14
0x4000828	              0x5b	                                 pop rbx	       486	replace.c	FUNCTION_14
0x4000829	              0x5d	                                 pop rbp	       486	replace.c	FUNCTION_14
0x400082a	            0x415c	                                 pop r12	       486	replace.c	FUNCTION_14
0x400082c	            0x415d	                                 pop r13	       486	replace.c	FUNCTION_14
0x400082e	            0x415e	                                 pop r14	       486	replace.c	FUNCTION_14
0x4000830	            0x415f	                                 pop r15	       486	replace.c	FUNCTION_14
0x4000832	              0xc3	                                     ret	       486	replace.c	FUNCTION_14
0x4000833	       0xf1f440000	                   nop dword [rax + rax]	       486	replace.c	FUNCTION_14
0x4000838	          0x4c89e7	                            mov rdi, r12	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x400083b	      0xe800000000	                          call 0x4000840	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x4000840	          0x488b1b	                    mov rbx, qword [rbx]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x4000843	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x4000848	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x400084d	      0xe9b5feffff	                           jmp 0x4000707	        54	gettext.h	FUNCTION_90
0x4000852	    0x660f1f440000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_90
0x4000858	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x400085d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_90
0x400085f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x4000864	      0xe800000000	                          call 0x4000869	        54	gettext.h	FUNCTION_90
0x4000869	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x400086e	          0x4889c7	                            mov rdi, rax	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x4000871	            0x31c0	                            xor eax, eax	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x4000873	      0xe800000000	                          call 0x4000878	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x4000878	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_90
0x400087a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x400087f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x4000884	      0xe800000000	                          call 0x4000889	        54	gettext.h	FUNCTION_90
0x4000889	          0x4889c7	                            mov rdi, rax	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x400088c	            0x31c0	                            xor eax, eax	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x400088e	      0xe800000000	                          call 0x4000893	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x4000893	      0xe9d9feffff	                           jmp 0x4000771	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x4000898	     0xf1f84000000	                   nop dword [rax + rax]	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x40008a0	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	       485	replace.c	FUNCTION_14	CALL_29
0x40008a5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       485	replace.c	FUNCTION_14	CALL_29
0x40008aa	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	       485	replace.c	FUNCTION_14	CALL_29
0x40008b2	      0x488d742470	                   lea rsi, [rsp + 0x70]	       485	replace.c	FUNCTION_14	CALL_29
0x40008b7	      0xba00000000	                              mov edx, 0	       485	replace.c	FUNCTION_14	CALL_29
0x40008bc	      0xe85ffaffff	             call sym.replace_object_oid	       485	replace.c	FUNCTION_14	CALL_29
0x40008c1	            0x89c3	                            mov ebx, eax	       485	replace.c	FUNCTION_14	CALL_29
0x40008c3	      0xe940ffffff	                           jmp 0x4000808	       485	replace.c	FUNCTION_14	CALL_29
0x40008c8	      0xe800000000	                          call 0x40008cd	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x40008cd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x40008d2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x40008d7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_90
0x40008d9	      0xbbffffffff	                     mov ebx, 0xffffffff	       448	replace.c	FUNCTION_14	CALL_6
0x40008de	      0xe800000000	                          call 0x40008e3	        54	gettext.h	FUNCTION_90
0x40008e3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       448	replace.c	FUNCTION_14	CALL_6
0x40008e8	          0x4889c7	                            mov rdi, rax	       448	replace.c	FUNCTION_14	CALL_6
0x40008eb	            0x31c0	                            xor eax, eax	       448	replace.c	FUNCTION_14	CALL_6
0x40008ed	      0xe800000000	                          call 0x40008f2	       448	replace.c	FUNCTION_14	CALL_6
0x40008f2	      0xe911ffffff	                           jmp 0x4000808	       448	replace.c	FUNCTION_14	CALL_6
0x40008f7	      0xe800000000	                          call 0x40008fc	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x40008fc	      0xbf00000000	                              mov edi, 0	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000901	          0x4889c6	                            mov rsi, rax	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000904	            0x31c0	                            xor eax, eax	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000906	      0xe800000000	                          call 0x400090b	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x400090b	      0xbbffffffff	                     mov ebx, 0xffffffff	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000910	      0xe9f3feffff	                           jmp 0x4000808	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x4000915	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x400091a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x400091f	            0xebb6	                           jmp 0x40008d7	        54	gettext.h	FUNCTION_90
0x4000921	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x4000926	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x400092b	            0xebaa	                           jmp 0x40008d7	        54	gettext.h	FUNCTION_90
0x400092d	      0xe800000000	                          call 0x4000932	       486	replace.c	FUNCTION_14
check_one_mergetag	WHILE,0:ELSE,0:CALL,15:FOR,1:IF,4:DO,0:functions,0:SWITCH,0	104
0x4000190	            0x4156	                                push r14	       397	replace.c	FUNCTION_12
0x4000192	            0x4155	                                push r13	       397	replace.c	FUNCTION_12
0x4000194	      0xbf04000000	                              mov edi, 4	       404	replace.c	FUNCTION_12	CALL_2
0x4000199	            0x4154	                                push r12	       397	replace.c	FUNCTION_12
0x400019b	              0x55	                                push rbp	       397	replace.c	FUNCTION_12
0x400019c	          0x4989d4	                            mov r12, rdx	       397	replace.c	FUNCTION_12
0x400019f	              0x53	                                push rbx	       397	replace.c	FUNCTION_12
0x40001a0	          0x4889f3	                            mov rbx, rsi	       397	replace.c	FUNCTION_12
0x40001a3	        0x4883ec40	                           sub rsp, 0x40	       397	replace.c	FUNCTION_12
0x40001a7	    0x64488b042528	                mov rax, qword fs:[0x28]	       397	replace.c	FUNCTION_12
0x40001b0	      0x4889442438	             mov qword [rsp + 0x38], rax	       397	replace.c	FUNCTION_12
0x40001b5	            0x31c0	                            xor eax, eax	       397	replace.c	FUNCTION_12
0x40001b7	        0x488b4208	                mov rax, qword [rdx + 8]	       399	replace.c	FUNCTION_12
0x40001bb	          0x4c8b30	                    mov r14, qword [rax]	       399	replace.c	FUNCTION_12
0x40001be	      0xe800000000	                          call 0x40001c3	       404	replace.c	FUNCTION_12	CALL_2
0x40001c3	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       404	replace.c	FUNCTION_12	CALL_2
0x40001c7	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       404	replace.c	FUNCTION_12	CALL_2
0x40001cb	          0x4889e1	                            mov rcx, rsp	       404	replace.c	FUNCTION_12	CALL_2
0x40001ce	          0x4889c2	                            mov rdx, rax	       404	replace.c	FUNCTION_12	CALL_2
0x40001d1	      0xe800000000	                          call 0x40001d6	       404	replace.c	FUNCTION_12	CALL_2
0x40001d6	          0x4889e7	                            mov rdi, rsp	       405	replace.c	FUNCTION_12	CALL_3
0x40001d9	      0xe800000000	                          call 0x40001de	       405	replace.c	FUNCTION_12	CALL_3
0x40001de	          0x4885c0	                           test rax, rax	       406	replace.c	FUNCTION_12	IF_1
0x40001e1	     0xf8421010000	                            je 0x4000308	       406	replace.c	FUNCTION_12	IF_1
0x40001e7	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40001eb	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40001ef	          0x4889c7	                            mov rdi, rax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40001f2	          0x4989c5	                            mov r13, rax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40001f5	      0xe800000000	                          call 0x40001fa	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40001fa	            0x85c0	                           test eax, eax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x40001fc	     0xf85e1000000	                           jne 0x40002e3	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x4000202	      0x41833c2401	                      cmp dword [r12], 1	       412	replace.c	FUNCTION_12	FOR_1
0x4000207	      0xbb08000000	                              mov ebx, 8	       412	replace.c	FUNCTION_12	FOR_1
0x400020c	      0xbd01000000	                              mov ebp, 1	       412	replace.c	FUNCTION_12	FOR_1
0x4000211	            0x7f35	                            jg 0x4000248	       412	replace.c	FUNCTION_12	FOR_1
0x4000213	      0xe998000000	                           jmp 0x40002b0	       412	replace.c	FUNCTION_12	FOR_1
0x4000218	     0xf1f84000000	                   nop dword [rax + rax]	       412	replace.c	FUNCTION_12	FOR_1
0x4000220	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       975	cache.h	FUNCTION_51	CALL_1
0x4000224	      0x488d742420	                   lea rsi, [rsp + 0x20]	       975	cache.h	FUNCTION_51	CALL_1
0x4000229	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_51	CALL_1
0x400022e	        0x488d7804	                      lea rdi, [rax + 4]	       975	cache.h	FUNCTION_51	CALL_1
0x4000232	      0xe800000000	                          call 0x4000237	       975	cache.h	FUNCTION_51	CALL_1
0x4000237	            0x85c0	                           test eax, eax	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x4000239	            0x7450	                            je 0x400028b	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x400023b	          0x83c501	                              add ebp, 1	       412	replace.c	FUNCTION_12	FOR_1
0x400023e	        0x4883c308	                              add rbx, 8	       412	replace.c	FUNCTION_12	FOR_1
0x4000242	        0x41392c24	                    cmp dword [r12], ebp	       412	replace.c	FUNCTION_12	FOR_1
0x4000246	            0x7e68	                           jle 0x40002b0	       412	replace.c	FUNCTION_12	FOR_1
0x4000248	      0x498b442408	                mov rax, qword [r12 + 8]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x400024d	      0x488d742420	                   lea rsi, [rsp + 0x20]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x4000252	        0x488b3c18	              mov rdi, qword [rax + rbx]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x4000256	      0xe800000000	                          call 0x400025b	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x400025b	            0x85c0	                           test eax, eax	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x400025d	            0x79c1	                           jns 0x4000220	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x400025f	      0x498b442408	                mov rax, qword [r12 + 8]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000264	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x4000269	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x400026e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_90
0x4000270	        0x488b1c18	              mov rbx, qword [rax + rbx]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000274	      0xe800000000	                          call 0x4000279	        54	gettext.h	FUNCTION_90
0x4000279	          0x4889c7	                            mov rdi, rax	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x400027c	            0x31c0	                            xor eax, eax	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x400027e	          0x4889de	                            mov rsi, rbx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000281	      0xe800000000	                          call 0x4000286	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x4000286	      0xb8ffffffff	                     mov eax, 0xffffffff	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x400028b	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       424	replace.c	FUNCTION_12
0x4000290	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       424	replace.c	FUNCTION_12
0x4000299	            0x7579	                           jne 0x4000314	       424	replace.c	FUNCTION_12
0x400029b	        0x4883c440	                           add rsp, 0x40	       424	replace.c	FUNCTION_12
0x400029f	              0x5b	                                 pop rbx	       424	replace.c	FUNCTION_12
0x40002a0	              0x5d	                                 pop rbp	       424	replace.c	FUNCTION_12
0x40002a1	            0x415c	                                 pop r12	       424	replace.c	FUNCTION_12
0x40002a3	            0x415d	                                 pop r13	       424	replace.c	FUNCTION_12
0x40002a5	            0x415e	                                 pop r14	       424	replace.c	FUNCTION_12
0x40002a7	              0xc3	                                     ret	       424	replace.c	FUNCTION_12
0x40002a8	     0xf1f84000000	                   nop dword [rax + rax]	       424	replace.c	FUNCTION_12
0x40002b0	          0x4889e7	                            mov rdi, rsp	       421	replace.c	FUNCTION_12	CALL_14
0x40002b3	      0xe800000000	                          call 0x40002b8	       421	replace.c	FUNCTION_12	CALL_14
0x40002b8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x40002bd	          0x4889c3	                            mov rbx, rax	       421	replace.c	FUNCTION_12	CALL_14
0x40002c0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x40002c5	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_90
0x40002c7	      0xe800000000	                          call 0x40002cc	        54	gettext.h	FUNCTION_90
0x40002cc	          0x4889da	                            mov rdx, rbx	       421	replace.c	FUNCTION_12	CALL_14
0x40002cf	          0x4889c7	                            mov rdi, rax	       421	replace.c	FUNCTION_12	CALL_14
0x40002d2	          0x4c89f6	                            mov rsi, r14	       421	replace.c	FUNCTION_12	CALL_14
0x40002d5	            0x31c0	                            xor eax, eax	       421	replace.c	FUNCTION_12	CALL_14
0x40002d7	      0xe800000000	                          call 0x40002dc	       421	replace.c	FUNCTION_12	CALL_14
0x40002dc	      0xb8ffffffff	                     mov eax, 0xffffffff	       421	replace.c	FUNCTION_12	CALL_14
0x40002e1	            0xeba8	                           jmp 0x400028b	       421	replace.c	FUNCTION_12	CALL_14
0x40002e3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x40002e8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x40002ed	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_90
0x40002ef	      0xe800000000	                          call 0x40002f4	        54	gettext.h	FUNCTION_90
0x40002f4	          0x4c89f6	                            mov rsi, r14	       409	replace.c	FUNCTION_12	CALL_8
0x40002f7	          0x4889c7	                            mov rdi, rax	       409	replace.c	FUNCTION_12	CALL_8
0x40002fa	            0x31c0	                            xor eax, eax	       409	replace.c	FUNCTION_12	CALL_8
0x40002fc	      0xe800000000	                          call 0x4000301	       409	replace.c	FUNCTION_12	CALL_8
0x4000301	      0xb8ffffffff	                     mov eax, 0xffffffff	       409	replace.c	FUNCTION_12	CALL_8
0x4000306	            0xeb83	                           jmp 0x400028b	       409	replace.c	FUNCTION_12	CALL_8
0x4000308	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_90
0x400030d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_90
0x4000312	            0xebd9	                           jmp 0x40002ed	        54	gettext.h	FUNCTION_90
0x4000314	      0xe800000000	                          call 0x4000319	       424	replace.c	FUNCTION_12
