cmd_var	IF,3:WHILE,0:functions,0:SWITCH,0:CALL,7:ELSE,0:DO,0:FOR,0	74
0x40000d0	          0x83ff02	                              cmp edi, 2	        78	var.c	FUNCTION_6	IF_1
0x40000d3	            0x4154	                                push r12	        76	var.c	FUNCTION_6
0x40000d5	              0x55	                                push rbp	        76	var.c	FUNCTION_6
0x40000d6	              0x53	                                push rbx	        76	var.c	FUNCTION_6
0x40000d7	     0xf85e3000000	                           jne 0x40001c0	        78	var.c	FUNCTION_6	IF_1
0x40000dd	        0x488b4608	                mov rax, qword [rsi + 8]	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000e1	          0x4889f3	                            mov rbx, rsi	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000e4	          0x80382d	                    cmp byte [rax], 0x2d	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000e7	            0x756f	                           jne 0x4000158	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000e9	        0x8078016c	                cmp byte [rax + 1], 0x6c	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000ed	            0x7569	                           jne 0x4000158	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000ef	        0x80780200	                   cmp byte [rax + 2], 0	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000f3	            0x7563	                           jne 0x4000158	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000f5	            0x31f6	                            xor esi, esi	        82	var.c	FUNCTION_6	IF_2	CALL_3
0x40000f7	      0xbf00000000	                              mov edi, 0	        82	var.c	FUNCTION_6	IF_2	CALL_3
0x40000fc	      0xbb00000000	                              mov ebx, 0	        47	var.c	FUNCTION_3	FOR_1
0x4000101	      0xe800000000	                          call 0x4000106	        82	var.c	FUNCTION_6	IF_2	CALL_3
0x4000106	    0x488b05000000	            mov rax, qword [0x0400010d] 	        47	var.c	FUNCTION_3	FOR_1
0x400010d	          0x4885c0	                           test rax, rax	        47	var.c	FUNCTION_3	FOR_1
0x4000110	     0xf849a000000	                            je 0x40001b0	        47	var.c	FUNCTION_3	FOR_1
0x4000116	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        47	var.c	FUNCTION_3	FOR_1
0x4000120	            0x31ff	                            xor edi, edi	        48	var.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000122	            0xffd0	                                call rax	        48	var.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000124	          0x4885c0	                           test rax, rax	        48	var.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000127	            0x7417	                            je 0x4000140	        48	var.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000129	          0x488b13	                    mov rdx, qword [rbx]	       104	stdio2.h	CALL_12
0x400012c	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_12
0x400012f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x4000134	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000139	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_12
0x400013b	      0xe800000000	                          call 0x4000140	       104	stdio2.h	CALL_12
0x4000140	        0x4883c310	                           add rbx, 0x10	        47	var.c	FUNCTION_3	FOR_1
0x4000144	        0x488b4308	                mov rax, qword [rbx + 8]	        47	var.c	FUNCTION_3	FOR_1
0x4000148	          0x4885c0	                           test rax, rax	        47	var.c	FUNCTION_3	FOR_1
0x400014b	            0x75d3	                           jne 0x4000120	        47	var.c	FUNCTION_3	FOR_1
0x400014d	              0x5b	                                 pop rbx	        94	var.c	FUNCTION_6
0x400014e	            0x31c0	                            xor eax, eax	        94	var.c	FUNCTION_6
0x4000150	              0x5d	                                 pop rbp	        94	var.c	FUNCTION_6
0x4000151	            0x415c	                                 pop r12	        94	var.c	FUNCTION_6
0x4000153	              0xc3	                                     ret	        94	var.c	FUNCTION_6
0x4000154	         0xf1f4000	                         nop dword [rax]	        94	var.c	FUNCTION_6
0x4000158	            0x31f6	                            xor esi, esi	        86	var.c	FUNCTION_6	CALL_5
0x400015a	      0xbf00000000	                              mov edi, 0	        86	var.c	FUNCTION_6	CALL_5
0x400015f	      0xe800000000	                          call 0x4000164	        86	var.c	FUNCTION_6	CALL_5
0x4000164	    0x488b2d000000	            mov rbp, qword [0x0400016b] 	        57	var.c	FUNCTION_4	FOR_1
0x400016b	        0x4c8b6308	                mov r12, qword [rbx + 8]	        87	var.c	FUNCTION_6	CALL_6
0x400016f	      0xbb00000000	                              mov ebx, 0	        57	var.c	FUNCTION_4	FOR_1
0x4000174	          0x4885ed	                           test rbp, rbp	        57	var.c	FUNCTION_4	FOR_1
0x4000177	            0x7514	                           jne 0x400018d	        57	var.c	FUNCTION_4	FOR_1
0x4000179	            0xeb45	                           jmp 0x40001c0	        57	var.c	FUNCTION_4	FOR_1
0x400017b	       0xf1f440000	                   nop dword [rax + rax]	        57	var.c	FUNCTION_4	FOR_1
0x4000180	        0x4883c310	                           add rbx, 0x10	        57	var.c	FUNCTION_4	FOR_1
0x4000184	        0x488b6b08	                mov rbp, qword [rbx + 8]	        57	var.c	FUNCTION_4	FOR_1
0x4000188	          0x4885ed	                           test rbp, rbp	        57	var.c	FUNCTION_4	FOR_1
0x400018b	            0x7433	                            je 0x40001c0	        57	var.c	FUNCTION_4	FOR_1
0x400018d	          0x488b33	                    mov rsi, qword [rbx]	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4000190	          0x4c89e7	                            mov rdi, r12	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4000193	      0xe800000000	                          call 0x4000198	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4000198	            0x85c0	                           test eax, eax	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x400019a	            0x75e4	                           jne 0x4000180	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x400019c	      0xbf01000000	                              mov edi, 1	        59	var.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x40001a1	            0xffd5	                                call rbp	        59	var.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x40001a3	          0x4885c0	                           test rax, rax	        88	var.c	FUNCTION_6	IF_3
0x40001a6	          0x4889c7	                            mov rdi, rax	        59	var.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x40001a9	            0x7415	                            je 0x40001c0	        88	var.c	FUNCTION_6	IF_3
0x40001ab	      0xe800000000	                          call 0x40001b0	       104	stdio2.h	CALL_12
0x40001b0	              0x5b	                                 pop rbx	        94	var.c	FUNCTION_6
0x40001b1	            0x31c0	                            xor eax, eax	        94	var.c	FUNCTION_6
0x40001b3	              0x5d	                                 pop rbp	        94	var.c	FUNCTION_6
0x40001b4	            0x415c	                                 pop r12	        94	var.c	FUNCTION_6
0x40001b6	              0xc3	                                     ret	        94	var.c	FUNCTION_6
0x40001b7	    0x660f1f840000	                    nop word [rax + rax]	        94	var.c	FUNCTION_6
0x40001c0	      0xbf00000000	                              mov edi, 0	        79	var.c	FUNCTION_6	CALL_1
0x40001c5	      0xe800000000	                  call section_end..text	        79	var.c	FUNCTION_6	CALL_1
show_config	IF,1:WHILE,0:functions,0:SWITCH,0:CALL,1:ELSE,1:DO,0:FOR,0	24
0x4000060	          0x4885f6	                           test rsi, rsi	        68	var.c	FUNCTION_5	IF_1
0x4000063	            0x4154	                                push r12	        67	var.c	FUNCTION_5
0x4000065	          0x4989d4	                            mov r12, rdx	        67	var.c	FUNCTION_5
0x4000068	              0x55	                                push rbp	        67	var.c	FUNCTION_5
0x4000069	          0x4889fd	                            mov rbp, rdi	        67	var.c	FUNCTION_5
0x400006c	              0x53	                                push rbx	        67	var.c	FUNCTION_5
0x400006d	          0x4889f3	                            mov rbx, rsi	        67	var.c	FUNCTION_5
0x4000070	            0x742e	                            je 0x40000a0	        68	var.c	FUNCTION_5	IF_1
0x4000072	          0x4889f1	                            mov rcx, rsi	       104	stdio2.h	CALL_12
0x4000075	          0x4889fa	                            mov rdx, rdi	       104	stdio2.h	CALL_12
0x4000078	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_12
0x400007d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_12
0x4000082	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_12
0x4000084	      0xe800000000	                          call 0x4000089	       104	stdio2.h	CALL_12
0x4000089	          0x4c89e2	                            mov rdx, r12	        72	var.c	FUNCTION_5	CALL_1
0x400008c	          0x4889de	                            mov rsi, rbx	        72	var.c	FUNCTION_5	CALL_1
0x400008f	          0x4889ef	                            mov rdi, rbp	        72	var.c	FUNCTION_5	CALL_1
0x4000092	              0x5b	                                 pop rbx	        73	var.c	FUNCTION_5
0x4000093	              0x5d	                                 pop rbp	        73	var.c	FUNCTION_5
0x4000094	            0x415c	                                 pop r12	        73	var.c	FUNCTION_5
0x4000096	      0xe900000000	                           jmp 0x400009b	        72	var.c	FUNCTION_5	CALL_1
0x400009b	       0xf1f440000	                   nop dword [rax + rax]	        72	var.c	FUNCTION_5	CALL_1
0x40000a0	      0xe800000000	                          call 0x40000a5	       104	stdio2.h	CALL_12
0x40000a5	            0xebe2	                           jmp 0x4000089	       104	stdio2.h	CALL_12
pager	IF,1:WHILE,0:functions,0:SWITCH,0:CALL,1:ELSE,0:DO,0:FOR,0	8
0x4000040	        0x4883ec08	                              sub rsp, 8	        22	var.c	FUNCTION_2
0x4000044	      0xbf01000000	                              mov edi, 1	        23	var.c	FUNCTION_2	CALL_1
0x4000049	      0xe800000000	                          call 0x400004e	        23	var.c	FUNCTION_2	CALL_1
0x400004e	      0xba00000000	                              mov edx, 0	        26	var.c	FUNCTION_2	IF_1
0x4000053	          0x4885c0	                           test rax, rax	        26	var.c	FUNCTION_2	IF_1
0x4000056	        0x480f44c2	                          cmove rax, rdx	        26	var.c	FUNCTION_2	IF_1
0x400005a	        0x4883c408	                              add rsp, 8	        28	var.c	FUNCTION_2
0x400005e	              0xc3	                                     ret	        28	var.c	FUNCTION_2
