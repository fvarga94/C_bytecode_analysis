ws_fix_copy	CALL,13:DO,1:WHILE,2:functions,0:FOR,3:ELSE,6:IF,18:SWITCH,0	432
0x4000b70	            0x4157	                                push r15	       277	ws.c	FUNCTION_8
0x4000b72	            0x4156	                                push r14	       277	ws.c	FUNCTION_8
0x4000b74	          0x4989f7	                            mov r15, rsi	       277	ws.c	FUNCTION_8
0x4000b77	            0x4155	                                push r13	       277	ws.c	FUNCTION_8
0x4000b79	            0x4154	                                push r12	       277	ws.c	FUNCTION_8
0x4000b7b	          0x4989fe	                            mov r14, rdi	       277	ws.c	FUNCTION_8
0x4000b7e	              0x55	                                push rbp	       277	ws.c	FUNCTION_8
0x4000b7f	              0x53	                                push rbx	       277	ws.c	FUNCTION_8
0x4000b80	          0x4189d2	                           mov r10d, edx	       277	ws.c	FUNCTION_8
0x4000b83	        0x4883ec28	                           sub rsp, 0x28	       277	ws.c	FUNCTION_8
0x4000b87	          0xf6c140	                           test cl, 0x40	       294	ws.c	FUNCTION_8	IF_1
0x4000b8a	      0x4c89442408	                 mov qword [rsp + 8], r8	       277	ws.c	FUNCTION_8
0x4000b8f	            0x7467	                            je 0x4000bf8	       294	ws.c	FUNCTION_8	IF_1
0x4000b91	            0x85d2	                           test edx, edx	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000b93	     0xf8ec7010000	                           jle 0x4000d60	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000b99	          0x4863c2	                         movsxd rax, edx	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000b9c	    0xc74424040000	                  mov dword [rsp + 4], 0	       284	ws.c	FUNCTION_8
0x4000ba4	       0xfb64406ff	         movzx eax, byte [rsi + rax - 1]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ba9	            0x3c0a	                             cmp al, 0xa	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000bab	     0xf84cf050000	                            je 0x4001180	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000bb1	    0xc74424100000	               mov dword [rsp + 0x10], 0	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000bb9	    0xf68000000000	                      test byte [rax], 1	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000bc0	     0xf8492010000	                            je 0x4000d58	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000bc6	          0x4963c2	                        movsxd rax, r10d	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000bc9	      0x498d4407fe	                lea rax, [r15 + rax - 2]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000bce	            0xeb14	                           jmp 0x4000be4	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000bd0	           0xfb610	                   movzx edx, byte [rax]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000bd3	        0x4883e801	                              sub rax, 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000bd7	    0xf68200000000	                      test byte [rdx], 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000bde	     0xf84bd050000	                            je 0x40011a1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000be4	        0x4183ea01	                             sub r10d, 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000be8	            0x75e6	                           jne 0x4000bd0	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x4000bea	    0x41bd01000000	                             mov r13d, 1	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000bf0	      0xe97e010000	                           jmp 0x4000d73	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000bf5	           0xf1f00	                         nop dword [rax]	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000bf8	          0x4531ed	                          xor r13d, r13d	       286	ws.c	FUNCTION_8
0x4000bfb	            0x85d2	                           test edx, edx	       313	ws.c	FUNCTION_8	FOR_1
0x4000bfd	    0xc74424100000	               mov dword [rsp + 0x10], 0	       285	ws.c	FUNCTION_8
0x4000c05	    0xc74424040000	                  mov dword [rsp + 4], 0	       284	ws.c	FUNCTION_8
0x4000c0d	     0xf8e60010000	                           jle 0x4000d73	       313	ws.c	FUNCTION_8	FOR_1
0x4000c13	            0x89c8	                            mov eax, ecx	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c15	          0x4189c9	                            mov r9d, ecx	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c18	      0x2580000000	                           and eax, 0x80	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c1d	    0x4181e1000100	                          and r9d, 0x100	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c24	            0x7552	                           jne 0x4000c78	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c26	            0x85c0	                           test eax, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c28	      0xb800000000	                              mov eax, 0	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c2d	     0xf84a5000000	                            je 0x4000cd8	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c33	      0xbdffffffff	                     mov ebp, 0xffffffff	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c38	            0x31f6	                            xor esi, esi	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c3a	      0xbf01000000	                              mov edi, 1	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c3f	          0x4189ec	                           mov r12d, ebp	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c42	            0xeb1c	                           jmp 0x4000c60	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c44	         0xf1f4000	                         nop dword [rax]	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c48	          0x80fa20	                            cmp dl, 0x20	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000c4b	     0xf857f010000	                           jne 0x4000dd0	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000c51	            0x89c5	                            mov ebp, eax	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000c53	        0x4883c001	                              add rax, 1	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000c57	          0x4139c2	                           cmp r10d, eax	       313	ws.c	FUNCTION_8	FOR_1
0x4000c5a	     0xf8e70010000	                           jle 0x4000dd0	       313	ws.c	FUNCTION_8	FOR_1
0x4000c60	      0x410fb61407	             movzx edx, byte [r15 + rax]	       314	ws.c	FUNCTION_8	FOR_1
0x4000c65	          0x80fa09	                               cmp dl, 9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000c68	            0x75de	                           jne 0x4000c48	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000c6a	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c6d	          0x4189c4	                           mov r12d, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c70	           0xf45f7	                         cmovne esi, edi	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c73	            0xebde	                           jmp 0x4000c53	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c75	           0xf1f00	                         nop dword [rax]	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c78	            0x85c0	                           test eax, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000c7a	      0xbdffffffff	                     mov ebp, 0xffffffff	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c7f	      0xb800000000	                              mov eax, 0	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c84	      0xbe00000000	                              mov esi, 0	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c89	          0x4189ec	                           mov r12d, ebp	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c8c	            0x89cb	                            mov ebx, ecx	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c8e	            0x7578	                           jne 0x4000d08	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c90	          0x83e33f	                           and ebx, 0x3f	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c93	    0x41b801000000	                              mov r8d, 1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c99	            0xeb26	                           jmp 0x4000cc1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000c9b	       0xf1f440000	                   nop dword [rax + rax]	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000ca0	          0x80fa20	                            cmp dl, 0x20	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000ca3	     0xf8527010000	                           jne 0x4000dd0	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000ca9	          0x4429e7	                           sub edi, r12d	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000cac	            0x89c5	                            mov ebp, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000cae	            0x39df	                            cmp edi, ebx	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000cb0	        0x410f43f0	                         cmovae esi, r8d	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000cb4	        0x4883c001	                              add rax, 1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000cb8	          0x4139c2	                           cmp r10d, eax	       313	ws.c	FUNCTION_8	FOR_1
0x4000cbb	     0xf8e0f010000	                           jle 0x4000dd0	       313	ws.c	FUNCTION_8	FOR_1
0x4000cc1	      0x410fb61407	             movzx edx, byte [r15 + rax]	       314	ws.c	FUNCTION_8	FOR_1
0x4000cc6	            0x89c7	                            mov edi, eax	       314	ws.c	FUNCTION_8	FOR_1
0x4000cc8	          0x80fa09	                               cmp dl, 9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000ccb	            0x75d3	                           jne 0x4000ca0	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000ccd	          0x4189c4	                           mov r12d, eax	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000cd0	            0xebe2	                           jmp 0x4000cb4	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000cd2	    0x660f1f440000	                    nop word [rax + rax]	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000cd8	    0x41bcffffffff	                    mov r12d, 0xffffffff	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000cde	            0xeb16	                           jmp 0x4000cf6	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000ce0	          0x80fa20	                            cmp dl, 0x20	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000ce3	     0xf8517030000	                           jne 0x4001000	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000ce9	        0x4883c001	                              add rax, 1	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000ced	          0x4139c2	                           cmp r10d, eax	       313	ws.c	FUNCTION_8	FOR_1
0x4000cf0	     0xf8e0a030000	                           jle 0x4001000	       313	ws.c	FUNCTION_8	FOR_1
0x4000cf6	      0x410fb61407	             movzx edx, byte [r15 + rax]	       314	ws.c	FUNCTION_8	FOR_1
0x4000cfb	          0x80fa09	                               cmp dl, 9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000cfe	            0x75e0	                           jne 0x4000ce0	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000d00	          0x4189c4	                           mov r12d, eax	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000d03	            0xebe4	                           jmp 0x4000ce9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000d05	           0xf1f00	                         nop dword [rax]	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000d08	          0x83e33f	                           and ebx, 0x3f	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d0b	    0x41b801000000	                              mov r8d, 1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d11	            0xeb26	                           jmp 0x4000d39	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d13	       0xf1f440000	                   nop dword [rax + rax]	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d18	          0x80fa20	                            cmp dl, 0x20	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000d1b	     0xf85af000000	                           jne 0x4000dd0	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000d21	          0x4429e7	                           sub edi, r12d	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d24	            0x89c5	                            mov ebp, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d26	            0x39fb	                            cmp ebx, edi	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d28	        0x410f46f0	                         cmovbe esi, r8d	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d2c	        0x4883c001	                              add rax, 1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000d30	          0x4139c2	                           cmp r10d, eax	       313	ws.c	FUNCTION_8	FOR_1
0x4000d33	     0xf8e97000000	                           jle 0x4000dd0	       313	ws.c	FUNCTION_8	FOR_1
0x4000d39	      0x410fb61407	             movzx edx, byte [r15 + rax]	       314	ws.c	FUNCTION_8	FOR_1
0x4000d3e	            0x89c7	                            mov edi, eax	       314	ws.c	FUNCTION_8	FOR_1
0x4000d40	          0x80fa09	                               cmp dl, 9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000d43	            0x75d3	                           jne 0x4000d18	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000d45	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000d48	          0x4189c4	                           mov r12d, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000d4b	        0x410f45f0	                         cmovne esi, r8d	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000d4f	            0xebdb	                           jmp 0x4000d2c	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000d51	     0xf1f80000000	                         nop dword [rax]	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000d58	          0x4531ed	                          xor r13d, r13d	       286	ws.c	FUNCTION_8
0x4000d5b	      0xe9b3feffff	                           jmp 0x4000c13	       286	ws.c	FUNCTION_8
0x4000d60	    0xc74424040000	                  mov dword [rsp + 4], 0	       284	ws.c	FUNCTION_8
0x4000d68	          0x4531ed	                          xor r13d, r13d	       286	ws.c	FUNCTION_8
0x4000d6b	    0xc74424100000	               mov dword [rsp + 0x10], 0	       286	ws.c	FUNCTION_8
0x4000d73	          0x4489e8	                           mov eax, r13d	       286	ws.c	FUNCTION_8
0x4000d76	          0x83e001	                              and eax, 1	       286	ws.c	FUNCTION_8
0x4000d79	        0x88442414	               mov byte [rsp + 0x14], al	       286	ws.c	FUNCTION_8
0x4000d7d	           0xf1f00	                         nop dword [rax]	       286	ws.c	FUNCTION_8
0x4000d80	          0x4963d2	                        movsxd rdx, r10d	       381	ws.c	FUNCTION_8	CALL_11
0x4000d83	          0x4c89fe	                            mov rsi, r15	       381	ws.c	FUNCTION_8	CALL_11
0x4000d86	          0x4c89f7	                            mov rdi, r14	       381	ws.c	FUNCTION_8	CALL_11
0x4000d89	      0xe800000000	                          call 0x4000d8e	       381	ws.c	FUNCTION_8	CALL_11
0x4000d8e	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       382	ws.c	FUNCTION_8	IF_16
0x4000d92	            0x85d2	                           test edx, edx	       382	ws.c	FUNCTION_8	IF_16
0x4000d94	     0xf85de010000	                           jne 0x4000f78	       382	ws.c	FUNCTION_8	IF_16
0x4000d9a	        0x8b442404	                mov eax, dword [rsp + 4]	       384	ws.c	FUNCTION_8	IF_17
0x4000d9e	            0x85c0	                           test eax, eax	       384	ws.c	FUNCTION_8	IF_17
0x4000da0	     0xf8517020000	                           jne 0x4000fbd	       384	ws.c	FUNCTION_8	IF_17
0x4000da6	      0x488b442408	                mov rax, qword [rsp + 8]	       386	ws.c	FUNCTION_8	IF_18
0x4000dab	          0x4885c0	                           test rax, rax	       386	ws.c	FUNCTION_8	IF_18
0x4000dae	            0x740a	                            je 0x4000dba	       386	ws.c	FUNCTION_8	IF_18
0x4000db0	      0x807c241400	                cmp byte [rsp + 0x14], 0	       386	ws.c	FUNCTION_8	IF_18
0x4000db5	            0x7403	                            je 0x4000dba	       386	ws.c	FUNCTION_8	IF_18
0x4000db7	          0x830001	                      add dword [rax], 1	       387	ws.c	FUNCTION_8	IF_18
0x4000dba	        0x4883c428	                           add rsp, 0x28	       388	ws.c	FUNCTION_8
0x4000dbe	              0x5b	                                 pop rbx	       388	ws.c	FUNCTION_8
0x4000dbf	              0x5d	                                 pop rbp	       388	ws.c	FUNCTION_8
0x4000dc0	            0x415c	                                 pop r12	       388	ws.c	FUNCTION_8
0x4000dc2	            0x415d	                                 pop r13	       388	ws.c	FUNCTION_8
0x4000dc4	            0x415e	                                 pop r14	       388	ws.c	FUNCTION_8
0x4000dc6	            0x415f	                                 pop r15	       388	ws.c	FUNCTION_8
0x4000dc8	              0xc3	                                     ret	       388	ws.c	FUNCTION_8
0x4000dc9	     0xf1f80000000	                         nop dword [rax]	       388	ws.c	FUNCTION_8
0x4000dd0	            0x85f6	                           test esi, esi	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000dd2	     0xf8428020000	                            je 0x4001000	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000dd8	          0x4585c9	                           test r9d, r9d	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000ddb	     0xf847f010000	                            je 0x4000f60	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000de1	          0x4139ec	                           cmp r12d, ebp	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000de4	          0x8d7d01	                      lea edi, [rbp + 1]	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000de7	           0xf9cc0	                                 setl al	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000dea	            0x84c0	                             test al, al	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000dec	        0x897c2414	             mov dword [rsp + 0x14], edi	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000df0	     0xf846a010000	                            je 0x4000f60	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000df6	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000dfa	          0x83e13f	                           and ecx, 0x3f	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000dfd	          0x4d89fc	                            mov r12, r15	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000e00	            0x89cb	                            mov ebx, ecx	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000e02	      0x4489542418	            mov dword [rsp + 0x18], r10d	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000e07	          0x83e801	                              sub eax, 1	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000e0a	      0x498d6c0701	                lea rbp, [r15 + rax + 1]	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000e0f	            0x31c0	                            xor eax, eax	       324	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000e11	            0xeb49	                           jmp 0x4000e5c	       324	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000e13	       0xf1f440000	                   nop dword [rax + rax]	       324	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000e18	          0x498b06	                    mov rax, qword [r14]	       324	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000e1b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_10
0x4000e1e	     0xf85fc000000	                           jne 0x4000f20	       141	strbuf.h	FUNCTION_10
0x4000e24	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000e29	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000e2c	      0xe800000000	                          call 0x4000e31	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000e31	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000e35	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_12
0x4000e39	        0x488d7201	                      lea rsi, [rdx + 1]	       229	strbuf.h	FUNCTION_12
0x4000e3d	        0x49897608	                mov qword [r14 + 8], rsi	       229	strbuf.h	FUNCTION_12
0x4000e41	        0x44882c10	              mov byte [rax + rdx], r13b	       229	strbuf.h	FUNCTION_12
0x4000e45	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_12
0x4000e49	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_12
0x4000e4d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_12
0x4000e51	            0x31c0	                            xor eax, eax	       349	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000e53	        0x4983c401	                              add r12, 1	       349	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000e57	          0x4c39e5	                            cmp rbp, r12	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000e5a	            0x745c	                            je 0x4000eb8	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000e5c	      0x450fb62c24	                  movzx r13d, byte [r12]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000e61	        0x4180fd20	                          cmp r13b, 0x20	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000e65	            0x75b1	                           jne 0x4000e18	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000e67	          0x83c001	                              add eax, 1	       352	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4
0x4000e6a	            0x39c3	                            cmp ebx, eax	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000e6c	            0x75e5	                           jne 0x4000e53	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000e6e	          0x498b06	                    mov rax, qword [r14]	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000e71	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_10
0x4000e74	     0xf85ae020000	                           jne 0x4001128	       141	strbuf.h	FUNCTION_10
0x4000e7a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000e7f	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000e82	      0xe800000000	                          call 0x4000e87	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000e87	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000e8b	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_12
0x4000e8f	        0x488d7201	                      lea rsi, [rdx + 1]	       229	strbuf.h	FUNCTION_12
0x4000e93	        0x4983c401	                              add r12, 1	       229	strbuf.h	FUNCTION_12
0x4000e97	        0x49897608	                mov qword [r14 + 8], rsi	       229	strbuf.h	FUNCTION_12
0x4000e9b	        0xc6041009	                 mov byte [rax + rdx], 9	       229	strbuf.h	FUNCTION_12
0x4000e9f	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_12
0x4000ea3	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_12
0x4000ea7	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_12
0x4000eab	            0x31c0	                            xor eax, eax	       355	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13
0x4000ead	          0x4c39e5	                            cmp rbp, r12	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000eb0	            0x75aa	                           jne 0x4000e5c	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000eb2	    0x660f1f440000	                    nop word [rax + rax]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000eb8	            0x85c0	                           test eax, eax	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000eba	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ebf	          0x8d58ff	                      lea ebx, [rax - 1]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ec2	            0x747f	                            je 0x4000f43	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ec4	          0x4489d5	                           mov ebp, r10d	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ec7	            0xeb3c	                           jmp 0x4000f05	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ec9	     0xf1f80000000	                         nop dword [rax]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ed0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000ed5	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000ed8	      0xe800000000	                          call 0x4000edd	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000edd	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000ee1	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_12
0x4000ee5	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_12
0x4000ee9	          0x83eb01	                              sub ebx, 1	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000eec	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000eef	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_12
0x4000ef3	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_12
0x4000ef7	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_12
0x4000efb	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_12
0x4000eff	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_12
0x4000f03	            0x743b	                            je 0x4000f40	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000f05	          0x498b06	                    mov rax, qword [r14]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000f08	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_10
0x4000f0b	            0x74c3	                            je 0x4000ed0	       141	strbuf.h	FUNCTION_10
0x4000f0d	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_10
0x4000f11	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f15	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f18	            0x75c7	                           jne 0x4000ee1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f1a	            0xebb4	                           jmp 0x4000ed0	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f1c	         0xf1f4000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f20	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_10
0x4000f24	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f28	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f2b	     0xf8504ffffff	                           jne 0x4000e35	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f31	      0xe9eefeffff	                           jmp 0x4000e24	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f40	          0x4189ea	                           mov r10d, ebp	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4000f43	      0x48636c2414	         movsxd rbp, dword [rsp + 0x14] 	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000f48	      0xc644241401	                mov byte [rsp + 0x14], 1	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000f4d	          0x4129ea	                           sub r10d, ebp	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000f50	          0x4901ef	                            add r15, rbp	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000f53	      0xe928feffff	                           jmp 0x4000d80	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000f58	     0xf1f84000000	                   nop dword [rax + rax]	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000f60	        0x4183c401	                             add r12d, 1	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000f64	      0x4489642414	            mov dword [rsp + 0x14], r12d	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000f69	     0xf8587feffff	                           jne 0x4000df6	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000f6f	            0xebd2	                           jmp 0x4000f43	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000f71	     0xf1f80000000	                         nop dword [rax]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000f78	          0x498b06	                    mov rax, qword [r14]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000f7b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_10
0x4000f7e	     0xf85dc010000	                           jne 0x4001160	       141	strbuf.h	FUNCTION_10
0x4000f84	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000f89	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000f8c	      0xe800000000	                          call 0x4000f91	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000f91	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000f95	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_12
0x4000f99	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_12
0x4000f9d	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_12
0x4000fa1	        0xc604100d	               mov byte [rax + rdx], 0xd	       229	strbuf.h	FUNCTION_12
0x4000fa5	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_12
0x4000fa9	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_12
0x4000fad	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_12
0x4000fb1	        0x8b442404	                mov eax, dword [rsp + 4]	       384	ws.c	FUNCTION_8	IF_17
0x4000fb5	            0x85c0	                           test eax, eax	       384	ws.c	FUNCTION_8	IF_17
0x4000fb7	     0xf84e9fdffff	                            je 0x4000da6	       384	ws.c	FUNCTION_8	IF_17
0x4000fbd	          0x498b06	                    mov rax, qword [r14]	       384	ws.c	FUNCTION_8	IF_17
0x4000fc0	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_10
0x4000fc3	     0xf8577010000	                           jne 0x4001140	       141	strbuf.h	FUNCTION_10
0x4000fc9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000fce	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000fd1	      0xe800000000	                          call 0x4000fd6	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000fd6	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x4000fda	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_12
0x4000fde	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_12
0x4000fe2	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_12
0x4000fe6	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_12
0x4000fea	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_12
0x4000fee	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_12
0x4000ff2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_12
0x4000ff6	      0xe9abfdffff	                           jmp 0x4000da6	       230	strbuf.h	FUNCTION_12
0x4000ffb	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_12
0x4001000	            0x89c8	                            mov eax, ecx	       230	strbuf.h	FUNCTION_12
0x4001002	          0xc1e80b	                            shr eax, 0xb	       230	strbuf.h	FUNCTION_12
0x4001005	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       230	strbuf.h	FUNCTION_12
0x4001009	           0xf95c2	                                setne dl	       230	strbuf.h	FUNCTION_12
0x400100c	            0x20c2	                              and dl, al	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x400100e	        0x88542414	               mov byte [rsp + 0x14], dl	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001012	     0xf845bfdffff	                            je 0x4000d73	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001018	            0x89cb	                            mov ebx, ecx	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x400101a	        0x4183c401	                             add r12d, 1	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x400101e	          0x4531ed	                          xor r13d, r13d	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001021	        0x49636e08	            movsxd rbp, dword [r14 + 8] 	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001025	          0x83e33f	                           and ebx, 0x3f	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001028	      0x448954241c	            mov dword [rsp + 0x1c], r10d	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x400102d	            0xeb4f	                           jmp 0x400107e	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x400102f	              0x90	                                     nop	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001030	          0x498b16	                    mov rdx, qword [r14]	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001033	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_10
0x4001036	     0xf85b4000000	                           jne 0x40010f0	       141	strbuf.h	FUNCTION_10
0x400103c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x4001041	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_12	CALL_2
0x4001044	        0x88442418	               mov byte [rsp + 0x18], al	       228	strbuf.h	FUNCTION_12	CALL_2
0x4001048	      0xe800000000	                          call 0x400104d	       228	strbuf.h	FUNCTION_12	CALL_2
0x400104d	       0xfb6442418	           movzx eax, byte [rsp + 0x18] 	       228	strbuf.h	FUNCTION_12	CALL_2
0x4001052	        0x498b7608	                mov rsi, qword [r14 + 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x4001056	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_12
0x400105a	        0x488d7e01	                      lea rdi, [rsi + 1]	       229	strbuf.h	FUNCTION_12
0x400105e	        0x49897e08	                mov qword [r14 + 8], rdi	       229	strbuf.h	FUNCTION_12
0x4001062	          0x880432	                mov byte [rdx + rsi], al	       229	strbuf.h	FUNCTION_12
0x4001065	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_12
0x4001069	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_12
0x400106d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_12
0x4001071	        0x4983c501	                              add r13, 1	       230	strbuf.h	FUNCTION_12
0x4001075	          0x4539ec	                          cmp r12d, r13d	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4001078	     0xf8e92000000	                           jle 0x4001110	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x400107e	      0x430fb6042f	             movzx eax, byte [r15 + r13]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4001083	            0x3c09	                               cmp al, 9	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4001085	            0x75a9	                           jne 0x4001030	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4001087	            0xeb55	                           jmp 0x40010de	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4001089	     0xf1f80000000	                         nop dword [rax]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4001090	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_10
0x4001094	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001098	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x400109b	            0x7514	                           jne 0x40010b1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x400109d	           0xf1f00	                         nop dword [rax]	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x40010a0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x40010a5	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_12	CALL_2
0x40010a8	      0xe800000000	                          call 0x40010ad	       228	strbuf.h	FUNCTION_12	CALL_2
0x40010ad	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x40010b1	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_12
0x40010b5	        0x488d7201	                      lea rsi, [rdx + 1]	       229	strbuf.h	FUNCTION_12
0x40010b9	        0x49897608	                mov qword [r14 + 8], rsi	       229	strbuf.h	FUNCTION_12
0x40010bd	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_12
0x40010c1	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_12
0x40010c5	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_12
0x40010c9	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_12
0x40010cd	        0x498b4608	                mov rax, qword [r14 + 8]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x40010d1	            0x31d2	                            xor edx, edx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x40010d3	          0x4829e8	                            sub rax, rbp	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x40010d6	          0x48f7f3	                                 div rbx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x40010d9	          0x4885d2	                           test rdx, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x40010dc	            0x7493	                            je 0x4001071	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x40010de	          0x498b06	                    mov rax, qword [r14]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x40010e1	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_10
0x40010e4	            0x74ba	                            je 0x40010a0	       141	strbuf.h	FUNCTION_10
0x40010e6	            0xeba8	                           jmp 0x4001090	       141	strbuf.h	FUNCTION_10
0x40010e8	     0xf1f84000000	                   nop dword [rax + rax]	       141	strbuf.h	FUNCTION_10
0x40010f0	        0x498b7608	                mov rsi, qword [r14 + 8]	       141	strbuf.h	FUNCTION_10
0x40010f4	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x40010f8	          0x4839d6	                            cmp rsi, rdx	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x40010fb	     0xf8555ffffff	                           jne 0x4001056	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001101	      0xe936ffffff	                           jmp 0x400103c	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001110	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001115	          0x4529e2	                          sub r10d, r12d	       376	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001118	          0x4d63e4	                        movsxd r12, r12d	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x400111b	          0x4d01e7	                            add r15, r12	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x400111e	      0xe95dfcffff	                           jmp 0x4000d80	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001123	       0xf1f440000	                   nop dword [rax + rax]	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4001128	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_10
0x400112c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001130	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001133	     0xf8552fdffff	                           jne 0x4000e8b	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001139	      0xe93cfdffff	                           jmp 0x4000e7a	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x400113e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001140	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_10
0x4001144	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001148	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x400114b	     0xf8589feffff	                           jne 0x4000fda	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001151	      0xe973feffff	                           jmp 0x4000fc9	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001156	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001160	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_10
0x4001164	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001168	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x400116b	     0xf8524feffff	                           jne 0x4000f95	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001171	      0xe90efeffff	                           jmp 0x4000f84	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001176	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4001180	          0x83ea01	                              sub edx, 1	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4001183	            0x7427	                            je 0x40011ac	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4001185	          0x4863c2	                         movsxd rax, edx	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4001188	       0xfb64406ff	         movzx eax, byte [rsi + rax - 1]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x400118d	            0x3c0d	                             cmp al, 0xd	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x400118f	            0x742b	                            je 0x40011bc	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4001191	          0x4189d2	                           mov r10d, edx	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4001194	    0xc74424040100	                  mov dword [rsp + 4], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x400119c	      0xe910faffff	                           jmp 0x4000bb1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x40011a1	    0x41bd01000000	                             mov r13d, 1	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x40011a7	      0xe967faffff	                           jmp 0x4000c13	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x40011ac	          0x4531d2	                          xor r10d, r10d	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x40011af	    0xc74424040100	                  mov dword [rsp + 4], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x40011b7	      0xe9acfbffff	                           jmp 0x4000d68	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x40011bc	            0x89c8	                            mov eax, ecx	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40011be	        0x4183ea02	                             sub r10d, 2	       300	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40011c2	          0xc1e809	                              shr eax, 9	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40011c5	          0x83e001	                              and eax, 1	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40011c8	          0x4585d2	                         test r10d, r10d	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40011cb	        0x89442410	             mov dword [rsp + 0x10], eax	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x40011cf	            0x7e15	                           jle 0x40011e6	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40011d1	          0x4963c2	                        movsxd rax, r10d	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40011d4	    0xc74424040100	                  mov dword [rsp + 4], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x40011dc	       0xfb64406ff	         movzx eax, byte [rsi + rax - 1]	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x40011e1	      0xe9d3f9ffff	                           jmp 0x4000bb9	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x40011e6	          0x4531ed	                          xor r13d, r13d	       286	ws.c	FUNCTION_8
0x40011e9	    0xc74424040100	                  mov dword [rsp + 4], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x40011f1	      0xe97dfbffff	                           jmp 0x4000d73	       296	ws.c	FUNCTION_8	IF_1	IF_2
ws_check	CALL,1:DO,0:WHILE,0:functions,0:FOR,0:ELSE,0:IF,0:SWITCH,0	126
0x4000970	            0x85f6	                           test esi, esi	       155	ws.c	FUNCTION_4	IF_1
0x4000972	              0x53	                                push rbx	       256	ws.c	FUNCTION_6
0x4000973	     0xf8e87010000	                           jle 0x4000b00	       155	ws.c	FUNCTION_4	IF_1
0x4000979	          0x4863c6	                         movsxd rax, esi	       155	ws.c	FUNCTION_4	IF_1
0x400097c	       0xfb64407ff	         movzx eax, byte [rdi + rax - 1]	       155	ws.c	FUNCTION_4	IF_1
0x4000981	            0x3c0a	                             cmp al, 0xa	       155	ws.c	FUNCTION_4	IF_1
0x4000983	     0xf84a7000000	                            je 0x4000a30	       155	ws.c	FUNCTION_4	IF_1
0x4000989	          0xf6c602	                              test dh, 2	       159	ws.c	FUNCTION_4	IF_2
0x400098c	     0xf85b2000000	                           jne 0x4000a44	       159	ws.c	FUNCTION_4	IF_2
0x4000992	          0xf6c240	                           test dl, 0x40	       166	ws.c	FUNCTION_4	IF_3
0x4000995	     0xf8575010000	                           jne 0x4000b10	       166	ws.c	FUNCTION_4	IF_3
0x400099b	            0x31c0	                            xor eax, eax	       147	ws.c	FUNCTION_4
0x400099d	            0x89d3	                            mov ebx, edx	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x400099f	          0x4531c0	                            xor r8d, r8d	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40009a2	          0x4531db	                          xor r11d, r11d	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40009a5	          0xc1eb07	                              shr ebx, 7	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009a8	    0x41b901000000	                              mov r9d, 1	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40009ae	          0x83e301	                              and ebx, 1	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009b1	          0xf6c608	                              test dh, 8	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009b4	     0xf851b010000	                           jne 0x4000ad5	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009ba	            0xeb32	                           jmp 0x40009ee	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009bc	         0xf1f4000	                         nop dword [rax]	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009c0	        0x4180fa09	                             cmp r10b, 9	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x40009c4	            0x754a	                           jne 0x4000a10	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x40009c6	            0x84db	                             test bl, bl	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009c8	            0x7412	                            je 0x40009dc	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009ca	          0x4539c3	                           cmp r11d, r8d	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009cd	            0x89c1	                            mov ecx, eax	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009cf	        0x410f9cc2	                               setl r10b	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009d3	          0x80c980	                             or cl, 0x80	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009d6	          0x4584d2	                         test r10b, r10b	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009d9	           0xf45c1	                         cmovne eax, ecx	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x40009dc	          0x4489c9	                            mov ecx, r9d	       205	ws.c	FUNCTION_4	FOR_2
0x40009df	          0x4589cb	                           mov r11d, r9d	       205	ws.c	FUNCTION_4	FOR_2
0x40009e2	        0x4983c001	                               add r8, 1	       205	ws.c	FUNCTION_4	FOR_2
0x40009e6	        0x4183c101	                              add r9d, 1	       205	ws.c	FUNCTION_4	FOR_2
0x40009ea	            0x39ce	                            cmp esi, ecx	       181	ws.c	FUNCTION_4	FOR_2
0x40009ec	            0x7e22	                           jle 0x4000a10	       181	ws.c	FUNCTION_4	FOR_2
0x40009ee	      0x460fb61407	             movzx r10d, byte [rdi + r8]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40009f3	          0x4489c1	                            mov ecx, r8d	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40009f6	        0x4180fa20	                          cmp r10b, 0x20	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40009fa	            0x75c4	                           jne 0x40009c0	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40009fc	          0x4489c9	                            mov ecx, r9d	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x40009ff	        0x4983c001	                               add r8, 1	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000a03	        0x4183c101	                              add r9d, 1	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000a07	            0x39ce	                            cmp esi, ecx	       181	ws.c	FUNCTION_4	FOR_2
0x4000a09	            0x7fe3	                            jg 0x40009ee	       181	ws.c	FUNCTION_4	FOR_2
0x4000a0b	       0xf1f440000	                   nop dword [rax + rax]	       181	ws.c	FUNCTION_4	FOR_2
0x4000a10	          0xf6c601	                              test dh, 1	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000a13	            0x7413	                            je 0x4000a28	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000a15	            0x89c6	                            mov esi, eax	       210	ws.c	FUNCTION_4	IF_13
0x4000a17	          0x4429d9	                           sub ecx, r11d	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000a1a	          0x83e23f	                           and edx, 0x3f	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000a1d	    0x81ce00010000	                           or esi, 0x100	       210	ws.c	FUNCTION_4	IF_13
0x4000a23	            0x39d1	                            cmp ecx, edx	       210	ws.c	FUNCTION_4	IF_13
0x4000a25	           0xf43c6	                         cmovae eax, esi	       210	ws.c	FUNCTION_4	IF_13
0x4000a28	              0x5b	                                 pop rbx	       258	ws.c	FUNCTION_6
0x4000a29	              0xc3	                                     ret	       258	ws.c	FUNCTION_6
0x4000a2a	    0x660f1f440000	                    nop word [rax + rax]	       258	ws.c	FUNCTION_6
0x4000a30	          0x83ee01	                              sub esi, 1	       157	ws.c	FUNCTION_4	IF_1
0x4000a33	          0xf6c602	                              test dh, 2	       159	ws.c	FUNCTION_4	IF_2
0x4000a36	            0x7416	                            je 0x4000a4e	       159	ws.c	FUNCTION_4	IF_2
0x4000a38	            0x85f6	                           test esi, esi	       159	ws.c	FUNCTION_4	IF_2
0x4000a3a	            0x7e12	                           jle 0x4000a4e	       159	ws.c	FUNCTION_4	IF_2
0x4000a3c	          0x4863c6	                         movsxd rax, esi	       159	ws.c	FUNCTION_4	IF_2
0x4000a3f	       0xfb64407ff	         movzx eax, byte [rdi + rax - 1]	       159	ws.c	FUNCTION_4	IF_2
0x4000a44	            0x3c0d	                             cmp al, 0xd	       162	ws.c	FUNCTION_4	IF_2
0x4000a46	           0xf94c0	                                 sete al	       162	ws.c	FUNCTION_4	IF_2
0x4000a49	           0xfb6c0	                           movzx eax, al	       162	ws.c	FUNCTION_4	IF_2
0x4000a4c	            0x29c6	                            sub esi, eax	       162	ws.c	FUNCTION_4	IF_2
0x4000a4e	            0x31c0	                            xor eax, eax	       147	ws.c	FUNCTION_4
0x4000a50	          0xf6c240	                           test dl, 0x40	       166	ws.c	FUNCTION_4	IF_3
0x4000a53	            0x744d	                            je 0x4000aa2	       166	ws.c	FUNCTION_4	IF_3
0x4000a55	          0x8d4eff	                      lea ecx, [rsi - 1]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000a58	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000a5b	            0x7445	                            je 0x4000aa2	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000a5d	          0x4863c1	                         movsxd rax, ecx	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a60	          0x4801f8	                            add rax, rdi	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a63	        0x440fb600	                   movzx r8d, byte [rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a67	    0x41f680000000	                       test byte [r8], 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a6f	            0x7522	                           jne 0x4000a93	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a71	      0xe996000000	                           jmp 0x4000b0c	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a80	      0x440fb640ff	               movzx r8d, byte [rax - 1]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a85	        0x4883e801	                              sub rax, 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a89	    0x41f680000000	                       test byte [r8], 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a91	            0x740a	                            je 0x4000a9d	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a93	            0x89ce	                            mov esi, ecx	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000a95	          0x8d49ff	                      lea ecx, [rcx - 1]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000a98	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000a9b	            0x75e3	                           jne 0x4000a80	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000a9d	      0xb840000000	                           mov eax, 0x40	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000aa2	            0x85f6	                           test esi, esi	       181	ws.c	FUNCTION_4	FOR_2
0x4000aa4	     0xf8ff3feffff	                            jg 0x400099d	       181	ws.c	FUNCTION_4	FOR_2
0x4000aaa	          0x4531db	                          xor r11d, r11d	       148	ws.c	FUNCTION_4
0x4000aad	            0x31c9	                            xor ecx, ecx	       181	ws.c	FUNCTION_4	FOR_2
0x4000aaf	      0xe95cffffff	                           jmp 0x4000a10	       181	ws.c	FUNCTION_4	FOR_2
0x4000ab4	         0xf1f4000	                         nop dword [rax]	       181	ws.c	FUNCTION_4	FOR_2
0x4000ab8	          0x4539d8	                           cmp r8d, r11d	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000abb	            0x7e34	                           jle 0x4000af1	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000abd	             0xc80	                             or al, 0x80	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000abf	          0x4589cb	                           mov r11d, r9d	       205	ws.c	FUNCTION_4	FOR_2
0x4000ac2	          0x4489c9	                            mov ecx, r9d	       205	ws.c	FUNCTION_4	FOR_2
0x4000ac5	        0x4983c001	                               add r8, 1	       205	ws.c	FUNCTION_4	FOR_2
0x4000ac9	        0x4183c101	                              add r9d, 1	       205	ws.c	FUNCTION_4	FOR_2
0x4000acd	            0x39f1	                            cmp ecx, esi	       181	ws.c	FUNCTION_4	FOR_2
0x4000acf	     0xf8d3bffffff	                           jge 0x4000a10	       181	ws.c	FUNCTION_4	FOR_2
0x4000ad5	      0x460fb61407	             movzx r10d, byte [rdi + r8]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000ada	          0x4489c1	                            mov ecx, r8d	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000add	        0x4180fa20	                          cmp r10b, 0x20	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000ae1	            0x74df	                            je 0x4000ac2	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000ae3	        0x4180fa09	                             cmp r10b, 9	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x4000ae7	     0xf8523ffffff	                           jne 0x4000a10	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x4000aed	            0x84db	                             test bl, bl	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000aef	            0x75c7	                           jne 0x4000ab8	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000af1	          0x80cc08	                                or ah, 8	       195	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000af4	            0xebc9	                           jmp 0x4000abf	       195	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000af6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       195	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000b00	            0x31c0	                            xor eax, eax	       147	ws.c	FUNCTION_4
0x4000b02	          0x4531db	                          xor r11d, r11d	       148	ws.c	FUNCTION_4
0x4000b05	            0x31c9	                            xor ecx, ecx	       181	ws.c	FUNCTION_4	FOR_2
0x4000b07	      0xe904ffffff	                           jmp 0x4000a10	       181	ws.c	FUNCTION_4	FOR_2
0x4000b0c	            0x31c0	                            xor eax, eax	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000b0e	            0xeb92	                           jmp 0x4000aa2	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000b10	          0x8d4eff	                      lea ecx, [rsi - 1]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000b13	      0xe945ffffff	                           jmp 0x4000a5d	       167	ws.c	FUNCTION_4	IF_3	FOR_1
whitespace_error_string	CALL,11:DO,0:WHILE,0:functions,0:FOR,0:ELSE,1:IF,10:SWITCH,0	96
0x4000350	              0x55	                                push rbp	       111	ws.c	FUNCTION_3
0x4000351	              0x53	                                push rbx	       111	ws.c	FUNCTION_3
0x4000352	            0x89fb	                            mov ebx, edi	       111	ws.c	FUNCTION_3
0x4000354	        0x4883ec28	                           sub rsp, 0x28	       111	ws.c	FUNCTION_3
0x4000358	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	ws.c	FUNCTION_3
0x4000361	      0x4889442418	             mov qword [rsp + 0x18], rax	       111	ws.c	FUNCTION_3
0x4000366	            0x31c0	                            xor eax, eax	       111	ws.c	FUNCTION_3
0x4000368	            0x89f8	                            mov eax, edi	       113	ws.c	FUNCTION_3	IF_1
0x400036a	    0x48c704240000	                      mov qword [rsp], 0	       112	ws.c	FUNCTION_3
0x4000372	    0x48c744240800	                  mov qword [rsp + 8], 0	       112	ws.c	FUNCTION_3
0x400037b	      0x2540040000	                          and eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x4000380	    0x48c744241000	               mov qword [rsp + 0x10], 0	       112	ws.c	FUNCTION_3
0x4000389	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_13	CALL_2
0x400038c	      0x3d40040000	                          cmp eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x4000391	     0xf8459010000	                            je 0x40004f0	       113	ws.c	FUNCTION_3	IF_1
0x4000397	        0x40f6c740	                          test dil, 0x40	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x400039b	     0xf859f000000	                           jne 0x4000440	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x40003a1	          0xf6c704	                              test bh, 4	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40003a4	     0xf85cb000000	                           jne 0x4000475	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40003aa	          0xf6c380	                           test bl, 0x80	       124	ws.c	FUNCTION_3	IF_5
0x40003ad	            0x741e	                            je 0x40003cd	       124	ws.c	FUNCTION_3	IF_5
0x40003af	    0x48837c240800	                  cmp qword [rsp + 8], 0	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x40003b5	     0xf85f5000000	                           jne 0x40004b0	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x40003bb	      0xba1a000000	                           mov edx, 0x1a	       279	strbuf.h	FUNCTION_13	CALL_2
0x40003c0	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x40003c5	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_13	CALL_2
0x40003c8	      0xe800000000	                          call 0x40003cd	       279	strbuf.h	FUNCTION_13	CALL_2
0x40003cd	          0xf6c701	                              test bh, 1	       129	ws.c	FUNCTION_3	IF_7
0x40003d0	            0x741e	                            je 0x40003f0	       129	ws.c	FUNCTION_3	IF_7
0x40003d2	    0x48837c240800	                  cmp qword [rsp + 8], 0	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x40003d8	     0xf85f2000000	                           jne 0x40004d0	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x40003de	      0xba12000000	                           mov edx, 0x12	       279	strbuf.h	FUNCTION_13	CALL_2
0x40003e3	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x40003e8	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_13	CALL_2
0x40003eb	      0xe800000000	                          call 0x40003f0	       279	strbuf.h	FUNCTION_13	CALL_2
0x40003f0	          0x80e708	                               and bh, 8	       134	ws.c	FUNCTION_3	IF_9
0x40003f3	            0x741e	                            je 0x4000413	       134	ws.c	FUNCTION_3	IF_9
0x40003f5	    0x48837c240800	                  cmp qword [rsp + 8], 0	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x40003fb	     0xf858f000000	                           jne 0x4000490	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x4000401	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000406	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x400040b	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_13	CALL_2
0x400040e	      0xe800000000	                          call 0x4000413	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000413	            0x31f6	                            xor esi, esi	       139	ws.c	FUNCTION_3	CALL_11
0x4000415	          0x4889ef	                            mov rdi, rbp	       139	ws.c	FUNCTION_3	CALL_11
0x4000418	      0xe800000000	                          call 0x400041d	       139	ws.c	FUNCTION_3	CALL_11
0x400041d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       140	ws.c	FUNCTION_3
0x4000422	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       140	ws.c	FUNCTION_3
0x400042b	     0xf85d6000000	                           jne 0x4000507	       140	ws.c	FUNCTION_3
0x4000431	        0x4883c428	                           add rsp, 0x28	       140	ws.c	FUNCTION_3
0x4000435	              0x5b	                                 pop rbx	       140	ws.c	FUNCTION_3
0x4000436	              0x5d	                                 pop rbp	       140	ws.c	FUNCTION_3
0x4000437	              0xc3	                                     ret	       140	ws.c	FUNCTION_3
0x4000438	     0xf1f84000000	                   nop dword [rax + rax]	       140	ws.c	FUNCTION_3
0x4000440	      0xba13000000	                           mov edx, 0x13	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000445	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x400044a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_13	CALL_2
0x400044d	      0xe800000000	                          call 0x4000452	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000452	          0xf6c704	                              test bh, 4	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x4000455	     0xf844fffffff	                            je 0x40003aa	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x400045b	    0x48837c240800	                  cmp qword [rsp + 8], 0	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000461	            0x7412	                            je 0x4000475	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000463	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000468	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x400046d	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000470	      0xe800000000	                          call 0x4000475	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000475	      0xba15000000	                           mov edx, 0x15	       279	strbuf.h	FUNCTION_13	CALL_2
0x400047a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x400047f	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000482	      0xe800000000	                          call 0x4000487	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000487	      0xe91effffff	                           jmp 0x40003aa	       279	strbuf.h	FUNCTION_13	CALL_2
0x400048c	         0xf1f4000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000490	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000495	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x400049a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_13	CALL_2
0x400049d	      0xe800000000	                          call 0x40004a2	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004a2	      0xe95affffff	                           jmp 0x4000401	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004a7	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004b0	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004b5	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004ba	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004bd	      0xe800000000	                          call 0x40004c2	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004c2	      0xe9f4feffff	                           jmp 0x40003bb	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004c7	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004d0	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004d5	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004da	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004dd	      0xe800000000	                          call 0x40004e2	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004e2	      0xe9f7feffff	                           jmp 0x40003de	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004e7	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004f0	      0xba13000000	                           mov edx, 0x13	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004f5	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004fa	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_13	CALL_2
0x40004fd	      0xe800000000	                          call 0x4000502	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000502	      0xe9a3feffff	                           jmp 0x40003aa	       279	strbuf.h	FUNCTION_13	CALL_2
0x4000507	      0xe800000000	                          call 0x400050c	       140	ws.c	FUNCTION_3
whitespace_rule	CALL,9:DO,0:WHILE,0:functions,0:FOR,1:ELSE,4:IF,6:SWITCH,0	37
0x40002c0	    0x488b35000000	            mov rsi, qword [0x040002c7] 	        78	ws.c	FUNCTION_2	IF_1
0x40002c7	              0x53	                                push rbx	        75	ws.c	FUNCTION_2
0x40002c8	          0x4889fb	                            mov rbx, rdi	        75	ws.c	FUNCTION_2
0x40002cb	          0x4885f6	                           test rsi, rsi	        78	ws.c	FUNCTION_2	IF_1
0x40002ce	            0x7460	                            je 0x4000330	        78	ws.c	FUNCTION_2	IF_1
0x40002d0	          0x4889df	                            mov rdi, rbx	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40002d3	      0xe800000000	                          call 0x40002d8	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40002d8	            0x85c0	                           test eax, eax	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40002da	            0x753c	                           jne 0x4000318	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x40002dc	    0x488b05000000	            mov rax, qword [0x040002e3] 	        84	ws.c	FUNCTION_2	IF_2
0x40002e3	        0x488b4008	                mov rax, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x40002e7	        0x488b7808	                mov rdi, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x40002eb	    0x4881ff000000	                              cmp rdi, 0	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40002f2	            0x742c	                            je 0x4000320	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x40002f4	    0x8b0500000000	            mov eax, dword [0x040002fa] 	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x40002fa	          0x83e03f	                           and eax, 0x3f	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x40002fd	    0x4881ff000000	                              cmp rdi, 0	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x4000304	            0x7418	                            je 0x400031e	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x4000306	          0x4885ff	                           test rdi, rdi	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x4000309	            0x740d	                            je 0x4000318	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x400030b	              0x5b	                                 pop rbx	       107	ws.c	FUNCTION_2
0x400030c	      0xe92ffdffff	           jmp sym.parse_whitespace_rule	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x4000311	     0xf1f80000000	                         nop dword [rax]	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x4000318	    0x8b0500000000	            mov eax, dword [0x0400031e] 	        99	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6
0x400031e	              0x5b	                                 pop rbx	       107	ws.c	FUNCTION_2
0x400031f	              0xc3	                                     ret	       107	ws.c	FUNCTION_2
0x4000320	    0x8b0500000000	            mov eax, dword [0x04000326] 	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x4000326	              0x5b	                                 pop rbx	       107	ws.c	FUNCTION_2
0x4000327	          0x83e03f	                           and eax, 0x3f	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x400032a	       0xdc0050000	                           or eax, 0x5c0	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x400032f	              0xc3	                                     ret	       107	ws.c	FUNCTION_2
0x4000330	      0xbf00000000	                              mov edi, 0	        79	ws.c	FUNCTION_2	CALL_1
0x4000335	            0x31c0	                            xor eax, eax	        79	ws.c	FUNCTION_2	CALL_1
0x4000337	      0xe800000000	                          call 0x400033c	        79	ws.c	FUNCTION_2	CALL_1
0x400033c	          0x4889c6	                            mov rsi, rax	        79	ws.c	FUNCTION_2	CALL_1
0x400033f	    0x488905000000	            mov qword [0x04000346], rax 	        79	ws.c	FUNCTION_2	CALL_1
0x4000346	            0xeb88	                           jmp 0x40002d0	        79	ws.c	FUNCTION_2	CALL_1
ws_check_emit	CALL,1:DO,0:WHILE,0:functions,0:FOR,0:ELSE,0:IF,0:SWITCH,0	281
0x4000510	            0x4157	                                push r15	       251	ws.c	FUNCTION_5
0x4000512	            0x4156	                                push r14	       251	ws.c	FUNCTION_5
0x4000514	          0x4189f7	                           mov r15d, esi	       251	ws.c	FUNCTION_5
0x4000517	            0x4155	                                push r13	       251	ws.c	FUNCTION_5
0x4000519	            0x4154	                                push r12	       251	ws.c	FUNCTION_5
0x400051b	          0x4989fc	                            mov r12, rdi	       251	ws.c	FUNCTION_5
0x400051e	              0x55	                                push rbp	       251	ws.c	FUNCTION_5
0x400051f	              0x53	                                push rbx	       251	ws.c	FUNCTION_5
0x4000520	          0x4889cb	                            mov rbx, rcx	       251	ws.c	FUNCTION_5
0x4000523	        0x4883ec48	                           sub rsp, 0x48	       251	ws.c	FUNCTION_5
0x4000527	            0x85f6	                           test esi, esi	       155	ws.c	FUNCTION_4	IF_1
0x4000529	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       251	ws.c	FUNCTION_5
0x4000531	        0x89542424	             mov dword [rsp + 0x24], edx	       251	ws.c	FUNCTION_5
0x4000535	      0x4c89442438	              mov qword [rsp + 0x38], r8	       251	ws.c	FUNCTION_5
0x400053a	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       251	ws.c	FUNCTION_5
0x400053f	      0x4889442418	             mov qword [rsp + 0x18], rax	       251	ws.c	FUNCTION_5
0x4000544	     0xf8e6e030000	                           jle 0x40008b8	       155	ws.c	FUNCTION_4	IF_1
0x400054a	          0x4863c6	                         movsxd rax, esi	       155	ws.c	FUNCTION_4	IF_1
0x400054d	       0xfb64407ff	         movzx eax, byte [rdi + rax - 1]	       155	ws.c	FUNCTION_4	IF_1
0x4000552	            0x3c0a	                             cmp al, 0xa	       155	ws.c	FUNCTION_4	IF_1
0x4000554	     0xf8496030000	                            je 0x40008f0	       155	ws.c	FUNCTION_4	IF_1
0x400055a	          0xf6c602	                              test dh, 2	       159	ws.c	FUNCTION_4	IF_2
0x400055d	            0x89d1	                            mov ecx, edx	       159	ws.c	FUNCTION_4	IF_2
0x400055f	     0xf857b010000	                           jne 0x40006e0	       159	ws.c	FUNCTION_4	IF_2
0x4000565	          0x83e140	                           and ecx, 0x40	       166	ws.c	FUNCTION_4	IF_3
0x4000568	     0xf8551030000	                           jne 0x40008bf	       166	ws.c	FUNCTION_4	IF_3
0x400056e	        0x8974242c	             mov dword [rsp + 0x2c], esi	       166	ws.c	FUNCTION_4	IF_3
0x4000572	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x400057a	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x4000582	        0x8b6c2424	            mov ebp, dword [rsp + 0x24] 	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000586	    0x41be01000000	                             mov r14d, 1	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400058c	            0x31d2	                            xor edx, edx	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400058e	          0x4589f5	                          mov r13d, r14d	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000591	      0x4c89642408	                mov qword [rsp + 8], r12	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000596	          0x4189d6	                           mov r14d, edx	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000599	            0x89e8	                            mov eax, ebp	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400059b	          0xc1ed07	                              shr ebp, 7	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x400059e	      0x2500080000	                          and eax, 0x800	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40005a3	          0x83e501	                              and ebp, 1	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40005a6	        0x89442420	             mov dword [rsp + 0x20], eax	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40005aa	      0xe98c000000	                           jmp 0x400063b	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40005af	              0x90	                                     nop	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40005b0	            0x3c09	                               cmp al, 9	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x40005b2	     0xf85a8000000	                           jne 0x4000660	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x40005b8	          0x4084ed	                           test bpl, bpl	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40005bb	     0xf849f010000	                            je 0x4000760	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40005c1	          0x4539c6	                           cmp r14d, r8d	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40005c4	     0xf8d96010000	                           jge 0x4000760	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40005ca	          0x4885db	                           test rbx, rbx	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40005cd	      0x4489442428	             mov dword [rsp + 0x28], r8d	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40005d2	            0x7454	                            je 0x4000628	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40005d4	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40005d9	          0x4889de	                            mov rsi, rbx	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40005dc	      0xe800000000	                          call 0x40005e1	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x40005e1	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40005e6	          0x4963fe	                        movsxd rdi, r14d	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40005e9	      0x48037c2408	                add rdi, qword [rsp + 8]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40005ee	          0x4889d9	                            mov rcx, rbx	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40005f1	      0xba01000000	                              mov edx, 1	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40005f6	          0x4529f0	                           sub r8d, r14d	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40005f9	          0x4963f0	                         movsxd rsi, r8d	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x40005fc	      0xe800000000	                          call 0x4000601	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x4000601	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x4000606	          0x4889de	                            mov rsi, rbx	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x4000609	      0xe800000000	                          call 0x400060e	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x400060e	          0x4889d9	                            mov rcx, rbx	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000611	      0xba01000000	                              mov edx, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000616	      0xbe01000000	                              mov esi, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x400061b	          0x4c89e7	                            mov rdi, r12	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x400061e	      0xe800000000	                          call 0x4000623	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000623	       0xf1f440000	                   nop dword [rax + rax]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000628	          0x4589e8	                           mov r8d, r13d	       205	ws.c	FUNCTION_4	FOR_2
0x400062b	          0x4589ee	                          mov r14d, r13d	       205	ws.c	FUNCTION_4	FOR_2
0x400062e	        0x4983c401	                              add r12, 1	       205	ws.c	FUNCTION_4	FOR_2
0x4000632	        0x4183c501	                             add r13d, 1	       205	ws.c	FUNCTION_4	FOR_2
0x4000636	          0x4539f8	                           cmp r8d, r15d	       181	ws.c	FUNCTION_4	FOR_2
0x4000639	            0x7d25	                           jge 0x4000660	       181	ws.c	FUNCTION_4	FOR_2
0x400063b	      0x410fb60424	                   movzx eax, byte [r12]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000640	        0x458d45ff	                      lea r8d, [r13 - 1]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000644	            0x3c20	                            cmp al, 0x20	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000646	     0xf8564ffffff	                           jne 0x40005b0	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x400064c	          0x4589e8	                           mov r8d, r13d	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x400064f	        0x4983c401	                              add r12, 1	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000653	        0x4183c501	                             add r13d, 1	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000657	          0x4539f8	                           cmp r8d, r15d	       181	ws.c	FUNCTION_4	FOR_2
0x400065a	            0x7cdf	                            jl 0x400063b	       181	ws.c	FUNCTION_4	FOR_2
0x400065c	         0xf1f4000	                         nop dword [rax]	       181	ws.c	FUNCTION_4	FOR_2
0x4000660	      0x4c8b642408	                mov r12, qword [rsp + 8]	       181	ws.c	FUNCTION_4	FOR_2
0x4000665	          0x4489f2	                           mov edx, r14d	       181	ws.c	FUNCTION_4	FOR_2
0x4000668	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x400066c	          0xf6c401	                              test ah, 1	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x400066f	     0xf848b010000	                            je 0x4000800	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000675	          0x4489c5	                            mov ebp, r8d	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000678	          0x4189c6	                           mov r14d, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x400067b	      0x4489442408	                mov dword [rsp + 8], r8d	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000680	            0x29d5	                            sub ebp, edx	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000682	        0x4183e63f	                          and r14d, 0x3f	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000686	          0x4439f5	                           cmp ebp, r14d	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x4000689	     0xf8271010000	                            jb 0x4000800	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x400068f	          0x4885db	                           test rbx, rbx	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x4000692	        0x89542420	             mov dword [rsp + 0x20], edx	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x4000696	     0xf8454010000	                            je 0x40007f0	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x400069c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x40006a1	          0x4889de	                            mov rsi, rbx	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x40006a4	      0xe800000000	                          call 0x40006a9	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x40006a9	      0x4863542420	         movsxd rdx, dword [rsp + 0x20] 	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x40006ae	          0x4863f5	                         movsxd rsi, ebp	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x40006b1	          0x4889d9	                            mov rcx, rbx	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x40006b4	        0x498d3c14	                    lea rdi, [r12 + rdx]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x40006b8	      0xba01000000	                              mov edx, 1	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x40006bd	      0xe800000000	                          call 0x40006c2	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x40006c2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x40006c7	          0x4889de	                            mov rsi, rbx	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x40006ca	      0xe800000000	                          call 0x40006cf	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x40006cf	      0x448b442408	                mov r8d, dword [rsp + 8]	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x40006d4	          0x4489c2	                            mov edx, r8d	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x40006d7	      0xe929010000	                           jmp 0x4000805	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x40006dc	         0xf1f4000	                         nop dword [rax]	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x40006e0	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x40006e8	            0x3c0d	                             cmp al, 0xd	       160	ws.c	FUNCTION_4	IF_2
0x40006ea	      0x44897c242c	            mov dword [rsp + 0x2c], r15d	       160	ws.c	FUNCTION_4	IF_2
0x40006ef	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x40006f7	     0xf8416020000	                            je 0x4000913	       160	ws.c	FUNCTION_4	IF_2
0x40006fd	      0xf644242440	           test byte [rsp + 0x24], 0x40 	       166	ws.c	FUNCTION_4	IF_3
0x4000702	            0x7441	                            je 0x4000745	       166	ws.c	FUNCTION_4	IF_3
0x4000704	        0x4183ef01	                             sub r15d, 1	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000708	     0xf8835020000	                            js 0x4000943	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400070e	          0x4963c7	                        movsxd rax, r15d	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000711	          0x4c01e0	                            add rax, r12	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000714	           0xfb610	                   movzx edx, byte [rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000717	    0xf68200000000	                      test byte [rdx], 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400071e	            0x751c	                           jne 0x400073c	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000720	      0xe91e020000	                           jmp 0x4000943	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000725	           0xf1f00	                         nop dword [rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000728	         0xfb648ff	               movzx ecx, byte [rax - 1]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400072c	        0x4883e801	                              sub rax, 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000730	    0xf68100000000	                      test byte [rcx], 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000737	            0x740c	                            je 0x4000745	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000739	          0x4189d7	                           mov r15d, edx	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400073c	        0x418d57ff	                      lea edx, [r15 - 1]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000740	          0x83faff	             cmp edx, 0xffffffffffffffff	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000743	            0x75e3	                           jne 0x4000728	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000745	          0x4585ff	                         test r15d, r15d	       181	ws.c	FUNCTION_4	FOR_2
0x4000748	     0xf8f34feffff	                            jg 0x4000582	       181	ws.c	FUNCTION_4	FOR_2
0x400074e	            0x31d2	                            xor edx, edx	       148	ws.c	FUNCTION_4
0x4000750	          0x4531c0	                            xor r8d, r8d	       181	ws.c	FUNCTION_4	FOR_2
0x4000753	      0xe910ffffff	                           jmp 0x4000668	       181	ws.c	FUNCTION_4	FOR_2
0x4000758	     0xf1f84000000	                   nop dword [rax + rax]	       181	ws.c	FUNCTION_4	FOR_2
0x4000760	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000764	            0x85c9	                           test ecx, ecx	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000766	            0x7458	                            je 0x40007c0	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000768	          0x4885db	                           test rbx, rbx	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x400076b	     0xf84b7feffff	                            je 0x4000628	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x4000771	          0x4963fe	                        movsxd rdi, r14d	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000774	      0x48037c2408	                add rdi, qword [rsp + 8]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000779	          0x4529f0	                           sub r8d, r14d	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400077c	          0x4963f0	                         movsxd rsi, r8d	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400077f	          0x4889d9	                            mov rcx, rbx	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000782	      0xba01000000	                              mov edx, 1	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x4000787	      0xe800000000	                          call 0x400078c	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x400078c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000791	          0x4889de	                            mov rsi, rbx	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000794	      0xe800000000	                          call 0x4000799	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x4000799	          0x4c89e7	                            mov rdi, r12	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x400079c	          0x4889d9	                            mov rcx, rbx	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x400079f	      0xba01000000	                              mov edx, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40007a4	      0xbe01000000	                              mov esi, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40007a9	      0xe800000000	                          call 0x40007ae	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40007ae	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007b3	          0x4889de	                            mov rsi, rbx	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007b6	      0xe800000000	                          call 0x40007bb	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007bb	      0xe968feffff	                           jmp 0x4000628	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40007c0	          0x4885db	                           test rbx, rbx	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x40007c3	     0xf845ffeffff	                            je 0x4000628	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x40007c9	          0x4529f0	                           sub r8d, r14d	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007cc	          0x4963fe	                        movsxd rdi, r14d	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007cf	      0x48037c2408	                add rdi, qword [rsp + 8]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007d4	        0x418d7001	                       lea esi, [r8 + 1]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007d8	          0x4889d9	                            mov rcx, rbx	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007db	      0xba01000000	                              mov edx, 1	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007e0	          0x4863f6	                         movsxd rsi, esi	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007e3	      0xe800000000	                          call 0x40007e8	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007e8	      0xe93bfeffff	                           jmp 0x4000628	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007ed	           0xf1f00	                         nop dword [rax]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40007f0	        0x4883c448	                           add rsp, 0x48	       253	ws.c	FUNCTION_5
0x40007f4	              0x5b	                                 pop rbx	       253	ws.c	FUNCTION_5
0x40007f5	              0x5d	                                 pop rbp	       253	ws.c	FUNCTION_5
0x40007f6	            0x415c	                                 pop r12	       253	ws.c	FUNCTION_5
0x40007f8	            0x415d	                                 pop r13	       253	ws.c	FUNCTION_5
0x40007fa	            0x415e	                                 pop r14	       253	ws.c	FUNCTION_5
0x40007fc	            0x415f	                                 pop r15	       253	ws.c	FUNCTION_5
0x40007fe	              0xc3	                                     ret	       253	ws.c	FUNCTION_5
0x40007ff	              0x90	                                     nop	       253	ws.c	FUNCTION_5
0x4000800	          0x4885db	                           test rbx, rbx	       219	ws.c	FUNCTION_4	IF_15
0x4000803	            0x74eb	                            je 0x40007f0	       219	ws.c	FUNCTION_4	IF_15
0x4000805	          0x4489fd	                           mov ebp, r15d	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000808	        0x89542408	                mov dword [rsp + 8], edx	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x400080c	            0x29d5	                            sub ebp, edx	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x400080e	            0x85ed	                           test ebp, ebp	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000810	            0x7e33	                           jle 0x4000845	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000812	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x4000817	          0x4889de	                            mov rsi, rbx	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x400081a	      0xe800000000	                          call 0x400081f	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x400081f	      0x4863542408	            movsxd rdx, dword [rsp + 8] 	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000824	          0x4863f5	                         movsxd rsi, ebp	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000827	          0x4889d9	                            mov rcx, rbx	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x400082a	        0x498d3c14	                    lea rdi, [r12 + rdx]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x400082e	      0xba01000000	                              mov edx, 1	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000833	      0xe800000000	                          call 0x4000838	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000838	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x400083d	          0x4889de	                            mov rsi, rbx	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x4000840	      0xe800000000	                          call 0x4000845	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x4000845	      0x448b74242c	           mov r14d, dword [rsp + 0x2c] 	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x400084a	          0x4539fe	                          cmp r14d, r15d	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x400084d	            0x7436	                            je 0x4000885	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x400084f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x4000854	          0x4889de	                            mov rsi, rbx	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x4000857	      0xe800000000	                          call 0x400085c	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x400085c	          0x4489f6	                           mov esi, r14d	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400085f	          0x4963ff	                        movsxd rdi, r15d	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000862	          0x4889d9	                            mov rcx, rbx	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000865	          0x4429fe	                           sub esi, r15d	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000868	          0x4c01e7	                            add rdi, r12	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400086b	      0xba01000000	                              mov edx, 1	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000870	          0x4863f6	                         movsxd rsi, esi	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000873	      0xe800000000	                          call 0x4000878	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x4000878	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x400087d	          0x4889de	                            mov rsi, rbx	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x4000880	      0xe800000000	                          call 0x4000885	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x4000885	        0x8b542434	            mov edx, dword [rsp + 0x34] 	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x4000889	            0x85d2	                           test edx, edx	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x400088b	            0x7553	                           jne 0x40008e0	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x400088d	        0x8b442430	            mov eax, dword [rsp + 0x30] 	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x4000891	            0x85c0	                           test eax, eax	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x4000893	     0xf8457ffffff	                            je 0x40007f0	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x4000899	        0x4883c448	                           add rsp, 0x48	       253	ws.c	FUNCTION_5
0x400089d	          0x4889de	                            mov rsi, rbx	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40008a0	      0xbf0a000000	                            mov edi, 0xa	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40008a5	              0x5b	                                 pop rbx	       253	ws.c	FUNCTION_5
0x40008a6	              0x5d	                                 pop rbp	       253	ws.c	FUNCTION_5
0x40008a7	            0x415c	                                 pop r12	       253	ws.c	FUNCTION_5
0x40008a9	            0x415d	                                 pop r13	       253	ws.c	FUNCTION_5
0x40008ab	            0x415e	                                 pop r14	       253	ws.c	FUNCTION_5
0x40008ad	            0x415f	                                 pop r15	       253	ws.c	FUNCTION_5
0x40008af	      0xe900000000	                           jmp 0x40008b4	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40008b4	         0xf1f4000	                         nop dword [rax]	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40008b8	      0xf644242440	           test byte [rsp + 0x24], 0x40 	       166	ws.c	FUNCTION_4	IF_3
0x40008bd	            0x746b	                            je 0x400092a	       166	ws.c	FUNCTION_4	IF_3
0x40008bf	      0x44897c242c	            mov dword [rsp + 0x2c], r15d	       166	ws.c	FUNCTION_4	IF_3
0x40008c4	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x40008cc	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x40008d4	      0xe92bfeffff	                           jmp 0x4000704	       151	ws.c	FUNCTION_4
0x40008d9	     0xf1f80000000	                         nop dword [rax]	       151	ws.c	FUNCTION_4
0x40008e0	          0x4889de	                            mov rsi, rbx	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x40008e3	      0xbf0d000000	                            mov edi, 0xd	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x40008e8	      0xe800000000	                          call 0x40008ed	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x40008ed	            0xeb9e	                           jmp 0x400088d	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x40008ef	              0x90	                                     nop	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x40008f0	        0x4183ef01	                             sub r15d, 1	       157	ws.c	FUNCTION_4	IF_1
0x40008f4	          0x80e602	                               and dh, 2	       159	ws.c	FUNCTION_4	IF_2
0x40008f7	            0x7454	                            je 0x400094d	       159	ws.c	FUNCTION_4	IF_2
0x40008f9	          0x4585ff	                         test r15d, r15d	       159	ws.c	FUNCTION_4	IF_2
0x40008fc	            0x7e4f	                           jle 0x400094d	       159	ws.c	FUNCTION_4	IF_2
0x40008fe	          0x4963c7	                        movsxd rax, r15d	       159	ws.c	FUNCTION_4	IF_2
0x4000901	    0xc74424300100	               mov dword [rsp + 0x30], 1	       156	ws.c	FUNCTION_4	IF_1
0x4000909	       0xfb64407ff	         movzx eax, byte [rdi + rax - 1]	       156	ws.c	FUNCTION_4	IF_1
0x400090e	      0xe9d5fdffff	                           jmp 0x40006e8	       156	ws.c	FUNCTION_4	IF_1
0x4000913	      0x836c242c01	               sub dword [rsp + 0x2c], 1	       162	ws.c	FUNCTION_4	IF_2
0x4000918	    0xc74424340100	               mov dword [rsp + 0x34], 1	       161	ws.c	FUNCTION_4	IF_2
0x4000920	      0x448b7c242c	           mov r15d, dword [rsp + 0x2c] 	       161	ws.c	FUNCTION_4	IF_2
0x4000925	      0xe9d3fdffff	                           jmp 0x40006fd	       161	ws.c	FUNCTION_4	IF_2
0x400092a	        0x8974242c	             mov dword [rsp + 0x2c], esi	       166	ws.c	FUNCTION_4	IF_3
0x400092e	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x4000936	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x400093e	      0xe90bfeffff	                           jmp 0x400074e	       151	ws.c	FUNCTION_4
0x4000943	      0x448b7c242c	           mov r15d, dword [rsp + 0x2c] 	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000948	      0xe9f8fdffff	                           jmp 0x4000745	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400094d	      0x44897c242c	            mov dword [rsp + 0x2c], r15d	       157	ws.c	FUNCTION_4	IF_1
0x4000952	    0xc74424300100	               mov dword [rsp + 0x30], 1	       156	ws.c	FUNCTION_4	IF_1
0x400095a	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x4000962	      0xe996fdffff	                           jmp 0x40006fd	       151	ws.c	FUNCTION_4
ws_blank_line	CALL,1:DO,0:WHILE,1:functions,0:FOR,0:ELSE,0:IF,1:SWITCH,0	20
0x4000b20	            0x85f6	                           test esi, esi	       267	ws.c	FUNCTION_7	WHILE_1
0x4000b22	            0x7e31	                           jle 0x4000b55	       267	ws.c	FUNCTION_7	WHILE_1
0x4000b24	           0xfb607	                   movzx eax, byte [rdi]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b27	    0xf68000000000	                      test byte [rax], 1	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b2e	            0x7430	                            je 0x4000b60	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b30	          0x8d46ff	                      lea eax, [rsi - 1]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b33	      0x488d540701	                lea rdx, [rdi + rax + 1]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b38	            0xeb12	                           jmp 0x4000b4c	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b3a	    0x660f1f440000	                    nop word [rax + rax]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b40	           0xfb607	                   movzx eax, byte [rdi]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b43	    0xf68000000000	                      test byte [rax], 1	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b4a	            0x7414	                            je 0x4000b60	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000b4c	        0x4883c701	                              add rdi, 1	       270	ws.c	FUNCTION_7	WHILE_1
0x4000b50	          0x4839d7	                            cmp rdi, rdx	       267	ws.c	FUNCTION_7	WHILE_1
0x4000b53	            0x75eb	                           jne 0x4000b40	       267	ws.c	FUNCTION_7	WHILE_1
0x4000b55	      0xb801000000	                              mov eax, 1	       272	ws.c	FUNCTION_7
0x4000b5a	              0xc3	                                     ret	       272	ws.c	FUNCTION_7
0x4000b5b	       0xf1f440000	                   nop dword [rax + rax]	       272	ws.c	FUNCTION_7
0x4000b60	            0x31c0	                            xor eax, eax	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x4000b62	              0xc3	                                     ret	       273	ws.c	FUNCTION_7
