then_atom_handler	DO,0:ELSE,2:CALL,9:WHILE,0:FOR,0:SWITCH,0:IF,9:functions,0	96
0x4002880	            0x4155	                                push r13	       664	ref-filter.c	FUNCTION_26
0x4002882	            0x4154	                                push r12	       664	ref-filter.c	FUNCTION_26
0x4002884	          0x4989d5	                            mov r13, rdx	       664	ref-filter.c	FUNCTION_26
0x4002887	              0x55	                                push rbp	       664	ref-filter.c	FUNCTION_26
0x4002888	              0x53	                                push rbx	       664	ref-filter.c	FUNCTION_26
0x4002889	        0x4883ec08	                              sub rsp, 8	       664	ref-filter.c	FUNCTION_26
0x400288d	        0x488b6e08	                mov rbp, qword [rsi + 8]	       665	ref-filter.c	FUNCTION_26
0x4002891	    0x48817d200000	               cmp qword [rbp + 0x20], 0	       668	ref-filter.c	FUNCTION_26	IF_1
0x4002899	            0x7435	                            je 0x40028d0	       668	ref-filter.c	FUNCTION_26	IF_1
0x400289b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40028a0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40028a5	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x40028a7	      0xe800000000	                          call 0x40028ac	        54	gettext.h	FUNCTION_93
0x40028ac	        0x4883c408	                              add rsp, 8	       692	ref-filter.c	FUNCTION_26
0x40028b0	          0x4c89ef	                            mov rdi, r13	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40028b3	          0x4889c2	                            mov rdx, rax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40028b6	              0x5b	                                 pop rbx	       692	ref-filter.c	FUNCTION_26
0x40028b7	              0x5d	                                 pop rbp	       692	ref-filter.c	FUNCTION_26
0x40028b8	            0x415c	                                 pop r12	       692	ref-filter.c	FUNCTION_26
0x40028ba	            0x415d	                                 pop r13	       692	ref-filter.c	FUNCTION_26
0x40028bc	      0xbeffffffff	                     mov esi, 0xffffffff	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40028c1	            0x31c0	                            xor eax, eax	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40028c3	      0xe998e1ffff	    jmp sym.strbuf_addf_ret.constprop.38	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40028c8	     0xf1f84000000	                   nop dword [rax + rax]	       675	ref-filter.c	FUNCTION_26	CALL_6
0x40028d0	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	       669	ref-filter.c	FUNCTION_26	IF_1
0x40028d4	          0x4d85e4	                           test r12, r12	       670	ref-filter.c	FUNCTION_26	IF_2
0x40028d7	            0x74c2	                            je 0x400289b	       670	ref-filter.c	FUNCTION_26	IF_2
0x40028d9	    0x410fb65c2410	           movzx ebx, byte [r12 + 0x10] 	       672	ref-filter.c	FUNCTION_26	IF_3
0x40028df	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40028e4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40028e9	          0xf6c301	                              test bl, 1	       672	ref-filter.c	FUNCTION_26	IF_3
0x40028ec	            0x75b7	                           jne 0x40028a5	       672	ref-filter.c	FUNCTION_26	IF_3
0x40028ee	          0xf6c302	                              test bl, 2	       674	ref-filter.c	FUNCTION_26	IF_4
0x40028f1	     0xf85a1000000	                           jne 0x4002998	       674	ref-filter.c	FUNCTION_26	IF_4
0x40028f7	            0x89d8	                            mov eax, ebx	       676	ref-filter.c	FUNCTION_26
0x40028f9	          0x83c801	                               or eax, 1	       676	ref-filter.c	FUNCTION_26
0x40028fc	      0x4188442410	               mov byte [r12 + 0x10], al	       676	ref-filter.c	FUNCTION_26
0x4002901	        0x418b0424	                    mov eax, dword [r12]	       682	ref-filter.c	FUNCTION_26	IF_5
0x4002905	            0x85c0	                           test eax, eax	       682	ref-filter.c	FUNCTION_26	IF_5
0x4002907	            0x7547	                           jne 0x4002950	       682	ref-filter.c	FUNCTION_26	IF_5
0x4002909	        0x4c8b6d18	            mov r13, qword [rbp + 0x18] 	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x400290d	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4002912	          0x4c89ee	                            mov rsi, r13	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x4002915	      0xe800000000	                          call 0x400291a	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x400291a	            0x85c0	                           test eax, eax	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x400291c	            0x7508	                           jne 0x4002926	       683	ref-filter.c	FUNCTION_26	IF_5	IF_6	CALL_7
0x400291e	          0x83cb05	                               or ebx, 5	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4002921	      0x41885c2410	               mov byte [r12 + 0x10], bl	       687	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8
0x4002926	    0x4981fd000000	                              cmp r13, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x400292d	    0x48c745100000	               mov qword [rbp + 0x10], 0	       164	strbuf.h	FUNCTION_97
0x4002935	            0x7479	                            je 0x40029b0	       165	strbuf.h	FUNCTION_97	IF_2
0x4002937	      0x41c6450000	                       mov byte [r13], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x400293c	        0x4883c408	                              add rsp, 8	       692	ref-filter.c	FUNCTION_26
0x4002940	            0x31c0	                            xor eax, eax	       692	ref-filter.c	FUNCTION_26
0x4002942	              0x5b	                                 pop rbx	       692	ref-filter.c	FUNCTION_26
0x4002943	              0x5d	                                 pop rbp	       692	ref-filter.c	FUNCTION_26
0x4002944	            0x415c	                                 pop r12	       692	ref-filter.c	FUNCTION_26
0x4002946	            0x415d	                                 pop r13	       692	ref-filter.c	FUNCTION_26
0x4002948	              0xc3	                                     ret	       692	ref-filter.c	FUNCTION_26
0x4002949	     0xf1f80000000	                         nop dword [rax]	       692	ref-filter.c	FUNCTION_26
0x4002950	          0x83f801	                              cmp eax, 1	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4002953	            0x746b	                            je 0x40029c0	       685	ref-filter.c	FUNCTION_26	ELSE_1	IF_7
0x4002955	      0x48837d1000	               cmp qword [rbp + 0x10], 0	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x400295a	        0x4c8b6d18	            mov r13, qword [rbp + 0x18] 	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x400295e	            0x74c6	                            je 0x4002926	       688	ref-filter.c	FUNCTION_26	ELSE_2	IF_9	CALL_9
0x4002960	      0x410fb64500	                   movzx eax, byte [r13]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002965	            0x84c0	                             test al, al	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002967	            0x74bd	                            je 0x4002926	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002969	    0xf68000000000	                      test byte [rax], 1	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002970	            0x741a	                            je 0x400298c	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002972	          0x4c89ea	                            mov rdx, r13	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002975	           0xf1f00	                         nop dword [rax]	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x4002978	        0x4883c201	                              add rdx, 1	       657	ref-filter.c	FUNCTION_25	WHILE_1
0x400297c	           0xfb602	                   movzx eax, byte [rdx]	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x400297f	            0x84c0	                             test al, al	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002981	            0x74a3	                            je 0x4002926	       654	ref-filter.c	FUNCTION_25	WHILE_1
0x4002983	    0xf68000000000	                      test byte [rax], 1	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x400298a	            0x75ec	                           jne 0x4002978	       655	ref-filter.c	FUNCTION_25	WHILE_1	IF_1
0x400298c	    0x41804c241004	                 or byte [r12 + 0x10], 4	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4002992	            0xeb92	                           jmp 0x4002926	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4002994	         0xf1f4000	                         nop dword [rax]	       689	ref-filter.c	FUNCTION_26	ELSE_2	IF_9
0x4002998	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x400299d	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40029a2	      0xe9fefeffff	                           jmp 0x40028a5	        54	gettext.h	FUNCTION_93
0x40029a7	    0x660f1f840000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_93
0x40029b0	    0x803d00000000	                cmp byte [0x040029b7], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029b7	            0x7483	                            je 0x400293c	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029b9	      0xe800000000	                          call 0x40029be	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029be	            0x6690	                                     nop	       168	strbuf.h	FUNCTION_97	CALL_2
0x40029c0	        0x4c8b6d18	            mov r13, qword [rbp + 0x18] 	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x40029c4	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x40029c9	          0x4c89ee	                            mov rsi, r13	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x40029cc	      0xe800000000	                          call 0x40029d1	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x40029d1	            0x85c0	                           test eax, eax	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x40029d3	     0xf844dffffff	                            je 0x4002926	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
0x40029d9	      0xe940ffffff	                           jmp 0x400291e	       686	ref-filter.c	FUNCTION_26	ELSE_1	IF_7	IF_8	CALL_8
ref_filter_handler	DO,0:ELSE,0:CALL,11:WHILE,0:FOR,0:SWITCH,0:IF,9:functions,0	281
0x40048c0	            0x4157	                                push r15	      1976	ref-filter.c	FUNCTION_74
0x40048c2	            0x4156	                                push r14	      1976	ref-filter.c	FUNCTION_74
0x40048c4	            0x4155	                                push r13	      1976	ref-filter.c	FUNCTION_74
0x40048c6	            0x4154	                                push r12	      1976	ref-filter.c	FUNCTION_74
0x40048c8	              0x55	                                push rbp	      1976	ref-filter.c	FUNCTION_74
0x40048c9	              0x53	                                push rbx	      1976	ref-filter.c	FUNCTION_74
0x40048ca	          0x4889fd	                            mov rbp, rdi	      1976	ref-filter.c	FUNCTION_74
0x40048cd	        0x4883ec28	                           sub rsp, 0x28	      1976	ref-filter.c	FUNCTION_74
0x40048d1	          0xf6c208	                              test dl, 8	      1983	ref-filter.c	FUNCTION_74	IF_1
0x40048d4	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1976	ref-filter.c	FUNCTION_74
0x40048d9	      0x48894c2408	                mov qword [rsp + 8], rcx	      1976	ref-filter.c	FUNCTION_74
0x40048de	     0xf85fc000000	                           jne 0x40049e0	      1983	ref-filter.c	FUNCTION_74	IF_1
0x40048e4	          0xf6c204	                              test dl, 4	      1988	ref-filter.c	FUNCTION_74	IF_2
0x40048e7	          0x4189d4	                           mov r12d, edx	      1988	ref-filter.c	FUNCTION_74	IF_2
0x40048ea	     0xf8560020000	                           jne 0x4004b50	      1988	ref-filter.c	FUNCTION_74	IF_2
0x40048f0	        0x4c8b6908	                mov r13, qword [rcx + 8]	      1978	ref-filter.c	FUNCTION_74
0x40048f4	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      1978	ref-filter.c	FUNCTION_74
0x40048f8	          0x8d50fe	                      lea edx, [rax - 2]	      1965	ref-filter.c	FUNCTION_73	IF_1
0x40048fb	          0x83e2fd	                     and edx, 0xfffffffd	      1965	ref-filter.c	FUNCTION_73	IF_1
0x40048fe	            0x7468	                            je 0x4004968	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004900	          0x83f808	                              cmp eax, 8	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004903	            0x7463	                            je 0x4004968	      1965	ref-filter.c	FUNCTION_73	IF_1
0x4004905	      0xb905000000	                              mov ecx, 5	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400490a	      0xbf00000000	                              mov edi, 0	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400490f	          0x4889ee	                            mov rsi, rbp	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004912	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004914	    0xc74424142000	           mov dword [rsp + 0x14], 0x20 	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400491c	           0xf97c1	                                 seta cl	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x400491f	           0xf92c2	                                 setb dl	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004922	            0x38d1	                              cmp cl, dl	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004924	            0x7446	                            je 0x400496c	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004926	          0x4531f6	                          xor r14d, r14d	      1951	ref-filter.c	FUNCTION_72	IF_1	CALL_1
0x4004929	          0x4c89f0	                            mov rax, r14	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400492c	          0x4889ef	                            mov rdi, rbp	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400492f	          0x4489f3	                           mov ebx, r14d	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4004932	        0x48c1e004	                              shl rax, 4	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4004936	    0x488bb0000000	                    mov rsi, qword [rax]	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400493d	      0xe800000000	                          call 0x4004942	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4004942	            0x85c0	                           test eax, eax	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x4004944	     0xf8586030000	                           jne 0x4004cd0	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400494a	        0x4983c601	                              add r14, 1	      1955	ref-filter.c	FUNCTION_72	FOR_1	IF_2	CALL_2
0x400494e	        0x4983fe03	                              cmp r14, 3	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4004952	            0x75d5	                           jne 0x4004929	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4004954	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4004958	    0xc74424141000	           mov dword [rsp + 0x14], 0x10 	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4004960	            0xeb0a	                           jmp 0x400496c	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4004962	    0x660f1f440000	                    nop word [rax + rax]	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x4004968	        0x89442414	             mov dword [rsp + 0x14], eax	      1954	ref-filter.c	FUNCTION_72	FOR_1
0x400496c	        0x85442414	           test dword [rsp + 0x14], eax 	      1995	ref-filter.c	FUNCTION_74	IF_3
0x4004970	            0x7516	                           jne 0x4004988	      1995	ref-filter.c	FUNCTION_74	IF_3
0x4004972	        0x4883c428	                           add rsp, 0x28	      2034	ref-filter.c	FUNCTION_74
0x4004976	            0x31c0	                            xor eax, eax	      2034	ref-filter.c	FUNCTION_74
0x4004978	              0x5b	                                 pop rbx	      2034	ref-filter.c	FUNCTION_74
0x4004979	              0x5d	                                 pop rbp	      2034	ref-filter.c	FUNCTION_74
0x400497a	            0x415c	                                 pop r12	      2034	ref-filter.c	FUNCTION_74
0x400497c	            0x415d	                                 pop r13	      2034	ref-filter.c	FUNCTION_74
0x400497e	            0x415e	                                 pop r14	      2034	ref-filter.c	FUNCTION_74
0x4004980	            0x415f	                                 pop r15	      2034	ref-filter.c	FUNCTION_74
0x4004982	              0xc3	                                     ret	      2034	ref-filter.c	FUNCTION_74
0x4004983	       0xf1f440000	                   nop dword [rax + rax]	      2034	ref-filter.c	FUNCTION_74
0x4004988	        0x498b5d00	                    mov rbx, qword [r13]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x400498c	          0x4c8b33	                    mov r14, qword [rbx]	      1809	ref-filter.c	FUNCTION_66	IF_1
0x400498f	          0x4d85f6	                           test r14, r14	      1809	ref-filter.c	FUNCTION_66	IF_1
0x4004992	     0xf8493000000	                            je 0x4004a2b	      1809	ref-filter.c	FUNCTION_66	IF_1
0x4004998	      0x410fb64540	           movzx eax, byte [r13 + 0x40] 	      1811	ref-filter.c	FUNCTION_66	IF_2
0x400499d	            0xa802	                              test al, 2	      1811	ref-filter.c	FUNCTION_66	IF_2
0x400499f	     0xf852b010000	                           jne 0x4004ad0	      1811	ref-filter.c	FUNCTION_66	IF_2
0x40049a5	          0xc0e802	                               shr al, 2	      1754	ref-filter.c	FUNCTION_64
0x40049a8	          0x4989ef	                            mov r15, rbp	      1754	ref-filter.c	FUNCTION_64
0x40049ab	          0x83e001	                              and eax, 1	      1754	ref-filter.c	FUNCTION_64
0x40049ae	        0x89442410	             mov dword [rsp + 0x10], eax	      1754	ref-filter.c	FUNCTION_64
0x40049b2	      0xb800000000	                              mov eax, 0	      1754	ref-filter.c	FUNCTION_64
0x40049b7	            0xeb19	                           jmp 0x40049d2	      1754	ref-filter.c	FUNCTION_64
0x40049b9	     0xf1f80000000	                         nop dword [rax]	      1754	ref-filter.c	FUNCTION_64
0x40049c0	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40049c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40049c8	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40049cc	     0xf858e010000	                           jne 0x4004b60	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40049d2	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40049d5	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40049d7	            0x75e7	                           jne 0x40049c0	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40049d9	            0xeb3d	                           jmp 0x4004a18	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40049db	       0xf1f440000	                   nop dword [rax + rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40049e0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40049e5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40049ea	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x40049ec	      0xe800000000	                          call 0x40049f1	        54	gettext.h	FUNCTION_93
0x40049f1	          0x4889ee	                            mov rsi, rbp	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x40049f4	          0x4889c7	                            mov rdi, rax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x40049f7	            0x31c0	                            xor eax, eax	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x40049f9	      0xe800000000	                          call 0x40049fe	      1989	ref-filter.c	FUNCTION_74	IF_2	CALL_4
0x40049fe	      0xe96fffffff	                           jmp 0x4004972	      1990	ref-filter.c	FUNCTION_74	IF_2
0x4004a03	       0xf1f440000	                   nop dword [rax + rax]	      1990	ref-filter.c	FUNCTION_74	IF_2
0x4004a08	        0x4883c308	                              add rbx, 8	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x4004a0c	          0x4c8b33	                    mov r14, qword [rbx]	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x4004a0f	          0x4d85f6	                           test r14, r14	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x4004a12	     0xf845affffff	                            je 0x4004972	      1768	ref-filter.c	FUNCTION_64	FOR_1
0x4004a18	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004a1c	          0x4c89fe	                            mov rsi, r15	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004a1f	          0x4c89f7	                            mov rdi, r14	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004a22	      0xe800000000	                          call 0x4004a27	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004a27	            0x85c0	                           test eax, eax	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004a29	            0x75dd	                           jne 0x4004a08	      1769	ref-filter.c	FUNCTION_64	FOR_1	IF_2	CALL_5
0x4004a2b	        0x418b4510	            mov eax, dword [r13 + 0x10] 	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004a2f	            0x85c0	                           test eax, eax	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004a31	     0xf8509020000	                           jne 0x4004c40	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004a37	      0x49837d3800	               cmp qword [r13 + 0x38], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004a3c	     0xf84ce010000	                            je 0x4004c10	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004a42	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004a47	      0xbe01000000	                              mov esi, 1	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004a4c	      0xe800000000	                          call 0x4004a51	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004a51	          0x4885c0	                           test rax, rax	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x4004a54	          0x4889c3	                            mov rbx, rax	      2010	ref-filter.c	FUNCTION_74	IF_6	CALL_8
0x4004a57	     0xf8415ffffff	                            je 0x4004972	      2011	ref-filter.c	FUNCTION_74	IF_6	IF_7
0x4004a5d	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4004a61	          0x4885f6	                           test rsi, rsi	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4004a64	            0x741b	                            je 0x4004a81	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4004a66	      0x41f6454001	               test byte [r13 + 0x40], 1	      1740	ref-filter.c	FUNCTION_63	IF_1
0x4004a6b	     0xf85ff010000	                           jne 0x4004c70	      1740	ref-filter.c	FUNCTION_63	IF_1
0x4004a71	          0x4889c7	                            mov rdi, rax	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4004a74	      0xe800000000	                          call 0x4004a79	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4004a79	            0x85c0	                           test eax, eax	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4004a7b	     0xf84f1feffff	                            je 0x4004972	      2014	ref-filter.c	FUNCTION_74	IF_6	IF_8
0x4004a81	        0x498b7528	            mov rsi, qword [r13 + 0x28] 	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4004a85	          0x4885f6	                           test rsi, rsi	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4004a88	            0x741b	                            je 0x4004aa5	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4004a8a	      0x41f6454001	               test byte [r13 + 0x40], 1	      1740	ref-filter.c	FUNCTION_63	IF_1
0x4004a8f	     0xf8553010000	                           jne 0x4004be8	      1740	ref-filter.c	FUNCTION_63	IF_1
0x4004a95	          0x4889df	                            mov rdi, rbx	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4004a98	      0xe800000000	                          call 0x4004a9d	      1742	ref-filter.c	FUNCTION_63	CALL_2
0x4004a9d	            0x85c0	                           test eax, eax	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4004a9f	     0xf85cdfeffff	                           jne 0x4004972	      2018	ref-filter.c	FUNCTION_74	IF_6	IF_9
0x4004aa5	      0x488b442408	                mov rax, qword [rsp + 8]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004aaa	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004aaf	          0x4889ee	                            mov rsi, rbp	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004ab2	          0x488b38	                    mov rdi, qword [rax]	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004ab5	      0xe800000000	                          call 0x4004aba	      2028	ref-filter.c	FUNCTION_74	CALL_11
0x4004aba	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      2031	ref-filter.c	FUNCTION_74
0x4004abe	        0x48895828	             mov qword [rax + 0x28], rbx	      2029	ref-filter.c	FUNCTION_74
0x4004ac2	        0x44896014	            mov dword [rax + 0x14], r12d	      2030	ref-filter.c	FUNCTION_74
0x4004ac6	          0x894818	             mov dword [rax + 0x18], ecx	      2031	ref-filter.c	FUNCTION_74
0x4004ac9	      0xe9a4feffff	                           jmp 0x4004972	      2033	ref-filter.c	FUNCTION_74
0x4004ace	            0x6690	                                     nop	      2033	ref-filter.c	FUNCTION_74
0x4004ad0	          0x4889ef	                            mov rdi, rbp	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4004ad3	      0xe800000000	                          call 0x4004ad8	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4004ad8	        0x89442410	             mov dword [rsp + 0x10], eax	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4004adc	            0xeb12	                           jmp 0x4004af0	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4004ade	            0x6690	                                     nop	      1784	ref-filter.c	FUNCTION_65	CALL_1
0x4004ae0	        0x4883c308	                              add rbx, 8	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004ae4	          0x4c8b33	                    mov r14, qword [rbx]	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004ae7	          0x4d85f6	                           test r14, r14	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004aea	     0xf8482feffff	                            je 0x4004972	      1790	ref-filter.c	FUNCTION_65	FOR_1
0x4004af0	          0x4c89f7	                            mov rdi, r14	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x4004af3	      0xe800000000	                          call 0x4004af8	      1792	ref-filter.c	FUNCTION_65	FOR_1	CALL_2
0x4004af8	        0x39442410	            cmp dword [rsp + 0x10], eax 	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004afc	            0x7c37	                            jl 0x4004b35	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004afe	          0x4c63f8	                         movsxd r15, eax	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b01	          0x4c89f6	                            mov rsi, r14	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b04	          0x4889ef	                            mov rdi, rbp	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b07	          0x4c89fa	                            mov rdx, r15	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b0a	      0xe800000000	                          call 0x4004b0f	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b0f	            0x85c0	                           test eax, eax	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004b11	            0x7522	                           jne 0x4004b35	      1794	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004b13	    0x420fb6443d00	             movzx eax, byte [rbp + r15]	      1796	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004b19	            0x84c0	                             test al, al	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b1b	     0xf840affffff	                            je 0x4004a2b	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b21	            0x3c2f	                            cmp al, 0x2f	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b23	     0xf8402ffffff	                            je 0x4004a2b	      1795	ref-filter.c	FUNCTION_65	FOR_1	IF_2	CALL_3
0x4004b29	    0x43807c3eff2f	         cmp byte [r14 + r15 - 1], 0x2f 	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004b2f	     0xf84f6feffff	                            je 0x4004a2b	      1797	ref-filter.c	FUNCTION_65	FOR_1	IF_2
0x4004b35	      0xba02000000	                              mov edx, 2	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004b3a	          0x4889ee	                            mov rsi, rbp	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004b3d	          0x4c89f7	                            mov rdi, r14	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004b40	      0xe800000000	                          call 0x4004b45	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004b45	            0x85c0	                           test eax, eax	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004b47	            0x7597	                           jne 0x4004ae0	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004b49	      0xe9ddfeffff	                           jmp 0x4004a2b	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004b4e	            0x6690	                                     nop	      1800	ref-filter.c	FUNCTION_65	FOR_1	IF_3	CALL_4
0x4004b50	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4004b55	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4004b5a	      0xe98bfeffff	                           jmp 0x40049ea	        54	gettext.h	FUNCTION_93
0x4004b5f	              0x90	                                     nop	        54	gettext.h	FUNCTION_93
0x4004b60	          0x4989ef	                            mov r15, rbp	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b63	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b68	     0xf1f84000000	                   nop dword [rax + rax]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b70	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004b73	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004b75	     0xf849dfeffff	                            je 0x4004a18	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004b7b	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b7f	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b83	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b87	            0x74e7	                            je 0x4004b70	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b89	          0x4989ef	                            mov r15, rbp	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b8c	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b91	     0xf1f80000000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004b98	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004b9b	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004b9d	     0xf8475feffff	                            je 0x4004a18	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004ba3	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004ba7	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bab	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004baf	            0x74e7	                            je 0x4004b98	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bb1	          0x4989ef	                            mov r15, rbp	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bb4	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bb9	     0xf1f80000000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bc0	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004bc3	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004bc5	     0xf844dfeffff	                            je 0x4004a18	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4004bcb	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bcf	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bd3	        0x413a57ff	                  cmp dl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bd7	            0x74e7	                            je 0x4004bc0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bd9	          0x4989ef	                            mov r15, rbp	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004bdc	      0xe937feffff	                           jmp 0x4004a18	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004be1	     0xf1f80000000	                         nop dword [rax]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004be8	      0x488b442408	                mov rax, qword [rsp + 8]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4004bed	          0x4889df	                            mov rdi, rbx	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004bf0	        0x488d5028	                   lea rdx, [rax + 0x28]	      2019	ref-filter.c	FUNCTION_74	IF_6	IF_9	CALL_10
0x4004bf4	      0xe887e5ffff	              call sym.contains_tag_algo	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004bf9	          0x83f802	                              cmp eax, 2	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004bfc	           0xf94c0	                                 sete al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004bff	           0xfb6c0	                           movzx eax, al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c02	      0xe996feffff	                           jmp 0x4004a9d	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c07	    0x660f1f840000	                    nop word [rax + rax]	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c10	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004c15	     0xf8527feffff	                           jne 0x4004a42	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004c1b	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004c20	     0xf851cfeffff	                           jne 0x4004a42	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004c26	        0x418b5550	            mov edx, dword [r13 + 0x50] 	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004c2a	            0x85d2	                           test edx, edx	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004c2c	     0xf8510feffff	                           jne 0x4004a42	      2009	ref-filter.c	FUNCTION_74	IF_6
0x4004c32	            0x31db	                            xor ebx, ebx	      1980	ref-filter.c	FUNCTION_74
0x4004c34	      0xe96cfeffff	                           jmp 0x4004aa5	      1980	ref-filter.c	FUNCTION_74
0x4004c39	     0xf1f80000000	                         nop dword [rax]	      1980	ref-filter.c	FUNCTION_74
0x4004c40	        0x498d5d08	                      lea rbx, [r13 + 8]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004c44	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004c49	          0x4889df	                            mov rdi, rbx	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004c4c	      0xe800000000	                          call 0x4004c51	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004c51	            0x85c0	                           test eax, eax	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004c53	            0x783a	                            js 0x4004c8f	      1898	ref-filter.c	FUNCTION_69	IF_1	CALL_1
0x4004c55	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004c5b	     0xf85d6fdffff	                           jne 0x4004a37	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004c61	      0xe90cfdffff	                           jmp 0x4004972	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004c66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2001	ref-filter.c	FUNCTION_74	IF_5	CALL_7
0x4004c70	      0x488b442408	                mov rax, qword [rsp + 8]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4004c75	          0x4889df	                            mov rdi, rbx	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c78	        0x488d5010	                   lea rdx, [rax + 0x10]	      2015	ref-filter.c	FUNCTION_74	IF_6	IF_8	CALL_9
0x4004c7c	      0xe8ffe4ffff	              call sym.contains_tag_algo	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c81	          0x83f802	                              cmp eax, 2	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c84	           0xf94c0	                                 sete al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c87	           0xfb6c0	                           movzx eax, al	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c8a	      0xe9eafdffff	                           jmp 0x4004a79	      1741	ref-filter.c	FUNCTION_63	CALL_1
0x4004c8f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x4004c94	      0xe800000000	                          call 0x4004c99	      1900	ref-filter.c	FUNCTION_69	CALL_2
0x4004c99	          0x4885c0	                           test rax, rax	      1901	ref-filter.c	FUNCTION_69	IF_2
0x4004c9c	            0x7449	                            je 0x4004ce7	      1901	ref-filter.c	FUNCTION_69	IF_2
0x4004c9e	           0xfb610	                   movzx edx, byte [rax]	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4004ca1	          0x83e20e	                            and edx, 0xe	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4004ca4	          0x80fa08	                               cmp dl, 8	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4004ca7	     0xf85c5fcffff	                           jne 0x4004972	      1903	ref-filter.c	FUNCTION_69	IF_3
0x4004cad	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1904	ref-filter.c	FUNCTION_69	IF_3
0x4004cb1	        0x4883c604	                              add rsi, 4	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004cb5	     0xf84b7fcffff	                            je 0x4004972	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004cbb	          0x4889df	                            mov rdi, rbx	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004cbe	      0xe800000000	                          call 0x4004cc3	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004cc3	            0x85c0	                           test eax, eax	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004cc5	     0xf896cfdffff	                           jns 0x4004a37	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004ccb	      0xe9a2fcffff	                           jmp 0x4004972	      1905	ref-filter.c	FUNCTION_69	IF_4	CALL_5
0x4004cd0	        0x48c1e304	                              shl rbx, 4	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4004cd4	    0x8b8300000000	                    mov eax, dword [rbx]	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4004cda	        0x89442414	             mov dword [rsp + 0x14], eax	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4004cde	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4004ce2	      0xe985fcffff	                           jmp 0x400496c	      1956	ref-filter.c	FUNCTION_72	FOR_1	IF_2
0x4004ce7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4004cec	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4004cee	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4004cf3	      0xe800000000	                          call 0x4004cf8	        54	gettext.h	FUNCTION_93
0x4004cf8	          0x4889ee	                            mov rsi, rbp	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4004cfb	          0x4889c7	                            mov rdi, rax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4004cfe	            0x31c0	                            xor eax, eax	      1902	ref-filter.c	FUNCTION_69	CALL_4
0x4004d00	      0xe800000000	                          call 0x4004d05	      1902	ref-filter.c	FUNCTION_69	CALL_4
verify_ref_format	DO,0:ELSE,0:CALL,9:WHILE,0:FOR,1:SWITCH,0:IF,4:functions,0	113
0x4003c00	            0x4154	                                push r12	       769	ref-filter.c	FUNCTION_30
0x4003c02	              0x55	                                push rbp	       769	ref-filter.c	FUNCTION_30
0x4003c03	          0x4889fd	                            mov rbp, rdi	       769	ref-filter.c	FUNCTION_30
0x4003c06	              0x53	                                push rbx	       769	ref-filter.c	FUNCTION_30
0x4003c07	        0x4883ec20	                           sub rsp, 0x20	       769	ref-filter.c	FUNCTION_30
0x4003c0b	          0x488b1f	                    mov rbx, qword [rdi]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003c0e	    0xc74710000000	               mov dword [rdi + 0x10], 0	       772	ref-filter.c	FUNCTION_30
0x4003c15	    0x64488b042528	                mov rax, qword fs:[0x28]	       769	ref-filter.c	FUNCTION_30
0x4003c1e	      0x4889442418	             mov qword [rsp + 0x18], rax	       769	ref-filter.c	FUNCTION_30
0x4003c23	            0x31c0	                            xor eax, eax	       769	ref-filter.c	FUNCTION_30
0x4003c25	           0xfb603	                   movzx eax, byte [rbx]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003c28	            0x84c0	                             test al, al	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003c2a	            0x750c	                           jne 0x4003c38	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003c2c	            0xeb3d	                           jmp 0x4003c6b	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003c2e	            0x6690	                                     nop	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003c30	        0x4883c301	                              add rbx, 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x4003c34	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003c36	            0x7428	                            je 0x4003c60	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003c38	            0x3c25	                            cmp al, 0x25	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4003c3a	         0xfb64301	               movzx eax, byte [rbx + 1]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4003c3e	            0x75f0	                           jne 0x4003c30	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4003c40	            0x3c28	                            cmp al, 0x28	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4003c42	            0x744c	                            je 0x4003c90	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4003c44	            0x3c25	                            cmp al, 0x25	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4003c46	            0x75e8	                           jne 0x4003c30	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4003c48	         0xfb64302	               movzx eax, byte [rbx + 2]	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4003c4c	        0x4883c301	                              add rbx, 1	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4003c50	        0x4883c301	                              add rbx, 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x4003c54	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003c56	            0x75e0	                           jne 0x4003c38	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003c58	     0xf1f84000000	                   nop dword [rax + rax]	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003c60	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003c63	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003c65	     0xf85e5000000	                           jne 0x4003d50	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003c6b	            0x31c0	                            xor eax, eax	       792	ref-filter.c	FUNCTION_30
0x4003c6d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       793	ref-filter.c	FUNCTION_30
0x4003c72	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       793	ref-filter.c	FUNCTION_30
0x4003c7b	     0xf8529010000	                           jne 0x4003daa	       793	ref-filter.c	FUNCTION_30
0x4003c81	        0x4883c420	                           add rsp, 0x20	       793	ref-filter.c	FUNCTION_30
0x4003c85	              0x5b	                                 pop rbx	       793	ref-filter.c	FUNCTION_30
0x4003c86	              0x5d	                                 pop rbp	       793	ref-filter.c	FUNCTION_30
0x4003c87	            0x415c	                                 pop r12	       793	ref-filter.c	FUNCTION_30
0x4003c89	              0xc3	                                     ret	       793	ref-filter.c	FUNCTION_30
0x4003c8a	    0x660f1f440000	                    nop word [rax + rax]	       793	ref-filter.c	FUNCTION_30
0x4003c90	      0xbe29000000	                           mov esi, 0x29	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x4003c95	          0x4889df	                            mov rdi, rbx	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x4003c98	    0x48c704240000	                      mov qword [rsp], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x4003ca0	    0x48c744240800	                  mov qword [rsp + 8], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x4003ca9	    0x48c744241000	               mov qword [rsp + 0x10], 0	       774	ref-filter.c	FUNCTION_30	FOR_1
0x4003cb2	      0xe800000000	                          call 0x4003cb7	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x4003cb7	          0x4885c0	                           test rax, rax	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x4003cba	          0x4989c4	                            mov r12, rax	       775	ref-filter.c	FUNCTION_30	FOR_1	CALL_2
0x4003cbd	     0xf84ae000000	                            je 0x4003d71	       778	ref-filter.c	FUNCTION_30	FOR_1	IF_1
0x4003cc3	        0x488d7302	                      lea rsi, [rbx + 2]	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003cc7	          0x4889e1	                            mov rcx, rsp	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003cca	          0x4c89e2	                            mov rdx, r12	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003ccd	          0x4889ef	                            mov rdi, rbp	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003cd0	      0xe8fbd5ffff	          call sym.parse_ref_filter_atom	       781	ref-filter.c	FUNCTION_30	FOR_1	CALL_4
0x4003cd5	            0x85c0	                           test eax, eax	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x4003cd7	     0xf88bc000000	                            js 0x4003d99	       782	ref-filter.c	FUNCTION_30	FOR_1	IF_2
0x4003cdd	            0x4898	                                    cdqe	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003cdf	      0x498d5c2401	                      lea rbx, [r12 + 1]	       784	ref-filter.c	FUNCTION_30	FOR_1
0x4003ce4	        0x488d0440	                  lea rax, [rax + rax*2]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003ce8	        0x48c1e005	                              shl rax, 5	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003cec	    0x480305000000	             add rax, qword [0x04003cf3]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003cf3	          0x488b30	                    mov rsi, qword [rax]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003cf6	      0xb800000000	                              mov eax, 0	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003cfb	            0xeb10	                           jmp 0x4003d0d	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003cfd	           0xf1f00	                         nop dword [rax]	       786	ref-filter.c	FUNCTION_30	FOR_1	IF_3	CALL_6
0x4003d00	        0x4883c601	                              add rsi, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003d04	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003d08	          0x3a56ff	                  cmp dl, byte [rsi - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003d0b	            0x751c	                           jne 0x4003d29	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4003d0d	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003d10	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003d12	            0x75ec	                           jne 0x4003d00	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4003d14	      0xbf00000000	                              mov edi, 0	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003d19	      0xb906000000	                              mov ecx, 6	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003d1e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003d20	           0xf95c0	                                setne al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003d23	           0xfb6c0	                           movzx eax, al	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003d26	          0x894510	            mov dword [rbp + 0x10], eax 	       787	ref-filter.c	FUNCTION_30	FOR_1	CALL_7
0x4003d29	          0x4889e7	                            mov rdi, rsp	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x4003d2c	      0xe800000000	                          call 0x4003d31	       788	ref-filter.c	FUNCTION_30	FOR_1	CALL_8
0x4003d31	    0x410fb6442401	               movzx eax, byte [r12 + 1]	       773	ref-filter.c	FUNCTION_30	FOR_1	CALL_1
0x4003d37	            0x84c0	                             test al, al	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003d39	     0xf85f9feffff	                           jne 0x4003c38	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4003d3f	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d42	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d44	     0xf8421ffffff	                            je 0x4003c6b	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d4a	    0x660f1f440000	                    nop word [rax + rax]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d50	          0x8b750c	              mov esi, dword [rbp + 0xc]	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d53	      0xbf01000000	                              mov edi, 1	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d58	      0xe800000000	                          call 0x4003d5d	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d5d	            0x85c0	                           test eax, eax	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d5f	     0xf8506ffffff	                           jne 0x4003c6b	       790	ref-filter.c	FUNCTION_30	IF_4	CALL_9
0x4003d65	    0xc74510000000	               mov dword [rbp + 0x10], 0	       791	ref-filter.c	FUNCTION_30	IF_4
0x4003d6c	      0xe9fcfeffff	                           jmp 0x4003c6d	       791	ref-filter.c	FUNCTION_30	IF_4
0x4003d71	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003d76	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003d7b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4003d7d	      0xe800000000	                          call 0x4003d82	        54	gettext.h	FUNCTION_93
0x4003d82	          0x4889de	                            mov rsi, rbx	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4003d85	          0x4889c7	                            mov rdi, rax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4003d88	            0x31c0	                            xor eax, eax	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4003d8a	      0xe800000000	                          call 0x4003d8f	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4003d8f	      0xb8ffffffff	                     mov eax, 0xffffffff	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4003d94	      0xe9d4feffff	                           jmp 0x4003c6d	       779	ref-filter.c	FUNCTION_30	FOR_1	CALL_3
0x4003d99	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4003d9e	      0xbf00000000	                              mov edi, 0	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4003da3	            0x31c0	                            xor eax, eax	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4003da5	      0xe800000000	                          call 0x4003daa	       783	ref-filter.c	FUNCTION_30	FOR_1	CALL_5
0x4003daa	      0xe800000000	                          call 0x4003daf	       793	ref-filter.c	FUNCTION_30
else_atom_handler	DO,0:ELSE,0:CALL,7:WHILE,0:FOR,0:SWITCH,0:IF,4:functions,0	57
0x40015c0	            0x4154	                                push r12	       696	ref-filter.c	FUNCTION_27
0x40015c2	              0x55	                                push rbp	       696	ref-filter.c	FUNCTION_27
0x40015c3	          0x4989d4	                            mov r12, rdx	       696	ref-filter.c	FUNCTION_27
0x40015c6	              0x53	                                push rbx	       696	ref-filter.c	FUNCTION_27
0x40015c7	        0x488b5e08	                mov rbx, qword [rsi + 8]	       697	ref-filter.c	FUNCTION_27
0x40015cb	    0x48817b200000	               cmp qword [rbx + 0x20], 0	       700	ref-filter.c	FUNCTION_27	IF_1
0x40015d3	            0x742b	                            je 0x4001600	       700	ref-filter.c	FUNCTION_27	IF_1
0x40015d5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40015da	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40015df	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x40015e1	      0xe800000000	                          call 0x40015e6	        54	gettext.h	FUNCTION_93
0x40015e6	              0x5b	                                 pop rbx	       713	ref-filter.c	FUNCTION_27
0x40015e7	          0x4c89e7	                            mov rdi, r12	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40015ea	          0x4889c2	                            mov rdx, rax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40015ed	      0xbeffffffff	                     mov esi, 0xffffffff	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40015f2	              0x5d	                                 pop rbp	       713	ref-filter.c	FUNCTION_27
0x40015f3	            0x415c	                                 pop r12	       713	ref-filter.c	FUNCTION_27
0x40015f5	            0x31c0	                            xor eax, eax	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40015f7	      0xe964f4ffff	    jmp sym.strbuf_addf_ret.constprop.38	       707	ref-filter.c	FUNCTION_27	CALL_6
0x40015fc	         0xf1f4000	                         nop dword [rax]	       707	ref-filter.c	FUNCTION_27	CALL_6
0x4001600	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       701	ref-filter.c	FUNCTION_27	IF_1
0x4001604	          0x4885d2	                           test rdx, rdx	       702	ref-filter.c	FUNCTION_27	IF_2
0x4001607	            0x74cc	                            je 0x40015d5	       702	ref-filter.c	FUNCTION_27	IF_2
0x4001609	         0xfb64210	           movzx eax, byte [rdx + 0x10] 	       704	ref-filter.c	FUNCTION_27	IF_3
0x400160d	            0xa801	                              test al, 1	       704	ref-filter.c	FUNCTION_27	IF_3
0x400160f	            0x745f	                            je 0x4001670	       704	ref-filter.c	FUNCTION_27	IF_3
0x4001611	            0xa802	                              test al, 2	       706	ref-filter.c	FUNCTION_27	IF_4
0x4001613	            0x754b	                           jne 0x4001660	       706	ref-filter.c	FUNCTION_27	IF_4
0x4001615	          0x83c802	                               or eax, 2	       708	ref-filter.c	FUNCTION_27
0x4001618	          0x4889f5	                            mov rbp, rsi	       708	ref-filter.c	FUNCTION_27
0x400161b	      0xbf01000000	                              mov edi, 1	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4001620	          0x884210	               mov byte [rdx + 0x10], al	       708	ref-filter.c	FUNCTION_27
0x4001623	      0xbe30000000	                           mov esi, 0x30	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4001628	      0xe800000000	                          call 0x400162d	       559	ref-filter.c	FUNCTION_19	CALL_1
0x400162d	        0x488d7808	                      lea rdi, [rax + 8]	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4001631	            0x31f6	                            xor esi, esi	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4001633	          0x4989c4	                            mov r12, rax	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4001636	      0xe800000000	                          call 0x400163b	       561	ref-filter.c	FUNCTION_19	CALL_2
0x400163b	        0x488b4508	                mov rax, qword [rbp + 8]	       562	ref-filter.c	FUNCTION_19
0x400163f	        0x49890424	                    mov qword [r12], rax	       562	ref-filter.c	FUNCTION_19
0x4001643	        0x4c896508	                mov qword [rbp + 8], r12	       563	ref-filter.c	FUNCTION_19
0x4001647	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       710	ref-filter.c	FUNCTION_27
0x400164b	      0x4989442428	             mov qword [r12 + 0x28], rax	       710	ref-filter.c	FUNCTION_27
0x4001650	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       711	ref-filter.c	FUNCTION_27
0x4001654	      0x4989442420	             mov qword [r12 + 0x20], rax	       711	ref-filter.c	FUNCTION_27
0x4001659	            0x31c0	                            xor eax, eax	       713	ref-filter.c	FUNCTION_27
0x400165b	              0x5b	                                 pop rbx	       713	ref-filter.c	FUNCTION_27
0x400165c	              0x5d	                                 pop rbp	       713	ref-filter.c	FUNCTION_27
0x400165d	            0x415c	                                 pop r12	       713	ref-filter.c	FUNCTION_27
0x400165f	              0xc3	                                     ret	       713	ref-filter.c	FUNCTION_27
0x4001660	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4001665	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400166a	      0xe970ffffff	                           jmp 0x40015df	        54	gettext.h	FUNCTION_93
0x400166f	              0x90	                                     nop	        54	gettext.h	FUNCTION_93
0x4001670	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4001675	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400167a	      0xe960ffffff	                           jmp 0x40015df	        54	gettext.h	FUNCTION_93
align_atom_handler	DO,0:ELSE,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	24
0x4000d20	            0x4154	                                push r12	       591	ref-filter.c	FUNCTION_22
0x4000d22	              0x55	                                push rbp	       591	ref-filter.c	FUNCTION_22
0x4000d23	          0x4989fc	                            mov r12, rdi	       591	ref-filter.c	FUNCTION_22
0x4000d26	              0x53	                                push rbx	       591	ref-filter.c	FUNCTION_22
0x4000d27	          0x4889f5	                            mov rbp, rsi	       591	ref-filter.c	FUNCTION_22
0x4000d2a	      0xbf01000000	                              mov edi, 1	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000d2f	      0xbe30000000	                           mov esi, 0x30	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000d34	      0xe800000000	                          call 0x4000d39	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000d39	        0x488d7808	                      lea rdi, [rax + 8]	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4000d3d	            0x31f6	                            xor esi, esi	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4000d3f	          0x4889c3	                            mov rbx, rax	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000d42	      0xe800000000	                          call 0x4000d47	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4000d47	        0x488b4508	                mov rax, qword [rbp + 8]	       562	ref-filter.c	FUNCTION_19
0x4000d4b	          0x488903	                    mov qword [rbx], rax	       562	ref-filter.c	FUNCTION_19
0x4000d4e	        0x48895d08	                mov qword [rbp + 8], rbx	       563	ref-filter.c	FUNCTION_19
0x4000d52	      0x498b442418	            mov rax, qword [r12 + 0x18] 	       597	ref-filter.c	FUNCTION_22
0x4000d57	    0x48c743200000	               mov qword [rbx + 0x20], 0	       596	ref-filter.c	FUNCTION_22
0x4000d5f	        0x4883c010	                           add rax, 0x10	       597	ref-filter.c	FUNCTION_22
0x4000d63	        0x48894328	             mov qword [rbx + 0x28], rax	       597	ref-filter.c	FUNCTION_22
0x4000d67	            0x31c0	                            xor eax, eax	       599	ref-filter.c	FUNCTION_22
0x4000d69	              0x5b	                                 pop rbx	       599	ref-filter.c	FUNCTION_22
0x4000d6a	              0x5d	                                 pop rbp	       599	ref-filter.c	FUNCTION_22
0x4000d6b	            0x415c	                                 pop r12	       599	ref-filter.c	FUNCTION_22
0x4000d6d	              0xc3	                                     ret	       599	ref-filter.c	FUNCTION_22
refname_atom_parser	DO,0:ELSE,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	23
0x4001870	          0x4885d2	                           test rdx, rdx	       137	ref-filter.c	FUNCTION_4	IF_1
0x4001873	          0x4989f0	                             mov r8, rsi	       291	ref-filter.c	FUNCTION_11
0x4001876	          0x4889d0	                            mov rax, rdx	       291	ref-filter.c	FUNCTION_11
0x4001879	          0x4989c9	                             mov r9, rcx	       291	ref-filter.c	FUNCTION_11
0x400187c	            0x743a	                            je 0x40018b8	       137	ref-filter.c	FUNCTION_4	IF_1
0x400187e	      0xbf00000000	                              mov edi, 0	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001883	      0xb906000000	                              mov ecx, 6	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001888	          0x4889d6	                            mov rsi, rdx	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x400188b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x400188d	            0x7419	                            je 0x40018a8	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x400188f	          0x498b10	                     mov rdx, qword [r8]	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001892	        0x498d7810	                    lea rdi, [r8 + 0x10]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x4001896	          0x4c89c9	                             mov rcx, r9	       292	ref-filter.c	FUNCTION_11	CALL_1
0x4001899	          0x4889c6	                            mov rsi, rax	       292	ref-filter.c	FUNCTION_11	CALL_1
0x400189c	      0xe9dffdffff	jmp sym.refname_atom_parser_internal.part.7	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40018a1	     0xf1f80000000	                         nop dword [rax]	       292	ref-filter.c	FUNCTION_11	CALL_1
0x40018a8	    0x41c740100100	                mov dword [r8 + 0x10], 1	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x40018b0	            0x31c0	                            xor eax, eax	       293	ref-filter.c	FUNCTION_11
0x40018b2	              0xc3	                                     ret	       293	ref-filter.c	FUNCTION_11
0x40018b3	       0xf1f440000	                   nop dword [rax + rax]	       293	ref-filter.c	FUNCTION_11
0x40018b8	    0xc74610000000	               mov dword [rsi + 0x10], 0	       138	ref-filter.c	FUNCTION_4	IF_1
0x40018bf	            0x31c0	                            xor eax, eax	       293	ref-filter.c	FUNCTION_11
0x40018c1	              0xc3	                                     ret	       293	ref-filter.c	FUNCTION_11
parse_ref_filter_atom	DO,0:ELSE,0:CALL,13:WHILE,0:FOR,2:SWITCH,0:IF,10:functions,0	193
0x40012d0	            0x4157	                                push r15	       455	ref-filter.c	FUNCTION_16
0x40012d2	            0x4156	                                push r14	       455	ref-filter.c	FUNCTION_16
0x40012d4	          0x4989f7	                            mov r15, rsi	       455	ref-filter.c	FUNCTION_16
0x40012d7	            0x4155	                                push r13	       455	ref-filter.c	FUNCTION_16
0x40012d9	            0x4154	                                push r12	       455	ref-filter.c	FUNCTION_16
0x40012db	              0x55	                                push rbp	       455	ref-filter.c	FUNCTION_16
0x40012dc	              0x53	                                push rbx	       455	ref-filter.c	FUNCTION_16
0x40012dd	        0x4883ec38	                           sub rsp, 0x38	       455	ref-filter.c	FUNCTION_16
0x40012e1	          0x803e2a	                    cmp byte [rsi], 0x2a	       461	ref-filter.c	FUNCTION_16	IF_1
0x40012e4	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       455	ref-filter.c	FUNCTION_16
0x40012e9	      0x4889542410	             mov qword [rsp + 0x10], rdx	       455	ref-filter.c	FUNCTION_16
0x40012ee	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       455	ref-filter.c	FUNCTION_16
0x40012f3	     0xf852f020000	                           jne 0x4001528	       461	ref-filter.c	FUNCTION_16	IF_1
0x40012f9	          0x4839d6	                            cmp rsi, rdx	       461	ref-filter.c	FUNCTION_16	IF_1
0x40012fc	     0xf8326020000	                           jae 0x4001528	       461	ref-filter.c	FUNCTION_16	IF_1
0x4001302	        0x488d4601	                      lea rax, [rsi + 1]	       462	ref-filter.c	FUNCTION_16	IF_1
0x4001306	        0x48890424	                    mov qword [rsp], rax	       462	ref-filter.c	FUNCTION_16	IF_1
0x400130a	          0x4889d0	                            mov rax, rdx	       462	ref-filter.c	FUNCTION_16	IF_1
0x400130d	        0x48390424	                    cmp qword [rsp], rax	       463	ref-filter.c	FUNCTION_16	IF_2
0x4001311	     0xf8324020000	                           jae 0x400153b	       463	ref-filter.c	FUNCTION_16	IF_2
0x4001317	    0x448b35000000	           mov r14d, dword [0x0400131e] 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400131e	          0x4989c5	                            mov r13, rax	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001321	            0x31db	                            xor ebx, ebx	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001323	          0x4d29fd	                            sub r13, r15	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001326	    0x488b2d000000	            mov rbp, qword [0x0400132d] 	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400132d	          0x4585f6	                         test r14d, r14d	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001330	            0x7f12	                            jg 0x4001344	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001332	            0xeb44	                           jmp 0x4001378	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001334	         0xf1f4000	                         nop dword [rax]	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001338	          0x83c301	                              add ebx, 1	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400133b	        0x4883c560	                           add rbp, 0x60	       468	ref-filter.c	FUNCTION_16	FOR_1
0x400133f	          0x4439f3	                           cmp ebx, r14d	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001342	            0x7434	                            je 0x4001378	       468	ref-filter.c	FUNCTION_16	FOR_1
0x4001344	        0x4c8b6500	                    mov r12, qword [rbp]	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4001348	          0x4c89e7	                            mov rdi, r12	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x400134b	      0xe800000000	                          call 0x4001350	       469	ref-filter.c	FUNCTION_16	FOR_1	CALL_3
0x4001350	            0x4898	                                    cdqe	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001352	          0x4c39e8	                            cmp rax, r13	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001355	            0x75e1	                           jne 0x4001338	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001357	          0x4c89ea	                            mov rdx, r13	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400135a	          0x4c89fe	                            mov rsi, r15	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400135d	          0x4c89e7	                            mov rdi, r12	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001360	      0xe800000000	                          call 0x4001365	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001365	            0x85c0	                           test eax, eax	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001367	            0x75cf	                           jne 0x4001338	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001369	          0x4189de	                           mov r14d, ebx	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x400136c	      0xe99f010000	                           jmp 0x4001510	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001371	     0xf1f80000000	                         nop dword [rax]	       470	ref-filter.c	FUNCTION_16	FOR_1	IF_3	CALL_4
0x4001378	        0x4c8b2424	                    mov r12, qword [rsp]	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400137c	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001381	      0xbe3a000000	                           mov esi, 0x3a	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001386	    0x41bd00000000	                             mov r13d, 0	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400138c	          0x4c29e3	                            sub rbx, r12	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400138f	          0x4c89e7	                            mov rdi, r12	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001392	          0x4889da	                            mov rdx, rbx	       480	ref-filter.c	FUNCTION_16	CALL_5
0x4001395	      0xe800000000	                          call 0x400139a	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400139a	          0x4889c5	                            mov rbp, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x400139d	      0x4889442420	             mov qword [rsp + 0x20], rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x40013a2	          0x4c29e5	                            sub rbp, r12	       480	ref-filter.c	FUNCTION_16	CALL_5
0x40013a5	          0x4885c0	                           test rax, rax	       480	ref-filter.c	FUNCTION_16	CALL_5
0x40013a8	      0xb807000000	                              mov eax, 7	       481	ref-filter.c	FUNCTION_16
0x40013ad	        0x480f44eb	                          cmove rbp, rbx	       481	ref-filter.c	FUNCTION_16
0x40013b1	            0x31db	                            xor ebx, ebx	       481	ref-filter.c	FUNCTION_16
0x40013b3	          0x4863cd	                         movsxd rcx, ebp	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013b6	      0x48894c2408	                mov qword [rsp + 8], rcx	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013bb	            0xeb1c	                           jmp 0x40013d9	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013bd	           0xf1f00	                         nop dword [rax]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013c0	          0x83c301	                              add ebx, 1	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40013c3	        0x4983c518	                           add r13, 0x18	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40013c7	          0x83fb27	                           cmp ebx, 0x27	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40013ca	     0xf8480010000	                            je 0x4001550	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40013d0	        0x498b7d00	                    mov rdi, qword [r13]	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40013d4	      0xe800000000	                          call 0x40013d9	       484	ref-filter.c	FUNCTION_16	FOR_2
0x40013d9	            0x39c5	                            cmp ebp, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013db	            0x75e3	                           jne 0x40013c0	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013dd	        0x4d8b6500	                    mov r12, qword [r13]	       485	ref-filter.c	FUNCTION_16	FOR_2	CALL_6
0x40013e1	      0x488b542408	                mov rdx, qword [rsp + 8]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013e6	        0x488b3424	                    mov rsi, qword [rsp]	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013ea	          0x4c89e7	                            mov rdi, r12	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013ed	      0xe800000000	                          call 0x40013f2	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013f2	            0x85c0	                           test eax, eax	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013f4	            0x75ca	                           jne 0x40013c0	       486	ref-filter.c	FUNCTION_16	FOR_2	IF_4	CALL_7
0x40013f6	        0x418d5601	                      lea edx, [r14 + 1]	       496	ref-filter.c	FUNCTION_16
0x40013fa	    0x48b8aaaaaaaa	           movabs rax, 0x2aaaaaaaaaaaaaa	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4001404	    0x891500000000	            mov dword [0x0400140a], edx 	       496	ref-filter.c	FUNCTION_16
0x400140a	          0x4863d2	                         movsxd rdx, edx	       497	ref-filter.c	FUNCTION_16
0x400140d	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4001410	     0xf8792010000	                            ja 0x40015a8	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4001416	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       798	git-compat-util.h	FUNCTION_120
0x400141a	    0x488b3d000000	            mov rdi, qword [0x04001421] 	       497	ref-filter.c	FUNCTION_16
0x4001421	          0x4863db	                         movsxd rbx, ebx	       499	ref-filter.c	FUNCTION_16
0x4001424	        0x48c1e205	                              shl rdx, 5	       798	git-compat-util.h	FUNCTION_120
0x4001428	          0x4889d6	                            mov rsi, rdx	       497	ref-filter.c	FUNCTION_16
0x400142b	          0x4889d5	                            mov rbp, rdx	       798	git-compat-util.h	FUNCTION_120
0x400142e	      0xe800000000	                          call 0x4001433	       497	ref-filter.c	FUNCTION_16
0x4001433	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4001438	        0x4883ed60	                           sub rbp, 0x60	       498	ref-filter.c	FUNCTION_16	CALL_10
0x400143c	          0x4c89ff	                            mov rdi, r15	       498	ref-filter.c	FUNCTION_16	CALL_10
0x400143f	        0x4c8d2c28	                    lea r13, [rax + rbp]	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4001443	    0x488905000000	            mov qword [0x0400144a], rax 	       497	ref-filter.c	FUNCTION_16
0x400144a	          0x4c29fe	                            sub rsi, r15	       498	ref-filter.c	FUNCTION_16	CALL_10
0x400144d	      0xe800000000	                          call 0x4001452	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4001452	        0x49894500	                    mov qword [r13], rax	       498	ref-filter.c	FUNCTION_16	CALL_10
0x4001456	        0x488d045b	                  lea rax, [rbx + rbx*2]	       499	ref-filter.c	FUNCTION_16
0x400145a	          0x4889ee	                            mov rsi, rbp	       499	ref-filter.c	FUNCTION_16
0x400145d	    0x480335000000	             add rsi, qword [0x04001464]	       499	ref-filter.c	FUNCTION_16
0x4001464	    0x8b04c5000000	                  mov eax, dword [rax*8]	       499	ref-filter.c	FUNCTION_16
0x400146b	          0x894608	                mov dword [rsi + 8], eax	       499	ref-filter.c	FUNCTION_16
0x400146e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       500	ref-filter.c	FUNCTION_16	IF_6
0x4001473	          0x4885c0	                           test rax, rax	       500	ref-filter.c	FUNCTION_16	IF_6
0x4001476	            0x7422	                            je 0x400149a	       500	ref-filter.c	FUNCTION_16	IF_6
0x4001478	          0x4989c5	                            mov r13, rax	       501	ref-filter.c	FUNCTION_16	IF_6
0x400147b	          0x488b06	                    mov rax, qword [rsi]	       501	ref-filter.c	FUNCTION_16	IF_6
0x400147e	          0x4d29fd	                            sub r13, r15	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001481	      0x4a8d442801	                lea rax, [rax + r13 + 1]	       501	ref-filter.c	FUNCTION_16	IF_6
0x4001486	          0x803800	                       cmp byte [rax], 0	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4001489	          0x4889c1	                            mov rcx, rax	       501	ref-filter.c	FUNCTION_16	IF_6
0x400148c	      0xb800000000	                              mov eax, 0	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4001491	        0x480f45c1	                         cmovne rax, rcx	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x4001495	      0x4889442420	             mov qword [rsp + 0x20], rax	       507	ref-filter.c	FUNCTION_16	IF_6	IF_7
0x400149a	        0x488d7e18	                   lea rdi, [rsi + 0x18]	        90	string3.h	FUNCTION_136	CALL_6
0x400149e	            0x89f0	                            mov eax, esi	        90	string3.h	FUNCTION_136	CALL_6
0x40014a0	    0x48c746100000	               mov qword [rsi + 0x10], 0	        90	string3.h	FUNCTION_136	CALL_6
0x40014a8	    0x48c746580000	               mov qword [rsi + 0x58], 0	        90	string3.h	FUNCTION_136	CALL_6
0x40014b0	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_136	CALL_6
0x40014b4	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_136	CALL_6
0x40014b6	          0x8d4860	                   lea ecx, [rax + 0x60]	        90	string3.h	FUNCTION_136	CALL_6
0x40014b9	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_136	CALL_6
0x40014bb	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_136	CALL_6
0x40014be	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_136	CALL_6
0x40014c1	        0x488d045b	                  lea rax, [rbx + rbx*2]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014c5	    0x488b04c50000	                  mov rax, qword [rax*8]	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014cd	          0x4885c0	                           test rax, rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014d0	            0x7419	                            je 0x40014eb	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014d2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014d7	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014dc	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014e1	            0xffd0	                                call rax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014e3	            0x85c0	                           test eax, eax	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014e5	     0xf85b2000000	                           jne 0x400159d	       511	ref-filter.c	FUNCTION_16	IF_8	CALL_12
0x40014eb	        0x41803f2a	                    cmp byte [r15], 0x2a	       513	ref-filter.c	FUNCTION_16	IF_9
0x40014ef	     0xf8499000000	                            je 0x400158e	       513	ref-filter.c	FUNCTION_16	IF_9
0x40014f5	      0xbf00000000	                              mov edi, 0	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x40014fa	      0xb907000000	                              mov ecx, 7	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x40014ff	          0x4c89e6	                            mov rsi, r12	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001502	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001504	            0x750a	                           jne 0x4001510	       515	ref-filter.c	FUNCTION_16	IF_10	CALL_13
0x4001506	    0xc70500000000	               mov dword [0x04001510], 1	       516	ref-filter.c	FUNCTION_16	IF_10
0x4001510	        0x4883c438	                           add rsp, 0x38	       518	ref-filter.c	FUNCTION_16
0x4001514	          0x4489f0	                           mov eax, r14d	       518	ref-filter.c	FUNCTION_16
0x4001517	              0x5b	                                 pop rbx	       518	ref-filter.c	FUNCTION_16
0x4001518	              0x5d	                                 pop rbp	       518	ref-filter.c	FUNCTION_16
0x4001519	            0x415c	                                 pop r12	       518	ref-filter.c	FUNCTION_16
0x400151b	            0x415d	                                 pop r13	       518	ref-filter.c	FUNCTION_16
0x400151d	            0x415e	                                 pop r14	       518	ref-filter.c	FUNCTION_16
0x400151f	            0x415f	                                 pop r15	       518	ref-filter.c	FUNCTION_16
0x4001521	              0xc3	                                     ret	       518	ref-filter.c	FUNCTION_16
0x4001522	    0x660f1f440000	                    nop word [rax + rax]	       518	ref-filter.c	FUNCTION_16
0x4001528	        0x4c893c24	                    mov qword [rsp], r15	       518	ref-filter.c	FUNCTION_16
0x400152c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       518	ref-filter.c	FUNCTION_16
0x4001531	        0x48390424	                    cmp qword [rsp], rax	       463	ref-filter.c	FUNCTION_16	IF_2
0x4001535	     0xf82dcfdffff	                            jb 0x4001317	       463	ref-filter.c	FUNCTION_16	IF_2
0x400153b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4001540	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4001545	            0xeb13	                           jmp 0x400155a	        54	gettext.h	FUNCTION_93
0x4001547	    0x660f1f840000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_93
0x4001550	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4001555	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400155a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x400155c	      0xe800000000	                          call 0x4001561	        54	gettext.h	FUNCTION_93
0x4001561	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001566	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400156b	        0x4883c438	                           add rsp, 0x38	       518	ref-filter.c	FUNCTION_16
0x400156f	              0x5b	                                 pop rbx	       518	ref-filter.c	FUNCTION_16
0x4001570	          0x4d89f8	                             mov r8, r15	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001573	          0x4889c2	                            mov rdx, rax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001576	      0xbeffffffff	                     mov esi, 0xffffffff	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400157b	              0x5d	                                 pop rbp	       518	ref-filter.c	FUNCTION_16
0x400157c	          0x4c29f9	                            sub rcx, r15	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400157f	            0x31c0	                            xor eax, eax	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x4001581	            0x415c	                                 pop r12	       518	ref-filter.c	FUNCTION_16
0x4001583	            0x415d	                                 pop r13	       518	ref-filter.c	FUNCTION_16
0x4001585	            0x415e	                                 pop r14	       518	ref-filter.c	FUNCTION_16
0x4001587	            0x415f	                                 pop r15	       518	ref-filter.c	FUNCTION_16
0x4001589	      0xe9d2f4ffff	    jmp sym.strbuf_addf_ret.constprop.38	       491	ref-filter.c	FUNCTION_16	IF_5	CALL_9
0x400158e	    0xc70500000000	               mov dword [0x04001598], 1	       514	ref-filter.c	FUNCTION_16	IF_9
0x4001598	      0xe958ffffff	                           jmp 0x40014f5	       514	ref-filter.c	FUNCTION_16	IF_9
0x400159d	    0x41beffffffff	                    mov r14d, 0xffffffff	       512	ref-filter.c	FUNCTION_16	IF_8
0x40015a3	      0xe968ffffff	                           jmp 0x4001510	       512	ref-filter.c	FUNCTION_16	IF_8
0x40015a8	      0xbe60000000	                           mov esi, 0x60	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x40015ad	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x40015b2	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x40015b4	      0xe800000000	                          call 0x40015b9	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
align_atom_parser	DO,0:ELSE,4:CALL,22:WHILE,0:FOR,1:SWITCH,0:IF,8:functions,0	223
0x4002c30	            0x4157	                                push r15	       308	ref-filter.c	FUNCTION_13
0x4002c32	            0x4156	                                push r14	       308	ref-filter.c	FUNCTION_13
0x4002c34	            0x4155	                                push r13	       308	ref-filter.c	FUNCTION_13
0x4002c36	            0x4154	                                push r12	       308	ref-filter.c	FUNCTION_13
0x4002c38	              0x55	                                push rbp	       308	ref-filter.c	FUNCTION_13
0x4002c39	              0x53	                                push rbx	       308	ref-filter.c	FUNCTION_13
0x4002c3a	        0x4883ec58	                           sub rsp, 0x58	       308	ref-filter.c	FUNCTION_13
0x4002c3e	    0x64488b042528	                mov rax, qword fs:[0x28]	       308	ref-filter.c	FUNCTION_13
0x4002c47	      0x4889442448	             mov qword [rsp + 0x48], rax	       308	ref-filter.c	FUNCTION_13
0x4002c4c	            0x31c0	                            xor eax, eax	       308	ref-filter.c	FUNCTION_13
0x4002c4e	      0x804c243001	                 or byte [rsp + 0x30], 1	       310	ref-filter.c	FUNCTION_13
0x4002c53	          0x4885d2	                           test rdx, rdx	       314	ref-filter.c	FUNCTION_13	IF_1
0x4002c56	      0x48894c2408	                mov qword [rsp + 8], rcx	       308	ref-filter.c	FUNCTION_13
0x4002c5b	    0x48c744242000	               mov qword [rsp + 0x20], 0	       310	ref-filter.c	FUNCTION_13
0x4002c64	    0xc74424280000	               mov dword [rsp + 0x28], 0	       310	ref-filter.c	FUNCTION_13
0x4002c6c	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       310	ref-filter.c	FUNCTION_13
0x4002c74	    0x48c744243800	               mov qword [rsp + 0x38], 0	       310	ref-filter.c	FUNCTION_13
0x4002c7d	     0xf84d1020000	                            je 0x4002f54	       314	ref-filter.c	FUNCTION_13	IF_1
0x4002c83	          0x4989f4	                            mov r12, rsi	       314	ref-filter.c	FUNCTION_13	IF_1
0x4002c86	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4002c8b	          0x4889d6	                            mov rsi, rdx	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4002c8e	    0x41c744241000	               mov dword [r12 + 0x10], 0	       317	ref-filter.c	FUNCTION_13
0x4002c97	      0xb9ffffffff	                     mov ecx, 0xffffffff	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4002c9c	      0xba2c000000	                           mov edx, 0x2c	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4002ca1	      0xe800000000	                          call 0x4002ca6	       319	ref-filter.c	FUNCTION_13	CALL_3
0x4002ca6	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002cab	          0x4531ff	                          xor r15d, r15d	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002cae	          0x4531ed	                          xor r13d, r13d	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002cb1	      0xbdffffffff	                     mov ebp, 0xffffffff	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002cb6	          0x4585c9	                           test r9d, r9d	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002cb9	     0xf84bf020000	                            je 0x4002f7e	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002cbf	              0x90	                                     nop	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002cc0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002cc5	      0xba00000000	                              mov edx, 0	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002cca	        0x4e8b3438	              mov r14, qword [rax + r15]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002cce	          0x4c89f3	                            mov rbx, r14	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002cd1	            0xeb12	                           jmp 0x4002ce5	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002cd3	       0xf1f440000	                   nop dword [rax + rax]	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002cd8	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002cdc	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002ce0	          0x3a4bff	                  cmp cl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002ce3	            0x7563	                           jne 0x4002d48	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002ce5	           0xfb60a	                   movzx ecx, byte [rdx]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002ce8	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002cea	            0x75ec	                           jne 0x4002cd8	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002cec	      0xb906000000	                              mov ecx, 6	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002cf1	      0xbf00000000	                              mov edi, 0	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002cf6	          0x4889de	                            mov rsi, rbx	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002cf9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002cfb	      0xb802000000	                              mov eax, 2	       298	ref-filter.c	FUNCTION_12	IF_1
0x4002d00	           0xf97c1	                                 seta cl	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002d03	           0xf92c2	                                 setb dl	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002d06	            0x38d1	                              cmp cl, dl	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002d08	     0xf8552010000	                           jne 0x4002e60	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002d0e	      0x4189442410	             mov dword [r12 + 0x10], eax	       331	ref-filter.c	FUNCTION_13	FOR_1	IF_2
0x4002d13	        0x4183c501	                             add r13d, 1	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002d17	        0x4983c710	                           add r15, 0x10	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002d1b	          0x4539cd	                           cmp r13d, r9d	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002d1e	            0x72a0	                            jb 0x4002cc0	       320	ref-filter.c	FUNCTION_13	FOR_1
0x4002d20	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       349	ref-filter.c	FUNCTION_13	IF_8
0x4002d23	     0xf8455020000	                            je 0x4002f7e	       349	ref-filter.c	FUNCTION_13	IF_8
0x4002d29	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4002d2e	      0x41896c2414	             mov dword [r12 + 0x14], ebp	       353	ref-filter.c	FUNCTION_13
0x4002d33	            0x31f6	                            xor esi, esi	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4002d35	      0xe800000000	                          call 0x4002d3a	       354	ref-filter.c	FUNCTION_13	CALL_22
0x4002d3a	            0x31c0	                            xor eax, eax	       355	ref-filter.c	FUNCTION_13
0x4002d3c	      0xe97d010000	                           jmp 0x4002ebe	       355	ref-filter.c	FUNCTION_13
0x4002d41	     0xf1f80000000	                         nop dword [rax]	       355	ref-filter.c	FUNCTION_13
0x4002d48	          0x4c89f3	                            mov rbx, r14	       321	ref-filter.c	FUNCTION_13	FOR_1
0x4002d4b	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002d50	            0xeb13	                           jmp 0x4002d65	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002d52	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002d58	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002d5c	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002d60	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002d63	            0x757b	                           jne 0x4002de0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4002d65	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002d68	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002d6a	            0x75ec	                           jne 0x4002d58	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4002d6c	      0xe800000000	                          call 0x4002d71	      1014	git-compat-util.h	FUNCTION_128
0x4002d71	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002d76	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_128
0x4002d7c	          0x4889df	                            mov rdi, rbx	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002d7f	          0x4989c6	                            mov r14, rax	      1014	git-compat-util.h	FUNCTION_128
0x4002d82	      0xe800000000	                          call 0x4002d87	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002d87	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002d8a	     0xf8551010000	                           jne 0x4002ee1	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002d90	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002d95	      0xba0a000000	                            mov edx, 0xa	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002d9a	          0x4889df	                            mov rdi, rbx	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002d9d	      0xe800000000	                          call 0x4002da2	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002da2	          0x418b0e	                    mov ecx, dword [r14]	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002da5	            0x85c9	                           test ecx, ecx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002da7	     0xf8534010000	                           jne 0x4002ee1	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002dad	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002db2	          0x803a00	                       cmp byte [rdx], 0	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002db5	     0xf8526010000	                           jne 0x4002ee1	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002dbb	          0x4839d3	                            cmp rbx, rdx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002dbe	     0xf841d010000	                            je 0x4002ee1	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002dc4	            0x89c2	                            mov edx, eax	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002dc6	          0x4839d0	                            cmp rax, rdx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002dc9	     0xf8512010000	                           jne 0x4002ee1	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002dcf	            0x89c5	                            mov ebp, eax	      1021	git-compat-util.h	FUNCTION_128
0x4002dd1	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	      1021	git-compat-util.h	FUNCTION_128
0x4002dd6	      0xe938ffffff	                           jmp 0x4002d13	      1021	git-compat-util.h	FUNCTION_128
0x4002ddb	       0xf1f440000	                   nop dword [rax + rax]	      1021	git-compat-util.h	FUNCTION_128
0x4002de0	      0xe800000000	                          call 0x4002de5	      1014	git-compat-util.h	FUNCTION_128
0x4002de5	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002dea	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_128
0x4002df0	          0x4c89f7	                            mov rdi, r14	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002df3	          0x4889c3	                            mov rbx, rax	      1014	git-compat-util.h	FUNCTION_128
0x4002df6	      0xe800000000	                          call 0x4002dfb	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002dfb	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002dfe	            0x752e	                           jne 0x4002e2e	      1016	git-compat-util.h	FUNCTION_128	IF_1	CALL_1
0x4002e00	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002e05	      0xba0a000000	                            mov edx, 0xa	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002e0a	          0x4c89f7	                            mov rdi, r14	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002e0d	      0xe800000000	                          call 0x4002e12	      1018	git-compat-util.h	FUNCTION_128	CALL_2
0x4002e12	            0x8b13	                    mov edx, dword [rbx]	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e14	            0x85d2	                           test edx, edx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e16	            0x7516	                           jne 0x4002e2e	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e18	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e1d	          0x803a00	                       cmp byte [rdx], 0	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e20	            0x750c	                           jne 0x4002e2e	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e22	          0x4939d6	                            cmp r14, rdx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e25	            0x7407	                            je 0x4002e2e	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e27	            0x89c2	                            mov edx, eax	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e29	          0x4839d0	                            cmp rax, rdx	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e2c	            0x74a1	                            je 0x4002dcf	      1019	git-compat-util.h	FUNCTION_128	IF_2
0x4002e2e	      0xb906000000	                              mov ecx, 6	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002e33	      0xbf00000000	                              mov edi, 0	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002e38	          0x4c89f6	                            mov rsi, r14	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002e3b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002e3d	      0xb802000000	                              mov eax, 2	       298	ref-filter.c	FUNCTION_12	IF_1
0x4002e42	           0xf97c1	                                 seta cl	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002e45	           0xf92c2	                                 setb dl	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002e48	            0x38d1	                              cmp cl, dl	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002e4a	     0xf85b1000000	                           jne 0x4002f01	       297	ref-filter.c	FUNCTION_12	IF_1	CALL_1
0x4002e50	      0x4189442410	             mov dword [r12 + 0x10], eax	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4002e55	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4002e5a	      0xe9b4feffff	                           jmp 0x4002d13	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4002e5f	              0x90	                                     nop	       341	ref-filter.c	FUNCTION_13	FOR_1	ELSE_3	IF_7
0x4002e60	      0xbf00000000	                              mov edi, 0	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002e65	      0xb907000000	                              mov ecx, 7	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002e6a	          0x4889de	                            mov rsi, rbx	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002e6d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002e6f	     0xf8482000000	                            je 0x4002ef7	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002e75	      0xbf00000000	                              mov edi, 0	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002e7a	      0xb905000000	                              mov ecx, 5	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002e7f	          0x4889de	                            mov rsi, rbx	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002e82	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002e84	     0xf84b2000000	                            je 0x4002f3c	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002e8a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002e8f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002e94	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4002e96	      0xe800000000	                          call 0x4002e9b	        54	gettext.h	FUNCTION_93
0x4002e9b	          0x4889da	                            mov rdx, rbx	       327	ref-filter.c	FUNCTION_13	FOR_1	IF_2	IF_3	CALL_7
0x4002e9e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4002ea3	          0x4889c6	                            mov rsi, rax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4002ea6	            0x31c0	                            xor eax, eax	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4002ea8	      0xe800000000	                          call 0x4002ead	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4002ead	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x4002eb2	            0x31f6	                            xor esi, esi	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x4002eb4	      0xe800000000	                          call 0x4002eb9	       344	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_18
0x4002eb9	      0xb8ffffffff	                     mov eax, 0xffffffff	       345	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4
0x4002ebe	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       356	ref-filter.c	FUNCTION_13
0x4002ec3	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       356	ref-filter.c	FUNCTION_13
0x4002ecc	     0xf85c4000000	                           jne 0x4002f96	       356	ref-filter.c	FUNCTION_13
0x4002ed2	        0x4883c458	                           add rsp, 0x58	       356	ref-filter.c	FUNCTION_13
0x4002ed6	              0x5b	                                 pop rbx	       356	ref-filter.c	FUNCTION_13
0x4002ed7	              0x5d	                                 pop rbp	       356	ref-filter.c	FUNCTION_13
0x4002ed8	            0x415c	                                 pop r12	       356	ref-filter.c	FUNCTION_13
0x4002eda	            0x415d	                                 pop r13	       356	ref-filter.c	FUNCTION_13
0x4002edc	            0x415e	                                 pop r14	       356	ref-filter.c	FUNCTION_13
0x4002ede	            0x415f	                                 pop r15	       356	ref-filter.c	FUNCTION_13
0x4002ee0	              0xc3	                                     ret	       356	ref-filter.c	FUNCTION_13
0x4002ee1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002ee6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002eeb	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4002eed	      0xe800000000	                          call 0x4002ef2	        54	gettext.h	FUNCTION_93
0x4002ef2	          0x4889da	                            mov rdx, rbx	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x4002ef5	            0xeba7	                           jmp 0x4002e9e	       334	ref-filter.c	FUNCTION_13	FOR_1	ELSE_1	IF_4	IF_5	CALL_12
0x4002ef7	      0xb801000000	                              mov eax, 1	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x4002efc	      0xe90dfeffff	                           jmp 0x4002d0e	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x4002f01	      0xbf00000000	                              mov edi, 0	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002f06	      0xb907000000	                              mov ecx, 7	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002f0b	          0x4c89f6	                            mov rsi, r14	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002f0e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002f10	            0x7431	                            je 0x4002f43	       299	ref-filter.c	FUNCTION_12	ELSE_1	IF_2	CALL_2
0x4002f12	      0xbf00000000	                              mov edi, 0	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002f17	      0xb905000000	                              mov ecx, 5	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002f1c	          0x4c89f6	                            mov rsi, r14	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002f1f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002f21	            0x742a	                            je 0x4002f4d	       301	ref-filter.c	FUNCTION_12	ELSE_2	IF_3	CALL_3
0x4002f23	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002f28	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002f2d	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4002f2f	      0xe800000000	                          call 0x4002f34	        54	gettext.h	FUNCTION_93
0x4002f34	          0x4c89f2	                            mov rdx, r14	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4002f37	      0xe962ffffff	                           jmp 0x4002e9e	       343	ref-filter.c	FUNCTION_13	FOR_1	ELSE_4	CALL_17
0x4002f3c	            0x31c0	                            xor eax, eax	       302	ref-filter.c	FUNCTION_12	ELSE_2	IF_3
0x4002f3e	      0xe9cbfdffff	                           jmp 0x4002d0e	       302	ref-filter.c	FUNCTION_12	ELSE_2	IF_3
0x4002f43	      0xb801000000	                              mov eax, 1	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x4002f48	      0xe903ffffff	                           jmp 0x4002e50	       300	ref-filter.c	FUNCTION_12	ELSE_1	IF_2
0x4002f4d	            0x31c0	                            xor eax, eax	       302	ref-filter.c	FUNCTION_12	ELSE_2	IF_3
0x4002f4f	      0xe9fcfeffff	                           jmp 0x4002e50	       302	ref-filter.c	FUNCTION_12	ELSE_2	IF_3
0x4002f54	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002f59	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002f5e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4002f60	      0xe800000000	                          call 0x4002f65	        54	gettext.h	FUNCTION_93
0x4002f65	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002f6a	          0x4889c2	                            mov rdx, rax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002f6d	      0xbeffffffff	                     mov esi, 0xffffffff	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002f72	            0x31c0	                            xor eax, eax	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002f74	      0xe8e7daffff	   call sym.strbuf_addf_ret.constprop.38	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002f79	      0xe940ffffff	                           jmp 0x4002ebe	       351	ref-filter.c	FUNCTION_13	IF_8	CALL_21
0x4002f7e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x4002f83	            0x31f6	                            xor esi, esi	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x4002f85	      0xe800000000	                          call 0x4002f8a	       350	ref-filter.c	FUNCTION_13	IF_8	CALL_19
0x4002f8a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4002f8f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4002f94	            0xebc8	                           jmp 0x4002f5e	        54	gettext.h	FUNCTION_93
0x4002f96	      0xe800000000	                          call 0x4002f9b	       356	ref-filter.c	FUNCTION_13
parse_ref_sorting	DO,0:ELSE,0:CALL,4:WHILE,0:FOR,0:SWITCH,0:IF,2:functions,0	83
0x40057a0	            0x4154	                                push r12	      2321	ref-filter.c	FUNCTION_88
0x40057a2	              0x55	                                push rbp	      2321	ref-filter.c	FUNCTION_88
0x40057a3	          0x4989f4	                            mov r12, rsi	      2321	ref-filter.c	FUNCTION_88
0x40057a6	              0x53	                                push rbx	      2321	ref-filter.c	FUNCTION_88
0x40057a7	      0xbe10000000	                           mov esi, 0x10	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x40057ac	          0x4889fb	                            mov rbx, rdi	      2321	ref-filter.c	FUNCTION_88
0x40057af	      0xbf01000000	                              mov edi, 1	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x40057b4	        0x4883ec40	                           sub rsp, 0x40	      2321	ref-filter.c	FUNCTION_88
0x40057b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      2321	ref-filter.c	FUNCTION_88
0x40057c1	      0x4889442438	             mov qword [rsp + 0x38], rax	      2321	ref-filter.c	FUNCTION_88
0x40057c6	            0x31c0	                            xor eax, eax	      2321	ref-filter.c	FUNCTION_88
0x40057c8	      0xe800000000	                          call 0x40057cd	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x40057cd	          0x4889c5	                            mov rbp, rax	      2324	ref-filter.c	FUNCTION_88	CALL_1
0x40057d0	          0x488b03	                    mov rax, qword [rbx]	      2325	ref-filter.c	FUNCTION_88
0x40057d3	        0x48894500	                    mov qword [rbp], rax	      2325	ref-filter.c	FUNCTION_88
0x40057d7	          0x48892b	                    mov qword [rbx], rbp	      2326	ref-filter.c	FUNCTION_88
0x40057da	      0x41803c242d	                    cmp byte [r12], 0x2d	      2328	ref-filter.c	FUNCTION_88	IF_1
0x40057df	     0xf84e3000000	                            je 0x40058c8	      2328	ref-filter.c	FUNCTION_88	IF_1
0x40057e5	          0x4c89e3	                            mov rbx, r12	      2321	ref-filter.c	FUNCTION_88
0x40057e8	      0xb800000000	                              mov eax, 0	      2321	ref-filter.c	FUNCTION_88
0x40057ed	            0xeb12	                           jmp 0x4005801	      2321	ref-filter.c	FUNCTION_88
0x40057ef	              0x90	                                     nop	      2321	ref-filter.c	FUNCTION_88
0x40057f0	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40057f4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40057f8	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40057fb	     0xf8597000000	                           jne 0x4005898	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4005801	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4005804	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4005806	            0x75e8	                           jne 0x40057f0	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x4005808	        0x804d0c04	                  or byte [rbp + 0xc], 4	      2334	ref-filter.c	FUNCTION_88	IF_2
0x400580c	          0x4889df	                            mov rdi, rbx	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x400580f	    0x48c744240800	                  mov qword [rsp + 8], 0	      2298	ref-filter.c	FUNCTION_86
0x4005818	    0x48c704240000	                      mov qword [rsp], 0	      2298	ref-filter.c	FUNCTION_86
0x4005820	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2298	ref-filter.c	FUNCTION_86
0x4005829	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	      2298	ref-filter.c	FUNCTION_86
0x4005831	      0xe800000000	                          call 0x4005836	      2299	ref-filter.c	FUNCTION_86	CALL_1
0x4005836	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x400583b	        0x488d1403	                    lea rdx, [rbx + rax]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x400583f	          0x4889de	                            mov rsi, rbx	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4005842	          0x4889e7	                            mov rdi, rsp	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4005845	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2300	ref-filter.c	FUNCTION_86
0x400584e	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2300	ref-filter.c	FUNCTION_86
0x4005857	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2300	ref-filter.c	FUNCTION_86
0x4005860	      0xe86bbaffff	          call sym.parse_ref_filter_atom	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4005865	            0x85c0	                           test eax, eax	      2302	ref-filter.c	FUNCTION_86	IF_1
0x4005867	            0x89c3	                            mov ebx, eax	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4005869	            0x787a	                            js 0x40058e5	      2302	ref-filter.c	FUNCTION_86	IF_1
0x400586b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4005870	      0xe800000000	                          call 0x4005875	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4005875	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2336	ref-filter.c	FUNCTION_88
0x400587a	    0x644833042528	                xor rax, qword fs:[0x28]	      2336	ref-filter.c	FUNCTION_88
0x4005883	          0x895d08	                mov dword [rbp + 8], ebx	      2335	ref-filter.c	FUNCTION_88	CALL_4
0x4005886	            0x7558	                           jne 0x40058e0	      2336	ref-filter.c	FUNCTION_88
0x4005888	        0x4883c440	                           add rsp, 0x40	      2336	ref-filter.c	FUNCTION_88
0x400588c	              0x5b	                                 pop rbx	      2336	ref-filter.c	FUNCTION_88
0x400588d	              0x5d	                                 pop rbp	      2336	ref-filter.c	FUNCTION_88
0x400588e	            0x415c	                                 pop r12	      2336	ref-filter.c	FUNCTION_88
0x4005890	              0xc3	                                     ret	      2336	ref-filter.c	FUNCTION_88
0x4005891	     0xf1f80000000	                         nop dword [rax]	      2336	ref-filter.c	FUNCTION_88
0x4005898	          0x4c89e3	                            mov rbx, r12	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400589b	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058a0	            0xeb13	                           jmp 0x40058b5	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058a2	    0x660f1f440000	                    nop word [rax + rax]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058a8	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058ac	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058b0	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058b3	            0x7523	                           jne 0x40058d8	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058b5	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40058b8	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40058ba	            0x75ec	                           jne 0x40058a8	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40058bc	      0xe947ffffff	                           jmp 0x4005808	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40058c1	     0xf1f80000000	                         nop dword [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40058c8	        0x804d0c01	                  or byte [rbp + 0xc], 1	      2329	ref-filter.c	FUNCTION_88	IF_1
0x40058cc	        0x4983c401	                              add r12, 1	      2330	ref-filter.c	FUNCTION_88	IF_1
0x40058d0	      0xe910ffffff	                           jmp 0x40057e5	      2330	ref-filter.c	FUNCTION_88	IF_1
0x40058d5	           0xf1f00	                         nop dword [rax]	      2330	ref-filter.c	FUNCTION_88	IF_1
0x40058d8	          0x4c89e3	                            mov rbx, r12	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058db	      0xe92cffffff	                           jmp 0x400580c	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40058e0	      0xe800000000	                          call 0x40058e5	      2336	ref-filter.c	FUNCTION_88
0x40058e5	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x40058ea	      0xbf00000000	                              mov edi, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x40058ef	            0x31c0	                            xor eax, eax	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x40058f1	      0xe800000000	                          call 0x40058f6	      2303	ref-filter.c	FUNCTION_86	CALL_3
compare_refs	DO,0:ELSE,0:CALL,1:WHILE,0:FOR,1:SWITCH,0:IF,1:functions,0	165
0x4004520	            0x4157	                                push r15	      2182	ref-filter.c	FUNCTION_80
0x4004522	            0x4156	                                push r14	      2182	ref-filter.c	FUNCTION_80
0x4004524	            0x4155	                                push r13	      2182	ref-filter.c	FUNCTION_80
0x4004526	            0x4154	                                push r12	      2182	ref-filter.c	FUNCTION_80
0x4004528	              0x55	                                push rbp	      2182	ref-filter.c	FUNCTION_80
0x4004529	              0x53	                                push rbx	      2182	ref-filter.c	FUNCTION_80
0x400452a	        0x4883ec38	                           sub rsp, 0x38	      2182	ref-filter.c	FUNCTION_80
0x400452e	          0x4c8b2f	                    mov r13, qword [rdi]	      2183	ref-filter.c	FUNCTION_80
0x4004531	          0x4c8b36	                    mov r14, qword [rsi]	      2184	ref-filter.c	FUNCTION_80
0x4004534	    0x64488b042528	                mov rax, qword fs:[0x28]	      2182	ref-filter.c	FUNCTION_80
0x400453d	      0x4889442428	             mov qword [rsp + 0x28], rax	      2182	ref-filter.c	FUNCTION_80
0x4004542	            0x31c0	                            xor eax, eax	      2182	ref-filter.c	FUNCTION_80
0x4004544	          0x4885d2	                           test rdx, rdx	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x4004547	     0xf8423020000	                            je 0x4004770	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x400454d	        0x498d4638	                   lea rax, [r14 + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004551	          0x4989d7	                            mov r15, rdx	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004554	        0x48890424	                    mov qword [rsp], rax	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004558	        0x498d4538	                   lea rax, [r13 + 0x38]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400455c	      0x4889442408	                mov qword [rsp + 8], rax	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004561	            0xeb49	                           jmp 0x40045ac	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004563	       0xf1f440000	                   nop dword [rax + rax]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004568	          0x4585e4	                         test r12d, r12d	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x400456b	     0xf841f010000	                            je 0x4004690	      2167	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x4004571	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4004575	        0x48394510	            cmp qword [rbp + 0x10], rax 	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4004579	     0xf82d9000000	                            jb 0x4004658	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x400457f	      0xb8ffffffff	                     mov eax, 0xffffffff	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004584	      0xbe01000000	                              mov esi, 1	      2175	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_4
0x4004589	     0xf84f1010000	                            je 0x4004780	      2172	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400458f	          0x83e101	                              and ecx, 1	      2178	ref-filter.c	FUNCTION_79
0x4004592	     0xf84d3000000	                            je 0x400466b	      2178	ref-filter.c	FUNCTION_79
0x4004598	            0x85c0	                           test eax, eax	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x400459a	     0xf85cd000000	                           jne 0x400466d	      2189	ref-filter.c	FUNCTION_80	FOR_1	IF_1
0x40045a0	          0x4d8b3f	                    mov r15, qword [r15]	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40045a3	          0x4d85ff	                           test r15, r15	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40045a6	     0xf84c4010000	                            je 0x4004770	      2187	ref-filter.c	FUNCTION_80	FOR_1
0x40045ac	        0x49636f08	            movsxd rbp, dword [r15 + 8] 	      2155	ref-filter.c	FUNCTION_79
0x40045b0	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2157	ref-filter.c	FUNCTION_79
0x40045b9	      0x488d446d00	                  lea rax, [rbp + rbp*2]	      2155	ref-filter.c	FUNCTION_79
0x40045be	          0x4889eb	                            mov rbx, rbp	      2155	ref-filter.c	FUNCTION_79
0x40045c1	        0x48c1e005	                              shl rax, 5	      2155	ref-filter.c	FUNCTION_79
0x40045c5	    0x480305000000	             add rax, qword [0x040045cc]	      2155	ref-filter.c	FUNCTION_79
0x40045cc	        0x448b6008	               mov r12d, dword [rax + 8]	      2155	ref-filter.c	FUNCTION_79
0x40045d0	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      1613	ref-filter.c	FUNCTION_58	IF_1
0x40045d4	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2157	ref-filter.c	FUNCTION_79
0x40045dd	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2157	ref-filter.c	FUNCTION_79
0x40045e6	          0x4885c0	                           test rax, rax	      1613	ref-filter.c	FUNCTION_58	IF_1
0x40045e9	     0xf8421010000	                            je 0x4004710	      1613	ref-filter.c	FUNCTION_58	IF_1
0x40045ef	        0x48c1e505	                              shl rbp, 5	      1618	ref-filter.c	FUNCTION_58
0x40045f3	          0x4801c5	                            add rbp, rax	      1618	ref-filter.c	FUNCTION_58
0x40045f6	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      1613	ref-filter.c	FUNCTION_58	IF_1
0x40045fa	          0x4885c0	                           test rax, rax	      1613	ref-filter.c	FUNCTION_58	IF_1
0x40045fd	     0xf849d000000	                            je 0x40046a0	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4004603	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x4004608	        0x48c1e305	                              shl rbx, 5	      1618	ref-filter.c	FUNCTION_58
0x400460c	          0x4801c3	                            add rbx, rax	      1618	ref-filter.c	FUNCTION_58
0x400460f	      0xe800000000	                          call 0x4004614	      2163	ref-filter.c	FUNCTION_79	CALL_5
0x4004614	      0x410fb64f0c	            movzx ecx, byte [r15 + 0xc] 	      2164	ref-filter.c	FUNCTION_79
0x4004619	    0x41b800000000	                              mov r8d, 0	      2164	ref-filter.c	FUNCTION_79
0x400461f	      0xb800000000	                              mov eax, 0	      2164	ref-filter.c	FUNCTION_79
0x4004624	          0xf6c102	                              test cl, 2	      2164	ref-filter.c	FUNCTION_79
0x4004627	        0x4c0f44c0	                           cmove r8, rax	      2164	ref-filter.c	FUNCTION_79
0x400462b	          0xf6c104	                              test cl, 4	      2165	ref-filter.c	FUNCTION_79	IF_3
0x400462e	     0xf8434ffffff	                            je 0x4004568	      2165	ref-filter.c	FUNCTION_79	IF_3
0x4004634	          0x488b33	                    mov rsi, qword [rbx]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x4004637	        0x488b7d00	                    mov rdi, qword [rbp]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x400463b	      0xe800000000	                          call 0x4004640	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x4004640	            0x89c1	                            mov ecx, eax	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x4004642	            0xf7d9	                                 neg ecx	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x4004644	      0x41f6470c01	                test byte [r15 + 0xc], 1	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x4004649	           0xf45c1	                         cmovne eax, ecx	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x400464c	      0xe947ffffff	                           jmp 0x4004598	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x4004651	     0xf1f80000000	                         nop dword [rax]	      2166	ref-filter.c	FUNCTION_79	CALL_6
0x4004658	          0x83e101	                              and ecx, 1	      2178	ref-filter.c	FUNCTION_79
0x400465b	      0xb801000000	                              mov eax, 1	      2170	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4004660	      0xbeffffffff	                     mov esi, 0xffffffff	      2171	ref-filter.c	FUNCTION_79	ELSE_2	IF_5
0x4004665	     0xf852dffffff	                           jne 0x4004598	      2178	ref-filter.c	FUNCTION_79
0x400466b	            0x89f0	                            mov eax, esi	      2178	ref-filter.c	FUNCTION_79
0x400466d	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2193	ref-filter.c	FUNCTION_80
0x4004672	    0x644833142528	                xor rdx, qword fs:[0x28]	      2193	ref-filter.c	FUNCTION_80
0x400467b	     0xf852a010000	                           jne 0x40047ab	      2193	ref-filter.c	FUNCTION_80
0x4004681	        0x4883c438	                           add rsp, 0x38	      2193	ref-filter.c	FUNCTION_80
0x4004685	              0x5b	                                 pop rbx	      2193	ref-filter.c	FUNCTION_80
0x4004686	              0x5d	                                 pop rbp	      2193	ref-filter.c	FUNCTION_80
0x4004687	            0x415c	                                 pop r12	      2193	ref-filter.c	FUNCTION_80
0x4004689	            0x415d	                                 pop r13	      2193	ref-filter.c	FUNCTION_80
0x400468b	            0x415e	                                 pop r14	      2193	ref-filter.c	FUNCTION_80
0x400468d	            0x415f	                                 pop r15	      2193	ref-filter.c	FUNCTION_80
0x400468f	              0xc3	                                     ret	      2193	ref-filter.c	FUNCTION_80
0x4004690	          0x488b33	                    mov rsi, qword [rbx]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x4004693	        0x488b7d00	                    mov rdi, qword [rbp]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x4004697	          0x41ffd0	                                 call r8	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x400469a	            0xeba4	                           jmp 0x4004640	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x400469c	         0xf1f4000	                         nop dword [rax]	      2168	ref-filter.c	FUNCTION_79	ELSE_1	IF_4
0x40046a0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x40046a5	          0x4c89f7	                            mov rdi, r14	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x40046a8	      0xe883f8ffff	                 call sym.populate_value	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x40046ad	            0x85c0	                           test eax, eax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x40046af	     0xf85e5000000	                           jne 0x400479a	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x40046b5	    0x8b0d00000000	            mov ecx, dword [0x040046bb] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046bb	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x40046bf	            0x85c9	                           test ecx, ecx	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046c1	     0xf8e3cffffff	                           jle 0x4004603	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046c7	          0x83e901	                              sub ecx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046ca	        0x4883c101	                              add rcx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046ce	        0x48c1e105	                              shl rcx, 5	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046d2	          0x4801c1	                            add rcx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046d5	            0xeb12	                           jmp 0x40046e9	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046d7	    0x660f1f840000	                    nop word [rax + rax]	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046e0	        0x4883c020	                           add rax, 0x20	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046e4	          0x4839c1	                            cmp rcx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046e7	            0x7417	                            je 0x4004700	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046e9	        0x48833800	                      cmp qword [rax], 0	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x40046ed	            0x75f1	                           jne 0x40046e0	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x40046ef	    0x48c700000000	                      mov qword [rax], 0	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x40046f6	        0x4883c020	                           add rax, 0x20	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x40046fa	          0x4839c1	                            cmp rcx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046fd	            0x75ea	                           jne 0x40046e9	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40046ff	              0x90	                                     nop	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004700	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004704	      0xe9fafeffff	                           jmp 0x4004603	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004709	     0xf1f80000000	                         nop dword [rax]	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004710	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004715	          0x4c89ef	                            mov rdi, r13	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004718	      0xe813f8ffff	                 call sym.populate_value	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400471d	            0x85c0	                           test eax, eax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400471f	            0x7579	                           jne 0x400479a	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4004721	    0x8b0d00000000	            mov ecx, dword [0x04004727] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004727	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x400472b	            0x85c9	                           test ecx, ecx	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400472d	            0x7e62	                           jle 0x4004791	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400472f	          0x83e901	                              sub ecx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004732	        0x4883c101	                              add rcx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004736	        0x48c1e105	                              shl rcx, 5	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400473a	          0x4801c1	                            add rcx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400473d	            0xeb0a	                           jmp 0x4004749	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400473f	              0x90	                                     nop	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004740	        0x4883c020	                           add rax, 0x20	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004744	          0x4839c8	                            cmp rax, rcx	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004747	            0x7417	                            je 0x4004760	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004749	        0x48833800	                      cmp qword [rax], 0	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400474d	            0x75f1	                           jne 0x4004740	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400474f	    0x48c700000000	                      mov qword [rax], 0	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x4004756	        0x4883c020	                           add rax, 0x20	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400475a	          0x4839c8	                            cmp rax, rcx	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400475d	            0x75ea	                           jne 0x4004749	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400475f	              0x90	                                     nop	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004760	        0x49635f08	            movsxd rbx, dword [r15 + 8] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004764	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004768	      0xe982feffff	                           jmp 0x40045ef	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400476d	           0xf1f00	                         nop dword [rax]	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4004770	            0x31c0	                            xor eax, eax	      2192	ref-filter.c	FUNCTION_80
0x4004772	      0xe9f6feffff	                           jmp 0x400466d	      2192	ref-filter.c	FUNCTION_80
0x4004777	    0x660f1f840000	                    nop word [rax + rax]	      2192	ref-filter.c	FUNCTION_80
0x4004780	        0x488b3424	                    mov rsi, qword [rsp]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004784	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004789	          0x41ffd0	                                 call r8	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400478c	      0xe9affeffff	                           jmp 0x4004640	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004791	        0x49635f08	            movsxd rbx, dword [r15 + 8] 	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x4004795	      0xe955feffff	                           jmp 0x40045ef	      2173	ref-filter.c	FUNCTION_79	ELSE_2	ELSE_3	IF_6
0x400479a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x400479f	      0xbf00000000	                              mov edi, 0	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x40047a4	            0x31c0	                            xor eax, eax	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x40047a6	      0xe800000000	                          call 0x40047ab	      2162	ref-filter.c	FUNCTION_79	CALL_4
0x40047ab	      0xe800000000	                 call sym.ref_array_push	      2193	ref-filter.c	FUNCTION_80
parse_opt_ref_sorting	DO,0:ELSE,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:IF,1:functions,0	11
0x4005900	          0x4885f6	                           test rsi, rsi	      2340	ref-filter.c	FUNCTION_89	IF_1
0x4005903	            0x741b	                            je 0x4005920	      2340	ref-filter.c	FUNCTION_89	IF_1
0x4005905	        0x4883ec08	                              sub rsp, 8	      2339	ref-filter.c	FUNCTION_89
0x4005909	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x400590d	      0xe800000000	                          call 0x4005912	      2342	ref-filter.c	FUNCTION_89	CALL_1
0x4005912	            0x31c0	                            xor eax, eax	      2343	ref-filter.c	FUNCTION_89
0x4005914	        0x4883c408	                              add rsp, 8	      2344	ref-filter.c	FUNCTION_89
0x4005918	              0xc3	                                     ret	      2344	ref-filter.c	FUNCTION_89
0x4005919	     0xf1f80000000	                         nop dword [rax]	      2344	ref-filter.c	FUNCTION_89
0x4005920	      0xb8ffffffff	                     mov eax, 0xffffffff	      2341	ref-filter.c	FUNCTION_89	IF_1
0x4005925	              0xc3	                                     ret	      2341	ref-filter.c	FUNCTION_89	IF_1
remote_ref_atom_parser	DO,0:ELSE,5:CALL,12:WHILE,0:FOR,1:SWITCH,0:IF,8:functions,0	140
0x40018d0	            0x4157	                                push r15	       157	ref-filter.c	FUNCTION_5
0x40018d2	            0x4156	                                push r14	       157	ref-filter.c	FUNCTION_5
0x40018d4	      0xbf00000000	                              mov edi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40018d9	            0x4155	                                push r13	       157	ref-filter.c	FUNCTION_5
0x40018db	            0x4154	                                push r12	       157	ref-filter.c	FUNCTION_5
0x40018dd	          0x4989f5	                            mov r13, rsi	       157	ref-filter.c	FUNCTION_5
0x40018e0	              0x55	                                push rbp	       157	ref-filter.c	FUNCTION_5
0x40018e1	              0x53	                                push rbx	       157	ref-filter.c	FUNCTION_5
0x40018e2	          0x4989cc	                            mov r12, rcx	       157	ref-filter.c	FUNCTION_5
0x40018e5	      0xb905000000	                              mov ecx, 5	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x40018ea	          0x4989d7	                            mov r15, rdx	       157	ref-filter.c	FUNCTION_5
0x40018ed	        0x4883ec48	                           sub rsp, 0x48	       157	ref-filter.c	FUNCTION_5
0x40018f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       157	ref-filter.c	FUNCTION_5
0x40018fa	      0x4889442438	             mov qword [rsp + 0x38], rax	       157	ref-filter.c	FUNCTION_5
0x40018ff	            0x31c0	                            xor eax, eax	       157	ref-filter.c	FUNCTION_5
0x4001901	      0x804c242001	                 or byte [rsp + 0x20], 1	       158	ref-filter.c	FUNCTION_5
0x4001906	          0x488b06	                    mov rax, qword [rsi]	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001909	    0x48c744241000	               mov qword [rsp + 0x10], 0	       158	ref-filter.c	FUNCTION_5
0x4001912	    0xc74424180000	               mov dword [rsp + 0x18], 0	       158	ref-filter.c	FUNCTION_5
0x400191a	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       158	ref-filter.c	FUNCTION_5
0x4001922	    0x48c744242800	               mov qword [rsp + 0x28], 0	       158	ref-filter.c	FUNCTION_5
0x400192b	          0x4889c6	                            mov rsi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x400192e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001930	     0xf859a010000	                           jne 0x4001ad0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001936	      0x41804d2002	                 or byte [r13 + 0x20], 2	       162	ref-filter.c	FUNCTION_5	IF_1
0x400193b	          0x4d85ff	                           test r15, r15	       164	ref-filter.c	FUNCTION_5	IF_2
0x400193e	     0xf84b3010000	                            je 0x4001af7	       164	ref-filter.c	FUNCTION_5	IF_2
0x4001944	      0x41806520fe	             and byte [r13 + 0x20], 0xfe	       170	ref-filter.c	FUNCTION_5
0x4001949	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       171	ref-filter.c	FUNCTION_5	CALL_4
0x400194e	      0xb9ffffffff	                     mov ecx, 0xffffffff	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4001953	      0xba2c000000	                           mov edx, 0x2c	       171	ref-filter.c	FUNCTION_5	CALL_4
0x4001958	          0x4c89fe	                            mov rsi, r15	       171	ref-filter.c	FUNCTION_5	CALL_4
0x400195b	            0x31db	                            xor ebx, ebx	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400195d	            0x31ed	                            xor ebp, ebp	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400195f	    0x41be00000000	                             mov r14d, 0	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4001965	      0xe800000000	                          call 0x400196a	       171	ref-filter.c	FUNCTION_5	CALL_4
0x400196a	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400196e	        0x4d8d4514	                    lea r8, [r13 + 0x14]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4001972	            0x85c0	                           test eax, eax	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4001974	            0x751f	                           jne 0x4001995	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4001976	            0xeb5b	                           jmp 0x40019d3	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4001978	     0xf1f84000000	                   nop dword [rax + rax]	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4001980	    0x41c745100100	               mov dword [r13 + 0x10], 1	       177	ref-filter.c	FUNCTION_5	FOR_1	IF_3
0x4001988	          0x83c501	                              add ebp, 1	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400198b	        0x4883c310	                           add rbx, 0x10	       173	ref-filter.c	FUNCTION_5	FOR_1
0x400198f	        0x396c2418	            cmp dword [rsp + 0x18], ebp 	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4001993	            0x763e	                           jbe 0x40019d3	       173	ref-filter.c	FUNCTION_5	FOR_1
0x4001995	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       174	ref-filter.c	FUNCTION_5	FOR_1
0x400199a	      0xb906000000	                              mov ecx, 6	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x400199f	          0x4c89f7	                            mov rdi, r14	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40019a2	        0x488b0418	              mov rax, qword [rax + rbx]	       174	ref-filter.c	FUNCTION_5	FOR_1
0x40019a6	          0x4889c6	                            mov rsi, rax	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40019a9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40019ab	            0x74d3	                            je 0x4001980	       176	ref-filter.c	FUNCTION_5	FOR_1	IF_3	CALL_5
0x40019ad	      0xbf00000000	                              mov edi, 0	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40019b2	      0xb90b000000	                            mov ecx, 0xb	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40019b7	          0x4889c6	                            mov rsi, rax	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40019ba	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40019bc	            0x754a	                           jne 0x4001a08	       178	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4	CALL_6
0x40019be	          0x83c501	                              add ebp, 1	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40019c1	        0x4883c310	                           add rbx, 0x10	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40019c5	        0x396c2418	            cmp dword [rsp + 0x18], ebp 	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40019c9	    0x41c745100200	               mov dword [r13 + 0x10], 2	       179	ref-filter.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x40019d1	            0x77c2	                            ja 0x4001995	       173	ref-filter.c	FUNCTION_5	FOR_1
0x40019d3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       198	ref-filter.c	FUNCTION_5	CALL_12
0x40019d8	            0x31f6	                            xor esi, esi	       198	ref-filter.c	FUNCTION_5	CALL_12
0x40019da	      0xe800000000	                          call 0x40019df	       198	ref-filter.c	FUNCTION_5	CALL_12
0x40019df	            0x31c0	                            xor eax, eax	       199	ref-filter.c	FUNCTION_5
0x40019e1	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       200	ref-filter.c	FUNCTION_5
0x40019e6	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       200	ref-filter.c	FUNCTION_5
0x40019ef	     0xf8519010000	                           jne 0x4001b0e	       200	ref-filter.c	FUNCTION_5
0x40019f5	        0x4883c448	                           add rsp, 0x48	       200	ref-filter.c	FUNCTION_5
0x40019f9	              0x5b	                                 pop rbx	       200	ref-filter.c	FUNCTION_5
0x40019fa	              0x5d	                                 pop rbp	       200	ref-filter.c	FUNCTION_5
0x40019fb	            0x415c	                                 pop r12	       200	ref-filter.c	FUNCTION_5
0x40019fd	            0x415d	                                 pop r13	       200	ref-filter.c	FUNCTION_5
0x40019ff	            0x415e	                                 pop r14	       200	ref-filter.c	FUNCTION_5
0x4001a01	            0x415f	                                 pop r15	       200	ref-filter.c	FUNCTION_5
0x4001a03	              0xc3	                                     ret	       200	ref-filter.c	FUNCTION_5
0x4001a04	         0xf1f4000	                         nop dword [rax]	       200	ref-filter.c	FUNCTION_5
0x4001a08	      0xbf00000000	                              mov edi, 0	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4001a0d	      0xb90a000000	                            mov ecx, 0xa	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4001a12	          0x4889c6	                            mov rsi, rax	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4001a15	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4001a17	            0x750f	                           jne 0x4001a28	       180	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_7
0x4001a19	      0x41804d2001	                 or byte [r13 + 0x20], 1	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4001a1e	      0xe965ffffff	                           jmp 0x4001988	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4001a23	       0xf1f440000	                   nop dword [rax + rax]	       181	ref-filter.c	FUNCTION_5	FOR_1	ELSE_2	IF_5
0x4001a28	      0xbf00000000	                              mov edi, 0	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4001a2d	      0xb90b000000	                            mov ecx, 0xb	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4001a32	          0x4889c6	                            mov rsi, rax	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4001a35	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4001a37	            0x7517	                           jne 0x4001a50	       182	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6	CALL_8
0x4001a39	    0x41c745100300	               mov dword [r13 + 0x10], 3	       183	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4001a41	      0x41804d2004	                 or byte [r13 + 0x20], 4	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4001a46	      0xe93dffffff	                           jmp 0x4001988	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4001a4b	       0xf1f440000	                   nop dword [rax + rax]	       184	ref-filter.c	FUNCTION_5	FOR_1	ELSE_3	IF_6
0x4001a50	      0xbf00000000	                              mov edi, 0	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4001a55	      0xb90a000000	                            mov ecx, 0xa	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4001a5a	          0x4889c6	                            mov rsi, rax	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4001a5d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4001a5f	            0x7517	                           jne 0x4001a78	       185	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7	CALL_9
0x4001a61	    0x41c745100400	               mov dword [r13 + 0x10], 4	       186	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4001a69	      0x41804d2004	                 or byte [r13 + 0x20], 4	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4001a6e	      0xe915ffffff	                           jmp 0x4001988	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4001a73	       0xf1f440000	                   nop dword [rax + rax]	       187	ref-filter.c	FUNCTION_5	FOR_1	ELSE_4	IF_7
0x4001a78	    0x41c745100000	               mov dword [r13 + 0x10], 0	       189	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5
0x4001a80	      0xbf00000000	                              mov edi, 0	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a85	      0xb906000000	                              mov ecx, 6	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a8a	          0x4c89fe	                            mov rsi, r15	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a8d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a8f	            0x7459	                            je 0x4001aea	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a91	        0x498b5500	                    mov rdx, qword [r13]	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a95	          0x4c89c7	                             mov rdi, r8	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a98	          0x4c89e1	                            mov rcx, r12	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a9b	          0x4c89fe	                            mov rsi, r15	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001a9e	      0x4c89442408	                 mov qword [rsp + 8], r8	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001aa3	      0xe8d8fbffff	call sym.refname_atom_parser_internal.part.7	       139	ref-filter.c	FUNCTION_4	ELSE_1	IF_2	CALL_1
0x4001aa8	            0x85c0	                           test eax, eax	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4001aaa	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4001aaf	     0xf84d3feffff	                            je 0x4001988	       190	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_10
0x4001ab5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x4001aba	            0x31f6	                            xor esi, esi	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x4001abc	      0xe800000000	                          call 0x4001ac1	       192	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8	CALL_11
0x4001ac1	      0xb8ffffffff	                     mov eax, 0xffffffff	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x4001ac6	      0xe916ffffff	                           jmp 0x40019e1	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x4001acb	       0xf1f440000	                   nop dword [rax + rax]	       193	ref-filter.c	FUNCTION_5	FOR_1	ELSE_5	IF_8
0x4001ad0	      0xbe00000000	                              mov esi, 0	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001ad5	          0x4889c7	                            mov rdi, rax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001ad8	      0xe800000000	                          call 0x4001add	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001add	            0x85c0	                           test eax, eax	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001adf	     0xf8551feffff	                           jne 0x4001936	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001ae5	      0xe951feffff	                           jmp 0x400193b	       161	ref-filter.c	FUNCTION_5	IF_1	CALL_2
0x4001aea	    0x41c745140100	               mov dword [r13 + 0x14], 1	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x4001af2	      0xe991feffff	                           jmp 0x4001988	       140	ref-filter.c	FUNCTION_4	ELSE_1	IF_2
0x4001af7	    0x41c745100000	               mov dword [r13 + 0x10], 0	       165	ref-filter.c	FUNCTION_5	IF_2
0x4001aff	    0x41c745140000	               mov dword [r13 + 0x14], 0	       138	ref-filter.c	FUNCTION_4	IF_1
0x4001b07	            0x31c0	                            xor eax, eax	       152	ref-filter.c	FUNCTION_4
0x4001b09	      0xe9d3feffff	                           jmp 0x40019e1	       152	ref-filter.c	FUNCTION_4
0x4001b0e	      0xe800000000	                          call 0x4001b13	       200	ref-filter.c	FUNCTION_5
if_then_else_handler	DO,0:ELSE,2:CALL,6:WHILE,0:FOR,0:SWITCH,0:IF,4:functions,0	115
0x4003820	            0x4156	                                push r14	       602	ref-filter.c	FUNCTION_23
0x4003822	            0x4155	                                push r13	       602	ref-filter.c	FUNCTION_23
0x4003824	            0x4154	                                push r12	       602	ref-filter.c	FUNCTION_23
0x4003826	              0x55	                                push rbp	       602	ref-filter.c	FUNCTION_23
0x4003827	              0x53	                                push rbx	       602	ref-filter.c	FUNCTION_23
0x4003828	        0x4883ec20	                           sub rsp, 0x20	       602	ref-filter.c	FUNCTION_23
0x400382c	          0x488b1f	                    mov rbx, qword [rdi]	       603	ref-filter.c	FUNCTION_23
0x400382f	    0x64488b042528	                mov rax, qword fs:[0x28]	       602	ref-filter.c	FUNCTION_23
0x4003838	      0x4889442418	             mov qword [rsp + 0x18], rax	       602	ref-filter.c	FUNCTION_23
0x400383d	            0x31c0	                            xor eax, eax	       602	ref-filter.c	FUNCTION_23
0x400383f	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	       605	ref-filter.c	FUNCTION_23
0x4003843	         0xfb64510	           movzx eax, byte [rbp + 0x10] 	       607	ref-filter.c	FUNCTION_23	IF_1
0x4003847	            0xa801	                              test al, 1	       607	ref-filter.c	FUNCTION_23	IF_1
0x4003849	     0xf8480010000	                            je 0x40039cf	       607	ref-filter.c	FUNCTION_23	IF_1
0x400384f	            0xa802	                              test al, 2	       610	ref-filter.c	FUNCTION_23	IF_2
0x4003851	          0x4989fc	                            mov r12, rdi	       610	ref-filter.c	FUNCTION_23	IF_2
0x4003854	            0x753a	                           jne 0x4003890	       610	ref-filter.c	FUNCTION_23	IF_2
0x4003856	            0xa804	                              test al, 4	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x4003858	     0xf843a010000	                            je 0x4003998	       624	ref-filter.c	FUNCTION_23	ELSE_2	IF_4
0x400385e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       633	ref-filter.c	FUNCTION_23	CALL_6
0x4003863	    0x644833042528	                xor rax, qword fs:[0x28]	       633	ref-filter.c	FUNCTION_23	CALL_6
0x400386c	        0x49891c24	                    mov qword [r12], rbx	       632	ref-filter.c	FUNCTION_23
0x4003870	     0xf8554010000	                           jne 0x40039ca	       633	ref-filter.c	FUNCTION_23	CALL_6
0x4003876	        0x4883c420	                           add rsp, 0x20	       634	ref-filter.c	FUNCTION_23
0x400387a	          0x4889ef	                            mov rdi, rbp	       633	ref-filter.c	FUNCTION_23	CALL_6
0x400387d	              0x5b	                                 pop rbx	       634	ref-filter.c	FUNCTION_23
0x400387e	              0x5d	                                 pop rbp	       634	ref-filter.c	FUNCTION_23
0x400387f	            0x415c	                                 pop r12	       634	ref-filter.c	FUNCTION_23
0x4003881	            0x415d	                                 pop r13	       634	ref-filter.c	FUNCTION_23
0x4003883	            0x415e	                                 pop r14	       634	ref-filter.c	FUNCTION_23
0x4003885	      0xe900000000	                           jmp 0x400388a	       633	ref-filter.c	FUNCTION_23	CALL_6
0x400388a	    0x660f1f440000	                    nop word [rax + rax]	       633	ref-filter.c	FUNCTION_23	CALL_6
0x4003890	            0xa804	                              test al, 4	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4003892	          0x488b13	                    mov rdx, qword [rbx]	       604	ref-filter.c	FUNCTION_23
0x4003895	            0x7451	                            je 0x40038e8	       616	ref-filter.c	FUNCTION_23	IF_2	IF_3
0x4003897	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       165	strbuf.h	FUNCTION_97	IF_2
0x400389b	    0x48c743100000	               mov qword [rbx + 0x10], 0	       164	strbuf.h	FUNCTION_97
0x40038a3	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x40038a9	     0xf84c1000000	                            je 0x4003970	       165	strbuf.h	FUNCTION_97	IF_2
0x40038af	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x40038b2	          0x4c8b2b	                    mov r13, qword [rbx]	       166	strbuf.h	FUNCTION_97	IF_2
0x40038b5	          0x4d85ed	                           test r13, r13	       571	ref-filter.c	FUNCTION_20	IF_1
0x40038b8	        0x4c8d7308	                      lea r14, [rbx + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40038bc	            0x740c	                            je 0x40038ca	       571	ref-filter.c	FUNCTION_20	IF_1
0x40038be	        0x498d7d08	                      lea rdi, [r13 + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40038c2	          0x4c89f6	                            mov rsi, r14	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40038c5	      0xe800000000	                          call 0x40038ca	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40038ca	          0x4c89f7	                            mov rdi, r14	       573	ref-filter.c	FUNCTION_20	CALL_2
0x40038cd	      0xe800000000	                          call 0x40038d2	       573	ref-filter.c	FUNCTION_20	CALL_2
0x40038d2	          0x4889df	                            mov rdi, rbx	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40038d5	          0x4c89eb	                            mov rbx, r13	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40038d8	      0xe800000000	                          call 0x40038dd	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40038dd	      0xe97cffffff	                           jmp 0x400385e	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40038e2	    0x660f1f440000	                    nop word [rax + rax]	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40038e8	        0x4c8b4208	                 mov r8, qword [rdx + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x40038ec	        0x4c8d6b08	                      lea r13, [rbx + 8]	       620	ref-filter.c	FUNCTION_23	IF_2	ELSE_1	CALL_4
0x40038f0	        0x488b7b08	                mov rdi, qword [rbx + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x40038f4	        0x498b7508	                mov rsi, qword [r13 + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x40038f8	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x40038fc	        0x4c894308	                 mov qword [rbx + 8], r8	        53	string3.h	FUNCTION_133	CALL_3
0x4003900	        0x4c8b4210	              mov r8, qword [rdx + 0x10]	        53	string3.h	FUNCTION_133	CALL_3
0x4003904	        0x48893c24	                    mov qword [rsp], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4003908	      0x4889742408	                mov qword [rsp + 8], rsi	        53	string3.h	FUNCTION_133	CALL_3
0x400390d	      0x48894c2410	             mov qword [rsp + 0x10], rcx	        53	string3.h	FUNCTION_133	CALL_3
0x4003912	        0x4d894508	                 mov qword [r13 + 8], r8	        53	string3.h	FUNCTION_133	CALL_3
0x4003916	        0x4c8b4218	              mov r8, qword [rdx + 0x18]	        53	string3.h	FUNCTION_133	CALL_3
0x400391a	        0x4d894510	              mov qword [r13 + 0x10], r8	        53	string3.h	FUNCTION_133	CALL_3
0x400391e	        0x48897a08	                mov qword [rdx + 8], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4003922	        0x48897210	             mov qword [rdx + 0x10], rsi	        53	string3.h	FUNCTION_133	CALL_3
0x4003926	        0x48894a18	             mov qword [rdx + 0x18], rcx	        53	string3.h	FUNCTION_133	CALL_3
0x400392a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       165	strbuf.h	FUNCTION_97	IF_2
0x400392e	    0x48c743100000	               mov qword [rbx + 0x10], 0	       164	strbuf.h	FUNCTION_97
0x4003936	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x400393c	            0x744a	                            je 0x4003988	       165	strbuf.h	FUNCTION_97	IF_2
0x400393e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x4003941	          0x4c8b33	                    mov r14, qword [rbx]	       569	ref-filter.c	FUNCTION_20
0x4003944	          0x4d85f6	                           test r14, r14	       571	ref-filter.c	FUNCTION_20	IF_1
0x4003947	            0x740c	                            je 0x4003955	       571	ref-filter.c	FUNCTION_20	IF_1
0x4003949	        0x498d7e08	                      lea rdi, [r14 + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x400394d	          0x4c89ee	                            mov rsi, r13	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4003950	      0xe800000000	                          call 0x4003955	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4003955	          0x4c89ef	                            mov rdi, r13	       573	ref-filter.c	FUNCTION_20	CALL_2
0x4003958	      0xe800000000	                          call 0x400395d	       573	ref-filter.c	FUNCTION_20	CALL_2
0x400395d	          0x4889df	                            mov rdi, rbx	       574	ref-filter.c	FUNCTION_20	CALL_3
0x4003960	          0x4c89f3	                            mov rbx, r14	       569	ref-filter.c	FUNCTION_20
0x4003963	      0xe800000000	                          call 0x4003968	       574	ref-filter.c	FUNCTION_20	CALL_3
0x4003968	      0xe9f1feffff	                           jmp 0x400385e	       574	ref-filter.c	FUNCTION_20	CALL_3
0x400396d	           0xf1f00	                         nop dword [rax]	       574	ref-filter.c	FUNCTION_20	CALL_3
0x4003970	    0x803d00000000	                cmp byte [0x04003977], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x4003977	            0x754c	                           jne 0x40039c5	       168	strbuf.h	FUNCTION_97	CALL_2
0x4003979	          0x4989d5	                            mov r13, rdx	       168	strbuf.h	FUNCTION_97	CALL_2
0x400397c	      0xe934ffffff	                           jmp 0x40038b5	       168	strbuf.h	FUNCTION_97	CALL_2
0x4003981	     0xf1f80000000	                         nop dword [rax]	       168	strbuf.h	FUNCTION_97	CALL_2
0x4003988	    0x803d00000000	                cmp byte [0x0400398f], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x400398f	            0x74b0	                            je 0x4003941	       168	strbuf.h	FUNCTION_97	CALL_2
0x4003991	            0xeb32	                           jmp 0x40039c5	       168	strbuf.h	FUNCTION_97	CALL_2
0x4003993	       0xf1f440000	                   nop dword [rax + rax]	       168	strbuf.h	FUNCTION_97	CALL_2
0x4003998	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       165	strbuf.h	FUNCTION_97	IF_2
0x400399c	    0x48c743100000	               mov qword [rbx + 0x10], 0	       164	strbuf.h	FUNCTION_97
0x40039a4	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_97	IF_2
0x40039aa	            0x740c	                            je 0x40039b8	       165	strbuf.h	FUNCTION_97	IF_2
0x40039ac	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_97	IF_2
0x40039af	      0xe9aafeffff	                           jmp 0x400385e	       166	strbuf.h	FUNCTION_97	IF_2
0x40039b4	         0xf1f4000	                         nop dword [rax]	       166	strbuf.h	FUNCTION_97	IF_2
0x40039b8	    0x803d00000000	                cmp byte [0x040039bf], 0	       168	strbuf.h	FUNCTION_97	CALL_2
0x40039bf	     0xf8499feffff	                            je 0x400385e	       168	strbuf.h	FUNCTION_97	CALL_2
0x40039c5	      0xe800000000	                          call 0x40039ca	       168	strbuf.h	FUNCTION_97	CALL_2
0x40039ca	      0xe800000000	                          call 0x40039cf	       633	ref-filter.c	FUNCTION_23	CALL_6
0x40039cf	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x40039d1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40039d6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40039db	      0xe800000000	                          call 0x40039e0	        54	gettext.h	FUNCTION_93
0x40039e0	          0x4889c7	                            mov rdi, rax	       608	ref-filter.c	FUNCTION_23	CALL_2
0x40039e3	            0x31c0	                            xor eax, eax	       608	ref-filter.c	FUNCTION_23	CALL_2
0x40039e5	      0xe800000000	                          call 0x40039ea	       608	ref-filter.c	FUNCTION_23	CALL_2
get_head_description	DO,0:ELSE,5:CALL,18:WHILE,0:FOR,0:SWITCH,0:IF,5:functions,0	89
0x4003db0	              0x55	                                push rbp	      1379	ref-filter.c	FUNCTION_53
0x4003db1	              0x53	                                push rbx	      1379	ref-filter.c	FUNCTION_53
0x4003db2	      0xb910000000	                           mov ecx, 0x10	        90	string3.h	FUNCTION_136	CALL_6
0x4003db7	      0xbe01000000	                              mov esi, 1	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003dbc	    0x4881ecb80000	                           sub rsp, 0xb8	      1379	ref-filter.c	FUNCTION_53
0x4003dc3	      0x488d542420	                   lea rdx, [rsp + 0x20]	        90	string3.h	FUNCTION_136	CALL_6
0x4003dc8	    0x48c704240000	                      mov qword [rsp], 0	      1380	ref-filter.c	FUNCTION_53
0x4003dd0	    0x48c744240800	                  mov qword [rsp + 8], 0	      1380	ref-filter.c	FUNCTION_53
0x4003dd9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1379	ref-filter.c	FUNCTION_53
0x4003de2	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      1379	ref-filter.c	FUNCTION_53
0x4003dea	            0x31c0	                            xor eax, eax	      1379	ref-filter.c	FUNCTION_53
0x4003dec	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_136	CALL_6
0x4003def	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1380	ref-filter.c	FUNCTION_53
0x4003df8	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_136	CALL_6
0x4003dfb	          0x4889d7	                            mov rdi, rdx	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003dfe	      0xe800000000	                          call 0x4003e03	      1383	ref-filter.c	FUNCTION_53	CALL_2
0x4003e03	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003e07	            0x85f6	                           test esi, esi	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003e09	            0x7508	                           jne 0x4003e13	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003e0b	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003e0f	            0x85c9	                           test ecx, ecx	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003e11	            0x747d	                            je 0x4003e90	      1384	ref-filter.c	FUNCTION_53	IF_1
0x4003e13	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x4003e18	          0x4885ed	                           test rbp, rbp	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x4003e1b	     0xf84bf000000	                            je 0x4003ee0	      1386	ref-filter.c	FUNCTION_53	IF_1	IF_2
0x4003e21	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003e26	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003e2b	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4003e2d	          0x4889e3	                            mov rbx, rsp	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003e30	      0xe800000000	                          call 0x4003e35	        54	gettext.h	FUNCTION_93
0x4003e35	          0x4889ea	                            mov rdx, rbp	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003e38	          0x4889c6	                            mov rsi, rax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003e3b	          0x4889e7	                            mov rdi, rsp	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003e3e	            0x31c0	                            xor eax, eax	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003e40	      0xe800000000	                          call 0x4003e45	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003e45	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x4003e4a	      0xe800000000	                          call 0x4003e4f	      1413	ref-filter.c	FUNCTION_53	CALL_15
0x4003e4f	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4003e54	      0xe800000000	                          call 0x4003e59	      1414	ref-filter.c	FUNCTION_53	CALL_16
0x4003e59	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4003e5e	      0xe800000000	                          call 0x4003e63	      1415	ref-filter.c	FUNCTION_53	CALL_17
0x4003e63	            0x31f6	                            xor esi, esi	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003e65	          0x4889df	                            mov rdi, rbx	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003e68	      0xe800000000	                          call 0x4003e6d	      1416	ref-filter.c	FUNCTION_53	CALL_18
0x4003e6d	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	      1417	ref-filter.c	FUNCTION_53
0x4003e75	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1417	ref-filter.c	FUNCTION_53
0x4003e7e	     0xf85a1000000	                           jne 0x4003f25	      1417	ref-filter.c	FUNCTION_53
0x4003e84	    0x4881c4b80000	                           add rsp, 0xb8	      1417	ref-filter.c	FUNCTION_53
0x4003e8b	              0x5b	                                 pop rbx	      1417	ref-filter.c	FUNCTION_53
0x4003e8c	              0x5d	                                 pop rbp	      1417	ref-filter.c	FUNCTION_53
0x4003e8d	              0xc3	                                     ret	      1417	ref-filter.c	FUNCTION_53
0x4003e8e	            0x6690	                                     nop	      1417	ref-filter.c	FUNCTION_53
0x4003e90	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4003e94	            0x85d2	                           test edx, edx	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4003e96	            0x7530	                           jne 0x4003ec8	      1392	ref-filter.c	FUNCTION_53	ELSE_2	IF_3
0x4003e98	      0x488b6c2458	            mov rbp, qword [rsp + 0x58] 	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x4003e9d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003ea2	          0x4885ed	                           test rbp, rbp	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x4003ea5	            0x7451	                            je 0x4003ef8	      1395	ref-filter.c	FUNCTION_53	ELSE_3	IF_4
0x4003ea7	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4003eab	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003eb0	            0x85c0	                           test eax, eax	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4003eb2	     0xf8573ffffff	                           jne 0x4003e2b	      1396	ref-filter.c	FUNCTION_53	ELSE_3	IF_4	IF_5
0x4003eb8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003ebd	      0xe969ffffff	                           jmp 0x4003e2b	        54	gettext.h	FUNCTION_93
0x4003ec2	    0x660f1f440000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_93
0x4003ec8	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	      1393	ref-filter.c	FUNCTION_53	ELSE_2	IF_3	CALL_8
0x4003ecd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003ed2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003ed7	      0xe94fffffff	                           jmp 0x4003e2b	        54	gettext.h	FUNCTION_93
0x4003edc	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_93
0x4003ee0	      0x488b6c2458	            mov rbp, qword [rsp + 0x58] 	      1390	ref-filter.c	FUNCTION_53	IF_1	ELSE_1	CALL_6
0x4003ee5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003eea	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003eef	      0xe937ffffff	                           jmp 0x4003e2b	        54	gettext.h	FUNCTION_93
0x4003ef4	         0xf1f4000	                         nop dword [rax]	        54	gettext.h	FUNCTION_93
0x4003ef8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003efd	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4003eff	          0x4889e3	                            mov rbx, rsp	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003f02	      0xe800000000	                          call 0x4003f07	        54	gettext.h	FUNCTION_93
0x4003f07	          0x4889c5	                            mov rbp, rax	        54	gettext.h	FUNCTION_93
0x4003f0a	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003f0d	      0xe800000000	                          call 0x4003f12	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003f12	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003f15	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003f18	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003f1b	      0xe800000000	                          call 0x4003f20	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003f20	      0xe920ffffff	                           jmp 0x4003e45	       279	strbuf.h	FUNCTION_99	CALL_2
0x4003f25	      0xe800000000	                          call 0x4003f2a	      1417	ref-filter.c	FUNCTION_53
parse_opt_merge_filter	DO,0:ELSE,1:CALL,8:WHILE,0:FOR,0:SWITCH,0:IF,4:functions,0	73
0x4005930	            0x4155	                                push r13	      2347	ref-filter.c	FUNCTION_90
0x4005932	            0x4154	                                push r12	      2347	ref-filter.c	FUNCTION_90
0x4005934	          0x4989f5	                            mov r13, rsi	      2347	ref-filter.c	FUNCTION_90
0x4005937	              0x55	                                push rbp	      2347	ref-filter.c	FUNCTION_90
0x4005938	              0x53	                                push rbx	      2347	ref-filter.c	FUNCTION_90
0x4005939	          0x4889fb	                            mov rbx, rdi	      2347	ref-filter.c	FUNCTION_90
0x400593c	      0xbe00000000	                              mov esi, 0	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x4005941	        0x4883ec28	                           sub rsp, 0x28	      2347	ref-filter.c	FUNCTION_90
0x4005945	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	      2348	ref-filter.c	FUNCTION_90
0x4005949	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x400594d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2347	ref-filter.c	FUNCTION_90
0x4005956	      0x4889442418	             mov qword [rsp + 0x18], rax	      2347	ref-filter.c	FUNCTION_90
0x400595b	            0x31c0	                            xor eax, eax	      2347	ref-filter.c	FUNCTION_90
0x400595d	      0xe800000000	                          call 0x4005962	      2350	ref-filter.c	FUNCTION_90	CALL_1
0x4005962	          0x8b5530	            mov edx, dword [rbp + 0x30] 	      2352	ref-filter.c	FUNCTION_90	IF_1
0x4005965	            0x85d2	                           test edx, edx	      2352	ref-filter.c	FUNCTION_90	IF_1
0x4005967	            0x741f	                            je 0x4005988	      2352	ref-filter.c	FUNCTION_90	IF_1
0x4005969	            0x31d2	                            xor edx, edx	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x400596b	            0x85c0	                           test eax, eax	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x400596d	            0x7471	                            je 0x40059e0	      2353	ref-filter.c	FUNCTION_90	IF_1	IF_2
0x400596f	      0xbe00000000	                              mov esi, 0	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4005974	          0x4889df	                            mov rdi, rbx	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4005977	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x400597d	      0xe800000000	                          call 0x4005982	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4005982	            0xeb34	                           jmp 0x40059b8	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4005984	         0xf1f4000	                         nop dword [rax]	      2354	ref-filter.c	FUNCTION_90	IF_1	IF_2	CALL_2
0x4005988	          0x83f801	                              cmp eax, 1	      2360	ref-filter.c	FUNCTION_90
0x400598b	          0x4889e6	                            mov rsi, rsp	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x400598e	          0x4c89ef	                            mov rdi, r13	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x4005991	            0x19c0	                            sbb eax, eax	      2360	ref-filter.c	FUNCTION_90
0x4005993	          0x83c002	                              add eax, 2	      2360	ref-filter.c	FUNCTION_90
0x4005996	          0x894530	            mov dword [rbp + 0x30], eax 	      2360	ref-filter.c	FUNCTION_90
0x4005999	      0xe800000000	                          call 0x400599e	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x400599e	            0x85c0	                           test eax, eax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x40059a0	          0x4189c4	                           mov r12d, eax	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x40059a3	            0x7550	                           jne 0x40059f5	      2364	ref-filter.c	FUNCTION_90	IF_3	CALL_4
0x40059a5	            0x31f6	                            xor esi, esi	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x40059a7	          0x4889e7	                            mov rdi, rsp	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x40059aa	      0xe800000000	                          call 0x40059af	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x40059af	          0x4885c0	                           test rax, rax	      2368	ref-filter.c	FUNCTION_90	IF_4
0x40059b2	        0x48894538	            mov qword [rbp + 0x38], rax 	      2367	ref-filter.c	FUNCTION_90	CALL_7
0x40059b6	            0x745b	                            je 0x4005a13	      2368	ref-filter.c	FUNCTION_90	IF_4
0x40059b8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2372	ref-filter.c	FUNCTION_90
0x40059bd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2372	ref-filter.c	FUNCTION_90
0x40059c6	          0x4489e0	                           mov eax, r12d	      2372	ref-filter.c	FUNCTION_90
0x40059c9	            0x755f	                           jne 0x4005a2a	      2372	ref-filter.c	FUNCTION_90
0x40059cb	        0x4883c428	                           add rsp, 0x28	      2372	ref-filter.c	FUNCTION_90
0x40059cf	              0x5b	                                 pop rbx	      2372	ref-filter.c	FUNCTION_90
0x40059d0	              0x5d	                                 pop rbp	      2372	ref-filter.c	FUNCTION_90
0x40059d1	            0x415c	                                 pop r12	      2372	ref-filter.c	FUNCTION_90
0x40059d3	            0x415d	                                 pop r13	      2372	ref-filter.c	FUNCTION_90
0x40059d5	              0xc3	                                     ret	      2372	ref-filter.c	FUNCTION_90
0x40059d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2372	ref-filter.c	FUNCTION_90
0x40059e0	      0xbe00000000	                              mov esi, 0	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40059e5	          0x4889df	                            mov rdi, rbx	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40059e8	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40059ee	      0xe800000000	                          call 0x40059f3	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40059f3	            0xebc3	                           jmp 0x40059b8	      2356	ref-filter.c	FUNCTION_90	IF_1	ELSE_1	CALL_3
0x40059f5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40059fa	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x40059fc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4005a01	      0xe800000000	                          call 0x4005a06	        54	gettext.h	FUNCTION_93
0x4005a06	          0x4c89ee	                            mov rsi, r13	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4005a09	          0x4889c7	                            mov rdi, rax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4005a0c	            0x31c0	                            xor eax, eax	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4005a0e	      0xe800000000	                          call 0x4005a13	      2365	ref-filter.c	FUNCTION_90	CALL_6
0x4005a13	            0x31d2	                            xor edx, edx	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005a15	      0xbe00000000	                              mov esi, 0	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005a1a	          0x4889df	                            mov rdi, rbx	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005a1d	      0xe800000000	                          call 0x4005a22	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005a22	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005a28	            0xeb8e	                           jmp 0x40059b8	      2369	ref-filter.c	FUNCTION_90	CALL_8
0x4005a2a	      0xe800000000	                  call section_end..text	      2372	ref-filter.c	FUNCTION_90
setup_ref_filter_porcelain_msg	DO,0:ELSE,0:CALL,4:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	23
0x4003b90	        0x4883ec08	                              sub rsp, 8	        34	ref-filter.c	FUNCTION_1
0x4003b94	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003b99	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003b9e	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4003ba0	      0xe800000000	                          call 0x4003ba5	        54	gettext.h	FUNCTION_93
0x4003ba5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003baa	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003baf	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4003bb1	    0x488905000000	            mov qword [0x04003bb8], rax 	        35	ref-filter.c	FUNCTION_1	CALL_1
0x4003bb8	      0xe800000000	                          call 0x4003bbd	        54	gettext.h	FUNCTION_93
0x4003bbd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003bc2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003bc7	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4003bc9	    0x488905000000	            mov qword [0x04003bd0], rax 	        36	ref-filter.c	FUNCTION_1	CALL_2
0x4003bd0	      0xe800000000	                          call 0x4003bd5	        54	gettext.h	FUNCTION_93
0x4003bd5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4003bda	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x4003bdf	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x4003be1	    0x488905000000	            mov qword [0x04003be8], rax 	        37	ref-filter.c	FUNCTION_1	CALL_3
0x4003be8	      0xe800000000	                          call 0x4003bed	        54	gettext.h	FUNCTION_93
0x4003bed	    0x488905000000	            mov qword [0x04003bf4], rax 	        38	ref-filter.c	FUNCTION_1	CALL_4
0x4003bf4	        0x4883c408	                              add rsp, 8	        39	ref-filter.c	FUNCTION_1
0x4003bf8	              0xc3	                                     ret	        39	ref-filter.c	FUNCTION_1
fill_remote_ref_details	DO,0:ELSE,14:CALL,15:WHILE,0:FOR,0:SWITCH,0:IF,16:functions,0	145
0x40001b0	            0x4154	                                push r12	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001b2	              0x55	                                push rbp	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001b3	          0x4889cd	                            mov rbp, rcx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001b6	              0x53	                                push rbx	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001b7	          0x4889fb	                            mov rbx, rdi	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001ba	        0x4883ec10	                           sub rsp, 0x10	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001be	    0x64488b042528	                mov rax, qword fs:[0x28]	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001c7	      0x4889442408	                mov qword [rsp + 8], rax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001cc	            0x31c0	                            xor eax, eax	      1320	ref-filter.c	ELSE_3	FUNCTION_52
0x40001ce	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x40001d1	            0x85c0	                           test eax, eax	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x40001d3	            0x746b	                            je 0x4000240	      1322	ref-filter.c	ELSE_3	FUNCTION_52	IF_1
0x40001d5	          0x83f801	                              cmp eax, 1	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x40001d8	          0x4889d7	                            mov rdi, rdx	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x40001db	     0xf849f000000	                            je 0x4000280	      1324	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2
0x40001e1	          0x83f802	                              cmp eax, 2	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x40001e4	     0xf8416010000	                            je 0x4000300	      1342	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8
0x40001ea	          0x83f803	                              cmp eax, 3	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x40001ed	            0x7461	                            je 0x4000250	      1355	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13
0x40001ef	          0x83f804	                              cmp eax, 4	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x40001f2	     0xf85fd010000	                           jne 0x40003f5	      1364	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	ELSE_11
0x40001f8	         0xfb67320	           movzx esi, byte [rbx + 0x20] 	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x40001fc	      0x488d542404	                      lea rdx, [rsp + 4]	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4000201	          0x40d0ee	                              shr sil, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4000204	          0x83e601	                              and esi, 1	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x4000207	      0xe800000000	                          call 0x400020c	      1368	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_13
0x400020c	        0x8b542404	                mov edx, dword [rsp + 4]	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x4000210	            0x85d2	                           test edx, edx	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x4000212	            0x755c	                           jne 0x4000270	      1370	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	IF_16
0x4000214	    0x48c745000000	                      mov qword [rbp], 0	      1373	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	ELSE_13
0x400021c	      0x488b442408	                mov rax, qword [rsp + 8]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4000221	    0x644833042528	                xor rax, qword fs:[0x28]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x400022a	     0xf85c0010000	                           jne 0x40003f0	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4000230	        0x4883c410	                           add rsp, 0x10	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4000234	              0x5b	                                 pop rbx	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4000235	              0x5d	                                 pop rbp	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4000236	            0x415c	                                 pop r12	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4000238	              0xc3	                                     ret	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4000239	     0xf1f80000000	                         nop dword [rax]	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x4000240	        0x488d7f14	                   lea rdi, [rdi + 0x14]	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4000244	      0xe817feffff	                       call sym.show_ref	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4000249	        0x48894500	                    mov qword [rbp], rax	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x400024d	            0xebcd	                           jmp 0x400021c	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x400024f	              0x90	                                     nop	      1323	ref-filter.c	ELSE_3	FUNCTION_52	CALL_1
0x4000250	        0xf6432002	               test byte [rbx + 0x20], 2	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4000254	      0x488d742404	                      lea rsi, [rsp + 4]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4000259	     0xf84e9000000	                            je 0x4000348	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x400025f	      0xe800000000	                          call 0x4000264	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4000264	            0xeba6	                           jmp 0x400020c	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4000266	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4000270	          0x4889c7	                            mov rdi, rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4000273	      0xe800000000	                          call 0x4000278	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4000278	        0x48894500	                    mov qword [rbp], rax	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x400027c	            0xeb9e	                           jmp 0x400021c	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x400027e	            0x6690	                                     nop	      1371	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_11	ELSE_12	IF_15	CALL_14
0x4000280	      0x488d542404	                      lea rdx, [rsp + 4]	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000285	            0x31c9	                            xor ecx, ecx	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000287	    0x41b801000000	                              mov r8d, 1	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x400028d	          0x4889e6	                            mov rsi, rsp	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000290	      0xe800000000	                          call 0x4000295	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000295	            0x85c0	                           test eax, eax	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x4000297	     0xf883b010000	                            js 0x40003d8	      1325	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_2
0x400029d	          0x8b3424	                    mov esi, dword [rsp]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40002a0	            0x85f6	                           test esi, esi	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40002a2	     0xf84b0000000	                            je 0x4000358	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40002a8	        0x8b542404	                mov edx, dword [rsp + 4]	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40002ac	            0x85d2	                           test edx, edx	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40002ae	     0xf85ec000000	                           jne 0x40003a0	      1332	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40002b4	    0x488b3d000000	            mov rdi, qword [0x040002bb] 	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40002bb	            0x31c0	                            xor eax, eax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40002bd	      0xe800000000	                          call 0x40002c2	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40002c2	        0x48894500	                    mov qword [rbp], rax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40002c6	          0x4989c4	                            mov r12, rax	      1333	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_4	IF_6
0x40002c9	        0xf6432001	               test byte [rbx + 0x20], 1	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40002cd	     0xf8549ffffff	                           jne 0x400021c	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40002d3	      0x41803c2400	                       cmp byte [r12], 0	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40002d8	     0xf843effffff	                            je 0x400021c	      1337	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7
0x40002de	          0x4c89e6	                            mov rsi, r12	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x40002e1	      0xbf00000000	                              mov edi, 0	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x40002e6	            0x31c0	                            xor eax, eax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x40002e8	      0xe800000000	                          call 0x40002ed	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x40002ed	          0x4c89e7	                            mov rdi, r12	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x40002f0	        0x48894500	                    mov qword [rbp], rax	      1339	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_7
0x40002f4	      0xe800000000	                          call 0x40002f9	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x40002f9	      0xe91effffff	                           jmp 0x400021c	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x40002fe	            0x6690	                                     nop	      1340	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	IF_7	CALL_8
0x4000300	      0x488d542404	                      lea rdx, [rsp + 4]	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4000305	            0x31c9	                            xor ecx, ecx	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4000307	    0x41b801000000	                              mov r8d, 1	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x400030d	          0x4889e6	                            mov rsi, rsp	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4000310	      0xe800000000	                          call 0x4000315	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4000315	            0x85c0	                           test eax, eax	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x4000317	     0xf88fffeffff	                            js 0x400021c	      1343	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_9	CALL_9
0x400031d	          0x8b3c24	                    mov edi, dword [rsp]	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000320	            0x85ff	                           test edi, edi	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000322	            0x755c	                           jne 0x4000380	      1347	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000324	        0x8b742404	                mov esi, dword [rsp + 4]	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000328	      0xba00000000	                              mov edx, 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x400032d	      0xb800000000	                              mov eax, 0	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000332	            0x85f6	                           test esi, esi	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000334	        0x480f44c2	                          cmove rax, rdx	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000338	        0x48894500	                    mov qword [rbp], rax	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x400033c	      0xe9dbfeffff	                           jmp 0x400021c	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000341	     0xf1f80000000	                         nop dword [rax]	      1348	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	IF_10
0x4000348	      0xe800000000	                          call 0x400034d	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x400034d	      0xe9bafeffff	                           jmp 0x400020c	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4000352	    0x660f1f440000	                    nop word [rax + rax]	      1358	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_9	ELSE_10	IF_13	CALL_10
0x4000358	        0x8b742404	                mov esi, dword [rsp + 4]	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x400035c	            0x85f6	                           test esi, esi	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x400035e	            0x7460	                            je 0x40003c0	      1328	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x4000360	    0x488b3d000000	            mov rdi, qword [0x04000367] 	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4000367	            0x31c0	                            xor eax, eax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4000369	      0xe800000000	                          call 0x400036e	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x400036e	        0x48894500	                    mov qword [rbp], rax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4000372	          0x4989c4	                            mov r12, rax	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4000375	      0xe94fffffff	                           jmp 0x40002c9	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x400037a	    0x660f1f440000	                    nop word [rax + rax]	      1331	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	CALL_4
0x4000380	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000384	      0xba00000000	                              mov edx, 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000389	      0xb800000000	                              mov eax, 0	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x400038e	            0x85c9	                           test ecx, ecx	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000390	        0x480f44c2	                          cmove rax, rdx	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000394	        0x48894500	                    mov qword [rbp], rax	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x4000398	      0xe97ffeffff	                           jmp 0x400021c	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x400039d	           0xf1f00	                         nop dword [rax]	      1352	ref-filter.c	FUNCTION_52	ELSE_3	ELSE_6	IF_8	ELSE_8	IF_12
0x40003a0	    0x488b3d000000	            mov rdi, qword [0x040003a7] 	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40003a7	            0x31c0	                            xor eax, eax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40003a9	      0xe800000000	                          call 0x40003ae	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40003ae	        0x48894500	                    mov qword [rbp], rax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40003b2	          0x4989c4	                            mov r12, rax	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40003b5	      0xe90fffffff	                           jmp 0x40002c9	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40003ba	    0x660f1f440000	                    nop word [rax + rax]	      1335	ref-filter.c	FUNCTION_52	ELSE_1	IF_2	ELSE_3	ELSE_5	CALL_6
0x40003c0	    0x48c745000000	                      mov qword [rbp], 0	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40003c8	    0x41bc00000000	                             mov r12d, 0	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40003ce	      0xe9f6feffff	                           jmp 0x40002c9	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40003d3	       0xf1f440000	                   nop dword [rax + rax]	      1329	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	ELSE_2	IF_4
0x40003d8	    0x488b3d000000	            mov rdi, qword [0x040003df] 	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x40003df	      0xe800000000	                          call 0x40003e4	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x40003e4	        0x48894500	                    mov qword [rbp], rax	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x40003e8	          0x4989c4	                            mov r12, rax	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x40003eb	      0xe9d9feffff	                           jmp 0x40002c9	      1327	ref-filter.c	ELSE_3	FUNCTION_52	ELSE_1	IF_2	IF_3	CALL_3
0x40003f0	      0xe800000000	                          call 0x40003f5	      1376	ref-filter.c	FUNCTION_52	ELSE_3
0x40003f5	      0xbf00000000	                              mov edi, 0	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x40003fa	            0x31c0	                            xor eax, eax	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
0x40003fc	      0xe800000000	                          call 0x4000401	      1375	ref-filter.c	FUNCTION_52	ELSE_3	CALL_15
trailers_atom_parser	DO,0:ELSE,2:CALL,7:WHILE,0:FOR,1:SWITCH,0:IF,3:functions,0	86
0x4000f20	            0x4155	                                push r13	       222	ref-filter.c	FUNCTION_8
0x4000f22	            0x4154	                                push r12	       222	ref-filter.c	FUNCTION_8
0x4000f24	          0x4989f4	                            mov r12, rsi	       222	ref-filter.c	FUNCTION_8
0x4000f27	              0x55	                                push rbp	       222	ref-filter.c	FUNCTION_8
0x4000f28	              0x53	                                push rbx	       222	ref-filter.c	FUNCTION_8
0x4000f29	        0x4883ec38	                           sub rsp, 0x38	       222	ref-filter.c	FUNCTION_8
0x4000f2d	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	ref-filter.c	FUNCTION_8
0x4000f36	      0x4889442428	             mov qword [rsp + 0x28], rax	       222	ref-filter.c	FUNCTION_8
0x4000f3b	            0x31c0	                            xor eax, eax	       222	ref-filter.c	FUNCTION_8
0x4000f3d	      0x804c241001	                 or byte [rsp + 0x10], 1	       223	ref-filter.c	FUNCTION_8
0x4000f42	          0x4885d2	                           test rdx, rdx	       226	ref-filter.c	FUNCTION_8	IF_1
0x4000f45	    0x48c704240000	                      mov qword [rsp], 0	       223	ref-filter.c	FUNCTION_8
0x4000f4d	    0xc74424080000	                  mov dword [rsp + 8], 0	       223	ref-filter.c	FUNCTION_8
0x4000f55	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       223	ref-filter.c	FUNCTION_8
0x4000f5d	    0x48c744241800	               mov qword [rsp + 0x18], 0	       223	ref-filter.c	FUNCTION_8
0x4000f66	     0xf84fc000000	                            je 0x4001068	       226	ref-filter.c	FUNCTION_8	IF_1
0x4000f6c	          0x4889d6	                            mov rsi, rdx	       226	ref-filter.c	FUNCTION_8	IF_1
0x4000f6f	          0x4889cd	                            mov rbp, rcx	       226	ref-filter.c	FUNCTION_8	IF_1
0x4000f72	      0xba2c000000	                           mov edx, 0x2c	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000f77	      0xb9ffffffff	                     mov ecx, 0xffffffff	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000f7c	          0x4889e7	                            mov rdi, rsp	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000f7f	          0x4989e5	                            mov r13, rsp	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000f82	      0xe800000000	                          call 0x4000f87	       227	ref-filter.c	FUNCTION_8	IF_1	CALL_1
0x4000f87	        0x8b542408	                mov edx, dword [rsp + 8]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000f8b	            0x85d2	                           test edx, edx	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000f8d	            0x7468	                            je 0x4000ff7	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000f8f	        0x448d42ff	                      lea r8d, [rdx - 1]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000f93	        0x488b0424	                    mov rax, qword [rsp]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000f97	    0x41b900000000	                              mov r9d, 0	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000f9d	        0x4983c001	                               add r8, 1	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000fa1	        0x49c1e004	                               shl r8, 4	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000fa5	          0x4901c0	                             add r8, rax	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000fa8	            0xeb18	                           jmp 0x4000fc2	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000faa	    0x660f1f440000	                    nop word [rax + rax]	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000fb0	        0x4883c010	                           add rax, 0x10	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000fb4	    0x41c744242401	               mov dword [r12 + 0x24], 1	       231	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2
0x4000fbd	          0x4c39c0	                             cmp rax, r8	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000fc0	            0x7435	                            je 0x4000ff7	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000fc2	          0x488b18	                    mov rbx, qword [rax]	       229	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000fc5	      0xb907000000	                              mov ecx, 7	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000fca	          0x4c89cf	                             mov rdi, r9	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000fcd	          0x4889de	                            mov rsi, rbx	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000fd0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000fd2	            0x74dc	                            je 0x4000fb0	       230	ref-filter.c	FUNCTION_8	IF_1	FOR_1	IF_2	CALL_2
0x4000fd4	      0xbf00000000	                              mov edi, 0	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000fd9	      0xb905000000	                              mov ecx, 5	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000fde	          0x4889de	                            mov rsi, rbx	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000fe1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000fe3	            0x754b	                           jne 0x4001030	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000fe5	        0x4883c010	                           add rax, 0x10	       232	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000fe9	    0x41c744241c01	               mov dword [r12 + 0x1c], 1	       233	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_1	IF_3
0x4000ff2	          0x4c39c0	                             cmp rax, r8	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000ff5	            0x75cb	                           jne 0x4000fc2	       228	ref-filter.c	FUNCTION_8	IF_1	FOR_1
0x4000ff7	    0x41c744241006	               mov dword [r12 + 0x10], 6	       241	ref-filter.c	FUNCTION_8
0x4001000	            0x31f6	                            xor esi, esi	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4001002	          0x4c89ef	                            mov rdi, r13	       242	ref-filter.c	FUNCTION_8	CALL_7
0x4001005	      0xe800000000	                          call 0x400100a	       242	ref-filter.c	FUNCTION_8	CALL_7
0x400100a	            0x31c0	                            xor eax, eax	       243	ref-filter.c	FUNCTION_8
0x400100c	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       244	ref-filter.c	FUNCTION_8
0x4001011	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       244	ref-filter.c	FUNCTION_8
0x400101a	            0x7551	                           jne 0x400106d	       244	ref-filter.c	FUNCTION_8
0x400101c	        0x4883c438	                           add rsp, 0x38	       244	ref-filter.c	FUNCTION_8
0x4001020	              0x5b	                                 pop rbx	       244	ref-filter.c	FUNCTION_8
0x4001021	              0x5d	                                 pop rbp	       244	ref-filter.c	FUNCTION_8
0x4001022	            0x415c	                                 pop r12	       244	ref-filter.c	FUNCTION_8
0x4001024	            0x415d	                                 pop r13	       244	ref-filter.c	FUNCTION_8
0x4001026	              0xc3	                                     ret	       244	ref-filter.c	FUNCTION_8
0x4001027	    0x660f1f840000	                    nop word [rax + rax]	       244	ref-filter.c	FUNCTION_8
0x4001030	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x4001035	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x400103a	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x400103c	      0xe800000000	                          call 0x4001041	        54	gettext.h	FUNCTION_93
0x4001041	          0x4889da	                            mov rdx, rbx	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4001044	          0x4889c6	                            mov rsi, rax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4001047	          0x4889ef	                            mov rdi, rbp	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x400104a	            0x31c0	                            xor eax, eax	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x400104c	      0xe800000000	                          call 0x4001051	       235	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_5
0x4001051	            0x31f6	                            xor esi, esi	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4001053	          0x4c89ef	                            mov rdi, r13	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x4001056	      0xe800000000	                          call 0x400105b	       236	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2	CALL_6
0x400105b	      0xb8ffffffff	                     mov eax, 0xffffffff	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4001060	            0xebaa	                           jmp 0x400100c	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4001062	    0x660f1f440000	                    nop word [rax + rax]	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x4001068	          0x4989e5	                            mov r13, rsp	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x400106b	            0xeb8a	                           jmp 0x4000ff7	       237	ref-filter.c	FUNCTION_8	IF_1	FOR_1	ELSE_2
0x400106d	      0xe800000000	                          call 0x4001072	       244	ref-filter.c	FUNCTION_8
end_align_handler	DO,0:ELSE,0:CALL,3:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	39
0x4000b20	              0x53	                                push rbx	       579	ref-filter.c	FUNCTION_21
0x4000b21	        0x4883ec40	                           sub rsp, 0x40	       579	ref-filter.c	FUNCTION_21
0x4000b25	          0x488b1f	                    mov rbx, qword [rdi]	       580	ref-filter.c	FUNCTION_21
0x4000b28	    0x64488b042528	                mov rax, qword fs:[0x28]	       579	ref-filter.c	FUNCTION_21
0x4000b31	      0x4889442438	             mov qword [rsp + 0x38], rax	       579	ref-filter.c	FUNCTION_21
0x4000b36	            0x31c0	                            xor eax, eax	       579	ref-filter.c	FUNCTION_21
0x4000b38	          0x4889e7	                            mov rdi, rsp	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4000b3b	    0x48c704240000	                      mov qword [rsp], 0	       582	ref-filter.c	FUNCTION_21
0x4000b43	    0x48c744240800	                  mov qword [rsp + 8], 0	       582	ref-filter.c	FUNCTION_21
0x4000b4c	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       581	ref-filter.c	FUNCTION_21
0x4000b50	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4000b54	    0x48c744241000	               mov qword [rsp + 0x10], 0	       582	ref-filter.c	FUNCTION_21
0x4000b5d	          0x8b5004	                mov edx, dword [rax + 4]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4000b60	            0x8b30	                    mov esi, dword [rax]	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4000b62	      0xe800000000	                          call 0x4000b67	       584	ref-filter.c	FUNCTION_21	CALL_1
0x4000b67	        0x488b3c24	                    mov rdi, qword [rsp]	        53	string3.h	FUNCTION_133	CALL_3
0x4000b6b	        0x488b7308	                mov rsi, qword [rbx + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4000b6f	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x4000b73	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        53	string3.h	FUNCTION_133	CALL_3
0x4000b77	        0x48897b08	                mov qword [rbx + 8], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4000b7b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4000b80	      0x4889742420	             mov qword [rsp + 0x20], rsi	        53	string3.h	FUNCTION_133	CALL_3
0x4000b85	      0x48894c2428	             mov qword [rsp + 0x28], rcx	        53	string3.h	FUNCTION_133	CALL_3
0x4000b8a	      0x4889542430	             mov qword [rsp + 0x30], rdx	        53	string3.h	FUNCTION_133	CALL_3
0x4000b8f	        0x48897b10	             mov qword [rbx + 0x10], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4000b93	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x4000b98	        0x48897b18	             mov qword [rbx + 0x18], rdi	        53	string3.h	FUNCTION_133	CALL_3
0x4000b9c	          0x4889e7	                            mov rdi, rsp	       586	ref-filter.c	FUNCTION_21	CALL_3
0x4000b9f	        0x48893424	                    mov qword [rsp], rsi	        53	string3.h	FUNCTION_133	CALL_3
0x4000ba3	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_133	CALL_3
0x4000ba8	      0x4889542410	             mov qword [rsp + 0x10], rdx	        53	string3.h	FUNCTION_133	CALL_3
0x4000bad	      0xe800000000	                          call 0x4000bb2	       586	ref-filter.c	FUNCTION_21	CALL_3
0x4000bb2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       587	ref-filter.c	FUNCTION_21
0x4000bb7	    0x644833042528	                xor rax, qword fs:[0x28]	       587	ref-filter.c	FUNCTION_21
0x4000bc0	            0x7506	                           jne 0x4000bc8	       587	ref-filter.c	FUNCTION_21
0x4000bc2	        0x4883c440	                           add rsp, 0x40	       587	ref-filter.c	FUNCTION_21
0x4000bc6	              0x5b	                                 pop rbx	       587	ref-filter.c	FUNCTION_21
0x4000bc7	              0xc3	                                     ret	       587	ref-filter.c	FUNCTION_21
0x4000bc8	      0xe800000000	                          call 0x4000bcd	       587	ref-filter.c	FUNCTION_21
get_object	DO,0:ELSE,2:CALL,9:WHILE,0:FOR,0:SWITCH,0:IF,3:functions,0	419
0x40021b0	            0x4157	                                push r15	      1436	ref-filter.c	FUNCTION_56
0x40021b2	            0x4156	                                push r14	      1436	ref-filter.c	FUNCTION_56
0x40021b4	          0x4d89c7	                             mov r15, r8	      1436	ref-filter.c	FUNCTION_56
0x40021b7	            0x4155	                                push r13	      1436	ref-filter.c	FUNCTION_56
0x40021b9	            0x4154	                                push r12	      1436	ref-filter.c	FUNCTION_56
0x40021bb	          0x4189d4	                           mov r12d, edx	      1436	ref-filter.c	FUNCTION_56
0x40021be	              0x55	                                push rbp	      1436	ref-filter.c	FUNCTION_56
0x40021bf	              0x53	                                push rbx	      1436	ref-filter.c	FUNCTION_56
0x40021c0	          0x4889f3	                            mov rbx, rsi	      1436	ref-filter.c	FUNCTION_56
0x40021c3	          0x4889fd	                            mov rbp, rdi	      1436	ref-filter.c	FUNCTION_56
0x40021c6	          0x4989cd	                            mov r13, rcx	      1436	ref-filter.c	FUNCTION_56
0x40021c9	          0x4889df	                            mov rdi, rbx	      1200	cache.h	FUNCTION_166	CALL_1
0x40021cc	        0x4883ec68	                           sub rsp, 0x68	      1436	ref-filter.c	FUNCTION_56
0x40021d0	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_166	CALL_1
0x40021d5	      0x488d542438	                   lea rdx, [rsp + 0x38]	      1200	cache.h	FUNCTION_166	CALL_1
0x40021da	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1200	cache.h	FUNCTION_166	CALL_1
0x40021df	    0x64488b042528	                mov rax, qword fs:[0x28]	      1436	ref-filter.c	FUNCTION_56
0x40021e8	      0x4889442458	             mov qword [rsp + 0x58], rax	      1436	ref-filter.c	FUNCTION_56
0x40021ed	            0x31c0	                            xor eax, eax	      1436	ref-filter.c	FUNCTION_56
0x40021ef	      0xe800000000	                          call 0x40021f4	      1200	cache.h	FUNCTION_166	CALL_1
0x40021f4	          0x4885c0	                           test rax, rax	       806	ref-filter.c	FUNCTION_31	IF_1
0x40021f7	      0x4889442408	                mov qword [rsp + 8], rax	      1200	cache.h	FUNCTION_166	CALL_1
0x40021fc	     0xf84de030000	                            je 0x40025e0	       806	ref-filter.c	FUNCTION_31	IF_1
0x4002202	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002207	        0x8b742440	            mov esi, dword [rsp + 0x40] 	       807	ref-filter.c	FUNCTION_31	CALL_2
0x400220b	      0x4c8d442434	                    lea r8, [rsp + 0x34]	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002210	          0x4889c1	                            mov rcx, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002213	          0x4889df	                            mov rdi, rbx	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002216	      0xe800000000	                          call 0x400221b	       807	ref-filter.c	FUNCTION_31	CALL_2
0x400221b	          0x4885c0	                           test rax, rax	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x400221e	          0x4989c6	                            mov r14, rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002221	        0x49894500	                    mov qword [r13], rax	       807	ref-filter.c	FUNCTION_31	CALL_2
0x4002225	     0xf84bd050000	                            je 0x40027e8	      1444	ref-filter.c	FUNCTION_56	ELSE_1	IF_2
0x400222b	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4002230	    0x448b1d000000	           mov r11d, dword [0x04002237] 	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002237	        0x48890424	                    mov qword [rsp], rax	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x400223b	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x400223f	          0x4585db	                         test r11d, r11d	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002242	      0x4889442410	             mov qword [rsp + 0x10], rax	      1448	ref-filter.c	FUNCTION_56	CALL_8
0x4002247	     0xf8e0b040000	                           jle 0x4002658	       837	ref-filter.c	FUNCTION_33	FOR_1
0x400224d	      0x4889442420	             mov qword [rsp + 0x20], rax	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002252	          0x4989c7	                            mov r15, rax	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002255	        0x498d4604	                      lea rax, [r14 + 4]	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002259	          0x4585e4	                         test r12d, r12d	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x400225c	        0x410f95c5	                              setne r13b	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002260	      0x4889442418	             mov qword [rsp + 0x18], rax	       851	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x4002265	            0x31ed	                            xor ebp, ebp	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002267	            0x31db	                            xor ebx, ebx	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002269	            0xeb19	                           jmp 0x4002284	       837	ref-filter.c	FUNCTION_33	FOR_1
0x400226b	       0xf1f440000	                   nop dword [rax + rax]	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002270	          0x83c301	                              add ebx, 1	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002273	        0x4883c560	                           add rbp, 0x60	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002277	        0x4983c720	                           add r15, 0x20	       837	ref-filter.c	FUNCTION_33	FOR_1
0x400227b	          0x4439db	                           cmp ebx, r11d	       837	ref-filter.c	FUNCTION_33	FOR_1
0x400227e	     0xf8dbc000000	                           jge 0x4002340	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002284	          0x4889ea	                            mov rdx, rbp	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002287	    0x480315000000	             add rdx, qword [0x0400228e]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x400228e	          0x488b02	                    mov rax, qword [rdx]	       838	ref-filter.c	FUNCTION_33	FOR_1
0x4002291	          0x80382a	                    cmp byte [rax], 0x2a	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002294	           0xf94c1	                                 sete cl	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x4002297	          0x4438e9	                            cmp cl, r13b	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400229a	            0x75d4	                           jne 0x4002270	       840	ref-filter.c	FUNCTION_33	FOR_1	IF_1
0x400229c	        0x4183fc01	                             cmp r12d, 1	       843	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x40022a0	      0xbf00000000	                              mov edi, 0	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x40022a5	      0xb90b000000	                            mov ecx, 0xb	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x40022aa	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	       843	ref-filter.c	FUNCTION_33	FOR_1	IF_2
0x40022ae	          0x4889c6	                            mov rsi, rax	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x40022b1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x40022b3	     0xf8407020000	                            je 0x40024c0	       844	ref-filter.c	FUNCTION_33	FOR_1	IF_3	CALL_1
0x40022b9	      0xbf00000000	                              mov edi, 0	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40022be	      0xb90b000000	                            mov ecx, 0xb	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40022c3	          0x4889c6	                            mov rsi, rax	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40022c6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40022c8	     0xf84e2020000	                            je 0x40025b0	       846	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_3
0x40022ce	          0x4585e4	                         test r12d, r12d	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40022d1	            0x749d	                            je 0x4002270	       850	ref-filter.c	FUNCTION_33	FOR_1	ELSE_2	IF_5
0x40022d3	      0xbe00000000	                              mov esi, 0	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40022d8	          0x4889c7	                            mov rdi, rax	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40022db	      0x4889542428	             mov qword [rsp + 0x28], rdx	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40022e0	      0xe800000000	                          call 0x40022e5	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40022e5	            0x85c0	                           test eax, eax	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40022e7	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40022ec	            0x7437	                            je 0x4002325	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40022ee	          0x8b4210	            mov eax, dword [rdx + 0x10] 	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40022f1	    0x8b3500000000	            mov esi, dword [0x040022f7] 	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x40022f7	          0x83f802	                              cmp eax, 2	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40022fa	            0x7414	                            je 0x4002310	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40022fc	            0x85c0	                           test eax, eax	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40022fe	     0xf843e050000	                            je 0x4002842	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x4002304	          0x83f801	                              cmp eax, 1	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x4002307	     0xf8556050000	                           jne 0x4002863	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x400230d	          0x8b7214	            mov esi, dword [rdx + 0x14] 	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002310	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002315	      0xe800000000	                          call 0x400231a	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400231a	          0x4889c7	                            mov rdi, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400231d	      0xe800000000	                          call 0x4002322	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002322	          0x498907	                    mov qword [r15], rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x4002325	    0x448b1d000000	           mov r11d, dword [0x0400232c] 	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400232c	          0x83c301	                              add ebx, 1	       837	ref-filter.c	FUNCTION_33	FOR_1
0x400232f	        0x4883c560	                           add rbp, 0x60	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002333	        0x4983c720	                           add r15, 0x20	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002337	          0x4439db	                           cmp ebx, r11d	       837	ref-filter.c	FUNCTION_33	FOR_1
0x400233a	     0xf8c44ffffff	                            jl 0x4002284	       837	ref-filter.c	FUNCTION_33	FOR_1
0x4002340	        0x410fb636	                   movzx esi, byte [r14]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002344	          0x40d0ee	                              shr sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002347	          0x83e607	                              and esi, 7	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400234a	        0x4080fe03	                              cmp sil, 3	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400234e	     0xf878c010000	                            ja 0x40024e0	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002354	        0x4080fe02	                              cmp sil, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002358	     0xf83e2030000	                           jae 0x4002740	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400235e	        0x4080fe01	                              cmp sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002362	     0xf8518030000	                           jne 0x4002680	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002368	          0x4585db	                         test r11d, r11d	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400236b	     0xf8e84030000	                           jle 0x40026f5	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002371	          0x4531ff	                          xor r15d, r15d	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002374	            0x31ed	                            xor ebp, ebp	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002376	      0x4489642418	            mov dword [rsp + 0x18], r12d	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400237b	        0x44882c24	                    mov byte [rsp], r13b	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400237f	          0x4d89fc	                            mov r12, r15	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002382	          0x4189ef	                           mov r15d, ebp	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002385	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400238a	            0xeb19	                           jmp 0x40023a5	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400238c	         0xf1f4000	                         nop dword [rax]	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002390	        0x4183c701	                             add r15d, 1	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002394	        0x4983c460	                           add r12, 0x60	       883	ref-filter.c	FUNCTION_35	FOR_1
0x4002398	        0x4883c520	                           add rbp, 0x20	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400239c	          0x4539df	                          cmp r15d, r11d	       883	ref-filter.c	FUNCTION_35	FOR_1
0x400239f	     0xf8d4b030000	                           jge 0x40026f0	       883	ref-filter.c	FUNCTION_35	FOR_1
0x40023a5	    0x488b05000000	            mov rax, qword [0x040023ac] 	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40023ac	        0x4a8b0420	              mov rax, qword [rax + r12]	       884	ref-filter.c	FUNCTION_35	FOR_1
0x40023b0	          0x80382a	                    cmp byte [rax], 0x2a	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x40023b3	           0xf94c2	                                 sete dl	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x40023b6	          0x3a1424	                      cmp dl, byte [rsp]	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x40023b9	            0x75d5	                           jne 0x4002390	       886	ref-filter.c	FUNCTION_35	FOR_1	IF_1
0x40023bb	      0x837c241801	               cmp dword [rsp + 0x18], 1	       889	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x40023c0	      0xbf00000000	                              mov edi, 0	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40023c5	      0xb905000000	                              mov ecx, 5	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40023ca	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	       889	ref-filter.c	FUNCTION_35	FOR_1	IF_2
0x40023ce	          0x4889c6	                            mov rsi, rax	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40023d1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40023d3	     0xf8477030000	                            je 0x4002750	       890	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_1
0x40023d9	      0xbf00000000	                              mov edi, 0	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40023de	      0xb90a000000	                            mov ecx, 0xa	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40023e3	          0x4889c6	                            mov rsi, rax	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40023e6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40023e8	     0xf841a040000	                            je 0x4002808	       893	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_5
0x40023ee	      0xbf00000000	                              mov edi, 0	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40023f3	      0xb907000000	                              mov ecx, 7	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40023f8	          0x4889c6	                            mov rsi, rax	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40023fb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40023fd	            0x7591	                           jne 0x4002390	       897	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_8
0x40023ff	        0x498b5e30	            mov rbx, qword [r14 + 0x30] 	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002403	    0x48c744244000	               mov qword [rsp + 0x40], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x400240c	    0x48c744244800	               mov qword [rsp + 0x48], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x4002415	    0x48c744245000	               mov qword [rsp + 0x50], 0	       899	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5
0x400241e	          0x4885db	                           test rbx, rbx	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002421	     0xf8459030000	                            je 0x4002780	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002427	          0x488b0b	                    mov rcx, qword [rbx]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x400242a	    0x660f1f440000	                    nop word [rax + rax]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002430	        0x488d7904	                      lea rdi, [rcx + 4]	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002434	      0xe800000000	                          call 0x4002439	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x4002439	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_99	CALL_2
0x400243c	          0x4989c5	                            mov r13, rax	       904	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	CALL_11
0x400243f	      0xe800000000	                          call 0x4002444	       279	strbuf.h	FUNCTION_99	CALL_2
0x4002444	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       279	strbuf.h	FUNCTION_99	CALL_2
0x4002449	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_99	CALL_2
0x400244c	          0x4c89ee	                            mov rsi, r13	       279	strbuf.h	FUNCTION_99	CALL_2
0x400244f	      0xe800000000	                          call 0x4002454	       279	strbuf.h	FUNCTION_99	CALL_2
0x4002454	        0x488b5b08	                mov rbx, qword [rbx + 8]	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002458	          0x4885db	                           test rbx, rbx	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x400245b	     0xf841f030000	                            je 0x4002780	       900	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002461	        0x49395e30	            cmp qword [r14 + 0x30], rbx 	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002465	          0x488b0b	                    mov rcx, qword [rbx]	       901	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2
0x4002468	            0x74c6	                            je 0x4002430	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400246a	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       902	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400246f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_96
0x4002472	     0xf8518020000	                           jne 0x4002690	       141	strbuf.h	FUNCTION_96
0x4002478	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       228	strbuf.h	FUNCTION_98	CALL_2
0x400247d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_98	CALL_2
0x4002482	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       228	strbuf.h	FUNCTION_98	CALL_2
0x4002487	      0xe800000000	                          call 0x400248c	       228	strbuf.h	FUNCTION_98	CALL_2
0x400248c	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       228	strbuf.h	FUNCTION_98	CALL_2
0x4002491	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       228	strbuf.h	FUNCTION_98	CALL_2
0x4002496	        0x488d4201	                      lea rax, [rdx + 1]	       229	strbuf.h	FUNCTION_98
0x400249a	      0x4889442448	             mov qword [rsp + 0x48], rax	       229	strbuf.h	FUNCTION_98
0x400249f	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       229	strbuf.h	FUNCTION_98
0x40024a4	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_98
0x40024a8	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       230	strbuf.h	FUNCTION_98
0x40024ad	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       230	strbuf.h	FUNCTION_98
0x40024b2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_98
0x40024b6	      0xe975ffffff	                           jmp 0x4002430	       230	strbuf.h	FUNCTION_98
0x40024bb	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_98
0x40024c0	        0x410fb63e	                   movzx edi, byte [r14]	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40024c4	          0x40d0ef	                              shr dil, 1	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40024c7	          0x83e707	                              and edi, 7	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40024ca	      0xe800000000	                          call 0x40024cf	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40024cf	    0x448b1d000000	           mov r11d, dword [0x040024d6] 	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40024d6	          0x498907	                    mov qword [r15], rax	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40024d9	      0xe992fdffff	                           jmp 0x4002270	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40024de	            0x6690	                                     nop	       845	ref-filter.c	FUNCTION_33	FOR_1	CALL_2
0x40024e0	        0x4080fe04	                              cmp sil, 4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40024e4	     0xf8596010000	                           jne 0x4002680	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x40024ea	          0x4585db	                         test r11d, r11d	       861	ref-filter.c	FUNCTION_34	FOR_1
0x40024ed	     0xf8e85000000	                           jle 0x4002578	       861	ref-filter.c	FUNCTION_34	FOR_1
0x40024f3	          0x4585e4	                         test r12d, r12d	       861	ref-filter.c	FUNCTION_34	FOR_1
0x40024f6	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	       861	ref-filter.c	FUNCTION_34	FOR_1
0x40024fb	        0x410f95c7	                              setne r15b	       861	ref-filter.c	FUNCTION_34	FOR_1
0x40024ff	            0x31ed	                            xor ebp, ebp	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002501	            0x31db	                            xor ebx, ebx	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002503	            0xeb13	                           jmp 0x4002518	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002505	           0xf1f00	                         nop dword [rax]	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002508	          0x83c301	                              add ebx, 1	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400250b	        0x4883c560	                           add rbp, 0x60	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400250f	        0x4983c520	                           add r13, 0x20	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002513	          0x4439db	                           cmp ebx, r11d	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002516	            0x7d60	                           jge 0x4002578	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002518	    0x488b05000000	            mov rax, qword [0x0400251f] 	       862	ref-filter.c	FUNCTION_34	FOR_1
0x400251f	        0x488b0428	              mov rax, qword [rax + rbp]	       862	ref-filter.c	FUNCTION_34	FOR_1
0x4002523	          0x80382a	                    cmp byte [rax], 0x2a	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4002526	           0xf94c2	                                 sete dl	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x4002529	          0x4438fa	                            cmp dl, r15b	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x400252c	            0x75da	                           jne 0x4002508	       864	ref-filter.c	FUNCTION_34	FOR_1	IF_1
0x400252e	        0x4183fc01	                             cmp r12d, 1	       867	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x4002532	        0x4883d8ff	             sbb rax, 0xffffffffffffffff	       867	ref-filter.c	FUNCTION_34	FOR_1	IF_2
0x4002536	          0x803874	                    cmp byte [rax], 0x74	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002539	     0xf8571010000	                           jne 0x40026b0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x400253f	        0x80780161	                cmp byte [rax + 1], 0x61	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002543	     0xf8567010000	                           jne 0x40026b0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002549	        0x80780267	                cmp byte [rax + 2], 0x67	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x400254d	     0xf855d010000	                           jne 0x40026b0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002553	        0x80780300	                   cmp byte [rax + 3], 0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x4002557	     0xf8553010000	                           jne 0x40026b0	       868	ref-filter.c	FUNCTION_34	FOR_1	IF_3	CALL_1
0x400255d	        0x498b4620	            mov rax, qword [r14 + 0x20] 	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x4002561	          0x83c301	                              add ebx, 1	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002564	        0x4883c560	                           add rbp, 0x60	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002568	        0x4983c520	                           add r13, 0x20	       861	ref-filter.c	FUNCTION_34	FOR_1
0x400256c	        0x498945e0	             mov qword [r13 - 0x20], rax	       869	ref-filter.c	FUNCTION_34	FOR_1	IF_3
0x4002570	          0x4439db	                           cmp ebx, r11d	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002573	            0x7ca3	                            jl 0x4002518	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002575	           0xf1f00	                         nop dword [rax]	       861	ref-filter.c	FUNCTION_34	FOR_1
0x4002578	      0x4c8b742408	                mov r14, qword [rsp + 8]	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x400257d	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4002582	          0x4489e6	                           mov esi, r12d	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4002585	          0x4c89f2	                            mov rdx, r14	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4002588	          0x4889df	                            mov rdi, rbx	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x400258b	      0xe8a0dfffff	 call sym.grab_sub_body_contents.isra.29	      1214	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_3
0x4002590	          0x4c89f1	                            mov rcx, r14	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4002593	          0x4489e2	                           mov edx, r12d	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4002596	          0x4889de	                            mov rsi, rbx	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x4002599	      0xbf00000000	                              mov edi, 0	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x400259e	      0xe82df6ffff	            call sym.grab_person.isra.31	      1215	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_4
0x40025a3	            0x31c0	                            xor eax, eax	      1438	ref-filter.c	FUNCTION_56
0x40025a5	            0xeb76	                           jmp 0x400261d	      1438	ref-filter.c	FUNCTION_56
0x40025a7	    0x660f1f840000	                    nop word [rax + rax]	      1438	ref-filter.c	FUNCTION_56
0x40025b0	        0x488b0424	                    mov rax, qword [rsp]	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x40025b4	      0xbf00000000	                              mov edi, 0	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40025b9	        0x49894710	             mov qword [r15 + 0x10], rax	       847	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4
0x40025bd	          0x4889c6	                            mov rsi, rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40025c0	            0x31c0	                            xor eax, eax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40025c2	      0xe800000000	                          call 0x40025c7	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40025c7	    0x448b1d000000	           mov r11d, dword [0x040025ce] 	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40025ce	          0x498907	                    mov qword [r15], rax	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40025d1	      0xe99afcffff	                           jmp 0x4002270	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40025d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       848	ref-filter.c	FUNCTION_33	FOR_1	ELSE_1	IF_4	CALL_4
0x40025e0	          0x4889df	                            mov rdi, rbx	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40025e3	    0x49c745000000	                      mov qword [r13], 0	       809	ref-filter.c	FUNCTION_31	ELSE_1
0x40025eb	      0xe800000000	                          call 0x40025f0	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40025f0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40025f5	          0x4889c3	                            mov rbx, rax	      1442	ref-filter.c	FUNCTION_56	IF_1	CALL_3
0x40025f8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40025fd	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x40025ff	      0xe800000000	                          call 0x4002604	        54	gettext.h	FUNCTION_93
0x4002604	        0x4c8d4538	                    lea r8, [rbp + 0x38]	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x4002608	          0x4889c2	                            mov rdx, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x400260b	          0x4889d9	                            mov rcx, rbx	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x400260e	      0xbeffffffff	                     mov esi, 0xffffffff	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x4002613	          0x4c89ff	                            mov rdi, r15	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x4002616	            0x31c0	                            xor eax, eax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x4002618	      0xe843e4ffff	   call sym.strbuf_addf_ret.constprop.38	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x400261d	        0x8b542434	            mov edx, dword [rsp + 0x34] 	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4002621	            0x85d2	                           test edx, edx	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4002623	            0x7510	                           jne 0x4002635	      1449	ref-filter.c	FUNCTION_56	IF_3
0x4002625	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x400262a	          0x890424	                    mov dword [rsp], eax	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x400262d	      0xe800000000	                          call 0x4002632	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x4002632	          0x8b0424	                    mov eax, dword [rsp]	      1450	ref-filter.c	FUNCTION_56	CALL_9
0x4002635	      0x488b5c2458	            mov rbx, qword [rsp + 0x58] 	      1452	ref-filter.c	FUNCTION_56
0x400263a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1452	ref-filter.c	FUNCTION_56
0x4002643	     0xf8526020000	                           jne 0x400286f	      1452	ref-filter.c	FUNCTION_56
0x4002649	        0x4883c468	                           add rsp, 0x68	      1452	ref-filter.c	FUNCTION_56
0x400264d	              0x5b	                                 pop rbx	      1452	ref-filter.c	FUNCTION_56
0x400264e	              0x5d	                                 pop rbp	      1452	ref-filter.c	FUNCTION_56
0x400264f	            0x415c	                                 pop r12	      1452	ref-filter.c	FUNCTION_56
0x4002651	            0x415d	                                 pop r13	      1452	ref-filter.c	FUNCTION_56
0x4002653	            0x415e	                                 pop r14	      1452	ref-filter.c	FUNCTION_56
0x4002655	            0x415f	                                 pop r15	      1452	ref-filter.c	FUNCTION_56
0x4002657	              0xc3	                                     ret	      1452	ref-filter.c	FUNCTION_56
0x4002658	        0x410fb636	                   movzx esi, byte [r14]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400265c	          0x40d0ee	                              shr sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400265f	          0x83e607	                              and esi, 7	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002662	        0x4080fe03	                              cmp sil, 3	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002666	     0xf87c7010000	                            ja 0x4002833	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400266c	        0x4080fe02	                              cmp sil, 2	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002670	     0xf83ca000000	                           jae 0x4002740	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002676	        0x4080fe01	                              cmp sil, 1	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400267a	            0x7479	                            je 0x40026f5	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400267c	         0xf1f4000	                         nop dword [rax]	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002680	        0x400fb6f6	                          movzx esi, sil	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4002684	      0xbf00000000	                              mov edi, 0	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4002689	            0x31c0	                            xor eax, eax	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x400268b	      0xe800000000	                          call 0x4002690	      1230	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_9
0x4002690	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	       141	strbuf.h	FUNCTION_96
0x4002695	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x4002699	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x400269c	     0xf85f4fdffff	                           jne 0x4002496	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x40026a2	      0xe9d1fdffff	                           jmp 0x4002478	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x40026a7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_98	IF_1	CALL_1
0x40026b0	      0xbf00000000	                              mov edi, 0	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40026b5	      0xb905000000	                              mov ecx, 5	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40026ba	          0x4889c6	                            mov rsi, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40026bd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40026bf	     0xf85db000000	                           jne 0x40027a0	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40026c5	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40026c9	          0x4885c0	                           test rax, rax	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40026cc	     0xf8436feffff	                            je 0x4002508	       870	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4	CALL_2
0x40026d2	           0xfb638	                   movzx edi, byte [rax]	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40026d5	          0x40d0ef	                              shr dil, 1	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40026d8	          0x83e707	                              and edi, 7	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40026db	      0xe800000000	                          call 0x40026e0	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40026e0	    0x448b1d000000	           mov r11d, dword [0x040026e7] 	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40026e7	        0x49894500	                    mov qword [r13], rax	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40026eb	      0xe918feffff	                           jmp 0x4002508	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40026f0	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	       871	ref-filter.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x40026f5	      0x4c8b742408	                mov r14, qword [rsp + 8]	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x40026fa	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x40026ff	          0x4489e6	                           mov esi, r12d	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4002702	          0x4c89f2	                            mov rdx, r14	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4002705	          0x4889df	                            mov rdi, rbx	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x4002708	      0xe823deffff	 call sym.grab_sub_body_contents.isra.29	      1219	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_6
0x400270d	          0x4c89f1	                            mov rcx, r14	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4002710	          0x4489e2	                           mov edx, r12d	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4002713	          0x4889de	                            mov rsi, rbx	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4002716	      0xbf00000000	                              mov edi, 0	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x400271b	      0xe8b0f4ffff	            call sym.grab_person.isra.31	      1220	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_7
0x4002720	          0x4c89f1	                            mov rcx, r14	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4002723	          0x4489e2	                           mov edx, r12d	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4002726	          0x4889de	                            mov rsi, rbx	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4002729	      0xbf00000000	                              mov edi, 0	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x400272e	      0xe89df4ffff	            call sym.grab_person.isra.31	      1221	ref-filter.c	FUNCTION_47	SWITCH_1	CALL_8
0x4002733	            0x31c0	                            xor eax, eax	      1438	ref-filter.c	FUNCTION_56
0x4002735	      0xe9e3feffff	                           jmp 0x400261d	      1438	ref-filter.c	FUNCTION_56
0x400273a	    0x660f1f440000	                    nop word [rax + rax]	      1438	ref-filter.c	FUNCTION_56
0x4002740	            0x31c0	                            xor eax, eax	      1438	ref-filter.c	FUNCTION_56
0x4002742	      0xe9d6feffff	                           jmp 0x400261d	      1438	ref-filter.c	FUNCTION_56
0x4002747	    0x660f1f840000	                    nop word [rax + rax]	      1438	ref-filter.c	FUNCTION_56
0x4002750	          0x4c89f7	                            mov rdi, r14	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002753	      0xe800000000	                          call 0x4002758	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002758	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400275b	      0xe800000000	                          call 0x4002760	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002760	          0x4889c7	                            mov rdi, rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002763	      0xe800000000	                          call 0x4002768	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002768	    0x448b1d000000	           mov r11d, dword [0x0400276f] 	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x400276f	        0x48894500	                    mov qword [rbp], rax	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002773	      0xe918fcffff	                           jmp 0x4002390	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002778	     0xf1f84000000	                   nop dword [rax + rax]	       891	ref-filter.c	FUNCTION_35	FOR_1	IF_3	CALL_4
0x4002780	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002785	            0x31f6	                            xor esi, esi	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002787	      0xe800000000	                          call 0x400278c	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x400278c	    0x448b1d000000	           mov r11d, dword [0x04002793] 	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002793	        0x48894500	                    mov qword [rbp], rax	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x4002797	      0xe9f4fbffff	                           jmp 0x4002390	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x400279c	         0xf1f4000	                         nop dword [rax]	       906	ref-filter.c	FUNCTION_35	FOR_1	ELSE_2	IF_5	CALL_12
0x40027a0	      0xbf00000000	                              mov edi, 0	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40027a5	      0xb907000000	                              mov ecx, 7	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40027aa	          0x4889c6	                            mov rsi, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40027ad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40027af	     0xf8553fdffff	                           jne 0x4002508	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40027b5	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40027b9	          0x4885c0	                           test rax, rax	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40027bc	     0xf8446fdffff	                            je 0x4002508	       872	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5	CALL_4
0x40027c2	        0x488d7804	                      lea rdi, [rax + 4]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40027c6	      0xe800000000	                          call 0x40027cb	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40027cb	          0x4889c7	                            mov rdi, rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40027ce	      0xe800000000	                          call 0x40027d3	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40027d3	    0x448b1d000000	           mov r11d, dword [0x040027da] 	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40027da	        0x49894500	                    mov qword [r13], rax	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40027de	      0xe925fdffff	                           jmp 0x4002508	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40027e3	       0xf1f440000	                   nop dword [rax + rax]	       873	ref-filter.c	FUNCTION_34	FOR_1	ELSE_2	IF_5
0x40027e8	          0x4889df	                            mov rdi, rbx	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027eb	      0xe800000000	                          call 0x40027f0	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027f0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40027f5	          0x4889c3	                            mov rbx, rax	      1445	ref-filter.c	FUNCTION_56	ELSE_1	IF_2	CALL_6
0x40027f8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40027fd	      0xe9fbfdffff	                           jmp 0x40025fd	        54	gettext.h	FUNCTION_93
0x4002802	    0x660f1f440000	                    nop word [rax + rax]	        54	gettext.h	FUNCTION_93
0x4002808	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x400280c	      0xe800000000	                          call 0x4002811	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002811	            0x89c6	                            mov esi, eax	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x4002813	      0xbf00000000	                              mov edi, 0	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4002818	            0x31c0	                            xor eax, eax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x400281a	        0x48897510	            mov qword [rbp + 0x10], rsi 	       894	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_6
0x400281e	      0xe800000000	                          call 0x4002823	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4002823	    0x448b1d000000	           mov r11d, dword [0x0400282a] 	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x400282a	        0x48894500	                    mov qword [rbp], rax	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x400282e	      0xe95dfbffff	                           jmp 0x4002390	       895	ref-filter.c	FUNCTION_35	FOR_1	ELSE_1	IF_4	CALL_7
0x4002833	        0x4080fe04	                              cmp sil, 4	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002837	     0xf843bfdffff	                            je 0x4002578	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x400283d	      0xe93efeffff	                           jmp 0x4002680	      1211	ref-filter.c	FUNCTION_47	SWITCH_1
0x4002842	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4002847	      0xe800000000	                          call 0x400284c	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400284c	          0x4889c7	                            mov rdi, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400284f	      0xe800000000	                          call 0x4002854	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4002854	    0x448b1d000000	           mov r11d, dword [0x0400285b] 	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400285b	          0x498907	                    mov qword [r15], rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x400285e	      0xe90dfaffff	                           jmp 0x4002270	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x4002863	      0xbf00000000	                              mov edi, 0	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x4002868	            0x31c0	                            xor eax, eax	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x400286a	      0xe800000000	                          call 0x400286f	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x400286f	      0xe800000000	                          call 0x4002874	      1452	ref-filter.c	FUNCTION_56
head_atom_parser	DO,0:ELSE,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	11
0x4000040	              0x53	                                push rbx	       375	ref-filter.c	FUNCTION_15
0x4000041	            0x31c9	                            xor ecx, ecx	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4000043	          0x4889f3	                            mov rbx, rsi	       375	ref-filter.c	FUNCTION_15
0x4000046	            0x31d2	                            xor edx, edx	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4000048	      0xbe01000000	                              mov esi, 1	       376	ref-filter.c	FUNCTION_15	CALL_1
0x400004d	      0xbf00000000	                              mov edi, 0	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4000052	      0xe800000000	                          call 0x4000057	       376	ref-filter.c	FUNCTION_15	CALL_1
0x4000057	        0x48894310	             mov qword [rbx + 0x10], rax	       376	ref-filter.c	FUNCTION_15	CALL_1
0x400005b	            0x31c0	                            xor eax, eax	       378	ref-filter.c	FUNCTION_15
0x400005d	              0x5b	                                 pop rbx	       378	ref-filter.c	FUNCTION_15
0x400005e	              0xc3	                                     ret	       378	ref-filter.c	FUNCTION_15
filter_refs	DO,0:ELSE,4:CALL,11:WHILE,0:FOR,0:SWITCH,0:IF,8:functions,0	161
0x4004d90	            0x4154	                                push r12	      2104	ref-filter.c	FUNCTION_78
0x4004d92	              0x55	                                push rbp	      2104	ref-filter.c	FUNCTION_78
0x4004d93	            0x89d1	                            mov ecx, edx	      2107	ref-filter.c	FUNCTION_78
0x4004d95	              0x53	                                push rbx	      2104	ref-filter.c	FUNCTION_78
0x4004d96	          0x83e101	                              and ecx, 1	      2107	ref-filter.c	FUNCTION_78
0x4004d99	        0x4883c480	             add rsp, 0xffffffffffffff80	      2104	ref-filter.c	FUNCTION_78
0x4004d9d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2104	ref-filter.c	FUNCTION_78
0x4004da6	      0x4889442478	             mov qword [rsp + 0x78], rax	      2104	ref-filter.c	FUNCTION_78
0x4004dab	            0x31c0	                            xor eax, eax	      2104	ref-filter.c	FUNCTION_78
0x4004dad	            0x89d0	                            mov eax, edx	      2114	ref-filter.c	FUNCTION_78
0x4004daf	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      2109	ref-filter.c	FUNCTION_78
0x4004db4	      0x4889742438	             mov qword [rsp + 0x38], rsi	      2110	ref-filter.c	FUNCTION_78
0x4004db9	          0x83e03e	                           and eax, 0x3e	      2114	ref-filter.c	FUNCTION_78
0x4004dbc	    0xc74424440100	               mov dword [rsp + 0x44], 1	      1632	ref-filter.c	CALL_1
0x4004dc4	    0xc7442440f8ff	        mov dword [rsp + 0x40], 0x1fff8 	      1632	ref-filter.c	CALL_1
0x4004dcc	            0x85c0	                           test eax, eax	      2120	ref-filter.c	FUNCTION_78	IF_2
0x4004dce	          0x894644	             mov dword [rsi + 0x44], eax	      2114	ref-filter.c	FUNCTION_78
0x4004dd1	    0xc74424480000	               mov dword [rsp + 0x48], 0	      1632	ref-filter.c	CALL_1
0x4004dd9	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1632	ref-filter.c	CALL_1
0x4004de2	    0xc744245c0100	               mov dword [rsp + 0x5c], 1	      1632	ref-filter.c	CALL_1
0x4004dea	    0xc7442458f8ff	        mov dword [rsp + 0x58], 0x1fff8 	      1632	ref-filter.c	CALL_1
0x4004df2	    0xc74424600000	               mov dword [rsp + 0x60], 0	      1632	ref-filter.c	CALL_1
0x4004dfa	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1632	ref-filter.c	CALL_1
0x4004e03	     0xf843f020000	                            je 0x4005048	      2120	ref-filter.c	FUNCTION_78	IF_2
0x4004e09	          0x83f804	                              cmp eax, 4	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4004e0c	          0x4889f5	                            mov rbp, rsi	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4004e0f	     0xf8463010000	                            je 0x4004f78	      2129	ref-filter.c	FUNCTION_78	ELSE_1	IF_3
0x4004e15	          0x83f808	                              cmp eax, 8	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004e18	     0xf847a010000	                            je 0x4004f98	      2131	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004e1e	          0x83f802	                              cmp eax, 2	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004e21	     0xf8491010000	                            je 0x4004fb8	      2133	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004e27	          0x83e21e	                           and edx, 0x1e	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4004e2a	     0xf85d0000000	                           jne 0x4004f00	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4004e30	          0x4531e4	                          xor r12d, r12d	      2135	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_4	IF_6
0x4004e33	            0xa820	                           test al, 0x20	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004e35	     0xf8525010000	                           jne 0x4004f60	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004e3b	        0x8b542448	            mov edx, dword [rsp + 0x48] 	      1632	ref-filter.c	CALL_1
0x4004e3f	            0x31db	                            xor ebx, ebx	      1632	ref-filter.c	CALL_1
0x4004e41	            0x85d2	                           test edx, edx	      1632	ref-filter.c	CALL_1
0x4004e43	            0x741c	                            je 0x4004e61	      1632	ref-filter.c	CALL_1
0x4004e45	           0xf1f00	                         nop dword [rax]	      1632	ref-filter.c	CALL_1
0x4004e48	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1632	ref-filter.c	CALL_1
0x4004e4d	            0x89da	                            mov edx, ebx	      1632	ref-filter.c	CALL_1
0x4004e4f	          0x83c301	                              add ebx, 1	      1632	ref-filter.c	CALL_1
0x4004e52	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      1632	ref-filter.c	CALL_1
0x4004e56	      0xe800000000	                          call 0x4004e5b	      1632	ref-filter.c	CALL_1
0x4004e5b	        0x3b5c2448	            cmp ebx, dword [rsp + 0x48] 	      1632	ref-filter.c	CALL_1
0x4004e5f	            0x72e7	                            jb 0x4004e48	      1632	ref-filter.c	CALL_1
0x4004e61	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1632	ref-filter.c	CALL_1
0x4004e66	    0xc74424480000	               mov dword [rsp + 0x48], 0	      1632	ref-filter.c	CALL_1
0x4004e6e	            0x31db	                            xor ebx, ebx	      1632	ref-filter.c	CALL_1
0x4004e70	      0xe800000000	                          call 0x4004e75	      1632	ref-filter.c	CALL_1
0x4004e75	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      1632	ref-filter.c	CALL_1
0x4004e79	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1632	ref-filter.c	CALL_1
0x4004e82	            0x85c0	                           test eax, eax	      1632	ref-filter.c	CALL_1
0x4004e84	            0x7423	                            je 0x4004ea9	      1632	ref-filter.c	CALL_1
0x4004e86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1632	ref-filter.c	CALL_1
0x4004e90	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1632	ref-filter.c	CALL_1
0x4004e95	            0x89da	                            mov edx, ebx	      1632	ref-filter.c	CALL_1
0x4004e97	          0x83c301	                              add ebx, 1	      1632	ref-filter.c	CALL_1
0x4004e9a	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      1632	ref-filter.c	CALL_1
0x4004e9e	      0xe800000000	                          call 0x4004ea3	      1632	ref-filter.c	CALL_1
0x4004ea3	        0x3b5c2460	            cmp ebx, dword [rsp + 0x60] 	      1632	ref-filter.c	CALL_1
0x4004ea7	            0x72e7	                            jb 0x4004e90	      1632	ref-filter.c	CALL_1
0x4004ea9	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1632	ref-filter.c	CALL_1
0x4004eae	    0xc74424600000	               mov dword [rsp + 0x60], 0	      1632	ref-filter.c	CALL_1
0x4004eb6	      0xe800000000	                          call 0x4004ebb	      1632	ref-filter.c	CALL_1
0x4004ebb	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      2145	ref-filter.c	FUNCTION_78	IF_8
0x4004ec0	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1632	ref-filter.c	CALL_1
0x4004ec9	            0x740f	                            je 0x4004eda	      2145	ref-filter.c	FUNCTION_78	IF_8
0x4004ecb	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x4004ed0	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x4004ed5	      0xe816ebffff	        call sym.do_merge_filter.isra.17	      2146	ref-filter.c	FUNCTION_78	CALL_11
0x4004eda	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      2149	ref-filter.c	FUNCTION_78
0x4004edf	    0x644833342528	                xor rsi, qword fs:[0x28]	      2149	ref-filter.c	FUNCTION_78
0x4004ee8	          0x4489e0	                           mov eax, r12d	      2149	ref-filter.c	FUNCTION_78
0x4004eeb	     0xf8552010000	                           jne 0x4005043	      2149	ref-filter.c	FUNCTION_78
0x4004ef1	        0x4883ec80	             sub rsp, 0xffffffffffffff80	      2149	ref-filter.c	FUNCTION_78
0x4004ef5	              0x5b	                                 pop rbx	      2149	ref-filter.c	FUNCTION_78
0x4004ef6	              0x5d	                                 pop rbp	      2149	ref-filter.c	FUNCTION_78
0x4004ef7	            0x415c	                                 pop r12	      2149	ref-filter.c	FUNCTION_78
0x4004ef9	              0xc3	                                     ret	      2149	ref-filter.c	FUNCTION_78
0x4004efa	    0x660f1f440000	                    nop word [rax + rax]	      2149	ref-filter.c	FUNCTION_78
0x4004f00	        0xf6464002	               test byte [rsi + 0x40], 2	      1846	ref-filter.c	FUNCTION_68	IF_1
0x4004f04	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1843	ref-filter.c	FUNCTION_68
0x4004f0d	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1843	ref-filter.c	FUNCTION_68
0x4004f16	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1843	ref-filter.c	FUNCTION_68
0x4004f1f	            0x7416	                            je 0x4004f37	      1846	ref-filter.c	FUNCTION_68	IF_1
0x4004f21	          0x488b06	                    mov rax, qword [rsi]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x4004f24	          0x488b30	                    mov rsi, qword [rax]	      1855	ref-filter.c	FUNCTION_68	IF_2
0x4004f27	          0x4885f6	                           test rsi, rsi	      1855	ref-filter.c	FUNCTION_68	IF_2
0x4004f2a	            0x740b	                            je 0x4004f37	      1855	ref-filter.c	FUNCTION_68	IF_2
0x4004f2c	      0x4883780800	                  cmp qword [rax + 8], 0	      1860	ref-filter.c	FUNCTION_68	IF_3
0x4004f31	     0xf849d000000	                            je 0x4004fd4	      1860	ref-filter.c	FUNCTION_68	IF_3
0x4004f37	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004f3c	      0xbe00000000	                              mov esi, 0	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004f41	      0xbf00000000	                              mov edi, 0	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004f46	      0xe800000000	                          call 0x4004f4b	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004f4b	          0x4189c4	                           mov r12d, eax	      1868	ref-filter.c	FUNCTION_68	IF_3	CALL_3
0x4004f4e	          0x4585e4	                         test r12d, r12d	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004f51	     0xf85e4feffff	                           jne 0x4004e3b	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004f57	          0x8b4544	            mov eax, dword [rbp + 0x44] 	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004f5a	      0xe9d1feffff	                           jmp 0x4004e30	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004f5f	              0x90	                                     nop	      2137	ref-filter.c	FUNCTION_78	ELSE_1	IF_7
0x4004f60	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004f65	      0xbf00000000	                              mov edi, 0	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004f6a	      0xe800000000	                          call 0x4004f6f	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004f6f	      0xe9c7feffff	                           jmp 0x4004e3b	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004f74	         0xf1f4000	                         nop dword [rax]	      2138	ref-filter.c	FUNCTION_78	ELSE_1	CALL_8
0x4004f78	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004f7d	      0xbe00000000	                              mov esi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004f82	      0xbf00000000	                              mov edi, 0	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004f87	      0xe800000000	                          call 0x4004f8c	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004f8c	          0x4189c4	                           mov r12d, eax	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004f8f	            0xebbd	                           jmp 0x4004f4e	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004f91	     0xf1f80000000	                         nop dword [rax]	      2130	ref-filter.c	FUNCTION_78	ELSE_1	CALL_4
0x4004f98	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004f9d	      0xbe00000000	                              mov esi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004fa2	      0xbf00000000	                              mov edi, 0	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004fa7	      0xe800000000	                          call 0x4004fac	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004fac	          0x4189c4	                           mov r12d, eax	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004faf	            0xeb9d	                           jmp 0x4004f4e	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004fb1	     0xf1f80000000	                         nop dword [rax]	      2132	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_2	IF_4
0x4004fb8	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004fbd	      0xbe00000000	                              mov esi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004fc2	      0xbf00000000	                              mov edi, 0	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004fc7	      0xe800000000	                          call 0x4004fcc	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004fcc	          0x4189c4	                           mov r12d, eax	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004fcf	      0xe97affffff	                           jmp 0x4004f4e	      2134	ref-filter.c	FUNCTION_78	ELSE_1	ELSE_3	IF_5
0x4004fd4	           0xfb606	                   movzx eax, byte [rsi]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004fd7	            0x84c0	                             test al, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004fd9	            0x7464	                            je 0x400503f	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004fdb	    0xf68000000000	                      test byte [rax], 8	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004fe2	          0x4889f2	                            mov rdx, rsi	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004fe5	            0x7412	                            je 0x4004ff9	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004fe7	            0xeb56	                           jmp 0x400503f	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004fe9	     0xf1f80000000	                         nop dword [rax]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004ff0	    0xf68000000000	                      test byte [rax], 8	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004ff7	            0x750b	                           jne 0x4005004	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004ff9	        0x4883c201	                              add rdx, 1	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4004ffd	           0xfb602	                   movzx eax, byte [rdx]	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005000	            0x84c0	                             test al, al	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005002	            0x75ec	                           jne 0x4004ff0	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005004	          0x4829f2	                            sub rdx, rsi	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005007	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x400500c	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x4005010	      0xe800000000	                          call 0x4005015	      1830	ref-filter.c	FUNCTION_67	CALL_1
0x4005015	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x400501a	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x400501e	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4005023	      0xbe00000000	                              mov esi, 0	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4005028	      0xe800000000	                          call 0x400502d	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x400502d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x4005032	          0x4189c4	                           mov r12d, eax	      1873	ref-filter.c	FUNCTION_68	CALL_5
0x4005035	      0xe800000000	                          call 0x400503a	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x400503a	      0xe90fffffff	                           jmp 0x4004f4e	      1874	ref-filter.c	FUNCTION_68	CALL_6
0x400503f	            0x31d2	                            xor edx, edx	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005041	            0xebc4	                           jmp 0x4005007	      1827	ref-filter.c	FUNCTION_67	FOR_1
0x4005043	      0xe800000000	                          call 0x4005048	      2149	ref-filter.c	FUNCTION_78
0x4005048	      0xbf00000000	                              mov edi, 0	      2121	ref-filter.c	FUNCTION_78	CALL_3
0x400504d	      0xe800000000	                          call 0x4005052	      2121	ref-filter.c	FUNCTION_78	CALL_3
contains_tag_algo	DO,0:ELSE,1:CALL,8:WHILE,1:FOR,0:SWITCH,1:IF,2:functions,0	420
0x4003180	            0x4157	                                push r15	      1699	ref-filter.c	FUNCTION_62
0x4003182	            0x4156	                                push r14	      1699	ref-filter.c	FUNCTION_62
0x4003184	          0x4989d6	                            mov r14, rdx	      1699	ref-filter.c	FUNCTION_62
0x4003187	            0x4155	                                push r13	      1699	ref-filter.c	FUNCTION_62
0x4003189	            0x4154	                                push r12	      1699	ref-filter.c	FUNCTION_62
0x400318b	            0x31d2	                            xor edx, edx	      1632	ref-filter.c	CALL_1
0x400318d	              0x55	                                push rbp	      1699	ref-filter.c	FUNCTION_62
0x400318e	              0x53	                                push rbx	      1699	ref-filter.c	FUNCTION_62
0x400318f	          0x4989f5	                            mov r13, rsi	      1699	ref-filter.c	FUNCTION_62
0x4003192	        0x4883ec58	                           sub rsp, 0x58	      1699	ref-filter.c	FUNCTION_62
0x4003196	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      1699	ref-filter.c	FUNCTION_62
0x4003199	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      1699	ref-filter.c	FUNCTION_62
0x400319e	          0x41f736	                         div dword [r14]	      1632	ref-filter.c	CALL_1
0x40031a1	            0x89c3	                            mov ebx, eax	      1632	ref-filter.c	CALL_1
0x40031a3	        0x413b5e08	                cmp ebx, dword [r14 + 8]	      1632	ref-filter.c	CALL_1
0x40031a7	            0x89d5	                            mov ebp, edx	      1632	ref-filter.c	CALL_1
0x40031a9	     0xf8389000000	                           jae 0x4003238	      1632	ref-filter.c	CALL_1
0x40031af	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1632	ref-filter.c	CALL_1
0x40031b3	        0x4c8d24d8	                  lea r12, [rax + rbx*8]	      1632	ref-filter.c	CALL_1
0x40031b7	        0x498b0424	                    mov rax, qword [r12]	      1632	ref-filter.c	CALL_1
0x40031bb	          0x4885c0	                           test rax, rax	      1632	ref-filter.c	CALL_1
0x40031be	     0xf84c6000000	                            je 0x400328a	      1632	ref-filter.c	CALL_1
0x40031c4	            0x89ea	                            mov edx, ebp	      1632	ref-filter.c	CALL_1
0x40031c6	      0x410faf5604	               imul edx, dword [r14 + 4]	      1632	ref-filter.c	CALL_1
0x40031cb	        0x488d2c90	                  lea rbp, [rax + rdx*4]	      1632	ref-filter.c	CALL_1
0x40031cf	          0x8b5d00	                    mov ebx, dword [rbp]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x40031d2	            0x85db	                           test ebx, ebx	      1675	ref-filter.c	FUNCTION_60	IF_1
0x40031d4	            0x754d	                           jne 0x4003223	      1675	ref-filter.c	FUNCTION_60	IF_1
0x40031d6	          0x4d85ed	                           test r13, r13	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031d9	     0xf84d1000000	                            je 0x40032b0	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031df	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031e4	          0x4d89ec	                            mov r12, r13	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031e7	        0x488d5804	                      lea rbx, [rax + 4]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031eb	            0xeb11	                           jmp 0x40031fe	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031ed	           0xf1f00	                         nop dword [rax]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031f0	      0x4d8b642408	                mov r12, qword [r12 + 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031f5	          0x4d85e4	                           test r12, r12	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031f8	     0xf84b2000000	                            je 0x40032b0	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40031fe	        0x498b0424	                    mov rax, qword [r12]	       975	cache.h	FUNCTION_152	CALL_1
0x4003202	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_152	CALL_1
0x4003207	          0x4889de	                            mov rsi, rbx	       975	cache.h	FUNCTION_152	CALL_1
0x400320a	        0x488d7804	                      lea rdi, [rax + 4]	       975	cache.h	FUNCTION_152	CALL_1
0x400320e	      0xe800000000	                          call 0x4003213	       975	cache.h	FUNCTION_152	CALL_1
0x4003213	            0x85c0	                           test eax, eax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4003215	            0x75d9	                           jne 0x40031f0	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x4003217	    0xc74500020000	                      mov dword [rbp], 2	      1680	ref-filter.c	FUNCTION_60	IF_2
0x400321e	      0xbb02000000	                              mov ebx, 2	      1681	ref-filter.c	FUNCTION_60	IF_2
0x4003223	        0x4883c458	                           add rsp, 0x58	      1735	ref-filter.c	FUNCTION_62
0x4003227	            0x89d8	                            mov eax, ebx	      1735	ref-filter.c	FUNCTION_62
0x4003229	              0x5b	                                 pop rbx	      1735	ref-filter.c	FUNCTION_62
0x400322a	              0x5d	                                 pop rbp	      1735	ref-filter.c	FUNCTION_62
0x400322b	            0x415c	                                 pop r12	      1735	ref-filter.c	FUNCTION_62
0x400322d	            0x415d	                                 pop r13	      1735	ref-filter.c	FUNCTION_62
0x400322f	            0x415e	                                 pop r14	      1735	ref-filter.c	FUNCTION_62
0x4003231	            0x415f	                                 pop r15	      1735	ref-filter.c	FUNCTION_62
0x4003233	              0xc3	                                     ret	      1735	ref-filter.c	FUNCTION_62
0x4003234	         0xf1f4000	                         nop dword [rax]	      1735	ref-filter.c	FUNCTION_62
0x4003238	          0x8d7301	                      lea esi, [rbx + 1]	      1632	ref-filter.c	CALL_1
0x400323b	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      1632	ref-filter.c	CALL_1
0x400323f	          0x4989f4	                            mov r12, rsi	      1632	ref-filter.c	CALL_1
0x4003242	        0x48c1e603	                              shl rsi, 3	      1632	ref-filter.c	CALL_1
0x4003246	      0xe800000000	                          call 0x400324b	      1632	ref-filter.c	CALL_1
0x400324b	        0x418b4e08	                mov ecx, dword [r14 + 8]	      1632	ref-filter.c	CALL_1
0x400324f	    0x830500000000	               add dword [0x04003256], 1	      1632	ref-filter.c	CALL_1
0x4003256	        0x49894610	             mov qword [r14 + 0x10], rax	      1632	ref-filter.c	CALL_1
0x400325a	            0x39cb	                            cmp ebx, ecx	      1632	ref-filter.c	CALL_1
0x400325c	            0x7217	                            jb 0x4003275	      1632	ref-filter.c	CALL_1
0x400325e	            0x6690	                                     nop	      1632	ref-filter.c	CALL_1
0x4003260	            0x89ca	                            mov edx, ecx	      1632	ref-filter.c	CALL_1
0x4003262	          0x83c101	                              add ecx, 1	      1632	ref-filter.c	CALL_1
0x4003265	            0x39cb	                            cmp ebx, ecx	      1632	ref-filter.c	CALL_1
0x4003267	    0x48c704d00000	              mov qword [rax + rdx*8], 0	      1632	ref-filter.c	CALL_1
0x400326f	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1632	ref-filter.c	CALL_1
0x4003273	            0x73eb	                           jae 0x4003260	      1632	ref-filter.c	CALL_1
0x4003275	        0x45896608	               mov dword [r14 + 8], r12d	      1632	ref-filter.c	CALL_1
0x4003279	        0x4c8d24d8	                  lea r12, [rax + rbx*8]	      1632	ref-filter.c	CALL_1
0x400327d	        0x498b0424	                    mov rax, qword [r12]	      1632	ref-filter.c	CALL_1
0x4003281	          0x4885c0	                           test rax, rax	      1632	ref-filter.c	CALL_1
0x4003284	     0xf853affffff	                           jne 0x40031c4	      1632	ref-filter.c	CALL_1
0x400328a	        0x418b7604	                mov esi, dword [r14 + 4]	      1632	ref-filter.c	CALL_1
0x400328e	          0x418b3e	                    mov edi, dword [r14]	      1632	ref-filter.c	CALL_1
0x4003291	        0x48c1e602	                              shl rsi, 2	      1632	ref-filter.c	CALL_1
0x4003295	      0xe800000000	                          call 0x400329a	      1632	ref-filter.c	CALL_1
0x400329a	        0x49890424	                    mov qword [r12], rax	      1632	ref-filter.c	CALL_1
0x400329e	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1632	ref-filter.c	CALL_1
0x40032a2	        0x488b04d8	            mov rax, qword [rax + rbx*8]	      1632	ref-filter.c	CALL_1
0x40032a6	      0xe919ffffff	                           jmp 0x40031c4	      1632	ref-filter.c	CALL_1
0x40032ab	       0xf1f440000	                   nop dword [rax + rax]	      1632	ref-filter.c	CALL_1
0x40032b0	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x40032b5	          0x4c89ff	                            mov rdi, r15	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x40032b8	      0xe800000000	                          call 0x40032bd	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x40032bd	      0xbe80010000	                          mov esi, 0x180	      1691	ref-filter.c	FUNCTION_61
0x40032c2	            0x31ff	                            xor edi, edi	      1691	ref-filter.c	FUNCTION_61
0x40032c4	      0xe800000000	                          call 0x40032c9	      1691	ref-filter.c	FUNCTION_61
0x40032c9	          0x4889c3	                            mov rbx, rax	      1691	ref-filter.c	FUNCTION_61
0x40032cc	          0x4c8938	                    mov qword [rax], r15	      1692	ref-filter.c	FUNCTION_61
0x40032cf	      0x4889442410	             mov qword [rsp + 0x10], rax	      1691	ref-filter.c	FUNCTION_61
0x40032d4	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      1693	ref-filter.c	FUNCTION_61
0x40032d8	      0x4c896c2430	             mov qword [rsp + 0x30], r13	      1693	ref-filter.c	FUNCTION_61
0x40032dd	    0x41b901000000	                              mov r9d, 1	      1693	ref-filter.c	FUNCTION_61
0x40032e3	    0xc74424441800	           mov dword [rsp + 0x44], 0x18 	      1691	ref-filter.c	FUNCTION_61
0x40032eb	    0xc74424400100	               mov dword [rsp + 0x40], 1	      1693	ref-filter.c	FUNCTION_61
0x40032f3	          0x4d89f5	                            mov r13, r14	      1693	ref-filter.c	FUNCTION_61
0x40032f6	        0x48894308	                mov qword [rbx + 8], rax	      1693	ref-filter.c	FUNCTION_61
0x40032fa	    0x660f1f440000	                    nop word [rax + rax]	      1693	ref-filter.c	FUNCTION_61
0x4003300	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4003305	          0x4c89c8	                             mov rax, r9	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4003308	        0x48c1e004	                              shl rax, 4	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x400330c	      0x4889442428	             mov qword [rsp + 0x28], rax	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4003311	      0x488d4c03f0	             lea rcx, [rbx + rax - 0x10]	      1708	ref-filter.c	FUNCTION_62	WHILE_1
0x4003316	        0x4c8b6108	                mov r12, qword [rcx + 8]	      1710	ref-filter.c	FUNCTION_62	WHILE_1
0x400331a	          0x488b01	                    mov rax, qword [rcx]	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x400331d	          0x4d85e4	                           test r12, r12	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4003320	      0x4889442418	             mov qword [rsp + 0x18], rax	      1709	ref-filter.c	FUNCTION_62	WHILE_1
0x4003325	     0xf84b5020000	                            je 0x40035e0	      1712	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x400332b	        0x498b1c24	                    mov rbx, qword [r12]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x400332f	            0x31d2	                            xor edx, edx	      1632	ref-filter.c	CALL_1
0x4003331	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      1632	ref-filter.c	CALL_1
0x4003334	        0x41f77500	                         div dword [r13]	      1632	ref-filter.c	CALL_1
0x4003338	            0x89c5	                            mov ebp, eax	      1632	ref-filter.c	CALL_1
0x400333a	        0x413b6d08	                cmp ebp, dword [r13 + 8]	      1632	ref-filter.c	CALL_1
0x400333e	          0x4189d6	                           mov r14d, edx	      1632	ref-filter.c	CALL_1
0x4003341	     0xf8339010000	                           jae 0x4003480	      1632	ref-filter.c	CALL_1
0x4003347	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x400334b	        0x4c8d3ce8	                  lea r15, [rax + rbp*8]	      1632	ref-filter.c	CALL_1
0x400334f	      0x4889442408	                mov qword [rsp + 8], rax	      1632	ref-filter.c	CALL_1
0x4003354	          0x498b07	                    mov rax, qword [r15]	      1632	ref-filter.c	CALL_1
0x4003357	          0x4885c0	                           test rax, rax	      1632	ref-filter.c	CALL_1
0x400335a	     0xf8493010000	                            je 0x40034f3	      1632	ref-filter.c	CALL_1
0x4003360	        0x418b7504	                mov esi, dword [r13 + 4]	      1632	ref-filter.c	CALL_1
0x4003364	        0x440faff6	                          imul r14d, esi	      1632	ref-filter.c	CALL_1
0x4003368	        0x89742420	             mov dword [rsp + 0x20], esi	      1632	ref-filter.c	CALL_1
0x400336c	        0x4e8d34b0	                  lea r14, [rax + r14*4]	      1632	ref-filter.c	CALL_1
0x4003370	          0x418b06	                    mov eax, dword [r14]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4003373	            0x85c0	                           test eax, eax	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4003375	     0xf85b5010000	                           jne 0x4003530	      1675	ref-filter.c	FUNCTION_60	IF_1
0x400337b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003380	          0x4885c0	                           test rax, rax	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003383	     0xf84c7010000	                            je 0x4003550	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003389	        0x488d6b04	                      lea rbp, [rbx + 4]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x400338d	          0x4989c7	                            mov r15, rax	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003390	            0xeb13	                           jmp 0x40033a5	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003392	    0x660f1f440000	                    nop word [rax + rax]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003398	        0x4d8b7f08	                mov r15, qword [r15 + 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x400339c	          0x4d85ff	                           test r15, r15	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x400339f	     0xf84ab010000	                            je 0x4003550	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40033a5	          0x498b07	                    mov rax, qword [r15]	       975	cache.h	FUNCTION_152	CALL_1
0x40033a8	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_152	CALL_1
0x40033ad	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_152	CALL_1
0x40033b0	        0x488d7804	                      lea rdi, [rax + 4]	       975	cache.h	FUNCTION_152	CALL_1
0x40033b4	      0xe800000000	                          call 0x40033b9	       975	cache.h	FUNCTION_152	CALL_1
0x40033b9	            0x85c0	                           test eax, eax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x40033bb	            0x75db	                           jne 0x4003398	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x40033bd	    0x41c706020000	                      mov dword [r14], 2	      1680	ref-filter.c	FUNCTION_60	IF_2
0x40033c4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1680	ref-filter.c	FUNCTION_60	IF_2
0x40033c9	            0x31d2	                            xor edx, edx	      1632	ref-filter.c	CALL_1
0x40033cb	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1632	ref-filter.c	CALL_1
0x40033ce	        0x41f77500	                         div dword [r13]	      1632	ref-filter.c	CALL_1
0x40033d2	          0x4189c4	                           mov r12d, eax	      1632	ref-filter.c	CALL_1
0x40033d5	        0x453b6508	               cmp r12d, dword [r13 + 8]	      1632	ref-filter.c	CALL_1
0x40033d9	            0x89d5	                            mov ebp, edx	      1632	ref-filter.c	CALL_1
0x40033db	            0x725a	                            jb 0x4003437	      1632	ref-filter.c	CALL_1
0x40033dd	      0x418d742401	                      lea esi, [r12 + 1]	      1632	ref-filter.c	CALL_1
0x40033e2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1632	ref-filter.c	CALL_1
0x40033e7	          0x4889f3	                            mov rbx, rsi	      1632	ref-filter.c	CALL_1
0x40033ea	        0x48c1e603	                              shl rsi, 3	      1632	ref-filter.c	CALL_1
0x40033ee	      0xe800000000	                          call 0x40033f3	      1632	ref-filter.c	CALL_1
0x40033f3	        0x418b5508	                mov edx, dword [r13 + 8]	      1632	ref-filter.c	CALL_1
0x40033f7	    0x830500000000	               add dword [0x040033fe], 1	      1632	ref-filter.c	CALL_1
0x40033fe	        0x49894510	             mov qword [r13 + 0x10], rax	      1632	ref-filter.c	CALL_1
0x4003402	          0x4139d4	                           cmp r12d, edx	      1632	ref-filter.c	CALL_1
0x4003405	            0x721f	                            jb 0x4003426	      1632	ref-filter.c	CALL_1
0x4003407	    0x660f1f840000	                    nop word [rax + rax]	      1632	ref-filter.c	CALL_1
0x4003410	            0x89d1	                            mov ecx, edx	      1632	ref-filter.c	CALL_1
0x4003412	          0x83c201	                              add edx, 1	      1632	ref-filter.c	CALL_1
0x4003415	          0x4139d4	                           cmp r12d, edx	      1632	ref-filter.c	CALL_1
0x4003418	    0x48c704c80000	              mov qword [rax + rcx*8], 0	      1632	ref-filter.c	CALL_1
0x4003420	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x4003424	            0x73ea	                           jae 0x4003410	      1632	ref-filter.c	CALL_1
0x4003426	      0x4889442408	                mov qword [rsp + 8], rax	      1632	ref-filter.c	CALL_1
0x400342b	        0x418b4504	                mov eax, dword [r13 + 4]	      1632	ref-filter.c	CALL_1
0x400342f	        0x41895d08	                mov dword [r13 + 8], ebx	      1632	ref-filter.c	CALL_1
0x4003433	        0x89442420	             mov dword [rsp + 0x20], eax	      1632	ref-filter.c	CALL_1
0x4003437	      0x488b442408	                mov rax, qword [rsp + 8]	      1632	ref-filter.c	CALL_1
0x400343c	        0x4a8d1ce0	                  lea rbx, [rax + r12*8]	      1632	ref-filter.c	CALL_1
0x4003440	          0x488b03	                    mov rax, qword [rbx]	      1632	ref-filter.c	CALL_1
0x4003443	          0x4885c0	                           test rax, rax	      1632	ref-filter.c	CALL_1
0x4003446	     0xf8432030000	                            je 0x400377e	      1632	ref-filter.c	CALL_1
0x400344c	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x4003451	      0x836c244001	               sub dword [rsp + 0x40], 1	      1723	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x4003456	        0x440faffd	                          imul r15d, ebp	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x400345a	    0x42c704b80200	              mov dword [rax + r15*4], 2	      1722	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_5
0x4003462	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4003466	            0x85c0	                           test eax, eax	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4003468	     0xf84bd010000	                            je 0x400362b	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x400346e	      0x4c634c2440	          movsxd r9, dword [rsp + 0x40] 	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4003473	      0xe988feffff	                           jmp 0x4003300	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4003478	     0xf1f84000000	                   nop dword [rax + rax]	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x4003480	          0x8d7501	                      lea esi, [rbp + 1]	      1632	ref-filter.c	CALL_1
0x4003483	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x4003487	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      1632	ref-filter.c	CALL_1
0x400348c	      0x48894c2408	                mov qword [rsp + 8], rcx	      1632	ref-filter.c	CALL_1
0x4003491	          0x4989f7	                            mov r15, rsi	      1632	ref-filter.c	CALL_1
0x4003494	        0x48c1e603	                              shl rsi, 3	      1632	ref-filter.c	CALL_1
0x4003498	      0xe800000000	                          call 0x400349d	      1632	ref-filter.c	CALL_1
0x400349d	        0x418b5508	                mov edx, dword [r13 + 8]	      1632	ref-filter.c	CALL_1
0x40034a1	    0x830500000000	               add dword [0x040034a8], 1	      1632	ref-filter.c	CALL_1
0x40034a8	        0x49894510	             mov qword [r13 + 0x10], rax	      1632	ref-filter.c	CALL_1
0x40034ac	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1632	ref-filter.c	CALL_1
0x40034b1	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	      1632	ref-filter.c	CALL_1
0x40034b6	            0x39d5	                            cmp ebp, edx	      1632	ref-filter.c	CALL_1
0x40034b8	            0x721b	                            jb 0x40034d5	      1632	ref-filter.c	CALL_1
0x40034ba	    0x660f1f440000	                    nop word [rax + rax]	      1632	ref-filter.c	CALL_1
0x40034c0	            0x89d6	                            mov esi, edx	      1632	ref-filter.c	CALL_1
0x40034c2	          0x83c201	                              add edx, 1	      1632	ref-filter.c	CALL_1
0x40034c5	            0x39d5	                            cmp ebp, edx	      1632	ref-filter.c	CALL_1
0x40034c7	    0x48c704f00000	              mov qword [rax + rsi*8], 0	      1632	ref-filter.c	CALL_1
0x40034cf	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x40034d3	            0x73eb	                           jae 0x40034c0	      1632	ref-filter.c	CALL_1
0x40034d5	      0x4889442408	                mov qword [rsp + 8], rax	      1632	ref-filter.c	CALL_1
0x40034da	      0x488b442408	                mov rax, qword [rsp + 8]	      1632	ref-filter.c	CALL_1
0x40034df	        0x45897d08	               mov dword [r13 + 8], r15d	      1632	ref-filter.c	CALL_1
0x40034e3	        0x4c8d3ce8	                  lea r15, [rax + rbp*8]	      1632	ref-filter.c	CALL_1
0x40034e7	          0x498b07	                    mov rax, qword [r15]	      1632	ref-filter.c	CALL_1
0x40034ea	          0x4885c0	                           test rax, rax	      1632	ref-filter.c	CALL_1
0x40034ed	     0xf856dfeffff	                           jne 0x4003360	      1632	ref-filter.c	CALL_1
0x40034f3	        0x418b7504	                mov esi, dword [r13 + 4]	      1632	ref-filter.c	CALL_1
0x40034f7	        0x418b7d00	                    mov edi, dword [r13]	      1632	ref-filter.c	CALL_1
0x40034fb	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      1632	ref-filter.c	CALL_1
0x4003500	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      1632	ref-filter.c	CALL_1
0x4003505	        0x48c1e602	                              shl rsi, 2	      1632	ref-filter.c	CALL_1
0x4003509	      0xe800000000	                          call 0x400350e	      1632	ref-filter.c	CALL_1
0x400350e	          0x498907	                    mov qword [r15], rax	      1632	ref-filter.c	CALL_1
0x4003511	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x4003515	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      1632	ref-filter.c	CALL_1
0x400351a	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1632	ref-filter.c	CALL_1
0x400351f	      0x4889442408	                mov qword [rsp + 8], rax	      1632	ref-filter.c	CALL_1
0x4003524	        0x488b04e8	            mov rax, qword [rax + rbp*8]	      1632	ref-filter.c	CALL_1
0x4003528	      0xe933feffff	                           jmp 0x4003360	      1632	ref-filter.c	CALL_1
0x400352d	           0xf1f00	                         nop dword [rax]	      1632	ref-filter.c	CALL_1
0x4003530	          0x83f801	                              cmp eax, 1	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4003533	     0xf8497000000	                            je 0x40035d0	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4003539	          0x83f802	                              cmp eax, 2	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x400353c	     0xf85befdffff	                           jne 0x4003300	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4003542	      0xe97dfeffff	                           jmp 0x40033c4	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4003547	    0x660f1f840000	                    nop word [rax + rax]	      1720	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_4
0x4003550	          0x4889df	                            mov rdi, rbx	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4003553	      0xe800000000	                          call 0x4003558	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x4003558	        0x8b4c2444	            mov ecx, dword [rsp + 0x44] 	      1691	ref-filter.c	FUNCTION_61
0x400355c	        0x394c2440	            cmp dword [rsp + 0x40], ecx 	      1691	ref-filter.c	FUNCTION_61
0x4003560	        0x498b1c24	                    mov rbx, qword [r12]	      1729	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1	CALL_6
0x4003564	            0x7c46	                            jl 0x40035ac	      1691	ref-filter.c	FUNCTION_61
0x4003566	        0x8d444930	          lea eax, [rcx + rcx*2 + 0x30] 	      1691	ref-filter.c	FUNCTION_61
0x400356a	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      1691	ref-filter.c	FUNCTION_61
0x400356e	            0x89c2	                            mov edx, eax	      1691	ref-filter.c	FUNCTION_61
0x4003570	          0xc1ea1f	                           shr edx, 0x1f	      1691	ref-filter.c	FUNCTION_61
0x4003573	             0x1d0	                            add eax, edx	      1691	ref-filter.c	FUNCTION_61
0x4003575	          0x8d5101	                      lea edx, [rcx + 1]	      1691	ref-filter.c	FUNCTION_61
0x4003578	            0xd1f8	                              sar eax, 1	      1691	ref-filter.c	FUNCTION_61
0x400357a	            0x39c8	                            cmp eax, ecx	      1691	ref-filter.c	FUNCTION_61
0x400357c	           0xf4ec2	                         cmovle eax, edx	      1691	ref-filter.c	FUNCTION_61
0x400357f	          0x4863f0	                         movsxd rsi, eax	      1691	ref-filter.c	FUNCTION_61
0x4003582	        0x89442444	             mov dword [rsp + 0x44], eax	      1691	ref-filter.c	FUNCTION_61
0x4003586	    0x48b8ffffffff	          movabs rax, 0xfffffffffffffff 	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4003590	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4003593	     0xf8768020000	                            ja 0x4003801	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4003599	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1691	ref-filter.c	FUNCTION_61
0x400359e	        0x48c1e604	                              shl rsi, 4	      1691	ref-filter.c	FUNCTION_61
0x40035a2	      0xe800000000	                          call 0x40035a7	      1691	ref-filter.c	FUNCTION_61
0x40035a7	      0x4889442410	             mov qword [rsp + 0x10], rax	      1691	ref-filter.c	FUNCTION_61
0x40035ac	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1692	ref-filter.c	FUNCTION_61
0x40035b1	      0x4803442410	             add rax, qword [rsp + 0x10]	      1692	ref-filter.c	FUNCTION_61
0x40035b6	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      1693	ref-filter.c	FUNCTION_61
0x40035ba	      0x8344244001	               add dword [rsp + 0x40], 1	      1693	ref-filter.c	FUNCTION_61
0x40035bf	      0x4c634c2440	          movsxd r9, dword [rsp + 0x40] 	      1693	ref-filter.c	FUNCTION_61
0x40035c4	          0x488918	                    mov qword [rax], rbx	      1692	ref-filter.c	FUNCTION_61
0x40035c7	        0x48895008	                mov qword [rax + 8], rdx	      1693	ref-filter.c	FUNCTION_61
0x40035cb	      0xe930fdffff	                           jmp 0x4003300	      1693	ref-filter.c	FUNCTION_61
0x40035d0	      0x498b442408	                mov rax, qword [r12 + 8]	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x40035d5	        0x48894108	                mov qword [rcx + 8], rax	      1726	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x40035d9	      0xe922fdffff	                           jmp 0x4003300	      1727	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x40035de	            0x6690	                                     nop	      1727	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x40035e0	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1727	ref-filter.c	FUNCTION_62	WHILE_1	ELSE_1	SWITCH_1
0x40035e3	            0x31d2	                            xor edx, edx	      1632	ref-filter.c	CALL_1
0x40035e5	        0x41f77500	                         div dword [r13]	      1632	ref-filter.c	CALL_1
0x40035e9	            0x89c3	                            mov ebx, eax	      1632	ref-filter.c	CALL_1
0x40035eb	        0x413b5d08	                cmp ebx, dword [r13 + 8]	      1632	ref-filter.c	CALL_1
0x40035ef	            0x89d5	                            mov ebp, edx	      1632	ref-filter.c	CALL_1
0x40035f1	     0xf83e9000000	                           jae 0x40036e0	      1632	ref-filter.c	CALL_1
0x40035f7	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x40035fb	        0x4c8d24d9	                  lea r12, [rcx + rbx*8]	      1632	ref-filter.c	CALL_1
0x40035ff	        0x498b0c24	                    mov rcx, qword [r12]	      1632	ref-filter.c	CALL_1
0x4003603	          0x4885c9	                           test rcx, rcx	      1632	ref-filter.c	CALL_1
0x4003606	     0xf84aa010000	                            je 0x40037b6	      1632	ref-filter.c	CALL_1
0x400360c	            0x89ea	                            mov edx, ebp	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x400360e	      0x836c244001	               sub dword [rsp + 0x40], 1	      1714	ref-filter.c	FUNCTION_62	WHILE_1	IF_2
0x4003613	      0x410faf5504	               imul edx, dword [r13 + 4]	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x4003618	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x400361c	            0x85c0	                           test eax, eax	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x400361e	    0xc70491010000	              mov dword [rcx + rdx*4], 1	      1713	ref-filter.c	FUNCTION_62	WHILE_1	IF_2	CALL_3
0x4003625	     0xf8543feffff	                           jne 0x400346e	      1707	ref-filter.c	FUNCTION_62	WHILE_1
0x400362b	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4003630	          0x4d89ee	                            mov r14, r13	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4003633	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4003638	      0xe800000000	                          call 0x400363d	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x400363d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1733	ref-filter.c	FUNCTION_62	CALL_7
0x4003642	            0x31d2	                            xor edx, edx	      1632	ref-filter.c	CALL_1
0x4003644	          0x8b4020	            mov eax, dword [rax + 0x20] 	      1632	ref-filter.c	CALL_1
0x4003647	          0x41f736	                         div dword [r14]	      1632	ref-filter.c	CALL_1
0x400364a	            0x89c3	                            mov ebx, eax	      1632	ref-filter.c	CALL_1
0x400364c	        0x413b5e08	                cmp ebx, dword [r14 + 8]	      1632	ref-filter.c	CALL_1
0x4003650	            0x89d5	                            mov ebp, edx	      1632	ref-filter.c	CALL_1
0x4003652	     0xf83da000000	                           jae 0x4003732	      1632	ref-filter.c	CALL_1
0x4003658	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1632	ref-filter.c	CALL_1
0x400365c	        0x4c8d24d8	                  lea r12, [rax + rbx*8]	      1632	ref-filter.c	CALL_1
0x4003660	        0x498b0424	                    mov rax, qword [r12]	      1632	ref-filter.c	CALL_1
0x4003664	          0x4885c0	                           test rax, rax	      1632	ref-filter.c	CALL_1
0x4003667	     0xf846b010000	                            je 0x40037d8	      1632	ref-filter.c	CALL_1
0x400366d	            0x89ea	                            mov edx, ebp	      1632	ref-filter.c	CALL_1
0x400366f	      0x410faf5604	               imul edx, dword [r14 + 4]	      1632	ref-filter.c	CALL_1
0x4003674	        0x4c8d2490	                  lea r12, [rax + rdx*4]	      1632	ref-filter.c	CALL_1
0x4003678	        0x418b1c24	                    mov ebx, dword [r12]	      1675	ref-filter.c	FUNCTION_60	IF_1
0x400367c	            0x85db	                           test ebx, ebx	      1675	ref-filter.c	FUNCTION_60	IF_1
0x400367e	     0xf859ffbffff	                           jne 0x4003223	      1675	ref-filter.c	FUNCTION_60	IF_1
0x4003684	          0x4d85ed	                           test r13, r13	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003687	     0xf841a010000	                            je 0x40037a7	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x400368d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003692	        0x488d6804	                      lea rbp, [rax + 4]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003696	            0xeb15	                           jmp 0x40036ad	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x4003698	     0xf1f84000000	                   nop dword [rax + rax]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40036a0	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40036a4	          0x4d85ed	                           test r13, r13	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40036a7	     0xf84fa000000	                            je 0x40037a7	      1658	ref-filter.c	FUNCTION_59	FOR_1
0x40036ad	        0x498b4500	                    mov rax, qword [r13]	       975	cache.h	FUNCTION_152	CALL_1
0x40036b1	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_152	CALL_1
0x40036b6	          0x4889ee	                            mov rsi, rbp	       975	cache.h	FUNCTION_152	CALL_1
0x40036b9	        0x488d7804	                      lea rdi, [rax + 4]	       975	cache.h	FUNCTION_152	CALL_1
0x40036bd	      0xe800000000	                          call 0x40036c2	       975	cache.h	FUNCTION_152	CALL_1
0x40036c2	            0x85c0	                           test eax, eax	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x40036c4	            0x75da	                           jne 0x40036a0	      1659	ref-filter.c	FUNCTION_59	FOR_1	IF_1	CALL_1
0x40036c6	    0x41c704240200	                      mov dword [r12], 2	      1680	ref-filter.c	FUNCTION_60	IF_2
0x40036ce	      0xbb02000000	                              mov ebx, 2	      1681	ref-filter.c	FUNCTION_60	IF_2
0x40036d3	      0xe94bfbffff	                           jmp 0x4003223	      1681	ref-filter.c	FUNCTION_60	IF_2
0x40036d8	     0xf1f84000000	                   nop dword [rax + rax]	      1681	ref-filter.c	FUNCTION_60	IF_2
0x40036e0	          0x8d7301	                      lea esi, [rbx + 1]	      1632	ref-filter.c	CALL_1
0x40036e3	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x40036e7	          0x4989f4	                            mov r12, rsi	      1632	ref-filter.c	CALL_1
0x40036ea	        0x48c1e603	                              shl rsi, 3	      1632	ref-filter.c	CALL_1
0x40036ee	      0xe800000000	                          call 0x40036f3	      1632	ref-filter.c	CALL_1
0x40036f3	        0x418b4d08	                mov ecx, dword [r13 + 8]	      1632	ref-filter.c	CALL_1
0x40036f7	    0x830500000000	               add dword [0x040036fe], 1	      1632	ref-filter.c	CALL_1
0x40036fe	        0x49894510	             mov qword [r13 + 0x10], rax	      1632	ref-filter.c	CALL_1
0x4003702	            0x39cb	                            cmp ebx, ecx	      1632	ref-filter.c	CALL_1
0x4003704	            0x730e	                           jae 0x4003714	      1632	ref-filter.c	CALL_1
0x4003706	      0xe9ee000000	                           jmp 0x40037f9	      1632	ref-filter.c	CALL_1
0x400370b	       0xf1f440000	                   nop dword [rax + rax]	      1632	ref-filter.c	CALL_1
0x4003710	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x4003714	            0x89ca	                            mov edx, ecx	      1632	ref-filter.c	CALL_1
0x4003716	          0x83c101	                              add ecx, 1	      1632	ref-filter.c	CALL_1
0x4003719	            0x39cb	                            cmp ebx, ecx	      1632	ref-filter.c	CALL_1
0x400371b	    0x48c704d00000	              mov qword [rax + rdx*8], 0	      1632	ref-filter.c	CALL_1
0x4003723	            0x73eb	                           jae 0x4003710	      1632	ref-filter.c	CALL_1
0x4003725	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x4003729	        0x45896508	               mov dword [r13 + 8], r12d	      1632	ref-filter.c	CALL_1
0x400372d	      0xe9c9feffff	                           jmp 0x40035fb	      1632	ref-filter.c	CALL_1
0x4003732	          0x8d7301	                      lea esi, [rbx + 1]	      1632	ref-filter.c	CALL_1
0x4003735	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      1632	ref-filter.c	CALL_1
0x4003739	          0x4989f4	                            mov r12, rsi	      1632	ref-filter.c	CALL_1
0x400373c	        0x48c1e603	                              shl rsi, 3	      1632	ref-filter.c	CALL_1
0x4003740	      0xe800000000	                          call 0x4003745	      1632	ref-filter.c	CALL_1
0x4003745	        0x418b4e08	                mov ecx, dword [r14 + 8]	      1632	ref-filter.c	CALL_1
0x4003749	    0x830500000000	               add dword [0x04003750], 1	      1632	ref-filter.c	CALL_1
0x4003750	        0x49894610	             mov qword [r14 + 0x10], rax	      1632	ref-filter.c	CALL_1
0x4003754	            0x39cb	                            cmp ebx, ecx	      1632	ref-filter.c	CALL_1
0x4003756	            0x721d	                            jb 0x4003775	      1632	ref-filter.c	CALL_1
0x4003758	     0xf1f84000000	                   nop dword [rax + rax]	      1632	ref-filter.c	CALL_1
0x4003760	            0x89ca	                            mov edx, ecx	      1632	ref-filter.c	CALL_1
0x4003762	          0x83c101	                              add ecx, 1	      1632	ref-filter.c	CALL_1
0x4003765	            0x39cb	                            cmp ebx, ecx	      1632	ref-filter.c	CALL_1
0x4003767	    0x48c704d00000	              mov qword [rax + rdx*8], 0	      1632	ref-filter.c	CALL_1
0x400376f	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1632	ref-filter.c	CALL_1
0x4003773	            0x73eb	                           jae 0x4003760	      1632	ref-filter.c	CALL_1
0x4003775	        0x45896608	               mov dword [r14 + 8], r12d	      1632	ref-filter.c	CALL_1
0x4003779	      0xe9defeffff	                           jmp 0x400365c	      1632	ref-filter.c	CALL_1
0x400377e	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      1632	ref-filter.c	CALL_1
0x4003782	        0x418b7d00	                    mov edi, dword [r13]	      1632	ref-filter.c	CALL_1
0x4003786	        0x48c1e602	                              shl rsi, 2	      1632	ref-filter.c	CALL_1
0x400378a	      0xe800000000	                          call 0x400378f	      1632	ref-filter.c	CALL_1
0x400378f	          0x488903	                    mov qword [rbx], rax	      1632	ref-filter.c	CALL_1
0x4003792	        0x418b5d04	                mov ebx, dword [r13 + 4]	      1632	ref-filter.c	CALL_1
0x4003796	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x400379a	        0x895c2420	             mov dword [rsp + 0x20], ebx	      1632	ref-filter.c	CALL_1
0x400379e	        0x4a8b04e0	            mov rax, qword [rax + r12*8]	      1632	ref-filter.c	CALL_1
0x40037a2	      0xe9a5fcffff	                           jmp 0x400344c	      1632	ref-filter.c	CALL_1
0x40037a7	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x40037ac	      0xe800000000	                          call 0x40037b1	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x40037b1	      0xe96dfaffff	                           jmp 0x4003223	      1685	ref-filter.c	FUNCTION_60	CALL_3
0x40037b6	        0x418b7504	                mov esi, dword [r13 + 4]	      1632	ref-filter.c	CALL_1
0x40037ba	        0x418b7d00	                    mov edi, dword [r13]	      1632	ref-filter.c	CALL_1
0x40037be	        0x48c1e602	                              shl rsi, 2	      1632	ref-filter.c	CALL_1
0x40037c2	      0xe800000000	                          call 0x40037c7	      1632	ref-filter.c	CALL_1
0x40037c7	        0x49890424	                    mov qword [r12], rax	      1632	ref-filter.c	CALL_1
0x40037cb	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      1632	ref-filter.c	CALL_1
0x40037cf	        0x488b0cd8	            mov rcx, qword [rax + rbx*8]	      1632	ref-filter.c	CALL_1
0x40037d3	      0xe934feffff	                           jmp 0x400360c	      1632	ref-filter.c	CALL_1
0x40037d8	        0x418b7604	                mov esi, dword [r14 + 4]	      1632	ref-filter.c	CALL_1
0x40037dc	          0x418b3e	                    mov edi, dword [r14]	      1632	ref-filter.c	CALL_1
0x40037df	        0x48c1e602	                              shl rsi, 2	      1632	ref-filter.c	CALL_1
0x40037e3	      0xe800000000	                          call 0x40037e8	      1632	ref-filter.c	CALL_1
0x40037e8	        0x49890424	                    mov qword [r12], rax	      1632	ref-filter.c	CALL_1
0x40037ec	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1632	ref-filter.c	CALL_1
0x40037f0	        0x488b04d8	            mov rax, qword [rax + rbx*8]	      1632	ref-filter.c	CALL_1
0x40037f4	      0xe974feffff	                           jmp 0x400366d	      1632	ref-filter.c	CALL_1
0x40037f9	          0x4889c1	                            mov rcx, rax	      1632	ref-filter.c	CALL_1
0x40037fc	      0xe928ffffff	                           jmp 0x4003729	      1632	ref-filter.c	CALL_1
0x4003801	          0x4889f2	                            mov rdx, rsi	      1632	ref-filter.c	CALL_1
0x4003804	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4003809	      0xbe10000000	                           mov esi, 0x10	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x400380e	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x4003810	      0xe800000000	                          call 0x4003815	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
ref_array_clear	DO,0:ELSE,0:CALL,1:WHILE,0:FOR,1:SWITCH,0:IF,0:functions,0	33
0x4004d10	            0x4155	                                push r13	      2045	ref-filter.c	FUNCTION_76
0x4004d12	            0x4154	                                push r12	      2045	ref-filter.c	FUNCTION_76
0x4004d14	          0x4989fd	                            mov r13, rdi	      2045	ref-filter.c	FUNCTION_76
0x4004d17	              0x55	                                push rbp	      2045	ref-filter.c	FUNCTION_76
0x4004d18	              0x53	                                push rbx	      2045	ref-filter.c	FUNCTION_76
0x4004d19	            0x31ed	                            xor ebp, ebp	      2045	ref-filter.c	FUNCTION_76
0x4004d1b	            0x31db	                            xor ebx, ebx	      2045	ref-filter.c	FUNCTION_76
0x4004d1d	        0x4883ec08	                              sub rsp, 8	      2045	ref-filter.c	FUNCTION_76
0x4004d21	            0x8b07	                    mov eax, dword [rdi]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004d23	            0x85c0	                           test eax, eax	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004d25	            0x7e30	                           jle 0x4004d57	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004d27	    0x660f1f840000	                    nop word [rax + rax]	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004d30	        0x498b4508	                mov rax, qword [r13 + 8]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4004d34	          0x83c301	                              add ebx, 1	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004d37	        0x4c8b2428	              mov r12, qword [rax + rbp]	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4004d3b	        0x4883c508	                              add rbp, 8	      2049	ref-filter.c	FUNCTION_76	CALL_1
0x4004d3f	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4004d44	      0xe800000000	                          call 0x4004d49	      2039	ref-filter.c	FUNCTION_75	CALL_1
0x4004d49	          0x4c89e7	                            mov rdi, r12	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4004d4c	      0xe800000000	                          call 0x4004d51	      2040	ref-filter.c	FUNCTION_75	CALL_2
0x4004d51	        0x41395d00	                    cmp dword [r13], ebx	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004d55	            0x7fd9	                            jg 0x4004d30	      2048	ref-filter.c	FUNCTION_76	FOR_1
0x4004d57	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2050	ref-filter.c	FUNCTION_76
0x4004d5b	      0xe800000000	                          call 0x4004d60	      2050	ref-filter.c	FUNCTION_76
0x4004d60	    0x49c745080000	                  mov qword [r13 + 8], 0	      2050	ref-filter.c	FUNCTION_76
0x4004d68	    0x41c745040000	                  mov dword [r13 + 4], 0	      2051	ref-filter.c	FUNCTION_76
0x4004d70	    0x41c745000000	                      mov dword [r13], 0	      2051	ref-filter.c	FUNCTION_76
0x4004d78	        0x4883c408	                              add rsp, 8	      2052	ref-filter.c	FUNCTION_76
0x4004d7c	              0x5b	                                 pop rbx	      2052	ref-filter.c	FUNCTION_76
0x4004d7d	              0x5d	                                 pop rbp	      2052	ref-filter.c	FUNCTION_76
0x4004d7e	            0x415c	                                 pop r12	      2052	ref-filter.c	FUNCTION_76
0x4004d80	            0x415d	                                 pop r13	      2052	ref-filter.c	FUNCTION_76
0x4004d82	              0xc3	                                     ret	      2052	ref-filter.c	FUNCTION_76
populate_value	DO,0:ELSE,17:CALL,33:WHILE,0:FOR,2:SWITCH,0:IF,31:functions,0	365
0x4003f30	            0x4157	                                push r15	      1458	ref-filter.c	FUNCTION_57
0x4003f32	            0x4156	                                push r14	      1458	ref-filter.c	FUNCTION_57
0x4003f34	            0x4155	                                push r13	      1458	ref-filter.c	FUNCTION_57
0x4003f36	            0x4154	                                push r12	      1458	ref-filter.c	FUNCTION_57
0x4003f38	          0x4989fd	                            mov r13, rdi	      1458	ref-filter.c	FUNCTION_57
0x4003f3b	              0x55	                                push rbp	      1458	ref-filter.c	FUNCTION_57
0x4003f3c	              0x53	                                push rbx	      1458	ref-filter.c	FUNCTION_57
0x4003f3d	    0x4881ec480100	                          sub rsp, 0x148	      1458	ref-filter.c	FUNCTION_57
0x4003f44	    0x48633d000000	         movsxd rdi, dword [0x04003f4b] 	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003f4b	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1458	ref-filter.c	FUNCTION_57
0x4003f50	      0xbe20000000	                           mov esi, 0x20	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003f55	    0x64488b042528	                mov rax, qword fs:[0x28]	      1458	ref-filter.c	FUNCTION_57
0x4003f5e	    0x488984243801	            mov qword [rsp + 0x138], rax	      1458	ref-filter.c	FUNCTION_57
0x4003f66	            0x31c0	                            xor eax, eax	      1458	ref-filter.c	FUNCTION_57
0x4003f68	      0xe800000000	                          call 0x4003f6d	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003f6d	    0x8b3d00000000	            mov edi, dword [0x04003f73] 	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003f73	        0x49894530	             mov qword [r13 + 0x30], rax	      1463	ref-filter.c	FUNCTION_57	CALL_1
0x4003f77	            0x85ff	                           test edi, edi	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003f79	            0x740b	                            je 0x4003f86	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003f7b	      0x41f6451401	               test byte [r13 + 0x14], 1	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003f80	     0xf854a020000	                           jne 0x40041d0	      1465	ref-filter.c	FUNCTION_57	IF_1
0x4003f86	    0x8b3500000000	            mov esi, dword [0x04003f8c] 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003f8c	        0x498d4538	                   lea rax, [r13 + 0x38]	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003f90	            0x31db	                            xor ebx, ebx	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003f92	          0x4531e4	                          xor r12d, r12d	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003f95	      0x4889442410	             mov qword [rsp + 0x10], rax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4003f9a	            0x85f6	                           test esi, esi	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003f9c	            0x7f4a	                            jg 0x4003fe8	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003f9e	      0xe9a0010000	                           jmp 0x4004143	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003fa3	       0xf1f440000	                   nop dword [rax + rax]	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003fa8	      0x41f6451820	           test byte [r13 + 0x18], 0x20 	      1429	ref-filter.c	FUNCTION_55	IF_1
0x4003fad	     0xf85dd000000	                           jne 0x4004090	      1429	ref-filter.c	FUNCTION_55	IF_1
0x4003fb3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003fb8	        0x498d7e10	                   lea rdi, [r14 + 0x10]	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003fbc	      0xe89fc0ffff	                       call sym.show_ref	      1431	ref-filter.c	FUNCTION_55	CALL_2
0x4003fc1	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003fc5	            0x85d2	                           test edx, edx	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003fc7	     0xf859a000000	                           jne 0x4004067	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4003fcd	        0x48894500	                    mov qword [rbp], rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4003fd1	    0x8b1500000000	            mov edx, dword [0x04003fd7] 	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003fd7	        0x4183c401	                             add r12d, 1	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003fdb	        0x4883c320	                           add rbx, 0x20	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003fdf	          0x4439e2	                           cmp edx, r12d	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003fe2	     0xf8e28010000	                           jle 0x4004110	      1473	ref-filter.c	FUNCTION_57	FOR_1
0x4003fe8	        0x4c8d045b	                   lea r8, [rbx + rbx*2]	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003fec	    0x4c0305000000	              add r8, qword [0x04003ff3]	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4003ff3	          0x4889dd	                            mov rbp, rbx	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4003ff6	        0x49036d30	             add rbp, qword [r13 + 0x30]	      1476	ref-filter.c	FUNCTION_57	FOR_1
0x4003ffa	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1477	ref-filter.c	FUNCTION_57	FOR_1
0x4004002	          0x4d8b38	                     mov r15, qword [r8]	      1475	ref-filter.c	FUNCTION_57	FOR_1
0x4004005	          0x4d89c6	                             mov r14, r8	      1474	ref-filter.c	FUNCTION_57	FOR_1
0x4004008	    0x48c745080000	                  mov qword [rbp + 8], 0	      1481	ref-filter.c	FUNCTION_57	FOR_1
0x4004010	        0x4c894518	              mov qword [rbp + 0x18], r8	      1482	ref-filter.c	FUNCTION_57	FOR_1
0x4004014	        0x41803f2a	                    cmp byte [r15], 0x2a	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4004018	            0x7466	                            je 0x4004080	      1484	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x400401a	      0xbe00000000	                              mov esi, 0	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x400401f	          0x4c89ff	                            mov rdi, r15	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4004022	      0xe800000000	                          call 0x4004027	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4004027	            0x85c0	                           test eax, eax	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x4004029	     0xf8579ffffff	                           jne 0x4003fa8	      1489	ref-filter.c	FUNCTION_57	FOR_1	IF_4	CALL_3
0x400402f	      0xbe00000000	                              mov esi, 0	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4004034	          0x4c89ff	                            mov rdi, r15	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4004037	      0xe800000000	                          call 0x400403c	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x400403c	            0x85c0	                           test eax, eax	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x400403e	            0x7460	                            je 0x40040a0	      1491	ref-filter.c	FUNCTION_57	FOR_1	ELSE_1	IF_5	CALL_5
0x4004040	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4004044	      0xb800000000	                              mov eax, 0	      1422	ref-filter.c	FUNCTION_54	IF_1
0x4004049	          0x4885f6	                           test rsi, rsi	      1421	ref-filter.c	FUNCTION_54	IF_1
0x400404c	     0xf846fffffff	                            je 0x4003fc1	      1421	ref-filter.c	FUNCTION_54	IF_1
0x4004052	        0x498d7e10	                   lea rdi, [r14 + 0x10]	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x4004056	      0xe805c0ffff	                       call sym.show_ref	      1424	ref-filter.c	FUNCTION_54	CALL_1
0x400405b	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x400405f	            0x85d2	                           test edx, edx	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4004061	     0xf8466ffffff	                            je 0x4003fcd	      1567	ref-filter.c	FUNCTION_57	FOR_1	IF_27
0x4004067	          0x4889c6	                            mov rsi, rax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x400406a	      0xbf00000000	                              mov edi, 0	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x400406f	            0x31c0	                            xor eax, eax	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4004071	      0xe800000000	                          call 0x4004076	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4004076	      0xe952ffffff	                           jmp 0x4003fcd	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x400407b	       0xf1f440000	                   nop dword [rax + rax]	      1570	ref-filter.c	FUNCTION_57	FOR_1	CALL_31
0x4004080	        0x4983c701	                              add r15, 1	      1486	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4004084	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x400408c	            0xeb8c	                           jmp 0x400401a	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x400408e	            0x6690	                                     nop	      1485	ref-filter.c	FUNCTION_57	FOR_1	IF_3
0x4004090	      0xe800000000	                          call 0x4004095	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x4004095	      0xe927ffffff	                           jmp 0x4003fc1	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x400409a	    0x660f1f440000	                    nop word [rax + rax]	      1430	ref-filter.c	FUNCTION_55	CALL_1
0x40040a0	      0xbe00000000	                              mov esi, 0	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x40040a5	          0x4c89ff	                            mov rdi, r15	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x40040a8	      0xe800000000	                          call 0x40040ad	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x40040ad	            0x85c0	                           test eax, eax	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x40040af	     0xf84bb000000	                            je 0x4004170	      1493	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_7
0x40040b5	        0x498d7d38	                   lea rdi, [r13 + 0x38]	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x40040b9	      0xb800000000	                              mov eax, 0	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x40040be	            0xeb11	                           jmp 0x40040d1	      1496	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_7	CALL_8
0x40040c0	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40040c4	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40040c8	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40040cb	     0xf8500ffffff	                           jne 0x4003fd1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40040d1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40040d4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40040d6	            0x75e8	                           jne 0x40040c0	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40040d8	      0xe800000000	                          call 0x40040dd	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x40040dd	            0x31f6	                            xor esi, esi	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x40040df	          0x4889c7	                            mov rdi, rax	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x40040e2	          0x4989c7	                            mov r15, rax	      1499	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_9
0x40040e5	      0xe800000000	                          call 0x40040ea	      1501	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_10
0x40040ea	          0x4885c0	                           test rax, rax	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x40040ed	     0xf84defeffff	                            je 0x4003fd1	      1502	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	IF_8
0x40040f3	          0x4889e9	                            mov rcx, rbp	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x40040f6	          0x4c89fa	                            mov rdx, r15	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x40040f9	          0x4889c6	                            mov rsi, rax	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x40040fc	          0x4c89f7	                            mov rdi, r14	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x40040ff	      0xe8acc0ffff	        call sym.fill_remote_ref_details	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4004104	      0xe9c8feffff	                           jmp 0x4003fd1	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4004109	     0xf1f80000000	                         nop dword [rax]	      1503	ref-filter.c	FUNCTION_57	FOR_1	ELSE_2	IF_6	CALL_11
0x4004110	            0x85d2	                           test edx, edx	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004112	            0x7e2f	                           jle 0x4004143	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004114	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      1574	ref-filter.c	FUNCTION_57	FOR_2
0x4004118	        0x48833800	                      cmp qword [rax], 0	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x400411c	     0xf84e6000000	                            je 0x4004208	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004122	          0x83ea01	                              sub edx, 1	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004125	        0x48c1e205	                              shl rdx, 5	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004129	          0x4801c2	                            add rdx, rax	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x400412c	            0xeb10	                           jmp 0x400413e	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x400412e	            0x6690	                                     nop	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004130	        0x4883c020	                           add rax, 0x20	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004134	        0x48833800	                      cmp qword [rax], 0	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x4004138	     0xf84ca000000	                            je 0x4004208	      1575	ref-filter.c	FUNCTION_57	FOR_2	IF_28
0x400413e	          0x4839d0	                            cmp rax, rdx	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004141	            0x75ed	                           jne 0x4004130	      1573	ref-filter.c	FUNCTION_57	FOR_2
0x4004143	            0x31c0	                            xor eax, eax	      1579	ref-filter.c	FUNCTION_57	IF_29
0x4004145	    0x488b8c243801	           mov rcx, qword [rsp + 0x138] 	      1604	ref-filter.c	FUNCTION_57
0x400414d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1604	ref-filter.c	FUNCTION_57
0x4004156	     0xf85b3030000	                           jne 0x400450f	      1604	ref-filter.c	FUNCTION_57
0x400415c	    0x4881c4480100	                          add rsp, 0x148	      1604	ref-filter.c	FUNCTION_57
0x4004163	              0x5b	                                 pop rbx	      1604	ref-filter.c	FUNCTION_57
0x4004164	              0x5d	                                 pop rbp	      1604	ref-filter.c	FUNCTION_57
0x4004165	            0x415c	                                 pop r12	      1604	ref-filter.c	FUNCTION_57
0x4004167	            0x415d	                                 pop r13	      1604	ref-filter.c	FUNCTION_57
0x4004169	            0x415e	                                 pop r14	      1604	ref-filter.c	FUNCTION_57
0x400416b	            0x415f	                                 pop r15	      1604	ref-filter.c	FUNCTION_57
0x400416d	              0xc3	                                     ret	      1604	ref-filter.c	FUNCTION_57
0x400416e	            0x6690	                                     nop	      1604	ref-filter.c	FUNCTION_57
0x4004170	      0x41f6462002	               test byte [r14 + 0x20], 2	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x4004175	     0xf84f5000000	                            je 0x4004270	      1505	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x400417b	        0x498d7d38	                   lea rdi, [r13 + 0x38]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400417f	      0xb800000000	                              mov eax, 0	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004184	            0xeb1b	                           jmp 0x40041a1	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1507	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4004190	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004194	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004198	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400419b	     0xf8530feffff	                           jne 0x4003fd1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x40041a1	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40041a4	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40041a6	            0x75e8	                           jne 0x4004190	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x40041a8	      0xe800000000	                          call 0x40041ad	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x40041ad	      0x41f6462004	               test byte [r14 + 0x20], 4	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x40041b2	          0x4989c7	                            mov r15, rax	      1510	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_13
0x40041b5	     0xf8445010000	                            je 0x4004300	      1512	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x40041bb	            0x31f6	                            xor esi, esi	      1513	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	IF_11
0x40041bd	          0x4889e9	                            mov rcx, rbp	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40041c0	          0x4c89fa	                            mov rdx, r15	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40041c3	          0x4c89f7	                            mov rdi, r14	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40041c6	      0xe8e5bfffff	        call sym.fill_remote_ref_details	      1519	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	CALL_15
0x40041cb	      0xe901feffff	                           jmp 0x4003fd1	      1520	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9
0x40041d0	      0x49837d2000	               cmp qword [r13 + 0x20], 0	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40041d5	     0xf85abfdffff	                           jne 0x4003f86	      1465	ref-filter.c	FUNCTION_57	IF_1
0x40041db	        0x498d7d38	                   lea rdi, [r13 + 0x38]	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40041df	            0x31d2	                            xor edx, edx	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40041e1	            0x31c9	                            xor ecx, ecx	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40041e3	      0xbe01000000	                              mov esi, 1	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40041e8	      0xe800000000	                          call 0x40041ed	      1466	ref-filter.c	FUNCTION_57	IF_1	CALL_2
0x40041ed	      0xba00000000	                              mov edx, 0	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x40041f2	          0x4885c0	                           test rax, rax	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x40041f5	        0x480f44c2	                          cmove rax, rdx	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x40041f9	        0x49894520	             mov qword [r13 + 0x20], rax	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x40041fd	      0xe984fdffff	                           jmp 0x4003f86	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4004202	    0x660f1f440000	                    nop word [rax + rax]	      1469	ref-filter.c	FUNCTION_57	IF_1	IF_2
0x4004208	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x400420d	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004212	            0x31d2	                            xor edx, edx	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004214	          0x4c89ee	                            mov rsi, r13	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004217	          0x4c89ef	                            mov rdi, r13	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x400421a	      0xe891dfffff	                     call sym.get_object	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x400421f	            0x85c0	                           test eax, eax	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004221	     0xf85d3010000	                           jne 0x40043fa	      1581	ref-filter.c	FUNCTION_57	IF_30	CALL_32
0x4004227	    0x8b0500000000	            mov eax, dword [0x0400422d] 	      1588	ref-filter.c	FUNCTION_57	IF_31
0x400422d	            0x85c0	                           test eax, eax	      1588	ref-filter.c	FUNCTION_57	IF_31
0x400422f	     0xf840effffff	                            je 0x4004143	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004235	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1588	ref-filter.c	FUNCTION_57	IF_31
0x400423a	           0xfb602	                   movzx eax, byte [rdx]	      1588	ref-filter.c	FUNCTION_57	IF_31
0x400423d	          0x83e00e	                            and eax, 0xe	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004240	            0x3c08	                               cmp al, 8	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004242	     0xf85fbfeffff	                           jne 0x4004143	      1588	ref-filter.c	FUNCTION_57	IF_31
0x4004248	        0x488b7218	            mov rsi, qword [rdx + 0x18] 	      1595	ref-filter.c	FUNCTION_57
0x400424c	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004251	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004256	      0xba01000000	                              mov edx, 1	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x400425b	          0x4c89ef	                            mov rdi, r13	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x400425e	        0x4883c604	                              add rsi, 4	      1595	ref-filter.c	FUNCTION_57
0x4004262	      0xe849dfffff	                     call sym.get_object	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004267	      0xe9d9feffff	                           jmp 0x4004145	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x400426c	         0xf1f4000	                         nop dword [rax]	      1603	ref-filter.c	FUNCTION_57	CALL_33
0x4004270	      0xbe00000000	                              mov esi, 0	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4004275	          0x4c89ff	                            mov rdi, r15	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4004278	      0xe800000000	                          call 0x400427d	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x400427d	            0x85c0	                           test eax, eax	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x400427f	     0xf859b000000	                           jne 0x4004320	      1521	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13	CALL_16
0x4004285	      0xbf00000000	                              mov edi, 0	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x400428a	      0xb905000000	                              mov ecx, 5	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x400428f	          0x4c89fe	                            mov rsi, r15	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4004292	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x4004294	     0xf8593000000	                           jne 0x400432d	      1524	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	CALL_17
0x400429a	        0x418b7514	            mov esi, dword [r13 + 0x14] 	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x400429e	        0x40f6c601	                             test sil, 1	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x40042a2	     0xf85ce000000	                           jne 0x4004376	      1526	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_15
0x40042a8	          0x83e602	                              and esi, 2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x40042ab	     0xf8460010000	                            je 0x4004411	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x40042b1	      0x488d442430	                   lea rax, [rsp + 0x30]	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x40042b6	      0xb92c000000	                           mov ecx, 0x2c	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x40042bb	      0xba00000000	                              mov edx, 0	      1525	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14
0x40042c0	        0x4883c001	                              add rax, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x40042c4	        0x4883c201	                              add rdx, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x40042c8	          0x8848ff	                  mov byte [rax - 1], cl	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x40042cb	           0xfb60a	                   movzx ecx, byte [rdx]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x40042ce	            0x84c9	                             test cl, cl	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x40042d0	            0x75ee	                           jne 0x40042c0	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x40042d2	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x40042d7	          0x4839c8	                            cmp rax, rcx	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x40042da	     0xf8431010000	                            je 0x4004411	      1530	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x40042e0	      0x488d7c2431	                   lea rdi, [rsp + 0x31]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40042e5	          0xc60000	                       mov byte [rax], 0	      1533	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7
0x40042e8	      0xe800000000	                          call 0x40042ed	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40042ed	        0x48894500	                    mov qword [rbp], rax	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40042f1	      0xe9dbfcffff	                           jmp 0x4003fd1	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x40042f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1534	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	ELSE_7	CALL_20
0x4004300	            0x31f6	                            xor esi, esi	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4004302	          0x4c89ff	                            mov rdi, r15	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4004305	      0xe800000000	                          call 0x400430a	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x400430a	          0x4885c0	                           test rax, rax	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x400430d	          0x4889c6	                            mov rsi, rax	      1515	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	CALL_14
0x4004310	     0xf85a7feffff	                           jne 0x40041bd	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4004316	      0xe9b6fcffff	                           jmp 0x4003fd1	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x400431b	       0xf1f440000	                   nop dword [rax + rax]	      1516	ref-filter.c	FUNCTION_57	FOR_1	ELSE_3	IF_9	ELSE_4	IF_12
0x4004320	        0x4d8d4610	                    lea r8, [r14 + 0x10]	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4004324	        0x4c894500	                     mov qword [rbp], r8	      1522	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x4004328	      0xe9a4fcffff	                           jmp 0x4003fd1	      1523	ref-filter.c	FUNCTION_57	FOR_1	ELSE_5	IF_13
0x400432d	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004331	            0x85c9	                           test ecx, ecx	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004333	            0x7473	                            je 0x40043a8	      1537	ref-filter.c	FUNCTION_57	FOR_1	ELSE_8	IF_18	CALL_21
0x4004335	      0xbf00000000	                              mov edi, 0	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x400433a	      0xb905000000	                              mov ecx, 5	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x400433f	          0x4c89fe	                            mov rsi, r15	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4004342	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x4004344	     0xf85d4000000	                           jne 0x400441e	      1539	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	CALL_22
0x400434a	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x400434e	          0x4885f6	                           test rsi, rsi	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004351	     0xf84ad000000	                            je 0x4004404	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004357	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x400435c	      0xe800000000	                          call 0x4004361	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004361	            0x85c0	                           test eax, eax	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004363	     0xf859b000000	                           jne 0x4004404	      1540	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20	CALL_23
0x4004369	    0x48c745000000	                      mov qword [rbp], 0	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4004371	      0xe95bfcffff	                           jmp 0x4003fd1	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4004376	      0x488d442430	                   lea rax, [rsp + 0x30]	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x400437b	      0xb92c000000	                           mov ecx, 0x2c	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4004380	      0xba00000000	                              mov edx, 0	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4004385	           0xf1f00	                         nop dword [rax]	      1541	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	IF_20
0x4004388	        0x4883c001	                              add rax, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x400438c	        0x4883c201	                              add rdx, 1	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4004390	          0x8848ff	                  mov byte [rax - 1], cl	      1237	ref-filter.c	FUNCTION_48	WHILE_1
0x4004393	           0xfb60a	                   movzx ecx, byte [rdx]	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4004396	            0x84c9	                             test cl, cl	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x4004398	            0x75ee	                           jne 0x4004388	      1236	ref-filter.c	FUNCTION_48	WHILE_1
0x400439a	          0x83e602	                              and esi, 2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x400439d	     0xf8513ffffff	                           jne 0x40042b6	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x40043a3	      0xe92affffff	                           jmp 0x40042d2	      1528	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_16
0x40043a8	      0xbe00000000	                              mov esi, 0	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40043ad	          0x4c89ff	                            mov rdi, r15	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40043b0	      0xe800000000	                          call 0x40043b5	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40043b5	            0x85c0	                           test eax, eax	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40043b7	     0xf8478ffffff	                            je 0x4004335	       816	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	CALL_1
0x40043bd	        0x418b4610	            mov eax, dword [r14 + 0x10] 	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40043c1	    0x8b3500000000	            mov esi, dword [0x040043c7] 	       818	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2	CALL_3
0x40043c7	          0x83f802	                              cmp eax, 2	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40043ca	            0x7415	                            je 0x40043e1	       817	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40043cc	            0x85c0	                           test eax, eax	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40043ce	     0xf84d6000000	                            je 0x40044aa	       820	ref-filter.c	ELSE_1	FUNCTION_32	IF_1	IF_2
0x40043d4	          0x83f801	                              cmp eax, 1	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x40043d7	     0xf8526010000	                           jne 0x4004503	       823	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4
0x40043dd	        0x418b7614	            mov esi, dword [r14 + 0x14] 	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40043e1	          0x4c89ef	                            mov rdi, r13	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40043e4	      0xe800000000	                          call 0x40043e9	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40043e9	          0x4889c7	                            mov rdi, rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40043ec	      0xe800000000	                          call 0x40043f1	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40043f1	        0x48894500	                    mov qword [rbp], rax	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40043f5	      0xe9d7fbffff	                           jmp 0x4003fd1	       824	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x40043fa	      0xb8ffffffff	                     mov eax, 0xffffffff	      1582	ref-filter.c	FUNCTION_57	IF_30
0x40043ff	      0xe941fdffff	                           jmp 0x4004145	      1582	ref-filter.c	FUNCTION_57	IF_30
0x4004404	    0x48c745000000	                      mov qword [rbp], 0	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x400440c	      0xe9c0fbffff	                           jmp 0x4003fd1	      1543	ref-filter.c	FUNCTION_57	FOR_1	ELSE_9	IF_19	ELSE_10
0x4004411	    0x48c745000000	                      mov qword [rbp], 0	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x4004419	      0xe9b3fbffff	                           jmp 0x4003fd1	      1531	ref-filter.c	FUNCTION_57	FOR_1	ELSE_6	IF_14	IF_17
0x400441e	      0xbe00000000	                              mov esi, 0	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4004423	          0x4c89ff	                            mov rdi, r15	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x4004426	      0xe800000000	                          call 0x400442b	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x400442b	            0x85c0	                           test eax, eax	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x400442d	            0x740d	                            je 0x400443c	      1545	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21	CALL_24
0x400442f	    0x48c745080000	                  mov qword [rbp + 8], 0	      1546	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x4004437	      0xe995fbffff	                           jmp 0x4003fd1	      1547	ref-filter.c	FUNCTION_57	FOR_1	ELSE_10	ELSE_11	IF_21
0x400443c	        0x41803f65	                    cmp byte [r15], 0x65	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4004440	            0x7446	                            je 0x4004488	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4004442	      0xbe00000000	                              mov esi, 0	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004447	          0x4c89ff	                            mov rdi, r15	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x400444a	      0xe800000000	                          call 0x400444f	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x400444f	            0x85c0	                           test eax, eax	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004451	            0x7470	                            je 0x40044c3	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004453	      0xb800000000	                              mov eax, 0	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x4004458	            0xeb0e	                           jmp 0x4004468	      1551	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_26
0x400445a	        0x4983c701	                              add r15, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x400445e	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004462	        0x413a4fff	                  cmp cl, byte [r15 - 1]	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004466	            0x7513	                           jne 0x400447b	       488	git-compat-util.h	FUNCTION_112	DO_1
0x4004468	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400446b	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400446d	            0x75eb	                           jne 0x400445a	       484	git-compat-util.h	FUNCTION_112	DO_1	IF_1
0x400446f	          0x4c89ff	                            mov rdi, r15	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004472	      0xe800000000	                          call 0x4004477	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x4004477	        0x48894500	                    mov qword [rbp], rax	      1555	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23	CALL_28
0x400447b	    0x48c745080000	                  mov qword [rbp + 8], 0	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x4004483	      0xe949fbffff	                           jmp 0x4003fd1	      1556	ref-filter.c	FUNCTION_57	FOR_1	ELSE_13	IF_23
0x4004488	      0x41807f016e	                cmp byte [r15 + 1], 0x6e	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x400448d	            0x75b3	                           jne 0x4004442	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x400448f	      0x41807f0264	                cmp byte [r15 + 2], 0x64	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4004494	            0x75ac	                           jne 0x4004442	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x4004496	      0x41807f0300	                   cmp byte [r15 + 3], 0	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x400449b	            0x75a5	                           jne 0x4004442	      1548	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22	CALL_25
0x400449d	    0x48c745080000	                  mov qword [rbp + 8], 0	      1549	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x40044a5	      0xe927fbffff	                           jmp 0x4003fd1	      1550	ref-filter.c	FUNCTION_57	FOR_1	ELSE_12	IF_22
0x40044aa	          0x4c89ef	                            mov rdi, r13	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x40044ad	      0xe800000000	                          call 0x40044b2	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x40044b2	          0x4889c7	                            mov rdi, rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x40044b5	      0xe800000000	                          call 0x40044ba	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x40044ba	        0x48894500	                    mov qword [rbp], rax	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x40044be	      0xe90efbffff	                           jmp 0x4003fd1	       821	ref-filter.c	FUNCTION_32	IF_1	IF_3	CALL_5
0x40044c3	      0xbf00000000	                              mov edi, 0	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40044c8	      0xb905000000	                              mov ecx, 5	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40044cd	          0x4c89fe	                            mov rsi, r15	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40044d0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40044d2	            0x750d	                           jne 0x40044e1	      1558	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25	CALL_29
0x40044d4	    0x48c745080000	                  mov qword [rbp + 8], 0	      1559	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x40044dc	      0xe9f0faffff	                           jmp 0x4003fd1	      1560	ref-filter.c	FUNCTION_57	FOR_1	ELSE_14	IF_25
0x40044e1	      0xbf00000000	                              mov edi, 0	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40044e6	      0xb905000000	                              mov ecx, 5	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40044eb	          0x4c89fe	                            mov rsi, r15	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40044ee	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40044f0	     0xf85dbfaffff	                           jne 0x4003fd1	      1561	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26	CALL_30
0x40044f6	    0x48c745080000	                  mov qword [rbp + 8], 0	      1562	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x40044fe	      0xe9cefaffff	                           jmp 0x4003fd1	      1563	ref-filter.c	FUNCTION_57	FOR_1	ELSE_15	IF_26
0x4004503	      0xbf00000000	                              mov edi, 0	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x4004508	            0x31c0	                            xor eax, eax	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x400450a	      0xe800000000	                          call 0x400450f	       827	ref-filter.c	FUNCTION_32	IF_1	ELSE_1	CALL_8
0x400450f	      0xe800000000	                          call 0x4004514	      1604	ref-filter.c	FUNCTION_57
ref_array_push	DO,0:ELSE,0:CALL,1:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	77
0x40047b0	            0x4156	                                push r14	      1929	ref-filter.c	FUNCTION_71
0x40047b2	            0x4155	                                push r13	      1929	ref-filter.c	FUNCTION_71
0x40047b4	          0x4989f6	                            mov r14, rsi	      1929	ref-filter.c	FUNCTION_71
0x40047b7	            0x4154	                                push r12	      1929	ref-filter.c	FUNCTION_71
0x40047b9	              0x55	                                push rbp	      1929	ref-filter.c	FUNCTION_71
0x40047ba	          0x4889fd	                            mov rbp, rdi	      1929	ref-filter.c	FUNCTION_71
0x40047bd	              0x53	                                push rbx	      1929	ref-filter.c	FUNCTION_71
0x40047be	          0x4889f7	                            mov rdi, rsi	      1920	ref-filter.c	FUNCTION_70
0x40047c1	          0x4989d5	                            mov r13, rdx	      1929	ref-filter.c	FUNCTION_71
0x40047c4	      0xe800000000	                          call 0x40047c9	      1920	ref-filter.c	FUNCTION_70
0x40047c9	        0x4883f8c7	             cmp rax, 0xffffffffffffffc7	       785	git-compat-util.h	FUNCTION_119	IF_1
0x40047cd	          0x4989c4	                            mov r12, rax	      1920	ref-filter.c	FUNCTION_70
0x40047d0	     0xf87c5000000	                            ja 0x400489b	       785	git-compat-util.h	FUNCTION_119	IF_1
0x40047d6	     0xf84aa000000	                            je 0x4004886	       785	git-compat-util.h	FUNCTION_119	IF_1
0x40047dc	        0x488d7039	                   lea rsi, [rax + 0x39]	      1920	ref-filter.c	FUNCTION_70
0x40047e0	      0xbf01000000	                              mov edi, 1	      1920	ref-filter.c	FUNCTION_70
0x40047e5	      0xe800000000	                          call 0x40047ea	      1920	ref-filter.c	FUNCTION_70
0x40047ea	        0x488d7838	                   lea rdi, [rax + 0x38]	        53	string3.h	FUNCTION_133	CALL_3
0x40047ee	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_133	CALL_3
0x40047f1	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_133	CALL_3
0x40047f4	          0x4889c3	                            mov rbx, rax	      1920	ref-filter.c	FUNCTION_70
0x40047f7	      0xe800000000	                          call 0x40047fc	        53	string3.h	FUNCTION_133	CALL_3
0x40047fc	        0x498b4500	                    mov rax, qword [r13]	        53	string3.h	FUNCTION_133	CALL_3
0x4004800	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_133	CALL_3
0x4004803	        0x498b4508	                mov rax, qword [r13 + 8]	        53	string3.h	FUNCTION_133	CALL_3
0x4004807	        0x48894308	                mov qword [rbx + 8], rax	        53	string3.h	FUNCTION_133	CALL_3
0x400480b	        0x418b4510	            mov eax, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_133	CALL_3
0x400480f	          0x894310	             mov dword [rbx + 0x10], eax	        53	string3.h	FUNCTION_133	CALL_3
0x4004812	        0x48634d00	                 movsxd rcx, dword [rbp]	      1932	ref-filter.c	FUNCTION_71
0x4004816	          0x8b4504	                mov eax, dword [rbp + 4]	      1932	ref-filter.c	FUNCTION_71
0x4004819	            0x39c1	                            cmp ecx, eax	      1932	ref-filter.c	FUNCTION_71
0x400481b	            0x7c63	                            jl 0x4004880	      1932	ref-filter.c	FUNCTION_71
0x400481d	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1932	ref-filter.c	FUNCTION_71
0x4004821	            0x89c6	                            mov esi, eax	      1932	ref-filter.c	FUNCTION_71
0x4004823	          0xc1ee1f	                           shr esi, 0x1f	      1932	ref-filter.c	FUNCTION_71
0x4004826	             0x1c6	                            add esi, eax	      1932	ref-filter.c	FUNCTION_71
0x4004828	          0x8d4101	                      lea eax, [rcx + 1]	      1932	ref-filter.c	FUNCTION_71
0x400482b	            0xd1fe	                              sar esi, 1	      1932	ref-filter.c	FUNCTION_71
0x400482d	            0x39f1	                            cmp ecx, esi	      1932	ref-filter.c	FUNCTION_71
0x400482f	           0xf4df0	                         cmovge esi, eax	      1932	ref-filter.c	FUNCTION_71
0x4004832	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_120	IF_1
0x400483c	          0x4863d6	                         movsxd rdx, esi	      1932	ref-filter.c	FUNCTION_71
0x400483f	          0x897504	                mov dword [rbp + 4], esi	      1932	ref-filter.c	FUNCTION_71
0x4004842	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4004845	            0x7768	                            ja 0x40048af	       795	git-compat-util.h	FUNCTION_120	IF_1
0x4004847	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1932	ref-filter.c	FUNCTION_71
0x400484b	    0x488d34d50000	                        lea rsi, [rdx*8]	      1932	ref-filter.c	FUNCTION_71
0x4004853	      0xe800000000	                          call 0x4004858	      1932	ref-filter.c	FUNCTION_71
0x4004858	        0x48634d00	                 movsxd rcx, dword [rbp]	      1932	ref-filter.c	FUNCTION_71
0x400485c	        0x48894508	                mov qword [rbp + 8], rax	      1932	ref-filter.c	FUNCTION_71
0x4004860	          0x8d5101	                      lea edx, [rcx + 1]	      1933	ref-filter.c	FUNCTION_71
0x4004863	          0x895500	                    mov dword [rbp], edx	      1933	ref-filter.c	FUNCTION_71
0x4004866	        0x48891cc8	            mov qword [rax + rcx*8], rbx	      1933	ref-filter.c	FUNCTION_71
0x400486a	          0x4889d8	                            mov rax, rbx	      1936	ref-filter.c	FUNCTION_71
0x400486d	              0x5b	                                 pop rbx	      1936	ref-filter.c	FUNCTION_71
0x400486e	              0x5d	                                 pop rbp	      1936	ref-filter.c	FUNCTION_71
0x400486f	            0x415c	                                 pop r12	      1936	ref-filter.c	FUNCTION_71
0x4004871	            0x415d	                                 pop r13	      1936	ref-filter.c	FUNCTION_71
0x4004873	            0x415e	                                 pop r14	      1936	ref-filter.c	FUNCTION_71
0x4004875	              0xc3	                                     ret	      1936	ref-filter.c	FUNCTION_71
0x4004876	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1936	ref-filter.c	FUNCTION_71
0x4004880	        0x488b4508	                mov rax, qword [rbp + 8]	      1936	ref-filter.c	FUNCTION_71
0x4004884	            0xebda	                           jmp 0x4004860	      1936	ref-filter.c	FUNCTION_71
0x4004886	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x400488b	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x400488f	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4004894	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x4004896	      0xe800000000	                          call 0x400489b	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x400489b	          0x4889c2	                            mov rdx, rax	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x400489e	      0xbe38000000	                           mov esi, 0x38	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x40048a3	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x40048a8	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x40048aa	      0xe800000000	                          call 0x40048af	       786	git-compat-util.h	FUNCTION_119	IF_1	CALL_1
0x40048af	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x40048b4	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x40048b9	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
0x40048bb	      0xe800000000	             call sym.ref_filter_handler	       796	git-compat-util.h	FUNCTION_120	IF_1	CALL_1
if_atom_handler	DO,0:ELSE,0:CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	31
0x4000df0	            0x4154	                                push r12	       638	ref-filter.c	FUNCTION_24
0x4000df2	              0x55	                                push rbp	       638	ref-filter.c	FUNCTION_24
0x4000df3	          0x4989f4	                            mov r12, rsi	       638	ref-filter.c	FUNCTION_24
0x4000df6	              0x53	                                push rbx	       638	ref-filter.c	FUNCTION_24
0x4000df7	      0xbe01000000	                              mov esi, 1	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4000dfc	          0x4889fb	                            mov rbx, rdi	       638	ref-filter.c	FUNCTION_24
0x4000dff	      0xbf18000000	                           mov edi, 0x18	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4000e04	      0xe800000000	                          call 0x4000e09	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4000e09	          0x4889c5	                            mov rbp, rax	       640	ref-filter.c	FUNCTION_24	CALL_1
0x4000e0c	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x4000e10	      0xbe30000000	                           mov esi, 0x30	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000e15	      0xbf01000000	                              mov edi, 1	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000e1a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       642	ref-filter.c	FUNCTION_24
0x4000e1e	        0x48895508	                mov qword [rbp + 8], rdx	       642	ref-filter.c	FUNCTION_24
0x4000e22	          0x8b4010	            mov eax, dword [rax + 0x10] 	       643	ref-filter.c	FUNCTION_24
0x4000e25	          0x894500	                    mov dword [rbp], eax	       643	ref-filter.c	FUNCTION_24
0x4000e28	      0xe800000000	                          call 0x4000e2d	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000e2d	        0x488d7808	                      lea rdi, [rax + 8]	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4000e31	            0x31f6	                            xor esi, esi	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4000e33	          0x4889c3	                            mov rbx, rax	       559	ref-filter.c	FUNCTION_19	CALL_1
0x4000e36	      0xe800000000	                          call 0x4000e3b	       561	ref-filter.c	FUNCTION_19	CALL_2
0x4000e3b	      0x498b442408	                mov rax, qword [r12 + 8]	       562	ref-filter.c	FUNCTION_19
0x4000e40	          0x488903	                    mov qword [rbx], rax	       562	ref-filter.c	FUNCTION_19
0x4000e43	      0x49895c2408	                mov qword [r12 + 8], rbx	       563	ref-filter.c	FUNCTION_19
0x4000e48	            0x31c0	                            xor eax, eax	       650	ref-filter.c	FUNCTION_24
0x4000e4a	    0x48c743200000	               mov qword [rbx + 0x20], 0	       647	ref-filter.c	FUNCTION_24
0x4000e52	        0x48896b28	             mov qword [rbx + 0x28], rbp	       648	ref-filter.c	FUNCTION_24
0x4000e56	              0x5b	                                 pop rbx	       650	ref-filter.c	FUNCTION_24
0x4000e57	              0x5d	                                 pop rbp	       650	ref-filter.c	FUNCTION_24
0x4000e58	            0x415c	                                 pop r12	       650	ref-filter.c	FUNCTION_24
0x4000e5a	              0xc3	                                     ret	       650	ref-filter.c	FUNCTION_24
ref_default_sorting	DO,0:ELSE,0:CALL,2:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	42
0x40056d0	              0x55	                                push rbp	      2310	ref-filter.c	FUNCTION_87
0x40056d1	              0x53	                                push rbx	      2310	ref-filter.c	FUNCTION_87
0x40056d2	      0xbe10000000	                           mov esi, 0x10	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x40056d7	      0xbf01000000	                              mov edi, 1	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x40056dc	        0x4883ec48	                           sub rsp, 0x48	      2310	ref-filter.c	FUNCTION_87
0x40056e0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2310	ref-filter.c	FUNCTION_87
0x40056e9	      0x4889442438	             mov qword [rsp + 0x38], rax	      2310	ref-filter.c	FUNCTION_87
0x40056ee	            0x31c0	                            xor eax, eax	      2310	ref-filter.c	FUNCTION_87
0x40056f0	      0xe800000000	                          call 0x40056f5	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x40056f5	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x40056fa	    0x48c700000000	                      mov qword [rax], 0	      2315	ref-filter.c	FUNCTION_87
0x4005701	      0xba00000000	                              mov edx, 0	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4005706	      0xbe00000000	                              mov esi, 0	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x400570b	          0x4889e7	                            mov rdi, rsp	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x400570e	    0x48c744240800	                  mov qword [rsp + 8], 0	      2298	ref-filter.c	FUNCTION_86
0x4005717	          0x4889c3	                            mov rbx, rax	      2313	ref-filter.c	FUNCTION_87	CALL_1
0x400571a	    0x48c704240000	                      mov qword [rsp], 0	      2298	ref-filter.c	FUNCTION_86
0x4005722	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2298	ref-filter.c	FUNCTION_86
0x400572b	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	      2298	ref-filter.c	FUNCTION_86
0x4005733	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2300	ref-filter.c	FUNCTION_86
0x400573c	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2300	ref-filter.c	FUNCTION_86
0x4005745	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2300	ref-filter.c	FUNCTION_86
0x400574e	      0xe87dbbffff	          call sym.parse_ref_filter_atom	      2301	ref-filter.c	FUNCTION_86	CALL_2
0x4005753	            0x85c0	                           test eax, eax	      2302	ref-filter.c	FUNCTION_86	IF_1
0x4005755	            0x7829	                            js 0x4005780	      2302	ref-filter.c	FUNCTION_86	IF_1
0x4005757	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x400575c	            0x89c5	                            mov ebp, eax	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x400575e	      0xe800000000	                          call 0x4005763	      2304	ref-filter.c	FUNCTION_86	CALL_4
0x4005763	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      2318	ref-filter.c	FUNCTION_87
0x4005768	    0x644833142528	                xor rdx, qword fs:[0x28]	      2318	ref-filter.c	FUNCTION_87
0x4005771	          0x896b08	                mov dword [rbx + 8], ebp	      2316	ref-filter.c	FUNCTION_87	CALL_2
0x4005774	          0x4889d8	                            mov rax, rbx	      2318	ref-filter.c	FUNCTION_87
0x4005777	            0x7518	                           jne 0x4005791	      2318	ref-filter.c	FUNCTION_87
0x4005779	        0x4883c448	                           add rsp, 0x48	      2318	ref-filter.c	FUNCTION_87
0x400577d	              0x5b	                                 pop rbx	      2318	ref-filter.c	FUNCTION_87
0x400577e	              0x5d	                                 pop rbp	      2318	ref-filter.c	FUNCTION_87
0x400577f	              0xc3	                                     ret	      2318	ref-filter.c	FUNCTION_87
0x4005780	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4005785	      0xbf00000000	                              mov edi, 0	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x400578a	            0x31c0	                            xor eax, eax	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x400578c	      0xe800000000	                          call 0x4005791	      2303	ref-filter.c	FUNCTION_86	CALL_3
0x4005791	      0xe800000000	                          call 0x4005796	      2318	ref-filter.c	FUNCTION_87
format_ref_array_item	DO,0:ELSE,0:CALL,17:WHILE,0:FOR,1:SWITCH,0:IF,6:functions,0	236
0x40050a0	            0x4157	                                push r15	      2226	ref-filter.c	FUNCTION_83
0x40050a2	            0x4156	                                push r14	      2226	ref-filter.c	FUNCTION_83
0x40050a4	            0x4155	                                push r13	      2226	ref-filter.c	FUNCTION_83
0x40050a6	            0x4154	                                push r12	      2226	ref-filter.c	FUNCTION_83
0x40050a8	          0x4989fd	                            mov r13, rdi	      2226	ref-filter.c	FUNCTION_83
0x40050ab	              0x55	                                push rbp	      2226	ref-filter.c	FUNCTION_83
0x40050ac	              0x53	                                push rbx	      2226	ref-filter.c	FUNCTION_83
0x40050ad	          0x4989f4	                            mov r12, rsi	      2226	ref-filter.c	FUNCTION_83
0x40050b0	      0xbf01000000	                              mov edi, 1	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40050b5	          0x4889cd	                            mov rbp, rcx	      2226	ref-filter.c	FUNCTION_83
0x40050b8	        0x4883ec38	                           sub rsp, 0x38	      2226	ref-filter.c	FUNCTION_83
0x40050bc	    0x64488b042528	                mov rax, qword fs:[0x28]	      2226	ref-filter.c	FUNCTION_83
0x40050c5	      0x4889442428	             mov qword [rsp + 0x28], rax	      2226	ref-filter.c	FUNCTION_83
0x40050ca	            0x31c0	                            xor eax, eax	      2226	ref-filter.c	FUNCTION_83
0x40050cc	          0x8b4608	                mov eax, dword [rsi + 8]	      2230	ref-filter.c	FUNCTION_83
0x40050cf	      0xbe30000000	                           mov esi, 0x30	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40050d4	      0x4889542408	                mov qword [rsp + 8], rdx	      2226	ref-filter.c	FUNCTION_83
0x40050d9	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2228	ref-filter.c	FUNCTION_83
0x40050e2	        0x89442410	             mov dword [rsp + 0x10], eax	      2230	ref-filter.c	FUNCTION_83
0x40050e6	      0xe800000000	                          call 0x40050eb	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40050eb	        0x4c8d7808	                      lea r15, [rax + 8]	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40050ef	            0x31f6	                            xor esi, esi	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40050f1	          0x4889c3	                            mov rbx, rax	       559	ref-filter.c	FUNCTION_19	CALL_1
0x40050f4	          0x4c89ff	                            mov rdi, r15	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40050f7	      0xe800000000	                          call 0x40050fc	       561	ref-filter.c	FUNCTION_19	CALL_2
0x40050fc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       562	ref-filter.c	FUNCTION_19
0x4005101	        0x4d8b3424	                    mov r14, qword [r12]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005105	          0x488903	                    mov qword [rbx], rax	       562	ref-filter.c	FUNCTION_19
0x4005108	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       563	ref-filter.c	FUNCTION_19
0x400510d	        0x410fb616	                   movzx edx, byte [r14]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005111	            0x84d2	                             test dl, dl	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005113	            0x7460	                            je 0x4005175	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005115	           0xf1f00	                         nop dword [rax]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005118	          0x4c89f3	                            mov rbx, r14	      2226	ref-filter.c	FUNCTION_83
0x400511b	            0xeb0b	                           jmp 0x4005128	      2226	ref-filter.c	FUNCTION_83
0x400511d	           0xf1f00	                         nop dword [rax]	      2226	ref-filter.c	FUNCTION_83
0x4005120	        0x4883c301	                              add rbx, 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x4005124	            0x84d2	                             test dl, dl	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4005126	            0x7428	                            je 0x4005150	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4005128	          0x80fa25	                            cmp dl, 0x25	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x400512b	         0xfb65301	               movzx edx, byte [rbx + 1]	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x400512f	            0x75ef	                           jne 0x4005120	       748	ref-filter.c	FUNCTION_29	WHILE_1	IF_1
0x4005131	          0x80fa28	                            cmp dl, 0x28	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x4005134	     0xf84a6000000	                            je 0x40051e0	       753	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	IF_2
0x400513a	          0x80fa25	                            cmp dl, 0x25	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x400513d	            0x75e1	                           jne 0x4005120	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x400513f	         0xfb65302	               movzx edx, byte [rbx + 2]	       755	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4005143	        0x4883c301	                              add rbx, 1	       756	ref-filter.c	FUNCTION_29	WHILE_1	IF_1	ELSE_1	IF_3
0x4005147	        0x4883c301	                              add rbx, 1	       759	ref-filter.c	FUNCTION_29	WHILE_1
0x400514b	            0x84d2	                             test dl, dl	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400514d	            0x75d9	                           jne 0x4005128	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x400514f	              0x90	                                     nop	       747	ref-filter.c	FUNCTION_29	WHILE_1
0x4005150	          0x4c89f7	                            mov rdi, r14	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4005153	      0xe800000000	                          call 0x4005158	      2248	ref-filter.c	FUNCTION_83	IF_3	CALL_9
0x4005158	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x400515d	        0x498d3406	                    lea rsi, [r14 + rax]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4005161	          0x4c89f7	                            mov rdi, r14	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4005164	      0xe867baffff	         call sym.append_literal.isra.27	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4005169	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x400516e	          0x488b03	                    mov rax, qword [rbx]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4005171	        0x4c8d7b08	                      lea r15, [rbx + 8]	      2249	ref-filter.c	FUNCTION_83	IF_3	CALL_10
0x4005175	      0x418b542410	            mov edx, dword [r12 + 0x10] 	      2251	ref-filter.c	FUNCTION_83	IF_4
0x400517a	            0x85d2	                           test edx, edx	      2251	ref-filter.c	FUNCTION_83	IF_4
0x400517c	     0xf8591010000	                           jne 0x4005313	      2251	ref-filter.c	FUNCTION_83	IF_4
0x4005182	          0x4885c0	                           test rax, rax	      2259	ref-filter.c	FUNCTION_83	IF_6
0x4005185	     0xf84b4010000	                            je 0x400533f	      2259	ref-filter.c	FUNCTION_83	IF_6
0x400518b	        0x488d7808	                      lea rdi, [rax + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x400518f	          0x4c89fe	                            mov rsi, r15	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4005192	      0x4889442408	                mov qword [rsp + 8], rax	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4005197	      0xe800000000	                          call 0x400519c	       572	ref-filter.c	FUNCTION_20	CALL_1
0x400519c	          0x4c89ff	                            mov rdi, r15	       573	ref-filter.c	FUNCTION_20	CALL_2
0x400519f	      0xe800000000	                          call 0x40051a4	       573	ref-filter.c	FUNCTION_20	CALL_2
0x40051a4	          0x4889df	                            mov rdi, rbx	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40051a7	      0xe800000000	                          call 0x40051ac	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40051ac	      0x488b442408	                mov rax, qword [rsp + 8]	       575	ref-filter.c	FUNCTION_20
0x40051b1	            0x31ff	                            xor edi, edi	        54	gettext.h	FUNCTION_93
0x40051b3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_93
0x40051b8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_93
0x40051bd	      0x4889442418	             mov qword [rsp + 0x18], rax	       575	ref-filter.c	FUNCTION_20
0x40051c2	      0xe800000000	                          call 0x40051c7	        54	gettext.h	FUNCTION_93
0x40051c7	      0xbeffffffff	                     mov esi, 0xffffffff	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40051cc	          0x4889c2	                            mov rdx, rax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40051cf	          0x4889ef	                            mov rdi, rbp	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40051d2	            0x31c0	                            xor eax, eax	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40051d4	      0xe887b8ffff	   call sym.strbuf_addf_ret.constprop.38	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40051d9	      0xe90c010000	                           jmp 0x40052ea	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40051de	            0x6690	                                     nop	      2261	ref-filter.c	FUNCTION_83	IF_6	CALL_15
0x40051e0	      0xbe29000000	                           mov esi, 0x29	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x40051e5	          0x4889df	                            mov rdi, rbx	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x40051e8	      0xe800000000	                          call 0x40051ed	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x40051ed	          0x4939de	                            cmp r14, rbx	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x40051f0	          0x4989c7	                            mov r15, rax	      2237	ref-filter.c	FUNCTION_83	FOR_1	CALL_3
0x40051f3	            0x725b	                            jb 0x4005250	      2238	ref-filter.c	FUNCTION_83	FOR_1	IF_1
0x40051f5	        0x488d7302	                      lea rsi, [rbx + 2]	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40051f9	          0x4889e9	                            mov rcx, rbp	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40051fc	          0x4c89fa	                            mov rdx, r15	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x40051ff	          0x4c89e7	                            mov rdi, r12	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4005202	      0xe8c9c0ffff	          call sym.parse_ref_filter_atom	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x4005207	          0x4863d8	                         movsxd rbx, eax	      2240	ref-filter.c	FUNCTION_83	FOR_1	CALL_5
0x400520a	            0x85db	                           test ebx, ebx	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x400520c	     0xf88a6000000	                            js 0x40052b8	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4005212	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4005216	          0x4885c0	                           test rax, rax	      1613	ref-filter.c	FUNCTION_58	IF_1
0x4005219	            0x7447	                            je 0x4005262	      1613	ref-filter.c	FUNCTION_58	IF_1
0x400521b	        0x48c1e305	                              shl rbx, 5	      1618	ref-filter.c	FUNCTION_58
0x400521f	          0x4889ea	                            mov rdx, rbp	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x4005222	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x4005227	          0x4801d8	                            add rax, rbx	      1618	ref-filter.c	FUNCTION_58
0x400522a	          0x4889c7	                            mov rdi, rax	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x400522d	          0xff5008	                    call qword [rax + 8]	      2242	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_7
0x4005230	            0x85c0	                           test eax, eax	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4005232	     0xf8580000000	                           jne 0x40052b8	      2241	ref-filter.c	FUNCTION_83	FOR_1	IF_2	CALL_6
0x4005238	      0x410fb65701	               movzx edx, byte [r15 + 1]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x400523d	        0x4d8d7701	                      lea r14, [r15 + 1]	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005241	            0x84d2	                             test dl, dl	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005243	     0xf85cffeffff	                           jne 0x4005118	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005249	      0xe91bffffff	                           jmp 0x4005169	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x400524e	            0x6690	                                     nop	      2233	ref-filter.c	FUNCTION_83	FOR_1	CALL_2
0x4005250	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4005255	          0x4889de	                            mov rsi, rbx	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4005258	          0x4c89f7	                            mov rdi, r14	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x400525b	      0xe870b9ffff	         call sym.append_literal.isra.27	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4005260	            0xeb93	                           jmp 0x40051f5	      2239	ref-filter.c	FUNCTION_83	FOR_1	CALL_4
0x4005262	          0x4889ee	                            mov rsi, rbp	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4005265	          0x4c89ef	                            mov rdi, r13	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4005268	      0xe8c3ecffff	                 call sym.populate_value	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400526d	            0x85c0	                           test eax, eax	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x400526f	            0x7547	                           jne 0x40052b8	      1614	ref-filter.c	FUNCTION_58	IF_1	IF_2	CALL_1
0x4005271	    0x8b1500000000	            mov edx, dword [0x04005277] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4005277	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      1616	ref-filter.c	FUNCTION_58	IF_1	CALL_2
0x400527b	            0x85d2	                           test edx, edx	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400527d	            0x7e9c	                           jle 0x400521b	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400527f	          0x83ea01	                              sub edx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4005282	        0x4883c201	                              add rdx, 1	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4005286	        0x48c1e205	                              shl rdx, 5	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400528a	          0x4801c2	                            add rdx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400528d	            0xeb0a	                           jmp 0x4005299	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x400528f	              0x90	                                     nop	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4005290	        0x4883c020	                           add rax, 0x20	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4005294	          0x4839c2	                            cmp rdx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4005297	            0x7416	                            je 0x40052af	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x4005299	        0x48833800	                      cmp qword [rax], 0	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400529d	            0x75f1	                           jne 0x4005290	      1196	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x400529f	    0x48c700000000	                      mov qword [rax], 0	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x40052a6	        0x4883c020	                           add rax, 0x20	      1197	ref-filter.c	FUNCTION_46	FOR_1	IF_1
0x40052aa	          0x4839c2	                            cmp rdx, rax	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40052ad	            0x75ea	                           jne 0x4005299	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40052af	        0x498b4530	            mov rax, qword [r13 + 0x30] 	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40052b3	      0xe963ffffff	                           jmp 0x400521b	      1194	ref-filter.c	FUNCTION_46	FOR_1
0x40052b8	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       568	ref-filter.c	FUNCTION_20
0x40052bd	          0x488b03	                    mov rax, qword [rbx]	       569	ref-filter.c	FUNCTION_20
0x40052c0	          0x4885c0	                           test rax, rax	       571	ref-filter.c	FUNCTION_20	IF_1
0x40052c3	            0x7448	                            je 0x400530d	       571	ref-filter.c	FUNCTION_20	IF_1
0x40052c5	        0x488d6b08	                      lea rbp, [rbx + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40052c9	        0x488d7808	                      lea rdi, [rax + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40052cd	          0x4889ee	                            mov rsi, rbp	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40052d0	      0xe800000000	                          call 0x40052d5	       572	ref-filter.c	FUNCTION_20	CALL_1
0x40052d5	          0x4889ef	                            mov rdi, rbp	       573	ref-filter.c	FUNCTION_20	CALL_2
0x40052d8	      0xe800000000	                          call 0x40052dd	       573	ref-filter.c	FUNCTION_20	CALL_2
0x40052dd	          0x4889df	                            mov rdi, rbx	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40052e0	      0xe800000000	                          call 0x40052e5	       574	ref-filter.c	FUNCTION_20	CALL_3
0x40052e5	      0xb8ffffffff	                     mov eax, 0xffffffff	      2244	ref-filter.c	FUNCTION_83	FOR_1	IF_2
0x40052ea	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2266	ref-filter.c	FUNCTION_83
0x40052ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2266	ref-filter.c	FUNCTION_83
0x40052f8	     0xf8594000000	                           jne 0x4005392	      2266	ref-filter.c	FUNCTION_83
0x40052fe	        0x4883c438	                           add rsp, 0x38	      2266	ref-filter.c	FUNCTION_83
0x4005302	              0x5b	                                 pop rbx	      2266	ref-filter.c	FUNCTION_83
0x4005303	              0x5d	                                 pop rbp	      2266	ref-filter.c	FUNCTION_83
0x4005304	            0x415c	                                 pop r12	      2266	ref-filter.c	FUNCTION_83
0x4005306	            0x415d	                                 pop r13	      2266	ref-filter.c	FUNCTION_83
0x4005308	            0x415e	                                 pop r14	      2266	ref-filter.c	FUNCTION_83
0x400530a	            0x415f	                                 pop r15	      2266	ref-filter.c	FUNCTION_83
0x400530c	              0xc3	                                     ret	      2266	ref-filter.c	FUNCTION_83
0x400530d	        0x488d6b08	                      lea rbp, [rbx + 8]	      2266	ref-filter.c	FUNCTION_83
0x4005311	            0xebc2	                           jmp 0x40052d5	      2266	ref-filter.c	FUNCTION_83
0x4005313	          0x4885c0	                           test rax, rax	       550	ref-filter.c	FUNCTION_18	IF_1
0x4005316	            0x7468	                            je 0x4005380	       550	ref-filter.c	FUNCTION_18	IF_1
0x4005318	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_99	CALL_2
0x400531b	      0xba03000000	                              mov edx, 3	       279	strbuf.h	FUNCTION_99	CALL_2
0x4005320	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_99	CALL_2
0x4005325	      0xe800000000	                          call 0x400532a	       279	strbuf.h	FUNCTION_99	CALL_2
0x400532a	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       279	strbuf.h	FUNCTION_99	CALL_2
0x400532f	          0x488b03	                    mov rax, qword [rbx]	       279	strbuf.h	FUNCTION_99	CALL_2
0x4005332	        0x4c8d7b08	                      lea r15, [rbx + 8]	       279	strbuf.h	FUNCTION_99	CALL_2
0x4005336	          0x4885c0	                           test rax, rax	      2259	ref-filter.c	FUNCTION_83	IF_6
0x4005339	     0xf854cfeffff	                           jne 0x400518b	      2259	ref-filter.c	FUNCTION_83	IF_6
0x400533f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4005344	          0x4c89fe	                            mov rsi, r15	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x4005347	      0xe800000000	                          call 0x400534c	      2263	ref-filter.c	FUNCTION_83	CALL_16
0x400534c	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       568	ref-filter.c	FUNCTION_20
0x4005351	          0x488b03	                    mov rax, qword [rbx]	       569	ref-filter.c	FUNCTION_20
0x4005354	        0x488d6b08	                      lea rbp, [rbx + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4005358	          0x4885c0	                           test rax, rax	       571	ref-filter.c	FUNCTION_20	IF_1
0x400535b	            0x740c	                            je 0x4005369	       571	ref-filter.c	FUNCTION_20	IF_1
0x400535d	        0x488d7808	                      lea rdi, [rax + 8]	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4005361	          0x4889ee	                            mov rsi, rbp	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4005364	      0xe800000000	                          call 0x4005369	       572	ref-filter.c	FUNCTION_20	CALL_1
0x4005369	          0x4889ef	                            mov rdi, rbp	       573	ref-filter.c	FUNCTION_20	CALL_2
0x400536c	      0xe800000000	                          call 0x4005371	       573	ref-filter.c	FUNCTION_20	CALL_2
0x4005371	          0x4889df	                            mov rdi, rbx	       574	ref-filter.c	FUNCTION_20	CALL_3
0x4005374	      0xe800000000	                          call 0x4005379	       574	ref-filter.c	FUNCTION_20	CALL_3
0x4005379	            0x31c0	                            xor eax, eax	      2265	ref-filter.c	FUNCTION_83
0x400537b	      0xe96affffff	                           jmp 0x40052ea	      2265	ref-filter.c	FUNCTION_83
0x4005380	      0x837c241008	               cmp dword [rsp + 0x10], 8	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x4005385	            0x77b8	                            ja 0x400533f	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x4005387	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x400538b	    0xff24c5000000	                       jmp qword [rax*8]	       522	ref-filter.c	FUNCTION_17	SWITCH_1
0x4005392	      0xe800000000	                          call 0x4005397	      2266	ref-filter.c	FUNCTION_83
0x4005397	          0x4c89ff	                            mov rdi, r15	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x400539a	      0xbe00000000	                              mov esi, 0	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x400539f	      0xe800000000	                          call 0x40053a4	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x40053a4	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x40053a9	          0x488b03	                    mov rax, qword [rbx]	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x40053ac	        0x4c8d7b08	                      lea r15, [rbx + 8]	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x40053b0	      0xe9cdfdffff	                           jmp 0x4005182	       536	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_5
0x40053b5	          0x4c89ff	                            mov rdi, r15	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x40053b8	      0xbe00000000	                              mov esi, 0	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x40053bd	      0xe800000000	                          call 0x40053c2	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x40053c2	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x40053c7	          0x488b03	                    mov rax, qword [rbx]	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x40053ca	        0x4c8d7b08	                      lea r15, [rbx + 8]	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x40053ce	      0xe9affdffff	                           jmp 0x4005182	       533	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_4
0x40053d3	          0x4c89ff	                            mov rdi, r15	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40053d6	      0xbe00000000	                              mov esi, 0	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40053db	      0xe800000000	                          call 0x40053e0	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40053e0	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40053e5	          0x488b03	                    mov rax, qword [rbx]	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40053e8	        0x4c8d7b08	                      lea r15, [rbx + 8]	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40053ec	      0xe991fdffff	                           jmp 0x4005182	       530	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_3
0x40053f1	          0x4c89ff	                            mov rdi, r15	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x40053f4	      0xbe00000000	                              mov esi, 0	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x40053f9	      0xe800000000	                          call 0x40053fe	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x40053fe	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x4005403	          0x488b03	                    mov rax, qword [rbx]	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x4005406	        0x4c8d7b08	                      lea r15, [rbx + 8]	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
0x400540a	      0xe973fdffff	                           jmp 0x4005182	       527	ref-filter.c	FUNCTION_17	SWITCH_1	CALL_2
ref_array_sort	DO,0:ELSE,0:CALL,0:WHILE,0:FOR,0:SWITCH,0:IF,0:functions,0	15
0x4005060	        0x4883ec08	                              sub rsp, 8	      2196	ref-filter.c	FUNCTION_81
0x4005064	          0x4889f0	                            mov rax, rsi	      2196	ref-filter.c	FUNCTION_81
0x4005067	          0x486336	                 movsxd rsi, dword [rsi]	      2197	ref-filter.c	FUNCTION_81
0x400506a	          0x4989f8	                             mov r8, rdi	      2196	ref-filter.c	FUNCTION_81
0x400506d	        0x488b7808	                mov rdi, qword [rax + 8]	      2197	ref-filter.c	FUNCTION_81
0x4005071	      0xb900000000	                              mov ecx, 0	      2197	ref-filter.c	FUNCTION_81
0x4005076	      0xba08000000	                              mov edx, 8	      2197	ref-filter.c	FUNCTION_81
0x400507b	      0xe800000000	                          call 0x4005080	      2197	ref-filter.c	FUNCTION_81
0x4005080	            0x85c0	                           test eax, eax	      2197	ref-filter.c	FUNCTION_81
0x4005082	            0x7505	                           jne 0x4005089	      2197	ref-filter.c	FUNCTION_81
0x4005084	        0x4883c408	                              add rsp, 8	      2198	ref-filter.c	FUNCTION_81
0x4005088	              0xc3	                                     ret	      2198	ref-filter.c	FUNCTION_81
0x4005089	      0xbf00000000	                              mov edi, 0	      2197	ref-filter.c	FUNCTION_81
0x400508e	            0x31c0	                            xor eax, eax	      2197	ref-filter.c	FUNCTION_81
0x4005090	      0xe800000000	                          call 0x4005095	      2197	ref-filter.c	FUNCTION_81
