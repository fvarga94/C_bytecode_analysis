strbuf_complete	SWITCH,0:WHILE,0:functions,0:FOR,0:ELSE,0:DO,0:CALL,1:IF,1	27
0xd9	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_10
0xda	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_10
0xdd	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_10
0xe1	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_10
0xe5	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_10
0xe7	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_10
0xea	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_10	IF_1
0xee	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_10	IF_1
0xf2	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_10	IF_1
0xf5	            0x7431	                            je 0x4000168	       595	strbuf.h	FUNCTION_10	IF_1
0xf7	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_10	IF_1
0xfb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_10	IF_1
0xff	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_10	IF_1
0x103	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_10	IF_1
0x107	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_10	IF_1
0x10b	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_10	IF_1
0x10e	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_10	IF_1
0x111	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_10	IF_1
0x114	            0x7412	                            je 0x4000168	       595	strbuf.h	FUNCTION_10	IF_1
0x116	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_10	CALL_1
0x11a	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_10	CALL_1
0x11e	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_10	CALL_1
0x120	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_10	CALL_1
0x123	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_10	CALL_1
0x128	              0x90	                                     nop	       597	strbuf.h	FUNCTION_10
0x129	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_10
0x12a	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_10
strbuf_avail	SWITCH,0:WHILE,0:functions,0:FOR,0:ELSE,0:DO,0:CALL,0:IF,0	18
0x0	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x1	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x8	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0xc	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0xf	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x12	            0x741b	                            je 0x400006f	       141	strbuf.h	FUNCTION_2
0x14	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x18	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x1f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x23	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x26	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x29	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x2d	            0xeb05	                           jmp 0x4000074	       141	strbuf.h	FUNCTION_2
0x2f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x34	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x35	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
strbuf_addstr	SWITCH,0:WHILE,0:functions,0:FOR,0:ELSE,0:DO,0:CALL,2:IF,0	17
0xa4	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0xa5	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0xa8	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0xac	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0xb0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0xb4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0xb8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0xbb	      0xe800000000	                          call 0x4000100	       279	strbuf.h	FUNCTION_5	CALL_2
0xc0	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0xc3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0xc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0xcb	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0xce	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0xd1	      0xe800000000	                          call 0x4000116	       279	strbuf.h	FUNCTION_5	CALL_2
0xd6	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0xd7	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0xd8	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
strbuf_addch	SWITCH,0:WHILE,0:functions,0:FOR,0:ELSE,0:DO,0:CALL,2:IF,1	33
0x36	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x37	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x3a	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x3e	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x42	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x45	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x49	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4c	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x51	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x54	            0x7511	                           jne 0x40000a7	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x56	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x5a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x5f	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x62	      0xe800000000	                          call 0x40000a7	       228	strbuf.h	FUNCTION_4	CALL_2
0x67	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x6b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x73	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x77	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x7b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x7f	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x83	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x86	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x89	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x8f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x93	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x97	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x9b	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x9e	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0xa1	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0xa2	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0xa3	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
