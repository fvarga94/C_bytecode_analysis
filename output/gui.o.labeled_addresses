gui_get_shellsize	ELSE,0:IF,0:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	11
0x1a10	              0x55	                                push rbp	      1555	gui.c	FUNCTION_22
0x1a11	          0x4889e5	                            mov rbp, rsp	      1555	gui.c	FUNCTION_22
0x1a14	    0x8b0500000000	            mov eax, dword [0x04001a5a] 	      1556	gui.c	FUNCTION_22
0x1a1a	            0x4898	                                    cdqe	      1556	gui.c	FUNCTION_22
0x1a1c	    0x488905000000	            mov qword [0x04001a63], rax 	      1556	gui.c	FUNCTION_22
0x1a23	    0x8b0500000000	            mov eax, dword [0x04001a69] 	      1557	gui.c	FUNCTION_22
0x1a29	            0x4898	                                    cdqe	      1557	gui.c	FUNCTION_22
0x1a2b	    0x488905000000	            mov qword [0x04001a72], rax 	      1557	gui.c	FUNCTION_22
0x1a32	      0xb801000000	                              mov eax, 1	      1558	gui.c	FUNCTION_22
0x1a37	              0x5d	                                 pop rbp	      1559	gui.c	FUNCTION_22
0x1a38	              0xc3	                                     ret	      1559	gui.c	FUNCTION_22
gui_get_base_width	ELSE,0:IF,2:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	18
0x17f2	              0x55	                                push rbp	      1409	gui.c	FUNCTION_18
0x17f3	          0x4889e5	                            mov rbp, rsp	      1409	gui.c	FUNCTION_18
0x17f6	    0x8b0500000000	            mov eax, dword [0x0400183c] 	      1412	gui.c	FUNCTION_18
0x17fc	             0x1c0	                            add eax, eax	      1412	gui.c	FUNCTION_18
0x17fe	          0x8945fc	                mov dword [rbp - 4], eax	      1412	gui.c	FUNCTION_18
0x1801	    0x8b0500000000	            mov eax, dword [0x04001847] 	      1413	gui.c	FUNCTION_18	IF_1
0x1807	            0x85c0	                           test eax, eax	      1413	gui.c	FUNCTION_18	IF_1
0x1809	            0x7409	                            je 0x4001854	      1413	gui.c	FUNCTION_18	IF_1
0x180b	    0x8b0500000000	            mov eax, dword [0x04001851] 	      1414	gui.c	FUNCTION_18	IF_1
0x1811	           0x145fc	                add dword [rbp - 4], eax	      1414	gui.c	FUNCTION_18	IF_1
0x1814	    0x8b0500000000	            mov eax, dword [0x0400185a] 	      1415	gui.c	FUNCTION_18	IF_2
0x181a	            0x85c0	                           test eax, eax	      1415	gui.c	FUNCTION_18	IF_2
0x181c	            0x7409	                            je 0x4001867	      1415	gui.c	FUNCTION_18	IF_2
0x181e	    0x8b0500000000	            mov eax, dword [0x04001864] 	      1416	gui.c	FUNCTION_18	IF_2
0x1824	           0x145fc	                add dword [rbp - 4], eax	      1416	gui.c	FUNCTION_18	IF_2
0x1827	          0x8b45fc	                mov eax, dword [rbp - 4]	      1417	gui.c	FUNCTION_18
0x182a	              0x5d	                                 pop rbp	      1418	gui.c	FUNCTION_18
0x182b	              0xc3	                                     ret	      1418	gui.c	FUNCTION_18
gui_update_cursor	ELSE,7:IF,35:CALL,22:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	498
0xf6d	              0x55	                                push rbp	      1056	gui.c	FUNCTION_15
0xf6e	          0x4889e5	                            mov rbp, rsp	      1056	gui.c	FUNCTION_15
0xf71	        0x4883c480	             add rsp, 0xffffffffffffff80	      1056	gui.c	FUNCTION_15
0xf75	          0x897d8c	             mov dword [rbp - 0x74], edi	      1056	gui.c	FUNCTION_15
0xf78	          0x897588	             mov dword [rbp - 0x78], esi	      1056	gui.c	FUNCTION_15
0xf7b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1056	gui.c	FUNCTION_15
0xf84	        0x488945f8	                mov qword [rbp - 8], rax	      1056	gui.c	FUNCTION_15
0xf88	            0x31c0	                            xor eax, eax	      1056	gui.c	FUNCTION_15
0xf8a	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      1057	gui.c	FUNCTION_15
0xf91	    0xc74598000000	               mov dword [rbp - 0x68], 0	      1058	gui.c	FUNCTION_15
0xf98	    0x48c745b099d4	mov qword [rbp - 0x50], 0xffffffffffffd499	      1063	gui.c	FUNCTION_15
0xfa0	    0x48c745b899d4	mov qword [rbp - 0x48], 0xffffffffffffd499	      1064	gui.c	FUNCTION_15
0xfa8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1069	gui.c	FUNCTION_15
0xfb0	    0x8b0500000000	            mov eax, dword [0x04000ff6] 	      1073	gui.c	FUNCTION_15	IF_1
0xfb6	            0x85c0	                           test eax, eax	      1073	gui.c	FUNCTION_15	IF_1
0xfb8	     0xf8426070000	                            je 0x4001724	      1073	gui.c	FUNCTION_15	IF_1
0xfbe	    0x8b1500000000	            mov edx, dword [0x04001004] 	      1073	gui.c	FUNCTION_15	IF_1
0xfc4	    0x8b0500000000	            mov eax, dword [0x0400100a] 	      1073	gui.c	FUNCTION_15	IF_1
0xfca	            0x39c2	                            cmp edx, eax	      1073	gui.c	FUNCTION_15	IF_1
0xfcc	     0xf8512070000	                           jne 0x4001724	      1073	gui.c	FUNCTION_15	IF_1
0xfd2	    0x8b1500000000	            mov edx, dword [0x04001018] 	      1074	gui.c	FUNCTION_15	IF_1
0xfd8	    0x8b0500000000	            mov eax, dword [0x0400101e] 	      1074	gui.c	FUNCTION_15	IF_1
0xfde	            0x39c2	                            cmp edx, eax	      1074	gui.c	FUNCTION_15	IF_1
0xfe0	     0xf85fe060000	                           jne 0x4001724	      1074	gui.c	FUNCTION_15	IF_1
0xfe6	      0xe816ffffff	                  call sym.gui_check_pos	      1077	gui.c	FUNCTION_15	CALL_1
0xfeb	     0xfb605000000	           movzx eax, byte [0x04001032] 	      1078	gui.c	FUNCTION_15	IF_2
0xff2	            0x84c0	                             test al, al	      1078	gui.c	FUNCTION_15	IF_2
0xff4	            0x742a	                            je 0x4001060	      1078	gui.c	FUNCTION_15	IF_2
0xff6	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1078	gui.c	FUNCTION_15	IF_2
0xffa	            0x7524	                           jne 0x4001060	      1078	gui.c	FUNCTION_15	IF_2
0xffc	    0x8b1500000000	            mov edx, dword [0x04001042] 	      1079	gui.c	FUNCTION_15	IF_2
0x1002	    0x8b0500000000	            mov eax, dword [0x04001048] 	      1079	gui.c	FUNCTION_15	IF_2
0x1008	            0x39c2	                            cmp edx, eax	      1079	gui.c	FUNCTION_15	IF_2
0x100a	            0x7514	                           jne 0x4001060	      1079	gui.c	FUNCTION_15	IF_2
0x100c	    0x8b1500000000	            mov edx, dword [0x04001052] 	      1079	gui.c	FUNCTION_15	IF_2
0x1012	    0x8b0500000000	            mov eax, dword [0x04001058] 	      1079	gui.c	FUNCTION_15	IF_2
0x1018	            0x39c2	                            cmp edx, eax	      1079	gui.c	FUNCTION_15	IF_2
0x101a	     0xf84ce060000	                            je 0x400172e	      1079	gui.c	FUNCTION_15	IF_2
0x1020	      0xe800000000	                          call 0x4001065	      1081	gui.c	FUNCTION_15	IF_2	CALL_2
0x1025	    0x8b0500000000	            mov eax, dword [0x0400106b] 	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x102b	            0x85c0	                           test eax, eax	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x102d	     0xf88b4060000	                            js 0x4001727	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x1033	    0x8b1500000000	            mov edx, dword [0x04001079] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x1039	    0x8b0500000000	            mov eax, dword [0x0400107f] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x103f	            0x39c2	                            cmp edx, eax	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x1041	            0x7510	                           jne 0x4001093	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x1043	    0x8b1500000000	            mov edx, dword [0x04001089] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x1049	    0x8b0500000000	            mov eax, dword [0x0400108f] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x104f	            0x39c2	                            cmp edx, eax	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x1051	            0x7415	                            je 0x40010a8	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x1053	    0x8b1500000000	            mov edx, dword [0x04001099] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x1059	    0x8b0500000000	            mov eax, dword [0x0400109f] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x105f	            0x89d6	                            mov esi, edx	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x1061	            0x89c7	                            mov edi, eax	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x1063	      0xe800000000	                          call 0x40010a8	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x1068	    0x8b0500000000	            mov eax, dword [0x040010ae] 	      1088	gui.c	FUNCTION_15	IF_2
0x106e	    0x890500000000	            mov dword [0x040010b4], eax 	      1088	gui.c	FUNCTION_15	IF_2
0x1074	    0x8b0500000000	            mov eax, dword [0x040010ba] 	      1089	gui.c	FUNCTION_15	IF_2
0x107a	    0x890500000000	            mov dword [0x040010c0], eax 	      1089	gui.c	FUNCTION_15	IF_2
0x1080	    0x8b0500000000	            mov eax, dword [0x040010c6] 	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x1086	            0x85c0	                           test eax, eax	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x1088	     0xf845c060000	                            je 0x400172a	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x108e	    0x488b05000000	            mov rax, qword [0x040010d5] 	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x1095	          0x4885c0	                           test rax, rax	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x1098	     0xf844c060000	                            je 0x400172a	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x109e	        0x837d8800	               cmp dword [rbp - 0x78], 0	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x10a2	            0x7415	                            je 0x40010f9	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x10a4	    0x8b1500000000	            mov edx, dword [0x040010ea] 	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x10aa	    0x8b0500000000	            mov eax, dword [0x040010f0] 	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x10b0	            0x89d6	                            mov esi, edx	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x10b2	            0x89c7	                            mov edi, eax	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x10b4	      0xe800000000	                          call 0x40010f9	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x10b9	    0x8b1500000000	            mov edx, dword [0x040010ff] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x10bf	    0x8b0500000000	            mov eax, dword [0x04001105] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x10c5	            0x39c2	                            cmp edx, eax	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x10c7	     0xf8d20060000	                           jge 0x400172d	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x10cd	    0x8b1500000000	            mov edx, dword [0x04001113] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x10d3	    0x8b0500000000	            mov eax, dword [0x04001119] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x10d9	            0x39c2	                            cmp edx, eax	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x10db	     0xf8d0c060000	                           jge 0x400172d	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x10e1	    0xc60500000000	                mov byte [0x04001128], 1	      1103	gui.c	FUNCTION_15	IF_2
0x10e8	      0xe800000000	                          call 0x400112d	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x10ed	            0x85c0	                           test eax, eax	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x10ef	            0x7419	                            je 0x400114a	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x10f1	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x10f5	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x10f9	          0x4889d6	                            mov rsi, rdx	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x10fc	          0x4889c7	                            mov rdi, rax	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x10ff	      0xe800000000	                          call 0x4001144	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x1104	        0x488945e0	             mov qword [rbp - 0x20], rax	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x1108	            0xeb1a	                           jmp 0x4001164	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x110a	      0xbf00000000	                              mov edi, 0	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x110f	      0xe800000000	                          call 0x4001154	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x1114	            0x4898	                                    cdqe	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x1116	        0x48c1e006	                              shl rax, 6	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x111a	    0x480500000000	                              add rax, 0	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x1120	        0x488945e0	             mov qword [rbp - 0x20], rax	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x1124	    0x8b0500000000	            mov eax, dword [0x0400116a] 	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x112a	          0x83e020	                           and eax, 0x20	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x112d	            0x85c0	                           test eax, eax	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x112f	            0x740c	                            je 0x400117d	      1115	gui.c	FUNCTION_15	IF_2	IF_9
0x1131	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x1135	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x1138	          0x89459c	             mov dword [rbp - 0x64], eax	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x113b	            0xeb0a	                           jmp 0x4001187	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x113d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1118	gui.c	FUNCTION_15	IF_2	ELSE_2
0x1141	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1118	gui.c	FUNCTION_15	IF_2	ELSE_2
0x1144	          0x89459c	             mov dword [rbp - 0x64], eax	      1118	gui.c	FUNCTION_15	IF_2	ELSE_2
0x1147	    0x48c745c099d4	mov qword [rbp - 0x40], 0xffffffffffffd499	      1121	gui.c	FUNCTION_15	IF_2
0x114f	    0x48c745c899d4	mov qword [rbp - 0x38], 0xffffffffffffd499	      1122	gui.c	FUNCTION_15	IF_2
0x1157	    0xc745a0010000	               mov dword [rbp - 0x60], 1	      1123	gui.c	FUNCTION_15	IF_2
0x115e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x1162	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x1166	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x116a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x116e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x1172	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x1176	          0x4889ce	                            mov rsi, rcx	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x1179	          0x4889c7	                            mov rdi, rax	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x117c	      0xe800000000	                          call 0x40011c1	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x1181	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x1185	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x1189	          0x4885c0	                           test rax, rax	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x118c	            0x741a	                            je 0x40011e8	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x118e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x1192	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x1196	          0x4885c0	                           test rax, rax	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x1199	            0x740d	                            je 0x40011e8	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x119b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x119f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x11a3	          0x4885c0	                           test rax, rax	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x11a6	            0x750a	                           jne 0x40011f2	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x11a8	      0xbf00000000	                              mov edi, 0	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x11ad	      0xe800000000	                          call 0x40011f2	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x11b2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x11b6	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x11bc	            0x741c	                            je 0x400121a	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x11be	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      1133	gui.c	FUNCTION_15	IF_2	IF_11
0x11c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x11c9	        0x488945c0	             mov qword [rbp - 0x40], rax	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x11cd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x11d1	        0x488945c8	             mov qword [rbp - 0x38], rax	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x11d5	      0xe981000000	                           jmp 0x400129b	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x11da	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x11de	            0x7e7b	                           jle 0x400129b	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x11e0	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x11e4	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x11e8	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x11eb	          0x4889ce	                            mov rsi, rcx	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x11ee	            0x89c7	                            mov edi, eax	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x11f0	      0xe800000000	                          call 0x4001235	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x11f5	          0x8945a0	             mov dword [rbp - 0x60], eax	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x11f8	      0xe800000000	                          call 0x400123d	      1149	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_11
0x11fd	            0x85c0	                           test eax, eax	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x11ff	            0x745a	                            je 0x400129b	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x1201	      0xbf00000000	                              mov edi, 0	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x1206	      0xe800000000	                          call 0x400124b	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x120b	    0x890500000000	            mov dword [0x04001251], eax 	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x1211	    0x8b0500000000	            mov eax, dword [0x04001257] 	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x1217	            0x85c0	                           test eax, eax	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x1219	            0x7e40	                           jle 0x400129b	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x121b	    0x8b0500000000	            mov eax, dword [0x04001261] 	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x1221	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x1225	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x1229	          0x4889ce	                            mov rsi, rcx	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x122c	            0x89c7	                            mov edi, eax	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x122e	      0xe800000000	                          call 0x4001273	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x1233	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x1237	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x123d	            0x7408	                            je 0x4001287	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x123f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1160	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x1243	        0x488945c8	             mov qword [rbp - 0x38], rax	      1160	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x1247	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x124b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x1251	            0x7408	                            je 0x400129b	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x1253	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x1257	        0x488945c0	             mov qword [rbp - 0x40], rax	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x125b	    0x488b05000000	            mov rax, qword [0x040012a2] 	      1173	gui.c	FUNCTION_15	IF_2
0x1262	    0x488b15000000	            mov rdx, qword [0x040012a9] 	      1173	gui.c	FUNCTION_15	IF_2
0x1269	    0x8b0d00000000	            mov ecx, dword [0x040012af] 	      1173	gui.c	FUNCTION_15	IF_2
0x126f	          0x4863c9	                         movsxd rcx, ecx	      1173	gui.c	FUNCTION_15	IF_2
0x1272	        0x48c1e102	                              shl rcx, 2	      1173	gui.c	FUNCTION_15	IF_2
0x1276	          0x4801ca	                            add rdx, rcx	      1173	gui.c	FUNCTION_15	IF_2
0x1279	            0x8b12	                    mov edx, dword [rdx]	      1173	gui.c	FUNCTION_15	IF_2
0x127b	    0x8b0d00000000	            mov ecx, dword [0x040012c1] 	      1173	gui.c	FUNCTION_15	IF_2
0x1281	             0x1ca	                            add edx, ecx	      1173	gui.c	FUNCTION_15	IF_2
0x1283	            0x89d2	                            mov edx, edx	      1173	gui.c	FUNCTION_15	IF_2
0x1285	          0x4801d2	                            add rdx, rdx	      1173	gui.c	FUNCTION_15	IF_2
0x1288	          0x4801d0	                            add rax, rdx	      1173	gui.c	FUNCTION_15	IF_2
0x128b	           0xfb700	                   movzx eax, word [rax]	      1173	gui.c	FUNCTION_15	IF_2
0x128e	           0xfb7c0	                           movzx eax, ax	      1173	gui.c	FUNCTION_15	IF_2
0x1291	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1173	gui.c	FUNCTION_15	IF_2
0x1294	    0x817da4ff0000	           cmp dword [rbp - 0x5c], 0xff 	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x129b	            0x7e0e	                           jle 0x40012eb	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x129d	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x12a0	            0x89c7	                            mov edi, eax	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x12a2	      0xe800000000	                          call 0x40012e7	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x12a7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x12ab	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x12b0	            0x7463	                            je 0x4001355	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x12b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x12b6	           0xfb700	                   movzx eax, word [rax]	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x12b9	              0x98	                                    cwde	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x12ba	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x12bd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12c1	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12c7	            0x7520	                           jne 0x4001329	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12c9	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12cc	          0x83e001	                              and eax, 1	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12cf	            0x85c0	                           test eax, eax	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12d1	            0x740a	                            je 0x400131d	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12d7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12db	            0xeb08	                           jmp 0x4001325	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12e1	        0x488b4008	                mov rax, qword [rax + 8]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12e5	        0x488945c0	             mov qword [rbp - 0x40], rax	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x12e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x12ed	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x12f3	            0x7520	                           jne 0x4001355	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x12f5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x12f8	          0x83e001	                              and eax, 1	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x12fb	            0x85c0	                           test eax, eax	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x12fd	            0x740a	                            je 0x4001349	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x12ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x1303	        0x488b4008	                mov rax, qword [rax + 8]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x1307	            0xeb08	                           jmp 0x4001351	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x1309	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x130d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x1311	        0x488945c8	             mov qword [rbp - 0x38], rax	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x1315	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x1319	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x131f	            0x751e	                           jne 0x400137f	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x1321	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x1324	          0x83e001	                              and eax, 1	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x1327	            0x85c0	                           test eax, eax	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x1329	            0x7409	                            je 0x4001374	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x132b	    0x488b05000000	            mov rax, qword [0x04001372] 	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x1332	            0xeb07	                           jmp 0x400137b	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x1334	    0x488b05000000	            mov rax, qword [0x0400137b] 	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x133b	        0x488945c0	             mov qword [rbp - 0x40], rax	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x133f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x1343	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x1349	            0x751e	                           jne 0x40013a9	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x134b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x134e	          0x83e001	                              and eax, 1	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x1351	            0x85c0	                           test eax, eax	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x1353	            0x7409	                            je 0x400139e	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x1355	    0x488b05000000	            mov rax, qword [0x0400139c] 	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x135c	            0xeb07	                           jmp 0x40013a5	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x135e	    0x488b05000000	            mov rax, qword [0x040013a5] 	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x1365	        0x488945c8	             mov qword [rbp - 0x38], rax	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x1369	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x136e	     0xf84a8000000	                            je 0x400145c	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x1374	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x1377	          0x83e001	                              and eax, 1	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x137a	            0x85c0	                           test eax, eax	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x137c	            0x740a	                            je 0x40013c8	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x137e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x1382	        0x488b4008	                mov rax, qword [rax + 8]	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x1386	            0xeb08	                           jmp 0x40013d0	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x1388	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x138c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x1390	    0x488905000000	            mov qword [0x040013d7], rax 	      1194	gui.c	FUNCTION_15	IF_2	IF_23
0x1397	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x139a	          0x83e001	                              and eax, 1	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x139d	            0x85c0	                           test eax, eax	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x139f	            0x740a	                            je 0x40013eb	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x13a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x13a5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x13a9	            0xeb08	                           jmp 0x40013f3	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x13ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x13af	        0x488b4008	                mov rax, qword [rax + 8]	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x13b3	    0x488905000000	            mov qword [0x040013fa], rax 	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x13ba	    0x488b05000000	            mov rax, qword [0x04001401] 	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13c1	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13c7	            0x7521	                           jne 0x400142a	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13c9	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13cc	          0x83e001	                              and eax, 1	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13cf	            0x85c0	                           test eax, eax	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13d1	            0x7409	                            je 0x400141c	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13d3	    0x488b05000000	            mov rax, qword [0x0400141a] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13da	            0xeb07	                           jmp 0x4001423	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13dc	    0x488b05000000	            mov rax, qword [0x04001423] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13e3	    0x488905000000	            mov qword [0x0400142a], rax 	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x13ea	    0x488b05000000	            mov rax, qword [0x04001431] 	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x13f1	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x13f7	            0x7565	                           jne 0x400149e	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x13f9	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x13fc	          0x83e001	                              and eax, 1	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x13ff	            0x85c0	                           test eax, eax	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x1401	            0x7409	                            je 0x400144c	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x1403	    0x488b05000000	            mov rax, qword [0x0400144a] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x140a	            0xeb07	                           jmp 0x4001453	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x140c	    0x488b05000000	            mov rax, qword [0x04001453] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x1413	    0x488905000000	            mov qword [0x0400145a], rax 	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x141a	            0xeb42	                           jmp 0x400149e	      1202	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x141c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x141f	          0x83e001	                              and eax, 1	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1422	            0x85c0	                           test eax, eax	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1424	            0x7409	                            je 0x400146f	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1426	    0x488b05000000	            mov rax, qword [0x0400146d] 	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x142d	            0xeb07	                           jmp 0x4001476	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x142f	    0x488b05000000	            mov rax, qword [0x04001476] 	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1436	    0x488905000000	            mov qword [0x0400147d], rax 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x143d	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1440	          0x83e001	                              and eax, 1	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1443	            0x85c0	                           test eax, eax	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1445	            0x7409	                            je 0x4001490	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1447	    0x488b05000000	            mov rax, qword [0x0400148e] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x144e	            0xeb07	                           jmp 0x4001497	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1450	    0x488b05000000	            mov rax, qword [0x04001497] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x1457	    0x488905000000	            mov qword [0x0400149e], rax 	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x145e	        0x8365a4fe	      and dword [rbp - 0x5c], 0xfffffffe	      1214	gui.c	FUNCTION_15	IF_2
0x1462	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x1465	          0x83e001	                              and eax, 1	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x1468	            0x85c0	                           test eax, eax	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x146a	            0x7418	                            je 0x40014c4	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x146c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1217	gui.c	FUNCTION_15	IF_2	IF_26
0x1470	        0x488945f0	             mov qword [rbp - 0x10], rax	      1217	gui.c	FUNCTION_15	IF_2	IF_26
0x1474	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x1478	        0x488945c8	             mov qword [rbp - 0x38], rax	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x147c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1219	gui.c	FUNCTION_15	IF_2	IF_26
0x1480	        0x488945c0	             mov qword [rbp - 0x40], rax	      1219	gui.c	FUNCTION_15	IF_2	IF_26
0x1484	        0x8365a0fe	      and dword [rbp - 0x60], 0xfffffffe	      1221	gui.c	FUNCTION_15	IF_2
0x1488	    0x8b0500000000	            mov eax, dword [0x040014ce] 	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x148e	            0x85c0	                           test eax, eax	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x1490	            0x7511	                           jne 0x40014e3	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x1492	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x1496	          0x4889c7	                            mov rdi, rax	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x1499	      0xe800000000	                          call 0x40014de	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x149e	      0xe94b020000	                           jmp 0x400172e	      1229	gui.c	FUNCTION_15	IF_2	IF_27
0x14a3	    0x8b0500000000	            mov eax, dword [0x040014e9] 	      1232	gui.c	FUNCTION_15	IF_2
0x14a9	          0x8945ac	             mov dword [rbp - 0x54], eax	      1232	gui.c	FUNCTION_15	IF_2
0x14ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x14b0	            0x8b00	                    mov eax, dword [rax]	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x14b2	            0x85c0	                           test eax, eax	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x14b4	            0x7552	                           jne 0x4001548	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x14b6	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x14b9	           0xb45a4	              or eax, dword [rbp - 0x5c]	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x14bc	    0x890500000000	            mov dword [0x04001502], eax 	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x14c2	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14c6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14ca	    0x488b0d000000	            mov rcx, qword [0x04001511] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14d1	    0x8b3500000000	            mov esi, dword [0x04001517] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14d7	          0x4863f6	                         movsxd rsi, esi	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14da	        0x48c1e602	                              shl rsi, 2	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14de	          0x4801f1	                            add rcx, rsi	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14e1	            0x8b09	                    mov ecx, dword [rcx]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14e3	    0x8b3500000000	            mov esi, dword [0x04001529] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14e9	             0x1f1	                            add ecx, esi	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14eb	            0x89cf	                            mov edi, ecx	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14ed	    0x41b800000000	                              mov r8d, 0	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14f3	          0x4889d1	                            mov rcx, rdx	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14f6	          0x4889c2	                            mov rdx, rax	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14f9	      0xbe14000000	                           mov esi, 0x14	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x14fe	      0xe86f100000	                 call sym.gui_screenchar	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x1503	      0xe9d1010000	                           jmp 0x4001719	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x1508	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      1267	gui.c	FUNCTION_15	IF_2	ELSE_6
0x150f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1513	            0x8b00	                    mov eax, dword [rax]	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1515	          0x83f802	                              cmp eax, 2	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1518	            0x7536	                           jne 0x4001590	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x151a	    0x8b0500000000	            mov eax, dword [0x04001560] 	      1275	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1520	          0x894598	             mov dword [rbp - 0x68], eax	      1275	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1523	    0x8b1500000000	            mov edx, dword [0x04001569] 	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1529	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x152d	          0x8b4008	                mov eax, dword [rax + 8]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1530	           0xfafc2	                           imul eax, edx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1533	          0x8d4863	                   lea ecx, [rax + 0x63]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1536	      0xba1f85eb51	                     mov edx, 0x51eb851f	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x153b	            0x89c8	                            mov eax, ecx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x153d	            0xf7ea	                                imul edx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x153f	          0xc1fa05	                              sar edx, 5	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1542	            0x89c8	                            mov eax, ecx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1544	          0xc1f81f	                           sar eax, 0x1f	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1547	            0x29c2	                            sub edx, eax	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1549	            0x89d0	                            mov eax, edx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x154b	          0x894594	             mov dword [rbp - 0x6c], eax	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x154e	            0xeb34	                           jmp 0x40015c4	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x1550	    0x8b1500000000	            mov edx, dword [0x04001596] 	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1556	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x155a	          0x8b4008	                mov eax, dword [rax + 8]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x155d	           0xfafc2	                           imul eax, edx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1560	          0x8d4863	                   lea ecx, [rax + 0x63]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1563	      0xba1f85eb51	                     mov edx, 0x51eb851f	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1568	            0x89c8	                            mov eax, ecx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x156a	            0xf7ea	                                imul edx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x156c	          0xc1fa05	                              sar edx, 5	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x156f	            0x89c8	                            mov eax, ecx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1571	          0xc1f81f	                           sar eax, 0x1f	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1574	            0x29c2	                            sub edx, eax	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1576	            0x89d0	                            mov eax, edx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1578	          0x894598	             mov dword [rbp - 0x68], eax	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x157b	    0x8b0500000000	            mov eax, dword [0x040015c1] 	      1281	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1581	          0x894594	             mov dword [rbp - 0x6c], eax	      1281	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x1584	    0x8b0500000000	            mov eax, dword [0x040015ca] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x158a	            0x85c0	                           test eax, eax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x158c	     0xf84a6000000	                            je 0x4001678	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x1592	    0x488b05000000	            mov rax, qword [0x040015d9] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x1599	    0x488b15000000	            mov rdx, qword [0x040015e0] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15a0	    0x8b0d00000000	            mov ecx, dword [0x040015e6] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15a6	          0x4863c9	                         movsxd rcx, ecx	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15a9	        0x48c1e102	                              shl rcx, 2	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15ad	          0x4801ca	                            add rdx, rcx	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15b0	            0x8b12	                    mov edx, dword [rdx]	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15b2	    0x8b0d00000000	            mov ecx, dword [0x040015f8] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15b8	             0x1d1	                            add ecx, edx	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15ba	    0x488b15000000	            mov rdx, qword [0x04001601] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15c1	    0x8b3500000000	            mov esi, dword [0x04001607] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15c7	          0x4863f6	                         movsxd rsi, esi	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15ca	        0x48c1e602	                              shl rsi, 2	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15ce	          0x4801f2	                            add rdx, rsi	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15d1	            0x8b12	                    mov edx, dword [rdx]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15d3	    0x8b3500000000	            mov esi, dword [0x04001619] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15d9	             0x1f2	                            add edx, esi	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15db	            0x89ce	                            mov esi, ecx	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15dd	            0x89d7	                            mov edi, edx	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15df	            0xffd0	                                call rax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15e1	          0x83f801	                              cmp eax, 1	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15e4	            0x7e52	                           jle 0x4001678	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x15e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1288	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x15ea	            0x8b00	                    mov eax, dword [rax]	      1288	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x15ec	          0x83f802	                              cmp eax, 2	      1288	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x15ef	            0x7409	                            je 0x400163a	      1288	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x15f1	    0x8b0500000000	            mov eax, dword [0x04001637] 	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x15f7	           0x14594	             add dword [rbp - 0x6c], eax	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x15fa	    0x488b05000000	            mov rax, qword [0x04001641] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1601	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1607	            0x85c0	                           test eax, eax	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1609	            0x742d	                            je 0x4001678	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x160b	    0x8b0500000000	            mov eax, dword [0x04001651] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1611	          0x83e008	                              and eax, 8	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1614	            0x85c0	                           test eax, eax	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1616	            0x740a	                            je 0x4001662	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1618	    0x8b0500000000	            mov eax, dword [0x0400165e] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x161e	            0x85c0	                           test eax, eax	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1620	            0x7416	                            je 0x4001678	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1622	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      1297	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1629	    0x8b0500000000	            mov eax, dword [0x0400166f] 	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x162f	          0x83c001	                              add eax, 1	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1632	    0x890500000000	            mov dword [0x04001678], eax 	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x1638	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x163c	          0x8b4d98	             mov ecx, dword [rbp - 0x68]	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x163f	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x1642	            0x89ce	                            mov esi, ecx	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x1644	            0x89c7	                            mov edi, eax	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x1646	      0xe800000000	                          call 0x400168b	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x164b	        0x837da800	               cmp dword [rbp - 0x58], 0	      1305	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x164f	            0x740f	                            je 0x40016a0	      1305	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x1651	    0x8b0500000000	            mov eax, dword [0x04001697] 	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x1657	          0x83e801	                              sub eax, 1	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x165a	    0x890500000000	            mov dword [0x040016a0], eax 	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x1660	    0x488b05000000	            mov rax, qword [0x040016a7] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1667	    0x488b15000000	            mov rdx, qword [0x040016ae] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x166e	    0x8b0d00000000	            mov ecx, dword [0x040016b4] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1674	          0x4863c9	                         movsxd rcx, ecx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1677	        0x48c1e102	                              shl rcx, 2	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x167b	          0x4801ca	                            add rdx, rcx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x167e	            0x8b12	                    mov edx, dword [rdx]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1680	    0x8b0d00000000	            mov ecx, dword [0x040016c6] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1686	             0x1ca	                            add edx, ecx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1688	            0x89d2	                            mov edx, edx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x168a	          0x4801d2	                            add rdx, rdx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x168d	          0x4801d0	                            add rax, rdx	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1690	           0xfb700	                   movzx eax, word [rax]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1693	           0xfb7c0	                           movzx eax, ax	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x1696	    0x890500000000	            mov dword [0x040016dc], eax 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x169c	    0x488b05000000	            mov rax, qword [0x040016e3] 	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16a3	    0x8b1500000000	            mov edx, dword [0x040016e9] 	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16a9	          0x4863d2	                         movsxd rdx, edx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16ac	        0x48c1e202	                              shl rdx, 2	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16b0	          0x4801d0	                            add rax, rdx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16b3	            0x8b00	                    mov eax, dword [rax]	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16b5	    0x8b1500000000	            mov edx, dword [0x040016fb] 	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16bb	             0x1d0	                            add eax, edx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16bd	    0x41b800000000	                              mov r8d, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16c3	      0xb900000000	                              mov ecx, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16c8	      0xba00000000	                              mov edx, 0	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16cd	      0xbe18000000	                           mov esi, 0x18	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16d2	            0x89c7	                            mov edi, eax	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16d4	      0xe8990e0000	                 call sym.gui_screenchar	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x16d9	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1316	gui.c	FUNCTION_15	IF_2
0x16dc	    0x890500000000	            mov dword [0x04001722], eax 	      1316	gui.c	FUNCTION_15	IF_2
0x16e2	            0xeb0a	                           jmp 0x400172e	      1316	gui.c	FUNCTION_15	IF_2
0x16e4	              0x90	                                     nop	      1075	gui.c	FUNCTION_15	IF_1
0x16e5	            0xeb07	                           jmp 0x400172e	      1075	gui.c	FUNCTION_15	IF_1
0x16e7	              0x90	                                     nop	      1083	gui.c	FUNCTION_15	IF_2	IF_3
0x16e8	            0xeb04	                           jmp 0x400172e	      1083	gui.c	FUNCTION_15	IF_2	IF_3
0x16ea	              0x90	                                     nop	      1093	gui.c	FUNCTION_15	IF_2	IF_5
0x16eb	            0xeb01	                           jmp 0x400172e	      1093	gui.c	FUNCTION_15	IF_2	IF_5
0x16ed	              0x90	                                     nop	      1101	gui.c	FUNCTION_15	IF_2	IF_7
0x16ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      1318	gui.c	FUNCTION_15
0x16f2	    0x644833042528	                xor rax, qword fs:[0x28]	      1318	gui.c	FUNCTION_15
0x16fb	            0x7405	                            je 0x4001742	      1318	gui.c	FUNCTION_15
0x16fd	      0xe800000000	                          call 0x4001742	      1318	gui.c	FUNCTION_15
0x1702	              0xc9	                                   leave	      1318	gui.c	FUNCTION_15
0x1703	              0xc3	                                     ret	      1318	gui.c	FUNCTION_15
gui_position_menu	ELSE,0:IF,1:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	5
0x1704	              0x55	                                push rbp	      1323	gui.c	FUNCTION_16
0x1705	          0x4889e5	                            mov rbp, rsp	      1323	gui.c	FUNCTION_16
0x1708	              0x90	                                     nop	      1328	gui.c	FUNCTION_16
0x1709	              0x5d	                                 pop rbp	      1328	gui.c	FUNCTION_16
0x170a	              0xc3	                                     ret	      1328	gui.c	FUNCTION_16
gfp_setname	ELSE,1:IF,1:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	23
0x67c3	              0x55	                                push rbp	      5030	gui.c	FUNCTION_83
0x67c4	          0x4889e5	                            mov rbp, rsp	      5030	gui.c	FUNCTION_83
0x67c7	        0x4883ec20	                           sub rsp, 0x20	      5030	gui.c	FUNCTION_83
0x67cb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5030	gui.c	FUNCTION_83
0x67cf	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5030	gui.c	FUNCTION_83
0x67d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5031	gui.c	FUNCTION_83
0x67d7	        0x488945f8	                mov qword [rbp - 8], rax	      5031	gui.c	FUNCTION_83
0x67db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x67df	          0x4889c7	                            mov rdi, rax	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x67e2	      0xe800000000	                          call 0x4006827	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x67e7	    0x483dff0f0000	                          cmp rax, 0xfff	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x67ed	            0x7609	                           jbe 0x4006838	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x67ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      5034	gui.c	FUNCTION_83	IF_1
0x67f3	          0xc60000	                       mov byte [rax], 0	      5034	gui.c	FUNCTION_83	IF_1
0x67f6	            0xeb13	                           jmp 0x400684b	      5037	gui.c	FUNCTION_83
0x67f8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5036	gui.c	FUNCTION_83	CALL_2
0x67fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      5036	gui.c	FUNCTION_83	CALL_2
0x6800	          0x4889d6	                            mov rsi, rdx	      5036	gui.c	FUNCTION_83	CALL_2
0x6803	          0x4889c7	                            mov rdi, rax	      5036	gui.c	FUNCTION_83	CALL_2
0x6806	      0xe800000000	                          call 0x400684b	      5036	gui.c	FUNCTION_83	CALL_2
0x680b	              0x90	                                     nop	      5037	gui.c	FUNCTION_83
0x680c	              0xc9	                                   leave	      5037	gui.c	FUNCTION_83
0x680d	              0xc3	                                     ret	      5037	gui.c	FUNCTION_83
gui_set_bg_color	ELSE,0:IF,0:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	16
0x5ffe	              0x55	                                push rbp	      4752	gui.c	FUNCTION_74
0x5fff	          0x4889e5	                            mov rbp, rsp	      4752	gui.c	FUNCTION_74
0x6002	        0x4883ec10	                           sub rsp, 0x10	      4752	gui.c	FUNCTION_74
0x6006	        0x48897df8	                mov qword [rbp - 8], rdi	      4752	gui.c	FUNCTION_74
0x600a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4753	gui.c	FUNCTION_74	CALL_1
0x600e	          0x4889c7	                            mov rdi, rax	      4753	gui.c	FUNCTION_74	CALL_1
0x6011	      0xe800000000	                          call 0x4006056	      4753	gui.c	FUNCTION_74	CALL_1
0x6016	    0x488905000000	            mov qword [0x0400605d], rax 	      4753	gui.c	FUNCTION_74	CALL_1
0x601d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4754	gui.c	FUNCTION_74	CALL_3
0x6021	          0x4889c7	                            mov rdi, rax	      4754	gui.c	FUNCTION_74	CALL_3
0x6024	      0xe800000000	                          call 0x4006069	      4754	gui.c	FUNCTION_74	CALL_3
0x6029	          0x4889c7	                            mov rdi, rax	      4754	gui.c	FUNCTION_74	CALL_3
0x602c	      0xe800000000	                          call 0x4006071	      4754	gui.c	FUNCTION_74	CALL_3
0x6031	              0x90	                                     nop	      4755	gui.c	FUNCTION_74
0x6032	              0xc9	                                   leave	      4755	gui.c	FUNCTION_74
0x6033	              0xc3	                                     ret	      4755	gui.c	FUNCTION_74
gui_shell_closed	ELSE,0:IF,1:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	37
0xb97	              0x55	                                push rbp	       816	gui.c	FUNCTION_9
0xb98	          0x4889e5	                            mov rbp, rsp	       816	gui.c	FUNCTION_9
0xb9b	    0x4881ec000100	                          sub rsp, 0x100	       816	gui.c	FUNCTION_9
0xba2	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	gui.c	FUNCTION_9
0xbab	        0x488945f8	                mov qword [rbp - 8], rax	       816	gui.c	FUNCTION_9
0xbaf	            0x31c0	                            xor eax, eax	       816	gui.c	FUNCTION_9
0xbb1	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       819	gui.c	FUNCTION_9
0xbb8	      0xbe00000000	                              mov esi, 0	       819	gui.c	FUNCTION_9
0xbbd	      0xba1e000000	                           mov edx, 0x1e	       819	gui.c	FUNCTION_9
0xbc2	          0x4889c7	                            mov rdi, rax	       819	gui.c	FUNCTION_9
0xbc5	          0x4889d1	                            mov rcx, rdx	       819	gui.c	FUNCTION_9
0xbc8	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       819	gui.c	FUNCTION_9
0xbcb	    0xc70500000000	               mov dword [0x04000c15], 1	       822	gui.c	FUNCTION_9
0xbd5	    0xc70500000000	               mov dword [0x04000c1f], 1	       824	gui.c	FUNCTION_9
0xbdf	    0xc70500000000	               mov dword [0x04000c29], 1	       827	gui.c	FUNCTION_9
0xbe9	      0xbe00000000	                              mov esi, 0	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0xbee	      0xbf00000000	                              mov edi, 0	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0xbf3	      0xe800000000	                          call 0x4000c38	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0xbf8	            0x85c0	                           test eax, eax	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0xbfa	            0x750a	                           jne 0x4000c46	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0xbfc	      0xbf00000000	                              mov edi, 0	       832	gui.c	FUNCTION_9	CALL_2
0xc01	      0xe800000000	                          call 0x4000c46	       832	gui.c	FUNCTION_9	CALL_2
0xc06	    0xc70500000000	               mov dword [0x04000c50], 0	       834	gui.c	FUNCTION_9
0xc10	      0xbf00000000	                              mov edi, 0	       835	gui.c	FUNCTION_9
0xc15	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       835	gui.c	FUNCTION_9
0xc1c	      0xba1e000000	                           mov edx, 0x1e	       835	gui.c	FUNCTION_9
0xc21	          0x4889c6	                            mov rsi, rax	       835	gui.c	FUNCTION_9
0xc24	          0x4889d1	                            mov rcx, rdx	       835	gui.c	FUNCTION_9
0xc27	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       835	gui.c	FUNCTION_9
0xc2a	      0xe800000000	                          call 0x4000c6f	       836	gui.c	FUNCTION_9	CALL_3
0xc2f	              0x90	                                     nop	       837	gui.c	FUNCTION_9
0xc30	        0x488b45f8	                mov rax, qword [rbp - 8]	       837	gui.c	FUNCTION_9
0xc34	    0x644833042528	                xor rax, qword fs:[0x28]	       837	gui.c	FUNCTION_9
0xc3d	            0x7405	                            je 0x4000c84	       837	gui.c	FUNCTION_9
0xc3f	      0xe800000000	                          call 0x4000c84	       837	gui.c	FUNCTION_9
0xc44	              0xc9	                                   leave	       837	gui.c	FUNCTION_9
0xc45	              0xc3	                                     ret	       837	gui.c	FUNCTION_9
gui_get_wide_font	ELSE,1:IF,5:CALL,6:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	74
0xd8d	              0x55	                                push rbp	       980	gui.c	FUNCTION_12
0xd8e	          0x4889e5	                            mov rbp, rsp	       980	gui.c	FUNCTION_12
0xd91	    0x4881ec600100	                          sub rsp, 0x160	       980	gui.c	FUNCTION_12
0xd98	    0x64488b042528	                mov rax, qword fs:[0x28]	       980	gui.c	FUNCTION_12
0xda1	        0x488945f8	                mov qword [rbp - 8], rax	       980	gui.c	FUNCTION_12
0xda5	            0x31c0	                            xor eax, eax	       980	gui.c	FUNCTION_12
0xda7	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	       981	gui.c	FUNCTION_12
0xdb2	    0x8b0500000000	            mov eax, dword [0x04000df8] 	       985	gui.c	FUNCTION_12	IF_1
0xdb8	            0x85c0	                           test eax, eax	       985	gui.c	FUNCTION_12	IF_1
0xdba	            0x750a	                           jne 0x4000e06	       985	gui.c	FUNCTION_12	IF_1
0xdbc	      0xb801000000	                              mov eax, 1	       986	gui.c	FUNCTION_12	IF_1
0xdc1	      0xe906010000	                           jmp 0x4000f0c	       986	gui.c	FUNCTION_12	IF_1
0xdc6	    0x488b05000000	            mov rax, qword [0x04000e0d] 	       988	gui.c	FUNCTION_12	IF_2
0xdcd	          0x4885c0	                           test rax, rax	       988	gui.c	FUNCTION_12	IF_2
0xdd0	     0xf8485000000	                            je 0x4000e9b	       988	gui.c	FUNCTION_12	IF_2
0xdd6	    0x488b05000000	            mov rax, qword [0x04000e1d] 	       988	gui.c	FUNCTION_12	IF_2
0xddd	           0xfb600	                   movzx eax, byte [rax]	       988	gui.c	FUNCTION_12	IF_2
0xde0	            0x84c0	                             test al, al	       988	gui.c	FUNCTION_12	IF_2
0xde2	            0x7477	                            je 0x4000e9b	       988	gui.c	FUNCTION_12	IF_2
0xde4	    0x488b05000000	            mov rax, qword [0x04000e2b] 	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0xdeb	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0xdf2	            0xeb45	                           jmp 0x4000e79	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0xdf4	    0x488db5b0feff	                  lea rsi, [rbp - 0x150]	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0xdfb	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0xe02	      0xb900000000	                              mov ecx, 0	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0xe07	      0xba40010000	                          mov edx, 0x140	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0xe0c	          0x4889c7	                            mov rdi, rax	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0xe0f	      0xe800000000	                          call 0x4000e54	       993	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_1
0xe14	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0xe1b	      0xbe00000000	                              mov esi, 0	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0xe20	          0x4889c7	                            mov rdi, rax	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0xe23	      0xe800000000	                          call 0x4000e68	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0xe28	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       994	gui.c	FUNCTION_12	IF_2	FOR_1	CALL_2
0xe2f	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	       995	gui.c	FUNCTION_12	IF_2	FOR_1	IF_3
0xe37	            0x7510	                           jne 0x4000e89	       995	gui.c	FUNCTION_12	IF_2	FOR_1	IF_3
0xe39	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0xe40	           0xfb600	                   movzx eax, byte [rax]	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0xe43	            0x84c0	                             test al, al	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0xe45	            0x75ad	                           jne 0x4000e34	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0xe47	            0xeb01	                           jmp 0x4000e8a	       990	gui.c	FUNCTION_12	IF_2	FOR_1
0xe49	              0x90	                                     nop	       996	gui.c	FUNCTION_12	IF_2	FOR_1	IF_3
0xe4a	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	       998	gui.c	FUNCTION_12	IF_2	IF_4
0xe52	            0x7507	                           jne 0x4000e9b	       998	gui.c	FUNCTION_12	IF_2	IF_4
0xe54	      0xb800000000	                              mov eax, 0	       999	gui.c	FUNCTION_12	IF_2	IF_4
0xe59	            0xeb71	                           jmp 0x4000f0c	       999	gui.c	FUNCTION_12	IF_2	IF_4
0xe5b	    0x488b05000000	            mov rax, qword [0x04000ea2] 	      1002	gui.c	FUNCTION_12	CALL_3
0xe62	          0x4889c7	                            mov rdi, rax	      1002	gui.c	FUNCTION_12	CALL_3
0xe65	      0xe800000000	                          call 0x4000eaa	      1002	gui.c	FUNCTION_12	CALL_3
0xe6a	    0x4883bda8feff	              cmp qword [rbp - 0x158], 0	      1005	gui.c	FUNCTION_12	IF_5
0xe72	            0x7445	                            je 0x4000ef9	      1005	gui.c	FUNCTION_12	IF_5
0xe74	    0x488b05000000	            mov rax, qword [0x04000ebb] 	      1005	gui.c	FUNCTION_12	IF_5
0xe7b	          0x4885c0	                           test rax, rax	      1005	gui.c	FUNCTION_12	IF_5
0xe7e	            0x7439	                            je 0x4000ef9	      1005	gui.c	FUNCTION_12	IF_5
0xe80	    0x488b15000000	            mov rdx, qword [0x04000ec7] 	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0xe87	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0xe8e	          0x4889d6	                            mov rsi, rdx	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0xe91	          0x4889c7	                            mov rdi, rax	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0xe94	      0xe800000000	                          call 0x4000ed9	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0xe99	            0x85c0	                           test eax, eax	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0xe9b	            0x741c	                            je 0x4000ef9	      1006	gui.c	FUNCTION_12	IF_5	CALL_4
0xe9d	    0x48c705000000	               mov qword [0x04000ee8], 0	      1008	gui.c	FUNCTION_12	IF_5
0xea8	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0xeaf	          0x4889c7	                            mov rdi, rax	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0xeb2	      0xe800000000	                          call 0x4000ef7	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0xeb7	            0xeb0e	                           jmp 0x4000f07	      1009	gui.c	FUNCTION_12	IF_5	CALL_5
0xeb9	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      1013	gui.c	FUNCTION_12	ELSE_1
0xec0	    0x488905000000	            mov qword [0x04000f07], rax 	      1013	gui.c	FUNCTION_12	ELSE_1
0xec7	      0xb801000000	                              mov eax, 1	      1022	gui.c	FUNCTION_12
0xecc	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1023	gui.c	FUNCTION_12
0xed0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1023	gui.c	FUNCTION_12
0xed9	            0x7405	                            je 0x4000f20	      1023	gui.c	FUNCTION_12
0xedb	      0xe800000000	                          call 0x4000f20	      1023	gui.c	FUNCTION_12
0xee0	              0xc9	                                   leave	      1023	gui.c	FUNCTION_12
0xee1	              0xc3	                                     ret	      1023	gui.c	FUNCTION_12
gui_set_cursor	ELSE,0:IF,0:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	11
0xee2	              0x55	                                push rbp	      1028	gui.c	FUNCTION_13
0xee3	          0x4889e5	                            mov rbp, rsp	      1028	gui.c	FUNCTION_13
0xee6	          0x897dfc	                mov dword [rbp - 4], edi	      1028	gui.c	FUNCTION_13
0xee9	          0x8975f8	                mov dword [rbp - 8], esi	      1028	gui.c	FUNCTION_13
0xeec	          0x8b45fc	                mov eax, dword [rbp - 4]	      1029	gui.c	FUNCTION_13
0xeef	    0x890500000000	            mov dword [0x04000f35], eax 	      1029	gui.c	FUNCTION_13
0xef5	          0x8b45f8	                mov eax, dword [rbp - 8]	      1030	gui.c	FUNCTION_13
0xef8	    0x890500000000	            mov dword [0x04000f3e], eax 	      1030	gui.c	FUNCTION_13
0xefe	              0x90	                                     nop	      1031	gui.c	FUNCTION_13
0xeff	              0x5d	                                 pop rbp	      1031	gui.c	FUNCTION_13
0xf00	              0xc3	                                     ret	      1031	gui.c	FUNCTION_13
gui_do_scrollbar	ELSE,2:IF,5:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	94
0x563b	              0x55	                                push rbp	      4381	gui.c	FUNCTION_66
0x563c	          0x4889e5	                            mov rbp, rsp	      4381	gui.c	FUNCTION_66
0x563f	        0x4883ec20	                           sub rsp, 0x20	      4381	gui.c	FUNCTION_66
0x5643	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4381	gui.c	FUNCTION_66
0x5647	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4381	gui.c	FUNCTION_66
0x564a	          0x8955e0	             mov dword [rbp - 0x20], edx	      4381	gui.c	FUNCTION_66
0x564d	    0x488b05000000	            mov rax, qword [0x04005694] 	      4382	gui.c	FUNCTION_66
0x5654	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      4382	gui.c	FUNCTION_66
0x565a	    0x488b05000000	            mov rax, qword [0x040056a1] 	      4382	gui.c	FUNCTION_66
0x5661	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4382	gui.c	FUNCTION_66
0x5667	            0x89c1	                            mov ecx, eax	      4382	gui.c	FUNCTION_66
0x5669	          0xc1e91f	                           shr ecx, 0x1f	      4382	gui.c	FUNCTION_66
0x566c	             0x1c8	                            add eax, ecx	      4382	gui.c	FUNCTION_66
0x566e	            0xd1f8	                              sar eax, 1	      4382	gui.c	FUNCTION_66
0x5670	             0x1d0	                            add eax, edx	      4382	gui.c	FUNCTION_66
0x5672	          0x8945f8	                mov dword [rbp - 8], eax	      4382	gui.c	FUNCTION_66
0x5675	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4383	gui.c	FUNCTION_66
0x5679	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      4383	gui.c	FUNCTION_66
0x567f	          0x3b45f8	                cmp eax, dword [rbp - 8]	      4384	gui.c	FUNCTION_66
0x5682	            0x7f22	                            jg 0x40056e6	      4384	gui.c	FUNCTION_66
0x5684	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4384	gui.c	FUNCTION_66
0x5688	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      4384	gui.c	FUNCTION_66
0x568e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4384	gui.c	FUNCTION_66
0x5692	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4384	gui.c	FUNCTION_66
0x5698	             0x1d0	                            add eax, edx	      4384	gui.c	FUNCTION_66
0x569a	          0x3b45f8	                cmp eax, dword [rbp - 8]	      4384	gui.c	FUNCTION_66
0x569d	            0x7c07	                            jl 0x40056e6	      4384	gui.c	FUNCTION_66
0x569f	      0xb801000000	                              mov eax, 1	      4384	gui.c	FUNCTION_66
0x56a4	            0xeb05	                           jmp 0x40056eb	      4384	gui.c	FUNCTION_66
0x56a6	      0xb800000000	                              mov eax, 0	      4384	gui.c	FUNCTION_66
0x56ab	          0x8945fc	                mov dword [rbp - 4], eax	      4383	gui.c	FUNCTION_66
0x56ae	    0x8b1500000000	            mov edx, dword [0x040056f4] 	      4388	gui.c	FUNCTION_66	IF_1
0x56b4	    0x8b0500000000	            mov eax, dword [0x040056fa] 	      4388	gui.c	FUNCTION_66	IF_1
0x56ba	            0x39c2	                            cmp edx, eax	      4388	gui.c	FUNCTION_66	IF_1
0x56bc	            0x7416	                            je 0x4005714	      4388	gui.c	FUNCTION_66	IF_1
0x56be	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4392	gui.c	FUNCTION_66	IF_1	IF_2
0x56c2	     0xf8596000000	                           jne 0x400579e	      4392	gui.c	FUNCTION_66	IF_1	IF_2
0x56c8	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4393	gui.c	FUNCTION_66	IF_1	IF_2
0x56cf	      0xe98a000000	                           jmp 0x400579e	      4393	gui.c	FUNCTION_66	IF_1	IF_2
0x56d4	          0x8b45f8	                mov eax, dword [rbp - 8]	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56d7	          0x4863d0	                         movsxd rdx, eax	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56da	    0x488b05000000	            mov rax, qword [0x04005721] 	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56e1	          0x4889c1	                            mov rcx, rax	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56e4	        0x48c1e93f	                           shr rcx, 0x3f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56e8	          0x4801c8	                            add rax, rcx	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56eb	          0x48d1f8	                              sar rax, 1	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56ee	          0x4839c2	                            cmp rdx, rax	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56f1	            0x7e2b	                           jle 0x400575e	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x56f3	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x56f7	            0x7511	                           jne 0x400574a	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x56f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x56fd	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x5703	            0x85c0	                           test eax, eax	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x5705	           0xf95c0	                                setne al	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x5708	            0xeb07	                           jmp 0x4005751	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x570a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x570e	           0xf94c0	                                 sete al	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x5711	            0x84c0	                             test al, al	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x5713	            0x7449	                            je 0x400579e	      4402	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x5715	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x571c	            0xeb40	                           jmp 0x400579e	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x571e	        0x837de401	               cmp dword [rbp - 0x1c], 1	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5722	            0x7528	                           jne 0x400578c	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5724	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5728	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x572e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5732	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5738	             0x1d0	                            add eax, edx	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x573a	          0x4863d0	                         movsxd rdx, eax	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x573d	    0x488b05000000	            mov rax, qword [0x04005784] 	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5744	          0x4839c2	                            cmp rdx, rax	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5747	           0xf95c0	                                setne al	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x574a	            0xeb07	                           jmp 0x4005793	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x574c	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5750	           0xf94c0	                                 sete al	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5753	            0x84c0	                             test al, al	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5755	            0x7407	                            je 0x400579e	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x5757	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4409	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x575e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4412	gui.c	FUNCTION_66	CALL_1
0x5761	          0x4863d0	                         movsxd rdx, eax	      4412	gui.c	FUNCTION_66	CALL_1
0x5764	          0x4889d0	                            mov rax, rdx	      4412	gui.c	FUNCTION_66	CALL_1
0x5767	        0x48c1e002	                              shl rax, 2	      4412	gui.c	FUNCTION_66	CALL_1
0x576b	          0x4801d0	                            add rax, rdx	      4412	gui.c	FUNCTION_66	CALL_1
0x576e	        0x48c1e004	                              shl rax, 4	      4412	gui.c	FUNCTION_66	CALL_1
0x5772	    0x488d90901800	                 lea rdx, [rax + 0x1890]	      4412	gui.c	FUNCTION_66	CALL_1
0x5779	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4412	gui.c	FUNCTION_66	CALL_1
0x577d	          0x4801c2	                            add rdx, rax	      4412	gui.c	FUNCTION_66	CALL_1
0x5780	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4412	gui.c	FUNCTION_66	CALL_1
0x5783	            0x89c6	                            mov esi, eax	      4412	gui.c	FUNCTION_66	CALL_1
0x5785	          0x4889d7	                            mov rdi, rdx	      4412	gui.c	FUNCTION_66	CALL_1
0x5788	      0xe800000000	                          call 0x40057cd	      4412	gui.c	FUNCTION_66	CALL_1
0x578d	              0x90	                                     nop	      4413	gui.c	FUNCTION_66
0x578e	              0xc9	                                   leave	      4413	gui.c	FUNCTION_66
0x578f	              0xc3	                                     ret	      4413	gui.c	FUNCTION_66
gui_check_pos	ELSE,0:IF,3:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	28
0xf01	              0x55	                                push rbp	      1038	gui.c	FUNCTION_14
0xf02	          0x4889e5	                            mov rbp, rsp	      1038	gui.c	FUNCTION_14
0xf05	    0x8b1500000000	            mov edx, dword [0x04000f4b] 	      1039	gui.c	FUNCTION_14	IF_1
0xf0b	    0x8b0500000000	            mov eax, dword [0x04000f51] 	      1039	gui.c	FUNCTION_14	IF_1
0xf11	            0x39c2	                            cmp edx, eax	      1039	gui.c	FUNCTION_14	IF_1
0xf13	            0x7c0f	                            jl 0x4000f64	      1039	gui.c	FUNCTION_14	IF_1
0xf15	    0x8b0500000000	            mov eax, dword [0x04000f5b] 	      1040	gui.c	FUNCTION_14	IF_1
0xf1b	          0x83e801	                              sub eax, 1	      1040	gui.c	FUNCTION_14	IF_1
0xf1e	    0x890500000000	            mov dword [0x04000f64], eax 	      1040	gui.c	FUNCTION_14	IF_1
0xf24	    0x8b1500000000	            mov edx, dword [0x04000f6a] 	      1041	gui.c	FUNCTION_14	IF_2
0xf2a	    0x8b0500000000	            mov eax, dword [0x04000f70] 	      1041	gui.c	FUNCTION_14	IF_2
0xf30	            0x39c2	                            cmp edx, eax	      1041	gui.c	FUNCTION_14	IF_2
0xf32	            0x7c0f	                            jl 0x4000f83	      1041	gui.c	FUNCTION_14	IF_2
0xf34	    0x8b0500000000	            mov eax, dword [0x04000f7a] 	      1042	gui.c	FUNCTION_14	IF_2
0xf3a	          0x83e801	                              sub eax, 1	      1042	gui.c	FUNCTION_14	IF_2
0xf3d	    0x890500000000	            mov dword [0x04000f83], eax 	      1042	gui.c	FUNCTION_14	IF_2
0xf43	    0x8b1500000000	            mov edx, dword [0x04000f89] 	      1043	gui.c	FUNCTION_14	IF_3
0xf49	    0x8b0500000000	            mov eax, dword [0x04000f8f] 	      1043	gui.c	FUNCTION_14	IF_3
0xf4f	            0x39c2	                            cmp edx, eax	      1043	gui.c	FUNCTION_14	IF_3
0xf51	            0x7d10	                           jge 0x4000fa3	      1043	gui.c	FUNCTION_14	IF_3
0xf53	    0x8b1500000000	            mov edx, dword [0x04000f99] 	      1043	gui.c	FUNCTION_14	IF_3
0xf59	    0x8b0500000000	            mov eax, dword [0x04000f9f] 	      1043	gui.c	FUNCTION_14	IF_3
0xf5f	            0x39c2	                            cmp edx, eax	      1043	gui.c	FUNCTION_14	IF_3
0xf61	            0x7c07	                            jl 0x4000faa	      1043	gui.c	FUNCTION_14	IF_3
0xf63	    0xc60500000000	                mov byte [0x04000faa], 0	      1044	gui.c	FUNCTION_14	IF_3
0xf6a	              0x90	                                     nop	      1045	gui.c	FUNCTION_14
0xf6b	              0x5d	                                 pop rbp	      1045	gui.c	FUNCTION_14
0xf6c	              0xc3	                                     ret	      1045	gui.c	FUNCTION_14
gui_get_base_height	ELSE,0:IF,5:CALL,4:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	13
0x182c	              0x55	                                push rbp	      1425	gui.c	FUNCTION_19
0x182d	          0x4889e5	                            mov rbp, rsp	      1425	gui.c	FUNCTION_19
0x1830	    0x8b0500000000	            mov eax, dword [0x04001876] 	      1428	gui.c	FUNCTION_19
0x1836	             0x1c0	                            add eax, eax	      1428	gui.c	FUNCTION_19
0x1838	          0x8945fc	                mov dword [rbp - 4], eax	      1428	gui.c	FUNCTION_19
0x183b	    0x8b0500000000	            mov eax, dword [0x04001881] 	      1429	gui.c	FUNCTION_19	IF_1
0x1841	            0x85c0	                           test eax, eax	      1429	gui.c	FUNCTION_19	IF_1
0x1843	            0x7409	                            je 0x400188e	      1429	gui.c	FUNCTION_19	IF_1
0x1845	    0x8b0500000000	            mov eax, dword [0x0400188b] 	      1430	gui.c	FUNCTION_19	IF_1
0x184b	           0x145fc	                add dword [rbp - 4], eax	      1430	gui.c	FUNCTION_19	IF_1
0x184e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1461	gui.c	FUNCTION_19
0x1851	              0x5d	                                 pop rbp	      1462	gui.c	FUNCTION_19
0x1852	              0xc3	                                     ret	      1462	gui.c	FUNCTION_19
scroll_line_len	ELSE,0:IF,2:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	41
0x5a26	              0x55	                                push rbp	      4534	gui.c	FUNCTION_68
0x5a27	          0x4889e5	                            mov rbp, rsp	      4534	gui.c	FUNCTION_68
0x5a2a	        0x4883ec20	                           sub rsp, 0x20	      4534	gui.c	FUNCTION_68
0x5a2e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4534	gui.c	FUNCTION_68
0x5a32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4539	gui.c	FUNCTION_68	CALL_1
0x5a36	          0x4889c7	                            mov rdi, rax	      4539	gui.c	FUNCTION_68	CALL_1
0x5a39	      0xe800000000	                          call 0x4005a7e	      4539	gui.c	FUNCTION_68	CALL_1
0x5a3e	        0x488945f8	                mov qword [rbp - 8], rax	      4539	gui.c	FUNCTION_68	CALL_1
0x5a42	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4540	gui.c	FUNCTION_68
0x5a49	        0x488b45f8	                mov rax, qword [rbp - 8]	      4541	gui.c	FUNCTION_68	IF_1
0x5a4d	           0xfb600	                   movzx eax, byte [rax]	      4541	gui.c	FUNCTION_68	IF_1
0x5a50	            0x84c0	                             test al, al	      4541	gui.c	FUNCTION_68	IF_1
0x5a52	            0x744f	                            je 0x4005ae3	      4541	gui.c	FUNCTION_68	IF_1
0x5a54	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x5a57	        0x488b45f8	                mov rax, qword [rbp - 8]	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x5a5b	            0x89d6	                            mov esi, edx	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x5a5d	          0x4889c7	                            mov rdi, rax	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x5a60	      0xe800000000	                          call 0x4005aa5	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x5a65	          0x8945f4	              mov dword [rbp - 0xc], eax	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x5a68	    0x8b0500000000	            mov eax, dword [0x04005aae] 	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a6e	            0x85c0	                           test eax, eax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a70	            0x7412	                            je 0x4005ac4	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a72	    0x488b05000000	            mov rax, qword [0x04005ab9] 	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a79	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a7d	          0x4889d7	                            mov rdi, rdx	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a80	            0xffd0	                                call rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a82	            0xeb05	                           jmp 0x4005ac9	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a84	      0xb801000000	                              mov eax, 1	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a89	            0x4898	                                    cdqe	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a8b	        0x480145f8	                add qword [rbp - 8], rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x5a8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x5a93	           0xfb600	                   movzx eax, byte [rax]	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x5a96	            0x84c0	                             test al, al	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x5a98	            0x7408	                            je 0x4005ae2	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x5a9a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4548	gui.c	FUNCTION_68	IF_1	FOR_1
0x5a9d	           0x145f0	             add dword [rbp - 0x10], eax	      4548	gui.c	FUNCTION_68	IF_1	FOR_1
0x5aa0	            0xebb2	                           jmp 0x4005a94	      4549	gui.c	FUNCTION_68	IF_1	FOR_1
0x5aa2	              0x90	                                     nop	      4547	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x5aa3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4550	gui.c	FUNCTION_68
0x5aa6	              0xc9	                                   leave	      4551	gui.c	FUNCTION_68
0x5aa7	              0xc3	                                     ret	      4551	gui.c	FUNCTION_68
gui_get_color	ELSE,0:IF,2:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	29
0x6034	              0x55	                                push rbp	      4763	gui.c	FUNCTION_75
0x6035	          0x4889e5	                            mov rbp, rsp	      4763	gui.c	FUNCTION_75
0x6038	        0x4883ec20	                           sub rsp, 0x20	      4763	gui.c	FUNCTION_75
0x603c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4763	gui.c	FUNCTION_75
0x6040	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4766	gui.c	FUNCTION_75	IF_1
0x6044	           0xfb600	                   movzx eax, byte [rax]	      4766	gui.c	FUNCTION_75	IF_1
0x6047	            0x84c0	                             test al, al	      4766	gui.c	FUNCTION_75	IF_1
0x6049	            0x7509	                           jne 0x4006094	      4766	gui.c	FUNCTION_75	IF_1
0x604b	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      4767	gui.c	FUNCTION_75	IF_1
0x6052	            0xeb44	                           jmp 0x40060d8	      4767	gui.c	FUNCTION_75	IF_1
0x6054	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4768	gui.c	FUNCTION_75	CALL_1
0x6058	          0x4889c7	                            mov rdi, rax	      4768	gui.c	FUNCTION_75	CALL_1
0x605b	      0xe800000000	                          call 0x40060a0	      4768	gui.c	FUNCTION_75	CALL_1
0x6060	        0x488945f8	                mov qword [rbp - 8], rax	      4768	gui.c	FUNCTION_75	CALL_1
0x6064	    0x48817df899d4	 cmp qword [rbp - 8], 0xffffffffffffd499	      4770	gui.c	FUNCTION_75	IF_2
0x606c	            0x7526	                           jne 0x40060d4	      4770	gui.c	FUNCTION_75	IF_2
0x606e	    0x8b0500000000	            mov eax, dword [0x040060b4] 	      4772	gui.c	FUNCTION_75	IF_2
0x6074	            0x85c0	                           test eax, eax	      4772	gui.c	FUNCTION_75	IF_2
0x6076	            0x741c	                            je 0x40060d4	      4772	gui.c	FUNCTION_75	IF_2
0x6078	      0xbf00000000	                              mov edi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x607d	      0xe800000000	                          call 0x40060c2	      4775	gui.c	FUNCTION_75	CALL_3
0x6082	          0x4889c2	                            mov rdx, rax	      4775	gui.c	FUNCTION_75	CALL_3
0x6085	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4775	gui.c	FUNCTION_75	CALL_3
0x6089	          0x4889c6	                            mov rsi, rax	      4775	gui.c	FUNCTION_75	CALL_3
0x608c	          0x4889d7	                            mov rdi, rdx	      4775	gui.c	FUNCTION_75	CALL_3
0x608f	      0xe800000000	                          call 0x40060d4	      4775	gui.c	FUNCTION_75	CALL_3
0x6094	        0x488b45f8	                mov rax, qword [rbp - 8]	      4776	gui.c	FUNCTION_75
0x6098	              0xc9	                                   leave	      4777	gui.c	FUNCTION_75
0x6099	              0xc3	                                     ret	      4777	gui.c	FUNCTION_75
gui_may_resize_shell	ELSE,0:IF,1:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	13
0x19ea	              0x55	                                push rbp	      1546	gui.c	FUNCTION_21
0x19eb	          0x4889e5	                            mov rbp, rsp	      1546	gui.c	FUNCTION_21
0x19ee	    0x8b0500000000	            mov eax, dword [0x04001a34] 	      1547	gui.c	FUNCTION_21	IF_1
0x19f4	            0x85c0	                           test eax, eax	      1547	gui.c	FUNCTION_21	IF_1
0x19f6	            0x7415	                            je 0x4001a4d	      1547	gui.c	FUNCTION_21	IF_1
0x19f8	    0x8b1500000000	            mov edx, dword [0x04001a3e] 	      1550	gui.c	FUNCTION_21	CALL_1
0x19fe	    0x8b0500000000	            mov eax, dword [0x04001a44] 	      1550	gui.c	FUNCTION_21	CALL_1
0x1a04	            0x89d6	                            mov esi, edx	      1550	gui.c	FUNCTION_21	CALL_1
0x1a06	            0x89c7	                            mov edi, eax	      1550	gui.c	FUNCTION_21	CALL_1
0x1a08	      0xe800000000	                          call 0x4001a4d	      1550	gui.c	FUNCTION_21	CALL_1
0x1a0d	              0x90	                                     nop	      1551	gui.c	FUNCTION_21
0x1a0e	              0x5d	                                 pop rbp	      1551	gui.c	FUNCTION_21
0x1a0f	              0xc3	                                     ret	      1551	gui.c	FUNCTION_21
gui_outstr_nowrap	ELSE,20:IF,54:CALL,28:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	246
0x29e3	              0x55	                                push rbp	      2234	gui.c	FUNCTION_39
0x29e4	          0x4889e5	                            mov rbp, rsp	      2234	gui.c	FUNCTION_39
0x29e7	        0x4883ec70	                           sub rsp, 0x70	      2234	gui.c	FUNCTION_39
0x29eb	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2234	gui.c	FUNCTION_39
0x29ef	          0x8975b4	             mov dword [rbp - 0x4c], esi	      2234	gui.c	FUNCTION_39
0x29f2	          0x8955b0	             mov dword [rbp - 0x50], edx	      2234	gui.c	FUNCTION_39
0x29f5	        0x48894da8	             mov qword [rbp - 0x58], rcx	      2234	gui.c	FUNCTION_39
0x29f9	        0x4c8945a0	              mov qword [rbp - 0x60], r8	      2234	gui.c	FUNCTION_39
0x29fd	        0x44894d9c	             mov dword [rbp - 0x64], r9d	      2234	gui.c	FUNCTION_39
0x2a01	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2249	gui.c	FUNCTION_39
0x2a09	    0x8b0500000000	            mov eax, dword [0x04002a4f] 	      2251	gui.c	FUNCTION_39
0x2a0f	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2251	gui.c	FUNCTION_39
0x2a12	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      2253	gui.c	FUNCTION_39
0x2a19	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2255	gui.c	FUNCTION_39
0x2a20	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2259	gui.c	FUNCTION_39	IF_1
0x2a24	            0x790f	                           jns 0x4002a75	      2259	gui.c	FUNCTION_39	IF_1
0x2a26	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2260	gui.c	FUNCTION_39	CALL_1
0x2a2a	          0x4889c7	                            mov rdi, rax	      2260	gui.c	FUNCTION_39	CALL_1
0x2a2d	      0xe800000000	                          call 0x4002a72	      2260	gui.c	FUNCTION_39	CALL_1
0x2a32	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2260	gui.c	FUNCTION_39	CALL_1
0x2a35	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2261	gui.c	FUNCTION_39	IF_2
0x2a39	            0x750a	                           jne 0x4002a85	      2261	gui.c	FUNCTION_39	IF_2
0x2a3b	      0xb801000000	                              mov eax, 1	      2262	gui.c	FUNCTION_39	IF_2
0x2a40	      0xe926030000	                           jmp 0x4002dab	      2262	gui.c	FUNCTION_39	IF_2
0x2a45	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2265	gui.c	FUNCTION_39	IF_3
0x2a49	           0xfb600	                   movzx eax, byte [rax]	      2265	gui.c	FUNCTION_39	IF_3
0x2a4c	            0x3c01	                               cmp al, 1	      2265	gui.c	FUNCTION_39	IF_3
0x2a4e	            0x740b	                            je 0x4002a9b	      2265	gui.c	FUNCTION_39	IF_3
0x2a50	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2267	gui.c	FUNCTION_39	IF_3
0x2a54	           0xfb600	                   movzx eax, byte [rax]	      2267	gui.c	FUNCTION_39	IF_3
0x2a57	            0x3c02	                               cmp al, 2	      2267	gui.c	FUNCTION_39	IF_3
0x2a59	            0x7542	                           jne 0x4002add	      2267	gui.c	FUNCTION_39	IF_3
0x2a5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2272	gui.c	FUNCTION_39	IF_3	IF_4
0x2a5f	           0xfb600	                   movzx eax, byte [rax]	      2272	gui.c	FUNCTION_39	IF_3	IF_4
0x2a62	            0x3c02	                               cmp al, 2	      2272	gui.c	FUNCTION_39	IF_3	IF_4
0x2a64	            0x7507	                           jne 0x4002aad	      2272	gui.c	FUNCTION_39	IF_3	IF_4
0x2a66	    0xc745cc010000	               mov dword [rbp - 0x34], 1	      2273	gui.c	FUNCTION_39	IF_3	IF_4
0x2a6d	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2276	gui.c	FUNCTION_39	IF_3
0x2a75	        0x837db401	               cmp dword [rbp - 0x4c], 1	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x2a79	            0x750a	                           jne 0x4002ac5	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x2a7b	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x2a7f	            0x7e04	                           jle 0x4002ac5	      2277	gui.c	FUNCTION_39	IF_3	IF_5
0x2a81	        0x836dc401	               sub dword [rbp - 0x3c], 1	      2278	gui.c	FUNCTION_39	IF_3	IF_5
0x2a85	    0xc745b4020000	               mov dword [rbp - 0x4c], 2	      2279	gui.c	FUNCTION_39	IF_3
0x2a8c	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      2280	gui.c	FUNCTION_39	IF_3
0x2a93	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2281	gui.c	FUNCTION_39	IF_3
0x2a9b	            0xeb4c	                           jmp 0x4002b29	      2281	gui.c	FUNCTION_39	IF_3
0x2a9d	    0x8b0500000000	            mov eax, dword [0x04002ae3] 	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x2aa3	      0x3dff000000	                           cmp eax, 0xff	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x2aa8	            0x7e33	                           jle 0x4002b1d	      2285	gui.c	FUNCTION_39	ELSE_1	IF_6
0x2aaa	    0x8b0500000000	            mov eax, dword [0x04002af0] 	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x2ab0	            0x89c7	                            mov edi, eax	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x2ab2	      0xe800000000	                          call 0x4002af7	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x2ab7	        0x488945f0	             mov qword [rbp - 0x10], rax	      2287	gui.c	FUNCTION_39	ELSE_1	IF_6	CALL_2
0x2abb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x2ac0	            0x750a	                           jne 0x4002b0c	      2288	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x2ac2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2289	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x2aca	            0xeb1d	                           jmp 0x4002b29	      2289	gui.c	FUNCTION_39	ELSE_1	IF_6	IF_7
0x2acc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x2ad0	           0xfb700	                   movzx eax, word [rax]	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x2ad3	        0x480fbfc0	                           movsx rax, ax	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x2ad7	        0x488945d0	             mov qword [rbp - 0x30], rax	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x2adb	            0xeb0c	                           jmp 0x4002b29	      2291	gui.c	FUNCTION_39	ELSE_1	IF_6	ELSE_2
0x2add	    0x8b0500000000	            mov eax, dword [0x04002b23] 	      2294	gui.c	FUNCTION_39	ELSE_3
0x2ae3	            0x4898	                                    cdqe	      2294	gui.c	FUNCTION_39	ELSE_3
0x2ae5	        0x488945d0	             mov qword [rbp - 0x30], rax	      2294	gui.c	FUNCTION_39	ELSE_3
0x2ae9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2295	gui.c	FUNCTION_39
0x2aed	        0x488945f8	                mov qword [rbp - 8], rax	      2295	gui.c	FUNCTION_39
0x2af1	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      2360	gui.c	FUNCTION_39
0x2af8	    0x488b05000000	            mov rax, qword [0x04002b3f] 	      2363	gui.c	FUNCTION_39
0x2aff	        0x488945e0	             mov qword [rbp - 0x20], rax	      2363	gui.c	FUNCTION_39
0x2b03	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2364	gui.c	FUNCTION_39	IF_20
0x2b06	          0x83e004	                              and eax, 4	      2364	gui.c	FUNCTION_39	IF_20
0x2b09	            0x85c0	                           test eax, eax	      2364	gui.c	FUNCTION_39	IF_20
0x2b0b	            0x7428	                            je 0x4002b75	      2364	gui.c	FUNCTION_39	IF_20
0x2b0d	    0x8b0500000000	            mov eax, dword [0x04002b53] 	      2364	gui.c	FUNCTION_39	IF_20
0x2b13	            0x85c0	                           test eax, eax	      2364	gui.c	FUNCTION_39	IF_20
0x2b15	            0x741e	                            je 0x4002b75	      2364	gui.c	FUNCTION_39	IF_20
0x2b17	        0x834dc020	             or dword [rbp - 0x40], 0x20	      2366	gui.c	FUNCTION_39	IF_20
0x2b1b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2367	gui.c	FUNCTION_39	IF_20
0x2b1f	        0x488945d8	             mov qword [rbp - 0x28], rax	      2367	gui.c	FUNCTION_39	IF_20
0x2b23	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2368	gui.c	FUNCTION_39	IF_20
0x2b27	        0x488945e0	             mov qword [rbp - 0x20], rax	      2368	gui.c	FUNCTION_39	IF_20
0x2b2b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2369	gui.c	FUNCTION_39	IF_20
0x2b2f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2369	gui.c	FUNCTION_39	IF_20
0x2b33	            0xeb7c	                           jmp 0x4002bf1	      2369	gui.c	FUNCTION_39	IF_20
0x2b35	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2371	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b3a	            0x7462	                            je 0x4002bde	      2371	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2373	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b40	        0x488b4008	                mov rax, qword [rax + 8]	      2373	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b44	        0x488945d8	             mov qword [rbp - 0x28], rax	      2373	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b48	    0x48817dd899d4	cmp qword [rbp - 0x28], 0xffffffffffffd499	      2374	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x2b50	            0x750b	                           jne 0x4002b9d	      2374	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x2b52	    0x488b05000000	            mov rax, qword [0x04002b99] 	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x2b59	        0x488945d8	             mov qword [rbp - 0x28], rax	      2375	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_22
0x2b5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2376	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b61	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2376	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b65	        0x488945e0	             mov qword [rbp - 0x20], rax	      2376	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b69	    0x48817de099d4	cmp qword [rbp - 0x20], 0xffffffffffffd499	      2377	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x2b71	            0x750b	                           jne 0x4002bbe	      2377	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x2b73	    0x488b05000000	            mov rax, qword [0x04002bba] 	      2378	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x2b7a	        0x488945e0	             mov qword [rbp - 0x20], rax	      2378	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_23
0x2b7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b82	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b86	        0x488945e8	             mov qword [rbp - 0x18], rax	      2379	gui.c	FUNCTION_39	ELSE_15	IF_21
0x2b8a	    0x48817de899d4	cmp qword [rbp - 0x18], 0xffffffffffffd499	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x2b92	            0x751d	                           jne 0x4002bf1	      2380	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x2b94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x2b98	        0x488945e8	             mov qword [rbp - 0x18], rax	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x2b9c	            0xeb13	                           jmp 0x4002bf1	      2381	gui.c	FUNCTION_39	ELSE_15	IF_21	IF_24
0x2b9e	    0x488b05000000	            mov rax, qword [0x04002be5] 	      2385	gui.c	FUNCTION_39	ELSE_16
0x2ba5	        0x488945d8	             mov qword [rbp - 0x28], rax	      2385	gui.c	FUNCTION_39	ELSE_16
0x2ba9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2386	gui.c	FUNCTION_39	ELSE_16
0x2bad	        0x488945e8	             mov qword [rbp - 0x18], rax	      2386	gui.c	FUNCTION_39	ELSE_16
0x2bb1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2389	gui.c	FUNCTION_39	IF_25
0x2bb5	          0x83e021	                           and eax, 0x21	      2389	gui.c	FUNCTION_39	IF_25
0x2bb8	          0x4885c0	                           test rax, rax	      2389	gui.c	FUNCTION_39	IF_25
0x2bbb	            0x741a	                            je 0x4002c17	      2389	gui.c	FUNCTION_39	IF_25
0x2bbd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x2bc1	          0x4889c7	                            mov rdi, rax	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x2bc4	      0xe800000000	                          call 0x4002c09	      2394	gui.c	FUNCTION_39	IF_25	CALL_6
0x2bc9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x2bcd	          0x4889c7	                            mov rdi, rax	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x2bd0	      0xe800000000	                          call 0x4002c15	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x2bd5	            0xeb18	                           jmp 0x4002c2f	      2395	gui.c	FUNCTION_39	IF_25	CALL_7
0x2bd7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x2bdb	          0x4889c7	                            mov rdi, rax	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x2bde	      0xe800000000	                          call 0x4002c23	      2403	gui.c	FUNCTION_39	ELSE_17	CALL_9
0x2be3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x2be7	          0x4889c7	                            mov rdi, rax	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x2bea	      0xe800000000	                          call 0x4002c2f	      2404	gui.c	FUNCTION_39	ELSE_17	CALL_10
0x2bef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2407	gui.c	FUNCTION_39	CALL_11
0x2bf3	          0x4889c7	                            mov rdi, rax	      2407	gui.c	FUNCTION_39	CALL_11
0x2bf6	      0xe800000000	                          call 0x4002c3b	      2407	gui.c	FUNCTION_39	CALL_11
0x2bfb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2410	gui.c	FUNCTION_39	IF_26
0x2bfe	          0x83e010	                           and eax, 0x10	      2410	gui.c	FUNCTION_39	IF_26
0x2c01	            0x85c0	                           test eax, eax	      2410	gui.c	FUNCTION_39	IF_26
0x2c03	            0x7515	                           jne 0x4002c5a	      2410	gui.c	FUNCTION_39	IF_26
0x2c05	    0x8b1500000000	            mov edx, dword [0x04002c4b] 	      2411	gui.c	FUNCTION_39	CALL_12
0x2c0b	    0x8b0500000000	            mov eax, dword [0x04002c51] 	      2411	gui.c	FUNCTION_39	CALL_12
0x2c11	            0x89d6	                            mov esi, edx	      2411	gui.c	FUNCTION_39	CALL_12
0x2c13	            0x89c7	                            mov edi, eax	      2411	gui.c	FUNCTION_39	CALL_12
0x2c15	      0xe800000000	                          call 0x4002c5a	      2411	gui.c	FUNCTION_39	CALL_12
0x2c1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2415	gui.c	FUNCTION_39	IF_27
0x2c1e	          0x83e022	                           and eax, 0x22	      2415	gui.c	FUNCTION_39	IF_27
0x2c21	          0x4885c0	                           test rax, rax	      2415	gui.c	FUNCTION_39	IF_27
0x2c24	            0x7404	                            je 0x4002c6a	      2415	gui.c	FUNCTION_39	IF_27
0x2c26	        0x834dc002	                or dword [rbp - 0x40], 2	      2416	gui.c	FUNCTION_39	IF_27
0x2c2a	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      2423	gui.c	FUNCTION_39	IF_28
0x2c2e	            0x7420	                            je 0x4002c90	      2423	gui.c	FUNCTION_39	IF_28
0x2c30	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2423	gui.c	FUNCTION_39	IF_28
0x2c33	          0x83e002	                              and eax, 2	      2423	gui.c	FUNCTION_39	IF_28
0x2c36	            0x85c0	                           test eax, eax	      2423	gui.c	FUNCTION_39	IF_28
0x2c38	            0x750c	                           jne 0x4002c86	      2423	gui.c	FUNCTION_39	IF_28
0x2c3a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2423	gui.c	FUNCTION_39	IF_28
0x2c3e	          0x83e004	                              and eax, 4	      2423	gui.c	FUNCTION_39	IF_28
0x2c41	          0x4885c0	                           test rax, rax	      2423	gui.c	FUNCTION_39	IF_28
0x2c44	            0x740a	                            je 0x4002c90	      2423	gui.c	FUNCTION_39	IF_28
0x2c46	      0xb800000000	                              mov eax, 0	      2424	gui.c	FUNCTION_39	IF_28
0x2c4b	      0xe91b010000	                           jmp 0x4002dab	      2424	gui.c	FUNCTION_39	IF_28
0x2c50	        0x488b45f8	                mov rax, qword [rbp - 8]	      2429	gui.c	FUNCTION_39	IF_29
0x2c54	          0x83e004	                              and eax, 4	      2429	gui.c	FUNCTION_39	IF_29
0x2c57	          0x4885c0	                           test rax, rax	      2429	gui.c	FUNCTION_39	IF_29
0x2c5a	            0x7404	                            je 0x4002ca0	      2429	gui.c	FUNCTION_39	IF_29
0x2c5c	        0x834dc010	             or dword [rbp - 0x40], 0x10	      2430	gui.c	FUNCTION_39	IF_29
0x2c60	        0x488b45f8	                mov rax, qword [rbp - 8]	      2433	gui.c	FUNCTION_39	IF_30
0x2c64	          0x83e008	                              and eax, 8	      2433	gui.c	FUNCTION_39	IF_30
0x2c67	          0x4885c0	                           test rax, rax	      2433	gui.c	FUNCTION_39	IF_30
0x2c6a	            0x7404	                            je 0x4002cb0	      2433	gui.c	FUNCTION_39	IF_30
0x2c6c	        0x834dc004	                or dword [rbp - 0x40], 4	      2434	gui.c	FUNCTION_39	IF_30
0x2c70	        0x488b45f8	                mov rax, qword [rbp - 8]	      2442	gui.c	FUNCTION_39	IF_32
0x2c74	          0x83e010	                           and eax, 0x10	      2442	gui.c	FUNCTION_39	IF_32
0x2c77	          0x4885c0	                           test rax, rax	      2442	gui.c	FUNCTION_39	IF_32
0x2c7a	            0x7404	                            je 0x4002cc0	      2442	gui.c	FUNCTION_39	IF_32
0x2c7c	        0x834dc008	                or dword [rbp - 0x40], 8	      2443	gui.c	FUNCTION_39	IF_32
0x2c80	        0x488b45f8	                mov rax, qword [rbp - 8]	      2446	gui.c	FUNCTION_39	IF_33
0x2c84	      0x2580000000	                           and eax, 0x80	      2446	gui.c	FUNCTION_39	IF_33
0x2c89	          0x4885c0	                           test rax, rax	      2446	gui.c	FUNCTION_39	IF_33
0x2c8c	            0x7404	                            je 0x4002cd2	      2446	gui.c	FUNCTION_39	IF_33
0x2c8e	        0x834dc040	            or dword [rbp - 0x40], 0x40 	      2447	gui.c	FUNCTION_39	IF_33
0x2c92	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2450	gui.c	FUNCTION_39	IF_34
0x2c95	          0x83e008	                              and eax, 8	      2450	gui.c	FUNCTION_39	IF_34
0x2c98	            0x85c0	                           test eax, eax	      2450	gui.c	FUNCTION_39	IF_34
0x2c9a	            0x7404	                            je 0x4002ce0	      2450	gui.c	FUNCTION_39	IF_34
0x2c9c	        0x834dc001	                or dword [rbp - 0x40], 1	      2451	gui.c	FUNCTION_39	IF_34
0x2ca0	    0x8b0500000000	            mov eax, dword [0x04002ce6] 	      2458	gui.c	FUNCTION_39	CALL_13
0x2ca6	          0x8b7dc0	             mov edi, dword [rbp - 0x40]	      2458	gui.c	FUNCTION_39	CALL_13
0x2ca9	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      2458	gui.c	FUNCTION_39	CALL_13
0x2cac	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2458	gui.c	FUNCTION_39	CALL_13
0x2cb0	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      2458	gui.c	FUNCTION_39	CALL_13
0x2cb3	          0x4189f8	                            mov r8d, edi	      2458	gui.c	FUNCTION_39	CALL_13
0x2cb6	            0x89c7	                            mov edi, eax	      2458	gui.c	FUNCTION_39	CALL_13
0x2cb8	      0xe800000000	                          call 0x4002cfd	      2458	gui.c	FUNCTION_39	CALL_13
0x2cbd	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2458	gui.c	FUNCTION_39	CALL_13
0x2cc0	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2593	gui.c	FUNCTION_39	IF_49
0x2cc3	          0x83e00c	                            and eax, 0xc	      2593	gui.c	FUNCTION_39	IF_49
0x2cc6	            0x85c0	                           test eax, eax	      2593	gui.c	FUNCTION_39	IF_49
0x2cc8	            0x750e	                           jne 0x4002d18	      2593	gui.c	FUNCTION_39	IF_49
0x2cca	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2594	gui.c	FUNCTION_39	IF_49
0x2ccd	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2594	gui.c	FUNCTION_39	IF_49
0x2cd0	             0x1d0	                            add eax, edx	      2594	gui.c	FUNCTION_39	IF_49
0x2cd2	    0x890500000000	            mov dword [0x04002d18], eax 	      2594	gui.c	FUNCTION_39	IF_49
0x2cd8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2597	gui.c	FUNCTION_39	IF_50
0x2cdb	          0x83e010	                           and eax, 0x10	      2597	gui.c	FUNCTION_39	IF_50
0x2cde	            0x85c0	                           test eax, eax	      2597	gui.c	FUNCTION_39	IF_50
0x2ce0	            0x7415	                            je 0x4002d37	      2597	gui.c	FUNCTION_39	IF_50
0x2ce2	    0x8b0500000000	            mov eax, dword [0x04002d28] 	      2598	gui.c	FUNCTION_39	CALL_26
0x2ce8	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2598	gui.c	FUNCTION_39	CALL_26
0x2ceb	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2598	gui.c	FUNCTION_39	CALL_26
0x2cee	            0x89ce	                            mov esi, ecx	      2598	gui.c	FUNCTION_39	CALL_26
0x2cf0	            0x89c7	                            mov edi, eax	      2598	gui.c	FUNCTION_39	CALL_26
0x2cf2	      0xe800000000	                          call 0x4002d37	      2598	gui.c	FUNCTION_39	CALL_26
0x2cf7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2600	gui.c	FUNCTION_39	IF_51
0x2cfa	          0x83e00c	                            and eax, 0xc	      2600	gui.c	FUNCTION_39	IF_51
0x2cfd	            0x85c0	                           test eax, eax	      2600	gui.c	FUNCTION_39	IF_51
0x2cff	            0x7534	                           jne 0x4002d75	      2600	gui.c	FUNCTION_39	IF_51
0x2d01	    0x8b1500000000	            mov edx, dword [0x04002d47] 	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x2d07	    0x8b0500000000	            mov eax, dword [0x04002d4d] 	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x2d0d	            0x39c2	                            cmp edx, eax	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x2d0f	            0x7524	                           jne 0x4002d75	      2603	gui.c	FUNCTION_39	IF_51	IF_52
0x2d11	    0x8b0500000000	            mov eax, dword [0x04002d57] 	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x2d17	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x2d1a	            0x7c19	                            jl 0x4002d75	      2604	gui.c	FUNCTION_39	IF_51	IF_52
0x2d1c	    0x8b0500000000	            mov eax, dword [0x04002d62] 	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x2d22	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x2d25	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x2d28	             0x1ca	                            add edx, ecx	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x2d2a	            0x39d0	                            cmp eax, edx	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x2d2c	            0x7d07	                           jge 0x4002d75	      2605	gui.c	FUNCTION_39	IF_51	IF_52
0x2d2e	    0xc60500000000	                mov byte [0x04002d75], 0	      2606	gui.c	FUNCTION_39	IF_51	IF_52
0x2d35	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2610	gui.c	FUNCTION_39	IF_53
0x2d39	            0x7418	                            je 0x4002d93	      2610	gui.c	FUNCTION_39	IF_53
0x2d3b	    0x8b1500000000	            mov edx, dword [0x04002d81] 	      2612	gui.c	FUNCTION_39	CALL_27
0x2d41	    0x8b0500000000	            mov eax, dword [0x04002d87] 	      2612	gui.c	FUNCTION_39	CALL_27
0x2d47	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      2612	gui.c	FUNCTION_39	CALL_27
0x2d4a	            0x89ce	                            mov esi, ecx	      2612	gui.c	FUNCTION_39	CALL_27
0x2d4c	            0x89c7	                            mov edi, eax	      2612	gui.c	FUNCTION_39	CALL_27
0x2d4e	      0xe800000000	                          call 0x4002d93	      2612	gui.c	FUNCTION_39	CALL_27
0x2d53	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2615	gui.c	FUNCTION_39	IF_54
0x2d57	            0x740d	                            je 0x4002da6	      2615	gui.c	FUNCTION_39	IF_54
0x2d59	    0x8b0500000000	            mov eax, dword [0x04002d9f] 	      2616	gui.c	FUNCTION_39	CALL_28
0x2d5f	            0x89c7	                            mov edi, eax	      2616	gui.c	FUNCTION_39	CALL_28
0x2d61	      0xe800000000	                          call 0x4002da6	      2616	gui.c	FUNCTION_39	CALL_28
0x2d66	      0xb801000000	                              mov eax, 1	      2620	gui.c	FUNCTION_39
0x2d6b	              0xc9	                                   leave	      2621	gui.c	FUNCTION_39
0x2d6c	              0xc3	                                     ret	      2621	gui.c	FUNCTION_39
gui_redraw	ELSE,0:IF,1:CALL,6:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	62
0x2de4	              0x55	                                push rbp	      2674	gui.c	FUNCTION_41
0x2de5	          0x4889e5	                            mov rbp, rsp	      2674	gui.c	FUNCTION_41
0x2de8	        0x4883ec20	                           sub rsp, 0x20	      2674	gui.c	FUNCTION_41
0x2dec	          0x897dec	             mov dword [rbp - 0x14], edi	      2674	gui.c	FUNCTION_41
0x2def	          0x8975e8	             mov dword [rbp - 0x18], esi	      2674	gui.c	FUNCTION_41
0x2df2	          0x8955e4	             mov dword [rbp - 0x1c], edx	      2674	gui.c	FUNCTION_41
0x2df5	          0x894de0	             mov dword [rbp - 0x20], ecx	      2674	gui.c	FUNCTION_41
0x2df8	    0x8b0500000000	            mov eax, dword [0x04002e3e] 	      2677	gui.c	FUNCTION_41	CALL_1
0x2dfe	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2677	gui.c	FUNCTION_41	CALL_1
0x2e01	            0x29c2	                            sub edx, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x2e03	            0x89d0	                            mov eax, edx	      2677	gui.c	FUNCTION_41	CALL_1
0x2e05	    0x8b3d00000000	            mov edi, dword [0x04002e4b] 	      2677	gui.c	FUNCTION_41	CALL_1
0x2e0b	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x2e0c	            0xf7ff	                                idiv edi	      2677	gui.c	FUNCTION_41	CALL_1
0x2e0e	          0x8945f0	             mov dword [rbp - 0x10], eax	      2677	gui.c	FUNCTION_41	CALL_1
0x2e11	    0x8b0500000000	            mov eax, dword [0x04002e57] 	      2678	gui.c	FUNCTION_41	CALL_2
0x2e17	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2678	gui.c	FUNCTION_41	CALL_2
0x2e1a	            0x29c2	                            sub edx, eax	      2678	gui.c	FUNCTION_41	CALL_2
0x2e1c	            0x89d0	                            mov eax, edx	      2678	gui.c	FUNCTION_41	CALL_2
0x2e1e	    0x8b0d00000000	            mov ecx, dword [0x04002e64] 	      2678	gui.c	FUNCTION_41	CALL_2
0x2e24	              0x99	                                     cdq	      2678	gui.c	FUNCTION_41	CALL_2
0x2e25	            0xf7f9	                                idiv ecx	      2678	gui.c	FUNCTION_41	CALL_2
0x2e27	          0x8945f4	              mov dword [rbp - 0xc], eax	      2678	gui.c	FUNCTION_41	CALL_2
0x2e2a	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2679	gui.c	FUNCTION_41	CALL_3
0x2e2d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2679	gui.c	FUNCTION_41	CALL_3
0x2e30	             0x1d0	                            add eax, edx	      2679	gui.c	FUNCTION_41	CALL_3
0x2e32	          0x8d50ff	                      lea edx, [rax - 1]	      2679	gui.c	FUNCTION_41	CALL_3
0x2e35	    0x8b0500000000	            mov eax, dword [0x04002e7b] 	      2679	gui.c	FUNCTION_41	CALL_3
0x2e3b	            0x29c2	                            sub edx, eax	      2679	gui.c	FUNCTION_41	CALL_3
0x2e3d	            0x89d0	                            mov eax, edx	      2679	gui.c	FUNCTION_41	CALL_3
0x2e3f	    0x8b3500000000	            mov esi, dword [0x04002e85] 	      2679	gui.c	FUNCTION_41	CALL_3
0x2e45	              0x99	                                     cdq	      2679	gui.c	FUNCTION_41	CALL_3
0x2e46	            0xf7fe	                                idiv esi	      2679	gui.c	FUNCTION_41	CALL_3
0x2e48	          0x8945f8	                mov dword [rbp - 8], eax	      2679	gui.c	FUNCTION_41	CALL_3
0x2e4b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2680	gui.c	FUNCTION_41	CALL_4
0x2e4e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2680	gui.c	FUNCTION_41	CALL_4
0x2e51	             0x1d0	                            add eax, edx	      2680	gui.c	FUNCTION_41	CALL_4
0x2e53	          0x8d50ff	                      lea edx, [rax - 1]	      2680	gui.c	FUNCTION_41	CALL_4
0x2e56	    0x8b0500000000	            mov eax, dword [0x04002e9c] 	      2680	gui.c	FUNCTION_41	CALL_4
0x2e5c	            0x29c2	                            sub edx, eax	      2680	gui.c	FUNCTION_41	CALL_4
0x2e5e	            0x89d0	                            mov eax, edx	      2680	gui.c	FUNCTION_41	CALL_4
0x2e60	    0x8b3d00000000	            mov edi, dword [0x04002ea6] 	      2680	gui.c	FUNCTION_41	CALL_4
0x2e66	              0x99	                                     cdq	      2680	gui.c	FUNCTION_41	CALL_4
0x2e67	            0xf7ff	                                idiv edi	      2680	gui.c	FUNCTION_41	CALL_4
0x2e69	          0x8945fc	                mov dword [rbp - 4], eax	      2680	gui.c	FUNCTION_41	CALL_4
0x2e6c	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      2682	gui.c	FUNCTION_41	CALL_5
0x2e6f	          0x8b55f8	                mov edx, dword [rbp - 8]	      2682	gui.c	FUNCTION_41	CALL_5
0x2e72	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      2682	gui.c	FUNCTION_41	CALL_5
0x2e75	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2682	gui.c	FUNCTION_41	CALL_5
0x2e78	    0x41b810000000	                           mov r8d, 0x10	      2682	gui.c	FUNCTION_41	CALL_5
0x2e7e	            0x89c7	                            mov edi, eax	      2682	gui.c	FUNCTION_41	CALL_5
0x2e80	      0xe800000000	                          call 0x4002ec5	      2682	gui.c	FUNCTION_41	CALL_5
0x2e85	    0x8b1500000000	            mov edx, dword [0x04002ecb] 	      2691	gui.c	FUNCTION_41	IF_1
0x2e8b	    0x8b0500000000	            mov eax, dword [0x04002ed1] 	      2691	gui.c	FUNCTION_41	IF_1
0x2e91	            0x39c2	                            cmp edx, eax	      2691	gui.c	FUNCTION_41	IF_1
0x2e93	            0x750f	                           jne 0x4002ee4	      2691	gui.c	FUNCTION_41	IF_1
0x2e95	      0xbe01000000	                              mov esi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x2e9a	      0xbf01000000	                              mov edi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x2e9f	      0xe800000000	                          call 0x4002ee4	      2692	gui.c	FUNCTION_41	CALL_6
0x2ea4	              0x90	                                     nop	      2693	gui.c	FUNCTION_41
0x2ea5	              0xc9	                                   leave	      2693	gui.c	FUNCTION_41
0x2ea6	              0xc3	                                     ret	      2693	gui.c	FUNCTION_41
gui_do_fork	ELSE,3:IF,12:CALL,24:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	103
0x1d3	              0x55	                                push rbp	       211	gui.c	FUNCTION_3
0x1d4	          0x4889e5	                            mov rbp, rsp	       211	gui.c	FUNCTION_3
0x1d7	        0x4883ec20	                           sub rsp, 0x20	       211	gui.c	FUNCTION_3
0x1db	    0x64488b042528	                mov rax, qword fs:[0x28]	       211	gui.c	FUNCTION_3
0x1e4	        0x488945f8	                mov qword [rbp - 8], rax	       211	gui.c	FUNCTION_3
0x1e8	            0x31c0	                            xor eax, eax	       211	gui.c	FUNCTION_3
0x1ea	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	       216	gui.c	FUNCTION_3
0x1f1	        0x488d45f0	                   lea rax, [rbp - 0x10]	       221	gui.c	FUNCTION_3	CALL_1
0x1f5	          0x4889c7	                            mov rdi, rax	       221	gui.c	FUNCTION_3	CALL_1
0x1f8	      0xe800000000	                          call 0x400023d	       221	gui.c	FUNCTION_3	CALL_1
0x1fd	          0xc1e81f	                           shr eax, 0x1f	       221	gui.c	FUNCTION_3	CALL_1
0x200	           0xfb6c0	                           movzx eax, al	       221	gui.c	FUNCTION_3	CALL_1
0x203	          0x8945e4	             mov dword [rbp - 0x1c], eax	       221	gui.c	FUNCTION_3	CALL_1
0x206	      0xe800000000	                          call 0x400024b	       222	gui.c	FUNCTION_3	CALL_2
0x20b	          0x8945e8	             mov dword [rbp - 0x18], eax	       222	gui.c	FUNCTION_3	CALL_2
0x20e	        0x837de800	               cmp dword [rbp - 0x18], 0	       223	gui.c	FUNCTION_3	IF_1
0x212	            0x7917	                           jns 0x400026b	       223	gui.c	FUNCTION_3	IF_1
0x214	      0xbf00000000	                              mov edi, 0	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x219	      0xe800000000	                          call 0x400025e	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x21e	          0x4889c7	                            mov rdi, rax	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x221	      0xe800000000	                          call 0x4000266	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x226	      0xe920010000	                           jmp 0x400038b	       226	gui.c	FUNCTION_3	IF_1
0x22b	        0x837de800	               cmp dword [rbp - 0x18], 0	       228	gui.c	FUNCTION_3	ELSE_1	IF_2
0x22f	     0xf8e90000000	                           jle 0x4000305	       228	gui.c	FUNCTION_3	ELSE_1	IF_2
0x235	        0x837de400	               cmp dword [rbp - 0x1c], 0	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x239	            0x7557	                           jne 0x40002d2	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x23b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x23e	            0x89c7	                            mov edi, eax	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x240	      0xe800000000	                          call 0x4000285	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x245	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x248	            0x89c7	                            mov edi, eax	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x24a	      0xe812010000	            call sym.gui_read_child_pipe	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x24f	          0x8945ec	             mov dword [rbp - 0x14], eax	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x252	        0x837dec02	               cmp dword [rbp - 0x14], 2	       239	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4
0x256	            0x752d	                           jne 0x40002c5	       239	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4
0x258	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x25c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x25f	      0xba00000000	                              mov edx, 0	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x264	          0x4889ce	                            mov rsi, rcx	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x267	            0x89c7	                            mov edi, eax	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x269	      0xe800000000	                          call 0x40002ae	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x26e	      0xbf00000000	                              mov edi, 0	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x273	      0xe800000000	                          call 0x40002b8	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x278	          0x4889c7	                            mov rdi, rax	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x27b	      0xe800000000	                          call 0x40002c0	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x280	      0xe9c6000000	                           jmp 0x400038b	       250	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4
0x285	        0x837dec00	               cmp dword [rbp - 0x14], 0	       252	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	ELSE_2	IF_5
0x289	            0x7507	                           jne 0x40002d2	       252	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	ELSE_2	IF_5
0x28b	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	       254	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	ELSE_2	IF_5
0x292	        0x837de400	               cmp dword [rbp - 0x1c], 0	       259	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_6
0x296	            0x740f	                            je 0x40002e7	       259	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_6
0x298	      0xbe01000000	                              mov esi, 1	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x29d	      0xbf2c010000	                          mov edi, 0x12c	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x2a2	      0xe800000000	                          call 0x40002e7	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x2a7	    0x8b0500000000	            mov eax, dword [0x040002ed] 	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x2ad	            0x85c0	                           test eax, eax	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x2af	            0x740a	                            je 0x40002fb	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x2b1	      0xbf00000000	                              mov edi, 0	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x2b6	      0xe800000000	                          call 0x40002fb	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x2bb	      0xbf00000000	                              mov edi, 0	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x2c0	      0xe800000000	                          call 0x4000305	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x2c5	      0xe800000000	                          call 0x400030a	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x2ca	          0x83f801	                              cmp eax, 1	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x2cd	            0x740a	                            je 0x4000319	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x2cf	      0xbf01000000	                              mov edi, 1	       278	gui.c	FUNCTION_3	CALL_15
0x2d4	      0xe800000000	                          call 0x4000319	       278	gui.c	FUNCTION_3	CALL_15
0x2d9	      0xe800000000	                          call 0x400031e	       287	gui.c	FUNCTION_3	CALL_16
0x2de	        0x837de400	               cmp dword [rbp - 0x1c], 0	       292	gui.c	FUNCTION_3	IF_9
0x2e2	            0x750a	                           jne 0x400032e	       292	gui.c	FUNCTION_3	IF_9
0x2e4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       293	gui.c	FUNCTION_3	CALL_18
0x2e7	            0x89c7	                            mov edi, eax	       293	gui.c	FUNCTION_3	CALL_18
0x2e9	      0xe800000000	                          call 0x400032e	       293	gui.c	FUNCTION_3	CALL_18
0x2ee	      0xe82ffeffff	              call sym.gui_attempt_start	       301	gui.c	FUNCTION_3	CALL_20
0x2f3	        0x837de400	               cmp dword [rbp - 0x1c], 0	       304	gui.c	FUNCTION_3	IF_10
0x2f7	            0x753e	                           jne 0x4000377	       304	gui.c	FUNCTION_3	IF_10
0x2f9	    0x8b0500000000	            mov eax, dword [0x0400033f] 	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x2ff	            0x85c0	                           test eax, eax	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x301	            0x7416	                            je 0x4000359	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x303	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x306	      0xba03000000	                              mov edx, 3	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x30b	      0xbe00000000	                              mov esi, 0	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x310	            0x89c7	                            mov edi, eax	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x312	      0xe800000000	                          call 0x4000357	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x317	            0xeb14	                           jmp 0x400036d	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x319	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x31c	      0xba05000000	                              mov edx, 5	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x321	      0xbe00000000	                              mov esi, 0	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x326	            0x89c7	                            mov edi, eax	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x328	      0xe800000000	                          call 0x400036d	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x32d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x330	            0x89c7	                            mov edi, eax	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x332	      0xe800000000	                          call 0x4000377	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x337	    0x8b0500000000	            mov eax, dword [0x0400037d] 	       314	gui.c	FUNCTION_3	IF_12
0x33d	            0x85c0	                           test eax, eax	       314	gui.c	FUNCTION_3	IF_12
0x33f	            0x750a	                           jne 0x400038b	       314	gui.c	FUNCTION_3	IF_12
0x341	      0xbf01000000	                              mov edi, 1	       315	gui.c	FUNCTION_3	CALL_24
0x346	      0xe800000000	                          call 0x400038b	       315	gui.c	FUNCTION_3	CALL_24
0x34b	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	gui.c	FUNCTION_3
0x34f	    0x644833042528	                xor rax, qword fs:[0x28]	       316	gui.c	FUNCTION_3
0x358	            0x7405	                            je 0x400039f	       316	gui.c	FUNCTION_3
0x35a	      0xe800000000	                          call 0x400039f	       316	gui.c	FUNCTION_3
0x35f	              0xc9	                                   leave	       316	gui.c	FUNCTION_3
0x360	              0xc3	                                     ret	       316	gui.c	FUNCTION_3
gui_do_scroll	ELSE,1:IF,12:CALL,14:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	166
0x5790	              0x55	                                push rbp	      4422	gui.c	FUNCTION_67
0x5791	          0x4889e5	                            mov rbp, rsp	      4422	gui.c	FUNCTION_67
0x5794	        0x4883ec40	                           sub rsp, 0x40	      4422	gui.c	FUNCTION_67
0x5798	    0x488b05000000	            mov rax, qword [0x040057df] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x579f	        0x488945d0	             mov qword [rbp - 0x30], rax	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57a3	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57aa	            0xeb17	                           jmp 0x4005803	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57ac	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x57b1	            0x741d	                            je 0x4005810	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x57b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57b7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57bb	        0x488945d0	             mov qword [rbp - 0x30], rax	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57bf	        0x8345c401	               add dword [rbp - 0x3c], 1	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57c3	    0x8b0500000000	            mov eax, dword [0x04005809] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57c9	          0x3945c4	            cmp dword [rbp - 0x3c], eax 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57cc	            0x7cde	                            jl 0x40057ec	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57ce	            0xeb01	                           jmp 0x4005811	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x57d0	              0x90	                                     nop	      4434	gui.c	FUNCTION_67	FOR_1	IF_1
0x57d1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4435	gui.c	FUNCTION_67	IF_2
0x57d6	            0x750a	                           jne 0x4005822	      4435	gui.c	FUNCTION_67	IF_2
0x57d8	      0xb800000000	                              mov eax, 0	      4437	gui.c	FUNCTION_67	IF_2
0x57dd	      0xe942020000	                           jmp 0x4005a64	      4437	gui.c	FUNCTION_67	IF_2
0x57e2	    0x488b05000000	            mov rax, qword [0x04005829] 	      4442	gui.c	FUNCTION_67
0x57e9	        0x488d5001	                      lea rdx, [rax + 1]	      4442	gui.c	FUNCTION_67
0x57ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4442	gui.c	FUNCTION_67
0x57f1	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4442	gui.c	FUNCTION_67
0x57f5	          0x4829c2	                            sub rdx, rax	      4442	gui.c	FUNCTION_67
0x57f8	          0x4889d0	                            mov rax, rdx	      4442	gui.c	FUNCTION_67
0x57fb	        0x488945d8	             mov qword [rbp - 0x28], rax	      4442	gui.c	FUNCTION_67
0x57ff	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4443	gui.c	FUNCTION_67	IF_3
0x5804	            0x750a	                           jne 0x4005850	      4443	gui.c	FUNCTION_67	IF_3
0x5806	      0xb800000000	                              mov eax, 0	      4444	gui.c	FUNCTION_67	IF_3
0x580b	      0xe914020000	                           jmp 0x4005a64	      4444	gui.c	FUNCTION_67	IF_3
0x5810	    0x488b05000000	            mov rax, qword [0x04005857] 	      4446	gui.c	FUNCTION_67
0x5817	        0x488945e0	             mov qword [rbp - 0x20], rax	      4446	gui.c	FUNCTION_67
0x581b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4447	gui.c	FUNCTION_67
0x581f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4447	gui.c	FUNCTION_67
0x5823	        0x488945e8	             mov qword [rbp - 0x18], rax	      4447	gui.c	FUNCTION_67
0x5827	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4449	gui.c	FUNCTION_67
0x582b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4449	gui.c	FUNCTION_67
0x5831	          0x8945cc	             mov dword [rbp - 0x34], eax	      4449	gui.c	FUNCTION_67
0x5834	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4451	gui.c	FUNCTION_67
0x5838	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4451	gui.c	FUNCTION_67
0x583c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4451	gui.c	FUNCTION_67
0x5840	        0x488945f0	             mov qword [rbp - 0x10], rax	      4451	gui.c	FUNCTION_67
0x5844	        0x488955f8	                mov qword [rbp - 8], rdx	      4451	gui.c	FUNCTION_67
0x5848	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4452	gui.c	FUNCTION_67
0x584c	    0x488905000000	            mov qword [0x04005893], rax 	      4452	gui.c	FUNCTION_67
0x5853	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4453	gui.c	FUNCTION_67
0x5857	        0x488b4008	                mov rax, qword [rax + 8]	      4453	gui.c	FUNCTION_67
0x585b	    0x488905000000	            mov qword [0x040058a2], rax 	      4453	gui.c	FUNCTION_67
0x5862	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4454	gui.c	FUNCTION_67	IF_4
0x5867	            0x7923	                           jns 0x40058cc	      4454	gui.c	FUNCTION_67	IF_4
0x5869	    0x488b05000000	            mov rax, qword [0x040058b0] 	      4455	gui.c	FUNCTION_67	CALL_2
0x5870	          0x4885c0	                           test rax, rax	      4455	gui.c	FUNCTION_67	CALL_2
0x5873	           0xf94c0	                                 sete al	      4455	gui.c	FUNCTION_67	CALL_2
0x5876	           0xfb6c0	                           movzx eax, al	      4455	gui.c	FUNCTION_67	CALL_2
0x5879	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4455	gui.c	FUNCTION_67	CALL_2
0x587d	          0x48f7da	                                 neg rdx	      4455	gui.c	FUNCTION_67	CALL_2
0x5880	            0x89c6	                            mov esi, eax	      4455	gui.c	FUNCTION_67	CALL_2
0x5882	          0x4889d7	                            mov rdi, rdx	      4455	gui.c	FUNCTION_67	CALL_2
0x5885	      0xe800000000	                          call 0x40058ca	      4455	gui.c	FUNCTION_67	CALL_2
0x588a	            0xeb1e	                           jmp 0x40058ea	      4455	gui.c	FUNCTION_67	CALL_2
0x588c	    0x488b05000000	            mov rax, qword [0x040058d3] 	      4457	gui.c	FUNCTION_67	CALL_3
0x5893	          0x4885c0	                           test rax, rax	      4457	gui.c	FUNCTION_67	CALL_3
0x5896	           0xf94c0	                                 sete al	      4457	gui.c	FUNCTION_67	CALL_3
0x5899	           0xfb6d0	                           movzx edx, al	      4457	gui.c	FUNCTION_67	CALL_3
0x589c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4457	gui.c	FUNCTION_67	CALL_3
0x58a0	            0x89d6	                            mov esi, edx	      4457	gui.c	FUNCTION_67	CALL_3
0x58a2	          0x4889c7	                            mov rdi, rax	      4457	gui.c	FUNCTION_67	CALL_3
0x58a5	      0xe800000000	                          call 0x40058ea	      4457	gui.c	FUNCTION_67	CALL_3
0x58aa	    0x8b0500000000	            mov eax, dword [0x040058f0] 	      4461	gui.c	FUNCTION_67	IF_5
0x58b0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4461	gui.c	FUNCTION_67	IF_5
0x58b3	            0x750b	                           jne 0x4005900	      4461	gui.c	FUNCTION_67	IF_5
0x58b5	    0x48c705000000	               mov qword [0x04005900], 0	      4462	gui.c	FUNCTION_67	IF_5
0x58c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4464	gui.c	FUNCTION_67	IF_6
0x58c4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4464	gui.c	FUNCTION_67	IF_6
0x58c8	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4464	gui.c	FUNCTION_67	IF_6
0x58cc	            0x750f	                           jne 0x400591d	      4464	gui.c	FUNCTION_67	IF_6
0x58ce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4466	gui.c	FUNCTION_67	IF_6
0x58d2	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4466	gui.c	FUNCTION_67	IF_6
0x58d8	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4466	gui.c	FUNCTION_67	IF_6
0x58db	            0x7448	                            je 0x4005965	      4466	gui.c	FUNCTION_67	IF_6
0x58dd	    0x488b05000000	            mov rax, qword [0x04005924] 	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x58e4	          0x4885c0	                           test rax, rax	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x58e7	            0x740a	                            je 0x4005933	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x58e9	      0xe800000000	                          call 0x400592e	      4472	gui.c	FUNCTION_67	IF_6	IF_7	CALL_4
0x58ee	      0xe800000000	                          call 0x4005933	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x58f3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x58f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x58fb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x58ff	          0x4839c2	                            cmp rdx, rax	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x5902	            0x740e	                            je 0x4005952	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x5904	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x5908	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x590b	            0x89c7	                            mov edi, eax	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x590d	      0xe800000000	                          call 0x4005952	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x5912	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4477	gui.c	FUNCTION_67	IF_6
0x5916	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4477	gui.c	FUNCTION_67	IF_6
0x591a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4477	gui.c	FUNCTION_67	IF_6
0x591e	    0x488990500500	            mov qword [rax + 0x550], rdx	      4477	gui.c	FUNCTION_67	IF_6
0x5925	      0xe800000000	                          call 0x400596a	      4481	gui.c	FUNCTION_67	CALL_7
0x592a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4483	gui.c	FUNCTION_67
0x592e	    0x488905000000	            mov qword [0x04005975], rax 	      4483	gui.c	FUNCTION_67
0x5935	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4484	gui.c	FUNCTION_67
0x5939	        0x488b4008	                mov rax, qword [rax + 8]	      4484	gui.c	FUNCTION_67
0x593d	    0x488905000000	            mov qword [0x04005984], rax 	      4484	gui.c	FUNCTION_67
0x5944	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4490	gui.c	FUNCTION_67	IF_9
0x5948	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4490	gui.c	FUNCTION_67	IF_9
0x594c	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4490	gui.c	FUNCTION_67	IF_9
0x5950	            0x751d	                           jne 0x40059af	      4490	gui.c	FUNCTION_67	IF_9
0x5952	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4491	gui.c	FUNCTION_67	IF_9
0x5956	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      4491	gui.c	FUNCTION_67	IF_9
0x595c	            0x85c0	                           test eax, eax	      4491	gui.c	FUNCTION_67	IF_9
0x595e	            0x750f	                           jne 0x40059af	      4491	gui.c	FUNCTION_67	IF_9
0x5960	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4493	gui.c	FUNCTION_67	IF_9
0x5964	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4493	gui.c	FUNCTION_67	IF_9
0x596a	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4493	gui.c	FUNCTION_67	IF_9
0x596d	            0x7457	                            je 0x4005a06	      4493	gui.c	FUNCTION_67	IF_9
0x596f	    0xc745c80a0000	             mov dword [rbp - 0x38], 0xa	      4497	gui.c	FUNCTION_67	IF_9
0x5976	      0xe800000000	                          call 0x40059bb	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x597b	            0x85c0	                           test eax, eax	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x597d	            0x7415	                            je 0x40059d4	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x597f	    0xc745c8280000	           mov dword [rbp - 0x38], 0x28 	      4502	gui.c	FUNCTION_67	IF_9	IF_10
0x5986	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4503	gui.c	FUNCTION_67	IF_9	IF_10
0x598a	    0xc780f8000000	               mov dword [rax + 0xf8], 0	      4503	gui.c	FUNCTION_67	IF_9	IF_10
0x5994	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x5998	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x599e	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x59a1	            0x7d0d	                           jge 0x40059f0	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x59a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x59a7	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x59aa	    0x899028010000	            mov dword [rax + 0x128], edx	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x59b0	      0xe800000000	                          call 0x40059f5	      4510	gui.c	FUNCTION_67	IF_9	CALL_9
0x59b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x59b9	          0x4889c7	                            mov rdi, rax	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x59bc	      0xe800000000	                          call 0x4005a01	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x59c1	      0xe800000000	                          call 0x4005a06	      4512	gui.c	FUNCTION_67	IF_9	CALL_11
0x59c6	      0xe800000000	                          call 0x4005a0b	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x59cb	            0x85c0	                           test eax, eax	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x59cd	            0x7405	                            je 0x4005a14	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x59cf	      0xe800000000	                          call 0x4005a14	      4518	gui.c	FUNCTION_67	CALL_13
0x59d4	    0x488b05000000	            mov rax, qword [0x04005a1b] 	      4521	gui.c	FUNCTION_67	CALL_14
0x59db	        0x483945d0	            cmp qword [rbp - 0x30], rax 	      4521	gui.c	FUNCTION_67	CALL_14
0x59df	            0x753d	                           jne 0x4005a5e	      4521	gui.c	FUNCTION_67	CALL_14
0x59e1	    0x488b05000000	            mov rax, qword [0x04005a28] 	      4521	gui.c	FUNCTION_67	CALL_14
0x59e8	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4521	gui.c	FUNCTION_67	CALL_14
0x59ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4521	gui.c	FUNCTION_67	CALL_14
0x59f0	          0x4839c2	                            cmp rdx, rax	      4521	gui.c	FUNCTION_67	CALL_14
0x59f3	            0x7522	                           jne 0x4005a57	      4521	gui.c	FUNCTION_67	CALL_14
0x59f5	    0x488b05000000	            mov rax, qword [0x04005a3c] 	      4521	gui.c	FUNCTION_67	CALL_14
0x59fc	          0x8b5040	            mov edx, dword [rax + 0x40] 	      4521	gui.c	FUNCTION_67	CALL_14
0x59ff	          0x8b45f8	                mov eax, dword [rbp - 8]	      4521	gui.c	FUNCTION_67	CALL_14
0x5a02	            0x39c2	                            cmp edx, eax	      4521	gui.c	FUNCTION_67	CALL_14
0x5a04	            0x7511	                           jne 0x4005a57	      4521	gui.c	FUNCTION_67	CALL_14
0x5a06	    0x488b05000000	            mov rax, qword [0x04005a4d] 	      4521	gui.c	FUNCTION_67	CALL_14
0x5a0d	          0x8b5044	            mov edx, dword [rax + 0x44] 	      4521	gui.c	FUNCTION_67	CALL_14
0x5a10	          0x8b45fc	                mov eax, dword [rbp - 4]	      4521	gui.c	FUNCTION_67	CALL_14
0x5a13	            0x39c2	                            cmp edx, eax	      4521	gui.c	FUNCTION_67	CALL_14
0x5a15	            0x7407	                            je 0x4005a5e	      4521	gui.c	FUNCTION_67	CALL_14
0x5a17	      0xb801000000	                              mov eax, 1	      4521	gui.c	FUNCTION_67	CALL_14
0x5a1c	            0xeb05	                           jmp 0x4005a63	      4521	gui.c	FUNCTION_67	CALL_14
0x5a1e	      0xb800000000	                              mov eax, 0	      4521	gui.c	FUNCTION_67	CALL_14
0x5a23	              0x90	                                     nop	      4521	gui.c	FUNCTION_67	CALL_14
0x5a24	              0xc9	                                   leave	      4522	gui.c	FUNCTION_67
0x5a25	              0xc3	                                     ret	      4522	gui.c	FUNCTION_67
gui_delete_lines	ELSE,2:IF,5:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	55
0x327b	              0x55	                                push rbp	      2867	gui.c	FUNCTION_43
0x327c	          0x4889e5	                            mov rbp, rsp	      2867	gui.c	FUNCTION_43
0x327f	        0x4883ec10	                           sub rsp, 0x10	      2867	gui.c	FUNCTION_43
0x3283	          0x897dfc	                mov dword [rbp - 4], edi	      2867	gui.c	FUNCTION_43
0x3286	          0x8975f8	                mov dword [rbp - 8], esi	      2867	gui.c	FUNCTION_43
0x3289	        0x837df800	                  cmp dword [rbp - 8], 0	      2868	gui.c	FUNCTION_43	IF_1
0x328d	     0xf8ea6000000	                           jle 0x4003379	      2868	gui.c	FUNCTION_43	IF_1
0x3293	          0x8b55fc	                mov edx, dword [rbp - 4]	      2871	gui.c	FUNCTION_43	IF_2
0x3296	          0x8b45f8	                mov eax, dword [rbp - 8]	      2871	gui.c	FUNCTION_43	IF_2
0x3299	             0x1c2	                            add edx, eax	      2871	gui.c	FUNCTION_43	IF_2
0x329b	    0x8b0500000000	            mov eax, dword [0x040032e1] 	      2871	gui.c	FUNCTION_43	IF_2
0x32a1	            0x39c2	                            cmp edx, eax	      2871	gui.c	FUNCTION_43	IF_2
0x32a3	            0x7e1e	                           jle 0x4003303	      2871	gui.c	FUNCTION_43	IF_2
0x32a5	    0x8b0d00000000	            mov ecx, dword [0x040032eb] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x32ab	    0x8b1500000000	            mov edx, dword [0x040032f1] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x32b1	    0x8b3500000000	            mov esi, dword [0x040032f7] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x32b7	          0x8b45fc	                mov eax, dword [rbp - 4]	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x32ba	            0x89c7	                            mov edi, eax	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x32bc	      0xe800000000	                          call 0x4003301	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x32c1	            0xeb77	                           jmp 0x400337a	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x32c3	          0x8b55f8	                mov edx, dword [rbp - 8]	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x32c6	          0x8b45fc	                mov eax, dword [rbp - 4]	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x32c9	            0x89d6	                            mov esi, edx	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x32cb	            0x89c7	                            mov edi, eax	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x32cd	      0xe800000000	                          call 0x4003312	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x32d2	    0x8b0500000000	            mov eax, dword [0x04003318] 	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32d8	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32db	            0x7c5d	                            jl 0x400337a	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32dd	    0x8b1500000000	            mov edx, dword [0x04003323] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32e3	    0x8b0500000000	            mov eax, dword [0x04003329] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32e9	            0x39c2	                            cmp edx, eax	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32eb	            0x7c4d	                            jl 0x400337a	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32ed	    0x8b1500000000	            mov edx, dword [0x04003333] 	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32f3	    0x8b0500000000	            mov eax, dword [0x04003339] 	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32f9	            0x39c2	                            cmp edx, eax	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32fb	            0x7f3d	                            jg 0x400337a	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x32fd	    0x8b0500000000	            mov eax, dword [0x04003343] 	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x3303	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x3306	          0x8b55f8	                mov edx, dword [rbp - 8]	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x3309	             0x1ca	                            add edx, ecx	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x330b	            0x39d0	                            cmp eax, edx	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x330d	            0x7d09	                           jge 0x4003358	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x330f	    0xc60500000000	                mov byte [0x04003356], 0	      2886	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x3316	            0xeb22	                           jmp 0x400337a	      2886	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x3318	    0x8b1500000000	            mov edx, dword [0x0400335e] 	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x331e	    0x8b0500000000	            mov eax, dword [0x04003364] 	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x3324	            0x39c2	                            cmp edx, eax	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x3326	            0x7f12	                            jg 0x400337a	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x3328	    0x8b0500000000	            mov eax, dword [0x0400336e] 	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x332e	          0x2b45f8	                sub eax, dword [rbp - 8]	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x3331	    0x890500000000	            mov dword [0x04003377], eax 	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x3337	            0xeb01	                           jmp 0x400337a	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x3339	              0x90	                                     nop	      2869	gui.c	FUNCTION_43	IF_1
0x333a	              0xc9	                                   leave	      2891	gui.c	FUNCTION_43
0x333b	              0xc3	                                     ret	      2891	gui.c	FUNCTION_43
gui_get_lightness	ELSE,0:IF,0:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	32
0x609a	              0x55	                                push rbp	      4784	gui.c	FUNCTION_76
0x609b	          0x4889e5	                            mov rbp, rsp	      4784	gui.c	FUNCTION_76
0x609e	        0x4883ec20	                           sub rsp, 0x20	      4784	gui.c	FUNCTION_76
0x60a2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4784	gui.c	FUNCTION_76
0x60a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4785	gui.c	FUNCTION_76	CALL_1
0x60aa	          0x4889c7	                            mov rdi, rax	      4785	gui.c	FUNCTION_76	CALL_1
0x60ad	      0xe800000000	                          call 0x40060f2	      4785	gui.c	FUNCTION_76	CALL_1
0x60b2	        0x488945f8	                mov qword [rbp - 8], rax	      4785	gui.c	FUNCTION_76	CALL_1
0x60b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4787	gui.c	FUNCTION_76
0x60ba	        0x48c1e810	                           shr rax, 0x10	      4787	gui.c	FUNCTION_76
0x60be	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x60c1	    0x69d02b010000	                    imul edx, eax, 0x12b	      4787	gui.c	FUNCTION_76
0x60c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4788	gui.c	FUNCTION_76
0x60cb	        0x48c1e808	                              shr rax, 8	      4788	gui.c	FUNCTION_76
0x60cf	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x60d2	    0x69c04b020000	                    imul eax, eax, 0x24b	      4787	gui.c	FUNCTION_76
0x60d8	             0x1c2	                            add edx, eax	      4787	gui.c	FUNCTION_76
0x60da	        0x488b45f8	                mov rax, qword [rbp - 8]	      4787	gui.c	FUNCTION_76
0x60de	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x60e1	          0x6bc072	                     imul eax, eax, 0x72	      4787	gui.c	FUNCTION_76
0x60e4	             0x1d0	                            add eax, edx	      4787	gui.c	FUNCTION_76
0x60e6	            0x89c1	                            mov ecx, eax	      4787	gui.c	FUNCTION_76
0x60e8	      0xbad34d6210	                     mov edx, 0x10624dd3	      4787	gui.c	FUNCTION_76
0x60ed	            0x89c8	                            mov eax, ecx	      4787	gui.c	FUNCTION_76
0x60ef	            0xf7ea	                                imul edx	      4787	gui.c	FUNCTION_76
0x60f1	          0xc1fa06	                              sar edx, 6	      4787	gui.c	FUNCTION_76
0x60f4	            0x89c8	                            mov eax, ecx	      4787	gui.c	FUNCTION_76
0x60f6	          0xc1f81f	                           sar eax, 0x1f	      4787	gui.c	FUNCTION_76
0x60f9	            0x29c2	                            sub edx, eax	      4787	gui.c	FUNCTION_76
0x60fb	            0x89d0	                            mov eax, edx	      4787	gui.c	FUNCTION_76
0x60fd	              0xc9	                                   leave	      4790	gui.c	FUNCTION_76
0x60fe	              0xc3	                                     ret	      4790	gui.c	FUNCTION_76
gui_wingoto_xy	ELSE,0:IF,2:CALL,4:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	51
0x72d3	              0x55	                                push rbp	      5409	gui.c	FUNCTION_92
0x72d4	          0x4889e5	                            mov rbp, rsp	      5409	gui.c	FUNCTION_92
0x72d7	        0x4883ec30	                           sub rsp, 0x30	      5409	gui.c	FUNCTION_92
0x72db	          0x897ddc	             mov dword [rbp - 0x24], edi	      5409	gui.c	FUNCTION_92
0x72de	          0x8975d8	             mov dword [rbp - 0x28], esi	      5409	gui.c	FUNCTION_92
0x72e1	    0x64488b042528	                mov rax, qword fs:[0x28]	      5409	gui.c	FUNCTION_92
0x72ea	        0x488945f8	                mov qword [rbp - 8], rax	      5409	gui.c	FUNCTION_92
0x72ee	            0x31c0	                            xor eax, eax	      5409	gui.c	FUNCTION_92
0x72f0	    0x8b0500000000	            mov eax, dword [0x04007336] 	      5410	gui.c	FUNCTION_92	CALL_1
0x72f6	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      5410	gui.c	FUNCTION_92	CALL_1
0x72f9	            0x29c2	                            sub edx, eax	      5410	gui.c	FUNCTION_92	CALL_1
0x72fb	            0x89d0	                            mov eax, edx	      5410	gui.c	FUNCTION_92	CALL_1
0x72fd	    0x8b0d00000000	            mov ecx, dword [0x04007343] 	      5410	gui.c	FUNCTION_92	CALL_1
0x7303	              0x99	                                     cdq	      5410	gui.c	FUNCTION_92	CALL_1
0x7304	            0xf7f9	                                idiv ecx	      5410	gui.c	FUNCTION_92	CALL_1
0x7306	          0x8945e8	             mov dword [rbp - 0x18], eax	      5410	gui.c	FUNCTION_92	CALL_1
0x7309	    0x8b0500000000	            mov eax, dword [0x0400734f] 	      5411	gui.c	FUNCTION_92	CALL_2
0x730f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      5411	gui.c	FUNCTION_92	CALL_2
0x7312	            0x29c2	                            sub edx, eax	      5411	gui.c	FUNCTION_92	CALL_2
0x7314	            0x89d0	                            mov eax, edx	      5411	gui.c	FUNCTION_92	CALL_2
0x7316	    0x8b0d00000000	            mov ecx, dword [0x0400735c] 	      5411	gui.c	FUNCTION_92	CALL_2
0x731c	              0x99	                                     cdq	      5411	gui.c	FUNCTION_92	CALL_2
0x731d	            0xf7f9	                                idiv ecx	      5411	gui.c	FUNCTION_92	CALL_2
0x731f	          0x8945ec	             mov dword [rbp - 0x14], eax	      5411	gui.c	FUNCTION_92	CALL_2
0x7322	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5414	gui.c	FUNCTION_92	IF_1
0x7325	            0x85c0	                           test eax, eax	      5414	gui.c	FUNCTION_92	IF_1
0x7327	            0x783e	                            js 0x40073a7	      5414	gui.c	FUNCTION_92	IF_1
0x7329	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5414	gui.c	FUNCTION_92	IF_1
0x732c	            0x85c0	                           test eax, eax	      5414	gui.c	FUNCTION_92	IF_1
0x732e	            0x7837	                            js 0x40073a7	      5414	gui.c	FUNCTION_92	IF_1
0x7330	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x7334	        0x488d45e8	                   lea rax, [rbp - 0x18]	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x7338	          0x4889d6	                            mov rsi, rdx	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x733b	          0x4889c7	                            mov rdi, rax	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x733e	      0xe800000000	                          call 0x4007383	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x7343	        0x488945f0	             mov qword [rbp - 0x10], rax	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x7347	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x734c	            0x7419	                            je 0x40073a7	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x734e	    0x488b05000000	            mov rax, qword [0x04007395] 	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x7355	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x7359	            0x740c	                            je 0x40073a7	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x735b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x735f	          0x4889c7	                            mov rdi, rax	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x7362	      0xe800000000	                          call 0x40073a7	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x7367	              0x90	                                     nop	      5420	gui.c	FUNCTION_92
0x7368	        0x488b45f8	                mov rax, qword [rbp - 8]	      5420	gui.c	FUNCTION_92
0x736c	    0x644833042528	                xor rax, qword fs:[0x28]	      5420	gui.c	FUNCTION_92
0x7375	            0x7405	                            je 0x40073bc	      5420	gui.c	FUNCTION_92
0x7377	      0xe800000000	                          call 0x40073bc	      5420	gui.c	FUNCTION_92
0x737c	              0xc9	                                   leave	      5420	gui.c	FUNCTION_92
0x737d	              0xc3	                                     ret	      5420	gui.c	FUNCTION_92
gui_do_horiz_scroll	ELSE,1:IF,5:CALL,5:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	67
0x5e44	              0x55	                                push rbp	      4696	gui.c	FUNCTION_71
0x5e45	          0x4889e5	                            mov rbp, rsp	      4696	gui.c	FUNCTION_71
0x5e48	              0x53	                                push rbx	      4696	gui.c	FUNCTION_71
0x5e49	        0x4883ec18	                           sub rsp, 0x18	      4696	gui.c	FUNCTION_71
0x5e4d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4696	gui.c	FUNCTION_71
0x5e51	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4696	gui.c	FUNCTION_71
0x5e54	    0x488b05000000	            mov rax, qword [0x04005e9b] 	      4698	gui.c	FUNCTION_71	IF_1
0x5e5b	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4698	gui.c	FUNCTION_71	IF_1
0x5e61	            0x85c0	                           test eax, eax	      4698	gui.c	FUNCTION_71	IF_1
0x5e63	            0x740a	                            je 0x4005eaf	      4698	gui.c	FUNCTION_71	IF_1
0x5e65	      0xb800000000	                              mov eax, 0	      4699	gui.c	FUNCTION_71	IF_1
0x5e6a	      0xe9f3000000	                           jmp 0x4005fa2	      4699	gui.c	FUNCTION_71	IF_1
0x5e6f	    0x488b05000000	            mov rax, qword [0x04005eb6] 	      4701	gui.c	FUNCTION_71	IF_2
0x5e76	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4701	gui.c	FUNCTION_71	IF_2
0x5e7c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4701	gui.c	FUNCTION_71	IF_2
0x5e80	            0x39d0	                            cmp eax, edx	      4701	gui.c	FUNCTION_71	IF_2
0x5e82	            0x750a	                           jne 0x4005ece	      4701	gui.c	FUNCTION_71	IF_2
0x5e84	      0xb800000000	                              mov eax, 0	      4702	gui.c	FUNCTION_71	IF_2
0x5e89	      0xe9d4000000	                           jmp 0x4005fa2	      4702	gui.c	FUNCTION_71	IF_2
0x5e8e	    0x488b05000000	            mov rax, qword [0x04005ed5] 	      4704	gui.c	FUNCTION_71
0x5e95	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4704	gui.c	FUNCTION_71
0x5e99	    0x899094000000	             mov dword [rax + 0x94], edx	      4704	gui.c	FUNCTION_71
0x5e9f	    0x488b05000000	            mov rax, qword [0x04005ee6] 	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x5ea6	      0xbe68000000	                           mov esi, 0x68	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x5eab	          0x4889c7	                            mov rdi, rax	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x5eae	      0xe800000000	                          call 0x4005ef3	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x5eb3	          0x4885c0	                           test rax, rax	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x5eb6	     0xf85a1000000	                           jne 0x4005f9d	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x5ebc	      0xe800000000	                          call 0x4005f01	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x5ec1	            0x85c0	                           test eax, eax	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x5ec3	     0xf8594000000	                           jne 0x4005f9d	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x5ec9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x5ecd	            0x89c3	                            mov ebx, eax	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x5ecf	    0x488b05000000	            mov rax, qword [0x04005f16] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x5ed6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x5eda	          0x4889c7	                            mov rdi, rax	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x5edd	      0xe844fbffff	                call sym.scroll_line_len	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x5ee2	            0x39c3	                            cmp ebx, eax	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x5ee4	            0x7e77	                           jle 0x4005f9d	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x5ee6	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x5eea	            0x7420	                            je 0x4005f4c	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x5eec	    0x488b1d000000	            mov rbx, qword [0x04005f33] 	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x5ef3	      0xe8b0fbffff	          call sym.gui_find_longest_lnum	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x5ef8	        0x48894338	             mov qword [rbx + 0x38], rax	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x5efc	    0x488b05000000	            mov rax, qword [0x04005f43] 	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x5f03	    0xc74040000000	               mov dword [rax + 0x40], 0	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x5f0a	            0xeb51	                           jmp 0x4005f9d	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x5f0c	    0x488b05000000	            mov rax, qword [0x04005f53] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f13	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f17	    0x488b05000000	            mov rax, qword [0x04005f5e] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f1e	          0x4839c2	                            cmp rdx, rax	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f21	            0x7f3a	                            jg 0x4005f9d	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f23	    0x488b05000000	            mov rax, qword [0x04005f6a] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f2a	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f31	    0x488b05000000	            mov rax, qword [0x04005f78] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f38	          0x4839c2	                            cmp rdx, rax	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f3b	            0x7e20	                           jle 0x4005f9d	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f3d	    0x488b05000000	            mov rax, qword [0x04005f84] 	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f44	    0x488b15000000	            mov rdx, qword [0x04005f8b] 	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f4b	        0x48895038	             mov qword [rax + 0x38], rdx	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f4f	    0x488b05000000	            mov rax, qword [0x04005f96] 	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f56	    0xc74040000000	               mov dword [rax + 0x40], 0	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x5f5d	      0xe800000000	                          call 0x4005fa2	      4726	gui.c	FUNCTION_71	CALL_5
0x5f62	        0x4883c418	                           add rsp, 0x18	      4727	gui.c	FUNCTION_71
0x5f66	              0x5b	                                 pop rbx	      4727	gui.c	FUNCTION_71
0x5f67	              0x5d	                                 pop rbp	      4727	gui.c	FUNCTION_71
0x5f68	              0xc3	                                     ret	      4727	gui.c	FUNCTION_71
gui_mouse_moved	ELSE,0:IF,7:CALL,11:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	132
0x618a	              0x55	                                push rbp	      4849	gui.c	FUNCTION_79
0x618b	          0x4889e5	                            mov rbp, rsp	      4849	gui.c	FUNCTION_79
0x618e	              0x53	                                push rbx	      4849	gui.c	FUNCTION_79
0x618f	        0x4883ec38	                           sub rsp, 0x38	      4849	gui.c	FUNCTION_79
0x6193	          0x897dcc	             mov dword [rbp - 0x34], edi	      4849	gui.c	FUNCTION_79
0x6196	          0x8975c8	             mov dword [rbp - 0x38], esi	      4849	gui.c	FUNCTION_79
0x6199	    0x64488b042528	                mov rax, qword fs:[0x28]	      4849	gui.c	FUNCTION_79
0x61a2	        0x488945e8	             mov qword [rbp - 0x18], rax	      4849	gui.c	FUNCTION_79
0x61a6	            0x31c0	                            xor eax, eax	      4849	gui.c	FUNCTION_79
0x61a8	    0x8b0500000000	            mov eax, dword [0x040061ee] 	      4854	gui.c	FUNCTION_79	IF_1
0x61ae	            0x85c0	                           test eax, eax	      4854	gui.c	FUNCTION_79	IF_1
0x61b0	     0xf84b5010000	                            je 0x40063ab	      4854	gui.c	FUNCTION_79	IF_1
0x61b6	    0x8b0500000000	            mov eax, dword [0x040061fc] 	      4854	gui.c	FUNCTION_79	IF_1
0x61bc	            0x85c0	                           test eax, eax	      4854	gui.c	FUNCTION_79	IF_1
0x61be	     0xf85a7010000	                           jne 0x40063ab	      4854	gui.c	FUNCTION_79	IF_1
0x61c4	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4859	gui.c	FUNCTION_79	CALL_1
0x61c7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4859	gui.c	FUNCTION_79	CALL_1
0x61ca	            0x89d6	                            mov esi, edx	      4859	gui.c	FUNCTION_79	CALL_1
0x61cc	            0x89c7	                            mov edi, eax	      4859	gui.c	FUNCTION_79	CALL_1
0x61ce	      0xe837030000	                         call sym.xy2win	      4859	gui.c	FUNCTION_79	CALL_1
0x61d3	        0x488945d8	             mov qword [rbp - 0x28], rax	      4859	gui.c	FUNCTION_79	CALL_1
0x61d7	    0x8b0500000000	            mov eax, dword [0x0400621d] 	      4863	gui.c	FUNCTION_79	IF_2
0x61dd	            0x85c0	                           test eax, eax	      4863	gui.c	FUNCTION_79	IF_2
0x61df	     0xf8490010000	                            je 0x40063b5	      4863	gui.c	FUNCTION_79	IF_2
0x61e5	    0x8b0500000000	            mov eax, dword [0x0400622b] 	      4864	gui.c	FUNCTION_79	IF_2
0x61eb	            0x85c0	                           test eax, eax	      4864	gui.c	FUNCTION_79	IF_2
0x61ed	     0xf8582010000	                           jne 0x40063b5	      4864	gui.c	FUNCTION_79	IF_2
0x61f3	    0x8b0500000000	            mov eax, dword [0x04006239] 	      4865	gui.c	FUNCTION_79	IF_2
0x61f9	          0x83e011	                           and eax, 0x11	      4865	gui.c	FUNCTION_79	IF_2
0x61fc	            0x85c0	                           test eax, eax	      4865	gui.c	FUNCTION_79	IF_2
0x61fe	     0xf8471010000	                            je 0x40063b5	      4865	gui.c	FUNCTION_79	IF_2
0x6204	    0x8b0500000000	            mov eax, dword [0x0400624a] 	      4866	gui.c	FUNCTION_79	IF_2
0x620a	      0x3d01020000	                          cmp eax, 0x201	      4866	gui.c	FUNCTION_79	IF_2
0x620f	     0xf8460010000	                            je 0x40063b5	      4866	gui.c	FUNCTION_79	IF_2
0x6215	    0x8b0500000000	            mov eax, dword [0x0400625b] 	      4867	gui.c	FUNCTION_79	IF_2
0x621b	            0x85c0	                           test eax, eax	      4867	gui.c	FUNCTION_79	IF_2
0x621d	     0xf8552010000	                           jne 0x40063b5	      4867	gui.c	FUNCTION_79	IF_2
0x6223	    0x8b0500000000	            mov eax, dword [0x04006269] 	      4868	gui.c	FUNCTION_79	IF_2
0x6229	            0x85c0	                           test eax, eax	      4868	gui.c	FUNCTION_79	IF_2
0x622b	     0xf8544010000	                           jne 0x40063b5	      4868	gui.c	FUNCTION_79	IF_2
0x6231	    0x8b0500000000	            mov eax, dword [0x04006277] 	      4869	gui.c	FUNCTION_79	IF_2
0x6237	            0x85c0	                           test eax, eax	      4869	gui.c	FUNCTION_79	IF_2
0x6239	     0xf8436010000	                            je 0x40063b5	      4869	gui.c	FUNCTION_79	IF_2
0x623f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x6243	     0xf8825010000	                            js 0x40063ae	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x6249	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x624c	          0x4863d0	                         movsxd rdx, eax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x624f	    0x8b0500000000	            mov eax, dword [0x04006295] 	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x6255	          0x4863c8	                         movsxd rcx, eax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x6258	    0x488b05000000	            mov rax, qword [0x0400629f] 	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x625f	        0x480fafc1	                           imul rax, rcx	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x6263	          0x4839c2	                            cmp rdx, rax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x6266	     0xf8f02010000	                            jg 0x40063ae	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x626c	    0x488b05000000	            mov rax, qword [0x040062b3] 	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x6273	        0x483945d8	            cmp qword [rbp - 0x28], rax 	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x6277	     0xf84f4000000	                            je 0x40063b1	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x627d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x6282	     0xf84e9000000	                            je 0x40063b1	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x6288	    0x8b0500000000	            mov eax, dword [0x040062ce] 	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x628e	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x6291	            0x29c2	                            sub edx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x6293	            0x89d0	                            mov eax, edx	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x6295	    0x8b1d00000000	            mov ebx, dword [0x040062db] 	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x629b	              0x99	                                     cdq	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x629c	            0xf7fb	                                idiv ebx	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x629e	            0x89c3	                            mov ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x62a0	      0xe800000000	                          call 0x40062e5	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x62a5	            0x39c3	                            cmp ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x62a7	     0xf8cc7000000	                            jl 0x40063b4	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x62ad	    0x8b0500000000	            mov eax, dword [0x040062f3] 	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x62b3	            0x85c0	                           test eax, eax	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x62b5	            0x7415	                            je 0x400630c	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x62b7	        0xc645e01b	            mov byte [rbp - 0x20], 0x1b 	      4893	gui.c	FUNCTION_79	IF_2	IF_6
0x62bb	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x62bf	      0xbe01000000	                              mov esi, 1	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x62c4	          0x4889c7	                            mov rdi, rax	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x62c7	      0xe800000000	                          call 0x400630c	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x62cc	        0xc645e09b	            mov byte [rbp - 0x20], 0x9b 	      4896	gui.c	FUNCTION_79	IF_2
0x62d0	        0xc645e1fb	            mov byte [rbp - 0x1f], 0xfb 	      4897	gui.c	FUNCTION_79	IF_2
0x62d4	        0xc645e258	            mov byte [rbp - 0x1e], 0x58 	      4898	gui.c	FUNCTION_79	IF_2
0x62d8	        0xc645e300	                mov byte [rbp - 0x1d], 0	      4899	gui.c	FUNCTION_79	IF_2
0x62dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x62e0	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x62e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x62ea	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x62f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x62f4	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x62fa	             0x1c8	                            add eax, ecx	      4902	gui.c	FUNCTION_79	IF_2	CALL_7
0x62fc	             0x1c2	                            add edx, eax	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x62fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4901	gui.c	FUNCTION_79	IF_2
0x6302	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      4901	gui.c	FUNCTION_79	IF_2
0x6308	            0x85c0	                           test eax, eax	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x630a	            0x7412	                            je 0x400635e	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x630c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4901	gui.c	FUNCTION_79	IF_2
0x6310	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      4901	gui.c	FUNCTION_79	IF_2
0x6316	    0x8d8810270000	                 lea ecx, [rax + 0x2710]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x631c	            0xeb05	                           jmp 0x4006363	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x631e	      0xb9ffffffff	                     mov ecx, 0xffffffff	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x6323	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x6327	        0x4883c004	                              add rax, 4	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x632b	            0x89ce	                            mov esi, ecx	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x632d	          0x4889c7	                            mov rdi, rax	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x6330	      0xe8d0d2ffff	               call sym.fill_mouse_coord	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x6335	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x6339	      0xbe08000000	                              mov esi, 8	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x633e	          0x4889c7	                            mov rdi, rax	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x6341	      0xe800000000	                          call 0x4006386	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x6346	        0xc645e303	                mov byte [rbp - 0x1d], 3	      4905	gui.c	FUNCTION_79	IF_2
0x634a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x634e	      0xbe08000000	                              mov esi, 8	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x6353	          0x4889c7	                            mov rdi, rax	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x6356	      0xe800000000	                          call 0x400639b	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x635b	      0xe800000000	                          call 0x40063a0	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x6360	            0x85c0	                           test eax, eax	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x6362	            0x7411	                            je 0x40063b5	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x6364	      0xe800000000	                          call 0x40063a9	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x6369	            0xeb0a	                           jmp 0x40063b5	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x636b	              0x90	                                     nop	      4855	gui.c	FUNCTION_79	IF_1
0x636c	            0xeb07	                           jmp 0x40063b5	      4855	gui.c	FUNCTION_79	IF_1
0x636e	              0x90	                                     nop	      4873	gui.c	FUNCTION_79	IF_2	IF_3
0x636f	            0xeb04	                           jmp 0x40063b5	      4873	gui.c	FUNCTION_79	IF_2	IF_3
0x6371	              0x90	                                     nop	      4878	gui.c	FUNCTION_79	IF_2	IF_4
0x6372	            0xeb01	                           jmp 0x40063b5	      4878	gui.c	FUNCTION_79	IF_2	IF_4
0x6374	              0x90	                                     nop	      4882	gui.c	FUNCTION_79	IF_2	IF_5
0x6375	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4913	gui.c	FUNCTION_79
0x6379	    0x644833042528	                xor rax, qword fs:[0x28]	      4913	gui.c	FUNCTION_79
0x6382	            0x7405	                            je 0x40063c9	      4913	gui.c	FUNCTION_79
0x6384	      0xe800000000	                          call 0x40063c9	      4913	gui.c	FUNCTION_79
0x6389	        0x4883c438	                           add rsp, 0x38	      4913	gui.c	FUNCTION_79
0x638d	              0x5b	                                 pop rbx	      4913	gui.c	FUNCTION_79
0x638e	              0x5d	                                 pop rbp	      4913	gui.c	FUNCTION_79
0x638f	              0xc3	                                     ret	      4913	gui.c	FUNCTION_79
ex_gui	ELSE,0:IF,3:CALL,7:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	71
0x66dc	              0x55	                                push rbp	      4989	gui.c	FUNCTION_82
0x66dd	          0x4889e5	                            mov rbp, rsp	      4989	gui.c	FUNCTION_82
0x66e0	        0x4883ec20	                           sub rsp, 0x20	      4989	gui.c	FUNCTION_82
0x66e4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4989	gui.c	FUNCTION_82
0x66e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4990	gui.c	FUNCTION_82
0x66ec	          0x488b00	                    mov rax, qword [rax]	      4990	gui.c	FUNCTION_82
0x66ef	        0x488945f8	                mov qword [rbp - 8], rax	      4990	gui.c	FUNCTION_82
0x66f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4997	gui.c	FUNCTION_82	IF_1
0x66f7	           0xfb600	                   movzx eax, byte [rax]	      4997	gui.c	FUNCTION_82	IF_1
0x66fa	            0x3c2d	                            cmp al, 0x2d	      4997	gui.c	FUNCTION_82	IF_1
0x66fc	     0xf8581000000	                           jne 0x40067c3	      4997	gui.c	FUNCTION_82	IF_1
0x6702	        0x488b45f8	                mov rax, qword [rbp - 8]	      4998	gui.c	FUNCTION_82	IF_1
0x6706	        0x4883c001	                              add rax, 1	      4998	gui.c	FUNCTION_82	IF_1
0x670a	           0xfb600	                   movzx eax, byte [rax]	      4998	gui.c	FUNCTION_82	IF_1
0x670d	            0x3c66	                            cmp al, 0x66	      4998	gui.c	FUNCTION_82	IF_1
0x670f	            0x740f	                            je 0x4006760	      4998	gui.c	FUNCTION_82	IF_1
0x6711	        0x488b45f8	                mov rax, qword [rbp - 8]	      4998	gui.c	FUNCTION_82	IF_1
0x6715	        0x4883c001	                              add rax, 1	      4998	gui.c	FUNCTION_82	IF_1
0x6719	           0xfb600	                   movzx eax, byte [rax]	      4998	gui.c	FUNCTION_82	IF_1
0x671c	            0x3c62	                            cmp al, 0x62	      4998	gui.c	FUNCTION_82	IF_1
0x671e	            0x7563	                           jne 0x40067c3	      4998	gui.c	FUNCTION_82	IF_1
0x6720	        0x488b45f8	                mov rax, qword [rbp - 8]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x6724	        0x4883c002	                              add rax, 2	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x6728	           0xfb600	                   movzx eax, byte [rax]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x672b	            0x84c0	                             test al, al	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x672d	            0x741e	                            je 0x400678d	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x672f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x6733	        0x4883c002	                              add rax, 2	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x6737	           0xfb600	                   movzx eax, byte [rax]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x673a	            0x3c20	                            cmp al, 0x20	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x673c	            0x740f	                            je 0x400678d	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x673e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x6742	        0x4883c002	                              add rax, 2	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x6746	           0xfb600	                   movzx eax, byte [rax]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x6749	            0x3c09	                               cmp al, 9	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x674b	            0x7536	                           jne 0x40067c3	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x674d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5001	gui.c	FUNCTION_82	IF_1
0x6751	        0x4883c001	                              add rax, 1	      5001	gui.c	FUNCTION_82	IF_1
0x6755	           0xfb600	                   movzx eax, byte [rax]	      5001	gui.c	FUNCTION_82	IF_1
0x6758	            0x3c62	                            cmp al, 0x62	      5001	gui.c	FUNCTION_82	IF_1
0x675a	           0xf94c0	                                 sete al	      5001	gui.c	FUNCTION_82	IF_1
0x675d	           0xfb6c0	                           movzx eax, al	      5001	gui.c	FUNCTION_82	IF_1
0x6760	    0x890500000000	            mov dword [0x040067a6], eax 	      5001	gui.c	FUNCTION_82	IF_1
0x6766	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x676a	          0x488b00	                    mov rax, qword [rax]	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x676d	        0x4883c002	                              add rax, 2	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x6771	          0x4889c7	                            mov rdi, rax	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x6774	      0xe800000000	                          call 0x40067b9	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x6779	          0x4889c2	                            mov rdx, rax	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x677c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x6780	          0x488910	                    mov qword [rax], rdx	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x6783	    0x8b0500000000	            mov eax, dword [0x040067c9] 	      5004	gui.c	FUNCTION_82	IF_2
0x6789	            0x85c0	                           test eax, eax	      5004	gui.c	FUNCTION_82	IF_2
0x678b	            0x750f	                           jne 0x40067dc	      5004	gui.c	FUNCTION_82	IF_2
0x678d	      0xe800000000	                          call 0x40067d2	      5008	gui.c	FUNCTION_82	IF_2	CALL_3
0x6792	      0xe800000000	                          call 0x40067d7	      5009	gui.c	FUNCTION_82	IF_2	CALL_4
0x6797	      0xe800000000	                          call 0x40067dc	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x679c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x67a0	          0x488b00	                    mov rax, qword [rax]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x67a3	           0xfb600	                   movzx eax, byte [rax]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x67a6	           0xfb6c0	                           movzx eax, al	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x67a9	            0x89c7	                            mov edi, eax	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x67ab	      0xe800000000	                          call 0x40067f0	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x67b0	            0x85c0	                           test eax, eax	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x67b2	            0x750c	                           jne 0x4006800	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x67b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5015	gui.c	FUNCTION_82	CALL_7
0x67b8	          0x4889c7	                            mov rdi, rax	      5015	gui.c	FUNCTION_82	CALL_7
0x67bb	      0xe800000000	                          call 0x4006800	      5015	gui.c	FUNCTION_82	CALL_7
0x67c0	              0x90	                                     nop	      5016	gui.c	FUNCTION_82
0x67c1	              0xc9	                                   leave	      5016	gui.c	FUNCTION_82
0x67c2	              0xc3	                                     ret	      5016	gui.c	FUNCTION_82
gui_start	ELSE,1:IF,4:CALL,15:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	72
0x0	              0x55	                                push rbp	        76	gui.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        76	gui.c	FUNCTION_1
0x4	        0x4883ec10	                           sub rsp, 0x10	        76	gui.c	FUNCTION_1
0x8	    0x488b05000000	            mov rax, qword [0x0400004f] 	        80	gui.c	FUNCTION_1	CALL_1
0xf	          0x4889c7	                            mov rdi, rax	        80	gui.c	FUNCTION_1	CALL_1
0x12	      0xe800000000	                          call 0x4000057	        80	gui.c	FUNCTION_1	CALL_1
0x17	        0x488945f8	                mov qword [rbp - 8], rax	        80	gui.c	FUNCTION_1	CALL_1
0x1b	      0xbf00000000	                              mov edi, 0	        82	gui.c	FUNCTION_1	CALL_2
0x20	      0xe800000000	                          call 0x4000065	        82	gui.c	FUNCTION_1	CALL_2
0x25	    0x8b0500000000	            mov eax, dword [0x0400006b] 	        83	gui.c	FUNCTION_1	IF_1
0x2b	            0x85c0	                           test eax, eax	        83	gui.c	FUNCTION_1	IF_1
0x2d	            0x7405	                            je 0x4000074	        83	gui.c	FUNCTION_1	IF_1
0x2f	      0xe800000000	                          call 0x4000074	        84	gui.c	FUNCTION_1	CALL_3
0x34	    0xc70500000000	               mov dword [0x0400007e], 0	        85	gui.c	FUNCTION_1
0x3e	    0x8b0500000000	            mov eax, dword [0x04000084] 	        87	gui.c	FUNCTION_1
0x44	          0x83c001	                              add eax, 1	        87	gui.c	FUNCTION_1
0x47	    0x890500000000	            mov dword [0x0400008d], eax 	        87	gui.c	FUNCTION_1
0x4d	    0x8b0500000000	            mov eax, dword [0x04000093] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x53	            0x85c0	                           test eax, eax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x55	            0x7434	                            je 0x40000cb	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x57	    0x488b05000000	            mov rax, qword [0x0400009e] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x5e	      0xbe66000000	                           mov esi, 0x66	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x63	          0x4889c7	                            mov rdi, rax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x66	      0xe800000000	                          call 0x40000ab	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x6b	          0x4885c0	                           test rax, rax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x6e	            0x751b	                           jne 0x40000cb	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x70	    0x8b0500000000	            mov eax, dword [0x040000b6] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x76	          0x83f801	                              cmp eax, 1	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x79	            0x7f10	                            jg 0x40000cb	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x7b	      0xe800000000	                          call 0x40000c0	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x80	            0x85c0	                           test eax, eax	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x82	            0x7507	                           jne 0x40000cb	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x84	      0xe84a010000	                    call sym.gui_do_fork	       104	gui.c	FUNCTION_1	IF_2	CALL_6
0x89	            0xeb19	                           jmp 0x40000e4	       104	gui.c	FUNCTION_1	IF_2	CALL_6
0x8b	      0xe800000000	                          call 0x40000d0	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x90	          0x83f801	                              cmp eax, 1	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x93	            0x740a	                            je 0x40000df	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x95	      0xbf01000000	                              mov edi, 1	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x9a	      0xe800000000	                          call 0x40000df	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x9f	      0xe87e000000	              call sym.gui_attempt_start	       115	gui.c	FUNCTION_1	ELSE_1	CALL_9
0xa4	    0x8b0500000000	            mov eax, dword [0x040000ea] 	       118	gui.c	FUNCTION_1	IF_4
0xaa	            0x85c0	                           test eax, eax	       118	gui.c	FUNCTION_1	IF_4
0xac	            0x751b	                           jne 0x4000109	       118	gui.c	FUNCTION_1	IF_4
0xae	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0xb2	          0x4889c7	                            mov rdi, rax	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0xb5	      0xe800000000	                          call 0x40000fa	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0xba	      0xbf02000000	                              mov edi, 2	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0xbf	      0xe800000000	                          call 0x4000104	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0xc4	      0xe800000000	                          call 0x4000109	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0xc9	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	gui.c	FUNCTION_1	CALL_13
0xcd	          0x4889c7	                            mov rdi, rax	       137	gui.c	FUNCTION_1	CALL_13
0xd0	      0xe800000000	                          call 0x4000115	       137	gui.c	FUNCTION_1	CALL_13
0xd5	      0xe800000000	                          call 0x400011a	       141	gui.c	FUNCTION_1	CALL_14
0xda	    0x488b15000000	            mov rdx, qword [0x04000121] 	       142	gui.c	FUNCTION_1	CALL_15
0xe1	    0x8b0500000000	            mov eax, dword [0x04000127] 	       142	gui.c	FUNCTION_1	CALL_15
0xe7	            0x85c0	                           test eax, eax	       142	gui.c	FUNCTION_1	CALL_15
0xe9	            0x7407	                            je 0x4000132	       142	gui.c	FUNCTION_1	CALL_15
0xeb	      0xb837000000	                           mov eax, 0x37	       142	gui.c	FUNCTION_1	CALL_15
0xf0	            0xeb05	                           jmp 0x4000137	       142	gui.c	FUNCTION_1	CALL_15
0xf2	      0xb838000000	                           mov eax, 0x38	       142	gui.c	FUNCTION_1	CALL_15
0xf7	          0x4989d0	                             mov r8, rdx	       142	gui.c	FUNCTION_1	CALL_15
0xfa	      0xb900000000	                              mov ecx, 0	       142	gui.c	FUNCTION_1	CALL_15
0xff	      0xba00000000	                              mov edx, 0	       142	gui.c	FUNCTION_1	CALL_15
0x104	      0xbe00000000	                              mov esi, 0	       142	gui.c	FUNCTION_1	CALL_15
0x109	            0x89c7	                            mov edi, eax	       142	gui.c	FUNCTION_1	CALL_15
0x10b	      0xe800000000	                          call 0x4000150	       142	gui.c	FUNCTION_1	CALL_15
0x110	    0x8b0500000000	            mov eax, dword [0x04000156] 	       144	gui.c	FUNCTION_1
0x116	          0x83e801	                              sub eax, 1	       144	gui.c	FUNCTION_1
0x119	    0x890500000000	            mov dword [0x0400015f], eax 	       144	gui.c	FUNCTION_1
0x11f	              0x90	                                     nop	       145	gui.c	FUNCTION_1
0x120	              0xc9	                                   leave	       145	gui.c	FUNCTION_1
0x121	              0xc3	                                     ret	       145	gui.c	FUNCTION_1
gui_read_child_pipe	ELSE,0:IF,2:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	40
0x361	              0x55	                                push rbp	       329	gui.c	FUNCTION_4
0x362	          0x4889e5	                            mov rbp, rsp	       329	gui.c	FUNCTION_4
0x365	        0x4883ec40	                           sub rsp, 0x40	       329	gui.c	FUNCTION_4
0x369	          0x897dcc	             mov dword [rbp - 0x34], edi	       329	gui.c	FUNCTION_4
0x36c	    0x64488b042528	                mov rax, qword fs:[0x28]	       329	gui.c	FUNCTION_4
0x375	        0x488945f8	                mov qword [rbp - 8], rax	       329	gui.c	FUNCTION_4
0x379	            0x31c0	                            xor eax, eax	       329	gui.c	FUNCTION_4
0x37b	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       334	gui.c	FUNCTION_4	CALL_1
0x37f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       334	gui.c	FUNCTION_4	CALL_1
0x382	      0xba09000000	                              mov edx, 9	       334	gui.c	FUNCTION_4	CALL_1
0x387	          0x4889ce	                            mov rsi, rcx	       334	gui.c	FUNCTION_4	CALL_1
0x38a	            0x89c7	                            mov edi, eax	       334	gui.c	FUNCTION_4	CALL_1
0x38c	      0xe800000000	                          call 0x40003d1	       334	gui.c	FUNCTION_4	CALL_1
0x391	        0x488945d8	             mov qword [rbp - 0x28], rax	       334	gui.c	FUNCTION_4	CALL_1
0x395	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       336	gui.c	FUNCTION_4	CALL_2
0x398	            0x89c7	                            mov edi, eax	       336	gui.c	FUNCTION_4	CALL_2
0x39a	      0xe800000000	                          call 0x40003df	       336	gui.c	FUNCTION_4	CALL_2
0x39f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       337	gui.c	FUNCTION_4	IF_1
0x3a4	            0x7907	                           jns 0x40003ed	       337	gui.c	FUNCTION_4	IF_1
0x3a6	      0xb800000000	                              mov eax, 0	       338	gui.c	FUNCTION_4	IF_1
0x3ab	            0xeb2f	                           jmp 0x400041c	       338	gui.c	FUNCTION_4	IF_1
0x3ad	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       339	gui.c	FUNCTION_4
0x3b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	gui.c	FUNCTION_4
0x3b5	          0x4801d0	                            add rax, rdx	       339	gui.c	FUNCTION_4
0x3b8	          0xc60000	                       mov byte [rax], 0	       339	gui.c	FUNCTION_4
0x3bb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x3bf	      0xbe00000000	                              mov esi, 0	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x3c4	          0x4889c7	                            mov rdi, rax	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x3c7	      0xe800000000	                          call 0x400040c	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x3cc	            0x85c0	                           test eax, eax	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x3ce	            0x7507	                           jne 0x4000417	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x3d0	      0xb801000000	                              mov eax, 1	       341	gui.c	FUNCTION_4	IF_2
0x3d5	            0xeb05	                           jmp 0x400041c	       341	gui.c	FUNCTION_4	IF_2
0x3d7	      0xb802000000	                              mov eax, 2	       342	gui.c	FUNCTION_4
0x3dc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       343	gui.c	FUNCTION_4
0x3e0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       343	gui.c	FUNCTION_4
0x3e9	            0x7405	                            je 0x4000430	       343	gui.c	FUNCTION_4
0x3eb	      0xe800000000	                          call 0x4000430	       343	gui.c	FUNCTION_4
0x3f0	              0xc9	                                   leave	       343	gui.c	FUNCTION_4
0x3f1	              0xc3	                                     ret	       343	gui.c	FUNCTION_4
send_tabline_menu_event	ELSE,0:IF,1:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	34
0x4a1a	              0x55	                                push rbp	      3857	gui.c	FUNCTION_59
0x4a1b	          0x4889e5	                            mov rbp, rsp	      3857	gui.c	FUNCTION_59
0x4a1e	        0x4883ec20	                           sub rsp, 0x20	      3857	gui.c	FUNCTION_59
0x4a22	          0x897dec	             mov dword [rbp - 0x14], edi	      3857	gui.c	FUNCTION_59
0x4a25	          0x8975e8	             mov dword [rbp - 0x18], esi	      3857	gui.c	FUNCTION_59
0x4a28	    0x64488b042528	                mov rax, qword fs:[0x28]	      3857	gui.c	FUNCTION_59
0x4a31	        0x488945f8	                mov qword [rbp - 8], rax	      3857	gui.c	FUNCTION_59
0x4a35	            0x31c0	                            xor eax, eax	      3857	gui.c	FUNCTION_59
0x4a37	    0x8b0500000000	            mov eax, dword [0x04004a7d] 	      3861	gui.c	FUNCTION_59	IF_1
0x4a3d	            0x85c0	                           test eax, eax	      3861	gui.c	FUNCTION_59	IF_1
0x4a3f	            0x753c	                           jne 0x4004abd	      3861	gui.c	FUNCTION_59	IF_1
0x4a41	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      3864	gui.c	FUNCTION_59
0x4a45	        0xc645f1ef	              mov byte [rbp - 0xf], 0xef	      3865	gui.c	FUNCTION_59
0x4a49	        0xc645f258	              mov byte [rbp - 0xe], 0x58	      3866	gui.c	FUNCTION_59
0x4a4d	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3867	gui.c	FUNCTION_59	CALL_1
0x4a51	      0xbe03000000	                              mov esi, 3	      3867	gui.c	FUNCTION_59	CALL_1
0x4a56	          0x4889c7	                            mov rdi, rax	      3867	gui.c	FUNCTION_59	CALL_1
0x4a59	      0xe800000000	                          call 0x4004a9e	      3867	gui.c	FUNCTION_59	CALL_1
0x4a5e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3868	gui.c	FUNCTION_59
0x4a61	          0x8845f0	               mov byte [rbp - 0x10], al	      3868	gui.c	FUNCTION_59
0x4a64	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3869	gui.c	FUNCTION_59
0x4a67	          0x8845f1	                mov byte [rbp - 0xf], al	      3869	gui.c	FUNCTION_59
0x4a6a	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3870	gui.c	FUNCTION_59	CALL_2
0x4a6e	      0xbe02000000	                              mov esi, 2	      3870	gui.c	FUNCTION_59	CALL_2
0x4a73	          0x4889c7	                            mov rdi, rax	      3870	gui.c	FUNCTION_59	CALL_2
0x4a76	      0xe800000000	                          call 0x4004abb	      3870	gui.c	FUNCTION_59	CALL_2
0x4a7b	            0xeb01	                           jmp 0x4004abe	      3870	gui.c	FUNCTION_59	CALL_2
0x4a7d	              0x90	                                     nop	      3862	gui.c	FUNCTION_59	IF_1
0x4a7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3871	gui.c	FUNCTION_59
0x4a82	    0x644833042528	                xor rax, qword fs:[0x28]	      3871	gui.c	FUNCTION_59
0x4a8b	            0x7405	                            je 0x4004ad2	      3871	gui.c	FUNCTION_59
0x4a8d	      0xe800000000	                          call 0x4004ad2	      3871	gui.c	FUNCTION_59
0x4a92	              0xc9	                                   leave	      3871	gui.c	FUNCTION_59
0x4a93	              0xc3	                                     ret	      3871	gui.c	FUNCTION_59
gui_inchar	ELSE,0:IF,1:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	29
0x35ae	              0x55	                                push rbp	      3045	gui.c	FUNCTION_48
0x35af	          0x4889e5	                            mov rbp, rsp	      3045	gui.c	FUNCTION_48
0x35b2	        0x4883ec20	                           sub rsp, 0x20	      3045	gui.c	FUNCTION_48
0x35b6	        0x48897df8	                mov qword [rbp - 8], rdi	      3045	gui.c	FUNCTION_48
0x35ba	          0x8975f4	              mov dword [rbp - 0xc], esi	      3045	gui.c	FUNCTION_48
0x35bd	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3045	gui.c	FUNCTION_48
0x35c1	          0x894df0	             mov dword [rbp - 0x10], ecx	      3045	gui.c	FUNCTION_48
0x35c4	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x35c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x35cb	            0x89d6	                            mov esi, edx	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x35cd	          0x4889c7	                            mov rdi, rax	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x35d0	      0xe800000000	                          call 0x4003615	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x35d5	            0x85c0	                           test eax, eax	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x35d7	            0x7425	                            je 0x400363e	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x35d9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x35dc	            0x89c7	                            mov edi, eax	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x35de	      0xe800000000	                          call 0x4003623	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x35e3	            0x85c0	                           test eax, eax	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x35e5	            0x7517	                           jne 0x400363e	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x35e7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3048	gui.c	FUNCTION_48	CALL_3
0x35ea	          0x4863d0	                         movsxd rdx, eax	      3048	gui.c	FUNCTION_48	CALL_3
0x35ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      3048	gui.c	FUNCTION_48	CALL_3
0x35f1	          0x4889d6	                            mov rsi, rdx	      3048	gui.c	FUNCTION_48	CALL_3
0x35f4	          0x4889c7	                            mov rdi, rax	      3048	gui.c	FUNCTION_48	CALL_3
0x35f7	      0xe800000000	                          call 0x400363c	      3048	gui.c	FUNCTION_48	CALL_3
0x35fc	            0xeb05	                           jmp 0x4003643	      3048	gui.c	FUNCTION_48	CALL_3
0x35fe	      0xb800000000	                              mov eax, 0	      3049	gui.c	FUNCTION_48
0x3603	              0xc9	                                   leave	      3050	gui.c	FUNCTION_48
0x3604	              0xc3	                                     ret	      3050	gui.c	FUNCTION_48
gui_menu_cb	ELSE,0:IF,1:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	34
0x3e88	              0x55	                                push rbp	      3413	gui.c	FUNCTION_52
0x3e89	          0x4889e5	                            mov rbp, rsp	      3413	gui.c	FUNCTION_52
0x3e8c	        0x4883ec20	                           sub rsp, 0x20	      3413	gui.c	FUNCTION_52
0x3e90	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3413	gui.c	FUNCTION_52
0x3e94	    0x64488b042528	                mov rax, qword fs:[0x28]	      3413	gui.c	FUNCTION_52
0x3e9d	        0x488945f8	                mov qword [rbp - 8], rax	      3413	gui.c	FUNCTION_52
0x3ea1	            0x31c0	                            xor eax, eax	      3413	gui.c	FUNCTION_52
0x3ea3	    0x8b0500000000	            mov eax, dword [0x04003ee9] 	      3417	gui.c	FUNCTION_52	IF_1
0x3ea9	            0x85c0	                           test eax, eax	      3417	gui.c	FUNCTION_52	IF_1
0x3eab	            0x7543	                           jne 0x4003f30	      3417	gui.c	FUNCTION_52	IF_1
0x3ead	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      3420	gui.c	FUNCTION_52
0x3eb1	        0xc645f1fa	              mov byte [rbp - 0xf], 0xfa	      3421	gui.c	FUNCTION_52
0x3eb5	        0xc645f258	              mov byte [rbp - 0xe], 0x58	      3422	gui.c	FUNCTION_52
0x3eb9	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3423	gui.c	FUNCTION_52	CALL_1
0x3ebd	      0xbe03000000	                              mov esi, 3	      3423	gui.c	FUNCTION_52	CALL_1
0x3ec2	          0x4889c7	                            mov rdi, rax	      3423	gui.c	FUNCTION_52	CALL_1
0x3ec5	      0xe800000000	                          call 0x4003f0a	      3423	gui.c	FUNCTION_52	CALL_1
0x3eca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3424	gui.c	FUNCTION_52	CALL_2
0x3ece	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      3424	gui.c	FUNCTION_52	CALL_2
0x3ed2	          0x4889d6	                            mov rsi, rdx	      3424	gui.c	FUNCTION_52	CALL_2
0x3ed5	          0x4889c7	                            mov rdi, rax	      3424	gui.c	FUNCTION_52	CALL_2
0x3ed8	      0xe800000000	                          call 0x4003f1d	      3424	gui.c	FUNCTION_52	CALL_2
0x3edd	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3425	gui.c	FUNCTION_52	CALL_3
0x3ee1	      0xbe08000000	                              mov esi, 8	      3425	gui.c	FUNCTION_52	CALL_3
0x3ee6	          0x4889c7	                            mov rdi, rax	      3425	gui.c	FUNCTION_52	CALL_3
0x3ee9	      0xe800000000	                          call 0x4003f2e	      3425	gui.c	FUNCTION_52	CALL_3
0x3eee	            0xeb01	                           jmp 0x4003f31	      3425	gui.c	FUNCTION_52	CALL_3
0x3ef0	              0x90	                                     nop	      3418	gui.c	FUNCTION_52	IF_1
0x3ef1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3426	gui.c	FUNCTION_52
0x3ef5	    0x644833042528	                xor rax, qword fs:[0x28]	      3426	gui.c	FUNCTION_52
0x3efe	            0x7405	                            je 0x4003f45	      3426	gui.c	FUNCTION_52
0x3f00	      0xe800000000	                          call 0x4003f45	      3426	gui.c	FUNCTION_52
0x3f05	              0xc9	                                   leave	      3426	gui.c	FUNCTION_52
0x3f06	              0xc3	                                     ret	      3426	gui.c	FUNCTION_52
display_errors	ELSE,1:IF,4:CALL,9:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	70
0x68a0	              0x55	                                push rbp	      5078	gui.c	FUNCTION_86
0x68a1	          0x4889e5	                            mov rbp, rsp	      5078	gui.c	FUNCTION_86
0x68a4	              0x53	                                push rbx	      5078	gui.c	FUNCTION_86
0x68a5	        0x4883ec18	                           sub rsp, 0x18	      5078	gui.c	FUNCTION_86
0x68a9	      0xbf02000000	                              mov edi, 2	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x68ae	      0xe800000000	                          call 0x40068f3	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x68b3	            0x85c0	                           test eax, eax	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x68b5	            0x7414	                            je 0x400690b	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x68b7	    0x488b05000000	            mov rax, qword [0x040068fe] 	      5082	gui.c	FUNCTION_86	CALL_2
0x68be	          0x4889c7	                            mov rdi, rax	      5082	gui.c	FUNCTION_86	CALL_2
0x68c1	      0xe800000000	                          call 0x4006906	      5082	gui.c	FUNCTION_86	CALL_2
0x68c6	      0xe9eb000000	                           jmp 0x40069f6	      5098	gui.c	FUNCTION_86
0x68cb	    0x488b05000000	            mov rax, qword [0x04006912] 	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x68d2	          0x4885c0	                           test rax, rax	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x68d5	     0xf84db000000	                            je 0x40069f6	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x68db	    0x488b05000000	            mov rax, qword [0x04006922] 	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x68e2	        0x488945e8	             mov qword [rbp - 0x18], rax	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x68e6	      0xe9b2000000	                           jmp 0x40069dd	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x68eb	      0xe800000000	                          call 0x4006930	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x68f0	          0x488b10	                    mov rdx, qword [rax]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x68f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x68f7	           0xfb600	                   movzx eax, byte [rax]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x68fa	           0xfb6c0	                           movzx eax, al	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x68fd	          0x4801c0	                            add rax, rax	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x6900	          0x4801d0	                            add rax, rdx	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x6903	           0xfb700	                   movzx eax, word [rax]	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x6906	           0xfb7c0	                           movzx eax, ax	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x6909	      0x2500200000	                         and eax, 0x2000	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x690e	            0x85c0	                           test eax, eax	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x6910	     0xf8582000000	                           jne 0x40069d8	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x6916	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x691a	          0x4889c7	                            mov rdi, rax	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x691d	      0xe800000000	                          call 0x4006962	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x6922	    0x483dd0070000	                          cmp rax, 0x7d0	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x6928	            0x7628	                           jbe 0x4006992	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x692a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x692e	    0x4805c2070000	                          add rax, 0x7c2	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x6934	    0x48b92e2e2e28	          movabs rcx, 0x6e757274282e2e2e	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x693e	          0x488908	                    mov qword [rax], rcx	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x6941	    0xc74008636174	        mov dword [rax + 8], 0x65746163 	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x6948	    0x66c7400c6429	           mov word [rax + 0xc], 0x2964 	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x694e	        0xc6400e00	                 mov byte [rax + 0xe], 0	      5091	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_5
0x6952	      0xbf00000000	                              mov edi, 0	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x6957	      0xe800000000	                          call 0x400699c	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x695c	          0x4889c3	                            mov rbx, rax	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x695f	      0xbf00000000	                              mov edi, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6964	      0xe800000000	                          call 0x40069a9	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6969	          0x4889c6	                            mov rsi, rax	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x696c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6970	        0x4883ec08	                              sub rsp, 8	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6974	            0x6a00	                                  push 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6976	    0x41b900000000	                              mov r9d, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x697c	    0x41b801000000	                              mov r8d, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6982	          0x4889d9	                            mov rcx, rbx	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6985	          0x4889c2	                            mov rdx, rax	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6988	      0xbf01000000	                              mov edi, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x698d	      0xe800000000	                          call 0x40069d2	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6992	        0x4883c410	                           add rsp, 0x10	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x6996	            0xeb14	                           jmp 0x40069ec	      5094	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3
0x6998	      0x488345e801	               add qword [rbp - 0x18], 1	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x699d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x69a1	           0xfb600	                   movzx eax, byte [rax]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x69a4	            0x84c0	                             test al, al	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x69a6	     0xf853fffffff	                           jne 0x400692b	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x69ac	      0xbf00000000	                              mov edi, 0	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x69b1	      0xe800000000	                          call 0x40069f6	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x69b6	              0x90	                                     nop	      5098	gui.c	FUNCTION_86
0x69b7	        0x488b5df8	                mov rbx, qword [rbp - 8]	      5098	gui.c	FUNCTION_86
0x69bb	              0xc9	                                   leave	      5098	gui.c	FUNCTION_86
0x69bc	              0xc3	                                     ret	      5098	gui.c	FUNCTION_86
gui_can_update_cursor	ELSE,0:IF,0:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	6
0x2378	              0x55	                                push rbp	      2004	gui.c	FUNCTION_32
0x2379	          0x4889e5	                            mov rbp, rsp	      2004	gui.c	FUNCTION_32
0x237c	    0xc70500000000	               mov dword [0x040023c6], 1	      2005	gui.c	FUNCTION_32
0x2386	              0x90	                                     nop	      2008	gui.c	FUNCTION_32
0x2387	              0x5d	                                 pop rbp	      2008	gui.c	FUNCTION_32
0x2388	              0xc3	                                     ret	      2008	gui.c	FUNCTION_32
gui_handle_drop	ELSE,4:IF,11:CALL,27:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	166
0x737e	              0x55	                                push rbp	      5435	gui.c	FUNCTION_93
0x737f	          0x4889e5	                            mov rbp, rsp	      5435	gui.c	FUNCTION_93
0x7382	        0x4883ec30	                           sub rsp, 0x30	      5435	gui.c	FUNCTION_93
0x7386	          0x897dec	             mov dword [rbp - 0x14], edi	      5435	gui.c	FUNCTION_93
0x7389	          0x8975e8	             mov dword [rbp - 0x18], esi	      5435	gui.c	FUNCTION_93
0x738c	          0x8955e4	             mov dword [rbp - 0x1c], edx	      5435	gui.c	FUNCTION_93
0x738f	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      5435	gui.c	FUNCTION_93
0x7393	        0x448945e0	             mov dword [rbp - 0x20], r8d	      5435	gui.c	FUNCTION_93
0x7397	    0x8b0500000000	            mov eax, dword [0x040073dd] 	      5445	gui.c	FUNCTION_93	IF_1
0x739d	            0x85c0	                           test eax, eax	      5445	gui.c	FUNCTION_93	IF_1
0x739f	     0xf8542020000	                           jne 0x4007627	      5445	gui.c	FUNCTION_93	IF_1
0x73a5	    0xc70500000000	               mov dword [0x040073ef], 1	      5447	gui.c	FUNCTION_93
0x73af	    0x8b0500000000	            mov eax, dword [0x040073f5] 	      5453	gui.c	FUNCTION_93	IF_2
0x73b5	          0x83e008	                              and eax, 8	      5453	gui.c	FUNCTION_93	IF_2
0x73b8	            0x85c0	                           test eax, eax	      5453	gui.c	FUNCTION_93	IF_2
0x73ba	     0xf84e9000000	                            je 0x40074e9	      5453	gui.c	FUNCTION_93	IF_2
0x73c0	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x73c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x73c7	            0x89d6	                            mov esi, edx	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x73c9	          0x4889c7	                            mov rdi, rax	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x73cc	      0xe800000000	                          call 0x4007411	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x73d1	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x73d8	      0xe9af000000	                           jmp 0x40074cc	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x73dd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x73e0	            0x4898	                                    cdqe	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x73e2	    0x488d14c50000	                        lea rdx, [rax*8]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x73ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x73ee	          0x4801d0	                            add rax, rdx	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x73f1	          0x488b00	                    mov rax, qword [rax]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x73f4	          0x4885c0	                           test rax, rax	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x73f7	     0xf848b000000	                            je 0x40074c8	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x73fd	        0x837df400	                cmp dword [rbp - 0xc], 0	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x7401	            0x7e0f	                           jle 0x4007452	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x7403	      0xbe01000000	                              mov esi, 1	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x7408	      0xbf00000000	                              mov edi, 0	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x740d	      0xe800000000	                          call 0x4007452	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x7412	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x7415	            0x4898	                                    cdqe	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x7417	    0x488d14c50000	                        lea rdx, [rax*8]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x741f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x7423	          0x4801d0	                            add rax, rdx	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x7426	          0x488b00	                    mov rax, qword [rax]	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x7429	      0xbe00000000	                              mov esi, 0	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x742e	          0x4889c7	                            mov rdi, rax	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x7431	      0xe800000000	                          call 0x4007476	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x7436	        0x488945f8	                mov qword [rbp - 8], rax	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x743a	      0x48837df800	                  cmp qword [rbp - 8], 0	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x743f	            0x741c	                            je 0x400749d	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x7441	        0x488b45f8	                mov rax, qword [rbp - 8]	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x7445	          0x4889c7	                            mov rdi, rax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x7448	      0xe800000000	                          call 0x400748d	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x744d	            0x89c2	                            mov edx, eax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x744f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x7453	            0x89d6	                            mov esi, edx	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x7455	          0x4889c7	                            mov rdi, rax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x7458	      0xe800000000	                          call 0x400749d	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x745d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x7461	          0x4889c7	                            mov rdi, rax	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x7464	      0xe800000000	                          call 0x40074a9	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x7469	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x746c	            0x4898	                                    cdqe	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x746e	    0x488d14c50000	                        lea rdx, [rax*8]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x7476	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x747a	          0x4801d0	                            add rax, rdx	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x747d	          0x488b00	                    mov rax, qword [rax]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x7480	          0x4889c7	                            mov rdi, rax	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x7483	      0xe800000000	                          call 0x40074c8	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x7488	        0x8345f401	                add dword [rbp - 0xc], 1	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x748c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x748f	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x7492	     0xf8c45ffffff	                            jl 0x400741d	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x7498	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x749c	          0x4889c7	                            mov rdi, rax	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x749f	      0xe800000000	                          call 0x40074e4	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x74a4	      0xe932010000	                           jmp 0x400761b	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x74a9	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x74ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x74af	            0x89d6	                            mov esi, edx	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x74b1	            0x89c7	                            mov edi, eax	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x74b3	      0xe81bfeffff	                 call sym.gui_wingoto_xy	      5483	gui.c	FUNCTION_93	ELSE_1	CALL_10
0x74b8	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x74bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x74bf	            0x89d6	                            mov esi, edx	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x74c1	          0x4889c7	                            mov rdi, rax	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x74c4	      0xe800000000	                          call 0x4007509	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x74c9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x74cc	          0x83e004	                              and eax, 4	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x74cf	            0x85c0	                           test eax, eax	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x74d1	            0x7415	                            je 0x4007528	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x74d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x74d7	          0x488b00	                    mov rax, qword [rax]	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x74da	          0x4889c7	                            mov rdi, rax	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x74dd	      0xe800000000	                          call 0x4007522	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x74e2	        0x488945f8	                mov qword [rbp - 8], rax	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x74e6	            0xeb08	                           jmp 0x4007530	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x74e8	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5490	gui.c	FUNCTION_93	ELSE_1	ELSE_2
0x74f0	        0x837de001	               cmp dword [rbp - 0x20], 1	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x74f4	            0x753a	                           jne 0x4007570	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x74f6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x74f9	          0x83e004	                              and eax, 4	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x74fc	            0x85c0	                           test eax, eax	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x74fe	            0x7430	                            je 0x4007570	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x7500	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x7504	          0x488b00	                    mov rax, qword [rax]	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x7507	          0x4889c7	                            mov rdi, rax	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x750a	      0xe800000000	                          call 0x400754f	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x750f	            0x85c0	                           test eax, eax	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x7511	            0x741d	                            je 0x4007570	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x7513	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x7517	          0x488b00	                    mov rax, qword [rax]	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x751a	          0x4889c7	                            mov rdi, rax	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x751d	      0xe800000000	                          call 0x4007562	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x7522	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x7526	          0x4889c7	                            mov rdi, rax	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x7529	      0xe800000000	                          call 0x400756e	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x752e	            0xeb1f	                           jmp 0x400758f	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x7530	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x7533	          0x83e010	                           and eax, 0x10	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x7536	            0x85c0	                           test eax, eax	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x7538	           0xf95c0	                                setne al	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x753b	           0xfb6d0	                           movzx edx, al	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x753e	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x7542	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x7545	          0x4889ce	                            mov rsi, rcx	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x7548	            0x89c7	                            mov edi, eax	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x754a	      0xe800000000	                          call 0x400758f	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x754f	      0x48837df800	                  cmp qword [rbp - 8], 0	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x7554	            0x7458	                            je 0x40075ee	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x7556	        0x488b45f8	                mov rax, qword [rbp - 8]	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x755a	          0x4889c7	                            mov rdi, rax	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x755d	      0xe800000000	                          call 0x40075a2	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x7562	            0x85c0	                           test eax, eax	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x7564	            0x741c	                            je 0x40075c2	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x7566	        0x488b45f8	                mov rax, qword [rbp - 8]	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x756a	          0x4889c7	                            mov rdi, rax	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x756d	      0xe800000000	                          call 0x40075b2	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x7572	            0x85c0	                           test eax, eax	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x7574	            0x752c	                           jne 0x40075e2	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x7576	      0xbf01000000	                              mov edi, 1	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x757b	      0xe800000000	                          call 0x40075c0	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x7580	            0xeb20	                           jmp 0x40075e2	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x7582	        0x488b45f8	                mov rax, qword [rbp - 8]	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x7586	      0xbe00000000	                              mov esi, 0	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x758b	          0x4889c7	                            mov rdi, rax	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x758e	      0xe800000000	                          call 0x40075d3	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x7593	          0x83f801	                              cmp eax, 1	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x7596	            0x750a	                           jne 0x40075e2	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x7598	      0xbf01000000	                              mov edi, 1	      5515	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11
0x759d	      0xe800000000	                          call 0x40075e2	      5515	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11
0x75a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x75a6	          0x4889c7	                            mov rdi, rax	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x75a9	      0xe800000000	                          call 0x40075ee	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x75ae	      0xbf28000000	                           mov edi, 0x28	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x75b3	      0xe800000000	                          call 0x40075f8	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x75b8	      0xbf00000000	                              mov edi, 0	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x75bd	      0xe800000000	                          call 0x4007602	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x75c2	      0xe800000000	                          call 0x4007607	      5525	gui.c	FUNCTION_93	ELSE_1	CALL_25
0x75c7	      0xe800000000	                          call 0x400760c	      5527	gui.c	FUNCTION_93	ELSE_1	CALL_26
0x75cc	      0xbe00000000	                              mov esi, 0	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x75d1	      0xbf00000000	                              mov edi, 0	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x75d6	      0xe800000000	                          call 0x400761b	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x75db	    0xc70500000000	               mov dword [0x04007625], 0	      5531	gui.c	FUNCTION_93
0x75e5	            0xeb01	                           jmp 0x4007628	      5531	gui.c	FUNCTION_93
0x75e7	              0x90	                                     nop	      5446	gui.c	FUNCTION_93	IF_1
0x75e8	              0xc9	                                   leave	      5532	gui.c	FUNCTION_93
0x75e9	              0xc3	                                     ret	      5532	gui.c	FUNCTION_93
gui_find_longest_lnum	ELSE,2:IF,3:CALL,4:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	87
0x5aa8	              0x55	                                push rbp	      4563	gui.c	FUNCTION_69
0x5aa9	          0x4889e5	                            mov rbp, rsp	      4563	gui.c	FUNCTION_69
0x5aac	        0x4883ec20	                           sub rsp, 0x20	      4563	gui.c	FUNCTION_69
0x5ab0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4564	gui.c	FUNCTION_69
0x5ab8	    0x488b05000000	            mov rax, qword [0x04005aff] 	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x5abf	      0xbe68000000	                           mov esi, 0x68	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x5ac4	          0x4889c7	                            mov rdi, rax	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x5ac7	      0xe800000000	                          call 0x4005b0c	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x5acc	          0x4885c0	                           test rax, rax	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x5acf	     0xf851f010000	                           jne 0x4005c34	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x5ad5	    0x488b05000000	            mov rax, qword [0x04005b1c] 	      4570	gui.c	FUNCTION_69	IF_1
0x5adc	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4570	gui.c	FUNCTION_69	IF_1
0x5ae0	    0x488b05000000	            mov rax, qword [0x04005b27] 	      4570	gui.c	FUNCTION_69	IF_1
0x5ae7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4570	gui.c	FUNCTION_69	IF_1
0x5aeb	          0x4839c2	                            cmp rdx, rax	      4570	gui.c	FUNCTION_69	IF_1
0x5aee	     0xf8f00010000	                            jg 0x4005c34	      4570	gui.c	FUNCTION_69	IF_1
0x5af4	    0x488b05000000	            mov rax, qword [0x04005b3b] 	      4571	gui.c	FUNCTION_69	IF_1
0x5afb	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      4571	gui.c	FUNCTION_69	IF_1
0x5b02	    0x488b05000000	            mov rax, qword [0x04005b49] 	      4571	gui.c	FUNCTION_69	IF_1
0x5b09	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4571	gui.c	FUNCTION_69	IF_1
0x5b0d	          0x4839c2	                            cmp rdx, rax	      4571	gui.c	FUNCTION_69	IF_1
0x5b10	     0xf8ede000000	                           jle 0x4005c34	      4571	gui.c	FUNCTION_69	IF_1
0x5b16	    0x488b05000000	            mov rax, qword [0x04005b5d] 	      4572	gui.c	FUNCTION_69	IF_1
0x5b1d	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      4572	gui.c	FUNCTION_69	IF_1
0x5b24	    0x488b05000000	            mov rax, qword [0x04005b6b] 	      4572	gui.c	FUNCTION_69	IF_1
0x5b2b	          0x488b00	                    mov rax, qword [rax]	      4572	gui.c	FUNCTION_69	IF_1
0x5b2e	        0x4883c001	                              add rax, 1	      4572	gui.c	FUNCTION_69	IF_1
0x5b32	          0x4839c2	                            cmp rdx, rax	      4572	gui.c	FUNCTION_69	IF_1
0x5b35	     0xf8fb9000000	                            jg 0x4005c34	      4572	gui.c	FUNCTION_69	IF_1
0x5b3b	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4576	gui.c	FUNCTION_69	IF_1
0x5b43	    0x488b05000000	            mov rax, qword [0x04005b8a] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5b4a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5b4e	        0x488945f0	             mov qword [rbp - 0x10], rax	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5b52	      0xe983000000	                           jmp 0x4005c1a	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5b57	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x5b5b	          0x4889c7	                            mov rdi, rax	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x5b5e	      0xe8c3feffff	                call sym.scroll_line_len	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x5b63	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4583	gui.c	FUNCTION_69	IF_1	FOR_1	CALL_2
0x5b66	        0x488b45f8	                mov rax, qword [rbp - 8]	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b6a	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b6d	            0x7d13	                           jge 0x4005bc2	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b6f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b72	            0x4898	                                    cdqe	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b74	        0x488945f8	                mov qword [rbp - 8], rax	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4587	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b7c	        0x488945e8	             mov qword [rbp - 0x18], rax	      4587	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b80	            0xeb53	                           jmp 0x4005c15	      4587	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x5b82	        0x488b45f8	                mov rax, qword [rbp - 8]	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x5b86	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x5b89	            0x754a	                           jne 0x4005c15	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x5b8b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5b8f	            0x89c2	                            mov edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5b91	    0x488b05000000	            mov rax, qword [0x04005bd8] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5b98	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5b9c	            0x29c2	                            sub edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5b9e	            0x89d0	                            mov eax, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5ba0	            0x89c2	                            mov edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5ba2	            0x89d0	                            mov eax, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5ba4	          0xc1f81f	                           sar eax, 0x1f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5ba7	            0x31c2	                            xor edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5ba9	            0x29c2	                            sub edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5bab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5baf	            0x89c1	                            mov ecx, eax	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bb1	    0x488b05000000	            mov rax, qword [0x04005bf8] 	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bb8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bbc	            0x29c1	                            sub ecx, eax	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bbe	            0x89c8	                            mov eax, ecx	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bc0	            0x89c1	                            mov ecx, eax	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bc2	          0xc1f91f	                           sar ecx, 0x1f	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bc5	            0x31c8	                            xor eax, ecx	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bc7	            0x29c8	                            sub eax, ecx	      4591	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_4
0x5bc9	            0x39c2	                            cmp edx, eax	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5bcb	            0x7d08	                           jge 0x4005c15	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x5bcd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4592	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x5bd1	        0x488945e8	             mov qword [rbp - 0x18], rax	      4592	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x5bd5	      0x488345f001	               add qword [rbp - 0x10], 1	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5bda	    0x488b05000000	            mov rax, qword [0x04005c21] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5be1	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5be8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5bec	     0xf8f65ffffff	                            jg 0x4005b97	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x5bf2	            0xeb0f	                           jmp 0x4005c43	      4573	gui.c	FUNCTION_69	IF_1
0x5bf4	    0x488b05000000	            mov rax, qword [0x04005c3b] 	      4597	gui.c	FUNCTION_69	ELSE_2
0x5bfb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4597	gui.c	FUNCTION_69	ELSE_2
0x5bff	        0x488945e8	             mov qword [rbp - 0x18], rax	      4597	gui.c	FUNCTION_69	ELSE_2
0x5c03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4599	gui.c	FUNCTION_69	ELSE_2
0x5c07	              0xc9	                                   leave	      4600	gui.c	FUNCTION_69	ELSE_2
0x5c08	              0xc3	                                     ret	      4600	gui.c	FUNCTION_69	ELSE_2
gui_init_font	ELSE,3:IF,8:CALL,10:functions,0:WHILE,1:SWITCH,0:DO,0:FOR,0	70
0xc46	              0x55	                                push rbp	       850	gui.c	FUNCTION_10
0xc47	          0x4889e5	                            mov rbp, rsp	       850	gui.c	FUNCTION_10
0xc4a	    0x4881ec700100	                          sub rsp, 0x170	       850	gui.c	FUNCTION_10
0xc51	    0x4889bd98feff	            mov qword [rbp - 0x168], rdi	       850	gui.c	FUNCTION_10
0xc58	    0x89b594feffff	            mov dword [rbp - 0x16c], esi	       850	gui.c	FUNCTION_10
0xc5e	    0x64488b042528	                mov rax, qword fs:[0x28]	       850	gui.c	FUNCTION_10
0xc67	        0x488945f8	                mov qword [rbp - 8], rax	       850	gui.c	FUNCTION_10
0xc6b	            0x31c0	                            xor eax, eax	       850	gui.c	FUNCTION_10
0xc6d	    0xc785a8feffff	              mov dword [rbp - 0x158], 0	       853	gui.c	FUNCTION_10
0xc77	    0xc785acfeffff	              mov dword [rbp - 0x154], 0	       854	gui.c	FUNCTION_10
0xc81	    0x8b0500000000	            mov eax, dword [0x04000cc7] 	       856	gui.c	FUNCTION_10	IF_1
0xc87	            0x85c0	                           test eax, eax	       856	gui.c	FUNCTION_10	IF_1
0xc89	            0x750a	                           jne 0x4000cd5	       856	gui.c	FUNCTION_10	IF_1
0xc8b	      0xb800000000	                              mov eax, 0	       857	gui.c	FUNCTION_10	IF_1
0xc90	      0xe9e2000000	                           jmp 0x4000db7	       857	gui.c	FUNCTION_10	IF_1
0xc95	    0xc685b0feffff	               mov byte [rbp - 0x150], 0	       859	gui.c	FUNCTION_10
0xc9c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       860	gui.c	FUNCTION_10	IF_2
0xca3	           0xfb600	                   movzx eax, byte [rax]	       860	gui.c	FUNCTION_10	IF_2
0xca6	            0x84c0	                             test al, al	       860	gui.c	FUNCTION_10	IF_2
0xca8	            0x7551	                           jne 0x4000d3b	       860	gui.c	FUNCTION_10	IF_2
0xcaa	    0xc785a8feffff	              mov dword [rbp - 0x158], 1	       861	gui.c	FUNCTION_10	IF_2
0xcb4	            0xeb53	                           jmp 0x4000d49	       861	gui.c	FUNCTION_10	IF_2
0xcb6	    0x488db5b0feff	                  lea rsi, [rbp - 0x150]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0xcbd	    0x488d8598feff	                  lea rax, [rbp - 0x168]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0xcc4	      0xb900000000	                              mov ecx, 0	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0xcc9	      0xba40010000	                          mov edx, 0x140	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0xcce	          0x4889c7	                            mov rdi, rax	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0xcd1	      0xe800000000	                          call 0x4000d16	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0xcd6	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0xcdd	      0xbe00000000	                              mov esi, 0	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0xce2	          0x4889c7	                            mov rdi, rax	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0xce5	      0xe800000000	                          call 0x4000d2a	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0xcea	          0x83f801	                              cmp eax, 1	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0xced	            0x750c	                           jne 0x4000d3b	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0xcef	    0xc785acfeffff	              mov dword [rbp - 0x154], 1	       889	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4
0xcf9	            0xeb0e	                           jmp 0x4000d49	       890	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4
0xcfb	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0xd02	           0xfb600	                   movzx eax, byte [rax]	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0xd05	            0x84c0	                             test al, al	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0xd07	            0x75ad	                           jne 0x4000cf6	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0xd09	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 1	       895	gui.c	FUNCTION_10	IF_6
0xd10	            0x7442	                            je 0x4000d94	       895	gui.c	FUNCTION_10	IF_6
0xd12	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0xd19	      0xbe00000000	                              mov esi, 0	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0xd1e	          0x4889c7	                            mov rdi, rax	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0xd21	      0xe800000000	                          call 0x4000d66	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0xd26	            0x85c0	                           test eax, eax	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0xd28	            0x742a	                            je 0x4000d94	       896	gui.c	FUNCTION_10	IF_6	CALL_6
0xd2a	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	       897	gui.c	FUNCTION_10	IF_6
0xd31	            0x750c	                           jne 0x4000d7f	       897	gui.c	FUNCTION_10	IF_6
0xd33	    0x488b05000000	            mov rax, qword [0x04000d7a] 	       897	gui.c	FUNCTION_10	IF_6
0xd3a	          0x4885c0	                           test rax, rax	       897	gui.c	FUNCTION_10	IF_6
0xd3d	            0x7515	                           jne 0x4000d94	       897	gui.c	FUNCTION_10	IF_6
0xd3f	      0xbe00000000	                              mov esi, 0	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0xd44	      0xbf00000000	                              mov edi, 0	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0xd49	      0xe800000000	                          call 0x4000d8e	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0xd4e	    0x8985acfeffff	            mov dword [rbp - 0x154], eax	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0xd54	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 1	       907	gui.c	FUNCTION_10	IF_7
0xd5b	            0x7514	                           jne 0x4000db1	       907	gui.c	FUNCTION_10	IF_7
0xd5d	      0xba0f000000	                            mov edx, 0xf	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0xd62	      0xbe01000000	                              mov esi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0xd67	      0xbf01000000	                              mov edi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0xd6c	      0xe800000000	                          call 0x4000db1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0xd71	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	       921	gui.c	FUNCTION_10
0xd77	        0x488b4df8	                mov rcx, qword [rbp - 8]	       922	gui.c	FUNCTION_10
0xd7b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       922	gui.c	FUNCTION_10
0xd84	            0x7405	                            je 0x4000dcb	       922	gui.c	FUNCTION_10
0xd86	      0xe800000000	                          call 0x4000dcb	       922	gui.c	FUNCTION_10
0xd8b	              0xc9	                                   leave	       922	gui.c	FUNCTION_10
0xd8c	              0xc3	                                     ret	       922	gui.c	FUNCTION_10
gui_screenstr	ELSE,4:IF,9:CALL,9:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,2	213
0x2711	              0x55	                                push rbp	      2150	gui.c	FUNCTION_38
0x2712	          0x4889e5	                            mov rbp, rsp	      2150	gui.c	FUNCTION_38
0x2715	        0x4883ec40	                           sub rsp, 0x40	      2150	gui.c	FUNCTION_38
0x2719	          0x897ddc	             mov dword [rbp - 0x24], edi	      2150	gui.c	FUNCTION_38
0x271c	          0x8975d8	             mov dword [rbp - 0x28], esi	      2150	gui.c	FUNCTION_38
0x271f	          0x8955d4	             mov dword [rbp - 0x2c], edx	      2150	gui.c	FUNCTION_38
0x2722	        0x48894dc8	             mov qword [rbp - 0x38], rcx	      2150	gui.c	FUNCTION_38
0x2726	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      2150	gui.c	FUNCTION_38
0x272a	        0x44894dd0	             mov dword [rbp - 0x30], r9d	      2150	gui.c	FUNCTION_38
0x272e	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2152	gui.c	FUNCTION_38
0x2735	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2156	gui.c	FUNCTION_38	IF_1
0x2739	            0x7f0a	                            jg 0x4002785	      2156	gui.c	FUNCTION_38	IF_1
0x273b	      0xb801000000	                              mov eax, 1	      2157	gui.c	FUNCTION_38	IF_1
0x2740	      0xe99c020000	                           jmp 0x4002a21	      2157	gui.c	FUNCTION_38	IF_1
0x2745	    0x8b0500000000	            mov eax, dword [0x0400278b] 	      2159	gui.c	FUNCTION_38	IF_2
0x274b	            0x85c0	                           test eax, eax	      2159	gui.c	FUNCTION_38	IF_2
0x274d	     0xf840f010000	                            je 0x40028a2	      2159	gui.c	FUNCTION_38	IF_2
0x2753	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x2756	            0x89d0	                            mov eax, edx	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x2758	          0xc1e002	                              shl eax, 2	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x275b	             0x1d0	                            add eax, edx	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x275d	          0xc1e002	                              shl eax, 2	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x2760	             0x1d0	                            add eax, edx	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x2762	          0x83c001	                              add eax, 1	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x2765	            0x89c7	                            mov edi, eax	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x2767	      0xe800000000	                          call 0x40027ac	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x276c	        0x488945f8	                mov qword [rbp - 8], rax	      2161	gui.c	FUNCTION_38	IF_2	CALL_1
0x2770	      0x48837df800	                  cmp qword [rbp - 8], 0	      2162	gui.c	FUNCTION_38	IF_2	IF_3
0x2775	            0x750a	                           jne 0x40027c1	      2162	gui.c	FUNCTION_38	IF_2	IF_3
0x2777	      0xb801000000	                              mov eax, 1	      2163	gui.c	FUNCTION_38	IF_2	IF_3
0x277c	      0xe960020000	                           jmp 0x4002a21	      2163	gui.c	FUNCTION_38	IF_2	IF_3
0x2781	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x2784	          0x8945f0	             mov dword [rbp - 0x10], eax	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x2787	            0xeb7d	                           jmp 0x4002846	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x2789	    0x488b15000000	            mov rdx, qword [0x040027d0] 	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x2790	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x2793	            0x4898	                                    cdqe	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x2795	          0x4801d0	                            add rax, rdx	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x2798	           0xfb600	                   movzx eax, byte [rax]	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x279b	            0x84c0	                             test al, al	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x279d	            0x7462	                            je 0x4002841	      2167	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x279f	    0x488b05000000	            mov rax, qword [0x040027e6] 	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27a6	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27a9	          0x4863d2	                         movsxd rdx, edx	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27ac	        0x48c1e202	                              shl rdx, 2	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27b0	          0x4801d0	                            add rax, rdx	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27b3	            0x8b00	                    mov eax, dword [rax]	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27b5	            0x85c0	                           test eax, eax	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27b7	            0x7529	                           jne 0x4002822	      2170	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27b9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27bc	          0x8d5001	                      lea edx, [rax + 1]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27bf	          0x8955ec	             mov dword [rbp - 0x14], edx	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27c2	          0x4863d0	                         movsxd rdx, eax	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27c9	          0x4801c2	                            add rdx, rax	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27cc	    0x488b0d000000	            mov rcx, qword [0x04002813] 	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27d3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27d6	            0x4898	                                    cdqe	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27d8	          0x4801c8	                            add rax, rcx	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27db	           0xfb600	                   movzx eax, byte [rax]	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27de	            0x8802	                      mov byte [rdx], al	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27e0	            0xeb20	                           jmp 0x4002842	      2171	gui.c	FUNCTION_38	IF_2	FOR_1	IF_5
0x27e2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27e5	          0x4863d0	                         movsxd rdx, eax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27ec	          0x4801c2	                            add rdx, rax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27ef	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27f2	          0x4889d6	                            mov rsi, rdx	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27f5	            0x89c7	                            mov edi, eax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27f7	      0xe800000000	                          call 0x400283c	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27fc	           0x145ec	             add dword [rbp - 0x14], eax	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x27ff	            0xeb01	                           jmp 0x4002842	      2173	gui.c	FUNCTION_38	IF_2	FOR_1	CALL_2
0x2801	              0x90	                                     nop	      2168	gui.c	FUNCTION_38	IF_2	FOR_1	IF_4
0x2802	        0x8345f001	               add dword [rbp - 0x10], 1	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x2806	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x2809	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x280c	             0x1d0	                            add eax, edx	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x280e	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x2811	     0xf8f72ffffff	                            jg 0x40027c9	      2165	gui.c	FUNCTION_38	IF_2	FOR_1
0x2817	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2176	gui.c	FUNCTION_38	IF_2
0x281a	          0x4863d0	                         movsxd rdx, eax	      2176	gui.c	FUNCTION_38	IF_2
0x281d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2176	gui.c	FUNCTION_38	IF_2
0x2821	          0x4801d0	                            add rax, rdx	      2176	gui.c	FUNCTION_38	IF_2
0x2824	          0xc60000	                       mov byte [rax], 0	      2176	gui.c	FUNCTION_38	IF_2
0x2827	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x282b	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x282f	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x2833	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x2836	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x2839	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x283d	          0x4589c1	                            mov r9d, r8d	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x2840	          0x4989f8	                             mov r8, rdi	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x2843	          0x4889c7	                            mov rdi, rax	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x2846	      0xe800000000	                          call 0x400288b	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x284b	          0x8945f4	              mov dword [rbp - 0xc], eax	      2177	gui.c	FUNCTION_38	IF_2	CALL_3
0x284e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2178	gui.c	FUNCTION_38	IF_2	CALL_4
0x2852	          0x4889c7	                            mov rdi, rax	      2178	gui.c	FUNCTION_38	IF_2	CALL_4
0x2855	      0xe800000000	                          call 0x400289a	      2178	gui.c	FUNCTION_38	IF_2	CALL_4
0x285a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2180	gui.c	FUNCTION_38	IF_2
0x285d	      0xe97f010000	                           jmp 0x4002a21	      2180	gui.c	FUNCTION_38	IF_2
0x2862	    0x8b0500000000	            mov eax, dword [0x040028a8] 	      2182	gui.c	FUNCTION_38	ELSE_2	IF_6
0x2868	      0x3dcc260000	                         cmp eax, 0x26cc	      2182	gui.c	FUNCTION_38	ELSE_2	IF_6
0x286d	     0xf853f010000	                           jne 0x40029f2	      2182	gui.c	FUNCTION_38	ELSE_2	IF_6
0x2873	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x2876	             0x1c0	                            add eax, eax	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x2878	          0x83c001	                              add eax, 1	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x287b	            0x89c7	                            mov edi, eax	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x287d	      0xe800000000	                          call 0x40028c2	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x2882	        0x488945f8	                mov qword [rbp - 8], rax	      2184	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_5
0x2886	      0x48837df800	                  cmp qword [rbp - 8], 0	      2185	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x288b	            0x750a	                           jne 0x40028d7	      2185	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x288d	      0xb801000000	                              mov eax, 1	      2186	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x2892	      0xe94a010000	                           jmp 0x4002a21	      2186	gui.c	FUNCTION_38	ELSE_2	IF_6	IF_7
0x2897	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x289a	          0x8945f0	             mov dword [rbp - 0x10], eax	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x289d	      0xe9b7000000	                           jmp 0x4002999	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28a2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28a5	          0x8d5001	                      lea edx, [rax + 1]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28a8	          0x8955ec	             mov dword [rbp - 0x14], edx	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28ab	          0x4863d0	                         movsxd rdx, eax	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28ae	        0x488b45f8	                mov rax, qword [rbp - 8]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28b2	          0x4801c2	                            add rdx, rax	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28b5	    0x488b0d000000	            mov rcx, qword [0x040028fc] 	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28bc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28bf	            0x4898	                                    cdqe	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28c1	          0x4801c8	                            add rax, rcx	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28c4	           0xfb600	                   movzx eax, byte [rax]	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28c7	            0x8802	                      mov byte [rdx], al	      2190	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x28c9	    0x488b15000000	            mov rdx, qword [0x04002910] 	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28d0	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28d3	            0x4898	                                    cdqe	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28d5	          0x4801d0	                            add rax, rdx	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28d8	           0xfb600	                   movzx eax, byte [rax]	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28db	            0x3c8e	                            cmp al, 0x8e	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28dd	            0x7529	                           jne 0x4002948	      2193	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28df	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28e2	          0x8d5001	                      lea edx, [rax + 1]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28e5	          0x8955ec	             mov dword [rbp - 0x14], edx	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28e8	          0x4863d0	                         movsxd rdx, eax	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28ef	          0x4801c2	                            add rdx, rax	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28f2	    0x488b0d000000	            mov rcx, qword [0x04002939] 	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28f9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28fc	            0x4898	                                    cdqe	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x28fe	          0x4801c8	                            add rax, rcx	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x2901	           0xfb600	                   movzx eax, byte [rax]	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x2904	            0x8802	                      mov byte [rdx], al	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x2906	            0xeb4d	                           jmp 0x4002995	      2194	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	IF_8
0x2908	    0x488b15000000	            mov rdx, qword [0x0400294f] 	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x290f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x2912	            0x4898	                                    cdqe	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x2914	          0x4801d0	                            add rax, rdx	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x2917	           0xfb600	                   movzx eax, byte [rax]	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x291a	           0xfb6c0	                           movzx eax, al	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x291d	            0x4898	                                    cdqe	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x291f	     0xfb680000000	                   movzx eax, byte [rax]	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x2926	            0x3c02	                               cmp al, 2	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x2928	            0x752b	                           jne 0x4002995	      2195	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9	CALL_6
0x292a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x292d	          0x8d5001	                      lea edx, [rax + 1]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x2930	          0x8955ec	             mov dword [rbp - 0x14], edx	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x2933	          0x4863d0	                         movsxd rdx, eax	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x2936	        0x488b45f8	                mov rax, qword [rbp - 8]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x293a	          0x4801c2	                            add rdx, rax	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x293d	    0x488b0d000000	            mov rcx, qword [0x04002984] 	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x2944	        0x8345f001	               add dword [rbp - 0x10], 1	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x2948	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x294b	            0x4898	                                    cdqe	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x294d	          0x4801c8	                            add rax, rcx	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x2950	           0xfb600	                   movzx eax, byte [rax]	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x2953	            0x8802	                      mov byte [rdx], al	      2196	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2	ELSE_3	IF_9
0x2955	        0x8345f001	               add dword [rbp - 0x10], 1	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x2959	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x295c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x295f	             0x1d0	                            add eax, edx	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x2961	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x2964	     0xf8f38ffffff	                            jg 0x40028e2	      2188	gui.c	FUNCTION_38	ELSE_2	IF_6	FOR_2
0x296a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x296d	          0x4863d0	                         movsxd rdx, eax	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x2970	        0x488b45f8	                mov rax, qword [rbp - 8]	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x2974	          0x4801d0	                            add rax, rdx	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x2977	          0xc60000	                       mov byte [rax], 0	      2199	gui.c	FUNCTION_38	ELSE_2	IF_6
0x297a	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x297e	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x2982	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x2986	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x2989	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x298c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x2990	          0x4589c1	                            mov r9d, r8d	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x2993	          0x4989f8	                             mov r8, rdi	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x2996	          0x4889c7	                            mov rdi, rax	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x2999	      0xe800000000	                          call 0x40029de	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x299e	          0x8945f4	              mov dword [rbp - 0xc], eax	      2200	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_7
0x29a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2201	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_8
0x29a5	          0x4889c7	                            mov rdi, rax	      2201	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_8
0x29a8	      0xe800000000	                          call 0x40029ed	      2201	gui.c	FUNCTION_38	ELSE_2	IF_6	CALL_8
0x29ad	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2203	gui.c	FUNCTION_38	ELSE_2	IF_6
0x29b0	            0xeb2f	                           jmp 0x4002a21	      2203	gui.c	FUNCTION_38	ELSE_2	IF_6
0x29b2	    0x488b15000000	            mov rdx, qword [0x040029f9] 	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29b9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29bc	            0x4898	                                    cdqe	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29be	        0x488d3c02	                    lea rdi, [rdx + rax]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29c2	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29c6	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29ca	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29ce	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29d1	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29d4	          0x4589c1	                            mov r9d, r8d	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29d7	          0x4989f0	                             mov r8, rsi	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29da	            0x89c6	                            mov esi, eax	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29dc	      0xe800000000	                          call 0x4002a21	      2207	gui.c	FUNCTION_38	ELSE_4	CALL_9
0x29e1	              0xc9	                                   leave	      2210	gui.c	FUNCTION_38
0x29e2	              0xc3	                                     ret	      2210	gui.c	FUNCTION_38
gui_may_flush	ELSE,0:IF,1:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	9
0x23b5	              0x55	                                push rbp	      2033	gui.c	FUNCTION_35
0x23b6	          0x4889e5	                            mov rbp, rsp	      2033	gui.c	FUNCTION_35
0x23b9	    0x8b0500000000	            mov eax, dword [0x040023ff] 	      2034	gui.c	FUNCTION_35	IF_1
0x23bf	            0x85c0	                           test eax, eax	      2034	gui.c	FUNCTION_35	IF_1
0x23c1	            0x7505	                           jne 0x4002408	      2034	gui.c	FUNCTION_35	IF_1
0x23c3	      0xe800000000	                          call 0x4002408	      2035	gui.c	FUNCTION_35	CALL_1
0x23c8	              0x90	                                     nop	      2036	gui.c	FUNCTION_35
0x23c9	              0x5d	                                 pop rbp	      2036	gui.c	FUNCTION_35
0x23ca	              0xc3	                                     ret	      2036	gui.c	FUNCTION_35
gui_redraw_block	ELSE,5:IF,17:CALL,10:functions,0:WHILE,1:SWITCH,0:DO,0:FOR,4	279
0x2ea7	              0x55	                                push rbp	      2708	gui.c	FUNCTION_42
0x2ea8	          0x4889e5	                            mov rbp, rsp	      2708	gui.c	FUNCTION_42
0x2eab	        0x4883ec60	                           sub rsp, 0x60	      2708	gui.c	FUNCTION_42
0x2eaf	          0x897dbc	             mov dword [rbp - 0x44], edi	      2708	gui.c	FUNCTION_42
0x2eb2	          0x8975b8	             mov dword [rbp - 0x48], esi	      2708	gui.c	FUNCTION_42
0x2eb5	          0x8955b4	             mov dword [rbp - 0x4c], edx	      2708	gui.c	FUNCTION_42
0x2eb8	          0x894db0	             mov dword [rbp - 0x50], ecx	      2708	gui.c	FUNCTION_42
0x2ebb	        0x448945ac	             mov dword [rbp - 0x54], r8d	      2708	gui.c	FUNCTION_42
0x2ebf	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      2715	gui.c	FUNCTION_42
0x2ec6	    0x8b0500000000	            mov eax, dword [0x04002f0c] 	      2721	gui.c	FUNCTION_42	IF_1
0x2ecc	            0x85c0	                           test eax, eax	      2721	gui.c	FUNCTION_42	IF_1
0x2ece	            0x740c	                            je 0x4002f1c	      2721	gui.c	FUNCTION_42	IF_1
0x2ed0	    0x488b05000000	            mov rax, qword [0x04002f17] 	      2721	gui.c	FUNCTION_42	IF_1
0x2ed7	          0x4885c0	                           test rax, rax	      2721	gui.c	FUNCTION_42	IF_1
0x2eda	            0x7508	                           jne 0x4002f24	      2721	gui.c	FUNCTION_42	IF_1
0x2edc	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2722	gui.c	FUNCTION_42	IF_1
0x2edf	      0xe995030000	                           jmp 0x40032b9	      2722	gui.c	FUNCTION_42	IF_1
0x2ee4	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2726	gui.c	FUNCTION_42	CALL_1
0x2ee7	            0x89c7	                            mov edi, eax	      2726	gui.c	FUNCTION_42	CALL_1
0x2ee9	      0xe800000000	                          call 0x4002f2e	      2726	gui.c	FUNCTION_42	CALL_1
0x2eee	          0x8945b8	             mov dword [rbp - 0x48], eax	      2726	gui.c	FUNCTION_42	CALL_1
0x2ef1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2727	gui.c	FUNCTION_42	CALL_2
0x2ef4	            0x89c7	                            mov edi, eax	      2727	gui.c	FUNCTION_42	CALL_2
0x2ef6	      0xe800000000	                          call 0x4002f3b	      2727	gui.c	FUNCTION_42	CALL_2
0x2efb	          0x8945b0	             mov dword [rbp - 0x50], eax	      2727	gui.c	FUNCTION_42	CALL_2
0x2efe	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2728	gui.c	FUNCTION_42	CALL_3
0x2f01	            0x89c7	                            mov edi, eax	      2728	gui.c	FUNCTION_42	CALL_3
0x2f03	      0xe800000000	                          call 0x4002f48	      2728	gui.c	FUNCTION_42	CALL_3
0x2f08	          0x8945bc	             mov dword [rbp - 0x44], eax	      2728	gui.c	FUNCTION_42	CALL_3
0x2f0b	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2729	gui.c	FUNCTION_42	CALL_4
0x2f0e	            0x89c7	                            mov edi, eax	      2729	gui.c	FUNCTION_42	CALL_4
0x2f10	      0xe800000000	                          call 0x4002f55	      2729	gui.c	FUNCTION_42	CALL_4
0x2f15	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2729	gui.c	FUNCTION_42	CALL_4
0x2f18	    0x8b0500000000	            mov eax, dword [0x04002f5e] 	      2732	gui.c	FUNCTION_42
0x2f1e	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2732	gui.c	FUNCTION_42
0x2f21	    0x8b0500000000	            mov eax, dword [0x04002f67] 	      2733	gui.c	FUNCTION_42
0x2f27	          0x8945e8	             mov dword [rbp - 0x18], eax	      2733	gui.c	FUNCTION_42
0x2f2a	    0x8b0500000000	            mov eax, dword [0x04002f70] 	      2734	gui.c	FUNCTION_42
0x2f30	            0x4898	                                    cdqe	      2734	gui.c	FUNCTION_42
0x2f32	        0x488945f8	                mov qword [rbp - 8], rax	      2734	gui.c	FUNCTION_42
0x2f36	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2736	gui.c	FUNCTION_42
0x2f39	          0x8945ec	             mov dword [rbp - 0x14], eax	      2736	gui.c	FUNCTION_42
0x2f3c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2737	gui.c	FUNCTION_42
0x2f3f	          0x8945f0	             mov dword [rbp - 0x10], eax	      2737	gui.c	FUNCTION_42
0x2f42	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2740	gui.c	FUNCTION_42	FOR_1
0x2f45	    0x890500000000	            mov dword [0x04002f8b], eax 	      2740	gui.c	FUNCTION_42	FOR_1
0x2f4b	      0xe9fb020000	                           jmp 0x400328b	      2740	gui.c	FUNCTION_42	FOR_1
0x2f50	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2745	gui.c	FUNCTION_42	FOR_1
0x2f53	          0x8945b8	             mov dword [rbp - 0x48], eax	      2745	gui.c	FUNCTION_42	FOR_1
0x2f56	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2746	gui.c	FUNCTION_42	FOR_1
0x2f59	          0x8945b0	             mov dword [rbp - 0x50], eax	      2746	gui.c	FUNCTION_42	FOR_1
0x2f5c	    0x488b05000000	            mov rax, qword [0x04002fa3] 	      2747	gui.c	FUNCTION_42	FOR_1
0x2f63	    0x8b1500000000	            mov edx, dword [0x04002fa9] 	      2747	gui.c	FUNCTION_42	FOR_1
0x2f69	          0x4863d2	                         movsxd rdx, edx	      2747	gui.c	FUNCTION_42	FOR_1
0x2f6c	        0x48c1e202	                              shl rdx, 2	      2747	gui.c	FUNCTION_42	FOR_1
0x2f70	          0x4801d0	                            add rax, rdx	      2747	gui.c	FUNCTION_42	FOR_1
0x2f73	            0x8b00	                    mov eax, dword [rax]	      2747	gui.c	FUNCTION_42	FOR_1
0x2f75	          0x8945d0	             mov dword [rbp - 0x30], eax	      2747	gui.c	FUNCTION_42	FOR_1
0x2f78	    0x8b0500000000	            mov eax, dword [0x04002fbe] 	      2748	gui.c	FUNCTION_42	FOR_1	IF_2
0x2f7e	            0x85c0	                           test eax, eax	      2748	gui.c	FUNCTION_42	FOR_1	IF_2
0x2f80	            0x7474	                            je 0x4003036	      2748	gui.c	FUNCTION_42	FOR_1	IF_2
0x2f82	        0x837db800	               cmp dword [rbp - 0x48], 0	      2750	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x2f86	            0x7e36	                           jle 0x4002ffe	      2750	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x2f88	    0x488b05000000	            mov rax, qword [0x04002fcf] 	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2f8f	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x2f92	          0x4863ca	                         movsxd rcx, edx	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x2f95	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x2f98	          0x4863d2	                         movsxd rdx, edx	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x2f9b	          0x4801ca	                            add rdx, rcx	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x2f9e	          0x4801c2	                            add rdx, rax	      2752	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x2fa1	    0x488b0d000000	            mov rcx, qword [0x04002fe8] 	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2fa8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2fab	            0x4898	                                    cdqe	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2fad	          0x4801c8	                            add rax, rcx	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2fb0	          0x4889d6	                            mov rsi, rdx	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2fb3	          0x4889c7	                            mov rdi, rax	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2fb6	      0xe800000000	                          call 0x4002ffb	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2fbb	          0x2945b8	             sub dword [rbp - 0x48], eax	      2751	gui.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_5
0x2fbe	    0x488b05000000	            mov rax, qword [0x04003005] 	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2fc5	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x2fc8	          0x4863ca	                         movsxd rcx, edx	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x2fcb	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x2fce	          0x4863d2	                         movsxd rdx, edx	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x2fd1	          0x4801ca	                            add rdx, rcx	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x2fd4	          0x4801c2	                            add rdx, rax	      2754	gui.c	FUNCTION_42	FOR_1	IF_2
0x2fd7	    0x488b0d000000	            mov rcx, qword [0x0400301e] 	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2fde	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2fe1	            0x4898	                                    cdqe	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2fe3	          0x4801c8	                            add rax, rcx	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2fe6	          0x4889d6	                            mov rsi, rdx	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2fe9	          0x4889c7	                            mov rdi, rax	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2fec	      0xe800000000	                          call 0x4003031	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2ff1	           0x145b0	             add dword [rbp - 0x50], eax	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2ff4	            0xeb62	                           jmp 0x4003098	      2753	gui.c	FUNCTION_42	FOR_1	IF_2	CALL_6
0x2ff6	    0x8b0500000000	            mov eax, dword [0x0400303c] 	      2756	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4
0x2ffc	            0x85c0	                           test eax, eax	      2756	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4
0x2ffe	            0x7458	                            je 0x4003098	      2756	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4
0x3000	    0x488b15000000	            mov rdx, qword [0x04003047] 	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x3007	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x300a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x300d	             0x1c8	                            add eax, ecx	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x300f	            0x4898	                                    cdqe	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x3011	          0x4801d0	                            add rax, rdx	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x3014	           0xfb600	                   movzx eax, byte [rax]	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x3017	            0x84c0	                             test al, al	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x3019	            0x7504	                           jne 0x400305f	      2758	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x301b	        0x836db801	               sub dword [rbp - 0x48], 1	      2759	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_5
0x301f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3022	          0x83c001	                              add eax, 1	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3025	          0x4863d0	                         movsxd rdx, eax	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3028	    0x488b05000000	            mov rax, qword [0x0400306f] 	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x302f	          0x4839c2	                            cmp rdx, rax	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3032	            0x7d24	                           jge 0x4003098	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3034	    0x488b05000000	            mov rax, qword [0x0400307b] 	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x303b	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x303e	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3041	             0x1ca	                            add edx, ecx	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3043	          0x4863d2	                         movsxd rdx, edx	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3046	        0x4883c201	                              add rdx, 1	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x304a	          0x4801d0	                            add rax, rdx	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x304d	           0xfb600	                   movzx eax, byte [rax]	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3050	            0x84c0	                             test al, al	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3052	            0x7504	                           jne 0x4003098	      2761	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3054	        0x8345b001	               add dword [rbp - 0x50], 1	      2762	gui.c	FUNCTION_42	FOR_1	ELSE_1	IF_4	IF_6
0x3058	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2766	gui.c	FUNCTION_42	FOR_1
0x305b	    0x890500000000	            mov dword [0x040030a1], eax 	      2766	gui.c	FUNCTION_42	FOR_1
0x3061	    0x488b05000000	            mov rax, qword [0x040030a8] 	      2767	gui.c	FUNCTION_42	FOR_1
0x3068	    0x8b1500000000	            mov edx, dword [0x040030ae] 	      2767	gui.c	FUNCTION_42	FOR_1
0x306e	          0x4863d2	                         movsxd rdx, edx	      2767	gui.c	FUNCTION_42	FOR_1
0x3071	        0x48c1e202	                              shl rdx, 2	      2767	gui.c	FUNCTION_42	FOR_1
0x3075	          0x4801d0	                            add rax, rdx	      2767	gui.c	FUNCTION_42	FOR_1
0x3078	            0x8b00	                    mov eax, dword [rax]	      2767	gui.c	FUNCTION_42	FOR_1
0x307a	    0x8b1500000000	            mov edx, dword [0x040030c0] 	      2767	gui.c	FUNCTION_42	FOR_1
0x3080	             0x1d0	                            add eax, edx	      2767	gui.c	FUNCTION_42	FOR_1
0x3082	          0x8945d0	             mov dword [rbp - 0x30], eax	      2767	gui.c	FUNCTION_42	FOR_1
0x3085	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2768	gui.c	FUNCTION_42	FOR_1
0x3088	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      2768	gui.c	FUNCTION_42	FOR_1
0x308b	          0x83c001	                              add eax, 1	      2768	gui.c	FUNCTION_42	FOR_1
0x308e	          0x8945d8	             mov dword [rbp - 0x28], eax	      2768	gui.c	FUNCTION_42	FOR_1
0x3091	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x3098	            0xeb57	                           jmp 0x4003131	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x309a	    0x488b05000000	            mov rax, qword [0x040030e1] 	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30a1	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30a4	          0x83ea01	                              sub edx, 1	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30a7	          0x2b55dc	             sub edx, dword [rbp - 0x24]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30aa	          0x4863d2	                         movsxd rdx, edx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30ad	          0x4801d2	                            add rdx, rdx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30b0	          0x4801d0	                            add rax, rdx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30b3	           0xfb710	                   movzx edx, word [rax]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30b6	    0x488b05000000	            mov rax, qword [0x040030fd] 	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30bd	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30c0	          0x4863c9	                         movsxd rcx, ecx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30c3	          0x4801c9	                            add rcx, rcx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30c6	          0x4801c8	                            add rax, rcx	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30c9	           0xfb700	                   movzx eax, word [rax]	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30cc	          0x6639c2	                              cmp dx, ax	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30cf	            0x7528	                           jne 0x4003139	      2773	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30d1	    0x488b15000000	            mov rdx, qword [0x04003118] 	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30d8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30db	          0x83e801	                              sub eax, 1	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30de	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30e1	            0x4898	                                    cdqe	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30e3	          0x4801d0	                            add rax, rdx	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30e6	           0xfb600	                   movzx eax, byte [rax]	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30e9	            0x3c20	                            cmp al, 0x20	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30eb	            0x740c	                            je 0x4003139	      2774	gui.c	FUNCTION_42	FOR_1	FOR_2	IF_7
0x30ed	        0x8345dc01	               add dword [rbp - 0x24], 1	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x30f1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x30f4	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x30f7	            0x7ca1	                            jl 0x40030da	      2772	gui.c	FUNCTION_42	FOR_1	FOR_2
0x30f9	        0x837db800	               cmp dword [rbp - 0x48], 0	      2777	gui.c	FUNCTION_42	FOR_1
0x30fd	            0x7e47	                           jle 0x4003186	      2777	gui.c	FUNCTION_42	FOR_1
0x30ff	    0x488b05000000	            mov rax, qword [0x04003146] 	      2776	gui.c	FUNCTION_42	FOR_1
0x3106	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2776	gui.c	FUNCTION_42	FOR_1
0x3109	          0x4863d2	                         movsxd rdx, edx	      2776	gui.c	FUNCTION_42	FOR_1
0x310c	          0x4801d2	                            add rdx, rdx	      2776	gui.c	FUNCTION_42	FOR_1
0x310f	        0x4883ea02	                              sub rdx, 2	      2776	gui.c	FUNCTION_42	FOR_1
0x3113	          0x4801d0	                            add rax, rdx	      2776	gui.c	FUNCTION_42	FOR_1
0x3116	           0xfb700	                   movzx eax, word [rax]	      2776	gui.c	FUNCTION_42	FOR_1
0x3119	          0x6685c0	                             test ax, ax	      2776	gui.c	FUNCTION_42	FOR_1
0x311c	            0x7428	                            je 0x4003186	      2776	gui.c	FUNCTION_42	FOR_1
0x311e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2776	gui.c	FUNCTION_42	FOR_1
0x3122	            0x7522	                           jne 0x4003186	      2776	gui.c	FUNCTION_42	FOR_1
0x3124	    0x488b05000000	            mov rax, qword [0x0400316b] 	      2777	gui.c	FUNCTION_42	FOR_1
0x312b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2777	gui.c	FUNCTION_42	FOR_1
0x312e	          0x4863d2	                         movsxd rdx, edx	      2777	gui.c	FUNCTION_42	FOR_1
0x3131	        0x4883ea01	                              sub rdx, 1	      2777	gui.c	FUNCTION_42	FOR_1
0x3135	          0x4801d0	                            add rax, rdx	      2777	gui.c	FUNCTION_42	FOR_1
0x3138	           0xfb600	                   movzx eax, byte [rax]	      2777	gui.c	FUNCTION_42	FOR_1
0x313b	            0x3c20	                            cmp al, 0x20	      2777	gui.c	FUNCTION_42	FOR_1
0x313d	            0x7407	                            je 0x4003186	      2777	gui.c	FUNCTION_42	FOR_1
0x313f	      0xb801000000	                              mov eax, 1	      2777	gui.c	FUNCTION_42	FOR_1
0x3144	            0xeb05	                           jmp 0x400318b	      2777	gui.c	FUNCTION_42	FOR_1
0x3146	      0xb800000000	                              mov eax, 0	      2777	gui.c	FUNCTION_42	FOR_1
0x314b	          0x8945e0	             mov dword [rbp - 0x20], eax	      2776	gui.c	FUNCTION_42	FOR_1
0x314e	      0xe9df000000	                           jmp 0x4003272	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3153	    0x488b05000000	            mov rax, qword [0x0400319a] 	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x315a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x315d	          0x4863d2	                         movsxd rdx, edx	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3160	          0x4801d2	                            add rdx, rdx	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3163	          0x4801d0	                            add rax, rdx	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3166	           0xfb700	                   movzx eax, word [rax]	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3169	        0x668945ce	               mov word [rbp - 0x32], ax	      2783	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x316d	         0xfb745ce	            movzx eax, word [rbp - 0x32]	      2784	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3171	    0x890500000000	            mov dword [0x040031b7], eax 	      2784	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3177	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x317e	            0xeb4d	                           jmp 0x400320d	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x3180	    0x8b0500000000	            mov eax, dword [0x040031c6] 	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x3186	            0x85c0	                           test eax, eax	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x3188	            0x741b	                            je 0x40031e5	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x318a	    0x488b15000000	            mov rdx, qword [0x040031d1] 	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x3191	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x3194	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x3197	             0x1c8	                            add eax, ecx	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x3199	            0x4898	                                    cdqe	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x319b	          0x4801d0	                            add rax, rdx	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x319e	           0xfb600	                   movzx eax, byte [rax]	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x31a1	            0x84c0	                             test al, al	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x31a3	            0x7423	                            je 0x4003208	      2809	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x31a5	    0x488b05000000	            mov rax, qword [0x040031ec] 	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31ac	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31af	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31b2	             0x1ca	                            add edx, ecx	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31b4	          0x4863d2	                         movsxd rdx, edx	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31b7	          0x4801d2	                            add rdx, rdx	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31ba	          0x4801d0	                            add rax, rdx	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31bd	           0xfb700	                   movzx eax, word [rax]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31c0	        0x663b45ce	               cmp ax, word [rbp - 0x32]	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31c4	            0x7511	                           jne 0x4003217	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31c6	            0xeb01	                           jmp 0x4003209	      2811	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31c8	              0x90	                                     nop	      2810	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_11
0x31c9	        0x8345d401	               add dword [rbp - 0x2c], 1	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x31cd	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x31d0	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x31d3	            0x7cab	                            jl 0x40031c0	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x31d5	            0xeb01	                           jmp 0x4003218	      2807	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3
0x31d7	              0x90	                                     nop	      2812	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	FOR_3	IF_12
0x31d8	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31db	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31de	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31e1	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31e4	          0x4189c9	                            mov r9d, ecx	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31e7	    0x41b800000000	                              mov r8d, 0	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31ed	      0xb900000000	                              mov ecx, 0	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31f2	            0x89c7	                            mov edi, eax	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31f4	      0xe818f5ffff	                  call sym.gui_screenstr	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31f9	          0x8945f4	              mov dword [rbp - 0xc], eax	      2815	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_4	CALL_9
0x31fc	        0x837df400	                cmp dword [rbp - 0xc], 0	      2840	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x3200	            0x751d	                           jne 0x400325f	      2840	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x3202	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2844	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x3205	          0x2945d0	             sub dword [rbp - 0x30], eax	      2844	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x3208	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2845	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x320b	           0x145d8	             add dword [rbp - 0x28], eax	      2845	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x320e	    0x8b0500000000	            mov eax, dword [0x04003254] 	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x3214	          0x2b45dc	             sub eax, dword [rbp - 0x24]	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x3217	    0x890500000000	            mov dword [0x0400325d], eax 	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x321d	            0xeb0c	                           jmp 0x400326b	      2846	gui.c	FUNCTION_42	FOR_1	WHILE_1	IF_17
0x321f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2850	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x3222	           0x145d0	             add dword [rbp - 0x30], eax	      2850	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x3225	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2851	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x3228	          0x2945d8	             sub dword [rbp - 0x28], eax	      2851	gui.c	FUNCTION_42	FOR_1	WHILE_1	ELSE_5
0x322b	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2853	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3232	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x3236	     0xf8f17ffffff	                            jg 0x4003193	      2781	gui.c	FUNCTION_42	FOR_1	WHILE_1
0x323c	    0x8b0500000000	            mov eax, dword [0x04003282] 	      2740	gui.c	FUNCTION_42	FOR_1
0x3242	          0x83c001	                              add eax, 1	      2740	gui.c	FUNCTION_42	FOR_1
0x3245	    0x890500000000	            mov dword [0x0400328b], eax 	      2740	gui.c	FUNCTION_42	FOR_1
0x324b	    0x8b0500000000	            mov eax, dword [0x04003291] 	      2740	gui.c	FUNCTION_42	FOR_1
0x3251	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      2740	gui.c	FUNCTION_42	FOR_1
0x3254	     0xf8ef6fcffff	                           jle 0x4002f90	      2740	gui.c	FUNCTION_42	FOR_1
0x325a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2858	gui.c	FUNCTION_42
0x325d	    0x890500000000	            mov dword [0x040032a3], eax 	      2858	gui.c	FUNCTION_42
0x3263	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2859	gui.c	FUNCTION_42
0x3266	    0x890500000000	            mov dword [0x040032ac], eax 	      2859	gui.c	FUNCTION_42
0x326c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2860	gui.c	FUNCTION_42
0x3270	    0x890500000000	            mov dword [0x040032b6], eax 	      2860	gui.c	FUNCTION_42
0x3276	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2862	gui.c	FUNCTION_42
0x3279	              0xc9	                                   leave	      2863	gui.c	FUNCTION_42
0x327a	              0xc3	                                     ret	      2863	gui.c	FUNCTION_42
gui_update_cursor_later	ELSE,0:IF,0:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	7
0x1e81	              0x55	                                push rbp	      1757	gui.c	FUNCTION_29
0x1e82	          0x4889e5	                            mov rbp, rsp	      1757	gui.c	FUNCTION_29
0x1e85	      0xbf00000000	                              mov edi, 0	      1758	gui.c	FUNCTION_29	CALL_2
0x1e8a	      0xe800000000	                          call 0x4001ecf	      1758	gui.c	FUNCTION_29	CALL_2
0x1e8f	              0x90	                                     nop	      1759	gui.c	FUNCTION_29
0x1e90	              0x5d	                                 pop rbp	      1759	gui.c	FUNCTION_29
0x1e91	              0xc3	                                     ret	      1759	gui.c	FUNCTION_29
gui_undraw_cursor	ELSE,1:IF,5:CALL,6:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	30
0x2d6d	              0x55	                                push rbp	      2629	gui.c	FUNCTION_40
0x2d6e	          0x4889e5	                            mov rbp, rsp	      2629	gui.c	FUNCTION_40
0x2d71	     0xfb605000000	           movzx eax, byte [0x04002db8] 	      2630	gui.c	FUNCTION_40	IF_1
0x2d78	            0x84c0	                             test al, al	      2630	gui.c	FUNCTION_40	IF_1
0x2d7a	            0x7465	                            je 0x4002e21	      2630	gui.c	FUNCTION_40	IF_1
0x2d7c	    0x8b0d00000000	            mov ecx, dword [0x04002dc2] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2d82	    0x8b1500000000	            mov edx, dword [0x04002dc8] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2d88	    0x8b3500000000	            mov esi, dword [0x04002dce] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2d8e	    0x8b0500000000	            mov eax, dword [0x04002dd4] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2d94	    0x41b810000000	                           mov r8d, 0x10	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2d9a	            0x89c7	                            mov edi, eax	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2d9c	      0xe800000000	                          call 0x4002de1	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2da1	            0x85c0	                           test eax, eax	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2da3	            0x7435	                            je 0x4002e1a	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x2da5	    0x8b0500000000	            mov eax, dword [0x04002deb] 	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x2dab	            0x85c0	                           test eax, eax	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x2dad	            0x7e2b	                           jle 0x4002e1a	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x2daf	    0x8b0500000000	            mov eax, dword [0x04002df5] 	      2655	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x2db5	          0x8d48ff	                      lea ecx, [rax - 1]	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x2db8	    0x8b1500000000	            mov edx, dword [0x04002dfe] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x2dbe	    0x8b0500000000	            mov eax, dword [0x04002e04] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x2dc4	          0x8d70ff	                      lea esi, [rax - 1]	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x2dc7	    0x8b0500000000	            mov eax, dword [0x04002e0d] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x2dcd	    0x41b810000000	                           mov r8d, 0x10	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x2dd3	            0x89c7	                            mov edi, eax	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x2dd5	      0xe800000000	                          call 0x4002e1a	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x2dda	    0xc60500000000	                mov byte [0x04002e21], 0	      2664	gui.c	FUNCTION_40	IF_1
0x2de1	              0x90	                                     nop	      2666	gui.c	FUNCTION_40
0x2de2	              0x5d	                                 pop rbp	      2666	gui.c	FUNCTION_40
0x2de3	              0xc3	                                     ret	      2666	gui.c	FUNCTION_40
gui_clear_block	ELSE,0:IF,1:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	34
0x1e15	              0x55	                                push rbp	      1739	gui.c	ELSE_1	FUNCTION_28
0x1e16	          0x4889e5	                            mov rbp, rsp	      1739	gui.c	ELSE_1	FUNCTION_28
0x1e19	        0x4883ec10	                           sub rsp, 0x10	      1739	gui.c	ELSE_1	FUNCTION_28
0x1e1d	          0x897dfc	                mov dword [rbp - 4], edi	      1739	gui.c	ELSE_1	FUNCTION_28
0x1e20	          0x8975f8	                mov dword [rbp - 8], esi	      1739	gui.c	ELSE_1	FUNCTION_28
0x1e23	          0x8955f4	              mov dword [rbp - 0xc], edx	      1739	gui.c	ELSE_1	FUNCTION_28
0x1e26	          0x894df0	             mov dword [rbp - 0x10], ecx	      1739	gui.c	ELSE_1	FUNCTION_28
0x1e29	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x1e2c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x1e2f	            0x89d6	                            mov esi, edx	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x1e31	            0x89c7	                            mov edi, eax	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x1e33	      0xe800000000	                          call 0x4001e78	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x1e38	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x1e3b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x1e3e	          0x8b75f8	                mov esi, dword [rbp - 8]	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x1e41	          0x8b45fc	                mov eax, dword [rbp - 4]	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x1e44	            0x89c7	                            mov edi, eax	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x1e46	      0xe800000000	                          call 0x4001e8b	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x1e4b	    0x8b0500000000	            mov eax, dword [0x04001e91] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e51	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e54	            0x7c28	                            jl 0x4001ebe	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e56	    0x8b0500000000	            mov eax, dword [0x04001e9c] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e5c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e5f	            0x7f1d	                            jg 0x4001ebe	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e61	    0x8b0500000000	            mov eax, dword [0x04001ea7] 	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e67	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e6a	            0x7c12	                            jl 0x4001ebe	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e6c	    0x8b0500000000	            mov eax, dword [0x04001eb2] 	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e72	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e75	            0x7f07	                            jg 0x4001ebe	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e77	    0xc60500000000	                mov byte [0x04001ebe], 0	      1748	gui.c	ELSE_1	FUNCTION_28	IF_1
0x1e7e	              0x90	                                     nop	      1749	gui.c	ELSE_1	FUNCTION_28
0x1e7f	              0xc9	                                   leave	      1749	gui.c	ELSE_1	FUNCTION_28
0x1e80	              0xc3	                                     ret	      1749	gui.c	ELSE_1	FUNCTION_28
gui_exit	ELSE,0:IF,0:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	12
0xb70	              0x55	                                push rbp	       797	gui.c	FUNCTION_8
0xb71	          0x4889e5	                            mov rbp, rsp	       797	gui.c	FUNCTION_8
0xb74	        0x4883ec10	                           sub rsp, 0x10	       797	gui.c	FUNCTION_8
0xb78	          0x897dfc	                mov dword [rbp - 4], edi	       797	gui.c	FUNCTION_8
0xb7b	      0xe800000000	                          call 0x4000bc0	       800	gui.c	FUNCTION_8	CALL_1
0xb80	    0xc70500000000	               mov dword [0x04000bca], 0	       801	gui.c	FUNCTION_8
0xb8a	          0x8b45fc	                mov eax, dword [rbp - 4]	       802	gui.c	FUNCTION_8	CALL_2
0xb8d	            0x89c7	                            mov edi, eax	       802	gui.c	FUNCTION_8	CALL_2
0xb8f	      0xe800000000	                          call 0x4000bd4	       802	gui.c	FUNCTION_8	CALL_2
0xb94	              0x90	                                     nop	       803	gui.c	FUNCTION_8
0xb95	              0xc9	                                   leave	       803	gui.c	FUNCTION_8
0xb96	              0xc3	                                     ret	       803	gui.c	FUNCTION_8
gui_attempt_start	ELSE,0:IF,2:CALL,4:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	41
0x122	              0x55	                                push rbp	       159	gui.c	FUNCTION_2
0x123	          0x4889e5	                            mov rbp, rsp	       159	gui.c	FUNCTION_2
0x126	        0x4883ec20	                           sub rsp, 0x20	       159	gui.c	FUNCTION_2
0x12a	    0x64488b042528	                mov rax, qword fs:[0x28]	       159	gui.c	FUNCTION_2
0x133	        0x488945f8	                mov qword [rbp - 8], rax	       159	gui.c	FUNCTION_2
0x137	            0x31c0	                            xor eax, eax	       159	gui.c	FUNCTION_2
0x139	    0x8b0500000000	            mov eax, dword [0x0400017f] 	       162	gui.c	FUNCTION_2
0x13f	          0x83c001	                              add eax, 1	       162	gui.c	FUNCTION_2
0x142	    0x890500000000	            mov dword [0x04000188], eax 	       162	gui.c	FUNCTION_2
0x148	    0xc70500000000	               mov dword [0x04000192], 1	       163	gui.c	FUNCTION_2
0x152	    0xc70500000000	               mov dword [0x0400019c], 0	       166	gui.c	FUNCTION_2
0x15c	      0xbf00000000	                              mov edi, 0	       169	gui.c	FUNCTION_2	CALL_1
0x161	      0xe800000000	                          call 0x40001a6	       169	gui.c	FUNCTION_2	CALL_1
0x166	    0x8b0500000000	            mov eax, dword [0x040001ac] 	       170	gui.c	FUNCTION_2
0x16c	          0x83e801	                              sub eax, 1	       170	gui.c	FUNCTION_2
0x16f	    0x890500000000	            mov dword [0x040001b5], eax 	       170	gui.c	FUNCTION_2
0x175	    0x8b0500000000	            mov eax, dword [0x040001bb] 	       173	gui.c	FUNCTION_2	IF_1
0x17b	            0x85c0	                           test eax, eax	       173	gui.c	FUNCTION_2	IF_1
0x17d	            0x742e	                            je 0x40001ed	       173	gui.c	FUNCTION_2	IF_1
0x17f	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x183	        0x488d45e8	                   lea rax, [rbp - 0x18]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x187	          0x4889d6	                            mov rsi, rdx	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x18a	          0x4889c7	                            mov rdi, rax	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x18d	      0xe800000000	                          call 0x40001d2	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x192	          0x83f801	                              cmp eax, 1	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x195	            0x7511	                           jne 0x40001e8	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x197	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x19b	          0x4889c6	                            mov rsi, rax	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x19e	      0xbf3a000000	                           mov edi, 0x3a	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x1a3	      0xe800000000	                          call 0x40001e8	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x1a8	      0xe800000000	                          call 0x40001ed	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x1ad	    0x8b0500000000	            mov eax, dword [0x040001f3] 	       187	gui.c	FUNCTION_2
0x1b3	          0x83e801	                              sub eax, 1	       187	gui.c	FUNCTION_2
0x1b6	    0x890500000000	            mov dword [0x040001fc], eax 	       187	gui.c	FUNCTION_2
0x1bc	              0x90	                                     nop	       188	gui.c	FUNCTION_2
0x1bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	gui.c	FUNCTION_2
0x1c1	    0x644833042528	                xor rax, qword fs:[0x28]	       188	gui.c	FUNCTION_2
0x1ca	            0x7405	                            je 0x4000211	       188	gui.c	FUNCTION_2
0x1cc	      0xe800000000	                          call 0x4000211	       188	gui.c	FUNCTION_2
0x1d1	              0xc9	                                   leave	       188	gui.c	FUNCTION_2
0x1d2	              0xc3	                                     ret	       188	gui.c	FUNCTION_2
gui_create_scrollbar	ELSE,0:IF,0:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	42
0x4b18	              0x55	                                push rbp	      3905	gui.c	FUNCTION_61
0x4b19	          0x4889e5	                            mov rbp, rsp	      3905	gui.c	FUNCTION_61
0x4b1c	        0x4883ec20	                           sub rsp, 0x20	      3905	gui.c	FUNCTION_61
0x4b20	        0x48897df8	                mov qword [rbp - 8], rdi	      3905	gui.c	FUNCTION_61
0x4b24	          0x8975f4	              mov dword [rbp - 0xc], esi	      3905	gui.c	FUNCTION_61
0x4b27	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3905	gui.c	FUNCTION_61
0x4b2b	    0x8b0500000000	            mov eax, dword [0x04004b71] 	      3908	gui.c	FUNCTION_61
0x4b31	          0x8d5001	                      lea edx, [rax + 1]	      3908	gui.c	FUNCTION_61
0x4b34	    0x891500000000	            mov dword [0x04004b7a], edx 	      3908	gui.c	FUNCTION_61
0x4b3a	          0x4863d0	                         movsxd rdx, eax	      3908	gui.c	FUNCTION_61
0x4b3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3908	gui.c	FUNCTION_61
0x4b41	          0x488910	                    mov qword [rax], rdx	      3908	gui.c	FUNCTION_61
0x4b44	        0x488b45f8	                mov rax, qword [rbp - 8]	      3909	gui.c	FUNCTION_61
0x4b48	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3909	gui.c	FUNCTION_61
0x4b4c	        0x48895008	                mov qword [rax + 8], rdx	      3909	gui.c	FUNCTION_61
0x4b50	        0x488b45f8	                mov rax, qword [rbp - 8]	      3910	gui.c	FUNCTION_61
0x4b54	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3910	gui.c	FUNCTION_61
0x4b57	          0x895010	             mov dword [rax + 0x10], edx	      3910	gui.c	FUNCTION_61
0x4b5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3911	gui.c	FUNCTION_61
0x4b5e	    0x48c740180000	               mov qword [rax + 0x18], 0	      3911	gui.c	FUNCTION_61
0x4b66	        0x488b45f8	                mov rax, qword [rbp - 8]	      3915	gui.c	FUNCTION_61
0x4b6a	    0x48c740200100	               mov qword [rax + 0x20], 1	      3915	gui.c	FUNCTION_61
0x4b72	        0x488b45f8	                mov rax, qword [rbp - 8]	      3916	gui.c	FUNCTION_61
0x4b76	    0x48c740280100	               mov qword [rax + 0x28], 1	      3916	gui.c	FUNCTION_61
0x4b7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3917	gui.c	FUNCTION_61
0x4b82	    0xc74030000000	               mov dword [rax + 0x30], 0	      3917	gui.c	FUNCTION_61
0x4b89	        0x488b45f8	                mov rax, qword [rbp - 8]	      3918	gui.c	FUNCTION_61
0x4b8d	    0xc74034000000	               mov dword [rax + 0x34], 0	      3918	gui.c	FUNCTION_61
0x4b94	        0x488b45f8	                mov rax, qword [rbp - 8]	      3919	gui.c	FUNCTION_61
0x4b98	    0xc74038000000	               mov dword [rax + 0x38], 0	      3919	gui.c	FUNCTION_61
0x4b9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3920	gui.c	FUNCTION_61
0x4ba3	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      3920	gui.c	FUNCTION_61
0x4baa	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3921	gui.c	FUNCTION_61	CALL_1
0x4baf	           0xf94c0	                                 sete al	      3921	gui.c	FUNCTION_61	CALL_1
0x4bb2	           0xfb6d0	                           movzx edx, al	      3921	gui.c	FUNCTION_61	CALL_1
0x4bb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3921	gui.c	FUNCTION_61	CALL_1
0x4bb9	            0x89d6	                            mov esi, edx	      3921	gui.c	FUNCTION_61	CALL_1
0x4bbb	          0x4889c7	                            mov rdi, rax	      3921	gui.c	FUNCTION_61	CALL_1
0x4bbe	      0xe800000000	                          call 0x4004c03	      3921	gui.c	FUNCTION_61	CALL_1
0x4bc3	              0x90	                                     nop	      3922	gui.c	FUNCTION_61
0x4bc4	              0xc9	                                   leave	      3922	gui.c	FUNCTION_61
0x4bc5	              0xc3	                                     ret	      3922	gui.c	FUNCTION_61
gui_init_check	ELSE,0:IF,2:CALL,5:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	58
0x42c	              0x55	                                push rbp	       366	gui.c	FUNCTION_6
0x42d	          0x4889e5	                            mov rbp, rsp	       366	gui.c	FUNCTION_6
0x430	    0x8b0500000000	            mov eax, dword [0x04000476] 	       369	gui.c	FUNCTION_6	IF_1
0x436	          0x83f802	                              cmp eax, 2	       369	gui.c	FUNCTION_6	IF_1
0x439	            0x7427	                            je 0x40004a2	       369	gui.c	FUNCTION_6	IF_1
0x43b	    0x8b0500000000	            mov eax, dword [0x04000481] 	       371	gui.c	FUNCTION_6	IF_1	IF_2
0x441	            0x85c0	                           test eax, eax	       371	gui.c	FUNCTION_6	IF_1	IF_2
0x443	            0x7512	                           jne 0x4000497	       371	gui.c	FUNCTION_6	IF_1	IF_2
0x445	      0xbf00000000	                              mov edi, 0	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x44a	      0xe800000000	                          call 0x400048f	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x44f	          0x4889c7	                            mov rdi, rax	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x452	      0xe800000000	                          call 0x4000497	       372	gui.c	FUNCTION_6	IF_1	CALL_2
0x457	    0x8b0500000000	            mov eax, dword [0x0400049d] 	       373	gui.c	FUNCTION_6	IF_1
0x45d	      0xe93c010000	                           jmp 0x40005de	       373	gui.c	FUNCTION_6	IF_1
0x462	    0xc70500000000	               mov dword [0x040004ac], 0	       376	gui.c	FUNCTION_6
0x46c	    0xc70500000000	               mov dword [0x040004b6], 0	       377	gui.c	FUNCTION_6
0x476	    0xc70500000000	               mov dword [0x040004c0], 1	       378	gui.c	FUNCTION_6
0x480	    0xc70500000000	     mov dword [0x040004ca], 0xffffffff 	       379	gui.c	FUNCTION_6
0x48a	    0x48c705000000	               mov qword [0x040004d5], 0	       380	gui.c	FUNCTION_6
0x495	    0xc70500000000	               mov dword [0x040004df], 0	       381	gui.c	FUNCTION_6
0x49f	    0xc70500000000	               mov dword [0x040004e9], 0	       382	gui.c	FUNCTION_6
0x4a9	    0xc70500000000	               mov dword [0x040004f3], 0	       383	gui.c	FUNCTION_6
0x4b3	    0x488b05000000	            mov rax, qword [0x040004fa] 	       384	gui.c	FUNCTION_6
0x4ba	    0x890500000000	            mov dword [0x04000500], eax 	       384	gui.c	FUNCTION_6
0x4c0	    0x488b05000000	            mov rax, qword [0x04000507] 	       385	gui.c	FUNCTION_6
0x4c7	    0x890500000000	            mov dword [0x0400050d], eax 	       385	gui.c	FUNCTION_6
0x4cd	    0xc60500000000	                mov byte [0x04000514], 0	       387	gui.c	FUNCTION_6
0x4d4	    0xc70500000000	               mov dword [0x0400051e], 0	       388	gui.c	FUNCTION_6
0x4de	    0x488b05000000	            mov rax, qword [0x04000525] 	       389	gui.c	FUNCTION_6
0x4e5	          0x83e801	                              sub eax, 1	       389	gui.c	FUNCTION_6
0x4e8	    0x890500000000	            mov dword [0x0400052e], eax 	       389	gui.c	FUNCTION_6
0x4ee	    0xc70500000000	               mov dword [0x04000538], 0	       390	gui.c	FUNCTION_6
0x4f8	    0x488b05000000	            mov rax, qword [0x0400053f] 	       391	gui.c	FUNCTION_6
0x4ff	          0x83e801	                              sub eax, 1	       391	gui.c	FUNCTION_6
0x502	    0x890500000000	            mov dword [0x04000548], eax 	       391	gui.c	FUNCTION_6
0x508	    0xc70500000000	               mov dword [0x04000552], 0	       392	gui.c	FUNCTION_6
0x512	    0xc70500000000	               mov dword [0x0400055c], 1	       393	gui.c	FUNCTION_6
0x51c	    0xc70500000000	               mov dword [0x04000566], 1	       394	gui.c	FUNCTION_6
0x526	    0xc70500000000	               mov dword [0x04000570], 0	       395	gui.c	FUNCTION_6
0x530	    0xc70500000000	               mov dword [0x0400057a], 0	       396	gui.c	FUNCTION_6
0x53a	    0x48c705000000	               mov qword [0x04000585], 0	       398	gui.c	FUNCTION_6
0x545	    0x48c705000000	               mov qword [0x04000590], 0	       408	gui.c	FUNCTION_6
0x550	    0xc60500000000	                mov byte [0x04000597], 1	       424	gui.c	FUNCTION_6
0x557	    0xc70500000000	           mov dword [0x040005a1], 0x10 	       440	gui.c	FUNCTION_6
0x561	    0x8b0500000000	            mov eax, dword [0x040005a7] 	       440	gui.c	FUNCTION_6
0x567	    0x890500000000	            mov dword [0x040005ad], eax 	       440	gui.c	FUNCTION_6
0x56d	    0xc70500000000	     mov dword [0x040005b7], 0xffffffff 	       441	gui.c	FUNCTION_6
0x577	    0x8b0500000000	            mov eax, dword [0x040005bd] 	       453	gui.c	FUNCTION_6	CALL_4
0x57d	            0x85c0	                           test eax, eax	       453	gui.c	FUNCTION_6	CALL_4
0x57f	            0x740c	                            je 0x40005cd	       453	gui.c	FUNCTION_6	CALL_4
0x581	      0xbf01000000	                              mov edi, 1	       453	gui.c	FUNCTION_6	CALL_4
0x586	      0xe800000000	                          call 0x40005cb	       453	gui.c	FUNCTION_6	CALL_4
0x58b	            0xeb05	                           jmp 0x40005d2	       453	gui.c	FUNCTION_6	CALL_4
0x58d	      0xe800000000	                          call 0x40005d2	       453	gui.c	FUNCTION_6	CALL_4
0x592	    0x890500000000	            mov dword [0x040005d8], eax 	       453	gui.c	FUNCTION_6	CALL_4
0x598	    0x8b0500000000	            mov eax, dword [0x040005de] 	       458	gui.c	FUNCTION_6
0x59e	              0x5d	                                 pop rbp	       459	gui.c	FUNCTION_6
0x59f	              0xc3	                                     ret	       459	gui.c	FUNCTION_6
gui_disable_flush	ELSE,0:IF,0:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	8
0x2389	              0x55	                                push rbp	      2015	gui.c	FUNCTION_33
0x238a	          0x4889e5	                            mov rbp, rsp	      2015	gui.c	FUNCTION_33
0x238d	    0x8b0500000000	            mov eax, dword [0x040023d3] 	      2016	gui.c	FUNCTION_33
0x2393	          0x83c001	                              add eax, 1	      2016	gui.c	FUNCTION_33
0x2396	    0x890500000000	            mov dword [0x040023dc], eax 	      2016	gui.c	FUNCTION_33
0x239c	              0x90	                                     nop	      2017	gui.c	FUNCTION_33
0x239d	              0x5d	                                 pop rbp	      2017	gui.c	FUNCTION_33
0x239e	              0xc3	                                     ret	      2017	gui.c	FUNCTION_33
gui_wait_for_chars_3	ELSE,0:IF,0:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	11
0x3405	              0x55	                                push rbp	      2928	gui.c	FUNCTION_45
0x3406	          0x4889e5	                            mov rbp, rsp	      2928	gui.c	FUNCTION_45
0x3409	        0x4883ec20	                           sub rsp, 0x20	      2928	gui.c	FUNCTION_45
0x340d	        0x48897df8	                mov qword [rbp - 8], rdi	      2928	gui.c	FUNCTION_45
0x3411	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2928	gui.c	FUNCTION_45
0x3415	          0x8955ec	             mov dword [rbp - 0x14], edx	      2928	gui.c	FUNCTION_45
0x3418	        0x488b45f8	                mov rax, qword [rbp - 8]	      2929	gui.c	FUNCTION_45	CALL_1
0x341c	          0x4889c7	                            mov rdi, rax	      2929	gui.c	FUNCTION_45	CALL_1
0x341f	      0xe800000000	                          call 0x4003464	      2929	gui.c	FUNCTION_45	CALL_1
0x3424	              0xc9	                                   leave	      2930	gui.c	FUNCTION_45
0x3425	              0xc3	                                     ret	      2930	gui.c	FUNCTION_45
gui_wait_for_chars_or_timer	ELSE,0:IF,0:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	12
0x3426	              0x55	                                push rbp	      2939	gui.c	FUNCTION_46
0x3427	          0x4889e5	                            mov rbp, rsp	      2939	gui.c	FUNCTION_46
0x342a	        0x4883ec10	                           sub rsp, 0x10	      2939	gui.c	FUNCTION_46
0x342e	        0x48897df8	                mov qword [rbp - 8], rdi	      2939	gui.c	FUNCTION_46
0x3432	        0x488b45f8	                mov rax, qword [rbp - 8]	      2941	gui.c	FUNCTION_46	CALL_1
0x3436	      0xb900000000	                              mov ecx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x343b	      0xba00000000	                              mov edx, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x3440	      0xbe00000000	                              mov esi, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x3445	          0x4889c7	                            mov rdi, rax	      2941	gui.c	FUNCTION_46	CALL_1
0x3448	      0xe800000000	                          call 0x400348d	      2941	gui.c	FUNCTION_46	CALL_1
0x344d	              0xc9	                                   leave	      2945	gui.c	FUNCTION_46
0x344e	              0xc3	                                     ret	      2945	gui.c	FUNCTION_46
gui_insert_lines	ELSE,2:IF,5:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	56
0x333c	              0x55	                                push rbp	      2895	gui.c	FUNCTION_44
0x333d	          0x4889e5	                            mov rbp, rsp	      2895	gui.c	FUNCTION_44
0x3340	        0x4883ec10	                           sub rsp, 0x10	      2895	gui.c	FUNCTION_44
0x3344	          0x897dfc	                mov dword [rbp - 4], edi	      2895	gui.c	FUNCTION_44
0x3347	          0x8975f8	                mov dword [rbp - 8], esi	      2895	gui.c	FUNCTION_44
0x334a	        0x837df800	                  cmp dword [rbp - 8], 0	      2896	gui.c	FUNCTION_44	IF_1
0x334e	     0xf8eae000000	                           jle 0x4003442	      2896	gui.c	FUNCTION_44	IF_1
0x3354	          0x8b55fc	                mov edx, dword [rbp - 4]	      2899	gui.c	FUNCTION_44	IF_2
0x3357	          0x8b45f8	                mov eax, dword [rbp - 8]	      2899	gui.c	FUNCTION_44	IF_2
0x335a	             0x1c2	                            add edx, eax	      2899	gui.c	FUNCTION_44	IF_2
0x335c	    0x8b0500000000	            mov eax, dword [0x040033a2] 	      2899	gui.c	FUNCTION_44	IF_2
0x3362	            0x39c2	                            cmp edx, eax	      2899	gui.c	FUNCTION_44	IF_2
0x3364	            0x7e1e	                           jle 0x40033c4	      2899	gui.c	FUNCTION_44	IF_2
0x3366	    0x8b0d00000000	            mov ecx, dword [0x040033ac] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x336c	    0x8b1500000000	            mov edx, dword [0x040033b2] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x3372	    0x8b3500000000	            mov esi, dword [0x040033b8] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x3378	          0x8b45fc	                mov eax, dword [rbp - 4]	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x337b	            0x89c7	                            mov edi, eax	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x337d	      0xe800000000	                          call 0x40033c2	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x3382	            0xeb7f	                           jmp 0x4003443	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x3384	          0x8b55f8	                mov edx, dword [rbp - 8]	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x3387	          0x8b45fc	                mov eax, dword [rbp - 4]	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x338a	            0x89d6	                            mov esi, edx	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x338c	            0x89c7	                            mov edi, eax	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x338e	      0xe800000000	                          call 0x40033d3	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x3393	    0x8b1500000000	            mov edx, dword [0x040033d9] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x3399	    0x8b0500000000	            mov eax, dword [0x040033df] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x339f	            0x39c2	                            cmp edx, eax	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33a1	            0x7c60	                            jl 0x4003443	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33a3	    0x8b1500000000	            mov edx, dword [0x040033e9] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33a9	    0x8b0500000000	            mov eax, dword [0x040033ef] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33af	            0x39c2	                            cmp edx, eax	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33b1	            0x7c50	                            jl 0x4003443	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33b3	    0x8b1500000000	            mov edx, dword [0x040033f9] 	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33b9	    0x8b0500000000	            mov eax, dword [0x040033ff] 	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33bf	            0x39c2	                            cmp edx, eax	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33c1	            0x7f40	                            jg 0x4003443	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x33c3	    0x8b1500000000	            mov edx, dword [0x04003409] 	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33c9	    0x8b0500000000	            mov eax, dword [0x0400340f] 	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33cf	          0x2b45f8	                sub eax, dword [rbp - 8]	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33d2	            0x39c2	                            cmp edx, eax	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33d4	            0x7f13	                            jg 0x4003429	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33d6	    0x8b1500000000	            mov edx, dword [0x0400341c] 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33dc	          0x8b45f8	                mov eax, dword [rbp - 8]	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33df	             0x1d0	                            add eax, edx	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33e1	    0x890500000000	            mov dword [0x04003427], eax 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33e7	            0xeb1a	                           jmp 0x4003443	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x33e9	    0x8b1500000000	            mov edx, dword [0x0400342f] 	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x33ef	    0x8b0500000000	            mov eax, dword [0x04003435] 	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x33f5	            0x39c2	                            cmp edx, eax	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x33f7	            0x7f0a	                            jg 0x4003443	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x33f9	    0xc60500000000	                mov byte [0x04003440], 0	      2914	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x3400	            0xeb01	                           jmp 0x4003443	      2914	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x3402	              0x90	                                     nop	      2897	gui.c	FUNCTION_44	IF_1
0x3403	              0xc9	                                   leave	      2917	gui.c	FUNCTION_44
0x3404	              0xc3	                                     ret	      2917	gui.c	FUNCTION_44
gui_has_tabline	ELSE,0:IF,1:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	20
0x43c9	              0x55	                                push rbp	      3691	gui.c	FUNCTION_55
0x43ca	          0x4889e5	                            mov rbp, rsp	      3691	gui.c	FUNCTION_55
0x43cd	      0xe800000000	                          call 0x4004412	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x43d2	            0x85c0	                           test eax, eax	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x43d4	            0x7428	                            je 0x400443e	      3692	gui.c	FUNCTION_55	IF_1	CALL_1
0x43d6	    0x488b05000000	            mov rax, qword [0x0400441d] 	      3693	gui.c	FUNCTION_55	IF_1
0x43dd	          0x4885c0	                           test rax, rax	      3693	gui.c	FUNCTION_55	IF_1
0x43e0	            0x741c	                            je 0x400443e	      3693	gui.c	FUNCTION_55	IF_1
0x43e2	    0x488b05000000	            mov rax, qword [0x04004429] 	      3694	gui.c	FUNCTION_55	IF_1
0x43e9	        0x4883f801	                              cmp rax, 1	      3694	gui.c	FUNCTION_55	IF_1
0x43ed	            0x7516	                           jne 0x4004445	      3694	gui.c	FUNCTION_55	IF_1
0x43ef	    0x488b05000000	            mov rax, qword [0x04004436] 	      3694	gui.c	FUNCTION_55	IF_1
0x43f6	          0x488b00	                    mov rax, qword [rax]	      3694	gui.c	FUNCTION_55	IF_1
0x43f9	          0x4885c0	                           test rax, rax	      3694	gui.c	FUNCTION_55	IF_1
0x43fc	            0x7507	                           jne 0x4004445	      3694	gui.c	FUNCTION_55	IF_1
0x43fe	      0xb800000000	                              mov eax, 0	      3695	gui.c	FUNCTION_55	IF_1
0x4403	            0xeb05	                           jmp 0x400444a	      3695	gui.c	FUNCTION_55	IF_1
0x4405	      0xb801000000	                              mov eax, 1	      3696	gui.c	FUNCTION_55
0x440a	              0x5d	                                 pop rbp	      3697	gui.c	FUNCTION_55
0x440b	              0xc3	                                     ret	      3697	gui.c	FUNCTION_55
gui_update_tabline	ELSE,0:IF,4:CALL,6:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	42
0x440c	              0x55	                                push rbp	      3705	gui.c	FUNCTION_56
0x440d	          0x4889e5	                            mov rbp, rsp	      3705	gui.c	FUNCTION_56
0x4410	        0x4883ec10	                           sub rsp, 0x10	      3705	gui.c	FUNCTION_56
0x4414	      0xe8b0ffffff	                call sym.gui_has_tabline	      3706	gui.c	FUNCTION_56	CALL_1
0x4419	          0x8945f8	                mov dword [rbp - 8], eax	      3706	gui.c	FUNCTION_56	CALL_1
0x441c	      0xe800000000	                          call 0x4004461	      3707	gui.c	FUNCTION_56	CALL_2
0x4421	          0x8945fc	                mov dword [rbp - 4], eax	      3707	gui.c	FUNCTION_56	CALL_2
0x4424	    0x8b0500000000	            mov eax, dword [0x0400446a] 	      3709	gui.c	FUNCTION_56	IF_1
0x442a	            0x85c0	                           test eax, eax	      3709	gui.c	FUNCTION_56	IF_1
0x442c	            0x7560	                           jne 0x40044ce	      3709	gui.c	FUNCTION_56	IF_1
0x442e	    0x8b0500000000	            mov eax, dword [0x04004474] 	      3709	gui.c	FUNCTION_56	IF_1
0x4434	            0x85c0	                           test eax, eax	      3709	gui.c	FUNCTION_56	IF_1
0x4436	            0x7556	                           jne 0x40044ce	      3709	gui.c	FUNCTION_56	IF_1
0x4438	      0xe800000000	                          call 0x400447d	      3713	gui.c	FUNCTION_56	IF_1	CALL_3
0x443d	        0x837df800	                  cmp dword [rbp - 8], 0	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4441	           0xf94c2	                                 sete dl	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4444	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4448	           0xf94c0	                                 sete al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x444b	            0x31d0	                            xor eax, edx	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x444d	            0x84c0	                             test al, al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x444f	            0x740a	                            je 0x400449b	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4451	          0x8b45f8	                mov eax, dword [rbp - 8]	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x4454	            0x89c7	                            mov edi, eax	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x4456	      0xe800000000	                          call 0x400449b	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x445b	        0x837df800	                  cmp dword [rbp - 8], 0	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x445f	            0x7405	                            je 0x40044a6	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4461	      0xe800000000	                          call 0x40044a6	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
0x4466	        0x837df800	                  cmp dword [rbp - 8], 0	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x446a	           0xf94c2	                                 sete dl	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x446d	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x4471	           0xf94c0	                                 sete al	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x4474	            0x31d0	                            xor eax, edx	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x4476	            0x84c0	                             test al, al	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x4478	            0x7414	                            je 0x40044ce	      3722	gui.c	FUNCTION_56	IF_1	IF_4
0x447a	          0x8b45f8	                mov eax, dword [rbp - 8]	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x447d	      0xba01000000	                              mov edx, 1	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4482	            0x89c6	                            mov esi, eax	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4484	      0xbf00000000	                              mov edi, 0	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x4489	      0xe800000000	                          call 0x40044ce	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x448e	              0x90	                                     nop	      3725	gui.c	FUNCTION_56
0x448f	              0xc9	                                   leave	      3725	gui.c	FUNCTION_56
0x4490	              0xc3	                                     ret	      3725	gui.c	FUNCTION_56
gui_dont_update_cursor	ELSE,0:IF,2:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	14
0x234b	              0x55	                                push rbp	      1992	gui.c	FUNCTION_31
0x234c	          0x4889e5	                            mov rbp, rsp	      1992	gui.c	FUNCTION_31
0x234f	        0x4883ec10	                           sub rsp, 0x10	      1992	gui.c	FUNCTION_31
0x2353	          0x897dfc	                mov dword [rbp - 4], edi	      1992	gui.c	FUNCTION_31
0x2356	    0x8b0500000000	            mov eax, dword [0x0400239c] 	      1993	gui.c	FUNCTION_31	IF_1
0x235c	            0x85c0	                           test eax, eax	      1993	gui.c	FUNCTION_31	IF_1
0x235e	            0x7415	                            je 0x40023b5	      1993	gui.c	FUNCTION_31	IF_1
0x2360	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x2364	            0x7405	                            je 0x40023ab	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x2366	      0xe800000000	                          call 0x40023ab	      1997	gui.c	FUNCTION_31	IF_1	CALL_1
0x236b	    0xc70500000000	               mov dword [0x040023b5], 0	      1998	gui.c	FUNCTION_31	IF_1
0x2375	              0x90	                                     nop	      2000	gui.c	FUNCTION_31
0x2376	              0xc9	                                   leave	      2000	gui.c	FUNCTION_31
0x2377	              0xc3	                                     ret	      2000	gui.c	FUNCTION_31
gui_reset_scroll_region	ELSE,0:IF,0:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	13
0x1d7d	              0x55	                                push rbp	      1704	gui.c	FUNCTION_25
0x1d7e	          0x4889e5	                            mov rbp, rsp	      1704	gui.c	FUNCTION_25
0x1d81	    0xc70500000000	               mov dword [0x04001dcb], 0	      1705	gui.c	FUNCTION_25
0x1d8b	    0x8b0500000000	            mov eax, dword [0x04001dd1] 	      1706	gui.c	FUNCTION_25
0x1d91	          0x83e801	                              sub eax, 1	      1706	gui.c	FUNCTION_25
0x1d94	    0x890500000000	            mov dword [0x04001dda], eax 	      1706	gui.c	FUNCTION_25
0x1d9a	    0xc70500000000	               mov dword [0x04001de4], 0	      1707	gui.c	FUNCTION_25
0x1da4	    0x8b0500000000	            mov eax, dword [0x04001dea] 	      1708	gui.c	FUNCTION_25
0x1daa	          0x83e801	                              sub eax, 1	      1708	gui.c	FUNCTION_25
0x1dad	    0x890500000000	            mov dword [0x04001df3], eax 	      1708	gui.c	FUNCTION_25
0x1db3	              0x90	                                     nop	      1709	gui.c	FUNCTION_25
0x1db4	              0x5d	                                 pop rbp	      1709	gui.c	FUNCTION_25
0x1db5	              0xc3	                                     ret	      1709	gui.c	FUNCTION_25
gui_do_findrepl	ELSE,4:IF,16:CALL,32:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	228
0x6e95	              0x55	                                push rbp	      5276	gui.c	FUNCTION_91
0x6e96	          0x4889e5	                            mov rbp, rsp	      5276	gui.c	FUNCTION_91
0x6e99	    0x4881ec200100	                          sub rsp, 0x120	      5276	gui.c	FUNCTION_91
0x6ea0	    0x89bdfcfeffff	            mov dword [rbp - 0x104], edi	      5276	gui.c	FUNCTION_91
0x6ea6	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	      5276	gui.c	FUNCTION_91
0x6ead	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	      5276	gui.c	FUNCTION_91
0x6eb4	    0x898df8feffff	            mov dword [rbp - 0x108], ecx	      5276	gui.c	FUNCTION_91
0x6eba	    0x64488b042528	                mov rax, qword fs:[0x28]	      5276	gui.c	FUNCTION_91
0x6ec3	        0x488945f8	                mov qword [rbp - 8], rax	      5276	gui.c	FUNCTION_91
0x6ec7	            0x31c0	                            xor eax, eax	      5276	gui.c	FUNCTION_91
0x6ec9	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5279	gui.c	FUNCTION_91
0x6ecf	          0x83e007	                              and eax, 7	      5279	gui.c	FUNCTION_91
0x6ed2	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      5279	gui.c	FUNCTION_91
0x6ed8	    0x8b0500000000	            mov eax, dword [0x04006f1e] 	      5282	gui.c	FUNCTION_91
0x6ede	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      5282	gui.c	FUNCTION_91
0x6ee4	    0x8b0500000000	            mov eax, dword [0x04006f2a] 	      5288	gui.c	FUNCTION_91	IF_1
0x6eea	            0x85c0	                           test eax, eax	      5288	gui.c	FUNCTION_91	IF_1
0x6eec	            0x750a	                           jne 0x4006f38	      5288	gui.c	FUNCTION_91	IF_1
0x6eee	    0x8b0500000000	            mov eax, dword [0x04006f34] 	      5288	gui.c	FUNCTION_91	IF_1
0x6ef4	            0x85c0	                           test eax, eax	      5288	gui.c	FUNCTION_91	IF_1
0x6ef6	            0x740a	                            je 0x4006f42	      5288	gui.c	FUNCTION_91	IF_1
0x6ef8	      0xb800000000	                              mov eax, 0	      5289	gui.c	FUNCTION_91	IF_1
0x6efd	      0xe9bb030000	                           jmp 0x40072fd	      5289	gui.c	FUNCTION_91	IF_1
0x6f02	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 3	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x6f09	            0x7409	                            je 0x4006f54	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x6f0b	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x6f12	            0x7513	                           jne 0x4006f67	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x6f14	      0xe800000000	                          call 0x4006f59	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x6f19	            0x85c0	                           test eax, eax	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x6f1b	            0x740a	                            je 0x4006f67	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x6f1d	      0xb800000000	                              mov eax, 0	      5293	gui.c	FUNCTION_91	IF_2
0x6f22	      0xe996030000	                           jmp 0x40072fd	      5293	gui.c	FUNCTION_91	IF_2
0x6f27	    0xc70500000000	               mov dword [0x04006f71], 1	      5295	gui.c	FUNCTION_91
0x6f31	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5297	gui.c	FUNCTION_91	CALL_2
0x6f38	      0xba64000000	                           mov edx, 0x64	      5297	gui.c	FUNCTION_91	CALL_2
0x6f3d	      0xbe01000000	                              mov esi, 1	      5297	gui.c	FUNCTION_91	CALL_2
0x6f42	          0x4889c7	                            mov rdi, rax	      5297	gui.c	FUNCTION_91	CALL_2
0x6f45	      0xe800000000	                          call 0x4006f8a	      5297	gui.c	FUNCTION_91	CALL_2
0x6f4a	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5298	gui.c	FUNCTION_91	IF_3
0x6f51	            0x7514	                           jne 0x4006fa7	      5298	gui.c	FUNCTION_91	IF_3
0x6f53	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5299	gui.c	FUNCTION_91	CALL_3
0x6f5a	      0xbe00000000	                              mov esi, 0	      5299	gui.c	FUNCTION_91	CALL_3
0x6f5f	          0x4889c7	                            mov rdi, rax	      5299	gui.c	FUNCTION_91	CALL_3
0x6f62	      0xe800000000	                          call 0x4006fa7	      5299	gui.c	FUNCTION_91	CALL_3
0x6f67	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5301	gui.c	FUNCTION_91	CALL_4
0x6f6e	      0xbe00000000	                              mov esi, 0	      5301	gui.c	FUNCTION_91	CALL_4
0x6f73	          0x4889c7	                            mov rdi, rax	      5301	gui.c	FUNCTION_91	CALL_4
0x6f76	      0xe800000000	                          call 0x4006fbb	      5301	gui.c	FUNCTION_91	CALL_4
0x6f7b	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5302	gui.c	FUNCTION_91	IF_4
0x6f81	          0x83e010	                           and eax, 0x10	      5302	gui.c	FUNCTION_91	IF_4
0x6f84	            0x85c0	                           test eax, eax	      5302	gui.c	FUNCTION_91	IF_4
0x6f86	            0x7416	                            je 0x4006fde	      5302	gui.c	FUNCTION_91	IF_4
0x6f88	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5303	gui.c	FUNCTION_91	CALL_5
0x6f8f	      0xbe00000000	                              mov esi, 0	      5303	gui.c	FUNCTION_91	CALL_5
0x6f94	          0x4889c7	                            mov rdi, rax	      5303	gui.c	FUNCTION_91	CALL_5
0x6f97	      0xe800000000	                          call 0x4006fdc	      5303	gui.c	FUNCTION_91	CALL_5
0x6f9c	            0xeb14	                           jmp 0x4006ff2	      5303	gui.c	FUNCTION_91	CALL_5
0x6f9e	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5305	gui.c	FUNCTION_91	CALL_6
0x6fa5	      0xbe00000000	                              mov esi, 0	      5305	gui.c	FUNCTION_91	CALL_6
0x6faa	          0x4889c7	                            mov rdi, rax	      5305	gui.c	FUNCTION_91	CALL_6
0x6fad	      0xe800000000	                          call 0x4006ff2	      5305	gui.c	FUNCTION_91	CALL_6
0x6fb2	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5306	gui.c	FUNCTION_91	IF_5
0x6fb8	          0x83e008	                              and eax, 8	      5306	gui.c	FUNCTION_91	IF_5
0x6fbb	            0x85c0	                           test eax, eax	      5306	gui.c	FUNCTION_91	IF_5
0x6fbd	            0x7414	                            je 0x4007013	      5306	gui.c	FUNCTION_91	IF_5
0x6fbf	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5307	gui.c	FUNCTION_91	CALL_7
0x6fc6	      0xbe00000000	                              mov esi, 0	      5307	gui.c	FUNCTION_91	CALL_7
0x6fcb	          0x4889c7	                            mov rdi, rax	      5307	gui.c	FUNCTION_91	CALL_7
0x6fce	      0xe800000000	                          call 0x4007013	      5307	gui.c	FUNCTION_91	CALL_7
0x6fd3	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5308	gui.c	FUNCTION_91	IF_6
0x6fda	            0x7409	                            je 0x4007025	      5308	gui.c	FUNCTION_91	IF_6
0x6fdc	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5308	gui.c	FUNCTION_91	IF_6
0x6fe3	            0x7420	                            je 0x4007045	      5308	gui.c	FUNCTION_91	IF_6
0x6fe5	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	      5309	gui.c	FUNCTION_91	CALL_8
0x6fec	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5309	gui.c	FUNCTION_91	CALL_8
0x6ff3	      0xba2f000000	                           mov edx, 0x2f	      5309	gui.c	FUNCTION_91	CALL_8
0x6ff8	          0x4889ce	                            mov rsi, rcx	      5309	gui.c	FUNCTION_91	CALL_8
0x6ffb	          0x4889c7	                            mov rdi, rax	      5309	gui.c	FUNCTION_91	CALL_8
0x6ffe	      0xe8e4fdffff	                     call sym.concat_esc	      5309	gui.c	FUNCTION_91	CALL_8
0x7003	            0xeb1e	                           jmp 0x4007063	      5309	gui.c	FUNCTION_91	CALL_8
0x7005	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	      5311	gui.c	FUNCTION_91	CALL_9
0x700c	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5311	gui.c	FUNCTION_91	CALL_9
0x7013	      0xba3f000000	                           mov edx, 0x3f	      5311	gui.c	FUNCTION_91	CALL_9
0x7018	          0x4889ce	                            mov rsi, rcx	      5311	gui.c	FUNCTION_91	CALL_9
0x701b	          0x4889c7	                            mov rdi, rax	      5311	gui.c	FUNCTION_91	CALL_9
0x701e	      0xe8c4fdffff	                     call sym.concat_esc	      5311	gui.c	FUNCTION_91	CALL_9
0x7023	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5312	gui.c	FUNCTION_91	IF_7
0x7029	          0x83e008	                              and eax, 8	      5312	gui.c	FUNCTION_91	IF_7
0x702c	            0x85c0	                           test eax, eax	      5312	gui.c	FUNCTION_91	IF_7
0x702e	            0x7414	                            je 0x4007084	      5312	gui.c	FUNCTION_91	IF_7
0x7030	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5313	gui.c	FUNCTION_91	CALL_10
0x7037	      0xbe00000000	                              mov esi, 0	      5313	gui.c	FUNCTION_91	CALL_10
0x703c	          0x4889c7	                            mov rdi, rax	      5313	gui.c	FUNCTION_91	CALL_10
0x703f	      0xe800000000	                          call 0x4007084	      5313	gui.c	FUNCTION_91	CALL_10
0x7044	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5315	gui.c	FUNCTION_91	IF_8
0x704b	            0x7575	                           jne 0x4007102	      5315	gui.c	FUNCTION_91	IF_8
0x704d	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x7054	      0xbe00000000	                              mov esi, 0	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x7059	          0x4889c7	                            mov rdi, rax	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x705c	      0xe800000000	                          call 0x40070a1	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x7061	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x7068	      0xbe00000000	                              mov esi, 0	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x706d	          0x4889c7	                            mov rdi, rax	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x7070	      0xe800000000	                          call 0x40070b5	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x7075	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x707c	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x7084	            0x7419	                            je 0x40070df	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x7086	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x708d	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x7094	          0x4889d6	                            mov rsi, rdx	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x7097	          0x4889c7	                            mov rdi, rax	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x709a	      0xe800000000	                          call 0x40070df	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x709f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x70a6	          0x4889c7	                            mov rdi, rax	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x70a9	      0xe800000000	                          call 0x40070ee	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x70ae	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x70b5	      0xbe00000000	                              mov esi, 0	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x70ba	          0x4889c7	                            mov rdi, rax	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x70bd	      0xe800000000	                          call 0x4007102	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x70c2	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5325	gui.c	FUNCTION_91	CALL_16
0x70c9	      0xbe00000000	                              mov esi, 0	      5325	gui.c	FUNCTION_91	CALL_16
0x70ce	          0x4889c7	                            mov rdi, rax	      5325	gui.c	FUNCTION_91	CALL_16
0x70d1	      0xe800000000	                          call 0x4007116	      5325	gui.c	FUNCTION_91	CALL_16
0x70d6	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 3	      5327	gui.c	FUNCTION_91	IF_10
0x70dd	     0xf85e1000000	                           jne 0x4007204	      5327	gui.c	FUNCTION_91	IF_10
0x70e3	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x70ea	      0xbe03000000	                              mov esi, 3	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x70ef	          0x4889c7	                            mov rdi, rax	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x70f2	      0xe800000000	                          call 0x4007137	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x70f7	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x70fe	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      5332	gui.c	FUNCTION_91	IF_10
0x7105	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x710c	          0x4885c0	                           test rax, rax	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x710f	     0xf84af000000	                            je 0x4007204	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x7115	      0xe800000000	                          call 0x400715a	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x711a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x7121	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x7128	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x712f	      0xba00000000	                              mov edx, 0	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x7134	          0x4889ce	                            mov rsi, rcx	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x7137	          0x4889c7	                            mov rdi, rax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x713a	      0xe800000000	                          call 0x400717f	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x713f	            0x85c0	                           test eax, eax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x7141	            0x7460	                            je 0x40071e3	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x7143	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x714a	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x7151	            0x7550	                           jne 0x40071e3	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x7153	      0xe800000000	                          call 0x4007198	      5341	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_20
0x7158	      0xe800000000	                          call 0x400719d	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x715d	          0x83f801	                              cmp eax, 1	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x7160	            0x7553	                           jne 0x40071f5	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x7162	      0xbf00000000	                              mov edi, 0	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x7167	      0xe800000000	                          call 0x40071ac	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x716c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x7170	          0x4889c2	                            mov rdx, rax	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x7173	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x717a	          0x4829c2	                            sub rdx, rax	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x717d	          0x4889d0	                            mov rax, rdx	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x7180	      0xba00000000	                              mov edx, 0	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x7185	      0xbe00000000	                              mov esi, 0	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x718a	          0x4889c7	                            mov rdi, rax	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x718d	      0xe800000000	                          call 0x40071d2	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x7192	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x7199	          0x4889c7	                            mov rdi, rax	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x719c	      0xe800000000	                          call 0x40071e1	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x71a1	            0xeb12	                           jmp 0x40071f5	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x71a3	      0xbf00000000	                              mov edi, 0	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x71a8	      0xe800000000	                          call 0x40071ed	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x71ad	          0x4889c7	                            mov rdi, rax	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x71b0	      0xe800000000	                          call 0x40071f5	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x71b5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x71bc	          0x4889c7	                            mov rdi, rax	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x71bf	      0xe800000000	                          call 0x4007204	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x71c4	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 4	      5359	gui.c	FUNCTION_91	IF_14
0x71cb	            0x751b	                           jne 0x4007228	      5359	gui.c	FUNCTION_91	IF_14
0x71cd	      0xbf00000000	                              mov edi, 0	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x71d2	      0xe800000000	                          call 0x4007217	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x71d7	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x71de	          0x4889c7	                            mov rdi, rax	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x71e1	      0xe800000000	                          call 0x4007226	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x71e6	            0xeb7c	                           jmp 0x40072a4	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x71e8	    0xc78508ffffff	          mov dword [rbp - 0xf8], 0x20c 	      5367	gui.c	FUNCTION_91	ELSE_4
0x71f2	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 3	      5371	gui.c	FUNCTION_91	ELSE_4	IF_15
0x71f9	            0x750a	                           jne 0x4007245	      5371	gui.c	FUNCTION_91	ELSE_4	IF_15
0x71fb	    0x818508ffffff	           add dword [rbp - 0xf8], 0x100	      5372	gui.c	FUNCTION_91	ELSE_4	IF_15
0x7205	    0x8b0500000000	            mov eax, dword [0x0400724b] 	      5373	gui.c	FUNCTION_91	ELSE_4
0x720b	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5373	gui.c	FUNCTION_91	ELSE_4
0x7211	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7218	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x721f	            0x7407	                            je 0x4007268	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7221	      0xbe2f000000	                           mov esi, 0x2f	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7226	            0xeb05	                           jmp 0x400726d	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7228	      0xbe3f000000	                           mov esi, 0x3f	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x722d	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7233	        0x4883ec08	                              sub rsp, 8	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7237	            0x6a00	                                  push 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7239	    0x41b900000000	                              mov r9d, 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x723f	          0x4189d0	                            mov r8d, edx	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7242	      0xb901000000	                              mov ecx, 1	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7247	          0x4889c2	                            mov rdx, rax	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x724a	      0xbf00000000	                              mov edi, 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x724f	      0xe800000000	                          call 0x4007294	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7254	        0x4883c410	                           add rsp, 0x10	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x7258	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5376	gui.c	FUNCTION_91	ELSE_4
0x725e	    0x890500000000	            mov dword [0x040072a4], eax 	      5376	gui.c	FUNCTION_91	ELSE_4
0x7264	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      5381	gui.c	FUNCTION_91
0x726a	    0x890500000000	            mov dword [0x040072b0], eax 	      5381	gui.c	FUNCTION_91
0x7270	    0x8b0500000000	            mov eax, dword [0x040072b6] 	      5383	gui.c	FUNCTION_91	IF_16
0x7276	          0x83e011	                           and eax, 0x11	      5383	gui.c	FUNCTION_91	IF_16
0x7279	            0x85c0	                           test eax, eax	      5383	gui.c	FUNCTION_91	IF_16
0x727b	            0x7419	                            je 0x40072d6	      5383	gui.c	FUNCTION_91	IF_16
0x727d	      0xe800000000	                          call 0x40072c2	      5385	gui.c	FUNCTION_91	IF_16	CALL_31
0x7282	    0xc70500000000	               mov dword [0x040072cc], 0	      5386	gui.c	FUNCTION_91	IF_16
0x728c	    0xc70500000000	               mov dword [0x040072d6], 0	      5387	gui.c	FUNCTION_91	IF_16
0x7296	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5390	gui.c	FUNCTION_91	CALL_32
0x729d	          0x4889c7	                            mov rdi, rax	      5390	gui.c	FUNCTION_91	CALL_32
0x72a0	      0xe800000000	                          call 0x40072e5	      5390	gui.c	FUNCTION_91	CALL_32
0x72a5	    0xc70500000000	               mov dword [0x040072ef], 0	      5391	gui.c	FUNCTION_91
0x72af	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5392	gui.c	FUNCTION_91
0x72b5	            0x85c0	                           test eax, eax	      5392	gui.c	FUNCTION_91
0x72b7	           0xf9fc0	                                 setg al	      5392	gui.c	FUNCTION_91
0x72ba	           0xfb6c0	                           movzx eax, al	      5392	gui.c	FUNCTION_91
0x72bd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      5393	gui.c	FUNCTION_91
0x72c1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5393	gui.c	FUNCTION_91
0x72ca	            0x7405	                            je 0x4007311	      5393	gui.c	FUNCTION_91
0x72cc	      0xe800000000	                          call 0x4007311	      5393	gui.c	FUNCTION_91
0x72d1	              0xc9	                                   leave	      5393	gui.c	FUNCTION_91
0x72d2	              0xc3	                                     ret	      5393	gui.c	FUNCTION_91
fill_mouse_coord	ELSE,0:IF,0:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	45
0x3605	              0x55	                                push rbp	      3057	gui.c	FUNCTION_49
0x3606	          0x4889e5	                            mov rbp, rsp	      3057	gui.c	FUNCTION_49
0x3609	        0x48897df8	                mov qword [rbp - 8], rdi	      3057	gui.c	FUNCTION_49
0x360d	          0x8975f4	              mov dword [rbp - 0xc], esi	      3057	gui.c	FUNCTION_49
0x3610	          0x8955f0	             mov dword [rbp - 0x10], edx	      3057	gui.c	FUNCTION_49
0x3613	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3058	gui.c	FUNCTION_49
0x3616	          0x8d507f	                   lea edx, [rax + 0x7f]	      3058	gui.c	FUNCTION_49
0x3619	            0x85c0	                           test eax, eax	      3058	gui.c	FUNCTION_49
0x361b	           0xf48c2	                          cmovs eax, edx	      3058	gui.c	FUNCTION_49
0x361e	          0xc1f807	                              sar eax, 7	      3058	gui.c	FUNCTION_49
0x3621	          0x8d5021	                   lea edx, [rax + 0x21]	      3058	gui.c	FUNCTION_49
0x3624	        0x488b45f8	                mov rax, qword [rbp - 8]	      3058	gui.c	FUNCTION_49
0x3628	            0x8810	                      mov byte [rax], dl	      3058	gui.c	FUNCTION_49
0x362a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3059	gui.c	FUNCTION_49
0x362e	        0x488d4801	                      lea rcx, [rax + 1]	      3059	gui.c	FUNCTION_49
0x3632	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3059	gui.c	FUNCTION_49
0x3635	              0x99	                                     cdq	      3059	gui.c	FUNCTION_49
0x3636	          0xc1ea19	                           shr edx, 0x19	      3059	gui.c	FUNCTION_49
0x3639	             0x1d0	                            add eax, edx	      3059	gui.c	FUNCTION_49
0x363b	          0x83e07f	                           and eax, 0x7f	      3059	gui.c	FUNCTION_49
0x363e	            0x29d0	                            sub eax, edx	      3059	gui.c	FUNCTION_49
0x3640	          0x83c021	                           add eax, 0x21	      3059	gui.c	FUNCTION_49
0x3643	            0x8801	                      mov byte [rcx], al	      3059	gui.c	FUNCTION_49
0x3645	        0x488b45f8	                mov rax, qword [rbp - 8]	      3060	gui.c	FUNCTION_49
0x3649	        0x488d5002	                      lea rdx, [rax + 2]	      3060	gui.c	FUNCTION_49
0x364d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3060	gui.c	FUNCTION_49
0x3650	          0x8d487f	                   lea ecx, [rax + 0x7f]	      3060	gui.c	FUNCTION_49
0x3653	            0x85c0	                           test eax, eax	      3060	gui.c	FUNCTION_49
0x3655	           0xf48c1	                          cmovs eax, ecx	      3060	gui.c	FUNCTION_49
0x3658	          0xc1f807	                              sar eax, 7	      3060	gui.c	FUNCTION_49
0x365b	          0x83c021	                           add eax, 0x21	      3060	gui.c	FUNCTION_49
0x365e	            0x8802	                      mov byte [rdx], al	      3060	gui.c	FUNCTION_49
0x3660	        0x488b45f8	                mov rax, qword [rbp - 8]	      3061	gui.c	FUNCTION_49
0x3664	        0x488d4803	                      lea rcx, [rax + 3]	      3061	gui.c	FUNCTION_49
0x3668	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3061	gui.c	FUNCTION_49
0x366b	              0x99	                                     cdq	      3061	gui.c	FUNCTION_49
0x366c	          0xc1ea19	                           shr edx, 0x19	      3061	gui.c	FUNCTION_49
0x366f	             0x1d0	                            add eax, edx	      3061	gui.c	FUNCTION_49
0x3671	          0x83e07f	                           and eax, 0x7f	      3061	gui.c	FUNCTION_49
0x3674	            0x29d0	                            sub eax, edx	      3061	gui.c	FUNCTION_49
0x3676	          0x83c021	                           add eax, 0x21	      3061	gui.c	FUNCTION_49
0x3679	            0x8801	                      mov byte [rcx], al	      3061	gui.c	FUNCTION_49
0x367b	              0x90	                                     nop	      3062	gui.c	FUNCTION_49
0x367c	              0x5d	                                 pop rbp	      3062	gui.c	FUNCTION_49
0x367d	              0xc3	                                     ret	      3062	gui.c	FUNCTION_49
gui_find_bitmap	ELSE,0:IF,2:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	41
0x680e	              0x55	                                push rbp	      5045	gui.c	FUNCTION_84
0x680f	          0x4889e5	                            mov rbp, rsp	      5045	gui.c	FUNCTION_84
0x6812	        0x4883ec20	                           sub rsp, 0x20	      5045	gui.c	FUNCTION_84
0x6816	        0x48897df8	                mov qword [rbp - 8], rdi	      5045	gui.c	FUNCTION_84
0x681a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5045	gui.c	FUNCTION_84
0x681e	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5045	gui.c	FUNCTION_84
0x6822	        0x488b45f8	                mov rax, qword [rbp - 8]	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x6826	          0x4889c7	                            mov rdi, rax	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x6829	      0xe800000000	                          call 0x400686e	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x682e	    0x483df20f0000	                          cmp rax, 0xff2	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x6834	            0x7607	                           jbe 0x400687d	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x6836	      0xb800000000	                              mov eax, 0	      5047	gui.c	FUNCTION_84	IF_1
0x683b	            0xeb61	                           jmp 0x40068de	      5047	gui.c	FUNCTION_84	IF_1
0x683d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      5048	gui.c	FUNCTION_84	CALL_2
0x6841	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5048	gui.c	FUNCTION_84	CALL_2
0x6845	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5048	gui.c	FUNCTION_84	CALL_2
0x6849	          0x4989c8	                             mov r8, rcx	      5048	gui.c	FUNCTION_84	CALL_2
0x684c	          0x4889d1	                            mov rcx, rdx	      5048	gui.c	FUNCTION_84	CALL_2
0x684f	      0xba00000000	                              mov edx, 0	      5048	gui.c	FUNCTION_84	CALL_2
0x6854	      0xbe00100000	                         mov esi, 0x1000	      5048	gui.c	FUNCTION_84	CALL_2
0x6859	          0x4889c7	                            mov rdi, rax	      5048	gui.c	FUNCTION_84	CALL_2
0x685c	      0xb800000000	                              mov eax, 0	      5048	gui.c	FUNCTION_84	CALL_2
0x6861	      0xe800000000	                          call 0x40068a6	      5048	gui.c	FUNCTION_84	CALL_2
0x6866	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x686a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x686e	          0x4889d1	                            mov rcx, rdx	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x6871	      0xba00000000	                              mov edx, 0	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x6876	      0xbe00000000	                              mov esi, 0	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x687b	          0x4889c7	                            mov rdi, rax	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x687e	      0xe800000000	                          call 0x40068c3	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x6883	            0x85c0	                           test eax, eax	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x6885	            0x740b	                            je 0x40068d2	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x6887	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5050	gui.c	FUNCTION_84	IF_2
0x688b	           0xfb600	                   movzx eax, byte [rax]	      5050	gui.c	FUNCTION_84	IF_2
0x688e	            0x84c0	                             test al, al	      5050	gui.c	FUNCTION_84	IF_2
0x6890	            0x7507	                           jne 0x40068d9	      5050	gui.c	FUNCTION_84	IF_2
0x6892	      0xb800000000	                              mov eax, 0	      5051	gui.c	FUNCTION_84	IF_2
0x6897	            0xeb05	                           jmp 0x40068de	      5051	gui.c	FUNCTION_84	IF_2
0x6899	      0xb801000000	                              mov eax, 1	      5052	gui.c	FUNCTION_84
0x689e	              0xc9	                                   leave	      5053	gui.c	FUNCTION_84
0x689f	              0xc3	                                     ret	      5053	gui.c	FUNCTION_84
gui_send_mouse_event	ELSE,9:IF,32:CALL,26:functions,0:WHILE,0:SWITCH,2:DO,0:FOR,0	534
0x367e	              0x55	                                push rbp	      3087	gui.c	FUNCTION_50
0x367f	          0x4889e5	                            mov rbp, rsp	      3087	gui.c	FUNCTION_50
0x3682	        0x4883ec60	                           sub rsp, 0x60	      3087	gui.c	FUNCTION_50
0x3686	          0x897dbc	             mov dword [rbp - 0x44], edi	      3087	gui.c	FUNCTION_50
0x3689	          0x8975b8	             mov dword [rbp - 0x48], esi	      3087	gui.c	FUNCTION_50
0x368c	          0x8955b4	             mov dword [rbp - 0x4c], edx	      3087	gui.c	FUNCTION_50
0x368f	          0x894db0	             mov dword [rbp - 0x50], ecx	      3087	gui.c	FUNCTION_50
0x3692	        0x448945ac	             mov dword [rbp - 0x54], r8d	      3087	gui.c	FUNCTION_50
0x3696	    0x64488b042528	                mov rax, qword fs:[0x28]	      3087	gui.c	FUNCTION_50
0x369f	        0x488945f8	                mov qword [rbp - 8], rax	      3087	gui.c	FUNCTION_50
0x36a3	            0x31c0	                            xor eax, eax	      3087	gui.c	FUNCTION_50
0x36a5	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      3096	gui.c	FUNCTION_50
0x36ac	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36af	      0x3d00030000	                          cmp eax, 0x300	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36b4	            0x7434	                            je 0x400372a	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36b6	      0x3d00030000	                          cmp eax, 0x300	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36bb	            0x7f13	                            jg 0x4003710	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36bd	      0x3d00010000	                          cmp eax, 0x100	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36c2	            0x7438	                            je 0x400373c	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36c4	      0x3d00020000	                          cmp eax, 0x200	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36c9	            0x743a	                            je 0x4003745	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36cb	      0xe94e010000	                           jmp 0x400385e	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36d0	      0x3d00050000	                          cmp eax, 0x500	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36d5	            0x7437	                            je 0x400374e	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36d7	      0x3d00060000	                          cmp eax, 0x600	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36dc	            0x7439	                            je 0x4003757	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36de	      0x3d00040000	                          cmp eax, 0x400	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36e3	            0x740e	                            je 0x4003733	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36e5	      0xe934010000	                           jmp 0x400385e	      3102	gui.c	FUNCTION_50	SWITCH_1
0x36ea	    0xc745d0590000	           mov dword [rbp - 0x30], 0x59 	      3105	gui.c	FUNCTION_50	SWITCH_1
0x36f1	            0xeb2b	                           jmp 0x400375e	      3106	gui.c	FUNCTION_50	SWITCH_1
0x36f3	    0xc745d05c0000	           mov dword [rbp - 0x30], 0x5c 	      3108	gui.c	FUNCTION_50	SWITCH_1
0x36fa	            0xeb22	                           jmp 0x400375e	      3109	gui.c	FUNCTION_50	SWITCH_1
0x36fc	    0xc745d04b0000	           mov dword [rbp - 0x30], 0x4b 	      3111	gui.c	FUNCTION_50	SWITCH_1
0x3703	            0xeb19	                           jmp 0x400375e	      3112	gui.c	FUNCTION_50	SWITCH_1
0x3705	    0xc745d04c0000	           mov dword [rbp - 0x30], 0x4c 	      3114	gui.c	FUNCTION_50	SWITCH_1
0x370c	            0xeb10	                           jmp 0x400375e	      3115	gui.c	FUNCTION_50	SWITCH_1
0x370e	    0xc745d04d0000	           mov dword [rbp - 0x30], 0x4d 	      3117	gui.c	FUNCTION_50	SWITCH_1
0x3715	            0xeb07	                           jmp 0x400375e	      3118	gui.c	FUNCTION_50	SWITCH_1
0x3717	    0xc745d04e0000	           mov dword [rbp - 0x30], 0x4e 	      3120	gui.c	FUNCTION_50	SWITCH_1
0x371e	    0x8b0500000000	            mov eax, dword [0x04003764] 	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x3724	            0x85c0	                           test eax, eax	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x3726	     0xf85cb060000	                           jne 0x4003e37	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x372c	        0xc645e39b	            mov byte [rbp - 0x1d], 0x9b 	      3127	gui.c	FUNCTION_50	SWITCH_1
0x3730	        0xc645e4fd	            mov byte [rbp - 0x1c], 0xfd 	      3128	gui.c	FUNCTION_50	SWITCH_1
0x3734	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3129	gui.c	FUNCTION_50	SWITCH_1
0x3737	          0x8845e5	               mov byte [rbp - 0x1b], al	      3129	gui.c	FUNCTION_50	SWITCH_1
0x373a	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x373e	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x3741	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x3744	            0x89ce	                            mov esi, ecx	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x3746	            0x89c7	                            mov edi, eax	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x3748	      0xe800000000	                          call 0x400378d	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x374d	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3133	gui.c	FUNCTION_50	SWITCH_1	CALL_1
0x3750	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3134	gui.c	FUNCTION_50	SWITCH_1
0x3753	          0x8d507f	                   lea edx, [rax + 0x7f]	      3134	gui.c	FUNCTION_50	SWITCH_1
0x3756	            0x85c0	                           test eax, eax	      3134	gui.c	FUNCTION_50	SWITCH_1
0x3758	           0xf48c2	                          cmovs eax, edx	      3134	gui.c	FUNCTION_50	SWITCH_1
0x375b	          0xc1f807	                              sar eax, 7	      3134	gui.c	FUNCTION_50	SWITCH_1
0x375e	          0x83c021	                           add eax, 0x21	      3134	gui.c	FUNCTION_50	SWITCH_1
0x3761	          0x8845e6	               mov byte [rbp - 0x1a], al	      3134	gui.c	FUNCTION_50	SWITCH_1
0x3764	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3135	gui.c	FUNCTION_50	SWITCH_1
0x3767	              0x99	                                     cdq	      3135	gui.c	FUNCTION_50	SWITCH_1
0x3768	          0xc1ea19	                           shr edx, 0x19	      3135	gui.c	FUNCTION_50	SWITCH_1
0x376b	             0x1d0	                            add eax, edx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x376d	          0x83e07f	                           and eax, 0x7f	      3135	gui.c	FUNCTION_50	SWITCH_1
0x3770	            0x29d0	                            sub eax, edx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x3772	          0x83c021	                           add eax, 0x21	      3135	gui.c	FUNCTION_50	SWITCH_1
0x3775	          0x8845e7	               mov byte [rbp - 0x19], al	      3135	gui.c	FUNCTION_50	SWITCH_1
0x3778	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3136	gui.c	FUNCTION_50	SWITCH_1
0x377b	          0x8d507f	                   lea edx, [rax + 0x7f]	      3136	gui.c	FUNCTION_50	SWITCH_1
0x377e	            0x85c0	                           test eax, eax	      3136	gui.c	FUNCTION_50	SWITCH_1
0x3780	           0xf48c2	                          cmovs eax, edx	      3136	gui.c	FUNCTION_50	SWITCH_1
0x3783	          0xc1f807	                              sar eax, 7	      3136	gui.c	FUNCTION_50	SWITCH_1
0x3786	          0x83c021	                           add eax, 0x21	      3136	gui.c	FUNCTION_50	SWITCH_1
0x3789	          0x8845e8	               mov byte [rbp - 0x18], al	      3136	gui.c	FUNCTION_50	SWITCH_1
0x378c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3137	gui.c	FUNCTION_50	SWITCH_1
0x378f	              0x99	                                     cdq	      3137	gui.c	FUNCTION_50	SWITCH_1
0x3790	          0xc1ea19	                           shr edx, 0x19	      3137	gui.c	FUNCTION_50	SWITCH_1
0x3793	             0x1d0	                            add eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x3795	          0x83e07f	                           and eax, 0x7f	      3137	gui.c	FUNCTION_50	SWITCH_1
0x3798	            0x29d0	                            sub eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x379a	          0x83c021	                           add eax, 0x21	      3137	gui.c	FUNCTION_50	SWITCH_1
0x379d	          0x8845e9	               mov byte [rbp - 0x17], al	      3137	gui.c	FUNCTION_50	SWITCH_1
0x37a0	        0x837dac00	               cmp dword [rbp - 0x54], 0	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x37a4	            0x751a	                           jne 0x4003800	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x37a6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x37aa	        0x4883c003	                              add rax, 3	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x37ae	      0xbe07000000	                              mov esi, 7	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x37b3	          0x4889c7	                            mov rdi, rax	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x37b6	      0xe800000000	                          call 0x40037fb	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x37bb	      0xe944060000	                           jmp 0x4003e44	      3154	gui.c	FUNCTION_50	SWITCH_1
0x37c0	        0xc645e09b	            mov byte [rbp - 0x20], 0x9b 	      3143	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x37c4	        0xc645e1fc	            mov byte [rbp - 0x1f], 0xfc 	      3144	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x37c8	        0xc645e200	                mov byte [rbp - 0x1e], 0	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x37cc	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x37cf	          0x83e004	                              and eax, 4	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x37d2	            0x85c0	                           test eax, eax	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x37d4	            0x740a	                            je 0x4003820	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x37d6	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x37da	          0x83c802	                               or eax, 2	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x37dd	          0x8845e2	               mov byte [rbp - 0x1e], al	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x37e0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x37e3	          0x83e010	                           and eax, 0x10	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x37e6	            0x85c0	                           test eax, eax	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x37e8	            0x740a	                            je 0x4003834	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x37ea	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x37ee	          0x83c804	                               or eax, 4	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x37f1	          0x8845e2	               mov byte [rbp - 0x1e], al	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x37f4	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x37f7	          0x83e008	                              and eax, 8	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x37fa	            0x85c0	                           test eax, eax	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x37fc	            0x740a	                            je 0x4003848	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x37fe	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x3802	          0x83c808	                               or eax, 8	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x3805	          0x8845e2	               mov byte [rbp - 0x1e], al	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x3808	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x380c	      0xbe0a000000	                            mov esi, 0xa	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x3811	          0x4889c7	                            mov rdi, rax	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x3814	      0xe800000000	                          call 0x4003859	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x3819	      0xe9e6050000	                           jmp 0x4003e44	      3154	gui.c	FUNCTION_50	SWITCH_1
0x381e	     0xfb705000000	           movzx eax, word [0x04003865] 	      3160	gui.c	FUNCTION_50	IF_6
0x3825	        0x6683f801	                               cmp ax, 1	      3160	gui.c	FUNCTION_50	IF_6
0x3829	            0x7544	                           jne 0x40038af	      3160	gui.c	FUNCTION_50	IF_6
0x382b	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x382e	    0x8b0500000000	            mov eax, dword [0x04003874] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3834	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3837	            0x29c2	                            sub edx, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3839	            0x89d0	                            mov eax, edx	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x383b	    0x8b3500000000	            mov esi, dword [0x04003881] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3841	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3842	            0xf7fe	                                idiv esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3844	            0x89c7	                            mov edi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3846	    0x8b0500000000	            mov eax, dword [0x0400388c] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x384c	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x384f	            0x29c2	                            sub edx, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3851	            0x89d0	                            mov eax, edx	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3853	    0x8b3500000000	            mov esi, dword [0x04003899] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3859	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x385a	            0xf7fe	                                idiv esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x385c	            0x89c6	                            mov esi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x385e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3861	            0x89fa	                            mov edx, edi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3863	            0x89c7	                            mov edi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x3865	      0xe800000000	                          call 0x40038aa	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x386a	      0xe995050000	                           jmp 0x4003e44	      3163	gui.c	FUNCTION_50	IF_6
0x386f	      0xe800000000	                          call 0x40038b4	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3874	          0x83f850	                           cmp eax, 0x50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3877	     0xf84b6000000	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x387d	          0x83f850	                           cmp eax, 0x50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3880	            0x7f3e	                            jg 0x4003900	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3882	          0x83f808	                              cmp eax, 8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3885	     0xf84e5000000	                            je 0x40039b0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x388b	          0x83f808	                              cmp eax, 8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x388e	            0x7f18	                            jg 0x40038e8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3890	          0x83f802	                              cmp eax, 2	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3893	     0xf8485000000	                            je 0x400395e	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3899	          0x83f804	                              cmp eax, 4	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x389c	            0x7474	                            je 0x4003952	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x389e	          0x83f801	                              cmp eax, 1	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38a1	            0x746f	                            je 0x4003952	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38a3	      0xe902010000	                           jmp 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38a8	          0x83f828	                           cmp eax, 0x28	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38ab	     0xf84bf000000	                            je 0x40039b0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38b1	          0x83f830	                           cmp eax, 0x30	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38b4	            0x747d	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38b6	          0x83f810	                           cmp eax, 0x10	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38b9	            0x7478	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38bb	      0xe9ea000000	                           jmp 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38c0	      0x3d01010000	                          cmp eax, 0x101	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38c5	            0x744b	                            je 0x4003952	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38c7	      0x3d01010000	                          cmp eax, 0x101	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38cc	            0x7f18	                            jg 0x4003926	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38ce	      0x3dd0000000	                           cmp eax, 0xd0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38d3	            0x745e	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38d5	      0x3df0000000	                           cmp eax, 0xf0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38da	            0x7457	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38dc	          0x83f870	                           cmp eax, 0x70	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38df	            0x7452	                            je 0x4003973	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38e1	      0xe9c4000000	                           jmp 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38e6	      0x3d00030000	                          cmp eax, 0x300	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38eb	            0x744f	                            je 0x400397c	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38ed	      0x3d00030000	                          cmp eax, 0x300	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38f2	            0x7f0c	                            jg 0x4003940	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38f4	      0x3d01020000	                          cmp eax, 0x201	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38f9	            0x7441	                            je 0x400397c	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x38fb	      0xe9aa000000	                           jmp 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3900	      0x3d00100000	                         cmp eax, 0x1000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3905	            0x7423	                            je 0x400396a	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3907	      0x3d00200000	                         cmp eax, 0x2000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x390c	     0xf8598000000	                           jne 0x40039ea	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x3912	    0xc745d86e0000	           mov dword [rbp - 0x28], 0x6e 	      3174	gui.c	FUNCTION_50	SWITCH_2
0x3919	      0xe994000000	                           jmp 0x40039f2	      3174	gui.c	FUNCTION_50	SWITCH_2
0x391e	    0xc745d8760000	           mov dword [rbp - 0x28], 0x76 	      3175	gui.c	FUNCTION_50	SWITCH_2
0x3925	      0xe988000000	                           jmp 0x40039f2	      3175	gui.c	FUNCTION_50	SWITCH_2
0x392a	    0xc745d8760000	           mov dword [rbp - 0x28], 0x76 	      3176	gui.c	FUNCTION_50	SWITCH_2
0x3931	            0xeb7f	                           jmp 0x40039f2	      3176	gui.c	FUNCTION_50	SWITCH_2
0x3933	    0xc745d8690000	           mov dword [rbp - 0x28], 0x69 	      3184	gui.c	FUNCTION_50	SWITCH_2
0x393a	            0xeb76	                           jmp 0x40039f2	      3184	gui.c	FUNCTION_50	SWITCH_2
0x393c	    0x8b0500000000	            mov eax, dword [0x04003982] 	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x3942	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x3945	            0x29c2	                            sub edx, eax	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x3947	            0x89d0	                            mov eax, edx	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x3949	    0x8b3500000000	            mov esi, dword [0x0400398f] 	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x394f	              0x99	                                     cdq	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x3950	            0xf7fe	                                idiv esi	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x3952	            0x89c2	                            mov edx, eax	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x3954	    0x8b0500000000	            mov eax, dword [0x0400399a] 	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x395a	            0x39c2	                            cmp edx, eax	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x395c	            0x7c09	                            jl 0x40039a7	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x395e	    0xc745d86e0000	           mov dword [rbp - 0x28], 0x6e 	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x3965	            0xeb4b	                           jmp 0x40039f2	      3193	gui.c	FUNCTION_50	SWITCH_2
0x3967	    0xc745d8720000	           mov dword [rbp - 0x28], 0x72 	      3192	gui.c	FUNCTION_50	SWITCH_2	ELSE_2
0x396e	            0xeb42	                           jmp 0x40039f2	      3193	gui.c	FUNCTION_50	SWITCH_2
0x3970	    0x8b0500000000	            mov eax, dword [0x040039b6] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3976	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3979	            0x29c2	                            sub edx, eax	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x397b	            0x89d0	                            mov eax, edx	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x397d	    0x8b3d00000000	            mov edi, dword [0x040039c3] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3983	              0x99	                                     cdq	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3984	            0xf7ff	                                idiv edi	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3986	            0x89c2	                            mov edx, eax	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3988	    0x8b0500000000	            mov eax, dword [0x040039ce] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x398e	            0x39c2	                            cmp edx, eax	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3990	            0x7d0f	                           jge 0x40039e1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3992	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3996	            0x7409	                            je 0x40039e1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x3998	    0xc745d8200000	           mov dword [rbp - 0x28], 0x20 	      3202	gui.c	FUNCTION_50	SWITCH_2	IF_8
0x399f	            0xeb11	                           jmp 0x40039f2	      3205	gui.c	FUNCTION_50	SWITCH_2
0x39a1	    0xc745d8630000	           mov dword [rbp - 0x28], 0x63 	      3204	gui.c	FUNCTION_50	SWITCH_2	ELSE_3
0x39a8	            0xeb08	                           jmp 0x40039f2	      3205	gui.c	FUNCTION_50	SWITCH_2
0x39aa	    0xc745d8200000	           mov dword [rbp - 0x28], 0x20 	      3208	gui.c	FUNCTION_50	SWITCH_2
0x39b1	              0x90	                                     nop	      3209	gui.c	FUNCTION_50	SWITCH_2
0x39b2	    0x8b0500000000	            mov eax, dword [0x040039f8] 	      3217	gui.c	FUNCTION_50	IF_9
0x39b8	          0x83f801	                              cmp eax, 1	      3217	gui.c	FUNCTION_50	IF_9
0x39bb	            0x741a	                            je 0x4003a17	      3217	gui.c	FUNCTION_50	IF_9
0x39bd	    0x8b0500000000	            mov eax, dword [0x04003a03] 	      3217	gui.c	FUNCTION_50	IF_9
0x39c3	      0x3d01010000	                          cmp eax, 0x101	      3217	gui.c	FUNCTION_50	IF_9
0x39c8	            0x740d	                            je 0x4003a17	      3217	gui.c	FUNCTION_50	IF_9
0x39ca	    0x8b0500000000	            mov eax, dword [0x04003a10] 	      3217	gui.c	FUNCTION_50	IF_9
0x39d0	          0x83e010	                           and eax, 0x10	      3217	gui.c	FUNCTION_50	IF_9
0x39d3	            0x85c0	                           test eax, eax	      3217	gui.c	FUNCTION_50	IF_9
0x39d5	            0x7456	                            je 0x4003a6d	      3217	gui.c	FUNCTION_50	IF_9
0x39d7	    0x8b0500000000	            mov eax, dword [0x04003a1d] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39dd	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39e0	            0x29c2	                            sub edx, eax	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39e2	            0x89d0	                            mov eax, edx	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39e4	    0x8b3500000000	            mov esi, dword [0x04003a2a] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39ea	              0x99	                                     cdq	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39eb	            0xf7fe	                                idiv esi	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39ed	            0x89c1	                            mov ecx, eax	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39ef	    0x488b05000000	            mov rax, qword [0x04003a36] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39f6	          0x8b500c	              mov edx, dword [rax + 0xc]	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x39f9	    0x488b05000000	            mov rax, qword [0x04003a40] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x3a00	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x3a06	             0x1d0	                            add eax, edx	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x3a08	            0x39c1	                            cmp ecx, eax	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x3a0a	            0x7c21	                            jl 0x4003a6d	      3218	gui.c	FUNCTION_50	IF_9	CALL_10
0x3a0c	        0x837dbc43	           cmp dword [rbp - 0x44], 0x43 	      3219	gui.c	FUNCTION_50	IF_9
0x3a10	            0x741b	                            je 0x4003a6d	      3219	gui.c	FUNCTION_50	IF_9
0x3a12	    0x8b0500000000	            mov eax, dword [0x04003a58] 	      3221	gui.c	FUNCTION_50	IF_9
0x3a18	            0x85c0	                           test eax, eax	      3221	gui.c	FUNCTION_50	IF_9
0x3a1a	            0x7511	                           jne 0x4003a6d	      3221	gui.c	FUNCTION_50	IF_9
0x3a1c	    0x8b0500000000	            mov eax, dword [0x04003a62] 	      3222	gui.c	FUNCTION_50	IF_9
0x3a22	            0x85c0	                           test eax, eax	      3222	gui.c	FUNCTION_50	IF_9
0x3a24	            0x7507	                           jne 0x4003a6d	      3222	gui.c	FUNCTION_50	IF_9
0x3a26	    0xc745d8200000	           mov dword [rbp - 0x28], 0x20 	      3225	gui.c	FUNCTION_50	IF_9
0x3a2d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3230	gui.c	FUNCTION_50	IF_10
0x3a30	          0x83e010	                           and eax, 0x10	      3230	gui.c	FUNCTION_50	IF_10
0x3a33	            0x85c0	                           test eax, eax	      3230	gui.c	FUNCTION_50	IF_10
0x3a35	            0x7411	                            je 0x4003a88	      3230	gui.c	FUNCTION_50	IF_10
0x3a37	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3230	gui.c	FUNCTION_50	IF_10
0x3a3a	          0x83e004	                              and eax, 4	      3230	gui.c	FUNCTION_50	IF_10
0x3a3d	            0x85c0	                           test eax, eax	      3230	gui.c	FUNCTION_50	IF_10
0x3a3f	            0x7407	                            je 0x4003a88	      3230	gui.c	FUNCTION_50	IF_10
0x3a41	    0xc745d8780000	           mov dword [rbp - 0x28], 0x78 	      3231	gui.c	FUNCTION_50	IF_10
0x3a48	    0x8b0500000000	            mov eax, dword [0x04003a8e] 	      3236	gui.c	FUNCTION_50	IF_11
0x3a4e	            0x85c0	                           test eax, eax	      3236	gui.c	FUNCTION_50	IF_11
0x3a50	            0x7407	                            je 0x4003a99	      3236	gui.c	FUNCTION_50	IF_11
0x3a52	    0xc745d8200000	           mov dword [rbp - 0x28], 0x20 	      3237	gui.c	FUNCTION_50	IF_11
0x3a59	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x3a5c	            0x89c7	                            mov edi, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x3a5e	      0xe800000000	                          call 0x4003aa3	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x3a63	            0x85c0	                           test eax, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x3a65	            0x740a	                            je 0x4003ab1	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x3a67	        0x837dd863	           cmp dword [rbp - 0x28], 0x63 	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x3a6b	     0xf859f010000	                           jne 0x4003c50	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x3a71	        0x837dd878	           cmp dword [rbp - 0x28], 0x78 	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a75	            0x741b	                            je 0x4003ad2	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a77	    0x8b0500000000	            mov eax, dword [0x04003abd] 	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a7d	            0x85c0	                           test eax, eax	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a7f	            0x7411	                            je 0x4003ad2	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a81	    0x8b0500000000	            mov eax, dword [0x04003ac7] 	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a87	          0x83e001	                              and eax, 1	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a8a	            0x85c0	                           test eax, eax	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a8c	     0xf8568030000	                           jne 0x4003e3a	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x3a92	      0xe800000000	                          call 0x4003ad7	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x3a97	            0x85c0	                           test eax, eax	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x3a99	            0x7425	                            je 0x4003b00	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x3a9b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x3a9f	            0x751f	                           jne 0x4003b00	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x3aa1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x3aa4	          0x83e004	                              and eax, 4	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x3aa7	            0x85c0	                           test eax, eax	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x3aa9	            0x7415	                            je 0x4003b00	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x3aab	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x3aae	          0x83e010	                           and eax, 0x10	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x3ab1	            0x85c0	                           test eax, eax	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x3ab3	            0x750b	                           jne 0x4003b00	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x3ab5	    0xc745bc020000	               mov dword [rbp - 0x44], 2	      3259	gui.c	FUNCTION_50	IF_12	IF_14
0x3abc	        0x8365acfb	      and dword [rbp - 0x54], 0xfffffffb	      3260	gui.c	FUNCTION_50	IF_12	IF_14
0x3ac0	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x3ac4	     0xf85c7000000	                           jne 0x4003bd1	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x3aca	     0xfb705000000	           movzx eax, word [0x04003b11] 	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x3ad1	          0x6685c0	                             test ax, ax	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x3ad4	            0x7573	                           jne 0x4003b89	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x3ad6	    0x8b0500000000	            mov eax, dword [0x04003b1c] 	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3adc	          0x83e008	                              and eax, 8	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3adf	            0x85c0	                           test eax, eax	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3ae1	            0x7414	                            je 0x4003b37	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3ae3	    0x8b0500000000	            mov eax, dword [0x04003b29] 	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3ae9	          0x8945cc	             mov dword [rbp - 0x34], eax	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3aec	    0x8b0500000000	            mov eax, dword [0x04003b32] 	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3af2	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3af5	            0xeb3e	                           jmp 0x4003b75	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x3af7	    0x488b05000000	            mov rax, qword [0x04003b3e] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x3afe	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x3b04	          0x8945cc	             mov dword [rbp - 0x34], eax	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x3b07	    0x488b05000000	            mov rax, qword [0x04003b4e] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b0e	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b14	    0x488b05000000	            mov rax, qword [0x04003b5b] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b1b	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b21	    0x488b05000000	            mov rax, qword [0x04003b68] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b28	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b2e	             0x1c8	                            add eax, ecx	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b30	             0x1d0	                            add eax, edx	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b32	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x3b35	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x3b38	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x3b3b	      0xba00000000	                              mov edx, 0	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x3b40	            0x89ce	                            mov esi, ecx	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x3b42	            0x89c7	                            mov edi, eax	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x3b44	      0xe800000000	                          call 0x4003b89	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x3b49	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b4c	    0x8b0500000000	            mov eax, dword [0x04003b92] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b52	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b55	            0x29c2	                            sub edx, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b57	            0x89d0	                            mov eax, edx	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b59	    0x8b3d00000000	            mov edi, dword [0x04003b9f] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b5f	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b60	            0xf7ff	                                idiv edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b62	            0x89c7	                            mov edi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b64	    0x8b0500000000	            mov eax, dword [0x04003baa] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b6a	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b6d	            0x29c2	                            sub edx, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b6f	            0x89d0	                            mov eax, edx	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b71	    0x8b3500000000	            mov esi, dword [0x04003bb7] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b77	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b78	            0xf7fe	                                idiv esi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b7a	            0x89c6	                            mov esi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b7c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b7f	            0x89fa	                            mov edx, edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b81	            0x89c7	                            mov edi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b83	      0xe800000000	                          call 0x4003bc8	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x3b88	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      3284	gui.c	FUNCTION_50	IF_12	IF_15
0x3b8f	            0xeb49	                           jmp 0x4003c1a	      3284	gui.c	FUNCTION_50	IF_12	IF_15
0x3b91	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x3b95	            0x7543	                           jne 0x4003c1a	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x3b97	    0x8b0500000000	            mov eax, dword [0x04003bdd] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3b9d	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3ba0	            0x29c2	                            sub edx, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3ba2	            0x89d0	                            mov eax, edx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3ba4	    0x8b0d00000000	            mov ecx, dword [0x04003bea] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3baa	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bab	            0xf7f9	                                idiv ecx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bad	            0x89c6	                            mov esi, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3baf	    0x8b0500000000	            mov eax, dword [0x04003bf5] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bb5	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bb8	            0x29c2	                            sub edx, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bba	            0x89d0	                            mov eax, edx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bbc	    0x8b3d00000000	            mov edi, dword [0x04003c02] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bc2	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bc3	            0xf7ff	                                idiv edi	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bc5	            0x89c1	                            mov ecx, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bc7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bca	            0x89c2	                            mov edx, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bcc	            0x89cf	                            mov edi, ecx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bce	      0xe800000000	                          call 0x4003c13	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x3bd3	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      3290	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x3bda	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x3bde	            0x7429	                            je 0x4003c49	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x3be0	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x3be3	            0x89c7	                            mov edi, eax	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x3be5	      0xe800000000	                          call 0x4003c2a	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x3bea	            0x85c0	                           test eax, eax	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x3bec	     0xf840b020000	                            je 0x4003e3d	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x3bf2	        0x837dbc03	               cmp dword [rbp - 0x44], 3	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x3bf6	     0xf8401020000	                            je 0x4003e3d	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x3bfc	        0x837dd863	           cmp dword [rbp - 0x28], 0x63 	      3298	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x3c00	            0x7407	                            je 0x4003c49	      3298	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x3c02	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x3c09	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      3301	gui.c	FUNCTION_50	IF_12
0x3c10	     0xfb705000000	           movzx eax, word [0x04003c57] 	      3304	gui.c	FUNCTION_50	IF_22
0x3c17	          0x6685c0	                             test ax, ax	      3304	gui.c	FUNCTION_50	IF_22
0x3c1a	            0x7410	                            je 0x4003c6c	      3304	gui.c	FUNCTION_50	IF_22
0x3c1c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3304	gui.c	FUNCTION_50	IF_22
0x3c20	            0x750a	                           jne 0x4003c6c	      3304	gui.c	FUNCTION_50	IF_22
0x3c22	      0xbf00000000	                              mov edi, 0	      3305	gui.c	FUNCTION_50	CALL_22
0x3c27	      0xe800000000	                          call 0x4003c6c	      3305	gui.c	FUNCTION_50	CALL_22
0x3c2c	    0x8b0500000000	            mov eax, dword [0x04003c72] 	      3309	gui.c	FUNCTION_50	IF_23
0x3c32	            0x85c0	                           test eax, eax	      3309	gui.c	FUNCTION_50	IF_23
0x3c34	     0xf85c6010000	                           jne 0x4003e40	      3309	gui.c	FUNCTION_50	IF_23
0x3c3a	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      3312	gui.c	FUNCTION_50	CALL_23
0x3c3e	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      3312	gui.c	FUNCTION_50	CALL_23
0x3c41	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3312	gui.c	FUNCTION_50	CALL_23
0x3c44	            0x89ce	                            mov esi, ecx	      3312	gui.c	FUNCTION_50	CALL_23
0x3c46	            0x89c7	                            mov edi, eax	      3312	gui.c	FUNCTION_50	CALL_23
0x3c48	      0xe800000000	                          call 0x4003c8d	      3312	gui.c	FUNCTION_50	CALL_23
0x3c4d	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3312	gui.c	FUNCTION_50	CALL_23
0x3c50	        0x837dbc43	           cmp dword [rbp - 0x44], 0x43 	      3318	gui.c	FUNCTION_50	IF_24
0x3c54	            0x7529	                           jne 0x4003cbf	      3318	gui.c	FUNCTION_50	IF_24
0x3c56	    0x8b0500000000	            mov eax, dword [0x04003c9c] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x3c5c	          0x3945d4	            cmp dword [rbp - 0x2c], eax 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x3c5f	            0x7511	                           jne 0x4003cb2	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x3c61	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x3c64	    0x8b0500000000	            mov eax, dword [0x04003caa] 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x3c6a	            0x39c2	                            cmp edx, eax	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x3c6c	     0xf8491010000	                            je 0x4003e43	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x3c72	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x3c76	            0x7907	                           jns 0x4003cbf	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x3c78	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x3c7f	    0x488b05000000	            mov rax, qword [0x04003cc6] 	      3332	gui.c	FUNCTION_50	IF_27
0x3c86	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      3332	gui.c	FUNCTION_50	IF_27
0x3c8a	    0x488b05000000	            mov rax, qword [0x04003cd1] 	      3332	gui.c	FUNCTION_50	IF_27
0x3c91	          0x4839c2	                            cmp rdx, rax	      3332	gui.c	FUNCTION_50	IF_27
0x3c94	            0x7517	                           jne 0x4003ced	      3332	gui.c	FUNCTION_50	IF_27
0x3c96	    0x488b05000000	            mov rax, qword [0x04003cdd] 	      3334	gui.c	FUNCTION_50	IF_27
0x3c9d	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      3334	gui.c	FUNCTION_50	IF_27
0x3ca3	    0x8b0500000000	            mov eax, dword [0x04003ce9] 	      3334	gui.c	FUNCTION_50	IF_27
0x3ca9	            0x39c2	                            cmp edx, eax	      3334	gui.c	FUNCTION_50	IF_27
0x3cab	            0x7407	                            je 0x4003cf4	      3334	gui.c	FUNCTION_50	IF_27
0x3cad	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      3337	gui.c	FUNCTION_50	IF_27
0x3cb4	        0xc645e09b	            mov byte [rbp - 0x20], 0x9b 	      3339	gui.c	FUNCTION_50
0x3cb8	        0xc645e1fb	            mov byte [rbp - 0x1f], 0xfb 	      3340	gui.c	FUNCTION_50
0x3cbc	        0xc645e258	            mov byte [rbp - 0x1e], 0x58 	      3341	gui.c	FUNCTION_50
0x3cc0	        0x837dbc43	           cmp dword [rbp - 0x44], 0x43 	      3342	gui.c	FUNCTION_50	IF_28
0x3cc4	     0xf84c2000000	                            je 0x4003dcc	      3342	gui.c	FUNCTION_50	IF_28
0x3cca	        0x837dbc03	               cmp dword [rbp - 0x44], 3	      3342	gui.c	FUNCTION_50	IF_28
0x3cce	     0xf84b8000000	                            je 0x4003dcc	      3342	gui.c	FUNCTION_50	IF_28
0x3cd4	        0x837db000	               cmp dword [rbp - 0x50], 0	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x3cd8	            0x7455	                            je 0x4003d6f	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x3cda	    0x8b0500000000	            mov eax, dword [0x04003d20] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3ce0	          0x3945bc	            cmp dword [rbp - 0x44], eax 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3ce3	            0x7518	                           jne 0x4003d3d	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3ce5	    0x8b0500000000	            mov eax, dword [0x04003d2b] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3ceb	          0x3945d4	            cmp dword [rbp - 0x2c], eax 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3cee	            0x750d	                           jne 0x4003d3d	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3cf0	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3cf3	    0x8b0500000000	            mov eax, dword [0x04003d39] 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3cf9	            0x39c2	                            cmp edx, eax	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3cfb	            0x740c	                            je 0x4003d49	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3cfd	    0xc70500000000	               mov dword [0x04003d47], 1	      3351	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3d07	            0xeb30	                           jmp 0x4003d79	      3351	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x3d09	    0x8b0500000000	            mov eax, dword [0x04003d4f] 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x3d0f	          0x83c001	                              add eax, 1	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x3d12	    0x890500000000	            mov dword [0x04003d58], eax 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x3d18	    0x8b0500000000	            mov eax, dword [0x04003d5e] 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x3d1e	          0x83f804	                              cmp eax, 4	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x3d21	            0x7e16	                           jle 0x4003d79	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x3d23	    0xc70500000000	               mov dword [0x04003d6d], 1	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x3d2d	            0xeb0a	                           jmp 0x4003d79	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x3d2f	    0xc70500000000	               mov dword [0x04003d79], 1	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x3d39	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3357	gui.c	FUNCTION_50	IF_28
0x3d3c	    0x890500000000	            mov dword [0x04003d82], eax 	      3357	gui.c	FUNCTION_50	IF_28
0x3d42	    0x488b05000000	            mov rax, qword [0x04003d89] 	      3358	gui.c	FUNCTION_50	IF_28
0x3d49	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3358	gui.c	FUNCTION_50	IF_28
0x3d4d	    0x488905000000	            mov qword [0x04003d94], rax 	      3358	gui.c	FUNCTION_50	IF_28
0x3d54	    0x488b05000000	            mov rax, qword [0x04003d9b] 	      3360	gui.c	FUNCTION_50	IF_28
0x3d5b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3360	gui.c	FUNCTION_50	IF_28
0x3d61	    0x890500000000	            mov dword [0x04003da7], eax 	      3360	gui.c	FUNCTION_50	IF_28
0x3d67	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3363	gui.c	FUNCTION_50	IF_28
0x3d6a	          0x83c820	                            or eax, 0x20	      3363	gui.c	FUNCTION_50	IF_28
0x3d6d	          0x8845e3	               mov byte [rbp - 0x1d], al	      3363	gui.c	FUNCTION_50	IF_28
0x3d70	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d74	          0x83e03f	                           and eax, 0x3f	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d77	            0x89c2	                            mov edx, eax	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d79	    0x8b0500000000	            mov eax, dword [0x04003dbf] 	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d7f	          0x83e801	                              sub eax, 1	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d82	          0xc1e006	                              shl eax, 6	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d85	             0x9d0	                             or eax, edx	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d87	          0x8845e3	               mov byte [rbp - 0x1d], al	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d8a	            0xeb06	                           jmp 0x4003dd2	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x3d8c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3367	gui.c	FUNCTION_50	ELSE_8
0x3d8f	          0x8845e3	               mov byte [rbp - 0x1d], al	      3367	gui.c	FUNCTION_50	ELSE_8
0x3d92	         0xfb655e3	            movzx edx, byte [rbp - 0x1d]	      3369	gui.c	FUNCTION_50
0x3d96	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3369	gui.c	FUNCTION_50
0x3d99	             0x9d0	                             or eax, edx	      3369	gui.c	FUNCTION_50
0x3d9b	          0x8845e3	               mov byte [rbp - 0x1d], al	      3369	gui.c	FUNCTION_50
0x3d9e	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      3370	gui.c	FUNCTION_50	CALL_25
0x3da1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3370	gui.c	FUNCTION_50	CALL_25
0x3da5	        0x4883c004	                              add rax, 4	      3370	gui.c	FUNCTION_50	CALL_25
0x3da9	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      3370	gui.c	FUNCTION_50	CALL_25
0x3dac	            0x89ce	                            mov esi, ecx	      3370	gui.c	FUNCTION_50	CALL_25
0x3dae	          0x4889c7	                            mov rdi, rax	      3370	gui.c	FUNCTION_50	CALL_25
0x3db1	      0xe84ff8ffff	               call sym.fill_mouse_coord	      3370	gui.c	FUNCTION_50	CALL_25
0x3db6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3371	gui.c	FUNCTION_50	CALL_26
0x3dba	      0xbe08000000	                              mov esi, 8	      3371	gui.c	FUNCTION_50	CALL_26
0x3dbf	          0x4889c7	                            mov rdi, rax	      3371	gui.c	FUNCTION_50	CALL_26
0x3dc2	      0xe800000000	                          call 0x4003e07	      3371	gui.c	FUNCTION_50	CALL_26
0x3dc7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3373	gui.c	FUNCTION_50	IF_32
0x3dcb	            0x790c	                           jns 0x4003e19	      3373	gui.c	FUNCTION_50	IF_32
0x3dcd	    0xc70500000000	               mov dword [0x04003e17], 0	      3374	gui.c	FUNCTION_50	IF_32
0x3dd7	            0xeb09	                           jmp 0x4003e22	      3374	gui.c	FUNCTION_50	IF_32
0x3dd9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3376	gui.c	FUNCTION_50	ELSE_9
0x3ddc	    0x890500000000	            mov dword [0x04003e22], eax 	      3376	gui.c	FUNCTION_50	ELSE_9
0x3de2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3377	gui.c	FUNCTION_50	ELSE_9
0x3de5	    0x890500000000	            mov dword [0x04003e2b], eax 	      3377	gui.c	FUNCTION_50	ELSE_9
0x3deb	    0xc70500000000	     mov dword [0x04003e35], 0xffffffff 	      3384	gui.c	FUNCTION_50	ELSE_9
0x3df5	            0xeb0d	                           jmp 0x4003e44	      3384	gui.c	FUNCTION_50	ELSE_9
0x3df7	              0x90	                                     nop	      3125	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x3df8	            0xeb0a	                           jmp 0x4003e44	      3125	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x3dfa	              0x90	                                     nop	      3250	gui.c	FUNCTION_50	IF_12	IF_13
0x3dfb	            0xeb07	                           jmp 0x4003e44	      3250	gui.c	FUNCTION_50	IF_12	IF_13
0x3dfd	              0x90	                                     nop	      3297	gui.c	FUNCTION_50	IF_12	IF_19	IF_20
0x3dfe	            0xeb04	                           jmp 0x4003e44	      3297	gui.c	FUNCTION_50	IF_12	IF_19	IF_20
0x3e00	              0x90	                                     nop	      3310	gui.c	FUNCTION_50	IF_23
0x3e01	            0xeb01	                           jmp 0x4003e44	      3310	gui.c	FUNCTION_50	IF_23
0x3e03	              0x90	                                     nop	      3321	gui.c	FUNCTION_50	IF_24	IF_25
0x3e04	        0x488b45f8	                mov rax, qword [rbp - 8]	      3386	gui.c	FUNCTION_50	ELSE_9
0x3e08	    0x644833042528	                xor rax, qword fs:[0x28]	      3386	gui.c	FUNCTION_50	ELSE_9
0x3e11	            0x7405	                            je 0x4003e58	      3386	gui.c	FUNCTION_50	ELSE_9
0x3e13	      0xe800000000	                          call 0x4003e58	      3386	gui.c	FUNCTION_50	ELSE_9
0x3e18	              0xc9	                                   leave	      3386	gui.c	FUNCTION_50	ELSE_9
0x3e19	              0xc3	                                     ret	      3386	gui.c	FUNCTION_50	ELSE_9
gui_set_shellsize	ELSE,1:IF,13:CALL,21:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	233
0x1a39	              0x55	                                push rbp	      1573	gui.c	FUNCTION_23
0x1a3a	          0x4889e5	                            mov rbp, rsp	      1573	gui.c	FUNCTION_23
0x1a3d	        0x4883ec50	                           sub rsp, 0x50	      1573	gui.c	FUNCTION_23
0x1a41	          0x897dbc	             mov dword [rbp - 0x44], edi	      1573	gui.c	FUNCTION_23
0x1a44	          0x8975b8	             mov dword [rbp - 0x48], esi	      1573	gui.c	FUNCTION_23
0x1a47	          0x8955b4	             mov dword [rbp - 0x4c], edx	      1573	gui.c	FUNCTION_23
0x1a4a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1573	gui.c	FUNCTION_23
0x1a53	        0x488945f8	                mov qword [rbp - 8], rax	      1573	gui.c	FUNCTION_23
0x1a57	            0x31c0	                            xor eax, eax	      1573	gui.c	FUNCTION_23
0x1a59	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1583	gui.c	FUNCTION_23
0x1a5c	          0x8945e0	             mov dword [rbp - 0x20], eax	      1583	gui.c	FUNCTION_23
0x1a5f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1584	gui.c	FUNCTION_23
0x1a66	    0xc745d0ffffff	     mov dword [rbp - 0x30], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x1a6d	    0xc745d4ffffff	     mov dword [rbp - 0x2c], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x1a74	    0x8b0500000000	            mov eax, dword [0x04001aba] 	      1588	gui.c	FUNCTION_23	IF_1
0x1a7a	            0x85c0	                           test eax, eax	      1588	gui.c	FUNCTION_23	IF_1
0x1a7c	     0xf84d8020000	                            je 0x4001d9a	      1588	gui.c	FUNCTION_23	IF_1
0x1a82	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x1a86	            0x752c	                           jne 0x4001af4	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x1a88	    0x488b05000000	            mov rax, qword [0x04001acf] 	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x1a8f	      0xbe6b000000	                           mov esi, 0x6b	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x1a94	          0x4889c7	                            mov rdi, rax	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x1a97	      0xe800000000	                          call 0x4001adc	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x1a9c	          0x4885c0	                           test rax, rax	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x1a9f	            0x7509	                           jne 0x4001aea	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x1aa1	      0xe800000000	                          call 0x4001ae6	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x1aa6	            0x85c0	                           test eax, eax	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x1aa8	            0x740a	                            je 0x4001af4	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x1aaa	      0xe800000000	                          call 0x4001aef	      1597	gui.c	FUNCTION_23	IF_2	CALL_3
0x1aaf	      0xe9a7020000	                           jmp 0x4001d9b	      1598	gui.c	FUNCTION_23	IF_2
0x1ab4	      0xe800000000	                          call 0x4001af9	      1602	gui.c	FUNCTION_23	CALL_4
0x1ab9	          0x8945e8	             mov dword [rbp - 0x18], eax	      1602	gui.c	FUNCTION_23	CALL_4
0x1abc	      0xe800000000	                          call 0x4001b01	      1603	gui.c	FUNCTION_23	CALL_5
0x1ac1	          0x8945ec	             mov dword [rbp - 0x14], eax	      1603	gui.c	FUNCTION_23	CALL_5
0x1ac4	        0x837db800	               cmp dword [rbp - 0x48], 0	      1604	gui.c	FUNCTION_23	IF_3
0x1ac8	            0x7413	                            je 0x4001b1d	      1604	gui.c	FUNCTION_23	IF_3
0x1aca	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	      1606	gui.c	FUNCTION_23	CALL_6
0x1ace	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1606	gui.c	FUNCTION_23	CALL_6
0x1ad2	          0x4889d6	                            mov rsi, rdx	      1606	gui.c	FUNCTION_23	CALL_6
0x1ad5	          0x4889c7	                            mov rdi, rax	      1606	gui.c	FUNCTION_23	CALL_6
0x1ad8	      0xe800000000	                          call 0x4001b1d	      1606	gui.c	FUNCTION_23	CALL_6
0x1add	    0x8b0500000000	            mov eax, dword [0x04001b23] 	      1618	gui.c	FUNCTION_23	ELSE_1
0x1ae3	            0x89c2	                            mov edx, eax	      1618	gui.c	FUNCTION_23	ELSE_1
0x1ae5	    0x488b05000000	            mov rax, qword [0x04001b2c] 	      1618	gui.c	FUNCTION_23	ELSE_1
0x1aec	           0xfafd0	                           imul edx, eax	      1618	gui.c	FUNCTION_23	ELSE_1
0x1aef	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1618	gui.c	FUNCTION_23	ELSE_1
0x1af2	             0x1d0	                            add eax, edx	      1618	gui.c	FUNCTION_23	ELSE_1
0x1af4	          0x8945d8	             mov dword [rbp - 0x28], eax	      1618	gui.c	FUNCTION_23	ELSE_1
0x1af7	    0x8b0500000000	            mov eax, dword [0x04001b3d] 	      1619	gui.c	FUNCTION_23	ELSE_1
0x1afd	            0x89c2	                            mov edx, eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x1aff	    0x488b05000000	            mov rax, qword [0x04001b46] 	      1619	gui.c	FUNCTION_23	ELSE_1
0x1b06	           0xfafd0	                           imul edx, eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x1b09	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1619	gui.c	FUNCTION_23	ELSE_1
0x1b0c	             0x1d0	                            add eax, edx	      1619	gui.c	FUNCTION_23	ELSE_1
0x1b0e	          0x8945dc	             mov dword [rbp - 0x24], eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x1b11	        0x837db800	               cmp dword [rbp - 0x48], 0	      1622	gui.c	FUNCTION_23	IF_5
0x1b15	     0xf84f1000000	                            je 0x4001c4c	      1622	gui.c	FUNCTION_23	IF_5
0x1b1b	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x1b1f	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x1b23	          0x4889d6	                            mov rsi, rdx	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x1b26	          0x4889c7	                            mov rdi, rax	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x1b29	      0xe800000000	                          call 0x4001b6e	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x1b2e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x1b31	          0x83e002	                              and eax, 2	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x1b34	            0x85c0	                           test eax, eax	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x1b36	            0x7456	                            je 0x4001bce	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x1b38	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x1b3b	          0x3945d8	            cmp dword [rbp - 0x28], eax 	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x1b3e	            0x7e4e	                           jle 0x4001bce	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x1b40	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x1b43	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x1b46	    0x8b0d00000000	            mov ecx, dword [0x04001b8c] 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x1b4c	              0x99	                                     cdq	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x1b4d	            0xf7f9	                                idiv ecx	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x1b4f	            0x4898	                                    cdqe	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x1b51	    0x488905000000	            mov qword [0x04001b98], rax 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x1b58	    0x488b05000000	            mov rax, qword [0x04001b9f] 	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x1b5f	        0x4883f80b	                            cmp rax, 0xb	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x1b63	            0x7f0b	                            jg 0x4001bb0	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x1b65	    0x48c705000000	            mov qword [0x04001bb0], 0xc 	      1629	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x1b70	    0x8b0500000000	            mov eax, dword [0x04001bb6] 	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x1b76	            0x89c2	                            mov edx, eax	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x1b78	    0x488b05000000	            mov rax, qword [0x04001bbf] 	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x1b7f	           0xfafd0	                           imul edx, eax	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x1b82	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x1b85	             0x1d0	                            add eax, edx	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x1b87	          0x8945d8	             mov dword [rbp - 0x28], eax	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x1b8a	        0x8345e401	               add dword [rbp - 0x1c], 1	      1632	gui.c	FUNCTION_23	IF_5	IF_6
0x1b8e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x1b91	          0x83e001	                              and eax, 1	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x1b94	            0x85c0	                           test eax, eax	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x1b96	            0x7443	                            je 0x4001c1b	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x1b98	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x1b9b	          0x3945dc	            cmp dword [rbp - 0x24], eax 	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x1b9e	            0x7e3b	                           jle 0x4001c1b	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x1ba0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x1ba3	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x1ba6	    0x8b0d00000000	            mov ecx, dword [0x04001bec] 	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x1bac	              0x99	                                     cdq	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x1bad	            0xf7f9	                                idiv ecx	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x1baf	            0x4898	                                    cdqe	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x1bb1	    0x488905000000	            mov qword [0x04001bf8], rax 	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x1bb8	      0xe800000000	                          call 0x4001bfd	      1638	gui.c	FUNCTION_23	IF_5	IF_8	CALL_9
0x1bbd	    0x8b0500000000	            mov eax, dword [0x04001c03] 	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x1bc3	            0x89c2	                            mov edx, eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x1bc5	    0x488b05000000	            mov rax, qword [0x04001c0c] 	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x1bcc	           0xfafd0	                           imul edx, eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x1bcf	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x1bd2	             0x1d0	                            add eax, edx	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x1bd4	          0x8945dc	             mov dword [rbp - 0x24], eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x1bd7	        0x8345e401	               add dword [rbp - 0x1c], 1	      1641	gui.c	FUNCTION_23	IF_5	IF_8
0x1bdb	        0x837de402	               cmp dword [rbp - 0x1c], 2	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x1bdf	            0x7424	                            je 0x4001c45	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x1be1	    0x8b1500000000	            mov edx, dword [0x04001c27] 	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x1be7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x1bea	             0x1c2	                            add edx, eax	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x1bec	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x1bef	            0x39c2	                            cmp edx, eax	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x1bf1	            0x7c19	                            jl 0x4001c4c	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x1bf3	    0x8b1500000000	            mov edx, dword [0x04001c39] 	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x1bf9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x1bfc	             0x1c2	                            add edx, eax	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x1bfe	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x1c01	            0x39c2	                            cmp edx, eax	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x1c03	            0x7c07	                            jl 0x4001c4c	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x1c05	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x1c0c	      0xe800000000	                          call 0x4001c51	      1651	gui.c	FUNCTION_23	CALL_10
0x1c11	    0x488b05000000	            mov rax, qword [0x04001c58] 	      1652	gui.c	FUNCTION_23
0x1c18	    0x890500000000	            mov dword [0x04001c5e], eax 	      1652	gui.c	FUNCTION_23
0x1c1e	    0x488b05000000	            mov rax, qword [0x04001c65] 	      1653	gui.c	FUNCTION_23
0x1c25	    0x890500000000	            mov dword [0x04001c6b], eax 	      1653	gui.c	FUNCTION_23
0x1c2b	    0x8b1500000000	            mov edx, dword [0x04001c71] 	      1655	gui.c	FUNCTION_23
0x1c31	            0x89d0	                            mov eax, edx	      1655	gui.c	FUNCTION_23
0x1c33	             0x1c0	                            add eax, eax	      1655	gui.c	FUNCTION_23
0x1c35	             0x1d0	                            add eax, edx	      1655	gui.c	FUNCTION_23
0x1c37	          0xc1e002	                              shl eax, 2	      1655	gui.c	FUNCTION_23
0x1c3a	            0x89c2	                            mov edx, eax	      1655	gui.c	FUNCTION_23
0x1c3c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1655	gui.c	FUNCTION_23
0x1c3f	             0x1d0	                            add eax, edx	      1655	gui.c	FUNCTION_23
0x1c41	          0x8945f0	             mov dword [rbp - 0x10], eax	      1655	gui.c	FUNCTION_23
0x1c44	    0x8b0500000000	            mov eax, dword [0x04001c8a] 	      1656	gui.c	FUNCTION_23
0x1c4a	          0x8d1400	                    lea edx, [rax + rax]	      1656	gui.c	FUNCTION_23
0x1c4d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1656	gui.c	FUNCTION_23
0x1c50	             0x1d0	                            add eax, edx	      1656	gui.c	FUNCTION_23
0x1c52	          0x8945f4	              mov dword [rbp - 0xc], eax	      1656	gui.c	FUNCTION_23
0x1c55	      0xe800000000	                          call 0x4001c9a	      1657	gui.c	FUNCTION_23	CALL_11
0x1c5a	            0x89c2	                            mov edx, eax	      1657	gui.c	FUNCTION_23	CALL_11
0x1c5c	    0x8b0500000000	            mov eax, dword [0x04001ca2] 	      1657	gui.c	FUNCTION_23	CALL_11
0x1c62	           0xfafc2	                           imul eax, edx	      1657	gui.c	FUNCTION_23	CALL_11
0x1c65	           0x145f4	              add dword [rbp - 0xc], eax	      1657	gui.c	FUNCTION_23	CALL_11
0x1c68	        0x837de000	               cmp dword [rbp - 0x20], 0	      1660	gui.c	FUNCTION_23	IF_10
0x1c6c	            0x7448	                            je 0x4001cf6	      1660	gui.c	FUNCTION_23	IF_10
0x1c6e	        0x488d55cc	                   lea rdx, [rbp - 0x34]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x1c72	        0x488d45c8	                   lea rax, [rbp - 0x38]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x1c76	          0x4889d6	                            mov rsi, rdx	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x1c79	          0x4889c7	                            mov rdi, rax	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x1c7c	      0xe800000000	                          call 0x4001cc1	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x1c81	    0x8b1500000000	            mov edx, dword [0x04001cc7] 	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x1c87	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x1c8a	             0x1c2	                            add edx, eax	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x1c8c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x1c8f	            0x39c2	                            cmp edx, eax	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x1c91	            0x7c15	                            jl 0x4001ce8	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x1c93	    0x8b0500000000	            mov eax, dword [0x04001cd9] 	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x1c99	          0x8d1400	                    lea edx, [rax + rax]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x1c9c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x1c9f	             0x1c2	                            add edx, eax	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x1ca1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x1ca4	            0x39c2	                            cmp edx, eax	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x1ca6	            0x7d0e	                           jge 0x4001cf6	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x1ca8	      0xe800000000	                          call 0x4001ced	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x1cad	            0x85c0	                           test eax, eax	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x1caf	            0x7405	                            je 0x4001cf6	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x1cb1	      0xe800000000	                          call 0x4001cf6	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x1cb6	        0x448b4dec	             mov r9d, dword [rbp - 0x14]	      1672	gui.c	FUNCTION_23	CALL_15
0x1cba	        0x448b45e8	             mov r8d, dword [rbp - 0x18]	      1672	gui.c	FUNCTION_23	CALL_15
0x1cbe	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1672	gui.c	FUNCTION_23	CALL_15
0x1cc1	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1672	gui.c	FUNCTION_23	CALL_15
0x1cc4	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      1672	gui.c	FUNCTION_23	CALL_15
0x1cc7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1672	gui.c	FUNCTION_23	CALL_15
0x1cca	        0x4883ec08	                              sub rsp, 8	      1672	gui.c	FUNCTION_23	CALL_15
0x1cce	          0x8b7db4	             mov edi, dword [rbp - 0x4c]	      1672	gui.c	FUNCTION_23	CALL_15
0x1cd1	              0x57	                                push rdi	      1672	gui.c	FUNCTION_23	CALL_15
0x1cd2	            0x89c7	                            mov edi, eax	      1672	gui.c	FUNCTION_23	CALL_15
0x1cd4	      0xe800000000	                          call 0x4001d19	      1672	gui.c	FUNCTION_23	CALL_15
0x1cd9	        0x4883c410	                           add rsp, 0x10	      1672	gui.c	FUNCTION_23	CALL_15
0x1cdd	        0x837db800	               cmp dword [rbp - 0x48], 0	      1675	gui.c	FUNCTION_23	IF_12
0x1ce1	            0x745c	                            je 0x4001d7f	      1675	gui.c	FUNCTION_23	IF_12
0x1ce3	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1675	gui.c	FUNCTION_23	IF_12
0x1ce6	            0x85c0	                           test eax, eax	      1675	gui.c	FUNCTION_23	IF_12
0x1ce8	            0x7855	                            js 0x4001d7f	      1675	gui.c	FUNCTION_23	IF_12
0x1cea	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1675	gui.c	FUNCTION_23	IF_12
0x1ced	            0x85c0	                           test eax, eax	      1675	gui.c	FUNCTION_23	IF_12
0x1cef	            0x784e	                            js 0x4001d7f	      1675	gui.c	FUNCTION_23	IF_12
0x1cf1	      0xe800000000	                          call 0x4001d36	      1680	gui.c	FUNCTION_23	IF_12	CALL_16
0x1cf6	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1cfa	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1cfe	          0x4889d6	                            mov rsi, rdx	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d01	          0x4889c7	                            mov rdi, rax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d04	      0xe800000000	                          call 0x4001d49	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d09	          0x83f801	                              cmp eax, 1	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d0c	            0x7531	                           jne 0x4001d7f	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d0e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d11	            0x85c0	                           test eax, eax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d13	            0x7807	                            js 0x4001d5c	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d15	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d18	            0x85c0	                           test eax, eax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d1a	            0x7923	                           jns 0x4001d7f	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x1d1c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d1f	      0xba00000000	                              mov edx, 0	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d24	            0x85c0	                           test eax, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d26	           0xf49d0	                         cmovns edx, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d29	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d2c	      0xb900000000	                              mov ecx, 0	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d31	            0x85c0	                           test eax, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d33	           0xf48c1	                          cmovs eax, ecx	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d36	            0x89d6	                            mov esi, edx	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d38	            0x89c7	                            mov edi, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d3a	      0xe800000000	                          call 0x4001d7f	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x1d3f	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1685	gui.c	FUNCTION_23	CALL_19
0x1d42	            0x89c7	                            mov edi, eax	      1685	gui.c	FUNCTION_23	CALL_19
0x1d44	      0xe8c2f9ffff	        call sym.gui_position_components	      1685	gui.c	FUNCTION_23	CALL_19
0x1d49	      0xbf01000000	                              mov edi, 1	      1686	gui.c	FUNCTION_23	CALL_20
0x1d4e	      0xe800000000	                          call 0x4001d93	      1686	gui.c	FUNCTION_23	CALL_20
0x1d53	      0xe800000000	                          call 0x4001d98	      1687	gui.c	FUNCTION_23	CALL_21
0x1d58	            0xeb01	                           jmp 0x4001d9b	      1687	gui.c	FUNCTION_23	CALL_21
0x1d5a	              0x90	                                     nop	      1589	gui.c	FUNCTION_23	IF_1
0x1d5b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1688	gui.c	FUNCTION_23
0x1d5f	    0x644833042528	                xor rax, qword fs:[0x28]	      1688	gui.c	FUNCTION_23
0x1d68	            0x7405	                            je 0x4001daf	      1688	gui.c	FUNCTION_23
0x1d6a	      0xe800000000	                          call 0x4001daf	      1688	gui.c	FUNCTION_23
0x1d6f	              0xc9	                                   leave	      1688	gui.c	FUNCTION_23
0x1d70	              0xc3	                                     ret	      1688	gui.c	FUNCTION_23
gui_xy2colrow	ELSE,0:IF,0:CALL,5:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	37
0x3e1a	              0x55	                                push rbp	      3395	gui.c	ELSE_9	FUNCTION_51
0x3e1b	          0x4889e5	                            mov rbp, rsp	      3395	gui.c	ELSE_9	FUNCTION_51
0x3e1e	        0x4883ec20	                           sub rsp, 0x20	      3395	gui.c	ELSE_9	FUNCTION_51
0x3e22	          0x897dec	             mov dword [rbp - 0x14], edi	      3395	gui.c	ELSE_9	FUNCTION_51
0x3e25	          0x8975e8	             mov dword [rbp - 0x18], esi	      3395	gui.c	ELSE_9	FUNCTION_51
0x3e28	        0x488955e0	             mov qword [rbp - 0x20], rdx	      3395	gui.c	ELSE_9	FUNCTION_51
0x3e2c	    0x8b0500000000	            mov eax, dword [0x04003e72] 	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e32	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e35	            0x29c2	                            sub edx, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e37	            0x89d0	                            mov eax, edx	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e39	    0x8b0d00000000	            mov ecx, dword [0x04003e7f] 	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e3f	              0x99	                                     cdq	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e40	            0xf7f9	                                idiv ecx	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e42	            0x89c7	                            mov edi, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e44	      0xe800000000	                          call 0x4003e89	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e49	          0x8945f8	                mov dword [rbp - 8], eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x3e4c	    0x8b0500000000	            mov eax, dword [0x04003e92] 	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e52	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e55	            0x29c2	                            sub edx, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e57	            0x89d0	                            mov eax, edx	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e59	    0x8b0d00000000	            mov ecx, dword [0x04003e9f] 	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e5f	              0x99	                                     cdq	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e60	            0xf7f9	                                idiv ecx	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e62	            0x89c7	                            mov edi, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e64	      0xe800000000	                          call 0x4003ea9	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e69	          0x8945fc	                mov dword [rbp - 4], eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x3e6c	          0x8b55fc	                mov edx, dword [rbp - 4]	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x3e6f	          0x8b45f8	                mov eax, dword [rbp - 8]	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x3e72	            0x89d6	                            mov esi, edx	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x3e74	            0x89c7	                            mov edi, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x3e76	      0xe800000000	                          call 0x4003ebb	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x3e7b	            0x89c2	                            mov edx, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x3e7d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x3e81	            0x8910	                    mov dword [rax], edx	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x3e83	          0x8b45fc	                mov eax, dword [rbp - 4]	      3404	gui.c	ELSE_9	FUNCTION_51
0x3e86	              0xc9	                                   leave	      3405	gui.c	ELSE_9	FUNCTION_51
0x3e87	              0xc3	                                     ret	      3405	gui.c	ELSE_9	FUNCTION_51
gui_set_fg_color	ELSE,0:IF,0:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	16
0x5fc8	              0x55	                                push rbp	      4745	gui.c	FUNCTION_73
0x5fc9	          0x4889e5	                            mov rbp, rsp	      4745	gui.c	FUNCTION_73
0x5fcc	        0x4883ec10	                           sub rsp, 0x10	      4745	gui.c	FUNCTION_73
0x5fd0	        0x48897df8	                mov qword [rbp - 8], rdi	      4745	gui.c	FUNCTION_73
0x5fd4	        0x488b45f8	                mov rax, qword [rbp - 8]	      4746	gui.c	FUNCTION_73	CALL_1
0x5fd8	          0x4889c7	                            mov rdi, rax	      4746	gui.c	FUNCTION_73	CALL_1
0x5fdb	      0xe800000000	                          call 0x4006020	      4746	gui.c	FUNCTION_73	CALL_1
0x5fe0	    0x488905000000	            mov qword [0x04006027], rax 	      4746	gui.c	FUNCTION_73	CALL_1
0x5fe7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4747	gui.c	FUNCTION_73	CALL_3
0x5feb	          0x4889c7	                            mov rdi, rax	      4747	gui.c	FUNCTION_73	CALL_3
0x5fee	      0xe800000000	                          call 0x4006033	      4747	gui.c	FUNCTION_73	CALL_3
0x5ff3	          0x4889c7	                            mov rdi, rax	      4747	gui.c	FUNCTION_73	CALL_3
0x5ff6	      0xe800000000	                          call 0x400603b	      4747	gui.c	FUNCTION_73	CALL_3
0x5ffb	              0x90	                                     nop	      4748	gui.c	FUNCTION_73
0x5ffc	              0xc9	                                   leave	      4748	gui.c	FUNCTION_73
0x5ffd	              0xc3	                                     ret	      4748	gui.c	FUNCTION_73
gui_mouse_correct	ELSE,0:IF,4:CALL,8:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	96
0x6390	              0x55	                                push rbp	      4920	gui.c	FUNCTION_80
0x6391	          0x4889e5	                            mov rbp, rsp	      4920	gui.c	FUNCTION_80
0x6394	              0x53	                                push rbx	      4920	gui.c	FUNCTION_80
0x6395	        0x4883ec28	                           sub rsp, 0x28	      4920	gui.c	FUNCTION_80
0x6399	    0x64488b042528	                mov rax, qword fs:[0x28]	      4920	gui.c	FUNCTION_80
0x63a2	        0x488945e8	             mov qword [rbp - 0x18], rax	      4920	gui.c	FUNCTION_80
0x63a6	            0x31c0	                            xor eax, eax	      4920	gui.c	FUNCTION_80
0x63a8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4922	gui.c	FUNCTION_80
0x63b0	    0xc70500000000	               mov dword [0x040063fa], 0	      4924	gui.c	FUNCTION_80
0x63ba	    0x8b0500000000	            mov eax, dword [0x04006400] 	      4926	gui.c	FUNCTION_80	IF_1
0x63c0	            0x85c0	                           test eax, eax	      4926	gui.c	FUNCTION_80	IF_1
0x63c2	     0xf8423010000	                            je 0x400652b	      4926	gui.c	FUNCTION_80	IF_1
0x63c8	    0x8b0500000000	            mov eax, dword [0x0400640e] 	      4926	gui.c	FUNCTION_80	IF_1
0x63ce	            0x85c0	                           test eax, eax	      4926	gui.c	FUNCTION_80	IF_1
0x63d0	     0xf8415010000	                            je 0x400652b	      4926	gui.c	FUNCTION_80	IF_1
0x63d6	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      4929	gui.c	FUNCTION_80	CALL_1
0x63da	        0x488d45d8	                   lea rax, [rbp - 0x28]	      4929	gui.c	FUNCTION_80	CALL_1
0x63de	          0x4889d6	                            mov rsi, rdx	      4929	gui.c	FUNCTION_80	CALL_1
0x63e1	          0x4889c7	                            mov rdi, rax	      4929	gui.c	FUNCTION_80	CALL_1
0x63e4	      0xe800000000	                          call 0x4006429	      4929	gui.c	FUNCTION_80	CALL_1
0x63e9	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4931	gui.c	FUNCTION_80	IF_2
0x63ec	            0x85c0	                           test eax, eax	      4931	gui.c	FUNCTION_80	IF_2
0x63ee	     0xf88fa000000	                            js 0x400652e	      4931	gui.c	FUNCTION_80	IF_2
0x63f4	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4931	gui.c	FUNCTION_80	IF_2
0x63f7	          0x4863d0	                         movsxd rdx, eax	      4931	gui.c	FUNCTION_80	IF_2
0x63fa	    0x8b0500000000	            mov eax, dword [0x04006440] 	      4931	gui.c	FUNCTION_80	IF_2
0x6400	          0x4863c8	                         movsxd rcx, eax	      4931	gui.c	FUNCTION_80	IF_2
0x6403	    0x488b05000000	            mov rax, qword [0x0400644a] 	      4931	gui.c	FUNCTION_80	IF_2
0x640a	        0x480fafc1	                           imul rax, rcx	      4931	gui.c	FUNCTION_80	IF_2
0x640e	          0x4839c2	                            cmp rdx, rax	      4931	gui.c	FUNCTION_80	IF_2
0x6411	     0xf8fd7000000	                            jg 0x400652e	      4931	gui.c	FUNCTION_80	IF_2
0x6417	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x641a	            0x85c0	                           test eax, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x641c	            0x7834	                            js 0x4006492	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x641e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x6421	    0x8b0500000000	            mov eax, dword [0x04006467] 	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x6427	            0x29c2	                            sub edx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x6429	            0x89d0	                            mov eax, edx	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x642b	    0x8b1d00000000	            mov ebx, dword [0x04006471] 	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x6431	              0x99	                                     cdq	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x6432	            0xf7fb	                                idiv ebx	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x6434	            0x89c3	                            mov ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x6436	      0xe800000000	                          call 0x400647b	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x643b	            0x39c3	                            cmp ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x643d	            0x7c13	                            jl 0x4006492	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x643f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4934	gui.c	FUNCTION_80	CALL_4
0x6442	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4934	gui.c	FUNCTION_80	CALL_4
0x6445	            0x89d6	                            mov esi, edx	      4934	gui.c	FUNCTION_80	CALL_4
0x6447	            0x89c7	                            mov edi, eax	      4934	gui.c	FUNCTION_80	CALL_4
0x6449	      0xe8bc000000	                         call sym.xy2win	      4934	gui.c	FUNCTION_80	CALL_4
0x644e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4934	gui.c	FUNCTION_80	CALL_4
0x6452	    0x488b05000000	            mov rax, qword [0x04006499] 	      4935	gui.c	FUNCTION_80	IF_4
0x6459	        0x483945e0	            cmp qword [rbp - 0x20], rax 	      4935	gui.c	FUNCTION_80	IF_4
0x645d	     0xf848c000000	                            je 0x400652f	      4935	gui.c	FUNCTION_80	IF_4
0x6463	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4935	gui.c	FUNCTION_80	IF_4
0x6468	     0xf8481000000	                            je 0x400652f	      4935	gui.c	FUNCTION_80	IF_4
0x646e	      0xe800000000	                          call 0x40064b3	      4937	gui.c	FUNCTION_80	IF_4	CALL_5
0x6473	    0x488b05000000	            mov rax, qword [0x040064ba] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x647a	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x6480	    0x488b05000000	            mov rax, qword [0x040064c7] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x6487	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x648d	             0x1c2	                            add edx, eax	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x648f	    0x488b05000000	            mov rax, qword [0x040064d6] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x6496	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x649c	             0x1c2	                            add edx, eax	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x649e	    0x8b0500000000	            mov eax, dword [0x040064e4] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x64a4	           0xfafd0	                           imul edx, eax	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x64a7	    0x8b0500000000	            mov eax, dword [0x040064ed] 	      4940	gui.c	FUNCTION_80	IF_4
0x64ad	            0x89c1	                            mov ecx, eax	      4940	gui.c	FUNCTION_80	IF_4
0x64af	          0xc1e91f	                           shr ecx, 0x1f	      4940	gui.c	FUNCTION_80	IF_4
0x64b2	             0x1c8	                            add eax, ecx	      4940	gui.c	FUNCTION_80	IF_4
0x64b4	            0xd1f8	                              sar eax, 1	      4940	gui.c	FUNCTION_80	IF_4
0x64b6	             0x1c2	                            add edx, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64b8	    0x488b05000000	            mov rax, qword [0x040064ff] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64bf	    0x8b88a8000000	            mov ecx, dword [rax + 0xa8] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64c5	    0x488b05000000	            mov rax, qword [0x0400650c] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64cc	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64d2	             0x1c1	                            add ecx, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64d4	    0x8b0500000000	            mov eax, dword [0x0400651a] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64da	           0xfafc1	                           imul eax, ecx	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64dd	          0x83e803	                              sub eax, 3	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64e0	            0x89d6	                            mov esi, edx	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64e2	            0x89c7	                            mov edi, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64e4	      0xe800000000	                          call 0x4006529	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64e9	            0xeb04	                           jmp 0x400652f	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x64eb	              0x90	                                     nop	      4927	gui.c	FUNCTION_80	IF_1
0x64ec	            0xeb01	                           jmp 0x400652f	      4927	gui.c	FUNCTION_80	IF_1
0x64ee	              0x90	                                     nop	      4932	gui.c	FUNCTION_80	IF_2
0x64ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4942	gui.c	FUNCTION_80
0x64f3	    0x644833042528	                xor rax, qword fs:[0x28]	      4942	gui.c	FUNCTION_80
0x64fc	            0x7405	                            je 0x4006543	      4942	gui.c	FUNCTION_80
0x64fe	      0xe800000000	                          call 0x4006543	      4942	gui.c	FUNCTION_80
0x6503	        0x4883c428	                           add rsp, 0x28	      4942	gui.c	FUNCTION_80
0x6507	              0x5b	                                 pop rbx	      4942	gui.c	FUNCTION_80
0x6508	              0x5d	                                 pop rbp	      4942	gui.c	FUNCTION_80
0x6509	              0xc3	                                     ret	      4942	gui.c	FUNCTION_80
gui_use_tabline	ELSE,0:IF,0:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	16
0x4394	              0x55	                                push rbp	      3681	gui.c	FUNCTION_54
0x4395	          0x4889e5	                            mov rbp, rsp	      3681	gui.c	FUNCTION_54
0x4398	    0x8b0500000000	            mov eax, dword [0x040043de] 	      3682	gui.c	FUNCTION_54	CALL_1
0x439e	            0x85c0	                           test eax, eax	      3682	gui.c	FUNCTION_54	CALL_1
0x43a0	            0x7420	                            je 0x4004402	      3682	gui.c	FUNCTION_54	CALL_1
0x43a2	    0x488b05000000	            mov rax, qword [0x040043e9] 	      3682	gui.c	FUNCTION_54	CALL_1
0x43a9	      0xbe65000000	                           mov esi, 0x65	      3682	gui.c	FUNCTION_54	CALL_1
0x43ae	          0x4889c7	                            mov rdi, rax	      3682	gui.c	FUNCTION_54	CALL_1
0x43b1	      0xe800000000	                          call 0x40043f6	      3682	gui.c	FUNCTION_54	CALL_1
0x43b6	          0x4885c0	                           test rax, rax	      3682	gui.c	FUNCTION_54	CALL_1
0x43b9	            0x7407	                            je 0x4004402	      3682	gui.c	FUNCTION_54	CALL_1
0x43bb	      0xb801000000	                              mov eax, 1	      3682	gui.c	FUNCTION_54	CALL_1
0x43c0	            0xeb05	                           jmp 0x4004407	      3682	gui.c	FUNCTION_54	CALL_1
0x43c2	      0xb800000000	                              mov eax, 0	      3682	gui.c	FUNCTION_54	CALL_1
0x43c7	              0x5d	                                 pop rbp	      3683	gui.c	FUNCTION_54
0x43c8	              0xc3	                                     ret	      3683	gui.c	FUNCTION_54
gui_write	ELSE,12:IF,21:CALL,31:functions,0:WHILE,2:SWITCH,1:DO,0:FOR,1	317
0x1e92	              0x55	                                push rbp	      1765	gui.c	FUNCTION_30
0x1e93	          0x4889e5	                            mov rbp, rsp	      1765	gui.c	FUNCTION_30
0x1e96	        0x4883ec30	                           sub rsp, 0x30	      1765	gui.c	FUNCTION_30
0x1e9a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1765	gui.c	FUNCTION_30
0x1e9e	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1765	gui.c	FUNCTION_30
0x1ea1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1765	gui.c	FUNCTION_30
0x1eaa	        0x488945f8	                mov qword [rbp - 8], rax	      1765	gui.c	FUNCTION_30
0x1eae	            0x31c0	                            xor eax, eax	      1765	gui.c	FUNCTION_30
0x1eb0	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1767	gui.c	FUNCTION_30
0x1eb7	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1767	gui.c	FUNCTION_30
0x1ebe	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1768	gui.c	FUNCTION_30
0x1ec5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1769	gui.c	FUNCTION_30
0x1ecc	      0xe9d5030000	                           jmp 0x40022e6	      1797	gui.c	FUNCTION_30	WHILE_1
0x1ed1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1ed5	           0xfb600	                   movzx eax, byte [rax]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1ed8	            0x3c1b	                            cmp al, 0x1b	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1eda	     0xf8571020000	                           jne 0x4002191	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1ee0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1ee4	        0x4883c001	                              add rax, 1	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1ee8	           0xfb600	                   movzx eax, byte [rax]	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1eeb	            0x3c7c	                            cmp al, 0x7c	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1eed	     0xf855e020000	                           jne 0x4002191	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1ef3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1ef7	        0x4883c002	                              add rax, 2	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1efb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x1eff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f03	           0xfb600	                   movzx eax, byte [rax]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f06	           0xfb6c0	                           movzx eax, al	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f09	          0x83e830	                           sub eax, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f0c	          0x83f809	                              cmp eax, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f0f	            0x7621	                           jbe 0x4001f72	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f15	           0xfb600	                   movzx eax, byte [rax]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f18	            0x3c2d	                            cmp al, 0x2d	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f1a	            0x757f	                           jne 0x4001fdb	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f1c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f20	        0x4883c001	                              add rax, 1	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f24	           0xfb600	                   movzx eax, byte [rax]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f27	           0xfb6c0	                           movzx eax, al	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f2a	          0x83e830	                           sub eax, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f2d	          0x83f809	                              cmp eax, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f30	            0x7769	                            ja 0x4001fdb	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x1f32	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x1f36	          0x4889c7	                            mov rdi, rax	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x1f39	      0xe800000000	                          call 0x4001f7e	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x1f3e	          0x8945e0	             mov dword [rbp - 0x20], eax	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x1f41	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x1f44	          0x4863d0	                         movsxd rdx, eax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x1f47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x1f4b	          0x4801c2	                            add rdx, rax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x1f4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x1f52	          0x4839c2	                            cmp rdx, rax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x1f55	     0xf8257030000	                            jb 0x40022f2	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x1f5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x1f5f	           0xfb600	                   movzx eax, byte [rax]	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x1f62	            0x3c3b	                            cmp al, 0x3b	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x1f64	            0x7535	                           jne 0x4001fdb	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x1f66	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x1f6a	        0x4883c001	                              add rax, 1	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x1f6e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x1f72	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x1f76	          0x4889c7	                            mov rdi, rax	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x1f79	      0xe800000000	                          call 0x4001fbe	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x1f7e	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x1f81	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x1f84	          0x4863d0	                         movsxd rdx, eax	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x1f87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x1f8b	          0x4801c2	                            add rdx, rax	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x1f8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x1f92	          0x4839c2	                            cmp rdx, rax	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x1f95	     0xf821a030000	                            jb 0x40022f5	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x1f9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1f9f	           0xfb600	                   movzx eax, byte [rax]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fa2	           0xfb6c0	                           movzx eax, al	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fa5	          0x83e824	                           sub eax, 0x24	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fa8	          0x83f84f	                           cmp eax, 0x4f	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fab	     0xf8766010000	                            ja 0x4002157	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fb1	            0x89c0	                            mov eax, eax	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fb3	    0x488b04c50000	                  mov rax, qword [rax*8]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fbb	            0xffe0	                                 jmp rax	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fbd	      0xbf0f270000	                         mov edi, 0x270f	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x1fc2	      0xe800000000	                          call 0x4002007	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x1fc7	      0xe800000000	                          call 0x400200c	      1819	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_13
0x1fcc	    0xc60500000000	                mov byte [0x04002013], 0	      1820	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fd3	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      1821	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fda	      0xe945010000	                           jmp 0x4002164	      1822	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fdf	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x1fe2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x1fe5	            0x89d6	                            mov esi, edx	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x1fe7	            0x89c7	                            mov edi, eax	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x1fe9	      0xe800000000	                          call 0x400202e	      1824	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_14
0x1fee	      0xe931010000	                           jmp 0x4002164	      1825	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1ff3	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      1827	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1ffa	      0xe925010000	                           jmp 0x4002164	      1828	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x1fff	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x2002	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x2005	            0x7d17	                           jge 0x400205e	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x2007	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1832	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x200a	    0x890500000000	            mov dword [0x04002050], eax 	      1832	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x2010	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x2013	    0x890500000000	            mov dword [0x04002059], eax 	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x2019	      0xe906010000	                           jmp 0x4002164	      1840	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x201e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x2021	    0x890500000000	            mov dword [0x04002067], eax 	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x2027	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x202a	    0x890500000000	            mov dword [0x04002070], eax 	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x2030	      0xe9ef000000	                           jmp 0x4002164	      1840	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x2035	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x2038	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x203b	            0x7d17	                           jge 0x4002094	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x203d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1844	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x2040	    0x890500000000	            mov dword [0x04002086], eax 	      1844	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x2046	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x2049	    0x890500000000	            mov dword [0x0400208f], eax 	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x204f	      0xe9d0000000	                           jmp 0x4002164	      1852	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x2054	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x2057	    0x890500000000	            mov dword [0x0400209d], eax 	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x205d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x2060	    0x890500000000	            mov dword [0x040020a6], eax 	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x2066	      0xe9b9000000	                           jmp 0x4002164	      1852	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x206b	    0x8b0500000000	            mov eax, dword [0x040020b1] 	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x2071	      0xbe01000000	                              mov esi, 1	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x2076	            0x89c7	                            mov edi, eax	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x2078	      0xe8fe110000	               call sym.gui_delete_lines	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x207d	      0xe9a2000000	                           jmp 0x4002164	      1855	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x2082	    0x8b0500000000	            mov eax, dword [0x040020c8] 	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x2088	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x208b	            0x89d6	                            mov esi, edx	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x208d	            0x89c7	                            mov edi, eax	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x208f	      0xe8e7110000	               call sym.gui_delete_lines	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x2094	      0xe98b000000	                           jmp 0x4002164	      1858	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x2099	    0x8b0500000000	            mov eax, dword [0x040020df] 	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x209f	      0xbe01000000	                              mov esi, 1	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x20a4	            0x89c7	                            mov edi, eax	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x20a6	      0xe891120000	               call sym.gui_insert_lines	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x20ab	            0xeb77	                           jmp 0x4002164	      1861	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x20ad	    0x8b0500000000	            mov eax, dword [0x040020f3] 	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x20b3	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x20b6	            0x89d6	                            mov esi, edx	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x20b8	            0x89c7	                            mov edi, eax	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x20ba	      0xe87d120000	               call sym.gui_insert_lines	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x20bf	            0xeb63	                           jmp 0x4002164	      1864	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x20c1	    0x488b05000000	            mov rax, qword [0x04002108] 	      1867	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x20c8	          0x8d48ff	                      lea ecx, [rax - 1]	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x20cb	    0x8b1500000000	            mov edx, dword [0x04002111] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x20d1	    0x8b3500000000	            mov esi, dword [0x04002117] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x20d7	    0x8b0500000000	            mov eax, dword [0x0400211d] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x20dd	            0x89c7	                            mov edi, eax	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x20df	      0xe800000000	                          call 0x4002124	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x20e4	            0xeb3e	                           jmp 0x4002164	      1868	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x20e6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1870	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_20
0x20e9	            0x89c7	                            mov edi, eax	      1870	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_20
0x20eb	      0xe800000000	                          call 0x4002130	      1870	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_20
0x20f0	            0xeb32	                           jmp 0x4002164	      1871	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x20f2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1873	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_21
0x20f5	            0x89c7	                            mov edi, eax	      1873	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_21
0x20f7	      0xe800000000	                          call 0x400213c	      1873	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_21
0x20fc	            0xeb26	                           jmp 0x4002164	      1874	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x20fe	        0x837de000	               cmp dword [rbp - 0x20], 0	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x2102	            0x7405	                            je 0x4002149	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x2104	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x2107	            0xeb05	                           jmp 0x400214e	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x2109	      0xb814000000	                           mov eax, 0x14	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x210e	            0x89c7	                            mov edi, eax	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x2110	      0xe800000000	                          call 0x4002155	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x2115	            0xeb0d	                           jmp 0x4002164	      1877	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x2117	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x211b	        0x4883c001	                              add rax, 1	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x211f	        0x488945f0	             mov qword [rbp - 0x10], rax	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x2123	              0x90	                                     nop	      1880	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x2124	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x2128	        0x4883c001	                              add rax, 1	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x212c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x2130	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x2134	          0x4889c2	                            mov rdx, rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x2137	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x213b	          0x4829c2	                            sub rdx, rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x213e	          0x4889d0	                            mov rax, rdx	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x2141	          0x2945d4	             sub dword [rbp - 0x2c], eax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x2144	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x2148	        0x488945d8	             mov qword [rbp - 0x28], rax	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x214c	      0xe955010000	                           jmp 0x40022e6	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x2151	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1889	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2155	           0xfb600	                   movzx eax, byte [rax]	      1889	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2158	            0x3c1f	                            cmp al, 0x1f	      1885	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x215a	     0xf87dc000000	                            ja 0x400227c	      1885	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2160	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1892	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2164	           0xfb600	                   movzx eax, byte [rax]	      1892	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2167	            0x3c01	                               cmp al, 1	      1892	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2169	     0xf84cd000000	                            je 0x400227c	      1892	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x216f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2173	           0xfb600	                   movzx eax, byte [rax]	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2176	            0x3c02	                               cmp al, 2	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2178	     0xf84be000000	                            je 0x400227c	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x217e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x2182	           0xfb600	                   movzx eax, byte [rax]	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x2185	            0x3c0a	                             cmp al, 0xa	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x2187	            0x753f	                           jne 0x4002208	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x2189	    0xc70500000000	               mov dword [0x040021d3], 0	      1901	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x2193	    0x8b1500000000	            mov edx, dword [0x040021d9] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x2199	    0x8b0500000000	            mov eax, dword [0x040021df] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x219f	            0x39c2	                            cmp edx, eax	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x21a1	            0x7d11	                           jge 0x40021f4	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x21a3	    0x8b0500000000	            mov eax, dword [0x040021e9] 	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x21a9	          0x83c001	                              add eax, 1	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x21ac	    0x890500000000	            mov dword [0x040021f2], eax 	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x21b2	            0xeb7d	                           jmp 0x4002271	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x21b4	    0x8b0500000000	            mov eax, dword [0x040021fa] 	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x21ba	      0xbe01000000	                              mov esi, 1	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x21bf	            0x89c7	                            mov edi, eax	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x21c1	      0xe8b5100000	               call sym.gui_delete_lines	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x21c6	            0xeb69	                           jmp 0x4002271	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x21c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x21cc	           0xfb600	                   movzx eax, byte [rax]	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x21cf	            0x3c0d	                             cmp al, 0xd	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x21d1	            0x750c	                           jne 0x400221f	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x21d3	    0xc70500000000	               mov dword [0x0400221d], 0	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x21dd	            0xeb52	                           jmp 0x4002271	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x21df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x21e3	           0xfb600	                   movzx eax, byte [rax]	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x21e6	            0x3c08	                               cmp al, 8	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x21e8	            0x751b	                           jne 0x4002245	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x21ea	    0x8b0500000000	            mov eax, dword [0x04002230] 	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x21f0	            0x85c0	                           test eax, eax	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x21f2	            0x743d	                            je 0x4002271	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x21f4	    0x8b0500000000	            mov eax, dword [0x0400223a] 	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x21fa	          0x83e801	                              sub eax, 1	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x21fd	    0x890500000000	            mov dword [0x04002243], eax 	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x2203	            0xeb2c	                           jmp 0x4002271	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x2205	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x2209	           0xfb600	                   movzx eax, byte [rax]	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x220c	            0x3c0c	                             cmp al, 0xc	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x220e	            0x7511	                           jne 0x4002261	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x2210	    0x8b0500000000	            mov eax, dword [0x04002256] 	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x2216	          0x83c001	                              add eax, 1	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x2219	    0x890500000000	            mov dword [0x0400225f], eax 	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x221f	            0xeb10	                           jmp 0x4002271	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x2221	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x2225	           0xfb600	                   movzx eax, byte [rax]	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x2228	            0x3c07	                               cmp al, 7	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x222a	            0x7505	                           jne 0x4002271	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x222c	      0xe800000000	                          call 0x4002271	      1922	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18	CALL_25
0x2231	        0x836dd401	               sub dword [rbp - 0x2c], 1	      1926	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x2235	      0x488345d801	               add qword [rbp - 0x28], 1	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x223a	            0xeb6a	                           jmp 0x40022e6	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x223c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1931	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x2240	        0x488945f0	             mov qword [rbp - 0x10], rax	      1931	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x2244	            0xeb10	                           jmp 0x4002296	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2246	        0x836dd401	               sub dword [rbp - 0x2c], 1	      1946	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x224a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x224e	        0x4883c001	                              add rax, 1	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2252	        0x488945f0	             mov qword [rbp - 0x10], rax	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2256	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x225a	            0x7e21	                           jle 0x40022bd	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x225c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2260	           0xfb600	                   movzx eax, byte [rax]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2263	            0x3c1f	                            cmp al, 0x1f	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2265	            0x77df	                            ja 0x4002286	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2267	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1939	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x226b	           0xfb600	                   movzx eax, byte [rax]	      1939	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x226e	            0x3c01	                               cmp al, 1	      1939	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2270	            0x74d4	                            je 0x4002286	      1939	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2272	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2276	           0xfb600	                   movzx eax, byte [rax]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x2279	            0x3c02	                               cmp al, 2	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x227b	            0x74c9	                            je 0x4002286	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x227d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x2281	          0x4889c2	                            mov rdx, rax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x2284	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x2288	          0x4829c2	                            sub rdx, rax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x228b	          0x4889d0	                            mov rax, rdx	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x228e	            0x89c2	                            mov edx, eax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x2290	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x2294	            0x89d6	                            mov esi, edx	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x2296	          0x4889c7	                            mov rdi, rax	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x2299	      0xe82d010000	                     call sym.gui_outstr	      1949	gui.c	FUNCTION_30	WHILE_1	ELSE_11	CALL_27
0x229e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1950	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x22a2	        0x488945d8	             mov qword [rbp - 0x28], rax	      1950	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x22a6	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x22aa	     0xf8521fcffff	                           jne 0x4001f11	      1797	gui.c	FUNCTION_30	WHILE_1
0x22b0	            0xeb04	                           jmp 0x40022f6	      1797	gui.c	FUNCTION_30	WHILE_1
0x22b2	              0x90	                                     nop	      1806	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x22b3	            0xeb01	                           jmp 0x40022f6	      1806	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x22b5	              0x90	                                     nop	      1812	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x22b6	        0x837de800	               cmp dword [rbp - 0x18], 0	      1956	gui.c	FUNCTION_30	IF_19
0x22ba	            0x740f	                            je 0x400230b	      1956	gui.c	FUNCTION_30	IF_19
0x22bc	      0xbe01000000	                              mov esi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x22c1	      0xbf01000000	                              mov edi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x22c6	      0xe800000000	                          call 0x400230b	      1957	gui.c	FUNCTION_30	CALL_28
0x22cb	    0x488b15000000	            mov rdx, qword [0x04002312] 	      1961	gui.c	FUNCTION_30	IF_20
0x22d2	    0x488b05000000	            mov rax, qword [0x04002319] 	      1961	gui.c	FUNCTION_30	IF_20
0x22d9	          0x4839c2	                            cmp rdx, rax	      1961	gui.c	FUNCTION_30	IF_20
0x22dc	            0x740a	                            je 0x4002328	      1961	gui.c	FUNCTION_30	IF_20
0x22de	    0xc70500000000	     mov dword [0x04002328], 0xffffffff 	      1962	gui.c	FUNCTION_30	IF_20
0x22e8	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1968	gui.c	FUNCTION_30	IF_21
0x22ec	            0x7513	                           jne 0x4002341	      1968	gui.c	FUNCTION_30	IF_21
0x22ee	    0x488b15000000	            mov rdx, qword [0x04002335] 	      1968	gui.c	FUNCTION_30	IF_21
0x22f5	    0x488b05000000	            mov rax, qword [0x0400233c] 	      1968	gui.c	FUNCTION_30	IF_21
0x22fc	          0x4839c2	                            cmp rdx, rax	      1968	gui.c	FUNCTION_30	IF_21
0x22ff	            0x740c	                            je 0x400234d	      1968	gui.c	FUNCTION_30	IF_21
0x2301	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1969	gui.c	FUNCTION_30	CALL_29
0x2304	            0x89c7	                            mov edi, eax	      1969	gui.c	FUNCTION_30	CALL_29
0x2306	      0xe800000000	                          call 0x400234b	      1969	gui.c	FUNCTION_30	CALL_29
0x230b	            0xeb0a	                           jmp 0x4002357	      1969	gui.c	FUNCTION_30	CALL_29
0x230d	      0xbf00000000	                              mov edi, 0	      1971	gui.c	FUNCTION_30	CALL_30
0x2312	      0xe8f2380000	     call sym.gui_update_horiz_scrollbar	      1971	gui.c	FUNCTION_30	CALL_30
0x2317	    0x488b05000000	            mov rax, qword [0x0400235e] 	      1972	gui.c	FUNCTION_30
0x231e	    0x488905000000	            mov qword [0x04002365], rax 	      1972	gui.c	FUNCTION_30
0x2325	    0xc70500000000	     mov dword [0x0400236f], 0xffffffff 	      1979	gui.c	FUNCTION_30
0x232f	      0xe800000000	                          call 0x4002374	      1982	gui.c	FUNCTION_30	CALL_31
0x2334	              0x90	                                     nop	      1983	gui.c	FUNCTION_30
0x2335	        0x488b45f8	                mov rax, qword [rbp - 8]	      1983	gui.c	FUNCTION_30
0x2339	    0x644833042528	                xor rax, qword fs:[0x28]	      1983	gui.c	FUNCTION_30
0x2342	            0x7405	                            je 0x4002389	      1983	gui.c	FUNCTION_30
0x2344	      0xe800000000	                          call 0x4002389	      1983	gui.c	FUNCTION_30
0x2349	              0xc9	                                   leave	      1983	gui.c	FUNCTION_30
0x234a	              0xc3	                                     ret	      1983	gui.c	FUNCTION_30
gui_update_screen	ELSE,0:IF,5:CALL,12:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	98
0x69ff	              0x55	                                push rbp	      5127	gui.c	FUNCTION_88
0x6a00	          0x4889e5	                            mov rbp, rsp	      5127	gui.c	FUNCTION_88
0x6a03	        0x4883ec20	                           sub rsp, 0x20	      5127	gui.c	FUNCTION_88
0x6a07	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5129	gui.c	FUNCTION_88
0x6a0f	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5130	gui.c	FUNCTION_88
0x6a17	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      5131	gui.c	FUNCTION_88
0x6a1e	      0xe800000000	                          call 0x4006a63	      5134	gui.c	FUNCTION_88	CALL_1
0x6a23	      0xe800000000	                          call 0x4006a68	      5135	gui.c	FUNCTION_88	CALL_2
0x6a28	    0x8b0500000000	            mov eax, dword [0x04006a6e] 	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x6a2e	            0x85c0	                           test eax, eax	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x6a30	     0xf85dc000000	                           jne 0x4006b52	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x6a36	      0xe800000000	                          call 0x4006a7b	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x6a3b	            0x85c0	                           test eax, eax	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x6a3d	            0x7517	                           jne 0x4006a96	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x6a3f	    0x488b05000000	            mov rax, qword [0x04006a86] 	      5140	gui.c	FUNCTION_88	IF_1
0x6a46	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      5140	gui.c	FUNCTION_88	IF_1
0x6a4d	          0x4885c0	                           test rax, rax	      5140	gui.c	FUNCTION_88	IF_1
0x6a50	     0xf8ebc000000	                           jle 0x4006b52	      5140	gui.c	FUNCTION_88	IF_1
0x6a56	    0x488b15000000	            mov rdx, qword [0x04006a9d] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a5d	    0x488b05000000	            mov rax, qword [0x04006aa4] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a64	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a68	          0x4839c2	                            cmp rdx, rax	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a6b	            0x7528	                           jne 0x4006ad5	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a6d	    0x8b1500000000	            mov edx, dword [0x04006ab3] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a73	    0x488b05000000	            mov rax, qword [0x04006aba] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a7a	          0x8b4040	            mov eax, dword [rax + 0x40] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a7d	            0x39c2	                            cmp edx, eax	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a7f	            0x7514	                           jne 0x4006ad5	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a81	    0x8b1500000000	            mov edx, dword [0x04006ac7] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a87	    0x488b05000000	            mov rax, qword [0x04006ace] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a8e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a91	            0x39c2	                            cmp edx, eax	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a93	            0x747d	                            je 0x4006b52	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x6a95	      0xe800000000	                          call 0x4006ada	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x6a9a	            0x85c0	                           test eax, eax	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x6a9c	            0x7423	                            je 0x4006b01	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x6a9e	    0x488b05000000	            mov rax, qword [0x04006ae5] 	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x6aa5	          0x4989c0	                             mov r8, rax	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x6aa8	      0xb900000000	                              mov ecx, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x6aad	      0xba00000000	                              mov edx, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x6ab2	      0xbe00000000	                              mov esi, 0	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x6ab7	      0xbf1e000000	                           mov edi, 0x1e	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x6abc	      0xe800000000	                          call 0x4006b01	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x6ac1	    0x488b05000000	            mov rax, qword [0x04006b08] 	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x6ac8	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x6acf	          0x4885c0	                           test rax, rax	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x6ad2	            0x7e21	                           jle 0x4006b35	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x6ad4	    0x488b05000000	            mov rax, qword [0x04006b1b] 	      5149	gui.c	FUNCTION_88	IF_1	IF_3
0x6adb	        0x488945f0	             mov qword [rbp - 0x10], rax	      5149	gui.c	FUNCTION_88	IF_1	IF_3
0x6adf	    0x488b05000000	            mov rax, qword [0x04006b26] 	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x6ae6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x6aea	        0x488945f8	                mov qword [rbp - 8], rax	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x6aee	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      5151	gui.c	FUNCTION_88	IF_1	IF_3
0x6af5	    0x488b05000000	            mov rax, qword [0x04006b3c] 	      5154	gui.c	FUNCTION_88	IF_1
0x6afc	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5154	gui.c	FUNCTION_88	IF_1
0x6b00	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5154	gui.c	FUNCTION_88	IF_1
0x6b04	    0x488905000000	            mov qword [0x04006b4b], rax 	      5154	gui.c	FUNCTION_88	IF_1
0x6b0b	    0x488915000000	            mov qword [0x04006b52], rdx 	      5154	gui.c	FUNCTION_88	IF_1
0x6b12	      0xbf00000000	                              mov edi, 0	      5157	gui.c	FUNCTION_88	CALL_7
0x6b17	      0xe800000000	                          call 0x4006b5c	      5157	gui.c	FUNCTION_88	CALL_7
0x6b1c	      0xe800000000	                          call 0x4006b61	      5158	gui.c	FUNCTION_88	CALL_8
0x6b21	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5160	gui.c	FUNCTION_88	IF_4
0x6b25	            0x747a	                            je 0x4006be1	      5160	gui.c	FUNCTION_88	IF_4
0x6b27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5161	gui.c	FUNCTION_88	IF_4
0x6b2b	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5161	gui.c	FUNCTION_88	IF_4
0x6b2f	            0x751d	                           jne 0x4006b8e	      5161	gui.c	FUNCTION_88	IF_4
0x6b31	    0x488b05000000	            mov rax, qword [0x04006b78] 	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x6b38	          0x4889c7	                            mov rdi, rax	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x6b3b	      0xe800000000	                          call 0x4006b80	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x6b40	            0x85c0	                           test eax, eax	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x6b42	            0x750a	                           jne 0x4006b8e	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x6b44	    0x8b0500000000	            mov eax, dword [0x04006b8a] 	      5163	gui.c	FUNCTION_88	IF_4
0x6b4a	            0x85c0	                           test eax, eax	      5163	gui.c	FUNCTION_88	IF_4
0x6b4c	            0x7453	                            je 0x4006be1	      5163	gui.c	FUNCTION_88	IF_4
0x6b4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5165	gui.c	FUNCTION_88	IF_4	IF_5
0x6b52	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5165	gui.c	FUNCTION_88	IF_4	IF_5
0x6b56	            0x7416	                            je 0x4006bae	      5165	gui.c	FUNCTION_88	IF_4	IF_5
0x6b58	    0x488b05000000	            mov rax, qword [0x04006b9f] 	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x6b5f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x6b63	          0x4889d6	                            mov rsi, rdx	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x6b66	          0x4889c7	                            mov rdi, rax	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x6b69	      0xe800000000	                          call 0x4006bae	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x6b6e	    0x488b05000000	            mov rax, qword [0x04006bb5] 	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x6b75	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x6b79	          0x4889d6	                            mov rsi, rdx	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x6b7c	          0x4889c7	                            mov rdi, rax	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x6b7f	      0xe800000000	                          call 0x4006bc4	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x6b84	    0x488b05000000	            mov rax, qword [0x04006bcb] 	      5168	gui.c	FUNCTION_88	IF_4
0x6b8b	    0x488b15000000	            mov rdx, qword [0x04006bd2] 	      5168	gui.c	FUNCTION_88	IF_4
0x6b92	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      5168	gui.c	FUNCTION_88	IF_4
0x6b98	          0x83e2ef	                     and edx, 0xffffffef	      5168	gui.c	FUNCTION_88	IF_4
0x6b9b	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      5168	gui.c	FUNCTION_88	IF_4
0x6ba1	      0xbe00000000	                              mov esi, 0	      5171	gui.c	FUNCTION_88	CALL_12
0x6ba6	      0xbf01000000	                              mov edi, 1	      5171	gui.c	FUNCTION_88	CALL_12
0x6bab	      0xe800000000	                          call 0x4006bf0	      5171	gui.c	FUNCTION_88	CALL_12
0x6bb0	              0x90	                                     nop	      5172	gui.c	FUNCTION_88
0x6bb1	              0xc9	                                   leave	      5172	gui.c	FUNCTION_88
0x6bb2	              0xc3	                                     ret	      5172	gui.c	FUNCTION_88
gui_remove_scrollbars	ELSE,1:IF,1:CALL,1:functions,1:WHILE,0:SWITCH,0:DO,0:FOR,1	36
0x4a94	              0x55	                                push rbp	      3884	gui.c	FUNCTION_60
0x4a95	          0x4889e5	                            mov rbp, rsp	      3884	gui.c	FUNCTION_60
0x4a98	        0x4883ec10	                           sub rsp, 0x10	      3884	gui.c	FUNCTION_60
0x4a9c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3888	gui.c	FUNCTION_60	FOR_1
0x4aa3	            0xeb6a	                           jmp 0x4004b4f	      3888	gui.c	FUNCTION_60	FOR_1
0x4aa5	        0x837df402	                cmp dword [rbp - 0xc], 2	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x4aa9	            0x7511	                           jne 0x4004afc	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x4aab	      0xbe00000000	                              mov esi, 0	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4ab0	      0xbf00000000	                              mov edi, 0	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4ab5	      0xe800000000	                          call 0x4004afa	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4aba	            0xeb36	                           jmp 0x4004b32	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x4abc	    0x488b05000000	            mov rax, qword [0x04004b03] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4ac3	        0x488945f8	                mov qword [rbp - 8], rax	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4ac7	            0xeb22	                           jmp 0x4004b2b	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4ac9	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4acc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4ad0	      0xba00000000	                              mov edx, 0	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4ad5	            0x89ce	                            mov esi, ecx	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4ad7	          0x4889c7	                            mov rdi, rax	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4ada	      0xe85c0b0000	               call sym.gui_do_scrollbar	      3896	gui.c	FUNCTION_60	FOR_1	ELSE_1	FUNCTION_1	CALL_1
0x4adf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4ae3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4ae7	        0x488945f8	                mov qword [rbp - 8], rax	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4aeb	      0x48837df800	                  cmp qword [rbp - 8], 0	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4af0	            0x75d7	                           jne 0x4004b09	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4af2	    0x488b05000000	            mov rax, qword [0x04004b39] 	      3899	gui.c	FUNCTION_60	FOR_1
0x4af9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3899	gui.c	FUNCTION_60	FOR_1
0x4afc	          0x4863d2	                         movsxd rdx, edx	      3899	gui.c	FUNCTION_60	FOR_1
0x4aff	        0x4883c210	                           add rdx, 0x10	      3899	gui.c	FUNCTION_60	FOR_1
0x4b03	    0xc7449008ffff	mov dword [rax + rdx*4 + 8], 0xffffffff 	      3899	gui.c	FUNCTION_60	FOR_1
0x4b0b	        0x8345f401	                add dword [rbp - 0xc], 1	      3888	gui.c	FUNCTION_60	FOR_1
0x4b0f	        0x837df402	                cmp dword [rbp - 0xc], 2	      3888	gui.c	FUNCTION_60	FOR_1
0x4b13	            0x7e90	                           jle 0x4004ae5	      3888	gui.c	FUNCTION_60	FOR_1
0x4b15	              0x90	                                     nop	      3901	gui.c	FUNCTION_60
0x4b16	              0xc9	                                   leave	      3901	gui.c	FUNCTION_60
0x4b17	              0xc3	                                     ret	      3901	gui.c	FUNCTION_60
gui_init_which_components	ELSE,2:IF,25:CALL,18:functions,1:WHILE,0:SWITCH,1:DO,0:FOR,3	293
0x3f07	              0x55	                                push rbp	      3438	gui.c	FUNCTION_53
0x3f08	          0x4889e5	                            mov rbp, rsp	      3438	gui.c	FUNCTION_53
0x3f0b	              0x53	                                push rbx	      3438	gui.c	FUNCTION_53
0x3f0c	        0x4883ec68	                           sub rsp, 0x68	      3438	gui.c	FUNCTION_53
0x3f10	        0x48897d98	             mov qword [rbp - 0x68], rdi	      3438	gui.c	FUNCTION_53
0x3f14	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      3444	gui.c	FUNCTION_53
0x3f1b	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      3455	gui.c	FUNCTION_53
0x3f22	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      3469	gui.c	FUNCTION_53	IF_1
0x3f27	            0x747a	                            je 0x4003fe3	      3469	gui.c	FUNCTION_53	IF_1
0x3f29	    0x8b0500000000	            mov eax, dword [0x04003f6f] 	      3469	gui.c	FUNCTION_53	IF_1
0x3f2f	            0x85c0	                           test eax, eax	      3469	gui.c	FUNCTION_53	IF_1
0x3f31	            0x7470	                            je 0x4003fe3	      3469	gui.c	FUNCTION_53	IF_1
0x3f33	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x3f37	      0xbe67000000	                           mov esi, 0x67	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x3f3c	          0x4889c7	                            mov rdi, rax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x3f3f	      0xe800000000	                          call 0x4003f84	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x3f44	          0x4885c0	                           test rax, rax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x3f47	           0xf95c0	                                setne al	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x3f4a	           0xfb6c0	                           movzx eax, al	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x3f4d	          0x8945bc	             mov dword [rbp - 0x44], eax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x3f50	    0x488b05000000	            mov rax, qword [0x04003f97] 	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x3f57	      0xbe67000000	                           mov esi, 0x67	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x3f5c	          0x4889c7	                            mov rdi, rax	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x3f5f	      0xe800000000	                          call 0x4003fa4	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x3f64	          0x4885c0	                           test rax, rax	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x3f67	           0xf95c0	                                setne al	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x3f6a	           0xfb6c0	                           movzx eax, al	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x3f6d	          0x8945c0	             mov dword [rbp - 0x40], eax	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x3f70	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x3f73	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x3f76	            0x742b	                            je 0x4003fe3	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x3f78	    0x488b05000000	            mov rax, qword [0x04003fbf] 	      3478	gui.c	FUNCTION_53	IF_1	IF_2
0x3f7f	        0x488945d8	             mov qword [rbp - 0x28], rax	      3478	gui.c	FUNCTION_53	IF_1	IF_2
0x3f83	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3479	gui.c	FUNCTION_53	IF_1	IF_2
0x3f87	    0x488905000000	            mov qword [0x04003fce], rax 	      3479	gui.c	FUNCTION_53	IF_1	IF_2
0x3f8e	      0xbf3f000000	                           mov edi, 0x3f	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x3f93	      0xe800000000	                          call 0x4003fd8	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x3f98	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x3f9c	    0x488905000000	            mov qword [0x04003fe3], rax 	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x3fa3	    0xc60500000000	                mov byte [0x04003fea], 0	      3484	gui.c	FUNCTION_53
0x3faa	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      3487	gui.c	FUNCTION_53	FOR_1
0x3fb1	            0xeb18	                           jmp 0x400400b	      3487	gui.c	FUNCTION_53	FOR_1
0x3fb3	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3488	gui.c	FUNCTION_53	FOR_1
0x3fb6	            0x4898	                                    cdqe	      3488	gui.c	FUNCTION_53	FOR_1
0x3fb8	        0x4883c030	                           add rax, 0x30	      3488	gui.c	FUNCTION_53	FOR_1
0x3fbc	    0xc70485000000	                    mov dword [rax*4], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x3fc7	        0x8345b001	               add dword [rbp - 0x50], 1	      3487	gui.c	FUNCTION_53	FOR_1
0x3fcb	        0x837db002	               cmp dword [rbp - 0x50], 2	      3487	gui.c	FUNCTION_53	FOR_1
0x3fcf	            0x7ee2	                           jle 0x4003ff3	      3487	gui.c	FUNCTION_53	FOR_1
0x3fd1	    0x488b05000000	            mov rax, qword [0x04004018] 	      3489	gui.c	FUNCTION_53	FOR_2
0x3fd8	        0x488945c8	             mov qword [rbp - 0x38], rax	      3489	gui.c	FUNCTION_53	FOR_2
0x3fdc	      0xe993000000	                           jmp 0x40040b4	      3489	gui.c	FUNCTION_53	FOR_2
0x3fe1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3fe5	           0xfb600	                   movzx eax, byte [rax]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3fe8	           0xfb6c0	                           movzx eax, al	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3feb	          0x83e84c	                           sub eax, 0x4c	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3fee	          0x83f828	                           cmp eax, 0x28	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3ff1	            0x7775	                            ja 0x40040a8	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3ff3	            0x89c0	                            mov eax, eax	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3ff5	    0x488b04c50000	                  mov rax, qword [rax*8]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3ffd	            0xffe0	                                 jmp rax	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x3fff	    0xc70500000000	               mov dword [0x04004049], 1	      3493	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4009	            0xeb64	                           jmp 0x40040af	      3494	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400b	    0xc70500000000	               mov dword [0x04004055], 1	      3496	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4015	            0xeb58	                           jmp 0x40040af	      3497	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4017	      0xe800000000	                          call 0x400405c	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x401c	            0x85c0	                           test eax, eax	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x401e	            0x744b	                            je 0x40040ab	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x4020	    0xc70500000000	               mov dword [0x0400406a], 1	      3500	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3
0x402a	            0xeb3f	                           jmp 0x40040ab	      3501	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x402c	      0xe800000000	                          call 0x4004071	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4031	            0x85c0	                           test eax, eax	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4033	            0x7439	                            je 0x40040ae	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x4035	    0xc70500000000	               mov dword [0x0400407f], 1	      3504	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4
0x403f	            0xeb2d	                           jmp 0x40040ae	      3505	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4041	    0xc70500000000	               mov dword [0x0400408b], 1	      3507	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x404b	            0xeb22	                           jmp 0x40040af	      3508	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x404d	    0xc60500000000	                mov byte [0x04004094], 1	      3511	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4054	            0xeb19	                           jmp 0x40040af	      3512	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4056	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      3519	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x405d	            0xeb10	                           jmp 0x40040af	      3520	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x405f	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      3529	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4066	            0xeb07	                           jmp 0x40040af	      3531	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4068	              0x90	                                     nop	      3534	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4069	            0xeb04	                           jmp 0x40040af	      3534	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x406b	              0x90	                                     nop	      3501	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x406c	            0xeb01	                           jmp 0x40040af	      3501	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x406e	              0x90	                                     nop	      3505	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x406f	      0x488345c801	               add qword [rbp - 0x38], 1	      3489	gui.c	FUNCTION_53	FOR_2
0x4074	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3489	gui.c	FUNCTION_53	FOR_2
0x4078	           0xfb600	                   movzx eax, byte [rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x407b	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x407d	     0xf855effffff	                           jne 0x4004021	      3489	gui.c	FUNCTION_53	FOR_2
0x4083	    0x8b0500000000	            mov eax, dword [0x040040c9] 	      3537	gui.c	FUNCTION_53	IF_5
0x4089	            0x85c0	                           test eax, eax	      3537	gui.c	FUNCTION_53	IF_5
0x408b	     0xf84fb020000	                            je 0x40043cc	      3537	gui.c	FUNCTION_53	IF_5
0x4091	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      3539	gui.c	FUNCTION_53	IF_5
0x4098	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      3540	gui.c	FUNCTION_53	IF_5
0x409f	      0xe825030000	                call sym.gui_has_tabline	      3545	gui.c	FUNCTION_53	IF_5	CALL_6
0x40a4	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3545	gui.c	FUNCTION_53	IF_5	CALL_6
0x40a7	      0xe800000000	                          call 0x40040ec	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40ac	            0x85c0	                           test eax, eax	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40ae	           0xf94c2	                                 sete dl	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40b1	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40b5	           0xf94c0	                                 sete al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40b8	            0x31d0	                            xor eax, edx	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40ba	            0x84c0	                             test al, al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40bc	            0x743f	                            je 0x400413d	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x40be	    0x488b05000000	            mov rax, qword [0x04004105] 	      3550	gui.c	FUNCTION_53	IF_5	IF_6
0x40c5	          0x8945b0	             mov dword [rbp - 0x50], eax	      3550	gui.c	FUNCTION_53	IF_5	IF_6
0x40c8	      0xe800000000	                          call 0x400410d	      3551	gui.c	FUNCTION_53	IF_5	IF_6	CALL_8
0x40cd	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x40d0	            0x4898	                                    cdqe	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x40d2	    0x488905000000	            mov qword [0x04004119], rax 	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x40d9	        0x834db401	                or dword [rbp - 0x4c], 1	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x40dd	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3554	gui.c	FUNCTION_53	IF_5	IF_6	IF_7
0x40e1	            0x7407	                            je 0x400412a	      3554	gui.c	FUNCTION_53	IF_5	IF_6	IF_7
0x40e3	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      3555	gui.c	FUNCTION_53	IF_5	IF_6	IF_7
0x40ea	      0xe800000000	                          call 0x400412f	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x40ef	            0x85c0	                           test eax, eax	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x40f1	            0x750a	                           jne 0x400413d	      3556	gui.c	FUNCTION_53	IF_5	IF_6	IF_8	CALL_9
0x40f3	    0xc70500000000	               mov dword [0x0400413d], 1	      3557	gui.c	FUNCTION_53	IF_5	IF_6	IF_8
0x40fd	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4104	      0xe943010000	                           jmp 0x400428c	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4109	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x410c	            0x4898	                                    cdqe	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x410e	        0x4883c030	                           add rax, 0x30	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4112	    0x8b1485000000	                  mov edx, dword [rax*4]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4119	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x411c	            0x4898	                                    cdqe	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x411e	    0x8b0485000000	                  mov eax, dword [rax*4]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4125	            0x39c2	                            cmp edx, eax	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4127	            0x752d	                           jne 0x4004196	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4129	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x412c	            0x4898	                                    cdqe	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x412e	        0x4883c030	                           add rax, 0x30	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4132	    0x8b1485000000	                  mov edx, dword [rax*4]	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4139	    0x488b05000000	            mov rax, qword [0x04004180] 	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4140	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4143	          0x4863c9	                         movsxd rcx, ecx	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4146	        0x4883c110	                           add rcx, 0x10	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x414a	        0x8b448808	       mov eax, dword [rax + rcx*4 + 8] 	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x414e	            0x39c2	                            cmp edx, eax	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4150	     0xf84b0000000	                            je 0x4004246	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4156	        0x837db002	               cmp dword [rbp - 0x50], 2	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x415a	            0x751e	                           jne 0x40041ba	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x415c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x415f	            0x4898	                                    cdqe	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x4161	        0x4883c030	                           add rax, 0x30	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x4165	    0x8b0485000000	                  mov eax, dword [rax*4]	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x416c	            0x89c6	                            mov esi, eax	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x416e	      0xbf00000000	                              mov edi, 0	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x4173	      0xe800000000	                          call 0x40041b8	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x4178	            0xeb41	                           jmp 0x40041fb	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x417a	    0x488b05000000	            mov rax, qword [0x040041c1] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4181	        0x488945d0	             mov qword [rbp - 0x30], rax	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4185	            0xeb2d	                           jmp 0x40041f4	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4187	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x418a	            0x4898	                                    cdqe	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x418c	        0x4883c030	                           add rax, 0x30	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x4190	    0x8b1485000000	                  mov edx, dword [rax*4]	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x4197	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x419a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x419e	            0x89ce	                            mov esi, ecx	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x41a0	          0x4889c7	                            mov rdi, rax	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x41a3	      0xe893140000	               call sym.gui_do_scrollbar	      3578	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1	FUNCTION_1	CALL_1
0x41a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x41ac	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x41b0	        0x488945d0	             mov qword [rbp - 0x30], rax	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x41b4	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x41b9	            0x75cc	                           jne 0x40041c7	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x41bb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41be	            0x4898	                                    cdqe	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41c0	        0x4883c030	                           add rax, 0x30	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41c4	    0x8b1485000000	                  mov edx, dword [rax*4]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41cb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41ce	            0x4898	                                    cdqe	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41d0	    0x8b0485000000	                  mov eax, dword [rax*4]	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41d7	            0x39c2	                            cmp edx, eax	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41d9	            0x742b	                            je 0x4004246	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x41db	        0x837db002	               cmp dword [rbp - 0x50], 2	      3583	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x41df	            0x7506	                           jne 0x4004227	      3583	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x41e1	        0x834db401	                or dword [rbp - 0x4c], 1	      3584	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x41e5	            0xeb04	                           jmp 0x400422b	      3584	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x41e7	        0x834db402	                or dword [rbp - 0x4c], 2	      3586	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	ELSE_2
0x41eb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x41ee	            0x4898	                                    cdqe	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x41f0	        0x4883c030	                           add rax, 0x30	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x41f4	    0x8b0485000000	                  mov eax, dword [rax*4]	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x41fb	            0x85c0	                           test eax, eax	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x41fd	            0x7407	                            je 0x4004246	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x41ff	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4206	    0x488b05000000	            mov rax, qword [0x0400424d] 	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x420d	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4210	          0x4863d2	                         movsxd rdx, edx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4213	        0x4883c230	                           add rdx, 0x30	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4217	    0x8b1495000000	                  mov edx, dword [rdx*4]	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x421e	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4221	          0x4863c9	                         movsxd rcx, ecx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4224	        0x4883c110	                           add rcx, 0x10	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4228	        0x89548808	        mov dword [rax + rcx*4 + 8], edx	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x422c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x422f	            0x4898	                                    cdqe	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4231	        0x4883c030	                           add rax, 0x30	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4235	    0x8b1485000000	                  mov edx, dword [rax*4]	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x423c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x423f	            0x4898	                                    cdqe	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4241	    0x891485000000	                  mov dword [rax*4], edx	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4248	        0x8345b001	               add dword [rbp - 0x50], 1	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x424c	        0x837db002	               cmp dword [rbp - 0x50], 2	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4250	     0xf8eb3feffff	                           jle 0x4004149	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4256	     0xfb605000000	           movzx eax, byte [0x0400429d] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x425d	           0xfbed0	                           movsx edx, al	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x4260	    0x8b0500000000	            mov eax, dword [0x040042a6] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x4266	            0x39c2	                            cmp edx, eax	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x4268	            0x744d	                            je 0x40042f7	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x426a	    0x488b05000000	            mov rax, qword [0x040042b1] 	      3600	gui.c	FUNCTION_53	IF_5	IF_14
0x4271	          0x8945b0	             mov dword [rbp - 0x50], eax	      3600	gui.c	FUNCTION_53	IF_5	IF_14
0x4274	     0xfb605000000	           movzx eax, byte [0x040042bb] 	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x427b	           0xfbec0	                           movsx eax, al	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x427e	            0x89c7	                            mov edi, eax	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x4280	      0xe800000000	                          call 0x40042c5	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x4285	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x4288	            0x4898	                                    cdqe	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x428a	    0x488905000000	            mov qword [0x040042d1], rax 	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x4291	     0xfb605000000	           movzx eax, byte [0x040042d8] 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x4298	           0xfbec0	                           movsx eax, al	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x429b	    0x890500000000	            mov dword [0x040042e1], eax 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x42a1	        0x834db401	                or dword [rbp - 0x4c], 1	      3604	gui.c	FUNCTION_53	IF_5	IF_14
0x42a5	     0xfb605000000	           movzx eax, byte [0x040042ec] 	      3605	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x42ac	            0x84c0	                             test al, al	      3605	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x42ae	            0x7407	                            je 0x40042f7	      3605	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x42b0	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x42b7	    0x8b0500000000	            mov eax, dword [0x040042fd] 	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x42bd	          0x3945a8	            cmp dword [rbp - 0x58], eax 	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x42c0	            0x7424	                            je 0x4004326	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x42c2	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x42c5	            0x89c7	                            mov edi, eax	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x42c7	      0xe800000000	                          call 0x400430c	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x42cc	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3614	gui.c	FUNCTION_53	IF_5	IF_16
0x42cf	    0x890500000000	            mov dword [0x04004315], eax 	      3614	gui.c	FUNCTION_53	IF_5	IF_16
0x42d5	        0x834db401	                or dword [rbp - 0x4c], 1	      3615	gui.c	FUNCTION_53	IF_5	IF_16
0x42d9	        0x837da800	               cmp dword [rbp - 0x58], 0	      3616	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x42dd	            0x7407	                            je 0x4004326	      3616	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x42df	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x42e6	    0x8b0500000000	            mov eax, dword [0x0400432c] 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x42ec	          0x3945ac	            cmp dword [rbp - 0x54], eax 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x42ef	            0x7413	                            je 0x4004344	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x42f1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x42f4	            0x89c7	                            mov edi, eax	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x42f6	      0xe800000000	                          call 0x400433b	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x42fb	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3634	gui.c	FUNCTION_53	IF_5	IF_20
0x42fe	    0x890500000000	            mov dword [0x04004344], eax 	      3634	gui.c	FUNCTION_53	IF_5	IF_20
0x4304	        0x837db400	               cmp dword [rbp - 0x4c], 0	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x4308	            0x7467	                            je 0x40043b1	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x430a	    0x488b05000000	            mov rax, qword [0x04004351] 	      3640	gui.c	FUNCTION_53	IF_5	IF_21
0x4311	        0x488945e0	             mov qword [rbp - 0x20], rax	      3640	gui.c	FUNCTION_53	IF_5	IF_21
0x4315	    0x488b05000000	            mov rax, qword [0x0400435c] 	      3641	gui.c	FUNCTION_53	IF_5	IF_21
0x431c	        0x488945e8	             mov qword [rbp - 0x18], rax	      3641	gui.c	FUNCTION_53	IF_5	IF_21
0x4320	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4323	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4326	            0x89c6	                            mov esi, eax	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4328	      0xbf00000000	                              mov edi, 0	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x432d	      0xe800000000	                          call 0x4004372	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4332	    0x8b0500000000	            mov eax, dword [0x04004378] 	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4338	            0x85c0	                           test eax, eax	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x433a	            0x750b	                           jne 0x4004387	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x433c	        0x837db403	               cmp dword [rbp - 0x4c], 3	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4340	            0x7405	                            je 0x4004387	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4342	      0xe800000000	                          call 0x4004387	      3660	gui.c	FUNCTION_53	IF_5	IF_21	CALL_16
0x4347	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x434a	          0x83e001	                              and eax, 1	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x434d	            0x85c0	                           test eax, eax	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x434f	            0x750b	                           jne 0x400439c	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x4351	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3662	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x4355	    0x488905000000	            mov qword [0x0400439c], rax 	      3662	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x435c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x435f	          0x83e002	                              and eax, 2	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4362	            0x85c0	                           test eax, eax	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4364	            0x750b	                           jne 0x40043b1	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4366	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x436a	    0x488905000000	            mov qword [0x040043b1], rax 	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4371	    0x488b05000000	            mov rax, qword [0x040043b8] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4378	    0x8b989c000000	            mov ebx, dword [rax + 0x9c] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x437e	      0xe800000000	                          call 0x40043c3	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4383	            0x39c3	                            cmp ebx, eax	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4385	            0x7405	                            je 0x40043cc	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4387	      0xe800000000	                          call 0x40043cc	      3670	gui.c	FUNCTION_53	IF_5	CALL_18
0x438c	              0x90	                                     nop	      3672	gui.c	FUNCTION_53
0x438d	        0x4883c468	                           add rsp, 0x68	      3672	gui.c	FUNCTION_53
0x4391	              0x5b	                                 pop rbx	      3672	gui.c	FUNCTION_53
0x4392	              0x5d	                                 pop rbp	      3672	gui.c	FUNCTION_53
0x4393	              0xc3	                                     ret	      3672	gui.c	FUNCTION_53
gui_drag_scrollbar	ELSE,9:IF,28:CALL,22:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	297
0x4c43	              0x55	                                push rbp	      3961	gui.c	FUNCTION_63
0x4c44	          0x4889e5	                            mov rbp, rsp	      3961	gui.c	FUNCTION_63
0x4c47	        0x4883ec40	                           sub rsp, 0x40	      3961	gui.c	FUNCTION_63
0x4c4b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3961	gui.c	FUNCTION_63
0x4c4f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3961	gui.c	FUNCTION_63
0x4c53	          0x8955cc	             mov dword [rbp - 0x34], edx	      3961	gui.c	FUNCTION_63
0x4c56	    0x488b05000000	            mov rax, qword [0x04004c9d] 	      3965	gui.c	FUNCTION_63
0x4c5d	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      3965	gui.c	FUNCTION_63
0x4c63	          0x8945e8	             mov dword [rbp - 0x18], eax	      3965	gui.c	FUNCTION_63
0x4c66	    0x488b05000000	            mov rax, qword [0x04004cad] 	      3966	gui.c	FUNCTION_63
0x4c6d	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3966	gui.c	FUNCTION_63
0x4c71	        0x488945f8	                mov qword [rbp - 8], rax	      3966	gui.c	FUNCTION_63
0x4c75	    0x488b05000000	            mov rax, qword [0x04004cbc] 	      3968	gui.c	FUNCTION_63
0x4c7c	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3968	gui.c	FUNCTION_63
0x4c82	          0x8945ec	             mov dword [rbp - 0x14], eax	      3968	gui.c	FUNCTION_63
0x4c85	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3975	gui.c	FUNCTION_63	IF_1
0x4c8a	     0xf8451040000	                            je 0x4005121	      3975	gui.c	FUNCTION_63	IF_1
0x4c90	    0x8b0500000000	            mov eax, dword [0x04004cd6] 	      3979	gui.c	FUNCTION_63	IF_2
0x4c96	            0x85c0	                           test eax, eax	      3979	gui.c	FUNCTION_63	IF_2
0x4c98	     0xf8546040000	                           jne 0x4005124	      3979	gui.c	FUNCTION_63	IF_2
0x4c9e	    0x8b0500000000	            mov eax, dword [0x04004ce4] 	      3983	gui.c	FUNCTION_63	IF_3
0x4ca4	            0x85c0	                           test eax, eax	      3983	gui.c	FUNCTION_63	IF_3
0x4ca6	            0x7418	                            je 0x4004d00	      3983	gui.c	FUNCTION_63	IF_3
0x4ca8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3983	gui.c	FUNCTION_63	IF_3
0x4cac	        0x488b5008	                mov rdx, qword [rax + 8]	      3983	gui.c	FUNCTION_63	IF_3
0x4cb0	    0x488b05000000	            mov rax, qword [0x04004cf7] 	      3983	gui.c	FUNCTION_63	IF_3
0x4cb7	          0x4839c2	                            cmp rdx, rax	      3983	gui.c	FUNCTION_63	IF_3
0x4cba	     0xf8527040000	                           jne 0x4005127	      3983	gui.c	FUNCTION_63	IF_3
0x4cc0	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      3987	gui.c	FUNCTION_63	IF_4
0x4cc4	            0x7454	                            je 0x4004d5a	      3987	gui.c	FUNCTION_63	IF_4
0x4cc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4cca	        0x488b4008	                mov rax, qword [rax + 8]	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4cce	          0x4885c0	                           test rax, rax	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4cd1	            0x750c	                           jne 0x4004d1f	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4cd3	    0xc70500000000	               mov dword [0x04004d1d], 2	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4cdd	            0xeb2a	                           jmp 0x4004d49	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4cdf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4ce3	        0x488b4008	                mov rax, qword [rax + 8]	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4ce7	    0x480590180000	                         add rax, 0x1890	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4ced	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4cf1	            0x750c	                           jne 0x4004d3f	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4cf3	    0xc70500000000	               mov dword [0x04004d3d], 0	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4cfd	            0xeb0a	                           jmp 0x4004d49	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4cff	    0xc70500000000	               mov dword [0x04004d49], 1	      3994	gui.c	FUNCTION_63	IF_4	ELSE_2
0x4d09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3995	gui.c	FUNCTION_63	IF_4
0x4d0d	        0x488b4008	                mov rax, qword [rax + 8]	      3995	gui.c	FUNCTION_63	IF_4
0x4d11	    0x488905000000	            mov qword [0x04004d58], rax 	      3995	gui.c	FUNCTION_63	IF_4
0x4d18	            0xeb15	                           jmp 0x4004d6f	      3995	gui.c	FUNCTION_63	IF_4
0x4d1a	    0xc70500000000	     mov dword [0x04004d64], 0xffffffff 	      3999	gui.c	FUNCTION_63	ELSE_3
0x4d24	    0x48c705000000	               mov qword [0x04004d6f], 0	      4003	gui.c	FUNCTION_63	ELSE_3
0x4d2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4008	gui.c	FUNCTION_63	IF_7
0x4d33	        0x488b4008	                mov rax, qword [rax + 8]	      4008	gui.c	FUNCTION_63	IF_7
0x4d37	          0x4885c0	                           test rax, rax	      4008	gui.c	FUNCTION_63	IF_7
0x4d3a	            0x7412	                            je 0x4004d8e	      4008	gui.c	FUNCTION_63	IF_7
0x4d3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4009	gui.c	FUNCTION_63	IF_7
0x4d40	        0x488b4008	                mov rax, qword [rax + 8]	      4009	gui.c	FUNCTION_63	IF_7
0x4d44	    0x480590180000	                         add rax, 0x1890	      4009	gui.c	FUNCTION_63	IF_7
0x4d4a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4009	gui.c	FUNCTION_63	IF_7
0x4d4e	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4014	gui.c	FUNCTION_63	IF_8
0x4d53	            0x7908	                           jns 0x4004d9d	      4014	gui.c	FUNCTION_63	IF_8
0x4d55	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4015	gui.c	FUNCTION_63	IF_8
0x4d5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4020	gui.c	FUNCTION_63	IF_10
0x4d61	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4020	gui.c	FUNCTION_63	IF_10
0x4d65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4020	gui.c	FUNCTION_63	IF_10
0x4d69	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4020	gui.c	FUNCTION_63	IF_10
0x4d6d	          0x4829c2	                            sub rdx, rax	      4020	gui.c	FUNCTION_63	IF_10
0x4d70	          0x4889d0	                            mov rax, rdx	      4020	gui.c	FUNCTION_63	IF_10
0x4d73	        0x4883c001	                              add rax, 1	      4020	gui.c	FUNCTION_63	IF_10
0x4d77	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      4020	gui.c	FUNCTION_63	IF_10
0x4d7b	            0x7d1e	                           jge 0x4004ddb	      4020	gui.c	FUNCTION_63	IF_10
0x4d7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4021	gui.c	FUNCTION_63	IF_10
0x4d81	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4021	gui.c	FUNCTION_63	IF_10
0x4d85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4021	gui.c	FUNCTION_63	IF_10
0x4d89	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4021	gui.c	FUNCTION_63	IF_10
0x4d8d	          0x4829c2	                            sub rdx, rax	      4021	gui.c	FUNCTION_63	IF_10
0x4d90	          0x4889d0	                            mov rax, rdx	      4021	gui.c	FUNCTION_63	IF_10
0x4d93	        0x4883c001	                              add rax, 1	      4021	gui.c	FUNCTION_63	IF_10
0x4d97	        0x488945d0	             mov qword [rbp - 0x30], rax	      4021	gui.c	FUNCTION_63	IF_10
0x4d9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4024	gui.c	FUNCTION_63
0x4d9f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4024	gui.c	FUNCTION_63
0x4da3	        0x48895018	             mov qword [rax + 0x18], rdx	      4024	gui.c	FUNCTION_63
0x4da7	    0x8b0500000000	            mov eax, dword [0x04004ded] 	      4030	gui.c	FUNCTION_63	IF_11
0x4dad	            0x85c0	                           test eax, eax	      4030	gui.c	FUNCTION_63	IF_11
0x4daf	     0xf8535030000	                           jne 0x400512a	      4030	gui.c	FUNCTION_63	IF_11
0x4db5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4db9	        0x488b4008	                mov rax, qword [rax + 8]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4dbd	          0x4885c0	                           test rax, rax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4dc0	            0x7414	                            je 0x4004e16	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4dc2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4dc6	        0x488b5008	                mov rdx, qword [rax + 8]	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4dca	    0x488b05000000	            mov rax, qword [0x04004e11] 	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4dd1	          0x4839c2	                            cmp rdx, rax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4dd4	            0x750d	                           jne 0x4004e23	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4dd6	      0xe800000000	                          call 0x4004e1b	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4ddb	            0x85c0	                           test eax, eax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4ddd	     0xf850a030000	                           jne 0x400512d	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4de3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4041	gui.c	FUNCTION_63	IF_13
0x4de7	        0x488b4008	                mov rax, qword [rax + 8]	      4041	gui.c	FUNCTION_63	IF_13
0x4deb	          0x4885c0	                           test rax, rax	      4041	gui.c	FUNCTION_63	IF_13
0x4dee	            0x7542	                           jne 0x4004e72	      4041	gui.c	FUNCTION_63	IF_13
0x4df0	    0x488b05000000	            mov rax, qword [0x04004e37] 	      4041	gui.c	FUNCTION_63	IF_13
0x4df7	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4041	gui.c	FUNCTION_63	IF_13
0x4dfd	            0x85c0	                           test eax, eax	      4041	gui.c	FUNCTION_63	IF_13
0x4dff	            0x7431	                            je 0x4004e72	      4041	gui.c	FUNCTION_63	IF_13
0x4e01	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4043	gui.c	FUNCTION_63	IF_13
0x4e05	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4043	gui.c	FUNCTION_63	IF_13
0x4e09	        0x488d5001	                      lea rdx, [rax + 1]	      4043	gui.c	FUNCTION_63	IF_13
0x4e0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4043	gui.c	FUNCTION_63	IF_13
0x4e11	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4043	gui.c	FUNCTION_63	IF_13
0x4e15	          0x4829c2	                            sub rdx, rax	      4043	gui.c	FUNCTION_63	IF_13
0x4e18	          0x4889d0	                            mov rax, rdx	      4043	gui.c	FUNCTION_63	IF_13
0x4e1b	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      4043	gui.c	FUNCTION_63	IF_13
0x4e1f	        0x488945d0	             mov qword [rbp - 0x30], rax	      4043	gui.c	FUNCTION_63	IF_13
0x4e23	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4044	gui.c	FUNCTION_63	IF_13	IF_14
0x4e28	            0x7908	                           jns 0x4004e72	      4044	gui.c	FUNCTION_63	IF_13	IF_14
0x4e2a	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4045	gui.c	FUNCTION_63	IF_13	IF_14
0x4e32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4049	gui.c	FUNCTION_63	IF_15
0x4e36	        0x488b4008	                mov rax, qword [rax + 8]	      4049	gui.c	FUNCTION_63	IF_15
0x4e3a	          0x4885c0	                           test rax, rax	      4049	gui.c	FUNCTION_63	IF_15
0x4e3d	     0xf8441010000	                            je 0x4004fc4	      4049	gui.c	FUNCTION_63	IF_15
0x4e43	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4051	gui.c	FUNCTION_63	IF_15
0x4e4a	    0x488b05000000	            mov rax, qword [0x04004e91] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e51	        0x488945f0	             mov qword [rbp - 0x10], rax	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e55	            0xeb10	                           jmp 0x4004ea7	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e57	        0x8345e401	               add dword [rbp - 0x1c], 1	      4053	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e5f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e63	        0x488945f0	             mov qword [rbp - 0x10], rax	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e6b	        0x488b4008	                mov rax, qword [rax + 8]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e6f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e73	            0x7407	                            je 0x4004ebc	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e75	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e7a	            0x75db	                           jne 0x4004e97	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4e7c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4054	gui.c	FUNCTION_63	IF_15	IF_16
0x4e81	     0xf8469020000	                            je 0x4005130	      4054	gui.c	FUNCTION_63	IF_15	IF_16
0x4e87	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4058	gui.c	FUNCTION_63	IF_15
0x4e8a	    0x890500000000	            mov dword [0x04004ed0], eax 	      4058	gui.c	FUNCTION_63	IF_15
0x4e90	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4059	gui.c	FUNCTION_63	IF_15
0x4e94	    0x488905000000	            mov qword [0x04004edb], rax 	      4059	gui.c	FUNCTION_63	IF_15
0x4e9b	    0x8b0500000000	            mov eax, dword [0x04004ee1] 	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4ea1	          0x83e001	                              and eax, 1	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4ea4	            0x85c0	                           test eax, eax	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4ea6	            0x740c	                            je 0x4004ef4	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4ea8	      0xe800000000	                          call 0x4004eed	      4062	gui.c	FUNCTION_63	IF_15	IF_17	CALL_2
0x4ead	      0xe800000000	                          call 0x4004ef2	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4eb2	            0xeb3a	                           jmp 0x4004f2e	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4eb4	    0x8b0500000000	            mov eax, dword [0x04004efa] 	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4eba	          0x83e010	                           and eax, 0x10	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4ebd	            0x85c0	                           test eax, eax	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4ebf	            0x740c	                            je 0x4004f0d	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4ec1	      0xe800000000	                          call 0x4004f06	      4067	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_4
0x4ec6	      0xe800000000	                          call 0x4004f0b	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x4ecb	            0xeb21	                           jmp 0x4004f2e	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x4ecd	    0x8b0500000000	            mov eax, dword [0x04004f13] 	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4ed3	          0x83e008	                              and eax, 8	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4ed6	            0x85c0	                           test eax, eax	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4ed8	            0x7414	                            je 0x4004f2e	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4eda	    0x8b0500000000	            mov eax, dword [0x04004f20] 	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4ee0	            0x85c0	                           test eax, eax	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4ee2	            0x750a	                           jne 0x4004f2e	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4ee4	      0xe800000000	                          call 0x4004f29	      4074	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_6
0x4ee9	      0xe800000000	                          call 0x4004f2e	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x4eee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4080	gui.c	FUNCTION_63	IF_15
0x4ef2	        0x488b4008	                mov rax, qword [rax + 8]	      4080	gui.c	FUNCTION_63	IF_15
0x4ef6	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4080	gui.c	FUNCTION_63	IF_15
0x4efa	        0x488d50ff	                      lea rdx, [rax - 1]	      4080	gui.c	FUNCTION_63	IF_15
0x4efe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4080	gui.c	FUNCTION_63	IF_15
0x4f02	        0x48895018	             mov qword [rax + 0x18], rdx	      4080	gui.c	FUNCTION_63	IF_15
0x4f06	    0x8b0500000000	            mov eax, dword [0x04004f4c] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4f0c	            0x85c0	                           test eax, eax	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4f0e	     0xf8408010000	                            je 0x400505c	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4f14	    0x8b0500000000	            mov eax, dword [0x04004f5a] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4f1a	            0x85c0	                           test eax, eax	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4f1c	     0xf84fa000000	                            je 0x400505c	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4f22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f26	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f2e	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f36	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4087	gui.c	FUNCTION_63	IF_15	IF_21
0x4f3e	        0x4c8b4008	                 mov r8, qword [rax + 8]	      4087	gui.c	FUNCTION_63	IF_15	IF_21
0x4f42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x4f46	        0x488b4008	                mov rax, qword [rax + 8]	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x4f4a	    0x4805e0180000	                         add rax, 0x18e0	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x4f50	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4089	gui.c	FUNCTION_63	IF_15	IF_21
0x4f54	           0xf95c0	                                setne al	      4089	gui.c	FUNCTION_63	IF_15	IF_21
0x4f57	           0xfb6c0	                           movzx eax, al	      4089	gui.c	FUNCTION_63	IF_15	IF_21
0x4f5a	          0x4863d0	                         movsxd rdx, eax	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f5d	          0x4889d0	                            mov rax, rdx	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f60	        0x48c1e002	                              shl rax, 2	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f64	          0x4801d0	                            add rax, rdx	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f67	        0x48c1e004	                              shl rax, 4	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f6b	    0x480590180000	                         add rax, 0x1890	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f71	          0x4c01c0	                             add rax, r8	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f74	          0x4889fa	                            mov rdx, rdi	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f77	          0x4889c7	                            mov rdi, rax	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f7a	      0xe800000000	                          call 0x4004fbf	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f7f	      0xe998000000	                           jmp 0x400505c	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4f84	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4103	gui.c	FUNCTION_63	ELSE_7
0x4f88	    0x488905000000	            mov qword [0x04004fcf], rax 	      4103	gui.c	FUNCTION_63	ELSE_7
0x4f8f	    0x8b0500000000	            mov eax, dword [0x04004fd5] 	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4f95	          0x83e001	                              and eax, 1	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4f98	            0x85c0	                           test eax, eax	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4f9a	            0x7416	                            je 0x4004ff2	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4f9c	    0x488b05000000	            mov rax, qword [0x04004fe3] 	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4fa3	      0xbe00000000	                              mov esi, 0	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4fa8	          0x4889c7	                            mov rdi, rax	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4fab	      0xe800000000	                          call 0x4004ff0	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4fb0	            0xeb44	                           jmp 0x4005036	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x4fb2	    0x8b0500000000	            mov eax, dword [0x04004ff8] 	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4fb8	          0x83e010	                           and eax, 0x10	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4fbb	            0x85c0	                           test eax, eax	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4fbd	            0x7407	                            je 0x4005006	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4fbf	      0xe800000000	                          call 0x4005004	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4fc4	            0xeb30	                           jmp 0x4005036	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4fc6	    0x8b0500000000	            mov eax, dword [0x0400500c] 	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4fcc	          0x83e008	                              and eax, 8	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4fcf	            0x85c0	                           test eax, eax	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4fd1	            0x7423	                            je 0x4005036	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4fd3	    0x8b0500000000	            mov eax, dword [0x04005019] 	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4fd9	            0x85c0	                           test eax, eax	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4fdb	            0x7519	                           jne 0x4005036	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4fdd	    0x488b05000000	            mov rax, qword [0x04005024] 	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4fe4	      0xbe00000000	                              mov esi, 0	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4fe9	          0x4889c7	                            mov rdi, rax	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4fec	      0xe800000000	                          call 0x4005031	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x4ff1	      0xe800000000	                          call 0x4005036	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
0x4ff6	    0x488b05000000	            mov rax, qword [0x0400503d] 	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4ffd	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x5003	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x5006	            0x7414	                            je 0x400505c	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x5008	    0x488b05000000	            mov rax, qword [0x0400504f] 	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x500f	          0x4889c7	                            mov rdi, rax	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x5012	      0xe800000000	                          call 0x4005057	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x5017	      0xe800000000	                          call 0x400505c	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x501c	    0x488b05000000	            mov rax, qword [0x04005063] 	      4134	gui.c	FUNCTION_63	IF_27
0x5023	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      4134	gui.c	FUNCTION_63	IF_27
0x5029	            0x85c0	                           test eax, eax	      4134	gui.c	FUNCTION_63	IF_27
0x502b	     0xf849f000000	                            je 0x4005110	      4134	gui.c	FUNCTION_63	IF_27
0x5031	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4135	gui.c	FUNCTION_63	IF_27
0x5035	        0x488b4008	                mov rax, qword [rax + 8]	      4135	gui.c	FUNCTION_63	IF_27
0x5039	          0x4885c0	                           test rax, rax	      4135	gui.c	FUNCTION_63	IF_27
0x503c	            0x7512	                           jne 0x4005090	      4135	gui.c	FUNCTION_63	IF_27
0x503e	    0x488b05000000	            mov rax, qword [0x04005085] 	      4135	gui.c	FUNCTION_63	IF_27
0x5045	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4135	gui.c	FUNCTION_63	IF_27
0x504b	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      4135	gui.c	FUNCTION_63	IF_27
0x504e	            0x7537	                           jne 0x40050c7	      4135	gui.c	FUNCTION_63	IF_27
0x5050	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4136	gui.c	FUNCTION_63	IF_27
0x5054	        0x488b5008	                mov rdx, qword [rax + 8]	      4136	gui.c	FUNCTION_63	IF_27
0x5058	    0x488b05000000	            mov rax, qword [0x0400509f] 	      4136	gui.c	FUNCTION_63	IF_27
0x505f	          0x4839c2	                            cmp rdx, rax	      4136	gui.c	FUNCTION_63	IF_27
0x5062	            0x756c	                           jne 0x4005110	      4136	gui.c	FUNCTION_63	IF_27
0x5064	    0x488b05000000	            mov rax, qword [0x040050ab] 	      4136	gui.c	FUNCTION_63	IF_27
0x506b	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4136	gui.c	FUNCTION_63	IF_27
0x506f	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4136	gui.c	FUNCTION_63	IF_27
0x5073	            0x7512	                           jne 0x40050c7	      4136	gui.c	FUNCTION_63	IF_27
0x5075	    0x488b05000000	            mov rax, qword [0x040050bc] 	      4138	gui.c	FUNCTION_63	IF_27
0x507c	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4138	gui.c	FUNCTION_63	IF_27
0x5082	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4138	gui.c	FUNCTION_63	IF_27
0x5085	            0x7449	                            je 0x4005110	      4138	gui.c	FUNCTION_63	IF_27
0x5087	      0xbf01000000	                              mov edi, 1	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x508c	      0xe800000000	                          call 0x40050d1	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x5091	    0x488b05000000	            mov rax, qword [0x040050d8] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x5098	        0x488945f0	             mov qword [rbp - 0x10], rax	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x509c	            0xeb26	                           jmp 0x4005104	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x509e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x50a2	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x50a8	            0x85c0	                           test eax, eax	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x50aa	            0x7e0c	                           jle 0x40050f8	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x50ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x50b0	          0x4889c7	                            mov rdi, rax	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x50b3	      0xe800000000	                          call 0x40050f8	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x50b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x50bc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x50c0	        0x488945f0	             mov qword [rbp - 0x10], rax	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x50c4	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x50c9	            0x75d3	                           jne 0x40050de	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x50cb	      0xe800000000	                          call 0x4005110	      4147	gui.c	FUNCTION_63	IF_27	CALL_18
0x50d0	      0xbe01000000	                              mov esi, 1	      4149	gui.c	FUNCTION_63	CALL_19
0x50d5	      0xbf00000000	                              mov edi, 0	      4149	gui.c	FUNCTION_63	CALL_19
0x50da	      0xe800000000	                          call 0x400511f	      4149	gui.c	FUNCTION_63	CALL_19
0x50df	            0xeb10	                           jmp 0x4005131	      4149	gui.c	FUNCTION_63	CALL_19
0x50e1	              0x90	                                     nop	      3976	gui.c	FUNCTION_63	IF_1
0x50e2	            0xeb0d	                           jmp 0x4005131	      3976	gui.c	FUNCTION_63	IF_1
0x50e4	              0x90	                                     nop	      3980	gui.c	FUNCTION_63	IF_2
0x50e5	            0xeb0a	                           jmp 0x4005131	      3980	gui.c	FUNCTION_63	IF_2
0x50e7	              0x90	                                     nop	      3984	gui.c	FUNCTION_63	IF_3
0x50e8	            0xeb07	                           jmp 0x4005131	      3984	gui.c	FUNCTION_63	IF_3
0x50ea	              0x90	                                     nop	      4031	gui.c	FUNCTION_63	IF_11
0x50eb	            0xeb04	                           jmp 0x4005131	      4031	gui.c	FUNCTION_63	IF_11
0x50ed	              0x90	                                     nop	      4037	gui.c	FUNCTION_63	IF_12
0x50ee	            0xeb01	                           jmp 0x4005131	      4037	gui.c	FUNCTION_63	IF_12
0x50f0	              0x90	                                     nop	      4055	gui.c	FUNCTION_63	IF_15	IF_16
0x50f1	              0xc9	                                   leave	      4155	gui.c	FUNCTION_63
0x50f2	              0xc3	                                     ret	      4155	gui.c	FUNCTION_63
gui_resize_shell	ELSE,1:IF,6:CALL,9:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	96
0x1853	              0x55	                                push rbp	      1470	gui.c	FUNCTION_20
0x1854	          0x4889e5	                            mov rbp, rsp	      1470	gui.c	FUNCTION_20
0x1857	        0x4883ec10	                           sub rsp, 0x10	      1470	gui.c	FUNCTION_20
0x185b	          0x897dfc	                mov dword [rbp - 4], edi	      1470	gui.c	FUNCTION_20
0x185e	          0x8975f8	                mov dword [rbp - 8], esi	      1470	gui.c	FUNCTION_20
0x1861	    0x8b0500000000	            mov eax, dword [0x040018a7] 	      1473	gui.c	FUNCTION_20	IF_1
0x1867	            0x85c0	                           test eax, eax	      1473	gui.c	FUNCTION_20	IF_1
0x1869	     0xf8478010000	                            je 0x4001a27	      1473	gui.c	FUNCTION_20	IF_1
0x186f	    0x8b0500000000	            mov eax, dword [0x040018b5] 	      1480	gui.c	FUNCTION_20	IF_2
0x1875	            0x85c0	                           test eax, eax	      1480	gui.c	FUNCTION_20	IF_2
0x1877	            0x750a	                           jne 0x40018c3	      1480	gui.c	FUNCTION_20	IF_2
0x1879	    0x8b0500000000	            mov eax, dword [0x040018bf] 	      1480	gui.c	FUNCTION_20	IF_2
0x187f	            0x85c0	                           test eax, eax	      1480	gui.c	FUNCTION_20	IF_2
0x1881	            0x7417	                            je 0x40018da	      1480	gui.c	FUNCTION_20	IF_2
0x1883	          0x8b45fc	                mov eax, dword [rbp - 4]	      1482	gui.c	FUNCTION_20	IF_2
0x1886	    0x890500000000	            mov dword [0x040018cc], eax 	      1482	gui.c	FUNCTION_20	IF_2
0x188c	          0x8b45f8	                mov eax, dword [rbp - 8]	      1483	gui.c	FUNCTION_20	IF_2
0x188f	    0x890500000000	            mov dword [0x040018d5], eax 	      1483	gui.c	FUNCTION_20	IF_2
0x1895	      0xe94e010000	                           jmp 0x4001a28	      1484	gui.c	FUNCTION_20	IF_2
0x189a	    0xc70500000000	               mov dword [0x040018e4], 0	      1488	gui.c	FUNCTION_20
0x18a4	    0xc70500000000	               mov dword [0x040018ee], 0	      1489	gui.c	FUNCTION_20
0x18ae	    0xc70500000000	               mov dword [0x040018f8], 1	      1490	gui.c	FUNCTION_20
0x18b8	      0xe800000000	                          call 0x40018fd	      1493	gui.c	FUNCTION_20	CALL_1
0x18bd	      0xe800000000	                          call 0x4001902	      1495	gui.c	FUNCTION_20	CALL_2
0x18c2	            0x89c2	                            mov edx, eax	      1495	gui.c	FUNCTION_20	CALL_2
0x18c4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1495	gui.c	FUNCTION_20	CALL_2
0x18c7	            0x29d0	                            sub eax, edx	      1495	gui.c	FUNCTION_20	CALL_2
0x18c9	    0x8b0d00000000	            mov ecx, dword [0x0400190f] 	      1495	gui.c	FUNCTION_20	CALL_2
0x18cf	              0x99	                                     cdq	      1495	gui.c	FUNCTION_20	CALL_2
0x18d0	            0xf7f9	                                idiv ecx	      1495	gui.c	FUNCTION_20	CALL_2
0x18d2	    0x890500000000	            mov dword [0x04001918], eax 	      1495	gui.c	FUNCTION_20	CALL_2
0x18d8	      0xe800000000	                          call 0x400191d	      1496	gui.c	FUNCTION_20	CALL_3
0x18dd	            0x89c2	                            mov edx, eax	      1496	gui.c	FUNCTION_20	CALL_3
0x18df	          0x8b45f8	                mov eax, dword [rbp - 8]	      1496	gui.c	FUNCTION_20	CALL_3
0x18e2	            0x29d0	                            sub eax, edx	      1496	gui.c	FUNCTION_20	CALL_3
0x18e4	    0x8b0d00000000	            mov ecx, dword [0x0400192a] 	      1496	gui.c	FUNCTION_20	CALL_3
0x18ea	              0x99	                                     cdq	      1496	gui.c	FUNCTION_20	CALL_3
0x18eb	            0xf7f9	                                idiv ecx	      1496	gui.c	FUNCTION_20	CALL_3
0x18ed	    0x890500000000	            mov dword [0x04001933], eax 	      1496	gui.c	FUNCTION_20	CALL_3
0x18f3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1498	gui.c	FUNCTION_20	CALL_4
0x18f6	            0x89c7	                            mov edi, eax	      1498	gui.c	FUNCTION_20	CALL_4
0x18f8	      0xe80efeffff	        call sym.gui_position_components	      1498	gui.c	FUNCTION_20	CALL_4
0x18fd	      0xe800000000	                          call 0x4001942	      1499	gui.c	FUNCTION_20	CALL_5
0x1902	    0x8b0500000000	            mov eax, dword [0x04001948] 	      1505	gui.c	FUNCTION_20	IF_3
0x1908	      0x3d00030000	                          cmp eax, 0x300	      1505	gui.c	FUNCTION_20	IF_3
0x190d	            0x740d	                            je 0x400195c	      1505	gui.c	FUNCTION_20	IF_3
0x190f	    0x8b0500000000	            mov eax, dword [0x04001955] 	      1505	gui.c	FUNCTION_20	IF_3
0x1915	      0x3d00080000	                          cmp eax, 0x800	      1505	gui.c	FUNCTION_20	IF_3
0x191a	            0x750c	                           jne 0x4001968	      1505	gui.c	FUNCTION_20	IF_3
0x191c	    0x8b0500000000	            mov eax, dword [0x04001962] 	      1506	gui.c	FUNCTION_20	IF_3
0x1922	    0x890500000000	            mov dword [0x04001968], eax 	      1506	gui.c	FUNCTION_20	IF_3
0x1928	    0x8b1500000000	            mov edx, dword [0x0400196e] 	      1510	gui.c	FUNCTION_20	IF_4
0x192e	    0x8b0500000000	            mov eax, dword [0x04001974] 	      1510	gui.c	FUNCTION_20	IF_4
0x1934	            0x39c2	                            cmp edx, eax	      1510	gui.c	FUNCTION_20	IF_4
0x1936	            0x753a	                           jne 0x40019b2	      1510	gui.c	FUNCTION_20	IF_4
0x1938	    0x8b1500000000	            mov edx, dword [0x0400197e] 	      1510	gui.c	FUNCTION_20	IF_4
0x193e	    0x8b0500000000	            mov eax, dword [0x04001984] 	      1510	gui.c	FUNCTION_20	IF_4
0x1944	            0x39c2	                            cmp edx, eax	      1510	gui.c	FUNCTION_20	IF_4
0x1946	            0x752a	                           jne 0x40019b2	      1510	gui.c	FUNCTION_20	IF_4
0x1948	    0x8b0500000000	            mov eax, dword [0x0400198e] 	      1511	gui.c	FUNCTION_20	IF_4
0x194e	          0x4863d0	                         movsxd rdx, eax	      1511	gui.c	FUNCTION_20	IF_4
0x1951	    0x488b05000000	            mov rax, qword [0x04001998] 	      1511	gui.c	FUNCTION_20	IF_4
0x1958	          0x4839c2	                            cmp rdx, rax	      1511	gui.c	FUNCTION_20	IF_4
0x195b	            0x7515	                           jne 0x40019b2	      1511	gui.c	FUNCTION_20	IF_4
0x195d	    0x8b0500000000	            mov eax, dword [0x040019a3] 	      1511	gui.c	FUNCTION_20	IF_4
0x1963	          0x4863d0	                         movsxd rdx, eax	      1511	gui.c	FUNCTION_20	IF_4
0x1966	    0x488b05000000	            mov rax, qword [0x040019ad] 	      1511	gui.c	FUNCTION_20	IF_4
0x196d	          0x4839c2	                            cmp rdx, rax	      1511	gui.c	FUNCTION_20	IF_4
0x1970	            0x7405	                            je 0x40019b7	      1511	gui.c	FUNCTION_20	IF_4
0x1972	      0xe800000000	                          call 0x40019b7	      1512	gui.c	FUNCTION_20	CALL_6
0x1977	      0xbf01000000	                              mov edi, 1	      1514	gui.c	FUNCTION_20	CALL_7
0x197c	      0xe800000000	                          call 0x40019c1	      1514	gui.c	FUNCTION_20	CALL_7
0x1981	      0xbe01000000	                              mov esi, 1	      1515	gui.c	FUNCTION_20	CALL_8
0x1986	      0xbf00000000	                              mov edi, 0	      1515	gui.c	FUNCTION_20	CALL_8
0x198b	      0xe800000000	                          call 0x40019d0	      1515	gui.c	FUNCTION_20	CALL_8
0x1990	    0xc70500000000	               mov dword [0x040019da], 0	      1520	gui.c	FUNCTION_20
0x199a	    0x8b0500000000	            mov eax, dword [0x040019e0] 	      1525	gui.c	FUNCTION_20	IF_5
0x19a0	            0x85c0	                           test eax, eax	      1525	gui.c	FUNCTION_20	IF_5
0x19a2	            0x7444	                            je 0x4001a28	      1525	gui.c	FUNCTION_20	IF_5
0x19a4	    0x8b0500000000	            mov eax, dword [0x040019ea] 	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x19aa	          0x3945fc	                cmp dword [rbp - 4], eax	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x19ad	            0x7521	                           jne 0x4001a10	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x19af	    0x8b0500000000	            mov eax, dword [0x040019f5] 	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x19b5	          0x3945f8	                cmp dword [rbp - 8], eax	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x19b8	            0x7516	                           jne 0x4001a10	      1527	gui.c	FUNCTION_20	IF_5	IF_6
0x19ba	    0xc70500000000	               mov dword [0x04001a04], 0	      1529	gui.c	FUNCTION_20	IF_5	IF_6
0x19c4	    0xc70500000000	               mov dword [0x04001a0e], 0	      1530	gui.c	FUNCTION_20	IF_5	IF_6
0x19ce	            0xeb18	                           jmp 0x4001a28	      1530	gui.c	FUNCTION_20	IF_5	IF_6
0x19d0	    0x8b0500000000	            mov eax, dword [0x04001a16] 	      1534	gui.c	FUNCTION_20	IF_5	ELSE_1
0x19d6	          0x8945fc	                mov dword [rbp - 4], eax	      1534	gui.c	FUNCTION_20	IF_5	ELSE_1
0x19d9	    0x8b0500000000	            mov eax, dword [0x04001a1f] 	      1535	gui.c	FUNCTION_20	IF_5	ELSE_1
0x19df	          0x8945f8	                mov dword [rbp - 8], eax	      1535	gui.c	FUNCTION_20	IF_5	ELSE_1
0x19e2	      0xe9b3feffff	                           jmp 0x40018da	      1536	gui.c	FUNCTION_20	IF_5	ELSE_1
0x19e7	              0x90	                                     nop	      1474	gui.c	FUNCTION_20	IF_1
0x19e8	              0xc9	                                   leave	      1539	gui.c	FUNCTION_20
0x19e9	              0xc3	                                     ret	      1539	gui.c	FUNCTION_20
gui_wait_for_chars	ELSE,1:IF,7:CALL,16:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	86
0x344f	              0x55	                                push rbp	      2957	gui.c	FUNCTION_47
0x3450	          0x4889e5	                            mov rbp, rsp	      2957	gui.c	FUNCTION_47
0x3453	        0x4883ec40	                           sub rsp, 0x40	      2957	gui.c	FUNCTION_47
0x3457	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2957	gui.c	FUNCTION_47
0x345b	          0x8975c4	             mov dword [rbp - 0x3c], esi	      2957	gui.c	FUNCTION_47
0x345e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2957	gui.c	FUNCTION_47
0x3467	        0x488945f8	                mov qword [rbp - 8], rax	      2957	gui.c	FUNCTION_47
0x346b	            0x31c0	                            xor eax, eax	      2957	gui.c	FUNCTION_47
0x346d	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2968	gui.c	FUNCTION_47	IF_1
0x3472	            0x740a	                            je 0x40034be	      2968	gui.c	FUNCTION_47	IF_1
0x3474	      0xbf00000000	                              mov edi, 0	      2969	gui.c	FUNCTION_47	CALL_1
0x3479	      0xe800000000	                          call 0x40034be	      2969	gui.c	FUNCTION_47	CALL_1
0x347e	      0xe800000000	                          call 0x40034c3	      2972	gui.c	FUNCTION_47	CALL_2
0x3483	      0xe800000000	                          call 0x40034c8	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x3488	            0x85c0	                           test eax, eax	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x348a	            0x740a	                            je 0x40034d6	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x348c	      0xb801000000	                              mov eax, 1	      2974	gui.c	FUNCTION_47	IF_2
0x3491	      0xe902010000	                           jmp 0x40035d8	      2974	gui.c	FUNCTION_47	IF_2
0x3496	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2975	gui.c	FUNCTION_47	IF_3
0x349b	            0x750a	                           jne 0x40034e7	      2975	gui.c	FUNCTION_47	IF_3
0x349d	      0xb800000000	                              mov eax, 0	      2976	gui.c	FUNCTION_47	IF_3
0x34a2	      0xe9f1000000	                           jmp 0x40035d8	      2976	gui.c	FUNCTION_47	IF_3
0x34a7	      0xe800000000	                          call 0x40034ec	      2979	gui.c	FUNCTION_47	CALL_4
0x34ac	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2981	gui.c	FUNCTION_47	IF_4
0x34b1	            0x7e26	                           jle 0x4003519	      2981	gui.c	FUNCTION_47	IF_4
0x34b3	      0xe800000000	                          call 0x40034f8	      2985	gui.c	FUNCTION_47	IF_4	CALL_5
0x34b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2986	gui.c	FUNCTION_47	IF_4	CALL_6
0x34bc	          0x4889c7	                            mov rdi, rax	      2986	gui.c	FUNCTION_47	IF_4	CALL_6
0x34bf	      0xe862ffffff	    call sym.gui_wait_for_chars_or_timer	      2986	gui.c	FUNCTION_47	IF_4	CALL_6
0x34c4	          0x8945dc	             mov dword [rbp - 0x24], eax	      2986	gui.c	FUNCTION_47	IF_4	CALL_6
0x34c7	      0xbf01000000	                              mov edi, 1	      2987	gui.c	FUNCTION_47	IF_4	CALL_7
0x34cc	      0xe800000000	                          call 0x4003511	      2987	gui.c	FUNCTION_47	IF_4	CALL_7
0x34d1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2988	gui.c	FUNCTION_47	IF_4
0x34d4	      0xe9bf000000	                           jmp 0x40035d8	      2988	gui.c	FUNCTION_47	IF_4
0x34d9	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2992	gui.c	FUNCTION_47	CALL_8
0x34dd	      0xbe00000000	                              mov esi, 0	      2992	gui.c	FUNCTION_47	CALL_8
0x34e2	          0x4889c7	                            mov rdi, rax	      2992	gui.c	FUNCTION_47	CALL_8
0x34e5	      0xe800000000	                          call 0x400352a	      2992	gui.c	FUNCTION_47	CALL_8
0x34ea	      0xe800000000	                          call 0x400352f	      2998	gui.c	FUNCTION_47	CALL_9
0x34ef	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      3000	gui.c	FUNCTION_47
0x34f6	    0x488b05000000	            mov rax, qword [0x0400353d] 	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x34fd	          0x4889c7	                            mov rdi, rax	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x3500	      0xe821ffffff	    call sym.gui_wait_for_chars_or_timer	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x3505	          0x83f801	                              cmp eax, 1	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x3508	            0x7509	                           jne 0x4003553	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x350a	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      3007	gui.c	FUNCTION_47	IF_5
0x3511	            0xeb53	                           jmp 0x40035a6	      3007	gui.c	FUNCTION_47	IF_5
0x3513	      0xe800000000	                          call 0x4003558	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x3518	            0x85c0	                           test eax, eax	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x351a	            0x744a	                            je 0x40035a6	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x351c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x3520	          0x4889c7	                            mov rdi, rax	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x3523	      0xe800000000	                          call 0x4003568	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x3528	          0x4889c2	                            mov rdx, rax	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x352b	    0x488b05000000	            mov rax, qword [0x04003572] 	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x3532	          0x4839c2	                            cmp rdx, rax	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x3535	            0x7c2f	                            jl 0x40035a6	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x3537	    0x8b0500000000	            mov eax, dword [0x0400357d] 	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x353d	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x3540	            0x7524	                           jne 0x40035a6	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x3542	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      3017	gui.c	FUNCTION_47	ELSE_1	IF_6
0x3546	        0xc645f1fd	              mov byte [rbp - 0xf], 0xfd	      3018	gui.c	FUNCTION_47	ELSE_1	IF_6
0x354a	        0xc645f260	              mov byte [rbp - 0xe], 0x60	      3019	gui.c	FUNCTION_47	ELSE_1	IF_6
0x354e	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x3552	      0xbe03000000	                              mov esi, 3	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x3557	          0x4889c7	                            mov rdi, rax	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x355a	      0xe800000000	                          call 0x400359f	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x355f	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      3022	gui.c	FUNCTION_47	ELSE_1	IF_6
0x3566	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3025	gui.c	FUNCTION_47	IF_7
0x356a	            0x751f	                           jne 0x40035cb	      3025	gui.c	FUNCTION_47	IF_7
0x356c	    0x8b0500000000	            mov eax, dword [0x040035b2] 	      3025	gui.c	FUNCTION_47	IF_7
0x3572	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      3025	gui.c	FUNCTION_47	IF_7
0x3575	            0x7514	                           jne 0x40035cb	      3025	gui.c	FUNCTION_47	IF_7
0x3577	      0xe800000000	                          call 0x40035bc	      3028	gui.c	FUNCTION_47	IF_7	CALL_14
0x357c	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	      3029	gui.c	FUNCTION_47	IF_7	CALL_15
0x3583	      0xe89efeffff	    call sym.gui_wait_for_chars_or_timer	      3029	gui.c	FUNCTION_47	IF_7	CALL_15
0x3588	          0x8945dc	             mov dword [rbp - 0x24], eax	      3029	gui.c	FUNCTION_47	IF_7	CALL_15
0x358b	      0xbf01000000	                              mov edi, 1	      3032	gui.c	FUNCTION_47	CALL_16
0x3590	      0xe800000000	                          call 0x40035d5	      3032	gui.c	FUNCTION_47	CALL_16
0x3595	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3033	gui.c	FUNCTION_47
0x3598	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3034	gui.c	FUNCTION_47
0x359c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3034	gui.c	FUNCTION_47
0x35a5	            0x7405	                            je 0x40035ec	      3034	gui.c	FUNCTION_47
0x35a7	      0xe800000000	                          call 0x40035ec	      3034	gui.c	FUNCTION_47
0x35ac	              0xc9	                                   leave	      3034	gui.c	FUNCTION_47
0x35ad	              0xc3	                                     ret	      3034	gui.c	FUNCTION_47
gui_check_colors	ELSE,0:IF,2:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	23
0x5f69	              0x55	                                push rbp	      4734	gui.c	FUNCTION_72
0x5f6a	          0x4889e5	                            mov rbp, rsp	      4734	gui.c	FUNCTION_72
0x5f6d	    0x488b15000000	            mov rdx, qword [0x04005fb4] 	      4735	gui.c	FUNCTION_72	IF_1
0x5f74	    0x488b05000000	            mov rax, qword [0x04005fbb] 	      4735	gui.c	FUNCTION_72	IF_1
0x5f7b	          0x4839c2	                            cmp rdx, rax	      4735	gui.c	FUNCTION_72	IF_1
0x5f7e	            0x740f	                            je 0x4005fcf	      4735	gui.c	FUNCTION_72	IF_1
0x5f80	    0x488b05000000	            mov rax, qword [0x04005fc7] 	      4735	gui.c	FUNCTION_72	IF_1
0x5f87	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4735	gui.c	FUNCTION_72	IF_1
0x5f8d	            0x7536	                           jne 0x4006005	      4735	gui.c	FUNCTION_72	IF_1
0x5f8f	      0xbf00000000	                              mov edi, 0	      4737	gui.c	FUNCTION_72	IF_1	CALL_1
0x5f94	      0xe865000000	               call sym.gui_set_bg_color	      4737	gui.c	FUNCTION_72	IF_1	CALL_1
0x5f99	    0x488b15000000	            mov rdx, qword [0x04005fe0] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x5fa0	    0x488b05000000	            mov rax, qword [0x04005fe7] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x5fa7	          0x4839c2	                            cmp rdx, rax	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x5faa	            0x740f	                            je 0x4005ffb	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x5fac	    0x488b05000000	            mov rax, qword [0x04005ff3] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x5fb3	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x5fb9	            0x750a	                           jne 0x4006005	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x5fbb	      0xbf00000000	                              mov edi, 0	      4739	gui.c	FUNCTION_72	IF_1	CALL_2
0x5fc0	      0xe803000000	               call sym.gui_set_fg_color	      4739	gui.c	FUNCTION_72	IF_1	CALL_2
0x5fc5	              0x90	                                     nop	      4741	gui.c	FUNCTION_72
0x5fc6	              0x5d	                                 pop rbp	      4741	gui.c	FUNCTION_72
0x5fc7	              0xc3	                                     ret	      4741	gui.c	FUNCTION_72
gui_init	ELSE,1:IF,25:CALL,68:functions,1:WHILE,0:SWITCH,0:DO,0:FOR,0	316
0x5a0	              0x55	                                push rbp	       466	gui.c	FUNCTION_7
0x5a1	          0x4889e5	                            mov rbp, rsp	       466	gui.c	FUNCTION_7
0x5a4	              0x53	                                push rbx	       466	gui.c	FUNCTION_7
0x5a5	    0x4881ecb80000	                           sub rsp, 0xb8	       466	gui.c	FUNCTION_7
0x5ac	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	gui.c	FUNCTION_7
0x5b5	        0x488945e8	             mov qword [rbp - 0x18], rax	       466	gui.c	FUNCTION_7
0x5b9	            0x31c0	                            xor eax, eax	       466	gui.c	FUNCTION_7
0x5bb	    0x8b0500000000	            mov eax, dword [0x04000601] 	       476	gui.c	FUNCTION_7	IF_1
0x5c1	            0x85c0	                           test eax, eax	       476	gui.c	FUNCTION_7	IF_1
0x5c3	     0xf858d020000	                           jne 0x4000896	       476	gui.c	FUNCTION_7	IF_1
0x5c9	    0x8b0500000000	            mov eax, dword [0x0400060f] 	       478	gui.c	FUNCTION_7	IF_1
0x5cf	          0x83c001	                              add eax, 1	       478	gui.c	FUNCTION_7	IF_1
0x5d2	    0x890500000000	            mov dword [0x04000618], eax 	       478	gui.c	FUNCTION_7	IF_1
0x5d8	      0xbf01000000	                              mov edi, 1	       480	gui.c	FUNCTION_7	IF_1	CALL_1
0x5dd	      0xe800000000	                          call 0x4000622	       480	gui.c	FUNCTION_7	IF_1	CALL_1
0x5e2	      0xe800000000	                          call 0x4000627	       483	gui.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x5e7	            0x85c0	                           test eax, eax	       483	gui.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x5e9	            0x751e	                           jne 0x4000649	       483	gui.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x5eb	    0x8b0500000000	            mov eax, dword [0x04000631] 	       485	gui.c	FUNCTION_7	IF_1	IF_2
0x5f1	          0x83e801	                              sub eax, 1	       485	gui.c	FUNCTION_7	IF_1	IF_2
0x5f4	    0x890500000000	            mov dword [0x0400063a], eax 	       485	gui.c	FUNCTION_7	IF_1	IF_2
0x5fa	      0xbf00000000	                              mov edi, 0	       486	gui.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x5ff	      0xe800000000	                          call 0x4000644	       486	gui.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x604	      0xe949050000	                           jmp 0x4000b92	       487	gui.c	FUNCTION_7	IF_1	IF_2
0x609	      0xb900000000	                              mov ecx, 0	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x60e	      0xba00000000	                              mov edx, 0	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x613	      0xbe00000000	                              mov esi, 0	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x618	      0xbf00000000	                              mov edi, 0	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x61d	      0xe800000000	                          call 0x4000662	       494	gui.c	FUNCTION_7	IF_1	CALL_4
0x622	    0x488b05000000	            mov rax, qword [0x04000669] 	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x629	      0xbe4d000000	                           mov esi, 0x4d	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x62e	          0x4889c7	                            mov rdi, rax	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x631	      0xe800000000	                          call 0x4000676	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x636	          0x4885c0	                           test rax, rax	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x639	            0x7528	                           jne 0x40006a3	       500	gui.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x63b	    0xc70500000000	               mov dword [0x04000685], 1	       502	gui.c	FUNCTION_7	IF_1	IF_3
0x645	      0xba00000000	                              mov edx, 0	       503	gui.c	FUNCTION_7	IF_1	IF_3	CALL_6
0x64a	      0xbe00000000	                              mov esi, 0	       503	gui.c	FUNCTION_7	IF_1	IF_3	CALL_6
0x64f	      0xbf00000000	                              mov edi, 0	       503	gui.c	FUNCTION_7	IF_1	IF_3	CALL_6
0x654	      0xe800000000	                          call 0x4000699	       503	gui.c	FUNCTION_7	IF_1	IF_3	CALL_6
0x659	    0xc70500000000	               mov dword [0x040006a3], 0	       504	gui.c	FUNCTION_7	IF_1	IF_3
0x663	      0xbf00000000	                              mov edi, 0	       512	gui.c	FUNCTION_7	IF_1	IF_4	CALL_7
0x668	      0xe800000000	                          call 0x40006ad	       512	gui.c	FUNCTION_7	IF_1	IF_4	CALL_7
0x66d	            0x85c0	                           test eax, eax	       512	gui.c	FUNCTION_7	IF_1	IF_4	CALL_7
0x66f	            0x751f	                           jne 0x40006d0	       512	gui.c	FUNCTION_7	IF_1	IF_4	CALL_7
0x671	    0x41b8faffffff	                     mov r8d, 0xfffffffa	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x677	      0xb901000000	                              mov ecx, 1	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x67c	      0xba00000000	                              mov edx, 0	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x681	      0xbeffffffff	                     mov esi, 0xffffffff	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x686	      0xbf00000000	                              mov edi, 0	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x68b	      0xe800000000	                          call 0x40006d0	       513	gui.c	FUNCTION_7	IF_1	IF_4	CALL_8
0x690	    0x488b05000000	            mov rax, qword [0x040006d7] 	       520	gui.c	FUNCTION_7	IF_1	IF_5
0x697	          0x4885c0	                           test rax, rax	       520	gui.c	FUNCTION_7	IF_1	IF_5
0x69a	            0x747b	                            je 0x4000757	       520	gui.c	FUNCTION_7	IF_1	IF_5
0x69c	    0x488b05000000	            mov rax, qword [0x040006e3] 	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x6a3	      0xbe00000000	                              mov esi, 0	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x6a8	          0x4889c7	                            mov rdi, rax	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x6ab	      0xe800000000	                          call 0x40006f0	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x6b0	            0x85c0	                           test eax, eax	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x6b2	     0xf8471010000	                            je 0x4000869	       522	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_9
0x6b8	    0x488b05000000	            mov rax, qword [0x040006ff] 	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x6bf	      0xbe00000000	                              mov esi, 0	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x6c4	          0x4889c7	                            mov rdi, rax	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x6c7	      0xe800000000	                          call 0x400070c	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x6cc	            0x85c0	                           test eax, eax	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x6ce	     0xf8455010000	                            je 0x4000869	       523	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_10
0x6d4	    0x488b05000000	            mov rax, qword [0x0400071b] 	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x6db	      0xba00000000	                              mov edx, 0	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x6e0	      0xbe00000000	                              mov esi, 0	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x6e5	          0x4889c7	                            mov rdi, rax	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x6e8	      0xe800000000	                          call 0x400072d	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x6ed	          0x83f801	                              cmp eax, 1	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x6f0	     0xf8433010000	                            je 0x4000869	       524	gui.c	FUNCTION_7	IF_1	IF_5	IF_6	CALL_11
0x6f6	    0x488b1d000000	            mov rbx, qword [0x0400073d] 	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x6fd	      0xbf00000000	                              mov edi, 0	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x702	      0xe800000000	                          call 0x4000747	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x707	          0x4889de	                            mov rsi, rbx	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x70a	          0x4889c7	                            mov rdi, rax	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x70d	      0xe800000000	                          call 0x4000752	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x712	      0xe912010000	                           jmp 0x4000869	       525	gui.c	FUNCTION_7	IF_1	IF_5	CALL_13
0x717	      0xba00000000	                              mov edx, 0	       533	gui.c	FUNCTION_7	IF_1	ELSE_1	CALL_14
0x71c	      0xbe00000000	                              mov esi, 0	       533	gui.c	FUNCTION_7	IF_1	ELSE_1	CALL_14
0x721	      0xbf00000000	                              mov edi, 0	       533	gui.c	FUNCTION_7	IF_1	ELSE_1	CALL_14
0x726	      0xe800000000	                          call 0x400076b	       533	gui.c	FUNCTION_7	IF_1	ELSE_1	CALL_14
0x72b	      0xbe00000000	                              mov esi, 0	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x730	      0xbf00000000	                              mov edi, 0	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x735	      0xe800000000	                          call 0x400077a	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x73a	            0x85c0	                           test eax, eax	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x73c	            0x752c	                           jne 0x40007aa	       545	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_15
0x73e	      0xba02000000	                              mov edx, 2	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x743	      0xbe01000000	                              mov esi, 1	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x748	      0xbf00000000	                              mov edi, 0	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x74d	      0xe800000000	                          call 0x4000792	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x752	            0x85c0	                           test eax, eax	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x754	            0x7514	                           jne 0x40007aa	       546	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_16
0x756	      0xba02000000	                              mov edx, 2	       549	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_17
0x75b	      0xbe01000000	                              mov esi, 1	       549	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_17
0x760	      0xbf00000000	                              mov edi, 0	       549	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_17
0x765	      0xe800000000	                          call 0x40007aa	       549	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_7	CALL_17
0x76a	    0x8b0500000000	            mov eax, dword [0x040007b0] 	       573	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8
0x770	            0x85c0	                           test eax, eax	       573	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8
0x772	     0xf84b1000000	                            je 0x4000869	       573	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8
0x778	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x77f	          0x4889c6	                            mov rsi, rax	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x782	      0xbf00000000	                              mov edi, 0	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x787	      0xe800000000	                          call 0x40007cc	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x78c	            0x85c0	                           test eax, eax	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x78e	            0x750f	                           jne 0x40007df	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x790	    0x8b9d6cffffff	             mov ebx, dword [rbp - 0x94]	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x796	      0xe800000000	                          call 0x40007db	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x79b	            0x39c3	                            cmp ebx, eax	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x79d	            0x740c	                            je 0x40007eb	       581	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9	CALL_21
0x79f	    0x8b0500000000	            mov eax, dword [0x040007e5] 	       582	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9
0x7a5	    0x890500000000	            mov dword [0x040007eb], eax 	       582	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_9
0x7ab	      0xba00000000	                              mov edx, 0	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x7b0	      0xbe00000000	                              mov esi, 0	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x7b5	      0xbf00000000	                              mov edi, 0	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x7ba	      0xe800000000	                          call 0x40007ff	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x7bf	          0x83f801	                              cmp eax, 1	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x7c2	            0x7446	                            je 0x400084a	       588	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_22
0x7c4	      0xba00000000	                              mov edx, 0	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x7c9	      0xbe00000000	                              mov esi, 0	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x7ce	      0xbf00000000	                              mov edi, 0	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x7d3	      0xe800000000	                          call 0x4000818	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x7d8	          0x83f801	                              cmp eax, 1	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x7db	            0x742d	                            je 0x400084a	       591	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_23
0x7dd	      0xba00000000	                              mov edx, 0	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x7e2	      0xbe00000000	                              mov esi, 0	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x7e7	      0xbf00000000	                              mov edi, 0	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x7ec	      0xe800000000	                          call 0x4000831	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x7f1	          0x83f801	                              cmp eax, 1	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x7f4	            0x7414	                            je 0x400084a	       595	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_10	CALL_24
0x7f6	      0xba02000000	                              mov edx, 2	       607	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	CALL_27
0x7fb	      0xbe01000000	                              mov esi, 1	       607	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	CALL_27
0x800	      0xbf00000000	                              mov edi, 0	       607	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	CALL_27
0x805	      0xe800000000	                          call 0x400084a	       607	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	CALL_27
0x80a	    0x8b0500000000	            mov eax, dword [0x04000850] 	       609	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_11
0x810	          0x83f802	                              cmp eax, 2	       609	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_11
0x813	            0x750a	                           jne 0x400085f	       609	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_11
0x815	    0xc70500000000	               mov dword [0x0400085f], 1	       610	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8	IF_11
0x81f	    0xc70500000000	               mov dword [0x04000869], 0	       611	gui.c	FUNCTION_7	IF_1	ELSE_1	IF_8
0x829	    0x8b0500000000	            mov eax, dword [0x0400086f] 	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x82f	            0x85c0	                           test eax, eax	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x831	            0x750a	                           jne 0x400087d	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x833	    0x8b0500000000	            mov eax, dword [0x04000879] 	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x839	            0x85c0	                           test eax, eax	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x83b	            0x740a	                            je 0x4000887	       615	gui.c	FUNCTION_7	IF_1	IF_12
0x83d	      0xbf01000000	                              mov edi, 1	       616	gui.c	FUNCTION_7	IF_1	CALL_28
0x842	      0xe800000000	                          call 0x4000887	       616	gui.c	FUNCTION_7	IF_1	CALL_28
0x847	    0x8b0500000000	            mov eax, dword [0x0400088d] 	       618	gui.c	FUNCTION_7	IF_1
0x84d	          0x83e801	                              sub eax, 1	       618	gui.c	FUNCTION_7	IF_1
0x850	    0x890500000000	            mov dword [0x04000896], eax 	       618	gui.c	FUNCTION_7	IF_1
0x856	    0x8b0500000000	            mov eax, dword [0x0400089c] 	       622	gui.c	FUNCTION_7	IF_13
0x85c	            0x85c0	                           test eax, eax	       622	gui.c	FUNCTION_7	IF_13
0x85e	     0xf85ea020000	                           jne 0x4000b8e	       622	gui.c	FUNCTION_7	IF_13
0x864	    0xc70500000000	               mov dword [0x040008ae], 1	       628	gui.c	FUNCTION_7
0x86e	      0xe800000000	                          call 0x40008b3	       629	gui.c	FUNCTION_7	IF_14	CALL_29
0x873	            0x85c0	                           test eax, eax	       629	gui.c	FUNCTION_7	IF_14	CALL_29
0x875	     0xf84bc020000	                            je 0x4000b77	       629	gui.c	FUNCTION_7	IF_14	CALL_29
0x87b	    0xc70500000000	               mov dword [0x040008c5], 0	       634	gui.c	FUNCTION_7
0x885	    0xc70500000000	               mov dword [0x040008cf], 0	       635	gui.c	FUNCTION_7
0x88f	      0xbf01000000	                              mov edi, 1	       636	gui.c	FUNCTION_7	CALL_30
0x894	      0xe800000000	                          call 0x40008d9	       636	gui.c	FUNCTION_7	CALL_30
0x899	    0xc70500000000	               mov dword [0x040008e3], 0	       637	gui.c	FUNCTION_7
0x8a3	    0xc70500000000	               mov dword [0x040008ed], 0	       638	gui.c	FUNCTION_7
0x8ad	    0x8b0500000000	            mov eax, dword [0x040008f3] 	       643	gui.c	FUNCTION_7	IF_15
0x8b3	            0x85c0	                           test eax, eax	       643	gui.c	FUNCTION_7	IF_15
0x8b5	            0x790a	                           jns 0x4000901	       643	gui.c	FUNCTION_7	IF_15
0x8b7	    0xc70500000000	               mov dword [0x04000901], 0	       644	gui.c	FUNCTION_7	IF_15
0x8c1	    0x488b05000000	            mov rax, qword [0x04000908] 	       649	gui.c	FUNCTION_7	IF_16
0x8c8	          0x4885c0	                           test rax, rax	       649	gui.c	FUNCTION_7	IF_16
0x8cb	            0x741e	                            je 0x400092b	       649	gui.c	FUNCTION_7	IF_16
0x8cd	    0x488b05000000	            mov rax, qword [0x04000914] 	       650	gui.c	FUNCTION_7	CALL_31
0x8d4	      0xb900000000	                              mov ecx, 0	       650	gui.c	FUNCTION_7	CALL_31
0x8d9	          0x4889c2	                            mov rdx, rax	       650	gui.c	FUNCTION_7	CALL_31
0x8dc	      0xbe00000000	                              mov esi, 0	       650	gui.c	FUNCTION_7	CALL_31
0x8e1	      0xbf00000000	                              mov edi, 0	       650	gui.c	FUNCTION_7	CALL_31
0x8e6	      0xe800000000	                          call 0x400092b	       650	gui.c	FUNCTION_7	CALL_31
0x8eb	    0x488b05000000	            mov rax, qword [0x04000932] 	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x8f2	           0xfb600	                   movzx eax, byte [rax]	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x8f5	            0x84c0	                             test al, al	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x8f7	            0x7507	                           jne 0x4000940	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x8f9	      0xe800000000	                          call 0x400093e	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x8fe	            0xeb07	                           jmp 0x4000947	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x900	    0x488b05000000	            mov rax, qword [0x04000947] 	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x907	      0xbe00000000	                              mov esi, 0	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x90c	          0x4889c7	                            mov rdi, rax	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x90f	      0xe800000000	                          call 0x4000954	       656	gui.c	FUNCTION_7	IF_17	CALL_34
0x914	            0x85c0	                           test eax, eax	       651	gui.c	FUNCTION_7	IF_17
0x916	            0x7517	                           jne 0x400096f	       651	gui.c	FUNCTION_7	IF_17
0x918	      0xbf00000000	                              mov edi, 0	       659	gui.c	FUNCTION_7	IF_17	CALL_36
0x91d	      0xe800000000	                          call 0x4000962	       659	gui.c	FUNCTION_7	IF_17	CALL_36
0x922	          0x4889c7	                            mov rdi, rax	       659	gui.c	FUNCTION_7	IF_17	CALL_36
0x925	      0xe800000000	                          call 0x400096a	       659	gui.c	FUNCTION_7	IF_17	CALL_36
0x92a	      0xe909020000	                           jmp 0x4000b78	       660	gui.c	FUNCTION_7	IF_17
0x92f	      0xe800000000	                          call 0x4000974	       663	gui.c	FUNCTION_7	IF_18	CALL_37
0x934	            0x85c0	                           test eax, eax	       663	gui.c	FUNCTION_7	IF_18	CALL_37
0x936	            0x7512	                           jne 0x400098a	       663	gui.c	FUNCTION_7	IF_18	CALL_37
0x938	      0xbf00000000	                              mov edi, 0	       664	gui.c	FUNCTION_7	CALL_39
0x93d	      0xe800000000	                          call 0x4000982	       664	gui.c	FUNCTION_7	CALL_39
0x942	          0x4889c7	                            mov rdi, rax	       664	gui.c	FUNCTION_7	CALL_39
0x945	      0xe800000000	                          call 0x400098a	       664	gui.c	FUNCTION_7	CALL_39
0x94a	    0x488b05000000	            mov rax, qword [0x04000991] 	       667	gui.c	FUNCTION_7
0x951	    0x890500000000	            mov dword [0x04000997], eax 	       667	gui.c	FUNCTION_7
0x957	    0x488b05000000	            mov rax, qword [0x0400099e] 	       668	gui.c	FUNCTION_7
0x95e	    0x890500000000	            mov dword [0x040009a4], eax 	       668	gui.c	FUNCTION_7
0x964	      0xe800000000	                          call 0x40009a9	       669	gui.c	FUNCTION_7	CALL_40
0x969	    0x488b05000000	            mov rax, qword [0x040009b0] 	       672	gui.c	FUNCTION_7
0x970	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       672	gui.c	FUNCTION_7
0x977	            0xeb5c	                           jmp 0x4000a15	       672	gui.c	FUNCTION_7
0x979	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x980	    0x488d88901800	                 lea rcx, [rax + 0x1890]	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x987	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x98e	          0x4889c2	                            mov rdx, rax	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x991	      0xbe00000000	                              mov esi, 0	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x996	          0x4889cf	                            mov rdi, rcx	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x999	      0xe800000000	                          call 0x40009de	       674	gui.c	FUNCTION_7	FUNCTION_1	CALL_1
0x99e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x9a5	    0x488d88e01800	                 lea rcx, [rax + 0x18e0]	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x9ac	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x9b3	          0x4889c2	                            mov rdx, rax	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x9b6	      0xbe01000000	                              mov esi, 1	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x9bb	          0x4889cf	                            mov rdi, rcx	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x9be	      0xe800000000	                          call 0x4000a03	       675	gui.c	FUNCTION_7	FUNCTION_1	CALL_2
0x9c3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       672	gui.c	FUNCTION_7
0x9ca	        0x488b4020	            mov rax, qword [rax + 0x20] 	       672	gui.c	FUNCTION_7
0x9ce	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       672	gui.c	FUNCTION_7
0x9d5	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       672	gui.c	FUNCTION_7
0x9dd	            0x759a	                           jne 0x40009b9	       672	gui.c	FUNCTION_7
0x9df	      0xba00000000	                              mov edx, 0	       677	gui.c	FUNCTION_7	CALL_41
0x9e4	      0xbe02000000	                              mov esi, 2	       677	gui.c	FUNCTION_7	CALL_41
0x9e9	      0xbf00000000	                              mov edi, 0	       677	gui.c	FUNCTION_7	CALL_41
0x9ee	      0xe800000000	                          call 0x4000a33	       677	gui.c	FUNCTION_7	CALL_41
0x9f3	    0x488b05000000	            mov rax, qword [0x04000a3a] 	       680	gui.c	FUNCTION_7	CALL_42
0x9fa	          0x4889c7	                            mov rdi, rax	       680	gui.c	FUNCTION_7	CALL_42
0x9fd	      0xe800000000	                          call 0x4000a42	       680	gui.c	FUNCTION_7	CALL_42
0xa02	      0xe800000000	                          call 0x4000a47	       687	gui.c	FUNCTION_7	CALL_44
0xa07	      0xbf00000000	                              mov edi, 0	       691	gui.c	FUNCTION_7	CALL_45
0xa0c	      0xe800000000	                          call 0x4000a51	       691	gui.c	FUNCTION_7	CALL_45
0xa11	    0xc70500000000	               mov dword [0x04000a5b], 1	       694	gui.c	FUNCTION_7
0xa1b	      0xe800000000	                          call 0x4000a60	       710	gui.c	FUNCTION_7	IF_20	CALL_48
0xa20	            0x85c0	                           test eax, eax	       710	gui.c	FUNCTION_7	IF_20	CALL_48
0xa22	     0xf8410010000	                            je 0x4000b78	       710	gui.c	FUNCTION_7	IF_20	CALL_48
0xa28	      0xe800000000	                          call 0x4000a6d	       713	gui.c	FUNCTION_7	IF_20	CALL_49
0xa2d	      0xe800000000	                          call 0x4000a72	       714	gui.c	FUNCTION_7	IF_20	CALL_50
0xa32	      0xe800000000	                          call 0x4000a77	       716	gui.c	FUNCTION_7	IF_20	CALL_51
0xa37	    0xc70500000000	               mov dword [0x04000a81], 0	       719	gui.c	FUNCTION_7	IF_20
0xa41	      0xe800000000	                          call 0x4000a86	       723	gui.c	FUNCTION_7	IF_20	CALL_52
0xa46	    0x488b05000000	            mov rax, qword [0x04000a8d] 	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0xa4d	      0xbe6d000000	                           mov esi, 0x6d	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0xa52	          0x4889c7	                            mov rdi, rax	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0xa55	      0xe800000000	                          call 0x4000a9a	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0xa5a	          0x4885c0	                           test rax, rax	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0xa5d	            0x752d	                           jne 0x4000acc	       728	gui.c	FUNCTION_7	IF_20	IF_21	CALL_53
0xa5f	    0x8b0500000000	            mov eax, dword [0x04000aa5] 	       730	gui.c	FUNCTION_7	IF_20	IF_21
0xa65	          0x83e801	                              sub eax, 1	       730	gui.c	FUNCTION_7	IF_20	IF_21
0xa68	    0x890500000000	            mov dword [0x04000aae], eax 	       730	gui.c	FUNCTION_7	IF_20	IF_21
0xa6e	      0xbf00000000	                              mov edi, 0	       731	gui.c	FUNCTION_7	IF_20	IF_21	CALL_54
0xa73	      0xe800000000	                          call 0x4000ab8	       731	gui.c	FUNCTION_7	IF_20	IF_21	CALL_54
0xa78	    0x8b0500000000	            mov eax, dword [0x04000abe] 	       732	gui.c	FUNCTION_7	IF_20	IF_21
0xa7e	          0x83c001	                              add eax, 1	       732	gui.c	FUNCTION_7	IF_20	IF_21
0xa81	    0x890500000000	            mov dword [0x04000ac7], eax 	       732	gui.c	FUNCTION_7	IF_20	IF_21
0xa87	      0xe800000000	                          call 0x4000acc	       733	gui.c	FUNCTION_7	IF_20	IF_21	CALL_55
0xa8c	      0xba0f000000	                            mov edx, 0xf	       738	gui.c	FUNCTION_7	IF_20	CALL_56
0xa91	      0xbe01000000	                              mov esi, 1	       738	gui.c	FUNCTION_7	IF_20	CALL_56
0xa96	      0xbf01000000	                              mov edi, 1	       738	gui.c	FUNCTION_7	IF_20	CALL_56
0xa9b	      0xe800000000	                          call 0x4000ae0	       738	gui.c	FUNCTION_7	IF_20	CALL_56
0xaa0	      0xe800000000	                          call 0x4000ae5	       742	gui.c	FUNCTION_7	IF_20	CALL_57
0xaa5	    0x488b05000000	            mov rax, qword [0x04000aec] 	       747	gui.c	FUNCTION_7	IF_20	IF_22
0xaac	          0x4885c0	                           test rax, rax	       747	gui.c	FUNCTION_7	IF_20	IF_22
0xaaf	            0x740f	                            je 0x4000b00	       747	gui.c	FUNCTION_7	IF_20	IF_22
0xab1	    0x488b05000000	            mov rax, qword [0x04000af8] 	       748	gui.c	FUNCTION_7	IF_20	CALL_58
0xab8	          0x4889c7	                            mov rdi, rax	       748	gui.c	FUNCTION_7	IF_20	CALL_58
0xabb	      0xe800000000	                          call 0x4000b00	       748	gui.c	FUNCTION_7	IF_20	CALL_58
0xac0	    0xc70500000000	               mov dword [0x04000b0a], 0	       749	gui.c	FUNCTION_7	IF_20
0xaca	    0x488b05000000	            mov rax, qword [0x04000b11] 	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0xad1	      0xb900000000	                              mov ecx, 0	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0xad6	      0xba00000000	                              mov edx, 0	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0xadb	      0xbe00000000	                              mov esi, 0	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0xae0	          0x4889c7	                            mov rdi, rax	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0xae3	      0xe800000000	                          call 0x4000b28	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0xae8	    0x488905000000	            mov qword [0x04000b2f], rax 	       751	gui.c	FUNCTION_7	IF_20	CALL_59
0xaef	    0x8b0500000000	            mov eax, dword [0x04000b35] 	       767	gui.c	FUNCTION_7	IF_20	IF_23
0xaf5	            0x85c0	                           test eax, eax	       767	gui.c	FUNCTION_7	IF_20	IF_23
0xaf7	            0x750f	                           jne 0x4000b48	       767	gui.c	FUNCTION_7	IF_20	IF_23
0xaf9	    0x488b05000000	            mov rax, qword [0x04000b40] 	       768	gui.c	FUNCTION_7	IF_20	CALL_62
0xb00	          0x4889c7	                            mov rdi, rax	       768	gui.c	FUNCTION_7	IF_20	CALL_62
0xb03	      0xe800000000	                          call 0x4000b48	       768	gui.c	FUNCTION_7	IF_20	CALL_62
0xb08	      0xe800000000	                          call 0x4000b4d	       772	gui.c	FUNCTION_7	IF_20	IF_24	CALL_63
0xb0d	            0x85c0	                           test eax, eax	       772	gui.c	FUNCTION_7	IF_20	IF_24	CALL_63
0xb0f	            0x7512	                           jne 0x4000b63	       772	gui.c	FUNCTION_7	IF_20	IF_24	CALL_63
0xb11	      0xbf00000000	                              mov edi, 0	       773	gui.c	FUNCTION_7	IF_20	CALL_65
0xb16	      0xe800000000	                          call 0x4000b5b	       773	gui.c	FUNCTION_7	IF_20	CALL_65
0xb1b	          0x4889c7	                            mov rdi, rax	       773	gui.c	FUNCTION_7	IF_20	CALL_65
0xb1e	      0xe800000000	                          call 0x4000b63	       773	gui.c	FUNCTION_7	IF_20	CALL_65
0xb23	    0x488b05000000	            mov rax, qword [0x04000b6a] 	       777	gui.c	FUNCTION_7	IF_20	IF_25
0xb2a	        0x4883f801	                              cmp rax, 1	       777	gui.c	FUNCTION_7	IF_20	IF_25
0xb2e	            0x7421	                            je 0x4000b91	       777	gui.c	FUNCTION_7	IF_20	IF_25
0xb30	      0xe800000000	                          call 0x4000b75	       778	gui.c	FUNCTION_7	IF_20	CALL_66
0xb35	            0xeb1a	                           jmp 0x4000b91	       780	gui.c	FUNCTION_7	IF_20
0xb37	              0x90	                                     nop	       630	gui.c	FUNCTION_7	IF_14
0xb38	    0xc70500000000	               mov dword [0x04000b82], 0	       790	gui.c	FUNCTION_7
0xb42	      0xbf00000000	                              mov edi, 0	       791	gui.c	FUNCTION_7	CALL_68
0xb47	      0xe800000000	                          call 0x4000b8c	       791	gui.c	FUNCTION_7	CALL_68
0xb4c	            0xeb04	                           jmp 0x4000b92	       791	gui.c	FUNCTION_7	CALL_68
0xb4e	              0x90	                                     nop	       623	gui.c	FUNCTION_7	IF_13
0xb4f	            0xeb01	                           jmp 0x4000b92	       623	gui.c	FUNCTION_7	IF_13
0xb51	              0x90	                                     nop	       780	gui.c	FUNCTION_7	IF_20
0xb52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       792	gui.c	FUNCTION_7
0xb56	    0x644833042528	                xor rax, qword fs:[0x28]	       792	gui.c	FUNCTION_7
0xb5f	            0x7405	                            je 0x4000ba6	       792	gui.c	FUNCTION_7
0xb61	      0xe800000000	                          call 0x4000ba6	       792	gui.c	FUNCTION_7
0xb66	    0x4881c4b80000	                           add rsp, 0xb8	       792	gui.c	FUNCTION_7
0xb6d	              0x5b	                                 pop rbx	       792	gui.c	FUNCTION_7
0xb6e	              0x5d	                                 pop rbp	       792	gui.c	FUNCTION_7
0xb6f	              0xc3	                                     ret	       792	gui.c	FUNCTION_7
gui_new_shellsize	ELSE,0:IF,0:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	6
0x1d71	              0x55	                                push rbp	      1695	gui.c	FUNCTION_24
0x1d72	          0x4889e5	                            mov rbp, rsp	      1695	gui.c	FUNCTION_24
0x1d75	      0xe800000000	                          call 0x4001dba	      1696	gui.c	FUNCTION_24	CALL_1
0x1d7a	              0x90	                                     nop	      1697	gui.c	FUNCTION_24
0x1d7b	              0x5d	                                 pop rbp	      1697	gui.c	FUNCTION_24
0x1d7c	              0xc3	                                     ret	      1697	gui.c	FUNCTION_24
concat_esc	ELSE,0:IF,2:CALL,3:functions,0:WHILE,2:SWITCH,0:DO,0:FOR,0	52
0x6de7	              0x55	                                push rbp	      5246	gui.c	FUNCTION_90
0x6de8	          0x4889e5	                            mov rbp, rsp	      5246	gui.c	FUNCTION_90
0x6deb	        0x4883ec30	                           sub rsp, 0x30	      5246	gui.c	FUNCTION_90
0x6def	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5246	gui.c	FUNCTION_90
0x6df3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5246	gui.c	FUNCTION_90
0x6df7	          0x8955dc	             mov dword [rbp - 0x24], edx	      5246	gui.c	FUNCTION_90
0x6dfa	      0xe984000000	                           jmp 0x4006ec3	      5247	gui.c	FUNCTION_90	WHILE_1
0x6dff	    0x488b05000000	            mov rax, qword [0x04006e46] 	      5250	gui.c	FUNCTION_90	WHILE_1
0x6e06	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5250	gui.c	FUNCTION_90	WHILE_1
0x6e0a	          0x4889d7	                            mov rdi, rdx	      5250	gui.c	FUNCTION_90	WHILE_1
0x6e0d	            0xffd0	                                call rax	      5250	gui.c	FUNCTION_90	WHILE_1
0x6e0f	          0x8945fc	                mov dword [rbp - 4], eax	      5250	gui.c	FUNCTION_90	WHILE_1
0x6e12	        0x837dfc01	                  cmp dword [rbp - 4], 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x6e16	            0x7e2e	                           jle 0x4006e86	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x6e18	            0xeb20	                           jmp 0x4006e7a	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x6e1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e1e	        0x488d5001	                      lea rdx, [rax + 1]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e22	        0x488955e0	             mov qword [rbp - 0x20], rdx	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e26	           0xfb600	                   movzx eax, byte [rax]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e29	           0xfb6d0	                           movzx edx, al	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e30	            0x89d6	                            mov esi, edx	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e32	          0x4889c7	                            mov rdi, rax	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e35	      0xe800000000	                          call 0x4006e7a	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x6e3a	        0x836dfc01	                  sub dword [rbp - 4], 1	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x6e3e	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x6e42	            0x79d6	                           jns 0x4006e5a	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x6e44	            0xeb3d	                           jmp 0x4006ec3	      5256	gui.c	FUNCTION_90	WHILE_1	IF_1
0x6e46	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x6e4a	           0xfb600	                   movzx eax, byte [rax]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x6e4d	           0xfb6c0	                           movzx eax, al	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x6e50	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x6e53	            0x7511	                           jne 0x4006ea6	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x6e55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x6e59	      0xbe5c000000	                           mov esi, 0x5c	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x6e5e	          0x4889c7	                            mov rdi, rax	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x6e61	      0xe800000000	                          call 0x4006ea6	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x6e66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x6e6a	           0xfb600	                   movzx eax, byte [rax]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x6e6d	           0xfb6d0	                           movzx edx, al	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x6e70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x6e74	            0x89d6	                            mov esi, edx	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x6e76	          0x4889c7	                            mov rdi, rax	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x6e79	      0xe800000000	                          call 0x4006ebe	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x6e7e	      0x488345e001	               add qword [rbp - 0x20], 1	      5262	gui.c	FUNCTION_90	WHILE_1
0x6e83	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5247	gui.c	FUNCTION_90	WHILE_1
0x6e87	           0xfb600	                   movzx eax, byte [rax]	      5247	gui.c	FUNCTION_90	WHILE_1
0x6e8a	            0x84c0	                             test al, al	      5247	gui.c	FUNCTION_90	WHILE_1
0x6e8c	     0xf856dffffff	                           jne 0x4006e3f	      5247	gui.c	FUNCTION_90	WHILE_1
0x6e92	              0x90	                                     nop	      5264	gui.c	FUNCTION_90
0x6e93	              0xc9	                                   leave	      5264	gui.c	FUNCTION_90
0x6e94	              0xc3	                                     ret	      5264	gui.c	FUNCTION_90
gui_enable_flush	ELSE,0:IF,0:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	8
0x239f	              0x55	                                push rbp	      2024	gui.c	FUNCTION_34
0x23a0	          0x4889e5	                            mov rbp, rsp	      2024	gui.c	FUNCTION_34
0x23a3	    0x8b0500000000	            mov eax, dword [0x040023e9] 	      2025	gui.c	FUNCTION_34
0x23a9	          0x83e801	                              sub eax, 1	      2025	gui.c	FUNCTION_34
0x23ac	    0x890500000000	            mov dword [0x040023f2], eax 	      2025	gui.c	FUNCTION_34
0x23b2	              0x90	                                     nop	      2026	gui.c	FUNCTION_34
0x23b3	              0x5d	                                 pop rbp	      2026	gui.c	FUNCTION_34
0x23b4	              0xc3	                                     ret	      2026	gui.c	FUNCTION_34
gui_stop_highlight	ELSE,1:IF,1:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	15
0x1de3	              0x55	                                push rbp	      1722	gui.c	ELSE_1	FUNCTION_27
0x1de4	          0x4889e5	                            mov rbp, rsp	      1722	gui.c	ELSE_1	FUNCTION_27
0x1de7	          0x897dfc	                mov dword [rbp - 4], edi	      1722	gui.c	ELSE_1	FUNCTION_27
0x1dea	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x1df1	            0x7e0c	                           jle 0x4001e3f	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x1df3	    0xc70500000000	               mov dword [0x04001e3d], 0	      1724	gui.c	ELSE_1	FUNCTION_27	IF_1
0x1dfd	            0xeb13	                           jmp 0x4001e52	      1727	gui.c	FUNCTION_27	ELSE_1
0x1dff	    0x8b0500000000	            mov eax, dword [0x04001e45] 	      1726	gui.c	FUNCTION_27
0x1e05	          0x8b55fc	                mov edx, dword [rbp - 4]	      1726	gui.c	FUNCTION_27
0x1e08	            0xf7d2	                                 not edx	      1726	gui.c	FUNCTION_27
0x1e0a	            0x21d0	                            and eax, edx	      1726	gui.c	FUNCTION_27
0x1e0c	    0x890500000000	            mov dword [0x04001e52], eax 	      1726	gui.c	FUNCTION_27
0x1e12	              0x90	                                     nop	      1727	gui.c	FUNCTION_27	ELSE_1
0x1e13	              0x5d	                                 pop rbp	      1727	gui.c	FUNCTION_27	ELSE_1
0x1e14	              0xc3	                                     ret	      1727	gui.c	FUNCTION_27	ELSE_1
gui_update_horiz_scrollbar	ELSE,1:IF,11:CALL,6:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	137
0x5c09	              0x55	                                push rbp	      4604	gui.c	ELSE_2	FUNCTION_70
0x5c0a	          0x4889e5	                            mov rbp, rsp	      4604	gui.c	ELSE_2	FUNCTION_70
0x5c0d	        0x4883ec30	                           sub rsp, 0x30	      4604	gui.c	ELSE_2	FUNCTION_70
0x5c11	          0x897ddc	             mov dword [rbp - 0x24], edi	      4604	gui.c	ELSE_2	FUNCTION_70
0x5c14	    0x8b0500000000	            mov eax, dword [0x04005c5a] 	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x5c1a	            0x85c0	                           test eax, eax	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x5c1c	     0xf8416020000	                            je 0x4005e78	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x5c22	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x5c26	            0x750f	                           jne 0x4005c77	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x5c28	    0x8b0500000000	            mov eax, dword [0x04005c6e] 	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x5c2e	          0x83f802	                              cmp eax, 2	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x5c31	     0xf8404020000	                            je 0x4005e7b	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x5c37	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c3b	            0x751f	                           jne 0x4005c9c	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c3d	    0x488b05000000	            mov rax, qword [0x04005c84] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c44	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c4a	            0x85c0	                           test eax, eax	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c4c	            0x740e	                            je 0x4005c9c	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c4e	    0x8b0500000000	            mov eax, dword [0x04005c94] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c54	            0x85c0	                           test eax, eax	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c56	     0xf85e2010000	                           jne 0x4005e7e	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5c5c	    0x488b05000000	            mov rax, qword [0x04005ca3] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x5c63	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x5c67	    0x488b05000000	            mov rax, qword [0x04005cae] 	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x5c6e	          0x488b00	                    mov rax, qword [rax]	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x5c71	          0x4839c2	                            cmp rdx, rax	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x5c74	            0x7e10	                           jle 0x4005cc6	      4620	gui.c	ELSE_2	FUNCTION_70	IF_4
0x5c76	    0x48c705000000	mov qword [0x04005cc1], 0xffffffffffffffff 	      4622	gui.c	ELSE_2	FUNCTION_70	IF_4
0x5c81	      0xe9bc010000	                           jmp 0x4005e82	      4623	gui.c	ELSE_2	FUNCTION_70	IF_4
0x5c86	    0x488b05000000	            mov rax, qword [0x04005ccd] 	      4626	gui.c	ELSE_2	FUNCTION_70
0x5c8d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4626	gui.c	ELSE_2	FUNCTION_70
0x5c93	            0x4898	                                    cdqe	      4626	gui.c	ELSE_2	FUNCTION_70
0x5c95	        0x488945f0	             mov qword [rbp - 0x10], rax	      4626	gui.c	ELSE_2	FUNCTION_70
0x5c99	    0x488b05000000	            mov rax, qword [0x04005ce0] 	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5ca0	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5ca6	            0x85c0	                           test eax, eax	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5ca8	            0x7423	                            je 0x4005d0d	      4627	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5caa	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4629	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5cb2	    0x488b05000000	            mov rax, qword [0x04005cf9] 	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5cb9	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5cbf	          0x83e801	                              sub eax, 1	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5cc2	            0x4898	                                    cdqe	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5cc4	        0x488945f8	                mov qword [rbp - 8], rax	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5cc8	      0xe991000000	                           jmp 0x4005d9e	      4633	gui.c	ELSE_2	FUNCTION_70	IF_5
0x5ccd	    0x488b05000000	            mov rax, qword [0x04005d14] 	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5cd4	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5cda	            0x4898	                                    cdqe	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5cdc	        0x488945e8	             mov qword [rbp - 0x18], rax	      4638	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5ce0	      0xe8c3fdffff	          call sym.gui_find_longest_lnum	      4640	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_1
0x5ce5	    0x488905000000	            mov qword [0x04005d2c], rax 	      4640	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_1
0x5cec	    0x488b05000000	            mov rax, qword [0x04005d33] 	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x5cf3	          0x4889c7	                            mov rdi, rax	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x5cf6	      0xe82bfdffff	                call sym.scroll_line_len	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x5cfb	            0x4898	                                    cdqe	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x5cfd	        0x488945f8	                mov qword [rbp - 8], rax	      4641	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_2
0x5d01	      0xe800000000	                          call 0x4005d46	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x5d06	            0x85c0	                           test eax, eax	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x5d08	            0x7428	                            je 0x4005d72	      4644	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	CALL_3
0x5d0a	    0x488b05000000	            mov rax, qword [0x04005d51] 	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d11	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d17	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d1b	            0x39d0	                            cmp eax, edx	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d1d	            0x7c13	                            jl 0x4005d72	      4647	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d1f	    0x488b05000000	            mov rax, qword [0x04005d66] 	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d26	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d2c	            0x4898	                                    cdqe	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d2e	        0x488945f8	                mov qword [rbp - 8], rax	      4648	gui.c	ELSE_2	FUNCTION_70	ELSE_1	IF_6	IF_7
0x5d32	    0x488b05000000	            mov rax, qword [0x04005d79] 	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5d39	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5d3f	          0x83e801	                              sub eax, 1	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5d42	            0x4898	                                    cdqe	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5d44	        0x480145f8	                add qword [rbp - 8], rax	      4653	gui.c	ELSE_2	FUNCTION_70	ELSE_1
0x5d48	      0xe800000000	                          call 0x4005d8d	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x5d4d	            0x4898	                                    cdqe	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x5d4f	        0x482945f0	             sub qword [rbp - 0x10], rax	      4657	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_4
0x5d53	      0xe800000000	                          call 0x4005d98	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x5d58	            0x4898	                                    cdqe	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x5d5a	        0x482945f8	                sub qword [rbp - 8], rax	      4659	gui.c	ELSE_2	FUNCTION_70	ELSE_1	CALL_5
0x5d5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d62	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d66	        0x4883c001	                              add rax, 1	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d6a	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d6e	            0x7d10	                           jge 0x4005dc0	      4664	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d70	        0x488b45f8	                mov rax, qword [rbp - 8]	      4665	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d74	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      4665	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d78	        0x4883c001	                              add rax, 1	      4665	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d7c	        0x488945e8	             mov qword [rbp - 0x18], rax	      4665	gui.c	ELSE_2	FUNCTION_70	IF_8
0x5d80	    0x488b05000000	            mov rax, qword [0x04005dc7] 	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5d87	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5d8d	            0x85c0	                           test eax, eax	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5d8f	            0x742b	                            je 0x4005dfc	      4669	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5d91	        0x488b45f8	                mov rax, qword [rbp - 8]	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5d95	        0x4883c001	                              add rax, 1	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5d99	        0x482b45f0	             sub rax, qword [rbp - 0x10]	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5d9d	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5da1	        0x488945e8	             mov qword [rbp - 0x18], rax	      4671	gui.c	ELSE_2	FUNCTION_70	IF_9
0x5da5	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4672	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x5daa	            0x7910	                           jns 0x4005dfc	      4672	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x5dac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4674	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x5db0	        0x480145f0	            add qword [rbp - 0x10], rax 	      4674	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x5db4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4675	gui.c	ELSE_2	FUNCTION_70	IF_9	IF_10
0x5dbc	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5dc0	            0x7527	                           jne 0x4005e29	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5dc2	    0x488b05000000	            mov rax, qword [0x04005e09] 	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5dc9	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5dcd	            0x751a	                           jne 0x4005e29	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5dcf	    0x488b05000000	            mov rax, qword [0x04005e16] 	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5dd6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5dda	            0x750d	                           jne 0x4005e29	      4679	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5ddc	    0x488b05000000	            mov rax, qword [0x04005e23] 	      4680	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5de3	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4680	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5de7	            0x7458	                            je 0x4005e81	      4680	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5de9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4683	gui.c	ELSE_2	FUNCTION_70
0x5ded	    0x488905000000	            mov qword [0x04005e34], rax 	      4683	gui.c	ELSE_2	FUNCTION_70
0x5df4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4684	gui.c	ELSE_2	FUNCTION_70
0x5df8	    0x488905000000	            mov qword [0x04005e3f], rax 	      4684	gui.c	ELSE_2	FUNCTION_70
0x5dff	        0x488b45f8	                mov rax, qword [rbp - 8]	      4685	gui.c	ELSE_2	FUNCTION_70
0x5e03	    0x488905000000	            mov qword [0x04005e4a], rax 	      4685	gui.c	ELSE_2	FUNCTION_70
0x5e0a	    0x488b05000000	            mov rax, qword [0x04005e51] 	      4686	gui.c	ELSE_2	FUNCTION_70
0x5e11	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4686	gui.c	ELSE_2	FUNCTION_70
0x5e17	    0x890500000000	            mov dword [0x04005e5d], eax 	      4686	gui.c	ELSE_2	FUNCTION_70
0x5e1d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x5e21	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x5e25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x5e29	          0x4889c6	                            mov rsi, rax	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x5e2c	      0xbf00000000	                              mov edi, 0	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x5e31	      0xe800000000	                          call 0x4005e76	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x5e36	            0xeb0a	                           jmp 0x4005e82	      4688	gui.c	ELSE_2	FUNCTION_70	CALL_6
0x5e38	              0x90	                                     nop	      4608	gui.c	ELSE_2	FUNCTION_70	IF_1
0x5e39	            0xeb07	                           jmp 0x4005e82	      4608	gui.c	ELSE_2	FUNCTION_70	IF_1
0x5e3b	              0x90	                                     nop	      4611	gui.c	ELSE_2	FUNCTION_70	IF_2
0x5e3c	            0xeb04	                           jmp 0x4005e82	      4611	gui.c	ELSE_2	FUNCTION_70	IF_2
0x5e3e	              0x90	                                     nop	      4614	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5e3f	            0xeb01	                           jmp 0x4005e82	      4614	gui.c	ELSE_2	FUNCTION_70	IF_3
0x5e41	              0x90	                                     nop	      4681	gui.c	ELSE_2	FUNCTION_70	IF_11
0x5e42	              0xc9	                                   leave	      4689	gui.c	ELSE_2	FUNCTION_70
0x5e43	              0xc3	                                     ret	      4689	gui.c	ELSE_2	FUNCTION_70
gui_focus_change	ELSE,0:IF,1:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	37
0x60ff	              0x55	                                push rbp	      4816	gui.c	FUNCTION_78
0x6100	          0x4889e5	                            mov rbp, rsp	      4816	gui.c	FUNCTION_78
0x6103	        0x4883ec20	                           sub rsp, 0x20	      4816	gui.c	FUNCTION_78
0x6107	          0x897dec	             mov dword [rbp - 0x14], edi	      4816	gui.c	FUNCTION_78
0x610a	    0x64488b042528	                mov rax, qword fs:[0x28]	      4816	gui.c	FUNCTION_78
0x6113	        0x488945f8	                mov qword [rbp - 8], rax	      4816	gui.c	FUNCTION_78
0x6117	            0x31c0	                            xor eax, eax	      4816	gui.c	FUNCTION_78
0x6119	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4822	gui.c	FUNCTION_78
0x611c	    0x890500000000	            mov dword [0x04006162], eax 	      4822	gui.c	FUNCTION_78
0x6122	      0xbe00000000	                              mov esi, 0	      4823	gui.c	FUNCTION_78	CALL_1
0x6127	      0xbf01000000	                              mov edi, 1	      4823	gui.c	FUNCTION_78	CALL_1
0x612c	      0xe800000000	                          call 0x4006171	      4823	gui.c	FUNCTION_78	CALL_1
0x6131	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4826	gui.c	FUNCTION_78	CALL_2
0x6134	            0x89c7	                            mov edi, eax	      4826	gui.c	FUNCTION_78	CALL_2
0x6136	      0xe800000000	                          call 0x400617b	      4826	gui.c	FUNCTION_78	CALL_2
0x613b	    0x8b0500000000	            mov eax, dword [0x04006181] 	      4832	gui.c	FUNCTION_78	IF_1
0x6141	            0x85c0	                           test eax, eax	      4832	gui.c	FUNCTION_78	IF_1
0x6143	            0x752e	                           jne 0x40061b3	      4832	gui.c	FUNCTION_78	IF_1
0x6145	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      4836	gui.c	FUNCTION_78	IF_1
0x6149	        0xc645f1fd	              mov byte [rbp - 0xf], 0xfd	      4837	gui.c	FUNCTION_78	IF_1
0x614d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4838	gui.c	FUNCTION_78	IF_1
0x6151	            0x7407	                            je 0x400619a	      4838	gui.c	FUNCTION_78	IF_1
0x6153	      0xb862000000	                           mov eax, 0x62	      4838	gui.c	FUNCTION_78	IF_1
0x6158	            0xeb05	                           jmp 0x400619f	      4838	gui.c	FUNCTION_78	IF_1
0x615a	      0xb863000000	                           mov eax, 0x63	      4838	gui.c	FUNCTION_78	IF_1
0x615f	          0x8845f2	                mov byte [rbp - 0xe], al	      4838	gui.c	FUNCTION_78	IF_1
0x6162	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x6166	      0xbe03000000	                              mov esi, 3	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x616b	          0x4889c7	                            mov rdi, rax	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x616e	      0xe800000000	                          call 0x40061b3	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x6173	              0x90	                                     nop	      4842	gui.c	FUNCTION_78
0x6174	        0x488b45f8	                mov rax, qword [rbp - 8]	      4842	gui.c	FUNCTION_78
0x6178	    0x644833042528	                xor rax, qword fs:[0x28]	      4842	gui.c	FUNCTION_78
0x6181	            0x7405	                            je 0x40061c8	      4842	gui.c	FUNCTION_78
0x6183	      0xe800000000	                          call 0x40061c8	      4842	gui.c	FUNCTION_78
0x6188	              0xc9	                                   leave	      4842	gui.c	FUNCTION_78
0x6189	              0xc3	                                     ret	      4842	gui.c	FUNCTION_78
xy2win	ELSE,5:IF,7:CALL,11:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	130
0x650a	              0x55	                                push rbp	      4949	gui.c	FUNCTION_81
0x650b	          0x4889e5	                            mov rbp, rsp	      4949	gui.c	FUNCTION_81
0x650e	        0x4883ec30	                           sub rsp, 0x30	      4949	gui.c	FUNCTION_81
0x6512	          0x897ddc	             mov dword [rbp - 0x24], edi	      4949	gui.c	FUNCTION_81
0x6515	          0x8975d8	             mov dword [rbp - 0x28], esi	      4949	gui.c	FUNCTION_81
0x6518	    0x64488b042528	                mov rax, qword fs:[0x28]	      4949	gui.c	FUNCTION_81
0x6521	        0x488945f8	                mov qword [rbp - 8], rax	      4949	gui.c	FUNCTION_81
0x6525	            0x31c0	                            xor eax, eax	      4949	gui.c	FUNCTION_81
0x6527	    0x8b0500000000	            mov eax, dword [0x0400656d] 	      4954	gui.c	FUNCTION_81	CALL_1
0x652d	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      4954	gui.c	FUNCTION_81	CALL_1
0x6530	            0x29c2	                            sub edx, eax	      4954	gui.c	FUNCTION_81	CALL_1
0x6532	            0x89d0	                            mov eax, edx	      4954	gui.c	FUNCTION_81	CALL_1
0x6534	    0x8b0d00000000	            mov ecx, dword [0x0400657a] 	      4954	gui.c	FUNCTION_81	CALL_1
0x653a	              0x99	                                     cdq	      4954	gui.c	FUNCTION_81	CALL_1
0x653b	            0xf7f9	                                idiv ecx	      4954	gui.c	FUNCTION_81	CALL_1
0x653d	          0x8945e8	             mov dword [rbp - 0x18], eax	      4954	gui.c	FUNCTION_81	CALL_1
0x6540	    0x8b0500000000	            mov eax, dword [0x04006586] 	      4955	gui.c	FUNCTION_81	CALL_2
0x6546	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4955	gui.c	FUNCTION_81	CALL_2
0x6549	            0x29c2	                            sub edx, eax	      4955	gui.c	FUNCTION_81	CALL_2
0x654b	            0x89d0	                            mov eax, edx	      4955	gui.c	FUNCTION_81	CALL_2
0x654d	    0x8b3500000000	            mov esi, dword [0x04006593] 	      4955	gui.c	FUNCTION_81	CALL_2
0x6553	              0x99	                                     cdq	      4955	gui.c	FUNCTION_81	CALL_2
0x6554	            0xf7fe	                                idiv esi	      4955	gui.c	FUNCTION_81	CALL_2
0x6556	          0x8945ec	             mov dword [rbp - 0x14], eax	      4955	gui.c	FUNCTION_81	CALL_2
0x6559	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4956	gui.c	FUNCTION_81	IF_1
0x655c	            0x85c0	                           test eax, eax	      4956	gui.c	FUNCTION_81	IF_1
0x655e	            0x7807	                            js 0x40065a7	      4956	gui.c	FUNCTION_81	IF_1
0x6560	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4956	gui.c	FUNCTION_81	IF_1
0x6563	            0x85c0	                           test eax, eax	      4956	gui.c	FUNCTION_81	IF_1
0x6565	            0x790a	                           jns 0x40065b1	      4956	gui.c	FUNCTION_81	IF_1
0x6567	      0xb800000000	                              mov eax, 0	      4957	gui.c	FUNCTION_81	IF_1
0x656c	      0xe955010000	                           jmp 0x4006706	      4957	gui.c	FUNCTION_81	IF_1
0x6571	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      4958	gui.c	FUNCTION_81	CALL_3
0x6575	        0x488d45e8	                   lea rax, [rbp - 0x18]	      4958	gui.c	FUNCTION_81	CALL_3
0x6579	          0x4889d6	                            mov rsi, rdx	      4958	gui.c	FUNCTION_81	CALL_3
0x657c	          0x4889c7	                            mov rdi, rax	      4958	gui.c	FUNCTION_81	CALL_3
0x657f	      0xe800000000	                          call 0x40065c4	      4958	gui.c	FUNCTION_81	CALL_3
0x6584	        0x488945f0	             mov qword [rbp - 0x10], rax	      4958	gui.c	FUNCTION_81	CALL_3
0x6588	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4959	gui.c	FUNCTION_81	IF_2
0x658d	            0x750a	                           jne 0x40065d9	      4959	gui.c	FUNCTION_81	IF_2
0x658f	      0xb800000000	                              mov eax, 0	      4960	gui.c	FUNCTION_81	IF_2
0x6594	      0xe92d010000	                           jmp 0x4006706	      4960	gui.c	FUNCTION_81	IF_2
0x6599	    0x8b0500000000	            mov eax, dword [0x040065df] 	      4962	gui.c	FUNCTION_81	IF_3
0x659f	      0x3d01020000	                          cmp eax, 0x201	      4962	gui.c	FUNCTION_81	IF_3
0x65a4	            0x740d	                            je 0x40065f3	      4962	gui.c	FUNCTION_81	IF_3
0x65a6	    0x8b0500000000	            mov eax, dword [0x040065ec] 	      4962	gui.c	FUNCTION_81	IF_3
0x65ac	      0x3d00030000	                          cmp eax, 0x300	      4962	gui.c	FUNCTION_81	IF_3
0x65b1	            0x7540	                           jne 0x4006633	      4962	gui.c	FUNCTION_81	IF_3
0x65b3	    0x8b0500000000	            mov eax, dword [0x040065f9] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65b9	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65bc	            0x29c2	                            sub edx, eax	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65be	            0x89d0	                            mov eax, edx	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65c0	    0x8b0d00000000	            mov ecx, dword [0x04006606] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65c6	              0x99	                                     cdq	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65c7	            0xf7f9	                                idiv ecx	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65c9	            0x89c2	                            mov edx, eax	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65cb	    0x8b0500000000	            mov eax, dword [0x04006611] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65d1	            0x39c2	                            cmp edx, eax	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65d3	            0x7c0f	                            jl 0x4006624	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65d5	      0xbf0f000000	                            mov edi, 0xf	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x65da	      0xe800000000	                          call 0x400661f	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x65df	      0xe9de000000	                           jmp 0x4006702	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65e4	      0xbf0e000000	                            mov edi, 0xe	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x65e9	      0xe800000000	                          call 0x400662e	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x65ee	      0xe9cf000000	                           jmp 0x4006702	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x65f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x65f7	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x65fd	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x6600	            0x39c2	                            cmp edx, eax	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x6602	            0x7d0f	                           jge 0x4006653	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x6604	      0xbf09000000	                              mov edi, 9	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x6609	      0xe800000000	                          call 0x400664e	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x660e	      0xe9af000000	                           jmp 0x4006702	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x6613	    0x8b0500000000	            mov eax, dword [0x04006659] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x6619	          0x83e008	                              and eax, 8	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x661c	            0x85c0	                           test eax, eax	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x661e	            0x7556	                           jne 0x40066b6	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x6620	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x6624	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x662a	            0x85c0	                           test eax, eax	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x662c	            0x7e48	                           jle 0x40066b6	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x662e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x6632	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x6638	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x663b	            0x39c2	                            cmp edx, eax	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x663d	            0x7537	                           jne 0x40066b6	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x663f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x6643	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x6649	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x664c	            0x39c2	                            cmp edx, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x664e	            0x7510	                           jne 0x40066a0	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x6650	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x6654	          0x4889c7	                            mov rdi, rax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x6657	      0xe800000000	                          call 0x400669c	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x665c	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x665e	            0x7516	                           jne 0x40066b6	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x6660	    0x8b0500000000	            mov eax, dword [0x040066a6] 	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x6666	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x6668	            0x750c	                           jne 0x40066b6	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x666a	      0xbf0c000000	                            mov edi, 0xc	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x666f	      0xe800000000	                          call 0x40066b4	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x6674	            0xeb4c	                           jmp 0x4006702	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x6676	    0x8b0500000000	            mov eax, dword [0x040066bc] 	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x667c	          0x83e008	                              and eax, 8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x667f	            0x85c0	                           test eax, eax	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x6681	            0x7535	                           jne 0x40066f8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x6683	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x6687	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x668d	            0x85c0	                           test eax, eax	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x668f	            0x7e27	                           jle 0x40066f8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x6691	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x6695	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x669b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x669e	            0x39c2	                            cmp edx, eax	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x66a0	            0x7516	                           jne 0x40066f8	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x66a2	    0x8b0500000000	            mov eax, dword [0x040066e8] 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x66a8	            0x85c0	                           test eax, eax	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x66aa	            0x750c	                           jne 0x40066f8	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x66ac	      0xbf0a000000	                            mov edi, 0xa	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x66b1	      0xe800000000	                          call 0x40066f6	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x66b6	            0xeb0a	                           jmp 0x4006702	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x66b8	      0xbffeffffff	                     mov edi, 0xfffffffe	      4978	gui.c	FUNCTION_81	CALL_11
0x66bd	      0xe800000000	                          call 0x4006702	      4978	gui.c	FUNCTION_81	CALL_11
0x66c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4980	gui.c	FUNCTION_81
0x66c6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4981	gui.c	FUNCTION_81
0x66ca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4981	gui.c	FUNCTION_81
0x66d3	            0x7405	                            je 0x400671a	      4981	gui.c	FUNCTION_81
0x66d5	      0xe800000000	                          call 0x400671a	      4981	gui.c	FUNCTION_81
0x66da	              0xc9	                                   leave	      4981	gui.c	FUNCTION_81
0x66db	              0xc3	                                     ret	      4981	gui.c	FUNCTION_81
send_tabline_event	ELSE,0:IF,2:CALL,5:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	47
0x4965	              0x55	                                push rbp	      3825	gui.c	FUNCTION_58
0x4966	          0x4889e5	                            mov rbp, rsp	      3825	gui.c	FUNCTION_58
0x4969	        0x4883ec20	                           sub rsp, 0x20	      3825	gui.c	FUNCTION_58
0x496d	          0x897dec	             mov dword [rbp - 0x14], edi	      3825	gui.c	FUNCTION_58
0x4970	    0x64488b042528	                mov rax, qword fs:[0x28]	      3825	gui.c	FUNCTION_58
0x4979	        0x488945f8	                mov qword [rbp - 8], rax	      3825	gui.c	FUNCTION_58
0x497d	            0x31c0	                            xor eax, eax	      3825	gui.c	FUNCTION_58
0x497f	    0x488b05000000	            mov rax, qword [0x040049c6] 	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4986	          0x4889c7	                            mov rdi, rax	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4989	      0xe800000000	                          call 0x40049ce	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x498e	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4991	            0x7507	                           jne 0x40049da	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4993	      0xb800000000	                              mov eax, 0	      3829	gui.c	FUNCTION_58	IF_1
0x4998	            0xeb6a	                           jmp 0x4004a44	      3829	gui.c	FUNCTION_58	IF_1
0x499a	    0x8b0500000000	            mov eax, dword [0x040049e0] 	      3832	gui.c	FUNCTION_58	IF_2
0x49a0	            0x85c0	                           test eax, eax	      3832	gui.c	FUNCTION_58	IF_2
0x49a2	            0x750a	                           jne 0x40049ee	      3832	gui.c	FUNCTION_58	IF_2
0x49a4	    0x8b0500000000	            mov eax, dword [0x040049ea] 	      3834	gui.c	FUNCTION_58	IF_2
0x49aa	            0x85c0	                           test eax, eax	      3834	gui.c	FUNCTION_58	IF_2
0x49ac	            0x741d	                            je 0x4004a0b	      3834	gui.c	FUNCTION_58	IF_2
0x49ae	    0x488b05000000	            mov rax, qword [0x040049f5] 	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x49b5	          0x4889c7	                            mov rdi, rax	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x49b8	      0xe800000000	                          call 0x40049fd	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x49bd	            0x89c7	                            mov edi, eax	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x49bf	      0xe800000000	                          call 0x4004a04	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x49c4	      0xb800000000	                              mov eax, 0	      3840	gui.c	FUNCTION_58	IF_2
0x49c9	            0xeb39	                           jmp 0x4004a44	      3840	gui.c	FUNCTION_58	IF_2
0x49cb	        0xc645f09b	            mov byte [rbp - 0x10], 0x9b 	      3843	gui.c	FUNCTION_58
0x49cf	        0xc645f1f0	              mov byte [rbp - 0xf], 0xf0	      3844	gui.c	FUNCTION_58
0x49d3	        0xc645f258	              mov byte [rbp - 0xe], 0x58	      3845	gui.c	FUNCTION_58
0x49d7	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3846	gui.c	FUNCTION_58	CALL_4
0x49db	      0xbe03000000	                              mov esi, 3	      3846	gui.c	FUNCTION_58	CALL_4
0x49e0	          0x4889c7	                            mov rdi, rax	      3846	gui.c	FUNCTION_58	CALL_4
0x49e3	      0xe800000000	                          call 0x4004a28	      3846	gui.c	FUNCTION_58	CALL_4
0x49e8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3847	gui.c	FUNCTION_58
0x49eb	          0x8845f0	               mov byte [rbp - 0x10], al	      3847	gui.c	FUNCTION_58
0x49ee	        0x488d45f0	                   lea rax, [rbp - 0x10]	      3848	gui.c	FUNCTION_58	CALL_5
0x49f2	      0xbe01000000	                              mov esi, 1	      3848	gui.c	FUNCTION_58	CALL_5
0x49f7	          0x4889c7	                            mov rdi, rax	      3848	gui.c	FUNCTION_58	CALL_5
0x49fa	      0xe800000000	                          call 0x4004a3f	      3848	gui.c	FUNCTION_58	CALL_5
0x49ff	      0xb801000000	                              mov eax, 1	      3849	gui.c	FUNCTION_58
0x4a04	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3850	gui.c	FUNCTION_58
0x4a08	    0x644833142528	                xor rdx, qword fs:[0x28]	      3850	gui.c	FUNCTION_58
0x4a11	            0x7405	                            je 0x4004a58	      3850	gui.c	FUNCTION_58
0x4a13	      0xe800000000	                          call 0x4004a58	      3850	gui.c	FUNCTION_58
0x4a18	              0xc9	                                   leave	      3850	gui.c	FUNCTION_58
0x4a19	              0xc3	                                     ret	      3850	gui.c	FUNCTION_58
gui_find_scrollbar	ELSE,0:IF,1:CALL,0:functions,1:WHILE,0:SWITCH,0:DO,0:FOR,0	33
0x4bc6	              0x55	                                push rbp	      3929	gui.c	FUNCTION_62
0x4bc7	          0x4889e5	                            mov rbp, rsp	      3929	gui.c	FUNCTION_62
0x4bca	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3929	gui.c	FUNCTION_62
0x4bce	    0x488b05000000	            mov rax, qword [0x04004c15] 	      3932	gui.c	FUNCTION_62	IF_1
0x4bd5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3932	gui.c	FUNCTION_62	IF_1
0x4bd9	            0x7507	                           jne 0x4004c22	      3932	gui.c	FUNCTION_62	IF_1
0x4bdb	      0xb800000000	                              mov eax, 0	      3933	gui.c	FUNCTION_62	IF_1
0x4be0	            0xeb5f	                           jmp 0x4004c81	      3933	gui.c	FUNCTION_62	IF_1
0x4be2	    0x488b05000000	            mov rax, qword [0x04004c29] 	      3934	gui.c	FUNCTION_62
0x4be9	        0x488945f8	                mov qword [rbp - 8], rax	      3934	gui.c	FUNCTION_62
0x4bed	            0xeb46	                           jmp 0x4004c75	      3934	gui.c	FUNCTION_62
0x4bef	        0x488b45f8	                mov rax, qword [rbp - 8]	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4bf3	    0x488b80901800	          mov rax, qword [rax + 0x1890] 	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4bfa	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4bfe	            0x750c	                           jne 0x4004c4c	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4c00	        0x488b45f8	                mov rax, qword [rbp - 8]	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4c04	    0x480590180000	                         add rax, 0x1890	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4c0a	            0xeb35	                           jmp 0x4004c81	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4c0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4c10	    0x488b80e01800	          mov rax, qword [rax + 0x18e0] 	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4c17	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4c1b	            0x750c	                           jne 0x4004c69	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4c1d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4c21	    0x4805e0180000	                         add rax, 0x18e0	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4c27	            0xeb18	                           jmp 0x4004c81	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4c29	        0x488b45f8	                mov rax, qword [rbp - 8]	      3934	gui.c	FUNCTION_62
0x4c2d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3934	gui.c	FUNCTION_62
0x4c31	        0x488945f8	                mov qword [rbp - 8], rax	      3934	gui.c	FUNCTION_62
0x4c35	      0x48837df800	                  cmp qword [rbp - 8], 0	      3934	gui.c	FUNCTION_62
0x4c3a	            0x75b3	                           jne 0x4004c2f	      3934	gui.c	FUNCTION_62
0x4c3c	      0xb800000000	                              mov eax, 0	      3941	gui.c	FUNCTION_62
0x4c41	              0x5d	                                 pop rbp	      3942	gui.c	FUNCTION_62
0x4c42	              0xc3	                                     ret	      3942	gui.c	FUNCTION_62
get_find_dialog_text	ELSE,1:IF,7:CALL,10:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	166
0x6bb3	              0x55	                                push rbp	      5188	gui.c	FUNCTION_89
0x6bb4	          0x4889e5	                            mov rbp, rsp	      5188	gui.c	FUNCTION_89
0x6bb7	        0x4883ec30	                           sub rsp, 0x30	      5188	gui.c	FUNCTION_89
0x6bbb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5188	gui.c	FUNCTION_89
0x6bbf	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5188	gui.c	FUNCTION_89
0x6bc3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5188	gui.c	FUNCTION_89
0x6bc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5191	gui.c	FUNCTION_89	IF_1
0x6bcb	           0xfb600	                   movzx eax, byte [rax]	      5191	gui.c	FUNCTION_89	IF_1
0x6bce	            0x84c0	                             test al, al	      5191	gui.c	FUNCTION_89	IF_1
0x6bd0	            0x750b	                           jne 0x4006c1d	      5191	gui.c	FUNCTION_89	IF_1
0x6bd2	      0xe800000000	                          call 0x4006c17	      5192	gui.c	FUNCTION_89	CALL_1
0x6bd7	        0x488945f8	                mov qword [rbp - 8], rax	      5192	gui.c	FUNCTION_89	CALL_1
0x6bdb	            0xeb08	                           jmp 0x4006c25	      5192	gui.c	FUNCTION_89	CALL_1
0x6bdd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5194	gui.c	FUNCTION_89	ELSE_1
0x6be1	        0x488945f8	                mov qword [rbp - 8], rax	      5194	gui.c	FUNCTION_89	ELSE_1
0x6be5	      0x48837df800	                  cmp qword [rbp - 8], 0	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x6bea	     0xf84f1010000	                            je 0x4006e21	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x6bf0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x6bf4	          0x4889c7	                            mov rdi, rax	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x6bf7	      0xe800000000	                          call 0x4006c3c	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x6bfc	        0x488945f8	                mov qword [rbp - 8], rax	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x6c00	      0x48837df800	                  cmp qword [rbp - 8], 0	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x6c05	     0xf84d6010000	                            je 0x4006e21	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x6c0b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x6c0f	          0x4889c7	                            mov rdi, rax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x6c12	      0xe800000000	                          call 0x4006c57	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x6c17	          0x8945f0	             mov dword [rbp - 0x10], eax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x6c1a	        0x837df001	               cmp dword [rbp - 0x10], 1	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c1e	            0x7e3e	                           jle 0x4006c9e	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c20	        0x488b45f8	                mov rax, qword [rbp - 8]	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c24	      0xba02000000	                              mov edx, 2	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c29	      0xbe00000000	                              mov esi, 0	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c2e	          0x4889c7	                            mov rdi, rax	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c31	      0xe800000000	                          call 0x4006c76	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c36	            0x85c0	                           test eax, eax	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c38	            0x7524	                           jne 0x4006c9e	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x6c3a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c3d	          0x83e801	                              sub eax, 1	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c40	          0x4863d0	                         movsxd rdx, eax	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c43	        0x488b45f8	                mov rax, qword [rbp - 8]	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c47	        0x488d4802	                      lea rcx, [rax + 2]	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c4f	          0x4889ce	                            mov rsi, rcx	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c52	          0x4889c7	                            mov rdi, rax	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c55	      0xe800000000	                          call 0x4006c9a	      5206	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_5
0x6c5a	        0x836df002	               sub dword [rbp - 0x10], 2	      5207	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4
0x6c5e	        0x837df001	               cmp dword [rbp - 0x10], 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c62	            0x7e66	                           jle 0x4006d0a	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c64	        0x488b45f8	                mov rax, qword [rbp - 8]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c68	           0xfb600	                   movzx eax, byte [rax]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c6b	            0x3c5c	                            cmp al, 0x5c	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c6d	            0x755b	                           jne 0x4006d0a	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c73	        0x4883c001	                              add rax, 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c77	           0xfb600	                   movzx eax, byte [rax]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c7a	            0x3c63	                            cmp al, 0x63	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c7c	            0x740f	                            je 0x4006ccd	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c82	        0x4883c001	                              add rax, 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c86	           0xfb600	                   movzx eax, byte [rax]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c89	            0x3c43	                            cmp al, 0x43	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c8b	            0x753d	                           jne 0x4006d0a	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c91	        0x4883c001	                              add rax, 1	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c95	           0xfb600	                   movzx eax, byte [rax]	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c98	            0x3c43	                            cmp al, 0x43	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c9a	           0xf94c0	                                 sete al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6c9d	           0xfb6d0	                           movzx edx, al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6ca0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6ca4	            0x8910	                    mov dword [rax], edx	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6ca6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6ca9	          0x83e801	                              sub eax, 1	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6cac	          0x4863d0	                         movsxd rdx, eax	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6caf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6cb3	        0x488d4802	                      lea rcx, [rax + 2]	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6cb7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6cbb	          0x4889ce	                            mov rsi, rcx	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6cbe	          0x4889c7	                            mov rdi, rax	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6cc1	      0xe800000000	                          call 0x4006d06	      5214	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5	CALL_6
0x6cc6	        0x836df002	               sub dword [rbp - 0x10], 2	      5215	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x6cca	        0x837df003	               cmp dword [rbp - 0x10], 3	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6cce	            0x7e7d	                           jle 0x4006d8d	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6cd0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x6cd4	      0xba02000000	                              mov edx, 2	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x6cd9	      0xbe00000000	                              mov esi, 0	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x6cde	          0x4889c7	                            mov rdi, rax	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x6ce1	      0xe800000000	                          call 0x4006d26	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x6ce6	            0x85c0	                           test eax, eax	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x6ce8	            0x7563	                           jne 0x4006d8d	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x6cea	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6ced	            0x4898	                                    cdqe	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6cef	        0x488d50fe	                      lea rdx, [rax - 2]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6cf3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6cf7	          0x4801d0	                            add rax, rdx	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6cfa	      0xba02000000	                              mov edx, 2	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6cff	      0xbe00000000	                              mov esi, 0	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6d04	          0x4889c7	                            mov rdi, rax	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6d07	      0xe800000000	                          call 0x4006d4c	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6d0c	            0x85c0	                           test eax, eax	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6d0e	            0x753d	                           jne 0x4006d8d	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x6d10	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5223	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6d14	    0xc70001000000	                      mov dword [rax], 1	      5223	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6d1a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d1d	          0x83e804	                              sub eax, 4	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d20	          0x4863d0	                         movsxd rdx, eax	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d23	        0x488b45f8	                mov rax, qword [rbp - 8]	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d27	        0x488d4802	                      lea rcx, [rax + 2]	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d2b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d2f	          0x4889ce	                            mov rsi, rcx	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d32	          0x4889c7	                            mov rdi, rax	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d35	      0xe800000000	                          call 0x4006d7a	      5224	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_9
0x6d3a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6d3d	            0x4898	                                    cdqe	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6d3f	        0x488d50fc	                      lea rdx, [rax - 4]	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6d43	        0x488b45f8	                mov rax, qword [rbp - 8]	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6d47	          0x4801d0	                            add rax, rdx	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6d4a	          0xc60000	                       mov byte [rax], 0	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x6d4d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x6d54	            0xeb7c	                           jmp 0x4006e12	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x6d56	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d59	          0x4863d0	                         movsxd rdx, eax	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d5c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d60	          0x4801d0	                            add rax, rdx	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d63	           0xfb600	                   movzx eax, byte [rax]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d66	            0x3c5c	                            cmp al, 0x5c	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d68	            0x7564	                           jne 0x4006e0e	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d6a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d6d	            0x4898	                                    cdqe	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d6f	        0x488d5001	                      lea rdx, [rax + 1]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d73	        0x488b45f8	                mov rax, qword [rbp - 8]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d77	          0x4801d0	                            add rax, rdx	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d7a	           0xfb600	                   movzx eax, byte [rax]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d7d	            0x3c2f	                            cmp al, 0x2f	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d7f	            0x7417	                            je 0x4006dd8	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d81	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d84	            0x4898	                                    cdqe	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d86	        0x488d5001	                      lea rdx, [rax + 1]	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d8e	          0x4801d0	                            add rax, rdx	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d91	           0xfb600	                   movzx eax, byte [rax]	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d94	            0x3c3f	                            cmp al, 0x3f	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d96	            0x7536	                           jne 0x4006e0e	      5231	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6d98	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6d9b	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6d9e	            0x4898	                                    cdqe	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6da0	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6da3	          0x4863d2	                         movsxd rdx, edx	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6da6	        0x488d4a01	                      lea rcx, [rdx + 1]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6daa	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6dae	        0x488d3411	                    lea rsi, [rcx + rdx]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6db2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6db5	          0x4863ca	                         movsxd rcx, edx	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6db8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6dbc	          0x4801d1	                            add rcx, rdx	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6dbf	          0x4889c2	                            mov rdx, rax	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6dc2	          0x4889cf	                            mov rdi, rcx	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6dc5	      0xe800000000	                          call 0x4006e0a	      5233	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7	CALL_10
0x6dca	        0x836df001	               sub dword [rbp - 0x10], 1	      5234	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x6dce	        0x8345f401	                add dword [rbp - 0xc], 1	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x6dd2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x6dd5	          0x83c001	                              add eax, 1	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x6dd8	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x6ddb	     0xf8c75ffffff	                            jl 0x4006d96	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x6de1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5238	gui.c	FUNCTION_89
0x6de5	              0xc9	                                   leave	      5239	gui.c	FUNCTION_89
0x6de6	              0xc3	                                     ret	      5239	gui.c	FUNCTION_89
get_tabline_label	ELSE,1:IF,8:CALL,16:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	251
0x4491	              0x55	                                push rbp	      3734	gui.c	FUNCTION_57
0x4492	          0x4889e5	                            mov rbp, rsp	      3734	gui.c	FUNCTION_57
0x4495	            0x4155	                                push r13	      3734	gui.c	FUNCTION_57
0x4497	            0x4154	                                push r12	      3734	gui.c	FUNCTION_57
0x4499	              0x53	                                push rbx	      3734	gui.c	FUNCTION_57
0x449a	    0x4881ec581000	                         sub rsp, 0x1058	      3734	gui.c	FUNCTION_57
0x44a1	    0x4889bd98efff	           mov qword [rbp - 0x1068], rdi	      3734	gui.c	FUNCTION_57
0x44a8	    0x89b594efffff	           mov dword [rbp - 0x106c], esi	      3734	gui.c	FUNCTION_57
0x44ae	    0x64488b042528	                mov rax, qword fs:[0x28]	      3734	gui.c	FUNCTION_57
0x44b7	        0x488945d8	             mov qword [rbp - 0x28], rax	      3734	gui.c	FUNCTION_57
0x44bb	            0x31c0	                            xor eax, eax	      3734	gui.c	FUNCTION_57
0x44bd	    0xc785a0efffff	             mov dword [rbp - 0x1060], 0	      3735	gui.c	FUNCTION_57
0x44c7	    0x83bd94efffff	             cmp dword [rbp - 0x106c], 0	      3742	gui.c	FUNCTION_57
0x44ce	            0x7407	                            je 0x4004517	      3742	gui.c	FUNCTION_57
0x44d0	      0xb800000000	                              mov eax, 0	      3742	gui.c	FUNCTION_57
0x44d5	            0xeb05	                           jmp 0x400451c	      3742	gui.c	FUNCTION_57
0x44d7	      0xb800000000	                              mov eax, 0	      3742	gui.c	FUNCTION_57
0x44dc	    0x488985b8efff	           mov qword [rbp - 0x1048], rax	      3742	gui.c	FUNCTION_57
0x44e3	    0x488b85b8efff	           mov rax, qword [rbp - 0x1048]	      3743	gui.c	FUNCTION_57	IF_1
0x44ea	          0x488b00	                    mov rax, qword [rax]	      3743	gui.c	FUNCTION_57	IF_1
0x44ed	           0xfb600	                   movzx eax, byte [rax]	      3743	gui.c	FUNCTION_57	IF_1
0x44f0	            0x84c0	                             test al, al	      3743	gui.c	FUNCTION_57	IF_1
0x44f2	     0xf843c020000	                            je 0x4004774	      3743	gui.c	FUNCTION_57	IF_1
0x44f8	    0xc785a8efffff	             mov dword [rbp - 0x1058], 0	      3745	gui.c	FUNCTION_57	IF_1
0x4502	    0x8b0500000000	            mov eax, dword [0x04004548] 	      3746	gui.c	FUNCTION_57	IF_1
0x4508	    0x8985acefffff	           mov dword [rbp - 0x1054], eax	      3746	gui.c	FUNCTION_57	IF_1
0x450e	    0x83bd94efffff	             cmp dword [rbp - 0x106c], 0	      3749	gui.c	FUNCTION_57	IF_1
0x4515	            0x7407	                            je 0x400455e	      3749	gui.c	FUNCTION_57	IF_1
0x4517	      0xb800000000	                              mov eax, 0	      3749	gui.c	FUNCTION_57	IF_1
0x451c	            0xeb05	                           jmp 0x4004563	      3749	gui.c	FUNCTION_57	IF_1
0x451e	      0xb800000000	                              mov eax, 0	      3749	gui.c	FUNCTION_57	IF_1
0x4523	    0x488985c0efff	           mov qword [rbp - 0x1040], rax	      3749	gui.c	FUNCTION_57	IF_1
0x452a	    0xc70500000000	               mov dword [0x04004574], 0	      3752	gui.c	FUNCTION_57	IF_1
0x4534	    0x488b8598efff	           mov rax, qword [rbp - 0x1068]	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x453b	          0x4889c7	                            mov rdi, rax	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x453e	      0xe800000000	                          call 0x4004583	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4543	            0x4898	                                    cdqe	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4545	    0x488905000000	            mov qword [0x0400458c], rax 	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x454c	    0x488b05000000	            mov rax, qword [0x04004593] 	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4553	          0x4889c6	                            mov rsi, rax	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4556	      0xbf09000000	                              mov edi, 9	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x455b	      0xe800000000	                          call 0x40045a0	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4560	    0x488b85c0efff	           mov rax, qword [rbp - 0x1040]	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4567	      0xbe00000000	                              mov esi, 0	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x456c	          0x4889c7	                            mov rdi, rax	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x456f	      0xe800000000	                          call 0x40045b4	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4574	    0x8985a8efffff	           mov dword [rbp - 0x1058], eax	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x457a	    0x488b05000000	            mov rax, qword [0x040045c1] 	      3760	gui.c	FUNCTION_57	IF_1
0x4581	    0x488b15000000	            mov rdx, qword [0x040045c8] 	      3760	gui.c	FUNCTION_57	IF_1
0x4588	        0x48895020	             mov qword [rax + 0x20], rdx	      3760	gui.c	FUNCTION_57	IF_1
0x458c	    0x488b05000000	            mov rax, qword [0x040045d3] 	      3761	gui.c	FUNCTION_57	IF_1
0x4593	    0x488b15000000	            mov rdx, qword [0x040045da] 	      3761	gui.c	FUNCTION_57	IF_1
0x459a	        0x48895028	             mov qword [rax + 0x28], rdx	      3761	gui.c	FUNCTION_57	IF_1
0x459e	    0x488b05000000	            mov rax, qword [0x040045e5] 	      3762	gui.c	FUNCTION_57	IF_1
0x45a5	    0x488b15000000	            mov rdx, qword [0x040045ec] 	      3762	gui.c	FUNCTION_57	IF_1
0x45ac	        0x48895010	             mov qword [rax + 0x10], rdx	      3762	gui.c	FUNCTION_57	IF_1
0x45b0	    0x488b05000000	            mov rax, qword [0x040045f7] 	      3763	gui.c	FUNCTION_57	IF_1
0x45b7	    0x488985c8efff	           mov qword [rbp - 0x1038], rax	      3763	gui.c	FUNCTION_57	IF_1
0x45be	    0x488b8598efff	           mov rax, qword [rbp - 0x1068]	      3764	gui.c	FUNCTION_57	IF_1
0x45c5	    0x488905000000	            mov qword [0x0400460c], rax 	      3764	gui.c	FUNCTION_57	IF_1
0x45cc	    0x488b05000000	            mov rax, qword [0x04004613] 	      3765	gui.c	FUNCTION_57	IF_1
0x45d3	        0x488b4008	                mov rax, qword [rax + 8]	      3765	gui.c	FUNCTION_57	IF_1
0x45d7	    0x488905000000	            mov qword [0x0400461e], rax 	      3765	gui.c	FUNCTION_57	IF_1
0x45de	    0x488b05000000	            mov rax, qword [0x04004625] 	      3766	gui.c	FUNCTION_57	IF_1
0x45e5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3766	gui.c	FUNCTION_57	IF_1
0x45e9	    0x488905000000	            mov qword [0x04004630], rax 	      3766	gui.c	FUNCTION_57	IF_1
0x45f0	    0x488b05000000	            mov rax, qword [0x04004637] 	      3767	gui.c	FUNCTION_57	IF_1
0x45f7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3767	gui.c	FUNCTION_57	IF_1
0x45fb	    0x488905000000	            mov qword [0x04004642], rax 	      3767	gui.c	FUNCTION_57	IF_1
0x4602	    0x488b05000000	            mov rax, qword [0x04004649] 	      3768	gui.c	FUNCTION_57	IF_1
0x4609	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3768	gui.c	FUNCTION_57	IF_1
0x460d	    0x488905000000	            mov qword [0x04004654], rax 	      3768	gui.c	FUNCTION_57	IF_1
0x4614	    0x488b05000000	            mov rax, qword [0x0400465b] 	      3769	gui.c	FUNCTION_57	IF_1
0x461b	        0x488b4008	                mov rax, qword [rax + 8]	      3769	gui.c	FUNCTION_57	IF_1
0x461f	    0x488905000000	            mov qword [0x04004666], rax 	      3769	gui.c	FUNCTION_57	IF_1
0x4626	    0x488b05000000	            mov rax, qword [0x0400466d] 	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x462d	            0x89c7	                            mov edi, eax	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x462f	    0x488b85b8efff	           mov rax, qword [rbp - 0x1048]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4636	          0x488b10	                    mov rdx, qword [rax]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4639	    0x488b05000000	            mov rax, qword [0x04004680] 	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4640	    0x8b8da8efffff	           mov ecx, dword [rbp - 0x1058]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4646	    0x488db5d0efff	                 lea rsi, [rbp - 0x1030]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x464d	        0x4883ec08	                              sub rsp, 8	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4651	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4653	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4655	              0x57	                                push rdi	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4656	    0x41b900000000	                              mov r9d, 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x465c	          0x4189c8	                            mov r8d, ecx	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x465f	          0x4889d1	                            mov rcx, rdx	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4662	      0xba00100000	                         mov edx, 0x1000	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4667	          0x4889c7	                            mov rdi, rax	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x466a	      0xe800000000	                          call 0x40046af	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x466f	        0x4883c420	                           add rsp, 0x20	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4673	    0x488b05000000	            mov rax, qword [0x040046ba] 	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x467a	    0x488d95d0efff	                 lea rdx, [rbp - 0x1030]	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x4681	          0x4889d6	                            mov rsi, rdx	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x4684	          0x4889c7	                            mov rdi, rax	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x4687	      0xe800000000	                          call 0x40046cc	      3774	gui.c	FUNCTION_57	IF_1	CALL_5
0x468c	    0x488b85c8efff	           mov rax, qword [rbp - 0x1038]	      3777	gui.c	FUNCTION_57	IF_1
0x4693	    0x488905000000	            mov qword [0x040046da], rax 	      3777	gui.c	FUNCTION_57	IF_1
0x469a	    0x488b05000000	            mov rax, qword [0x040046e1] 	      3778	gui.c	FUNCTION_57	IF_1
0x46a1	        0x488b4008	                mov rax, qword [rax + 8]	      3778	gui.c	FUNCTION_57	IF_1
0x46a5	    0x488905000000	            mov qword [0x040046ec], rax 	      3778	gui.c	FUNCTION_57	IF_1
0x46ac	    0x488b05000000	            mov rax, qword [0x040046f3] 	      3779	gui.c	FUNCTION_57	IF_1
0x46b3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3779	gui.c	FUNCTION_57	IF_1
0x46b7	    0x488905000000	            mov qword [0x040046fe], rax 	      3779	gui.c	FUNCTION_57	IF_1
0x46be	    0x488b05000000	            mov rax, qword [0x04004705] 	      3780	gui.c	FUNCTION_57	IF_1
0x46c5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3780	gui.c	FUNCTION_57	IF_1
0x46c9	    0x488905000000	            mov qword [0x04004710], rax 	      3780	gui.c	FUNCTION_57	IF_1
0x46d0	    0x488b05000000	            mov rax, qword [0x04004717] 	      3781	gui.c	FUNCTION_57	IF_1
0x46d7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3781	gui.c	FUNCTION_57	IF_1
0x46db	    0x488905000000	            mov qword [0x04004722], rax 	      3781	gui.c	FUNCTION_57	IF_1
0x46e2	    0x488b05000000	            mov rax, qword [0x04004729] 	      3782	gui.c	FUNCTION_57	IF_1
0x46e9	        0x488b4008	                mov rax, qword [rax + 8]	      3782	gui.c	FUNCTION_57	IF_1
0x46ed	    0x488905000000	            mov qword [0x04004734], rax 	      3782	gui.c	FUNCTION_57	IF_1
0x46f4	    0x8b0500000000	            mov eax, dword [0x0400473a] 	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x46fa	            0x85c0	                           test eax, eax	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x46fc	            0x7424	                            je 0x4004762	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x46fe	    0x488b85c0efff	           mov rax, qword [rbp - 0x1040]	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4705	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x470b	      0xb901000000	                              mov ecx, 1	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4710	      0xba00000000	                              mov edx, 0	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4715	      0xbeffffffff	                     mov esi, 0xffffffff	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x471a	          0x4889c7	                            mov rdi, rax	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x471d	      0xe800000000	                          call 0x4004762	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4722	    0x8b0500000000	            mov eax, dword [0x04004768] 	      3787	gui.c	FUNCTION_57	IF_1
0x4728	     0xb85acefffff	            or eax, dword [rbp - 0x1054]	      3787	gui.c	FUNCTION_57	IF_1
0x472e	    0x890500000000	            mov dword [0x04004774], eax 	      3787	gui.c	FUNCTION_57	IF_1
0x4734	    0x488b85b8efff	           mov rax, qword [rbp - 0x1048]	      3792	gui.c	FUNCTION_57	IF_3
0x473b	          0x488b00	                    mov rax, qword [rax]	      3792	gui.c	FUNCTION_57	IF_3
0x473e	           0xfb600	                   movzx eax, byte [rax]	      3792	gui.c	FUNCTION_57	IF_3
0x4741	            0x84c0	                             test al, al	      3792	gui.c	FUNCTION_57	IF_3
0x4743	            0x7412	                            je 0x4004797	      3792	gui.c	FUNCTION_57	IF_3
0x4745	    0x488b05000000	            mov rax, qword [0x0400478c] 	      3792	gui.c	FUNCTION_57	IF_3
0x474c	           0xfb600	                   movzx eax, byte [rax]	      3792	gui.c	FUNCTION_57	IF_3
0x474f	            0x84c0	                             test al, al	      3792	gui.c	FUNCTION_57	IF_3
0x4751	     0xf85ee010000	                           jne 0x4004985	      3792	gui.c	FUNCTION_57	IF_3
0x4757	    0x488b05000000	            mov rax, qword [0x0400479e] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x475e	    0x48398598efff	          cmp qword [rbp - 0x1068], rax 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4765	            0x7411	                            je 0x40047b8	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4767	    0x488b8598efff	           mov rax, qword [rbp - 0x1068]	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x476e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4772	        0x488b4008	                mov rax, qword [rax + 8]	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4776	            0xeb07	                           jmp 0x40047bf	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4778	    0x488b05000000	            mov rax, qword [0x040047bf] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x477f	          0x4889c7	                            mov rdi, rax	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4782	      0xe800000000	                          call 0x40047c7	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4787	    0x83bd94efffff	             cmp dword [rbp - 0x106c], 0	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x478e	            0x750f	                           jne 0x40047df	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4790	    0x488b05000000	            mov rax, qword [0x040047d7] 	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x4797	          0x4889c7	                            mov rdi, rax	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x479a	      0xe800000000	                          call 0x40047df	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x479f	    0x488b05000000	            mov rax, qword [0x040047e6] 	      3799	gui.c	FUNCTION_57	IF_3
0x47a6	    0x48398598efff	          cmp qword [rbp - 0x1068], rax 	      3799	gui.c	FUNCTION_57	IF_3
0x47ad	            0x740d	                            je 0x40047fc	      3799	gui.c	FUNCTION_57	IF_3
0x47af	    0x488b8598efff	           mov rax, qword [rbp - 0x1068]	      3799	gui.c	FUNCTION_57	IF_3
0x47b6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3799	gui.c	FUNCTION_57	IF_3
0x47ba	            0xeb07	                           jmp 0x4004803	      3799	gui.c	FUNCTION_57	IF_3
0x47bc	    0x488b05000000	            mov rax, qword [0x04004803] 	      3799	gui.c	FUNCTION_57	IF_3
0x47c3	    0x488985b0efff	           mov qword [rbp - 0x1050], rax	      3799	gui.c	FUNCTION_57	IF_3
0x47ca	    0xc785a4efffff	             mov dword [rbp - 0x105c], 0	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x47d4	            0xeb3a	                           jmp 0x4004850	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x47d6	    0x488b85b0efff	           mov rax, qword [rbp - 0x1050]	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x47dd	        0x488b4008	                mov rax, qword [rax + 8]	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x47e1	          0x4889c7	                            mov rdi, rax	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x47e4	      0xe800000000	                          call 0x4004829	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x47e9	            0x85c0	                           test eax, eax	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x47eb	            0x740a	                            je 0x4004837	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x47ed	    0xc785a0efffff	             mov dword [rbp - 0x1060], 1	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x47f7	    0x488b85b0efff	           mov rax, qword [rbp - 0x1050]	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x47fe	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4802	    0x488985b0efff	           mov qword [rbp - 0x1050], rax	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4809	    0x8385a4efffff	             add dword [rbp - 0x105c], 1	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4810	    0x4883bdb0efff	             cmp qword [rbp - 0x1050], 0	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4818	            0x75bc	                           jne 0x4004816	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x481a	    0x83bda0efffff	             cmp dword [rbp - 0x1060], 0	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4821	            0x750d	                           jne 0x4004870	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4823	    0x83bda4efffff	            cmp dword [rbp - 0x105c], 1 	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x482a	     0xf8e15010000	                           jle 0x4004985	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x4830	    0x83bda4efffff	            cmp dword [rbp - 0x105c], 1 	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x4837	            0x7e28	                           jle 0x40048a1	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x4839	    0x8b95a4efffff	           mov edx, dword [rbp - 0x105c]	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x483f	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4846	            0x89d1	                            mov ecx, edx	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4848	      0xba00000000	                              mov edx, 0	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x484d	      0xbe28000000	                           mov esi, 0x28	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4852	          0x4889c7	                            mov rdi, rax	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4855	      0xb800000000	                              mov eax, 0	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x485a	      0xe800000000	                          call 0x400489f	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x485f	            0xeb07	                           jmp 0x40048a8	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x4861	    0xc685d0efffff	              mov byte [rbp - 0x1030], 0	      3808	gui.c	FUNCTION_57	IF_3	IF_6	ELSE_1
0x4868	    0x83bda0efffff	             cmp dword [rbp - 0x1060], 0	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x486f	            0x7434	                            je 0x40048e5	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4871	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x4878	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x487f	          0x4889c2	                            mov rdx, rax	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x4882	      0xb800000000	                              mov eax, 0	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x4887	          0x4889d7	                            mov rdi, rdx	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x488a	            0xf2ae	              repne scasb al, byte [rdi]	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x488c	          0x4889c8	                            mov rax, rcx	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x488f	          0x48f7d0	                                 not rax	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x4892	        0x488d50ff	                      lea rdx, [rax - 1]	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x4896	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x489d	          0x4801d0	                            add rax, rdx	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x48a0	      0x66c7002b00	                    mov word [rax], 0x2b	      3810	gui.c	FUNCTION_57	IF_3	IF_6	CALL_11
0x48a5	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48ac	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48b3	          0x4889c2	                            mov rdx, rax	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48b6	      0xb800000000	                              mov eax, 0	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48bb	          0x4889d7	                            mov rdi, rdx	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48be	            0xf2ae	              repne scasb al, byte [rdi]	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48c0	          0x4889c8	                            mov rax, rcx	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48c3	          0x48f7d0	                                 not rax	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48c6	        0x488d50ff	                      lea rdx, [rax - 1]	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48ca	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48d1	          0x4801d0	                            add rax, rdx	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48d4	      0x66c7002000	                    mov word [rax], 0x20	      3811	gui.c	FUNCTION_57	IF_3	IF_6	CALL_12
0x48d9	    0x488b05000000	            mov rax, qword [0x04004920] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x48e0	          0x4889c7	                            mov rdi, rax	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x48e3	      0xe800000000	                          call 0x4004928	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x48e8	        0x4c8d6001	                      lea r12, [rax + 1]	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x48ec	    0x488b1d000000	            mov rbx, qword [0x04004933] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x48f3	    0x4c8b2d000000	            mov r13, qword [0x0400493a] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x48fa	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4901	          0x4889c7	                            mov rdi, rax	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4904	      0xe800000000	                          call 0x4004949	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4909	          0x4c01e8	                            add rax, r13	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x490c	          0x4c89e2	                            mov rdx, r12	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x490f	          0x4889de	                            mov rsi, rbx	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4912	          0x4889c7	                            mov rdi, rax	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4915	      0xe800000000	                          call 0x400495a	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x491a	    0x488d85d0efff	                 lea rax, [rbp - 0x1030]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4921	          0x4889c7	                            mov rdi, rax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4924	      0xe800000000	                          call 0x4004969	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4929	          0x4889c2	                            mov rdx, rax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x492c	    0x488b05000000	            mov rax, qword [0x04004973] 	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4933	    0x488d8dd0efff	                 lea rcx, [rbp - 0x1030]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x493a	          0x4889ce	                            mov rsi, rcx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x493d	          0x4889c7	                            mov rdi, rax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4940	      0xe800000000	                          call 0x4004985	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4945	              0x90	                                     nop	      3816	gui.c	FUNCTION_57
0x4946	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3816	gui.c	FUNCTION_57
0x494a	    0x644833042528	                xor rax, qword fs:[0x28]	      3816	gui.c	FUNCTION_57
0x4953	            0x7405	                            je 0x400499a	      3816	gui.c	FUNCTION_57
0x4955	      0xe800000000	                          call 0x400499a	      3816	gui.c	FUNCTION_57
0x495a	        0x488d65e8	                   lea rsp, [rbp - 0x18]	      3816	gui.c	FUNCTION_57
0x495e	              0x5b	                                 pop rbx	      3816	gui.c	FUNCTION_57
0x495f	            0x415c	                                 pop r12	      3816	gui.c	FUNCTION_57
0x4961	            0x415d	                                 pop r13	      3816	gui.c	FUNCTION_57
0x4963	              0x5d	                                 pop rbp	      3816	gui.c	FUNCTION_57
0x4964	              0xc3	                                     ret	      3816	gui.c	FUNCTION_57
no_console_input	ELSE,0:IF,0:CALL,2:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	21
0x69bd	              0x55	                                push rbp	      5110	gui.c	FUNCTION_87
0x69be	          0x4889e5	                            mov rbp, rsp	      5110	gui.c	FUNCTION_87
0x69c1	    0x8b0500000000	            mov eax, dword [0x04006a07] 	      5111	gui.c	FUNCTION_87
0x69c7	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x69c9	            0x740a	                            je 0x4006a15	      5113	gui.c	FUNCTION_87	CALL_2
0x69cb	    0x8b0500000000	            mov eax, dword [0x04006a11] 	      5111	gui.c	FUNCTION_87
0x69d1	            0x85c0	                           test eax, eax	      5111	gui.c	FUNCTION_87
0x69d3	            0x7423	                            je 0x4006a38	      5111	gui.c	FUNCTION_87
0x69d5	      0xbf00000000	                              mov edi, 0	      5113	gui.c	FUNCTION_87	CALL_2
0x69da	      0xe800000000	                          call 0x4006a1f	      5113	gui.c	FUNCTION_87	CALL_2
0x69df	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x69e1	            0x7515	                           jne 0x4006a38	      5113	gui.c	FUNCTION_87	CALL_2
0x69e3	      0xbf02000000	                              mov edi, 2	      5113	gui.c	FUNCTION_87	CALL_2
0x69e8	      0xe800000000	                          call 0x4006a2d	      5113	gui.c	FUNCTION_87	CALL_2
0x69ed	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x69ef	            0x7507	                           jne 0x4006a38	      5113	gui.c	FUNCTION_87	CALL_2
0x69f1	      0xb801000000	                              mov eax, 1	      5113	gui.c	FUNCTION_87	CALL_2
0x69f6	            0xeb05	                           jmp 0x4006a3d	      5113	gui.c	FUNCTION_87	CALL_2
0x69f8	      0xb800000000	                              mov eax, 0	      5113	gui.c	FUNCTION_87	CALL_2
0x69fd	              0x5d	                                 pop rbp	      5116	gui.c	FUNCTION_87
0x69fe	              0xc3	                                     ret	      5116	gui.c	FUNCTION_87
gui_outstr	ELSE,2:IF,8:CALL,3:functions,0:WHILE,1:SWITCH,0:DO,0:FOR,1	112
0x23cb	              0x55	                                push rbp	      2040	gui.c	FUNCTION_36
0x23cc	          0x4889e5	                            mov rbp, rsp	      2040	gui.c	FUNCTION_36
0x23cf	        0x4883ec20	                           sub rsp, 0x20	      2040	gui.c	FUNCTION_36
0x23d3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2040	gui.c	FUNCTION_36
0x23d7	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2040	gui.c	FUNCTION_36
0x23da	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2046	gui.c	FUNCTION_36	IF_1
0x23de	     0xf848b010000	                            je 0x40025af	      2046	gui.c	FUNCTION_36	IF_1
0x23e4	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2049	gui.c	FUNCTION_36	IF_2
0x23e8	     0xf8975010000	                           jns 0x40025a3	      2049	gui.c	FUNCTION_36	IF_2
0x23ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2050	gui.c	FUNCTION_36	CALL_1
0x23f2	          0x4889c7	                            mov rdi, rax	      2050	gui.c	FUNCTION_36	CALL_1
0x23f5	      0xe800000000	                          call 0x400243a	      2050	gui.c	FUNCTION_36	CALL_1
0x23fa	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2050	gui.c	FUNCTION_36	CALL_1
0x23fd	      0xe961010000	                           jmp 0x40025a3	      2052	gui.c	FUNCTION_36	WHILE_1
0x2402	    0x8b0500000000	            mov eax, dword [0x04002448] 	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x2408	            0x85c0	                           test eax, eax	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x240a	            0x747d	                            je 0x40024c9	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x240c	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2058	gui.c	FUNCTION_36	WHILE_1	IF_3
0x2413	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x241a	            0xeb52	                           jmp 0x40024ae	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x241c	    0x488b05000000	            mov rax, qword [0x04002463] 	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2423	          0x8b55f8	                mov edx, dword [rbp - 8]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2426	          0x4863ca	                         movsxd rcx, edx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2429	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x242d	          0x4801ca	                            add rdx, rcx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2430	          0x4889d7	                            mov rdi, rdx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2433	            0xffd0	                                call rax	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2435	           0x145fc	                add dword [rbp - 4], eax	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2438	    0x8b1500000000	            mov edx, dword [0x0400247e] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x243e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x2441	             0x1d0	                            add eax, edx	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x2443	          0x4863d0	                         movsxd rdx, eax	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x2446	    0x488b05000000	            mov rax, qword [0x0400248d] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x244d	          0x4839c2	                            cmp rdx, rax	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x2450	            0x7f26	                            jg 0x40024b8	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x2452	    0x488b05000000	            mov rax, qword [0x04002499] 	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2459	          0x8b55f8	                mov edx, dword [rbp - 8]	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x245c	          0x4863ca	                         movsxd rcx, edx	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x245f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2463	          0x4801ca	                            add rdx, rcx	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2466	          0x4889d7	                            mov rdi, rdx	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2469	            0xffd0	                                call rax	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x246b	           0x145f8	                add dword [rbp - 8], eax	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x246e	          0x8b45f8	                mov eax, dword [rbp - 8]	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2471	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2474	            0x7ca6	                            jl 0x400245c	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2476	            0xeb01	                           jmp 0x40024b9	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x2478	              0x90	                                     nop	      2063	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x2479	          0x8b45f8	                mov eax, dword [rbp - 8]	      2066	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x247c	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2066	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x247f	            0x7e40	                           jle 0x4002501	      2066	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x2481	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2067	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x2484	          0x8945f8	                mov dword [rbp - 8], eax	      2067	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x2487	            0xeb38	                           jmp 0x4002501	      2067	gui.c	FUNCTION_36	WHILE_1	IF_3	IF_5
0x2489	    0x8b1500000000	            mov edx, dword [0x040024cf] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x248f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x2492	             0x1d0	                            add eax, edx	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x2494	          0x4863d0	                         movsxd rdx, eax	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x2497	    0x488b05000000	            mov rax, qword [0x040024de] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x249e	          0x4839c2	                            cmp rdx, rax	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24a1	            0x7e18	                           jle 0x40024fb	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24a3	    0x488b05000000	            mov rax, qword [0x040024ea] 	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24aa	            0x89c2	                            mov edx, eax	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24ac	    0x8b0500000000	            mov eax, dword [0x040024f2] 	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24b2	            0x29c2	                            sub edx, eax	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24b4	            0x89d0	                            mov eax, edx	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24b6	          0x8945f8	                mov dword [rbp - 8], eax	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24b9	            0xeb06	                           jmp 0x4002501	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x24bb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2074	gui.c	FUNCTION_36	WHILE_1	ELSE_2
0x24be	          0x8945f8	                mov dword [rbp - 8], eax	      2074	gui.c	FUNCTION_36	WHILE_1	ELSE_2
0x24c1	          0x8b75f8	                mov esi, dword [rbp - 8]	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x24c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x24c8	    0x41b900000000	                              mov r9d, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x24ce	    0x41b800000000	                              mov r8d, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x24d4	      0xb900000000	                              mov ecx, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x24d9	      0xba00000000	                              mov edx, 0	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x24de	          0x4889c7	                            mov rdi, rax	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x24e1	      0xe800000000	                          call 0x4002526	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x24e6	          0x8b45f8	                mov eax, dword [rbp - 8]	      2078	gui.c	FUNCTION_36	WHILE_1
0x24e9	            0x4898	                                    cdqe	      2078	gui.c	FUNCTION_36	WHILE_1
0x24eb	        0x480145e8	            add qword [rbp - 0x18], rax 	      2078	gui.c	FUNCTION_36	WHILE_1
0x24ef	          0x8b45f8	                mov eax, dword [rbp - 8]	      2079	gui.c	FUNCTION_36	WHILE_1
0x24f2	          0x2945e4	             sub dword [rbp - 0x1c], eax	      2079	gui.c	FUNCTION_36	WHILE_1
0x24f5	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x24f9	            0x7e3a	                           jle 0x4002575	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x24fb	    0x8b0500000000	            mov eax, dword [0x04002541] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x2501	          0x4863d0	                         movsxd rdx, eax	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x2504	    0x488b05000000	            mov rax, qword [0x0400254b] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x250b	          0x4839c2	                            cmp rdx, rax	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x250e	            0x7d25	                           jge 0x4002575	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x2510	    0x41b900000000	                              mov r9d, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x2516	    0x41b800000000	                              mov r8d, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x251c	      0xb900000000	                              mov ecx, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x2521	      0xba00000000	                              mov edx, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x2526	      0xbe01000000	                              mov esi, 1	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x252b	      0xbf00000000	                              mov edi, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x2530	      0xe800000000	                          call 0x4002575	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x2535	    0x8b0500000000	            mov eax, dword [0x0400257b] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x253b	          0x4863d0	                         movsxd rdx, eax	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x253e	    0x488b05000000	            mov rax, qword [0x04002585] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x2545	          0x4839c2	                            cmp rdx, rax	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x2548	            0x7c19	                            jl 0x40025a3	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x254a	    0xc70500000000	               mov dword [0x04002594], 0	      2089	gui.c	FUNCTION_36	WHILE_1	IF_8
0x2554	    0x8b0500000000	            mov eax, dword [0x0400259a] 	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x255a	          0x83c001	                              add eax, 1	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x255d	    0x890500000000	            mov dword [0x040025a3], eax 	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x2563	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2052	gui.c	FUNCTION_36	WHILE_1
0x2567	     0xf8f95feffff	                            jg 0x4002442	      2052	gui.c	FUNCTION_36	WHILE_1
0x256d	            0xeb01	                           jmp 0x40025b0	      2052	gui.c	FUNCTION_36	WHILE_1
0x256f	              0x90	                                     nop	      2047	gui.c	FUNCTION_36	IF_1
0x2570	              0xc9	                                   leave	      2093	gui.c	FUNCTION_36
0x2571	              0xc3	                                     ret	      2093	gui.c	FUNCTION_36
gui_update_scrollbars	ELSE,1:IF,25:CALL,13:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,1	320
0x5131	              0x55	                                push rbp	      4179	gui.c	FUNCTION_65
0x5132	          0x4889e5	                            mov rbp, rsp	      4179	gui.c	FUNCTION_65
0x5135	        0x4883ec50	                           sub rsp, 0x50	      4179	gui.c	FUNCTION_65
0x5139	          0x897dbc	             mov dword [rbp - 0x44], edi	      4179	gui.c	FUNCTION_65
0x513c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      4188	gui.c	FUNCTION_65	CALL_1
0x513f	            0x89c7	                            mov edi, eax	      4188	gui.c	FUNCTION_65	CALL_1
0x5141	      0xe8c30a0000	     call sym.gui_update_horiz_scrollbar	      4188	gui.c	FUNCTION_65	CALL_1
0x5146	    0x8b0500000000	            mov eax, dword [0x0400518c] 	      4193	gui.c	FUNCTION_65	IF_1
0x514c	            0x85c0	                           test eax, eax	      4193	gui.c	FUNCTION_65	IF_1
0x514e	            0x750e	                           jne 0x400519e	      4193	gui.c	FUNCTION_65	IF_1
0x5150	    0x8b0500000000	            mov eax, dword [0x04005196] 	      4193	gui.c	FUNCTION_65	IF_1
0x5156	            0x85c0	                           test eax, eax	      4193	gui.c	FUNCTION_65	IF_1
0x5158	     0xf84da040000	                            je 0x4005678	      4193	gui.c	FUNCTION_65	IF_1
0x515e	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4202	gui.c	FUNCTION_65	IF_2
0x5162	     0xf85a8000000	                           jne 0x4005250	      4202	gui.c	FUNCTION_65	IF_2
0x5168	    0x8b0500000000	            mov eax, dword [0x040051ae] 	      4202	gui.c	FUNCTION_65	IF_2
0x516e	            0x85c0	                           test eax, eax	      4202	gui.c	FUNCTION_65	IF_2
0x5170	            0x740f	                            je 0x40051c1	      4202	gui.c	FUNCTION_65	IF_2
0x5172	    0x8b0500000000	            mov eax, dword [0x040051b8] 	      4202	gui.c	FUNCTION_65	IF_2
0x5178	          0x83f801	                              cmp eax, 1	      4202	gui.c	FUNCTION_65	IF_2
0x517b	     0xf858f000000	                           jne 0x4005250	      4202	gui.c	FUNCTION_65	IF_2
0x5181	    0x8b0500000000	            mov eax, dword [0x040051c7] 	      4203	gui.c	FUNCTION_65	IF_2
0x5187	            0x85c0	                           test eax, eax	      4203	gui.c	FUNCTION_65	IF_2
0x5189	     0xf8481000000	                            je 0x4005250	      4203	gui.c	FUNCTION_65	IF_2
0x518f	    0x8b0500000000	            mov eax, dword [0x040051d5] 	      4204	gui.c	FUNCTION_65	IF_2
0x5195	            0x85c0	                           test eax, eax	      4204	gui.c	FUNCTION_65	IF_2
0x5197	            0x7477	                            je 0x4005250	      4204	gui.c	FUNCTION_65	IF_2
0x5199	    0x8b0500000000	            mov eax, dword [0x040051df] 	      4210	gui.c	FUNCTION_65	IF_2
0x519f	      0xba01000000	                              mov edx, 1	      4210	gui.c	FUNCTION_65	IF_2
0x51a4	            0x29c2	                            sub edx, eax	      4210	gui.c	FUNCTION_65	IF_2
0x51a6	            0x89d0	                            mov eax, edx	      4210	gui.c	FUNCTION_65	IF_2
0x51a8	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4210	gui.c	FUNCTION_65	IF_2
0x51ab	    0x488b05000000	            mov rax, qword [0x040051f2] 	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x51b2	          0x4885c0	                           test rax, rax	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x51b5	            0x7459	                            je 0x4005250	      4211	gui.c	FUNCTION_65	IF_2	IF_3
0x51b7	    0x488b05000000	            mov rax, qword [0x040051fe] 	      4216	gui.c	FUNCTION_65	IF_2	IF_3
0x51be	    0x488b88b81800	          mov rcx, qword [rax + 0x18b8] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51c5	    0x488b05000000	            mov rax, qword [0x0400520c] 	      4215	gui.c	FUNCTION_65	IF_2	IF_3
0x51cc	    0x488bb8b01800	          mov rdi, qword [rax + 0x18b0] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51d3	    0x488b05000000	            mov rax, qword [0x0400521a] 	      4214	gui.c	FUNCTION_65	IF_2	IF_3
0x51da	    0x488bb0a81800	          mov rsi, qword [rax + 0x18a8] 	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51e1	    0x4c8b05000000	              mov r8, qword [0x04005228]	      4213	gui.c	FUNCTION_65	IF_2	IF_3
0x51e8	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51eb	          0x4863d0	                         movsxd rdx, eax	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51ee	          0x4889d0	                            mov rax, rdx	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51f1	        0x48c1e002	                              shl rax, 2	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51f5	          0x4801d0	                            add rax, rdx	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51f8	        0x48c1e004	                              shl rax, 4	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x51fc	    0x480590180000	                         add rax, 0x1890	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x5202	          0x4c01c0	                             add rax, r8	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x5205	          0x4889fa	                            mov rdx, rdi	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x5208	          0x4889c7	                            mov rdi, rax	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x520b	      0xe800000000	                          call 0x4005250	      4212	gui.c	FUNCTION_65	IF_2	IF_3	CALL_2
0x5210	    0x8b0500000000	            mov eax, dword [0x04005256] 	      4220	gui.c	FUNCTION_65
0x5216	          0x83c001	                              add eax, 1	      4220	gui.c	FUNCTION_65
0x5219	    0x890500000000	            mov dword [0x0400525f], eax 	      4220	gui.c	FUNCTION_65
0x521f	    0x488b05000000	            mov rax, qword [0x04005266] 	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x5226	        0x488945d8	             mov qword [rbp - 0x28], rax	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x522a	      0xe9df030000	                           jmp 0x400564e	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x522f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x5233	        0x488b4008	                mov rax, qword [rax + 8]	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x5237	          0x4885c0	                           test rax, rax	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x523a	     0xf84bb030000	                            je 0x400563b	      4224	gui.c	FUNCTION_65	FOR_1	IF_4
0x5240	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x5244	            0x7526	                           jne 0x40052ac	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x5246	    0x8b0500000000	            mov eax, dword [0x0400528c] 	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x524c	            0x85c0	                           test eax, eax	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x524e	            0x740b	                            je 0x400529b	      4227	gui.c	FUNCTION_65	FOR_1	IF_5
0x5250	    0x8b0500000000	            mov eax, dword [0x04005296] 	      4228	gui.c	FUNCTION_65	FOR_1	IF_5
0x5256	          0x83f801	                              cmp eax, 1	      4228	gui.c	FUNCTION_65	FOR_1	IF_5
0x5259	            0x7511	                           jne 0x40052ac	      4228	gui.c	FUNCTION_65	FOR_1	IF_5
0x525b	    0x488b05000000	            mov rax, qword [0x040052a2] 	      4229	gui.c	FUNCTION_65	FOR_1	IF_5
0x5262	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4229	gui.c	FUNCTION_65	FOR_1	IF_5
0x5266	     0xf8492030000	                            je 0x400563e	      4229	gui.c	FUNCTION_65	FOR_1	IF_5
0x526c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4235	gui.c	FUNCTION_65	FOR_1
0x5270	        0x488b4008	                mov rax, qword [rax + 8]	      4235	gui.c	FUNCTION_65	FOR_1
0x5274	          0x488b10	                    mov rdx, qword [rax]	      4235	gui.c	FUNCTION_65	FOR_1
0x5277	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4235	gui.c	FUNCTION_65	FOR_1
0x527b	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4235	gui.c	FUNCTION_65	FOR_1
0x5281	            0x4898	                                    cdqe	      4235	gui.c	FUNCTION_65	FOR_1
0x5283	          0x4801d0	                            add rax, rdx	      4235	gui.c	FUNCTION_65	FOR_1
0x5286	        0x4883e802	                              sub rax, 2	      4235	gui.c	FUNCTION_65	FOR_1
0x528a	        0x488945f0	             mov qword [rbp - 0x10], rax	      4235	gui.c	FUNCTION_65	FOR_1
0x528e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4237	gui.c	FUNCTION_65	FOR_1	IF_6
0x5293	            0x7908	                           jns 0x40052dd	      4237	gui.c	FUNCTION_65	FOR_1	IF_6
0x5295	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4238	gui.c	FUNCTION_65	FOR_1	IF_6
0x529d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4239	gui.c	FUNCTION_65	FOR_1
0x52a1	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4239	gui.c	FUNCTION_65	FOR_1
0x52a5	        0x4883e801	                              sub rax, 1	      4239	gui.c	FUNCTION_65	FOR_1
0x52a9	        0x488945e0	             mov qword [rbp - 0x20], rax	      4239	gui.c	FUNCTION_65	FOR_1
0x52ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4240	gui.c	FUNCTION_65	FOR_1
0x52b1	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4240	gui.c	FUNCTION_65	FOR_1
0x52b7	            0x4898	                                    cdqe	      4240	gui.c	FUNCTION_65	FOR_1
0x52b9	        0x488945e8	             mov qword [rbp - 0x18], rax	      4240	gui.c	FUNCTION_65	FOR_1
0x52bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x52c1	        0x4883c001	                              add rax, 1	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x52c5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x52c9	            0x7d0c	                           jge 0x4005317	      4245	gui.c	FUNCTION_65	FOR_1	IF_8
0x52cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4246	gui.c	FUNCTION_65	FOR_1	IF_8
0x52cf	        0x4883c001	                              add rax, 1	      4246	gui.c	FUNCTION_65	FOR_1	IF_8
0x52d3	        0x488945e8	             mov qword [rbp - 0x18], rax	      4246	gui.c	FUNCTION_65	FOR_1	IF_8
0x52d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x52db	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x52df	        0x4883c001	                              add rax, 1	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x52e3	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x52e7	            0x7d10	                           jge 0x4005339	      4247	gui.c	FUNCTION_65	FOR_1	IF_9
0x52e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4248	gui.c	FUNCTION_65	FOR_1	IF_9
0x52ed	        0x482b45e8	             sub rax, qword [rbp - 0x18]	      4248	gui.c	FUNCTION_65	FOR_1	IF_9
0x52f1	        0x4883c001	                              add rax, 1	      4248	gui.c	FUNCTION_65	FOR_1	IF_9
0x52f5	        0x488945e0	             mov qword [rbp - 0x20], rax	      4248	gui.c	FUNCTION_65	FOR_1	IF_9
0x52f9	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4250	gui.c	FUNCTION_65	FOR_1	IF_10
0x52fe	            0x7908	                           jns 0x4005348	      4250	gui.c	FUNCTION_65	FOR_1	IF_10
0x5300	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4251	gui.c	FUNCTION_65	FOR_1	IF_10
0x5308	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4258	gui.c	FUNCTION_65	FOR_1
0x530c	    0x480590180000	                         add rax, 0x1890	      4258	gui.c	FUNCTION_65	FOR_1
0x5312	        0x488945f8	                mov qword [rbp - 8], rax	      4258	gui.c	FUNCTION_65	FOR_1
0x5316	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x531b	            0x7e15	                           jle 0x4005372	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x531d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x5321	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x5328	        0x4883e802	                              sub rax, 2	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x532c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x5330	            0x7e54	                           jle 0x40053c6	      4264	gui.c	FUNCTION_65	FOR_1	IF_11
0x5332	        0x488b45f8	                mov rax, qword [rbp - 8]	      4270	gui.c	FUNCTION_65	FOR_1	IF_11
0x5336	    0xc74034000000	               mov dword [rax + 0x34], 0	      4270	gui.c	FUNCTION_65	FOR_1	IF_11
0x533d	    0x8b0500000000	            mov eax, dword [0x04005383] 	      4271	gui.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x5343	            0x85c0	                           test eax, eax	      4271	gui.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x5345	            0x7416	                            je 0x400539d	      4271	gui.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x5347	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x534b	      0xba00000000	                              mov edx, 0	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x5350	      0xbe00000000	                              mov esi, 0	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x5355	          0x4889c7	                            mov rdi, rax	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x5358	      0xe8de020000	               call sym.gui_do_scrollbar	      4272	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_4
0x535d	    0x8b0500000000	            mov eax, dword [0x040053a3] 	      4273	gui.c	FUNCTION_65	FOR_1	IF_11	IF_13
0x5363	            0x85c0	                           test eax, eax	      4273	gui.c	FUNCTION_65	FOR_1	IF_11	IF_13
0x5365	     0xf8496020000	                            je 0x4005641	      4273	gui.c	FUNCTION_65	FOR_1	IF_11	IF_13
0x536b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x536f	      0xba00000000	                              mov edx, 0	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x5374	      0xbe01000000	                              mov esi, 1	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x5379	          0x4889c7	                            mov rdi, rax	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x537c	      0xe8ba020000	               call sym.gui_do_scrollbar	      4274	gui.c	FUNCTION_65	FOR_1	IF_11	CALL_5
0x5381	      0xe97b020000	                           jmp 0x4005641	      4275	gui.c	FUNCTION_65	FOR_1	IF_11
0x5386	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x538a	            0x756b	                           jne 0x4005437	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x538c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x5390	          0x8b5034	            mov edx, dword [rax + 0x34] 	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x5393	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x5397	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x539d	            0x39c2	                            cmp edx, eax	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x539f	            0x7556	                           jne 0x4005437	      4277	gui.c	FUNCTION_65	FOR_1	IF_14
0x53a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x53a5	          0x8b5030	            mov edx, dword [rax + 0x30] 	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x53a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x53ac	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x53b2	            0x39c2	                            cmp edx, eax	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x53b4	            0x7541	                           jne 0x4005437	      4278	gui.c	FUNCTION_65	FOR_1	IF_14
0x53b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x53ba	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x53bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x53c1	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x53c7	            0x39c2	                            cmp edx, eax	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x53c9	            0x752c	                           jne 0x4005437	      4279	gui.c	FUNCTION_65	FOR_1	IF_14
0x53cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x53cf	          0x8b5038	            mov edx, dword [rax + 0x38] 	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x53d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x53d6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x53dc	            0x39c2	                            cmp edx, eax	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x53de	            0x7517	                           jne 0x4005437	      4280	gui.c	FUNCTION_65	FOR_1	IF_14
0x53e0	    0x488b15000000	            mov rdx, qword [0x04005427] 	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x53e7	    0x488b05000000	            mov rax, qword [0x0400542e] 	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x53ee	          0x4839c2	                            cmp rdx, rax	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x53f1	     0xf8429010000	                            je 0x4005560	      4281	gui.c	FUNCTION_65	FOR_1	IF_14
0x53f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x53fb	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x5401	        0x488b45f8	                mov rax, qword [rbp - 8]	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x5405	          0x895034	             mov dword [rax + 0x34], edx	      4285	gui.c	FUNCTION_65	FOR_1	IF_14
0x5408	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x540c	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x5412	        0x488b45f8	                mov rax, qword [rbp - 8]	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x5416	          0x895030	             mov dword [rax + 0x30], edx	      4286	gui.c	FUNCTION_65	FOR_1	IF_14
0x5419	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x541d	    0x8b90a4000000	            mov edx, dword [rax + 0xa4] 	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x5423	        0x488b45f8	                mov rax, qword [rbp - 8]	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x5427	          0x89503c	             mov dword [rax + 0x3c], edx	      4287	gui.c	FUNCTION_65	FOR_1	IF_14
0x542a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x542e	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x5434	        0x488b45f8	                mov rax, qword [rbp - 8]	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x5438	          0x895038	             mov dword [rax + 0x38], edx	      4288	gui.c	FUNCTION_65	FOR_1	IF_14
0x543b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x543f	          0x8b5034	            mov edx, dword [rax + 0x34] 	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x5442	        0x488b45f8	                mov rax, qword [rbp - 8]	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x5446	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x5449	             0x1c2	                            add edx, eax	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x544b	    0x8b0500000000	            mov eax, dword [0x04005491] 	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x5451	           0xfafc2	                           imul eax, edx	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x5454	          0x8945cc	             mov dword [rbp - 0x34], eax	      4291	gui.c	FUNCTION_65	FOR_1	IF_14
0x5457	        0x488b45f8	                mov rax, qword [rbp - 8]	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x545b	          0x8b5030	            mov edx, dword [rax + 0x30] 	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x545e	    0x8b0500000000	            mov eax, dword [0x040054a4] 	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x5464	           0xfafd0	                           imul edx, eax	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x5467	    0x8b0500000000	            mov eax, dword [0x040054ad] 	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x546d	             0x1d0	                            add eax, edx	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x546f	          0x8945d0	             mov dword [rbp - 0x30], eax	      4292	gui.c	FUNCTION_65	FOR_1	IF_14
0x5472	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x5476	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x547c	            0x85c0	                           test eax, eax	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x547e	            0x7512	                           jne 0x40054d2	      4314	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x5480	    0x8b0500000000	            mov eax, dword [0x040054c6] 	      4317	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x5486	           0x145cc	             add dword [rbp - 0x34], eax	      4317	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x5489	    0x8b0500000000	            mov eax, dword [0x040054cf] 	      4318	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x548f	          0x2945d0	             sub dword [rbp - 0x30], eax	      4318	gui.c	FUNCTION_65	FOR_1	IF_14	IF_18
0x5492	    0x8b0500000000	            mov eax, dword [0x040054d8] 	      4320	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19
0x5498	            0x85c0	                           test eax, eax	      4320	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19
0x549a	            0x743d	                            je 0x4005519	      4320	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19
0x549c	    0x8b0d00000000	            mov ecx, dword [0x040054e2] 	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54a2	    0x8b0500000000	            mov eax, dword [0x040054e8] 	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54a8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54ac	    0x488dba901800	                 lea rdi, [rdx + 0x1890]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54b3	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54b6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54b9	          0x4189f0	                            mov r8d, esi	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54bc	            0x89c6	                            mov esi, eax	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54be	      0xe800000000	                          call 0x4005503	      4322	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_8
0x54c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x54c7	      0xba01000000	                              mov edx, 1	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x54cc	      0xbe00000000	                              mov esi, 0	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x54d1	          0x4889c7	                            mov rdi, rax	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x54d4	      0xe862010000	               call sym.gui_do_scrollbar	      4325	gui.c	FUNCTION_65	FOR_1	IF_14	IF_19	CALL_9
0x54d9	    0x8b0500000000	            mov eax, dword [0x0400551f] 	      4327	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20
0x54df	            0x85c0	                           test eax, eax	      4327	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20
0x54e1	            0x743d	                            je 0x4005560	      4327	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20
0x54e3	    0x8b0d00000000	            mov ecx, dword [0x04005529] 	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x54e9	    0x8b0500000000	            mov eax, dword [0x0400552f] 	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x54ef	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x54f3	    0x488dbae01800	                 lea rdi, [rdx + 0x18e0]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x54fa	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x54fd	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x5500	          0x4189f0	                            mov r8d, esi	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x5503	            0x89c6	                            mov esi, eax	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x5505	      0xe800000000	                          call 0x400554a	      4329	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_10
0x550a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x550e	      0xba01000000	                              mov edx, 1	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x5513	      0xbe01000000	                              mov esi, 1	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x5518	          0x4889c7	                            mov rdi, rax	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x551b	      0xe81b010000	               call sym.gui_do_scrollbar	      4332	gui.c	FUNCTION_65	FOR_1	IF_14	IF_20	CALL_11
0x5520	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5524	            0x752e	                           jne 0x4005594	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5526	        0x488b45f8	                mov rax, qword [rbp - 8]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x552a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x552e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5532	            0x7520	                           jne 0x4005594	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5534	        0x488b45f8	                mov rax, qword [rbp - 8]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5538	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x553c	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5540	            0x7512	                           jne 0x4005594	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5542	        0x488b45f8	                mov rax, qword [rbp - 8]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5546	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x554a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x554e	     0xf84ae000000	                            je 0x4005642	      4347	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5554	        0x488b45f8	                mov rax, qword [rbp - 8]	      4351	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5558	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4351	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x555c	        0x48895018	             mov qword [rax + 0x18], rdx	      4351	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5560	        0x488b45f8	                mov rax, qword [rbp - 8]	      4355	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5564	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4355	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5568	        0x48895020	             mov qword [rax + 0x20], rdx	      4355	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x556c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4356	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5570	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4356	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5574	        0x48895028	             mov qword [rax + 0x28], rdx	      4356	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23
0x5578	    0x8b0500000000	            mov eax, dword [0x040055be] 	      4357	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x557e	            0x85c0	                           test eax, eax	      4357	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x5580	            0x7436	                            je 0x40055f8	      4357	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x5582	    0x8b0500000000	            mov eax, dword [0x040055c8] 	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x5588	            0x85c0	                           test eax, eax	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x558a	            0x750d	                           jne 0x40055d9	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x558c	    0x488b05000000	            mov rax, qword [0x040055d3] 	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x5593	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x5597	            0x741f	                            je 0x40055f8	      4358	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24
0x5599	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x559d	    0x488db8901800	                 lea rdi, [rax + 0x1890]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x55a4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x55a8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x55ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x55b0	          0x4889c6	                            mov rsi, rax	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x55b3	      0xe800000000	                          call 0x40055f8	      4359	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_24	CALL_12
0x55b8	    0x8b0500000000	            mov eax, dword [0x040055fe] 	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55be	            0x85c0	                           test eax, eax	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55c0	            0x7440	                            je 0x4005642	      4361	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55c2	    0x8b0500000000	            mov eax, dword [0x04005608] 	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55c8	          0x83f801	                              cmp eax, 1	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55cb	            0x750d	                           jne 0x400561a	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55cd	    0x488b05000000	            mov rax, qword [0x04005614] 	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55d4	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55d8	            0x7428	                            je 0x4005642	      4362	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25
0x55da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x55de	    0x488db8e01800	                 lea rdi, [rax + 0x18e0]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x55e5	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x55e9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x55ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x55f1	          0x4889c6	                            mov rsi, rax	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x55f4	      0xe800000000	                          call 0x4005639	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x55f9	            0xeb07	                           jmp 0x4005642	      4363	gui.c	FUNCTION_65	FOR_1	IF_22	IF_23	IF_25	CALL_13
0x55fb	              0x90	                                     nop	      4225	gui.c	FUNCTION_65	FOR_1	IF_4
0x55fc	            0xeb04	                           jmp 0x4005642	      4225	gui.c	FUNCTION_65	FOR_1	IF_4
0x55fe	              0x90	                                     nop	      4230	gui.c	FUNCTION_65	FOR_1	IF_5
0x55ff	            0xeb01	                           jmp 0x4005642	      4230	gui.c	FUNCTION_65	FOR_1	IF_5
0x5601	              0x90	                                     nop	      4275	gui.c	FUNCTION_65	FOR_1	IF_11
0x5602	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x5606	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x560a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x560e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x5613	     0xf8516fcffff	                           jne 0x400526f	      4222	gui.c	FUNCTION_65	FOR_1	CALL_3
0x5619	    0x488b05000000	            mov rax, qword [0x04005660] 	      4367	gui.c	FUNCTION_65
0x5620	    0x488905000000	            mov qword [0x04005667], rax 	      4367	gui.c	FUNCTION_65
0x5627	    0x8b0500000000	            mov eax, dword [0x0400566d] 	      4368	gui.c	FUNCTION_65
0x562d	          0x83e801	                              sub eax, 1	      4368	gui.c	FUNCTION_65
0x5630	    0x890500000000	            mov dword [0x04005676], eax 	      4368	gui.c	FUNCTION_65
0x5636	            0xeb01	                           jmp 0x4005679	      4368	gui.c	FUNCTION_65
0x5638	              0x90	                                     nop	      4194	gui.c	FUNCTION_65	IF_1
0x5639	              0xc9	                                   leave	      4369	gui.c	FUNCTION_65
0x563a	              0xc3	                                     ret	      4369	gui.c	FUNCTION_65
gui_screenchar	ELSE,0:IF,3:CALL,5:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	117
0x2572	              0x55	                                push rbp	      2107	gui.c	FUNCTION_37
0x2573	          0x4889e5	                            mov rbp, rsp	      2107	gui.c	FUNCTION_37
0x2576	        0x4883ec40	                           sub rsp, 0x40	      2107	gui.c	FUNCTION_37
0x257a	          0x897ddc	             mov dword [rbp - 0x24], edi	      2107	gui.c	FUNCTION_37
0x257d	          0x8975d8	             mov dword [rbp - 0x28], esi	      2107	gui.c	FUNCTION_37
0x2580	        0x488955d0	             mov qword [rbp - 0x30], rdx	      2107	gui.c	FUNCTION_37
0x2584	        0x48894dc8	             mov qword [rbp - 0x38], rcx	      2107	gui.c	FUNCTION_37
0x2588	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      2107	gui.c	FUNCTION_37
0x258c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2107	gui.c	FUNCTION_37
0x2595	        0x488945f8	                mov qword [rbp - 8], rax	      2107	gui.c	FUNCTION_37
0x2599	            0x31c0	                            xor eax, eax	      2107	gui.c	FUNCTION_37
0x259b	    0x8b0500000000	            mov eax, dword [0x040025e1] 	      2112	gui.c	FUNCTION_37	IF_1
0x25a1	            0x85c0	                           test eax, eax	      2112	gui.c	FUNCTION_37	IF_1
0x25a3	            0x7420	                            je 0x4002605	      2112	gui.c	FUNCTION_37	IF_1
0x25a5	    0x488b15000000	            mov rdx, qword [0x040025ec] 	      2112	gui.c	FUNCTION_37	IF_1
0x25ac	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2112	gui.c	FUNCTION_37	IF_1
0x25af	            0x4898	                                    cdqe	      2112	gui.c	FUNCTION_37	IF_1
0x25b1	          0x4801d0	                            add rax, rdx	      2112	gui.c	FUNCTION_37	IF_1
0x25b4	           0xfb600	                   movzx eax, byte [rax]	      2112	gui.c	FUNCTION_37	IF_1
0x25b7	            0x84c0	                             test al, al	      2112	gui.c	FUNCTION_37	IF_1
0x25b9	            0x750a	                           jne 0x4002605	      2112	gui.c	FUNCTION_37	IF_1
0x25bb	      0xb801000000	                              mov eax, 1	      2113	gui.c	FUNCTION_37	IF_1
0x25c0	      0xe936010000	                           jmp 0x400273b	      2113	gui.c	FUNCTION_37	IF_1
0x25c5	    0x8b0500000000	            mov eax, dword [0x0400260b] 	      2115	gui.c	FUNCTION_37	IF_2
0x25cb	            0x85c0	                           test eax, eax	      2115	gui.c	FUNCTION_37	IF_2
0x25cd	            0x7456	                            je 0x4002665	      2115	gui.c	FUNCTION_37	IF_2
0x25cf	    0x488b05000000	            mov rax, qword [0x04002616] 	      2115	gui.c	FUNCTION_37	IF_2
0x25d6	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2115	gui.c	FUNCTION_37	IF_2
0x25d9	          0x4863d2	                         movsxd rdx, edx	      2115	gui.c	FUNCTION_37	IF_2
0x25dc	        0x48c1e202	                              shl rdx, 2	      2115	gui.c	FUNCTION_37	IF_2
0x25e0	          0x4801d0	                            add rax, rdx	      2115	gui.c	FUNCTION_37	IF_2
0x25e3	            0x8b00	                    mov eax, dword [rax]	      2115	gui.c	FUNCTION_37	IF_2
0x25e5	            0x85c0	                           test eax, eax	      2115	gui.c	FUNCTION_37	IF_2
0x25e7	            0x743c	                            je 0x4002665	      2115	gui.c	FUNCTION_37	IF_2
0x25e9	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x25ed	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x25f0	          0x4889d6	                            mov rsi, rdx	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x25f3	            0x89c7	                            mov edi, eax	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x25f5	      0xe800000000	                          call 0x400263a	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x25fa	          0x4189c2	                           mov r10d, eax	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x25fd	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x2600	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x2604	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x2608	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x260b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x260f	          0x4189f9	                            mov r9d, edi	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x2612	          0x4989f0	                             mov r8, rsi	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x2615	          0x4489d6	                           mov esi, r10d	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x2618	          0x4889c7	                            mov rdi, rax	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x261b	      0xe800000000	                          call 0x4002660	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x2620	      0xe9d6000000	                           jmp 0x400273b	      2117	gui.c	FUNCTION_37	IF_2	CALL_2
0x2625	    0x8b0500000000	            mov eax, dword [0x0400266b] 	      2120	gui.c	FUNCTION_37	IF_3
0x262b	      0x3dcc260000	                         cmp eax, 0x26cc	      2120	gui.c	FUNCTION_37	IF_3
0x2630	            0x7567	                           jne 0x40026d9	      2120	gui.c	FUNCTION_37	IF_3
0x2632	    0x488b15000000	            mov rdx, qword [0x04002679] 	      2120	gui.c	FUNCTION_37	IF_3
0x2639	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2120	gui.c	FUNCTION_37	IF_3
0x263c	            0x4898	                                    cdqe	      2120	gui.c	FUNCTION_37	IF_3
0x263e	          0x4801d0	                            add rax, rdx	      2120	gui.c	FUNCTION_37	IF_3
0x2641	           0xfb600	                   movzx eax, byte [rax]	      2120	gui.c	FUNCTION_37	IF_3
0x2644	            0x3c8e	                            cmp al, 0x8e	      2120	gui.c	FUNCTION_37	IF_3
0x2646	            0x7551	                           jne 0x40026d9	      2120	gui.c	FUNCTION_37	IF_3
0x2648	    0x488b15000000	            mov rdx, qword [0x0400268f] 	      2122	gui.c	FUNCTION_37	IF_3
0x264f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2122	gui.c	FUNCTION_37	IF_3
0x2652	            0x4898	                                    cdqe	      2122	gui.c	FUNCTION_37	IF_3
0x2654	          0x4801d0	                            add rax, rdx	      2122	gui.c	FUNCTION_37	IF_3
0x2657	           0xfb600	                   movzx eax, byte [rax]	      2122	gui.c	FUNCTION_37	IF_3
0x265a	          0x8845e0	               mov byte [rbp - 0x20], al	      2122	gui.c	FUNCTION_37	IF_3
0x265d	    0x488b15000000	            mov rdx, qword [0x040026a4] 	      2123	gui.c	FUNCTION_37	IF_3
0x2664	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2123	gui.c	FUNCTION_37	IF_3
0x2667	            0x4898	                                    cdqe	      2123	gui.c	FUNCTION_37	IF_3
0x2669	          0x4801d0	                            add rax, rdx	      2123	gui.c	FUNCTION_37	IF_3
0x266c	           0xfb600	                   movzx eax, byte [rax]	      2123	gui.c	FUNCTION_37	IF_3
0x266f	          0x8845e1	               mov byte [rbp - 0x1f], al	      2123	gui.c	FUNCTION_37	IF_3
0x2672	          0x8b7dc4	             mov edi, dword [rbp - 0x3c]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x2675	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x2679	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x267d	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x2680	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x2684	          0x4189f9	                            mov r9d, edi	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x2687	          0x4989f0	                             mov r8, rsi	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x268a	      0xbe02000000	                              mov esi, 2	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x268f	          0x4889c7	                            mov rdi, rax	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x2692	      0xe800000000	                          call 0x40026d7	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x2697	            0xeb62	                           jmp 0x400273b	      2124	gui.c	FUNCTION_37	IF_3	CALL_3
0x2699	    0x8b0500000000	            mov eax, dword [0x040026df] 	      2129	gui.c	FUNCTION_37
0x269f	            0x85c0	                           test eax, eax	      2128	gui.c	FUNCTION_37	CALL_4
0x26a1	            0x7421	                            je 0x4002704	      2128	gui.c	FUNCTION_37	CALL_4
0x26a3	    0x488b05000000	            mov rax, qword [0x040026ea] 	      2129	gui.c	FUNCTION_37
0x26aa	    0x488b0d000000	            mov rcx, qword [0x040026f1] 	      2129	gui.c	FUNCTION_37
0x26b1	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2129	gui.c	FUNCTION_37
0x26b4	          0x4863d2	                         movsxd rdx, edx	      2129	gui.c	FUNCTION_37
0x26b7	          0x4801ca	                            add rdx, rcx	      2129	gui.c	FUNCTION_37
0x26ba	          0x4889d7	                            mov rdi, rdx	      2128	gui.c	FUNCTION_37	CALL_4
0x26bd	            0xffd0	                                call rax	      2128	gui.c	FUNCTION_37	CALL_4
0x26bf	          0x4189c2	                           mov r10d, eax	      2128	gui.c	FUNCTION_37	CALL_4
0x26c2	            0xeb06	                           jmp 0x400270a	      2128	gui.c	FUNCTION_37	CALL_4
0x26c4	    0x41ba01000000	                             mov r10d, 1	      2128	gui.c	FUNCTION_37	CALL_4
0x26ca	    0x488b15000000	            mov rdx, qword [0x04002711] 	      2128	gui.c	FUNCTION_37	CALL_4
0x26d1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2128	gui.c	FUNCTION_37	CALL_4
0x26d4	            0x4898	                                    cdqe	      2128	gui.c	FUNCTION_37	CALL_4
0x26d6	        0x488d3c02	                    lea rdi, [rdx + rax]	      2128	gui.c	FUNCTION_37	CALL_4
0x26da	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	      2128	gui.c	FUNCTION_37	CALL_4
0x26dd	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      2128	gui.c	FUNCTION_37	CALL_4
0x26e1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2128	gui.c	FUNCTION_37	CALL_4
0x26e5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2128	gui.c	FUNCTION_37	CALL_4
0x26e8	          0x4189f1	                            mov r9d, esi	      2128	gui.c	FUNCTION_37	CALL_4
0x26eb	          0x4989c8	                             mov r8, rcx	      2128	gui.c	FUNCTION_37	CALL_4
0x26ee	          0x4889d1	                            mov rcx, rdx	      2128	gui.c	FUNCTION_37	CALL_4
0x26f1	            0x89c2	                            mov edx, eax	      2128	gui.c	FUNCTION_37	CALL_4
0x26f3	          0x4489d6	                           mov esi, r10d	      2128	gui.c	FUNCTION_37	CALL_4
0x26f6	      0xe800000000	                          call 0x400273b	      2128	gui.c	FUNCTION_37	CALL_4
0x26fb	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2134	gui.c	FUNCTION_37
0x26ff	    0x644833342528	                xor rsi, qword fs:[0x28]	      2134	gui.c	FUNCTION_37
0x2708	            0x7405	                            je 0x400274f	      2134	gui.c	FUNCTION_37
0x270a	      0xe800000000	                          call 0x400274f	      2134	gui.c	FUNCTION_37
0x270f	              0xc9	                                   leave	      2134	gui.c	FUNCTION_37
0x2710	              0xc3	                                     ret	      2134	gui.c	FUNCTION_37
gui_prepare	ELSE,0:IF,0:CALL,1:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	15
0x3f2	              0x55	                                push rbp	       352	gui.c	FUNCTION_5
0x3f3	          0x4889e5	                            mov rbp, rsp	       352	gui.c	FUNCTION_5
0x3f6	        0x4883ec10	                           sub rsp, 0x10	       352	gui.c	FUNCTION_5
0x3fa	        0x48897df8	                mov qword [rbp - 8], rdi	       352	gui.c	FUNCTION_5
0x3fe	        0x488975f0	             mov qword [rbp - 0x10], rsi	       352	gui.c	FUNCTION_5
0x402	    0xc70500000000	               mov dword [0x0400044c], 0	       353	gui.c	FUNCTION_5
0x40c	    0xc70500000000	               mov dword [0x04000456], 0	       354	gui.c	FUNCTION_5
0x416	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       355	gui.c	FUNCTION_5	CALL_1
0x41a	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	gui.c	FUNCTION_5	CALL_1
0x41e	          0x4889d6	                            mov rsi, rdx	       355	gui.c	FUNCTION_5	CALL_1
0x421	          0x4889c7	                            mov rdi, rax	       355	gui.c	FUNCTION_5	CALL_1
0x424	      0xe800000000	                          call 0x4000469	       355	gui.c	FUNCTION_5	CALL_1
0x429	              0x90	                                     nop	       356	gui.c	FUNCTION_5
0x42a	              0xc9	                                   leave	       356	gui.c	FUNCTION_5
0x42b	              0xc3	                                     ret	       356	gui.c	FUNCTION_5
gui_start_highlight	ELSE,1:IF,1:CALL,0:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	14
0x1db6	              0x55	                                push rbp	      1713	gui.c	FUNCTION_26
0x1db7	          0x4889e5	                            mov rbp, rsp	      1713	gui.c	FUNCTION_26
0x1dba	          0x897dfc	                mov dword [rbp - 4], edi	      1713	gui.c	FUNCTION_26
0x1dbd	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1714	gui.c	FUNCTION_26	IF_1
0x1dc4	            0x7e0b	                           jle 0x4001e11	      1714	gui.c	FUNCTION_26	IF_1
0x1dc6	          0x8b45fc	                mov eax, dword [rbp - 4]	      1715	gui.c	FUNCTION_26	IF_1
0x1dc9	    0x890500000000	            mov dword [0x04001e0f], eax 	      1715	gui.c	FUNCTION_26	IF_1
0x1dcf	            0xeb0f	                           jmp 0x4001e20	      1718	gui.c	FUNCTION_26	ELSE_1
0x1dd1	    0x8b0500000000	            mov eax, dword [0x04001e17] 	      1717	gui.c	FUNCTION_26	ELSE_1
0x1dd7	           0xb45fc	                 or eax, dword [rbp - 4]	      1717	gui.c	FUNCTION_26	ELSE_1
0x1dda	    0x890500000000	            mov dword [0x04001e20], eax 	      1717	gui.c	FUNCTION_26	ELSE_1
0x1de0	              0x90	                                     nop	      1718	gui.c	FUNCTION_26	ELSE_1
0x1de1	              0x5d	                                 pop rbp	      1718	gui.c	FUNCTION_26	ELSE_1
0x1de2	              0xc3	                                     ret	      1718	gui.c	FUNCTION_26	ELSE_1
gui_may_update_scrollbars	ELSE,0:IF,1:CALL,3:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	17
0x50f3	              0x55	                                push rbp	      4166	gui.c	FUNCTION_64
0x50f4	          0x4889e5	                            mov rbp, rsp	      4166	gui.c	FUNCTION_64
0x50f7	    0x8b0500000000	            mov eax, dword [0x0400513d] 	      4167	gui.c	FUNCTION_64	IF_1
0x50fd	            0x85c0	                           test eax, eax	      4167	gui.c	FUNCTION_64	IF_1
0x50ff	            0x7423	                            je 0x4005164	      4167	gui.c	FUNCTION_64	IF_1
0x5101	    0x8b0500000000	            mov eax, dword [0x04005147] 	      4167	gui.c	FUNCTION_64	IF_1
0x5107	            0x85c0	                           test eax, eax	      4167	gui.c	FUNCTION_64	IF_1
0x5109	            0x7519	                           jne 0x4005164	      4167	gui.c	FUNCTION_64	IF_1
0x510b	      0xe800000000	                          call 0x4005150	      4169	gui.c	FUNCTION_64	IF_1	CALL_1
0x5110	      0xbf00000000	                              mov edi, 0	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x5115	      0xe800000000	                          call 0x400515a	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x511a	      0xbf01000000	                              mov edi, 1	      4171	gui.c	FUNCTION_64	IF_1	CALL_3
0x511f	      0xe800000000	                          call 0x4005164	      4171	gui.c	FUNCTION_64	IF_1	CALL_3
0x5124	    0xc70500000000	               mov dword [0x0400516e], 1	      4173	gui.c	FUNCTION_64
0x512e	              0x90	                                     nop	      4174	gui.c	FUNCTION_64
0x512f	              0x5d	                                 pop rbp	      4174	gui.c	FUNCTION_64
0x5130	              0xc3	                                     ret	      4174	gui.c	FUNCTION_64
gui_position_components	ELSE,0:IF,6:CALL,8:functions,0:WHILE,0:SWITCH,0:DO,0:FOR,0	61
0x170b	              0x55	                                push rbp	      1337	gui.c	FUNCTION_17
0x170c	          0x4889e5	                            mov rbp, rsp	      1337	gui.c	FUNCTION_17
0x170f	        0x4883ec20	                           sub rsp, 0x20	      1337	gui.c	FUNCTION_17
0x1713	          0x897dec	             mov dword [rbp - 0x14], edi	      1337	gui.c	FUNCTION_17
0x1716	    0x8b0500000000	            mov eax, dword [0x0400175c] 	      1344	gui.c	FUNCTION_17
0x171c	          0x83c001	                              add eax, 1	      1344	gui.c	FUNCTION_17
0x171f	    0x890500000000	            mov dword [0x04001765], eax 	      1344	gui.c	FUNCTION_17
0x1725	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1346	gui.c	FUNCTION_17
0x172c	    0x8b0500000000	            mov eax, dword [0x04001772] 	      1347	gui.c	FUNCTION_17	IF_1
0x1732	            0x85c0	                           test eax, eax	      1347	gui.c	FUNCTION_17	IF_1
0x1734	            0x7409	                            je 0x400177f	      1347	gui.c	FUNCTION_17	IF_1
0x1736	    0x8b0500000000	            mov eax, dword [0x0400177c] 	      1348	gui.c	FUNCTION_17	IF_1
0x173c	           0x145f0	             add dword [rbp - 0x10], eax	      1348	gui.c	FUNCTION_17	IF_1
0x173f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1350	gui.c	FUNCTION_17
0x1746	    0x8b1500000000	            mov edx, dword [0x0400178c] 	      1378	gui.c	FUNCTION_17
0x174c	    0x8b0500000000	            mov eax, dword [0x04001792] 	      1378	gui.c	FUNCTION_17
0x1752	           0xfafc2	                           imul eax, edx	      1378	gui.c	FUNCTION_17
0x1755	    0x8b1500000000	            mov edx, dword [0x0400179b] 	      1378	gui.c	FUNCTION_17
0x175b	             0x1d2	                            add edx, edx	      1378	gui.c	FUNCTION_17
0x175d	             0x1d0	                            add eax, edx	      1378	gui.c	FUNCTION_17
0x175f	          0x8945f8	                mov dword [rbp - 8], eax	      1378	gui.c	FUNCTION_17
0x1762	    0x8b1500000000	            mov edx, dword [0x040017a8] 	      1379	gui.c	FUNCTION_17
0x1768	    0x8b0500000000	            mov eax, dword [0x040017ae] 	      1379	gui.c	FUNCTION_17
0x176e	           0xfafc2	                           imul eax, edx	      1379	gui.c	FUNCTION_17
0x1771	    0x8b1500000000	            mov edx, dword [0x040017b7] 	      1379	gui.c	FUNCTION_17
0x1777	             0x1d2	                            add edx, edx	      1379	gui.c	FUNCTION_17
0x1779	             0x1d0	                            add eax, edx	      1379	gui.c	FUNCTION_17
0x177b	          0x8945fc	                mov dword [rbp - 4], eax	      1379	gui.c	FUNCTION_17
0x177e	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      1381	gui.c	FUNCTION_17	CALL_5
0x1781	          0x8b55f8	                mov edx, dword [rbp - 8]	      1381	gui.c	FUNCTION_17	CALL_5
0x1784	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1381	gui.c	FUNCTION_17	CALL_5
0x1787	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1381	gui.c	FUNCTION_17	CALL_5
0x178a	            0x89c7	                            mov edi, eax	      1381	gui.c	FUNCTION_17	CALL_5
0x178c	      0xe800000000	                          call 0x40017d1	      1381	gui.c	FUNCTION_17	CALL_5
0x1791	      0xe800000000	                          call 0x40017d6	      1390	gui.c	FUNCTION_17	CALL_7
0x1796	    0x8b0500000000	            mov eax, dword [0x040017dc] 	      1392	gui.c	FUNCTION_17	IF_6
0x179c	            0x85c0	                           test eax, eax	      1392	gui.c	FUNCTION_17	IF_6
0x179e	            0x7428	                            je 0x4001808	      1392	gui.c	FUNCTION_17	IF_6
0x17a0	    0x8b0d00000000	            mov ecx, dword [0x040017e6] 	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17a6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17a9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17ac	          0x8d3402	                    lea esi, [rdx + rax]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17af	          0x8b55f8	                mov edx, dword [rbp - 8]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17b2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17b5	          0x4189c8	                            mov r8d, ecx	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17b8	            0x89d1	                            mov ecx, edx	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17ba	            0x89f2	                            mov edx, esi	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17bc	            0x89c6	                            mov esi, eax	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17be	      0xbf00000000	                              mov edi, 0	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17c3	      0xe800000000	                          call 0x4001808	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x17c8	    0xc70500000000	               mov dword [0x04001812], 0	      1398	gui.c	FUNCTION_17
0x17d2	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      1399	gui.c	FUNCTION_17
0x17d5	          0x8b45f8	                mov eax, dword [rbp - 8]	      1399	gui.c	FUNCTION_17
0x17d8	             0x1d0	                            add eax, edx	      1399	gui.c	FUNCTION_17
0x17da	    0x890500000000	            mov dword [0x04001820], eax 	      1399	gui.c	FUNCTION_17
0x17e0	    0x8b0500000000	            mov eax, dword [0x04001826] 	      1401	gui.c	FUNCTION_17
0x17e6	          0x83e801	                              sub eax, 1	      1401	gui.c	FUNCTION_17
0x17e9	    0x890500000000	            mov dword [0x0400182f], eax 	      1401	gui.c	FUNCTION_17
0x17ef	              0x90	                                     nop	      1402	gui.c	FUNCTION_17
0x17f0	              0xc9	                                   leave	      1402	gui.c	FUNCTION_17
0x17f1	              0xc3	                                     ret	      1402	gui.c	FUNCTION_17
