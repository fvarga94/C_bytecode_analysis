lock_file	IF,1:CALL,5:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	52
0x2a6	              0x55	                                push rbp	        74	lockfile.c	FUNCTION_3
0x2a7	          0x4889e5	                            mov rbp, rsp	        74	lockfile.c	FUNCTION_3
0x2aa	        0x4883ec40	                           sub rsp, 0x40	        74	lockfile.c	FUNCTION_3
0x2ae	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        74	lockfile.c	FUNCTION_3
0x2b2	        0x488975d0	             mov qword [rbp - 0x30], rsi	        74	lockfile.c	FUNCTION_3
0x2b6	          0x8955cc	             mov dword [rbp - 0x34], edx	        74	lockfile.c	FUNCTION_3
0x2b9	    0x64488b042528	                mov rax, qword fs:[0x28]	        74	lockfile.c	FUNCTION_3
0x2c2	        0x488945f8	                mov qword [rbp - 8], rax	        74	lockfile.c	FUNCTION_3
0x2c6	            0x31c0	                            xor eax, eax	        74	lockfile.c	FUNCTION_3
0x2c8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        75	lockfile.c	FUNCTION_3
0x2d0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        75	lockfile.c	FUNCTION_3
0x2d8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        75	lockfile.c	FUNCTION_3
0x2e0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        77	lockfile.c	FUNCTION_3	CALL_1
0x2e4	        0x488d45e0	                   lea rax, [rbp - 0x20]	        77	lockfile.c	FUNCTION_3	CALL_1
0x2e8	          0x4889d6	                            mov rsi, rdx	        77	lockfile.c	FUNCTION_3	CALL_1
0x2eb	          0x4889c7	                            mov rdi, rax	        77	lockfile.c	FUNCTION_3	CALL_1
0x2ee	      0xe8d4fdffff	                  call sym.strbuf_addstr	        77	lockfile.c	FUNCTION_3	CALL_1
0x2f3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	        78	lockfile.c	FUNCTION_3	IF_1
0x2f6	          0x83e002	                              and eax, 2	        78	lockfile.c	FUNCTION_3	IF_1
0x2f9	            0x85c0	                           test eax, eax	        78	lockfile.c	FUNCTION_3	IF_1
0x2fb	            0x750c	                           jne 0x4000349	        78	lockfile.c	FUNCTION_3	IF_1
0x2fd	        0x488d45e0	                   lea rax, [rbp - 0x20]	        79	lockfile.c	FUNCTION_3	CALL_2
0x301	          0x4889c7	                            mov rdi, rax	        79	lockfile.c	FUNCTION_3	CALL_2
0x304	      0xe802ffffff	                call sym.resolve_symlink	        79	lockfile.c	FUNCTION_3	CALL_2
0x309	        0x488d45e0	                   lea rax, [rbp - 0x20]	        81	lockfile.c	FUNCTION_3	CALL_3
0x30d	      0xbe00000000	                              mov esi, 0	        81	lockfile.c	FUNCTION_3	CALL_3
0x312	          0x4889c7	                            mov rdi, rax	        81	lockfile.c	FUNCTION_3	CALL_3
0x315	      0xe8adfdffff	                  call sym.strbuf_addstr	        81	lockfile.c	FUNCTION_3	CALL_3
0x31a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        82	lockfile.c	FUNCTION_3	CALL_4
0x31e	          0x4889c7	                            mov rdi, rax	        82	lockfile.c	FUNCTION_3	CALL_4
0x321	      0xe800000000	                          call 0x4000366	        82	lockfile.c	FUNCTION_3	CALL_4
0x326	          0x4889c2	                            mov rdx, rax	        82	lockfile.c	FUNCTION_3	CALL_4
0x329	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        82	lockfile.c	FUNCTION_3	CALL_4
0x32d	          0x488910	                    mov qword [rax], rdx	        82	lockfile.c	FUNCTION_3	CALL_4
0x330	        0x488d45e0	                   lea rax, [rbp - 0x20]	        83	lockfile.c	FUNCTION_3	CALL_5
0x334	          0x4889c7	                            mov rdi, rax	        83	lockfile.c	FUNCTION_3	CALL_5
0x337	      0xe800000000	                          call 0x400037c	        83	lockfile.c	FUNCTION_3	CALL_5
0x33c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	lockfile.c	FUNCTION_3
0x340	          0x488b00	                    mov rax, qword [rax]	        84	lockfile.c	FUNCTION_3
0x343	          0x4885c0	                           test rax, rax	        84	lockfile.c	FUNCTION_3
0x346	            0x740c	                            je 0x4000394	        84	lockfile.c	FUNCTION_3
0x348	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	lockfile.c	FUNCTION_3
0x34c	          0x488b00	                    mov rax, qword [rax]	        84	lockfile.c	FUNCTION_3
0x34f	          0x8b4014	            mov eax, dword [rax + 0x14] 	        84	lockfile.c	FUNCTION_3
0x352	            0xeb05	                           jmp 0x4000399	        84	lockfile.c	FUNCTION_3
0x354	      0xb8ffffffff	                     mov eax, 0xffffffff	        84	lockfile.c	FUNCTION_3
0x359	        0x488b4df8	                mov rcx, qword [rbp - 8]	        85	lockfile.c	FUNCTION_3
0x35d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        85	lockfile.c	FUNCTION_3
0x366	            0x7405	                            je 0x40003ad	        85	lockfile.c	FUNCTION_3
0x368	      0xe800000000	                          call 0x40003ad	        85	lockfile.c	FUNCTION_3
0x36d	              0xc9	                                   leave	        85	lockfile.c	FUNCTION_3
0x36e	              0xc3	                                     ret	        85	lockfile.c	FUNCTION_3
const_error	IF,0:CALL,0:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	5
0x22	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_15
0x23	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_15
0x26	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_15
0x2b	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_15
0x2c	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_15
commit_lock_file_to	IF,0:CALL,1:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	12
0x167	              0x55	                                push rbp	       292	lockfile.h	FUNCTION_60
0x168	          0x4889e5	                            mov rbp, rsp	       292	lockfile.h	FUNCTION_60
0x16b	        0x4883ec10	                           sub rsp, 0x10	       292	lockfile.h	FUNCTION_60
0x16f	        0x48897df8	                mov qword [rbp - 8], rdi	       292	lockfile.h	FUNCTION_60
0x173	        0x488975f0	             mov qword [rbp - 0x10], rsi	       292	lockfile.h	FUNCTION_60
0x177	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	lockfile.h	FUNCTION_60	CALL_1
0x17b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       293	lockfile.h	FUNCTION_60	CALL_1
0x17f	          0x4889d6	                            mov rsi, rdx	       293	lockfile.h	FUNCTION_60	CALL_1
0x182	          0x4889c7	                            mov rdi, rax	       293	lockfile.h	FUNCTION_60	CALL_1
0x185	      0xe800000000	                          call 0x40001ca	       293	lockfile.h	FUNCTION_60	CALL_1
0x18a	              0xc9	                                   leave	       294	lockfile.h	FUNCTION_60
0x18b	              0xc3	                                     ret	       294	lockfile.h	FUNCTION_60
resolve_symlink	IF,2:CALL,6:functions,0:WHILE,1:FOR,0:SWITCH,0:DO,0:ELSE,1	45
0x20b	              0x55	                                push rbp	        49	lockfile.c	FUNCTION_2
0x20c	          0x4889e5	                            mov rbp, rsp	        49	lockfile.c	FUNCTION_2
0x20f	        0x4883ec20	                           sub rsp, 0x20	        49	lockfile.c	FUNCTION_2
0x213	        0x48897de8	             mov qword [rbp - 0x18], rdi	        49	lockfile.c	FUNCTION_2
0x217	    0xc745fc050000	                  mov dword [rbp - 4], 5	        50	lockfile.c	FUNCTION_2
0x21e	            0xeb64	                           jmp 0x40002c4	        53	lockfile.c	FUNCTION_2	WHILE_1
0x220	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x224	        0x488b5008	                mov rdx, qword [rax + 8]	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x228	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x22c	        0x488b4010	            mov rax, qword [rax + 0x10] 	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x230	          0x4889c6	                            mov rsi, rax	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x233	      0xbf00000000	                              mov edi, 0	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x238	      0xe800000000	                          call 0x400027d	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x23d	            0x85c0	                           test eax, eax	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x23f	            0x7852	                            js 0x40002d3	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x241	    0x488b05000000	            mov rax, qword [0x04000288] 	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x248	          0x4889c7	                            mov rdi, rax	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x24b	      0xe8d8feffff	               call sym.is_absolute_path	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x250	            0x85c0	                           test eax, eax	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x252	            0x7413	                            je 0x40002a7	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x254	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	lockfile.c	FUNCTION_2	WHILE_1	CALL_3
0x258	      0xbe00000000	                              mov esi, 0	        59	lockfile.c	FUNCTION_2	WHILE_1	CALL_3
0x25d	          0x4889c7	                            mov rdi, rax	        59	lockfile.c	FUNCTION_2	WHILE_1	CALL_3
0x260	      0xe8c8fdffff	                  call sym.strbuf_setlen	        59	lockfile.c	FUNCTION_2	WHILE_1	CALL_3
0x265	            0xeb0c	                           jmp 0x40002b3	        59	lockfile.c	FUNCTION_2	WHILE_1	CALL_3
0x267	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	lockfile.c	FUNCTION_2	WHILE_1	CALL_4
0x26b	          0x4889c7	                            mov rdi, rax	        65	lockfile.c	FUNCTION_2	WHILE_1	CALL_4
0x26e	      0xe819ffffff	       call sym.trim_last_path_component	        65	lockfile.c	FUNCTION_2	WHILE_1	CALL_4
0x273	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	lockfile.c	FUNCTION_2	WHILE_1	CALL_5
0x277	      0xbe00000000	                              mov esi, 0	        67	lockfile.c	FUNCTION_2	WHILE_1	CALL_5
0x27c	          0x4889c7	                            mov rdi, rax	        67	lockfile.c	FUNCTION_2	WHILE_1	CALL_5
0x27f	      0xe800000000	                          call 0x40002c4	        67	lockfile.c	FUNCTION_2	WHILE_1	CALL_5
0x284	          0x8b45fc	                mov eax, dword [rbp - 4]	        53	lockfile.c	FUNCTION_2	WHILE_1
0x287	          0x8d50ff	                      lea edx, [rax - 1]	        53	lockfile.c	FUNCTION_2	WHILE_1
0x28a	          0x8955fc	                mov dword [rbp - 4], edx	        53	lockfile.c	FUNCTION_2	WHILE_1
0x28d	            0x85c0	                           test eax, eax	        53	lockfile.c	FUNCTION_2	WHILE_1
0x28f	            0x758f	                           jne 0x4000260	        53	lockfile.c	FUNCTION_2	WHILE_1
0x291	            0xeb01	                           jmp 0x40002d4	        53	lockfile.c	FUNCTION_2	WHILE_1
0x293	              0x90	                                     nop	        55	lockfile.c	FUNCTION_2	WHILE_1	IF_1
0x294	      0xbe00000000	                              mov esi, 0	        69	lockfile.c	FUNCTION_2	CALL_6
0x299	      0xbf00000000	                              mov edi, 0	        69	lockfile.c	FUNCTION_2	CALL_6
0x29e	      0xe88afdffff	                  call sym.strbuf_setlen	        69	lockfile.c	FUNCTION_2	CALL_6
0x2a3	              0x90	                                     nop	        70	lockfile.c	FUNCTION_2
0x2a4	              0xc9	                                   leave	        70	lockfile.c	FUNCTION_2
0x2a5	              0xc3	                                     ret	        70	lockfile.c	FUNCTION_2
get_locked_file_path	IF,1:CALL,6:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	50
0x6d0	              0x55	                                push rbp	       190	lockfile.c	FUNCTION_8
0x6d1	          0x4889e5	                            mov rbp, rsp	       190	lockfile.c	FUNCTION_8
0x6d4	        0x4883ec30	                           sub rsp, 0x30	       190	lockfile.c	FUNCTION_8
0x6d8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       190	lockfile.c	FUNCTION_8
0x6dc	    0x64488b042528	                mov rax, qword fs:[0x28]	       190	lockfile.c	FUNCTION_8
0x6e5	        0x488945f8	                mov qword [rbp - 8], rax	       190	lockfile.c	FUNCTION_8
0x6e9	            0x31c0	                            xor eax, eax	       190	lockfile.c	FUNCTION_8
0x6eb	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       191	lockfile.c	FUNCTION_8
0x6f3	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       191	lockfile.c	FUNCTION_8
0x6fb	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       191	lockfile.c	FUNCTION_8
0x703	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       193	lockfile.c	FUNCTION_8	CALL_2
0x707	          0x488b00	                    mov rax, qword [rax]	       193	lockfile.c	FUNCTION_8	CALL_2
0x70a	          0x4889c7	                            mov rdi, rax	       193	lockfile.c	FUNCTION_8	CALL_2
0x70d	      0xe800000000	                          call 0x4000752	       193	lockfile.c	FUNCTION_8	CALL_2
0x712	          0x4889c2	                            mov rdx, rax	       193	lockfile.c	FUNCTION_8	CALL_2
0x715	        0x488d45e0	                   lea rax, [rbp - 0x20]	       193	lockfile.c	FUNCTION_8	CALL_2
0x719	          0x4889d6	                            mov rsi, rdx	       193	lockfile.c	FUNCTION_8	CALL_2
0x71c	          0x4889c7	                            mov rdi, rax	       193	lockfile.c	FUNCTION_8	CALL_2
0x71f	      0xe8a3f9ffff	                  call sym.strbuf_addstr	       193	lockfile.c	FUNCTION_8	CALL_2
0x724	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	lockfile.c	FUNCTION_8	IF_1
0x728	        0x4883f805	                              cmp rax, 5	       194	lockfile.c	FUNCTION_8	IF_1
0x72c	            0x7620	                           jbe 0x400078e	       194	lockfile.c	FUNCTION_8	IF_1
0x72e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x732	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x736	        0x4883ea05	                              sub rdx, 5	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x73a	          0x4801d0	                            add rax, rdx	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x73d	      0xbe00000000	                              mov esi, 0	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x742	          0x4889c7	                            mov rdi, rax	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x745	      0xe800000000	                          call 0x400078a	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x74a	            0x85c0	                           test eax, eax	       194	lockfile.c	FUNCTION_8	IF_1
0x74c	            0x740f	                            je 0x400079d	       194	lockfile.c	FUNCTION_8	IF_1
0x74e	      0xbf00000000	                              mov edi, 0	       196	lockfile.c	FUNCTION_8	CALL_4
0x753	      0xb800000000	                              mov eax, 0	       196	lockfile.c	FUNCTION_8	CALL_4
0x758	      0xe800000000	                          call 0x400079d	       196	lockfile.c	FUNCTION_8	CALL_4
0x75d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       198	lockfile.c	FUNCTION_8	CALL_5
0x761	        0x488d50fb	                      lea rdx, [rax - 5]	       198	lockfile.c	FUNCTION_8	CALL_5
0x765	        0x488d45e0	                   lea rax, [rbp - 0x20]	       198	lockfile.c	FUNCTION_8	CALL_5
0x769	          0x4889d6	                            mov rsi, rdx	       198	lockfile.c	FUNCTION_8	CALL_5
0x76c	          0x4889c7	                            mov rdi, rax	       198	lockfile.c	FUNCTION_8	CALL_5
0x76f	      0xe8b9f8ffff	                  call sym.strbuf_setlen	       198	lockfile.c	FUNCTION_8	CALL_5
0x774	        0x488d45e0	                   lea rax, [rbp - 0x20]	       199	lockfile.c	FUNCTION_8	CALL_6
0x778	      0xbe00000000	                              mov esi, 0	       199	lockfile.c	FUNCTION_8	CALL_6
0x77d	          0x4889c7	                            mov rdi, rax	       199	lockfile.c	FUNCTION_8	CALL_6
0x780	      0xe800000000	                          call 0x40007c5	       199	lockfile.c	FUNCTION_8	CALL_6
0x785	        0x488b4df8	                mov rcx, qword [rbp - 8]	       200	lockfile.c	FUNCTION_8
0x789	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       200	lockfile.c	FUNCTION_8
0x792	            0x7405	                            je 0x40007d9	       200	lockfile.c	FUNCTION_8
0x794	      0xe800000000	                          call 0x40007d9	       200	lockfile.c	FUNCTION_8
0x799	              0xc9	                                   leave	       200	lockfile.c	FUNCTION_8
0x79a	              0xc3	                                     ret	       200	lockfile.c	FUNCTION_8
lock_file_timeout	IF,7:CALL,6:functions,0:WHILE,1:FOR,0:SWITCH,0:DO,0:ELSE,3	99
0x36f	              0x55	                                push rbp	       103	lockfile.c	FUNCTION_4
0x370	          0x4889e5	                            mov rbp, rsp	       103	lockfile.c	FUNCTION_4
0x373	        0x4883ec50	                           sub rsp, 0x50	       103	lockfile.c	FUNCTION_4
0x377	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       103	lockfile.c	FUNCTION_4
0x37b	        0x488975c0	             mov qword [rbp - 0x40], rsi	       103	lockfile.c	FUNCTION_4
0x37f	          0x8955bc	             mov dword [rbp - 0x44], edx	       103	lockfile.c	FUNCTION_4
0x382	        0x48894db0	             mov qword [rbp - 0x50], rcx	       103	lockfile.c	FUNCTION_4
0x386	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       104	lockfile.c	FUNCTION_4
0x38d	    0xc745e0010000	               mov dword [rbp - 0x20], 1	       105	lockfile.c	FUNCTION_4
0x394	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       106	lockfile.c	FUNCTION_4
0x39c	      0x48837db000	               cmp qword [rbp - 0x50], 0	       109	lockfile.c	FUNCTION_4	IF_1
0x3a1	            0x751b	                           jne 0x40003fe	       109	lockfile.c	FUNCTION_4	IF_1
0x3a3	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       110	lockfile.c	FUNCTION_4	CALL_1
0x3a6	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       110	lockfile.c	FUNCTION_4	CALL_1
0x3aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       110	lockfile.c	FUNCTION_4	CALL_1
0x3ae	          0x4889ce	                            mov rsi, rcx	       110	lockfile.c	FUNCTION_4	CALL_1
0x3b1	          0x4889c7	                            mov rdi, rax	       110	lockfile.c	FUNCTION_4	CALL_1
0x3b4	      0xe8edfeffff	                      call sym.lock_file	       110	lockfile.c	FUNCTION_4	CALL_1
0x3b9	      0xe923010000	                           jmp 0x4000521	       110	lockfile.c	FUNCTION_4	CALL_1
0x3be	    0x8b0500000000	            mov eax, dword [0x04000404] 	       112	lockfile.c	FUNCTION_4	IF_2
0x3c4	            0x85c0	                           test eax, eax	       112	lockfile.c	FUNCTION_4	IF_2
0x3c6	            0x7516	                           jne 0x400041e	       112	lockfile.c	FUNCTION_4	IF_2
0x3c8	      0xe800000000	                          call 0x400040d	       113	lockfile.c	FUNCTION_4	IF_2	CALL_3
0x3cd	            0x89c7	                            mov edi, eax	       113	lockfile.c	FUNCTION_4	IF_2	CALL_3
0x3cf	      0xe800000000	                          call 0x4000414	       113	lockfile.c	FUNCTION_4	IF_2	CALL_3
0x3d4	    0xc70500000000	               mov dword [0x0400041e], 1	       114	lockfile.c	FUNCTION_4	IF_2
0x3de	      0x48837db000	               cmp qword [rbp - 0x50], 0	       117	lockfile.c	FUNCTION_4	IF_3
0x3e3	            0x7e08	                           jle 0x400042d	       117	lockfile.c	FUNCTION_4	IF_3
0x3e5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       118	lockfile.c	FUNCTION_4	IF_3
0x3e9	        0x488945e8	             mov qword [rbp - 0x18], rax	       118	lockfile.c	FUNCTION_4	IF_3
0x3ed	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x3f0	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x3f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x3f8	          0x4889ce	                            mov rsi, rcx	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x3fb	          0x4889c7	                            mov rdi, rax	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x3fe	      0xe8a3feffff	                      call sym.lock_file	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x403	          0x8945e4	             mov dword [rbp - 0x1c], eax	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x406	        0x837de400	               cmp dword [rbp - 0x1c], 0	       126	lockfile.c	FUNCTION_4	WHILE_1	IF_4
0x40a	            0x7808	                            js 0x4000454	       126	lockfile.c	FUNCTION_4	WHILE_1	IF_4
0x40c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       127	lockfile.c	FUNCTION_4	WHILE_1	IF_4
0x40f	      0xe9cd000000	                           jmp 0x4000521	       127	lockfile.c	FUNCTION_4	WHILE_1	IF_4
0x414	      0xe800000000	                          call 0x4000459	       128	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x419	            0x8b00	                    mov eax, dword [rax]	       128	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x41b	          0x83f811	                           cmp eax, 0x11	       128	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x41e	            0x740a	                            je 0x400046a	       128	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x420	      0xb8ffffffff	                     mov eax, 0xffffffff	       129	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x425	      0xe9b7000000	                           jmp 0x4000521	       129	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x42a	      0x48837db000	               cmp qword [rbp - 0x50], 0	       130	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x42f	            0x7e11	                           jle 0x4000482	       130	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x431	      0x48837de800	               cmp qword [rbp - 0x18], 0	       130	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x436	            0x7f0a	                            jg 0x4000482	       130	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x438	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x43d	      0xe99f000000	                           jmp 0x4000521	       131	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x442	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       133	lockfile.c	FUNCTION_4	WHILE_1
0x445	            0x4898	                                    cdqe	       133	lockfile.c	FUNCTION_4	WHILE_1
0x447	        0x488945f0	             mov qword [rbp - 0x10], rax	       133	lockfile.c	FUNCTION_4	WHILE_1
0x44b	      0xe800000000	                          call 0x4000490	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x450	            0x89c1	                            mov ecx, eax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x452	      0xbad34d6210	                     mov edx, 0x10624dd3	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x457	            0x89c8	                            mov eax, ecx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x459	            0xf7ea	                                imul edx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x45b	          0xc1fa05	                              sar edx, 5	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x45e	            0x89c8	                            mov eax, ecx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x460	          0xc1f81f	                           sar eax, 0x1f	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x463	            0x29c2	                            sub edx, eax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x465	            0x89d0	                            mov eax, edx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x467	    0x69c0f4010000	                    imul eax, eax, 0x1f4	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x46d	            0x29c1	                            sub ecx, eax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x46f	            0x89c8	                            mov eax, ecx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x471	       0x5ee020000	                          add eax, 0x2ee	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x476	            0x4898	                                    cdqe	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x478	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x47d	          0x4889c1	                            mov rcx, rax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x480	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x48a	          0x4889c8	                            mov rax, rcx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x48d	          0x48f7ea	                                imul rdx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x490	        0x48c1fa07	                              sar rdx, 7	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x494	          0x4889c8	                            mov rax, rcx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x497	        0x48c1f83f	                           sar rax, 0x3f	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x49b	          0x4829c2	                            sub rdx, rax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x49e	          0x4889d0	                            mov rax, rdx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x4a1	        0x488945f8	                mov qword [rbp - 8], rax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x4a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	lockfile.c	FUNCTION_4	WHILE_1	CALL_6
0x4a9	            0x89c7	                            mov edi, eax	       136	lockfile.c	FUNCTION_4	WHILE_1	CALL_6
0x4ab	      0xe800000000	                          call 0x40004f0	       136	lockfile.c	FUNCTION_4	WHILE_1	CALL_6
0x4b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	lockfile.c	FUNCTION_4	WHILE_1
0x4b4	        0x482945e8	             sub qword [rbp - 0x18], rax	       137	lockfile.c	FUNCTION_4	WHILE_1
0x4b8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       140	lockfile.c	FUNCTION_4	WHILE_1
0x4bb	             0x1c0	                            add eax, eax	       140	lockfile.c	FUNCTION_4	WHILE_1
0x4bd	          0x83c001	                              add eax, 1	       140	lockfile.c	FUNCTION_4	WHILE_1
0x4c0	           0x145e0	             add dword [rbp - 0x20], eax	       140	lockfile.c	FUNCTION_4	WHILE_1
0x4c3	    0x817de0e80300	          cmp dword [rbp - 0x20], 0x3e8 	       141	lockfile.c	FUNCTION_4	WHILE_1	IF_7
0x4ca	            0x7e0c	                           jle 0x4000518	       141	lockfile.c	FUNCTION_4	WHILE_1	IF_7
0x4cc	    0xc745e0e80300	          mov dword [rbp - 0x20], 0x3e8 	       142	lockfile.c	FUNCTION_4	WHILE_1	IF_7
0x4d3	      0xe915ffffff	                           jmp 0x400042d	       142	lockfile.c	FUNCTION_4	WHILE_1	IF_7
0x4d8	        0x8345dc01	               add dword [rbp - 0x24], 1	       144	lockfile.c	FUNCTION_4	WHILE_1	ELSE_3
0x4dc	      0xe90cffffff	                           jmp 0x400042d	       145	lockfile.c	FUNCTION_4	WHILE_1	ELSE_3
0x4e1	              0xc9	                                   leave	       146	lockfile.c	FUNCTION_4	ELSE_3
0x4e2	              0xc3	                                     ret	       146	lockfile.c	FUNCTION_4	ELSE_3
commit_lock_file	IF,1:CALL,4:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	33
0x79b	              0x55	                                push rbp	       203	lockfile.c	FUNCTION_9
0x79c	          0x4889e5	                            mov rbp, rsp	       203	lockfile.c	FUNCTION_9
0x79f	        0x4883ec20	                           sub rsp, 0x20	       203	lockfile.c	FUNCTION_9
0x7a3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       203	lockfile.c	FUNCTION_9
0x7a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       204	lockfile.c	FUNCTION_9	CALL_1
0x7ab	          0x4889c7	                            mov rdi, rax	       204	lockfile.c	FUNCTION_9	CALL_1
0x7ae	      0xe800000000	                          call 0x40007f3	       204	lockfile.c	FUNCTION_9	CALL_1
0x7b3	        0x488945f8	                mov qword [rbp - 8], rax	       204	lockfile.c	FUNCTION_9	CALL_1
0x7b7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x7bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x7bf	          0x4889d6	                            mov rsi, rdx	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x7c2	          0x4889c7	                            mov rdi, rax	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x7c5	      0xe89df9ffff	            call sym.commit_lock_file_to	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x7ca	            0x85c0	                           test eax, eax	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x7cc	            0x742a	                            je 0x4000838	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x7ce	      0xe800000000	                          call 0x4000813	       207	lockfile.c	FUNCTION_9	IF_1
0x7d3	            0x8b00	                    mov eax, dword [rax]	       207	lockfile.c	FUNCTION_9	IF_1
0x7d5	          0x8945f4	              mov dword [rbp - 0xc], eax	       207	lockfile.c	FUNCTION_9	IF_1
0x7d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	lockfile.c	FUNCTION_9	IF_1	CALL_3
0x7dc	          0x4889c7	                            mov rdi, rax	       208	lockfile.c	FUNCTION_9	IF_1	CALL_3
0x7df	      0xe800000000	                          call 0x4000824	       208	lockfile.c	FUNCTION_9	IF_1	CALL_3
0x7e4	      0xe800000000	                          call 0x4000829	       209	lockfile.c	FUNCTION_9	IF_1
0x7e9	          0x4889c2	                            mov rdx, rax	       209	lockfile.c	FUNCTION_9	IF_1
0x7ec	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       209	lockfile.c	FUNCTION_9	IF_1
0x7ef	            0x8902	                    mov dword [rdx], eax	       209	lockfile.c	FUNCTION_9	IF_1
0x7f1	      0xb8ffffffff	                     mov eax, 0xffffffff	       210	lockfile.c	FUNCTION_9	IF_1
0x7f6	            0xeb11	                           jmp 0x4000849	       210	lockfile.c	FUNCTION_9	IF_1
0x7f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	lockfile.c	FUNCTION_9	CALL_4
0x7fc	          0x4889c7	                            mov rdi, rax	       212	lockfile.c	FUNCTION_9	CALL_4
0x7ff	      0xe800000000	                          call 0x4000844	       212	lockfile.c	FUNCTION_9	CALL_4
0x804	      0xb800000000	                              mov eax, 0	       213	lockfile.c	FUNCTION_9
0x809	              0xc9	                                   leave	       214	lockfile.c	FUNCTION_9
0x80a	              0xc3	                                     ret	       214	lockfile.c	FUNCTION_9
strbuf_setlen	IF,2:CALL,2:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,1	43
0x2d	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_39
0x2e	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_39
0x31	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_39
0x35	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_39
0x39	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_39
0x3d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_39	IF_1
0x41	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_39	IF_1
0x44	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_39	IF_1
0x47	            0x740d	                            je 0x4000096	       162	strbuf.h	FUNCTION_39	IF_1
0x49	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_39	IF_1
0x4d	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_39	IF_1
0x50	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_39	IF_1
0x54	            0xeb05	                           jmp 0x400009b	       162	strbuf.h	FUNCTION_39	IF_1
0x56	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_39	IF_1
0x5b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_39	IF_1
0x5f	            0x730f	                           jae 0x40000b0	       162	strbuf.h	FUNCTION_39	IF_1
0x61	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_39	CALL_1
0x66	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_39	CALL_1
0x6b	      0xe800000000	                          call 0x40000b0	       163	strbuf.h	FUNCTION_39	CALL_1
0x70	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_39
0x74	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_39
0x78	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_39
0x7c	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_39	IF_2
0x80	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_39	IF_2
0x84	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_39	IF_2
0x8a	            0x7414	                            je 0x40000e0	       165	strbuf.h	FUNCTION_39	IF_2
0x8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_39	IF_2
0x90	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_39	IF_2
0x94	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_39	IF_2
0x98	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_39	IF_2
0x9b	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_39	IF_2
0x9e	            0xeb24	                           jmp 0x4000104	       169	strbuf.h	FUNCTION_39
0xa0	     0xfb605000000	           movzx eax, byte [0x040000e7] 	       168	strbuf.h	FUNCTION_39	CALL_2
0xa7	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_39	CALL_2
0xa9	            0x7419	                            je 0x4000104	       168	strbuf.h	FUNCTION_39	CALL_2
0xab	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_39	CALL_2
0xb0	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_39	CALL_2
0xb5	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_39	CALL_2
0xba	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_39	CALL_2
0xbf	      0xe800000000	                          call 0x4000104	       168	strbuf.h	FUNCTION_39	CALL_2
0xc4	              0x90	                                     nop	       169	strbuf.h	FUNCTION_39
0xc5	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_39
0xc6	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_39
strbuf_addstr	IF,0:CALL,2:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	17
0xc7	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_41
0xc8	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_41
0xcb	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_41
0xcf	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_41
0xd3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_41
0xd7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_41	CALL_2
0xdb	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_41	CALL_2
0xde	      0xe800000000	                          call 0x4000123	       279	strbuf.h	FUNCTION_41	CALL_2
0xe3	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_41	CALL_2
0xe6	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_41	CALL_2
0xea	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_41	CALL_2
0xee	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_41	CALL_2
0xf1	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_41	CALL_2
0xf4	      0xe800000000	                          call 0x4000139	       279	strbuf.h	FUNCTION_41	CALL_2
0xf9	              0x90	                                     nop	       280	strbuf.h	FUNCTION_41
0xfa	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_41
0xfb	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_41
_	IF,1:CALL,2:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	15
0xfc	              0x55	                                push rbp	        51	gettext.h	FUNCTION_50
0xfd	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_50
0x100	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_50
0x104	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_50
0x108	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_50	IF_1
0x10c	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_50	IF_1
0x10f	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_50	IF_1
0x111	            0x7507	                           jne 0x400015a	        52	gettext.h	FUNCTION_50	IF_1
0x113	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_50	IF_1
0x118	            0xeb0c	                           jmp 0x4000166	        53	gettext.h	FUNCTION_50	IF_1
0x11a	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_50	CALL_2
0x11e	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_50	CALL_2
0x121	      0xe800000000	                          call 0x4000166	        54	gettext.h	FUNCTION_50	CALL_2
0x126	              0xc9	                                   leave	        55	gettext.h	FUNCTION_50
0x127	              0xc3	                                     ret	        55	gettext.h	FUNCTION_50
git_has_dos_drive_prefix	IF,0:CALL,0:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	6
0x0	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_10
0x1	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_10
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_10
0x8	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_10
0xd	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_10
0xe	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_10
hold_lock_file_for_update_timeout	IF,3:CALL,5:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	59
0x5ec	              0x55	                                push rbp	       174	lockfile.c	FUNCTION_7
0x5ed	          0x4889e5	                            mov rbp, rsp	       174	lockfile.c	FUNCTION_7
0x5f0	        0x4883ec50	                           sub rsp, 0x50	       174	lockfile.c	FUNCTION_7
0x5f4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       174	lockfile.c	FUNCTION_7
0x5f8	        0x488975c0	             mov qword [rbp - 0x40], rsi	       174	lockfile.c	FUNCTION_7
0x5fc	          0x8955bc	             mov dword [rbp - 0x44], edx	       174	lockfile.c	FUNCTION_7
0x5ff	        0x48894db0	             mov qword [rbp - 0x50], rcx	       174	lockfile.c	FUNCTION_7
0x603	    0x64488b042528	                mov rax, qword fs:[0x28]	       174	lockfile.c	FUNCTION_7
0x60c	        0x488945f8	                mov qword [rbp - 8], rax	       174	lockfile.c	FUNCTION_7
0x610	            0x31c0	                            xor eax, eax	       174	lockfile.c	FUNCTION_7
0x612	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       175	lockfile.c	FUNCTION_7	CALL_1
0x616	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       175	lockfile.c	FUNCTION_7	CALL_1
0x619	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       175	lockfile.c	FUNCTION_7	CALL_1
0x61d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       175	lockfile.c	FUNCTION_7	CALL_1
0x621	          0x4889c7	                            mov rdi, rax	       175	lockfile.c	FUNCTION_7	CALL_1
0x624	      0xe846fdffff	              call sym.lock_file_timeout	       175	lockfile.c	FUNCTION_7	CALL_1
0x629	          0x8945dc	             mov dword [rbp - 0x24], eax	       175	lockfile.c	FUNCTION_7	CALL_1
0x62c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       176	lockfile.c	FUNCTION_7	IF_1
0x630	     0xf8981000000	                           jns 0x40006f7	       176	lockfile.c	FUNCTION_7	IF_1
0x636	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       177	lockfile.c	FUNCTION_7	IF_1	IF_2
0x639	          0x83e001	                              and eax, 1	       177	lockfile.c	FUNCTION_7	IF_1	IF_2
0x63c	            0x85c0	                           test eax, eax	       177	lockfile.c	FUNCTION_7	IF_1	IF_2
0x63e	            0x7415	                            je 0x4000695	       177	lockfile.c	FUNCTION_7	IF_1	IF_2
0x640	      0xe800000000	                          call 0x4000685	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x645	            0x8b10	                    mov edx, dword [rax]	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x647	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x64b	            0x89d6	                            mov esi, edx	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x64d	          0x4889c7	                            mov rdi, rax	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x650	      0xe800000000	                          call 0x4000695	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x655	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       179	lockfile.c	FUNCTION_7	IF_1	IF_3
0x658	          0x83e004	                              and eax, 4	       179	lockfile.c	FUNCTION_7	IF_1	IF_3
0x65b	            0x85c0	                           test eax, eax	       179	lockfile.c	FUNCTION_7	IF_1	IF_3
0x65d	            0x7458	                            je 0x40006f7	       179	lockfile.c	FUNCTION_7	IF_1	IF_3
0x65f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       180	lockfile.c	FUNCTION_7	IF_1	IF_3
0x667	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       180	lockfile.c	FUNCTION_7	IF_1	IF_3
0x66f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       180	lockfile.c	FUNCTION_7	IF_1	IF_3
0x677	      0xe800000000	                          call 0x40006bc	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x67c	            0x8b08	                    mov ecx, dword [rax]	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x67e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x682	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x686	            0x89ce	                            mov esi, ecx	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x688	          0x4889c7	                            mov rdi, rax	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x68b	      0xe800000000	                          call 0x40006d0	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x690	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       182	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x694	          0x4889c6	                            mov rsi, rax	       182	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x697	      0xbf00000000	                              mov edi, 0	       182	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x69c	      0xb800000000	                              mov eax, 0	       182	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x6a1	      0xe800000000	                          call 0x40006e6	       182	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x6a6	      0xe877f9ffff	                    call sym.const_error	       182	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x6ab	        0x488d45e0	                   lea rax, [rbp - 0x20]	       183	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x6af	          0x4889c7	                            mov rdi, rax	       183	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x6b2	      0xe800000000	                          call 0x40006f7	       183	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_5
0x6b7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       186	lockfile.c	FUNCTION_7
0x6ba	        0x488b4df8	                mov rcx, qword [rbp - 8]	       187	lockfile.c	FUNCTION_7
0x6be	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       187	lockfile.c	FUNCTION_7
0x6c7	            0x7405	                            je 0x400070e	       187	lockfile.c	FUNCTION_7
0x6c9	      0xe800000000	                          call 0x400070e	       187	lockfile.c	FUNCTION_7
0x6ce	              0xc9	                                   leave	       187	lockfile.c	FUNCTION_7
0x6cf	              0xc3	                                     ret	       187	lockfile.c	FUNCTION_7
trim_last_path_component	IF,0:CALL,1:functions,0:WHILE,2:FOR,0:SWITCH,0:DO,0:ELSE,0	42
0x18c	              0x55	                                push rbp	        16	lockfile.c	FUNCTION_1
0x18d	          0x4889e5	                            mov rbp, rsp	        16	lockfile.c	FUNCTION_1
0x190	        0x4883ec20	                           sub rsp, 0x20	        16	lockfile.c	FUNCTION_1
0x194	        0x48897de8	             mov qword [rbp - 0x18], rdi	        16	lockfile.c	FUNCTION_1
0x198	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        17	lockfile.c	FUNCTION_1
0x19c	        0x488b4008	                mov rax, qword [rax + 8]	        17	lockfile.c	FUNCTION_1
0x1a0	          0x8945fc	                mov dword [rbp - 4], eax	        17	lockfile.c	FUNCTION_1
0x1a3	            0xeb04	                           jmp 0x40001e9	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1a5	        0x836dfc01	                  sub dword [rbp - 4], 1	        21	lockfile.c	FUNCTION_1	WHILE_1
0x1a9	        0x837dfc00	                  cmp dword [rbp - 4], 0	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1ad	            0x7422	                            je 0x4000211	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1b3	        0x488b4010	            mov rax, qword [rax + 0x10] 	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1b7	          0x8b55fc	                mov edx, dword [rbp - 4]	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1ba	          0x4863d2	                         movsxd rdx, edx	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1bd	        0x4883ea01	                              sub rdx, 1	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1c1	          0x4801d0	                            add rax, rdx	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1c4	           0xfb600	                   movzx eax, byte [rax]	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1c7	            0x3c2f	                            cmp al, 0x2f	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1c9	            0x74da	                            je 0x40001e5	        20	lockfile.c	FUNCTION_1	WHILE_1
0x1cb	            0xeb04	                           jmp 0x4000211	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1cd	        0x836dfc01	                  sub dword [rbp - 4], 1	        28	lockfile.c	FUNCTION_1	WHILE_2
0x1d1	        0x837dfc00	                  cmp dword [rbp - 4], 0	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1d5	            0x741c	                            je 0x4000233	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1db	        0x488b4010	            mov rax, qword [rax + 0x10] 	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1df	          0x8b55fc	                mov edx, dword [rbp - 4]	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1e2	          0x4863d2	                         movsxd rdx, edx	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1e5	        0x4883ea01	                              sub rdx, 1	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1e9	          0x4801d0	                            add rax, rdx	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1ec	           0xfb600	                   movzx eax, byte [rax]	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1ef	            0x3c2f	                            cmp al, 0x2f	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1f1	            0x75da	                           jne 0x400020d	        27	lockfile.c	FUNCTION_1	WHILE_2
0x1f3	          0x8b45fc	                mov eax, dword [rbp - 4]	        30	lockfile.c	FUNCTION_1	CALL_1
0x1f6	          0x4863d0	                         movsxd rdx, eax	        30	lockfile.c	FUNCTION_1	CALL_1
0x1f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        30	lockfile.c	FUNCTION_1	CALL_1
0x1fd	          0x4889d6	                            mov rsi, rdx	        30	lockfile.c	FUNCTION_1	CALL_1
0x200	          0x4889c7	                            mov rdi, rax	        30	lockfile.c	FUNCTION_1	CALL_1
0x203	      0xe825feffff	                  call sym.strbuf_setlen	        30	lockfile.c	FUNCTION_1	CALL_1
0x208	              0x90	                                     nop	        31	lockfile.c	FUNCTION_1
0x209	              0xc9	                                   leave	        31	lockfile.c	FUNCTION_1
0x20a	              0xc3	                                     ret	        31	lockfile.c	FUNCTION_1
unable_to_lock_die	IF,0:CALL,2:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	22
0x58b	              0x55	                                push rbp	       164	lockfile.c	FUNCTION_6
0x58c	          0x4889e5	                            mov rbp, rsp	       164	lockfile.c	FUNCTION_6
0x58f	        0x4883ec30	                           sub rsp, 0x30	       164	lockfile.c	FUNCTION_6
0x593	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       164	lockfile.c	FUNCTION_6
0x597	          0x8975d4	             mov dword [rbp - 0x2c], esi	       164	lockfile.c	FUNCTION_6
0x59a	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	lockfile.c	FUNCTION_6
0x5a3	        0x488945f8	                mov qword [rbp - 8], rax	       164	lockfile.c	FUNCTION_6
0x5a7	            0x31c0	                            xor eax, eax	       164	lockfile.c	FUNCTION_6
0x5a9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       165	lockfile.c	FUNCTION_6
0x5b1	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       165	lockfile.c	FUNCTION_6
0x5b9	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       165	lockfile.c	FUNCTION_6
0x5c1	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       167	lockfile.c	FUNCTION_6	CALL_1
0x5c5	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       167	lockfile.c	FUNCTION_6	CALL_1
0x5c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       167	lockfile.c	FUNCTION_6	CALL_1
0x5cc	            0x89ce	                            mov esi, ecx	       167	lockfile.c	FUNCTION_6	CALL_1
0x5ce	          0x4889c7	                            mov rdi, rax	       167	lockfile.c	FUNCTION_6	CALL_1
0x5d1	      0xe800000000	                          call 0x4000616	       167	lockfile.c	FUNCTION_6	CALL_1
0x5d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	lockfile.c	FUNCTION_6	CALL_2
0x5da	          0x4889c6	                            mov rsi, rax	       168	lockfile.c	FUNCTION_6	CALL_2
0x5dd	      0xbf00000000	                              mov edi, 0	       168	lockfile.c	FUNCTION_6	CALL_2
0x5e2	      0xb800000000	                              mov eax, 0	       168	lockfile.c	FUNCTION_6	CALL_2
0x5e7	      0xe800000000	call sym.hold_lock_file_for_update_timeout	       168	lockfile.c	FUNCTION_6	CALL_2
unable_to_lock_message	IF,1:CALL,8:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,1	51
0x4e3	              0x55	                                push rbp	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4e4	          0x4889e5	                            mov rbp, rsp	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4e7	            0x4154	                                push r12	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4e9	              0x53	                                push rbx	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4ea	        0x4883ec20	                           sub rsp, 0x20	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4ee	        0x48897de8	             mov qword [rbp - 0x18], rdi	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4f2	          0x8975e4	             mov dword [rbp - 0x1c], esi	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4f5	        0x488955d8	             mov qword [rbp - 0x28], rdx	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4f9	        0x837de411	           cmp dword [rbp - 0x1c], 0x11 	       150	lockfile.c	ELSE_3	FUNCTION_5	IF_1
0x4fd	            0x7542	                           jne 0x4000581	       150	lockfile.c	ELSE_3	FUNCTION_5	IF_1
0x4ff	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x502	            0x89c7	                            mov edi, eax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x504	      0xe800000000	                          call 0x4000549	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x509	          0x4989c4	                            mov r12, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x50c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x510	          0x4889c7	                            mov rdi, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x513	      0xe800000000	                          call 0x4000558	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x518	          0x4889c3	                            mov rbx, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x51b	      0xbf00000000	                              mov edi, 0	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x520	      0xe8d7fbffff	                               call sym.	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x525	          0x4889c6	                            mov rsi, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x528	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x52c	          0x4c89e1	                            mov rcx, r12	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x52f	          0x4889da	                            mov rdx, rbx	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x532	          0x4889c7	                            mov rdi, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x535	      0xb800000000	                              mov eax, 0	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x53a	      0xe800000000	                          call 0x400057f	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x53f	            0xeb40	                           jmp 0x40005c1	       161	lockfile.c	ELSE_3	FUNCTION_5
0x541	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x544	            0x89c7	                            mov edi, eax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x546	      0xe800000000	                          call 0x400058b	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x54b	          0x4989c4	                            mov r12, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x54e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x552	          0x4889c7	                            mov rdi, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x555	      0xe800000000	                          call 0x400059a	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x55a	          0x4889c3	                            mov rbx, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x55d	      0xbf00000000	                              mov edi, 0	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x562	      0xe895fbffff	                               call sym.	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x567	          0x4889c6	                            mov rsi, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x56a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x56e	          0x4c89e1	                            mov rcx, r12	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x571	          0x4889da	                            mov rdx, rbx	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x574	          0x4889c7	                            mov rdi, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x577	      0xb800000000	                              mov eax, 0	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x57c	      0xe800000000	                          call 0x40005c1	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x581	              0x90	                                     nop	       161	lockfile.c	ELSE_3	FUNCTION_5
0x582	        0x4883c420	                           add rsp, 0x20	       161	lockfile.c	ELSE_3	FUNCTION_5
0x586	              0x5b	                                 pop rbx	       161	lockfile.c	ELSE_3	FUNCTION_5
0x587	            0x415c	                                 pop r12	       161	lockfile.c	ELSE_3	FUNCTION_5
0x589	              0x5d	                                 pop rbp	       161	lockfile.c	ELSE_3	FUNCTION_5
0x58a	              0xc3	                                     ret	       161	lockfile.c	ELSE_3	FUNCTION_5
git_is_dir_sep	IF,0:CALL,0:functions,0:WHILE,0:FOR,0:SWITCH,0:DO,0:ELSE,0	8
0xf	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_12
0x10	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_12
0x13	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_12
0x16	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_12
0x1a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_12
0x1d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_12
0x20	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_12
0x21	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_12
