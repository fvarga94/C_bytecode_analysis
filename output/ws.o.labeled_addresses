whitespace_rule	CALL,9:SWITCH,0:ELSE,4:FOR,1:WHILE,0:functions,0:DO,0:IF,6	75
0x27b	              0x55	                                push rbp	        75	ws.c	FUNCTION_2
0x27c	          0x4889e5	                            mov rbp, rsp	        75	ws.c	FUNCTION_2
0x27f	        0x4883ec20	                           sub rsp, 0x20	        75	ws.c	FUNCTION_2
0x283	        0x48897de8	             mov qword [rbp - 0x18], rdi	        75	ws.c	FUNCTION_2
0x287	    0x488b05000000	            mov rax, qword [0x040002ce] 	        78	ws.c	FUNCTION_2	IF_1
0x28e	          0x4885c0	                           test rax, rax	        78	ws.c	FUNCTION_2	IF_1
0x291	            0x751b	                           jne 0x40002ee	        78	ws.c	FUNCTION_2	IF_1
0x293	      0xbe00000000	                              mov esi, 0	        79	ws.c	FUNCTION_2	CALL_1
0x298	      0xbf00000000	                              mov edi, 0	        79	ws.c	FUNCTION_2	CALL_1
0x29d	      0xb800000000	                              mov eax, 0	        79	ws.c	FUNCTION_2	CALL_1
0x2a2	      0xe800000000	                          call 0x40002e7	        79	ws.c	FUNCTION_2	CALL_1
0x2a7	    0x488905000000	            mov qword [0x040002ee], rax 	        79	ws.c	FUNCTION_2	CALL_1
0x2ae	    0x488b15000000	            mov rdx, qword [0x040002f5] 	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x2b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x2b9	          0x4889d6	                            mov rsi, rdx	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x2bc	          0x4889c7	                            mov rdi, rax	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x2bf	      0xe800000000	                          call 0x4000304	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x2c4	            0x85c0	                           test eax, eax	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x2c6	     0xf85bf000000	                           jne 0x40003cb	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x2cc	    0x488b05000000	            mov rax, qword [0x04000313] 	        84	ws.c	FUNCTION_2	IF_2
0x2d3	        0x488b4008	                mov rax, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x2d7	        0x488b4008	                mov rax, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x2db	        0x488945f8	                mov qword [rbp - 8], rax	        84	ws.c	FUNCTION_2	IF_2
0x2df	    0x48817df80000	                  cmp qword [rbp - 8], 0	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x2e7	            0x7570	                           jne 0x4000399	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x2e9	    0x8b0500000000	            mov eax, dword [0x0400032f] 	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x2ef	          0x83e03f	                           and eax, 0x3f	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x2f2	          0x8945f0	             mov dword [rbp - 0x10], eax	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x2f5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x2fc	            0xeb4e	                           jmp 0x400038c	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x2fe	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x301	            0x4898	                                    cdqe	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x303	        0x48c1e004	                              shl rax, 4	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x307	    0x480500000000	                              add rax, 0	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x30d	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x311	          0x83e001	                              and eax, 1	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x314	            0x84c0	                             test al, al	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x316	            0x7530	                           jne 0x4000388	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x318	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x31b	            0x4898	                                    cdqe	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x31d	        0x48c1e004	                              shl rax, 4	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x321	    0x480500000000	                              add rax, 0	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x327	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x32b	            0xd0e8	                               shr al, 1	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x32d	          0x83e001	                              and eax, 1	        91	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x330	            0x84c0	                             test al, al	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x332	            0x7514	                           jne 0x4000388	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x334	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x337	            0x4898	                                    cdqe	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x339	        0x48c1e004	                              shl rax, 4	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x33d	    0x480500000000	                              add rax, 0	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x343	            0x8b00	                    mov eax, dword [rax]	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x345	           0x945f0	              or dword [rbp - 0x10], eax	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x348	        0x8345f401	                add dword [rbp - 0xc], 1	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x34c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x34f	          0x83f806	                              cmp eax, 6	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x352	            0x76aa	                           jbe 0x400033e	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x354	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        93	ws.c	FUNCTION_2	IF_2	IF_3
0x357	            0xeb38	                           jmp 0x40003d1	        93	ws.c	FUNCTION_2	IF_2	IF_3
0x359	    0x48817df80000	                  cmp qword [rbp - 8], 0	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x361	            0x750b	                           jne 0x40003ae	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x363	    0x8b0500000000	            mov eax, dword [0x040003a9] 	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x369	          0x83e03f	                           and eax, 0x3f	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x36c	            0xeb23	                           jmp 0x40003d1	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x36e	      0x48837df800	                  cmp qword [rbp - 8], 0	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x373	            0x7508	                           jne 0x40003bd	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x375	    0x8b0500000000	            mov eax, dword [0x040003bb] 	        99	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6
0x37b	            0xeb14	                           jmp 0x40003d1	        99	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6
0x37d	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x381	          0x4889c7	                            mov rdi, rax	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x384	      0xe800000000	                          call 0x40003c9	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x389	            0xeb06	                           jmp 0x40003d1	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x38b	    0x8b0500000000	            mov eax, dword [0x040003d1] 	       105	ws.c	FUNCTION_2	ELSE_4
0x391	              0xc9	                                   leave	       107	ws.c	FUNCTION_2
0x392	              0xc3	                                     ret	       107	ws.c	FUNCTION_2
strbuf_addch	CALL,2:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0:IF,1	33
0x36	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_12
0x37	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_12
0x3a	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_12
0x3e	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_12
0x42	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_12
0x45	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x49	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x4c	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x51	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x54	            0x7511	                           jne 0x40000a7	       227	strbuf.h	FUNCTION_12	IF_1	CALL_1
0x56	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_12	CALL_2
0x5a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_12	CALL_2
0x5f	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_12	CALL_2
0x62	      0xe800000000	                          call 0x40000a7	       228	strbuf.h	FUNCTION_12	CALL_2
0x67	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_12
0x6b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_12
0x6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_12
0x73	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_12
0x77	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_12
0x7b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_12
0x7f	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_12
0x83	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_12
0x86	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_12
0x89	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_12
0x8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_12
0x8f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_12
0x93	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_12
0x97	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_12
0x9b	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_12
0x9e	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_12
0xa1	              0x90	                                     nop	       231	strbuf.h	FUNCTION_12
0xa2	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_12
0xa3	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_12
strbuf_avail	CALL,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0:IF,0	18
0x0	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_10
0x1	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_10
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_10
0x8	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_10
0xc	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_10
0xf	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_10
0x12	            0x741b	                            je 0x400006f	       141	strbuf.h	FUNCTION_10
0x14	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_10
0x18	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_10
0x1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_10
0x1f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_10
0x23	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_10
0x26	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_10
0x29	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_10
0x2d	            0xeb05	                           jmp 0x4000074	       141	strbuf.h	FUNCTION_10
0x2f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_10
0x34	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_10
0x35	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_10
strbuf_addstr	CALL,2:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0:IF,0	17
0xa4	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_13
0xa5	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_13
0xa8	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_13
0xac	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_13
0xb0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_13
0xb4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_13	CALL_2
0xb8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_13	CALL_2
0xbb	      0xe800000000	                          call 0x4000100	       279	strbuf.h	FUNCTION_13	CALL_2
0xc0	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_13	CALL_2
0xc3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_13	CALL_2
0xc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_13	CALL_2
0xcb	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_13	CALL_2
0xce	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_13	CALL_2
0xd1	      0xe800000000	                          call 0x4000116	       279	strbuf.h	FUNCTION_13	CALL_2
0xd6	              0x90	                                     nop	       280	strbuf.h	FUNCTION_13
0xd7	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_13
0xd8	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_13
ws_check_emit	CALL,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0:IF,0	25
0x934	              0x55	                                push rbp	       251	ws.c	FUNCTION_5
0x935	          0x4889e5	                            mov rbp, rsp	       251	ws.c	FUNCTION_5
0x938	        0x4883ec30	                           sub rsp, 0x30	       251	ws.c	FUNCTION_5
0x93c	        0x48897df8	                mov qword [rbp - 8], rdi	       251	ws.c	FUNCTION_5
0x940	          0x8975f4	              mov dword [rbp - 0xc], esi	       251	ws.c	FUNCTION_5
0x943	          0x8955f0	             mov dword [rbp - 0x10], edx	       251	ws.c	FUNCTION_5
0x946	        0x48894de8	             mov qword [rbp - 0x18], rcx	       251	ws.c	FUNCTION_5
0x94a	        0x4c8945e0	              mov qword [rbp - 0x20], r8	       251	ws.c	FUNCTION_5
0x94e	        0x4c894dd8	              mov qword [rbp - 0x28], r9	       251	ws.c	FUNCTION_5
0x952	        0x4c8b45d8	              mov r8, qword [rbp - 0x28]	       252	ws.c	FUNCTION_5	CALL_1
0x956	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       252	ws.c	FUNCTION_5	CALL_1
0x95a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       252	ws.c	FUNCTION_5	CALL_1
0x95e	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       252	ws.c	FUNCTION_5	CALL_1
0x961	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       252	ws.c	FUNCTION_5	CALL_1
0x964	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	ws.c	FUNCTION_5	CALL_1
0x968	        0x4883ec08	                              sub rsp, 8	       252	ws.c	FUNCTION_5	CALL_1
0x96c	          0xff7510	                 push qword [rbp + 0x10]	       252	ws.c	FUNCTION_5	CALL_1
0x96f	          0x4d89c1	                              mov r9, r8	       252	ws.c	FUNCTION_5	CALL_1
0x972	          0x4989f8	                             mov r8, rdi	       252	ws.c	FUNCTION_5	CALL_1
0x975	          0x4889c7	                            mov rdi, rax	       252	ws.c	FUNCTION_5	CALL_1
0x978	      0xe888fbffff	                call sym.ws_check_emit_1	       252	ws.c	FUNCTION_5	CALL_1
0x97d	        0x4883c410	                           add rsp, 0x10	       252	ws.c	FUNCTION_5	CALL_1
0x981	              0x90	                                     nop	       253	ws.c	FUNCTION_5
0x982	              0xc9	                                   leave	       253	ws.c	FUNCTION_5
0x983	              0xc3	                                     ret	       253	ws.c	FUNCTION_5
ws_blank_line	CALL,1:SWITCH,0:ELSE,0:FOR,0:WHILE,1:functions,0:DO,0:IF,1	26
0x9c5	              0x55	                                push rbp	       261	ws.c	FUNCTION_7
0x9c6	          0x4889e5	                            mov rbp, rsp	       261	ws.c	FUNCTION_7
0x9c9	        0x48897df8	                mov qword [rbp - 8], rdi	       261	ws.c	FUNCTION_7
0x9cd	          0x8975f4	              mov dword [rbp - 0xc], esi	       261	ws.c	FUNCTION_7
0x9d0	          0x8955f0	             mov dword [rbp - 0x10], edx	       261	ws.c	FUNCTION_7
0x9d3	            0xeb29	                           jmp 0x4000a3e	       267	ws.c	FUNCTION_7	WHILE_1
0x9d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9d9	           0xfb600	                   movzx eax, byte [rax]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9dc	           0xfb6c0	                           movzx eax, al	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9df	            0x4898	                                    cdqe	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9e1	     0xfb680000000	                   movzx eax, byte [rax]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9e8	           0xfb6c0	                           movzx eax, al	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9eb	          0x83e001	                              and eax, 1	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9ee	            0x85c0	                           test eax, eax	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9f0	            0x7507	                           jne 0x4000a39	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x9f2	      0xb800000000	                              mov eax, 0	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x9f7	            0xeb17	                           jmp 0x4000a50	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x9f9	      0x488345f801	                  add qword [rbp - 8], 1	       270	ws.c	FUNCTION_7	WHILE_1
0x9fe	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       267	ws.c	FUNCTION_7	WHILE_1
0xa01	          0x8d50ff	                      lea edx, [rax - 1]	       267	ws.c	FUNCTION_7	WHILE_1
0xa04	          0x8955f4	              mov dword [rbp - 0xc], edx	       267	ws.c	FUNCTION_7	WHILE_1
0xa07	            0x85c0	                           test eax, eax	       267	ws.c	FUNCTION_7	WHILE_1
0xa09	            0x7fca	                            jg 0x4000a15	       267	ws.c	FUNCTION_7	WHILE_1
0xa0b	      0xb801000000	                              mov eax, 1	       272	ws.c	FUNCTION_7
0xa10	              0x5d	                                 pop rbp	       273	ws.c	FUNCTION_7
0xa11	              0xc3	                                     ret	       273	ws.c	FUNCTION_7
ws_check_emit_1	CALL,22:SWITCH,0:ELSE,3:FOR,2:WHILE,0:functions,0:DO,0:IF,19	299
0x505	              0x55	                                push rbp	       146	ws.c	FUNCTION_4
0x506	          0x4889e5	                            mov rbp, rsp	       146	ws.c	FUNCTION_4
0x509	        0x4883ec50	                           sub rsp, 0x50	       146	ws.c	FUNCTION_4
0x50d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       146	ws.c	FUNCTION_4
0x511	          0x8975d4	             mov dword [rbp - 0x2c], esi	       146	ws.c	FUNCTION_4
0x514	          0x8955d0	             mov dword [rbp - 0x30], edx	       146	ws.c	FUNCTION_4
0x517	        0x48894dc8	             mov qword [rbp - 0x38], rcx	       146	ws.c	FUNCTION_4
0x51b	        0x4c8945c0	              mov qword [rbp - 0x40], r8	       146	ws.c	FUNCTION_4
0x51f	        0x4c894db8	              mov qword [rbp - 0x48], r9	       146	ws.c	FUNCTION_4
0x523	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       147	ws.c	FUNCTION_4
0x52a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       148	ws.c	FUNCTION_4
0x531	    0xc745f0ffffff	     mov dword [rbp - 0x10], 0xffffffff 	       149	ws.c	FUNCTION_4
0x538	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       150	ws.c	FUNCTION_4
0x53f	    0xc745f8000000	                  mov dword [rbp - 8], 0	       151	ws.c	FUNCTION_4
0x546	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       155	ws.c	FUNCTION_4	IF_1
0x54a	            0x7e22	                           jle 0x40005ae	       155	ws.c	FUNCTION_4	IF_1
0x54c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       155	ws.c	FUNCTION_4	IF_1
0x54f	            0x4898	                                    cdqe	       155	ws.c	FUNCTION_4	IF_1
0x551	        0x488d50ff	                      lea rdx, [rax - 1]	       155	ws.c	FUNCTION_4	IF_1
0x555	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       155	ws.c	FUNCTION_4	IF_1
0x559	          0x4801d0	                            add rax, rdx	       155	ws.c	FUNCTION_4	IF_1
0x55c	           0xfb600	                   movzx eax, byte [rax]	       155	ws.c	FUNCTION_4	IF_1
0x55f	            0x3c0a	                             cmp al, 0xa	       155	ws.c	FUNCTION_4	IF_1
0x561	            0x750b	                           jne 0x40005ae	       155	ws.c	FUNCTION_4	IF_1
0x563	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       156	ws.c	FUNCTION_4	IF_1
0x56a	        0x836dd401	               sub dword [rbp - 0x2c], 1	       157	ws.c	FUNCTION_4	IF_1
0x56e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       159	ws.c	FUNCTION_4	IF_2
0x571	      0x2500020000	                          and eax, 0x200	       159	ws.c	FUNCTION_4	IF_2
0x576	            0x85c0	                           test eax, eax	       159	ws.c	FUNCTION_4	IF_2
0x578	            0x7428	                            je 0x40005e2	       159	ws.c	FUNCTION_4	IF_2
0x57a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       159	ws.c	FUNCTION_4	IF_2
0x57e	            0x7e22	                           jle 0x40005e2	       159	ws.c	FUNCTION_4	IF_2
0x580	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       160	ws.c	FUNCTION_4	IF_2
0x583	            0x4898	                                    cdqe	       160	ws.c	FUNCTION_4	IF_2
0x585	        0x488d50ff	                      lea rdx, [rax - 1]	       160	ws.c	FUNCTION_4	IF_2
0x589	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       160	ws.c	FUNCTION_4	IF_2
0x58d	          0x4801d0	                            add rax, rdx	       160	ws.c	FUNCTION_4	IF_2
0x590	           0xfb600	                   movzx eax, byte [rax]	       160	ws.c	FUNCTION_4	IF_2
0x593	            0x3c0d	                             cmp al, 0xd	       160	ws.c	FUNCTION_4	IF_2
0x595	            0x750b	                           jne 0x40005e2	       160	ws.c	FUNCTION_4	IF_2
0x597	    0xc745f8010000	                  mov dword [rbp - 8], 1	       161	ws.c	FUNCTION_4	IF_2
0x59e	        0x836dd401	               sub dword [rbp - 0x2c], 1	       162	ws.c	FUNCTION_4	IF_2
0x5a2	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       166	ws.c	FUNCTION_4	IF_3
0x5a5	          0x83e040	                           and eax, 0x40	       166	ws.c	FUNCTION_4	IF_3
0x5a8	            0x85c0	                           test eax, eax	       166	ws.c	FUNCTION_4	IF_3
0x5aa	            0x7448	                            je 0x4000634	       166	ws.c	FUNCTION_4	IF_3
0x5ac	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x5af	          0x83e801	                              sub eax, 1	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x5b2	          0x8945fc	                mov dword [rbp - 4], eax	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x5b5	            0xeb34	                           jmp 0x400062b	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x5b7	          0x8b45fc	                mov eax, dword [rbp - 4]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5ba	          0x4863d0	                         movsxd rdx, eax	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5c1	          0x4801d0	                            add rax, rdx	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5c4	           0xfb600	                   movzx eax, byte [rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5c7	           0xfb6c0	                           movzx eax, al	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5ca	            0x4898	                                    cdqe	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5cc	     0xfb680000000	                   movzx eax, byte [rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5d3	           0xfb6c0	                           movzx eax, al	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5d6	          0x83e001	                              and eax, 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5d9	            0x85c0	                           test eax, eax	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5db	            0x7416	                            je 0x4000633	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x5dd	          0x8b45fc	                mov eax, dword [rbp - 4]	       169	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4
0x5e0	          0x8945f0	             mov dword [rbp - 0x10], eax	       169	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4
0x5e3	        0x834de840	            or dword [rbp - 0x18], 0x40 	       170	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4
0x5e7	        0x836dfc01	                  sub dword [rbp - 4], 1	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x5eb	        0x837dfc00	                  cmp dword [rbp - 4], 0	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x5ef	            0x79c6	                           jns 0x40005f7	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x5f1	            0xeb01	                           jmp 0x4000634	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x5f3	              0x90	                                     nop	       173	ws.c	FUNCTION_4	IF_3	FOR_1	ELSE_1
0x5f4	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	       177	ws.c	FUNCTION_4	IF_5
0x5f8	            0x7506	                           jne 0x4000640	       177	ws.c	FUNCTION_4	IF_5
0x5fa	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       178	ws.c	FUNCTION_4	IF_5
0x5fd	          0x8945f0	             mov dword [rbp - 0x10], eax	       178	ws.c	FUNCTION_4	IF_5
0x600	    0xc745fc000000	                  mov dword [rbp - 4], 0	       181	ws.c	FUNCTION_4	FOR_2
0x607	      0xe9ad010000	                           jmp 0x40007f9	       181	ws.c	FUNCTION_4	FOR_2
0x60c	          0x8b45fc	                mov eax, dword [rbp - 4]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x60f	          0x4863d0	                         movsxd rdx, eax	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x612	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x616	          0x4801d0	                            add rax, rdx	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x619	           0xfb600	                   movzx eax, byte [rax]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x61c	            0x3c20	                            cmp al, 0x20	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x61e	     0xf8490010000	                            je 0x40007f4	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x624	          0x8b45fc	                mov eax, dword [rbp - 4]	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x627	          0x4863d0	                         movsxd rdx, eax	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x62a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x62e	          0x4801d0	                            add rax, rdx	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x631	           0xfb600	                   movzx eax, byte [rax]	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x634	            0x3c09	                               cmp al, 9	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x636	     0xf858b010000	                           jne 0x4000807	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x63c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x63f	      0x2580000000	                           and eax, 0x80	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x644	            0x85c0	                           test eax, eax	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x646	     0xf8494000000	                            je 0x4000720	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x64c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x64f	          0x3b45fc	                cmp eax, dword [rbp - 4]	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x652	     0xf8d88000000	                           jge 0x4000720	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x658	    0x814de8800000	             or dword [rbp - 0x18], 0x80	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x65f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x664	     0xf843f010000	                            je 0x40007e9	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x66a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x66e	          0x4889c6	                            mov rsi, rax	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x671	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x675	      0xe800000000	                          call 0x40006ba	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x67a	          0x8b45fc	                mov eax, dword [rbp - 4]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x67d	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x680	            0x4898	                                    cdqe	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x682	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x685	          0x4863ca	                         movsxd rcx, edx	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x688	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x68c	        0x488d3c11	                    lea rdi, [rcx + rdx]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x690	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x694	          0x4889d1	                            mov rcx, rdx	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x697	      0xba01000000	                              mov edx, 1	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x69c	          0x4889c6	                            mov rsi, rax	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x69f	      0xe800000000	                          call 0x40006e4	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x6a4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x6a8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x6ac	          0x4889d6	                            mov rsi, rdx	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x6af	          0x4889c7	                            mov rdi, rax	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x6b2	      0xe800000000	                          call 0x40006f7	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x6b7	          0x8b45fc	                mov eax, dword [rbp - 4]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6ba	          0x4863d0	                         movsxd rdx, eax	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6c1	        0x488d3c02	                    lea rdi, [rdx + rax]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6c9	          0x4889c1	                            mov rcx, rax	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6cc	      0xba01000000	                              mov edx, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6d1	      0xbe01000000	                              mov esi, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6d6	      0xe800000000	                          call 0x400071b	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x6db	      0xe9c9000000	                           jmp 0x40007e9	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x6e0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x6e3	      0x2500080000	                          and eax, 0x800	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x6e8	            0x85c0	                           test eax, eax	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x6ea	     0xf8485000000	                            je 0x40007b5	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x6f0	    0x814de8000800	            or dword [rbp - 0x18], 0x800	       195	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x6f7	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x6fc	     0xf84a7000000	                            je 0x40007e9	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x702	          0x8b45fc	                mov eax, dword [rbp - 4]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x705	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x708	            0x4898	                                    cdqe	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x70a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x70d	          0x4863ca	                         movsxd rcx, edx	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x710	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x714	        0x488d3c11	                    lea rdi, [rcx + rdx]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x718	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x71c	          0x4889d1	                            mov rcx, rdx	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x71f	      0xba01000000	                              mov edx, 1	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x724	          0x4889c6	                            mov rsi, rax	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x727	      0xe800000000	                          call 0x400076c	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x72c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x730	          0x4889c6	                            mov rsi, rax	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x733	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x737	      0xe800000000	                          call 0x400077c	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x73c	          0x8b45fc	                mov eax, dword [rbp - 4]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x73f	          0x4863d0	                         movsxd rdx, eax	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x742	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x746	        0x488d3c02	                    lea rdi, [rdx + rax]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x74a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x74e	          0x4889c1	                            mov rcx, rax	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x751	      0xba01000000	                              mov edx, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x756	      0xbe01000000	                              mov esi, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x75b	      0xe800000000	                          call 0x40007a0	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x760	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x764	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x768	          0x4889d6	                            mov rsi, rdx	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x76b	          0x4889c7	                            mov rdi, rax	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x76e	      0xe800000000	                          call 0x40007b3	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x773	            0xeb34	                           jmp 0x40007e9	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x775	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x77a	            0x742d	                            je 0x40007e9	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x77c	          0x8b45fc	                mov eax, dword [rbp - 4]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x77f	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x782	          0x83c001	                              add eax, 1	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x785	            0x4898	                                    cdqe	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x787	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x78a	          0x4863ca	                         movsxd rcx, edx	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x78d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x791	        0x488d3c11	                    lea rdi, [rcx + rdx]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x795	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x799	          0x4889d1	                            mov rcx, rdx	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x79c	      0xba01000000	                              mov edx, 1	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x7a1	          0x4889c6	                            mov rsi, rax	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x7a4	      0xe800000000	                          call 0x40007e9	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x7a9	          0x8b45fc	                mov eax, dword [rbp - 4]	       205	ws.c	FUNCTION_4	FOR_2
0x7ac	          0x83c001	                              add eax, 1	       205	ws.c	FUNCTION_4	FOR_2
0x7af	          0x8945ec	             mov dword [rbp - 0x14], eax	       205	ws.c	FUNCTION_4	FOR_2
0x7b2	            0xeb01	                           jmp 0x40007f5	       205	ws.c	FUNCTION_4	FOR_2
0x7b4	              0x90	                                     nop	       183	ws.c	FUNCTION_4	FOR_2	IF_6
0x7b5	        0x8345fc01	                  add dword [rbp - 4], 1	       181	ws.c	FUNCTION_4	FOR_2
0x7b9	          0x8b45fc	                mov eax, dword [rbp - 4]	       181	ws.c	FUNCTION_4	FOR_2
0x7bc	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       181	ws.c	FUNCTION_4	FOR_2
0x7bf	     0xf8c47feffff	                            jl 0x400064c	       181	ws.c	FUNCTION_4	FOR_2
0x7c5	            0xeb01	                           jmp 0x4000808	       181	ws.c	FUNCTION_4	FOR_2
0x7c7	              0x90	                                     nop	       185	ws.c	FUNCTION_4	FOR_2	IF_7
0x7c8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7cb	      0x2500010000	                          and eax, 0x100	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7d0	            0x85c0	                           test eax, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7d2	            0x7473	                            je 0x4000887	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7d4	          0x8b45fc	                mov eax, dword [rbp - 4]	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7d7	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7da	            0x89c2	                            mov edx, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7dc	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7df	          0x83e03f	                           and eax, 0x3f	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7e2	            0x39c2	                            cmp edx, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7e4	            0x7261	                            jb 0x4000887	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x7e6	    0x814de8000100	            or dword [rbp - 0x18], 0x100	       210	ws.c	FUNCTION_4	IF_13
0x7ed	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x7f2	            0x744d	                            je 0x4000881	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x7f4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x7f8	          0x4889c6	                            mov rsi, rax	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x7fb	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x7ff	      0xe800000000	                          call 0x4000844	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x804	          0x8b45fc	                mov eax, dword [rbp - 4]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x807	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x80a	            0x4898	                                    cdqe	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x80c	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x80f	          0x4863ca	                         movsxd rcx, edx	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x812	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x816	        0x488d3c11	                    lea rdi, [rcx + rdx]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x81a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x81e	          0x4889d1	                            mov rcx, rdx	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x821	      0xba01000000	                              mov edx, 1	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x826	          0x4889c6	                            mov rsi, rax	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x829	      0xe800000000	                          call 0x400086e	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x82e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x832	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x836	          0x4889d6	                            mov rsi, rdx	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x839	          0x4889c7	                            mov rdi, rax	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x83c	      0xe800000000	                          call 0x4000881	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x841	          0x8b45fc	                mov eax, dword [rbp - 4]	       216	ws.c	FUNCTION_4	IF_13
0x844	          0x8945ec	             mov dword [rbp - 0x14], eax	       216	ws.c	FUNCTION_4	IF_13
0x847	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       219	ws.c	FUNCTION_4	IF_15
0x84c	     0xf84dd000000	                            je 0x400096f	       219	ws.c	FUNCTION_4	IF_15
0x852	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x855	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x858	            0x85c0	                           test eax, eax	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x85a	            0x7e50	                           jle 0x40008ec	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x85c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x860	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x864	          0x4889d6	                            mov rsi, rdx	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x867	          0x4889c7	                            mov rdi, rax	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x86a	      0xe800000000	                          call 0x40008af	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x86f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       229	ws.c	FUNCTION_4	IF_15	IF_16
0x872	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       229	ws.c	FUNCTION_4	IF_15	IF_16
0x875	            0x4898	                                    cdqe	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x877	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x87a	          0x4863ca	                         movsxd rcx, edx	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x87d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x881	        0x488d3c11	                    lea rdi, [rcx + rdx]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x885	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x889	          0x4889d1	                            mov rcx, rdx	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x88c	      0xba01000000	                              mov edx, 1	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x891	          0x4889c6	                            mov rsi, rax	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x894	      0xe800000000	                          call 0x40008d9	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x899	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x89d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x8a1	          0x4889d6	                            mov rsi, rdx	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x8a4	          0x4889c7	                            mov rdi, rax	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x8a7	      0xe800000000	                          call 0x40008ec	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x8ac	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x8af	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x8b2	            0x744d	                            je 0x4000941	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x8b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x8b8	          0x4889c6	                            mov rsi, rax	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x8bb	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x8bf	      0xe800000000	                          call 0x4000904	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x8c4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       237	ws.c	FUNCTION_4	IF_15	IF_17
0x8c7	          0x2b45f0	             sub eax, dword [rbp - 0x10]	       237	ws.c	FUNCTION_4	IF_15	IF_17
0x8ca	            0x4898	                                    cdqe	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8cc	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8cf	          0x4863ca	                         movsxd rcx, edx	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8d2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8d6	        0x488d3c11	                    lea rdi, [rcx + rdx]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8da	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8de	          0x4889d1	                            mov rcx, rdx	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8e1	      0xba01000000	                              mov edx, 1	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8e6	          0x4889c6	                            mov rsi, rax	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8e9	      0xe800000000	                          call 0x400092e	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x8ee	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x8f2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x8f6	          0x4889d6	                            mov rsi, rdx	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x8f9	          0x4889c7	                            mov rdi, rax	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x8fc	      0xe800000000	                          call 0x4000941	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x901	        0x837df800	                  cmp dword [rbp - 8], 0	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x905	            0x7411	                            je 0x4000958	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x907	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x90b	          0x4889c6	                            mov rsi, rax	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x90e	      0xbf0d000000	                            mov edi, 0xd	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x913	      0xe800000000	                          call 0x4000958	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x918	        0x837df400	                cmp dword [rbp - 0xc], 0	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x91c	            0x7411	                            je 0x400096f	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x91e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x922	          0x4889c6	                            mov rsi, rax	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x925	      0xbf0a000000	                            mov edi, 0xa	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x92a	      0xe800000000	                          call 0x400096f	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x92f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       245	ws.c	FUNCTION_4
0x932	              0xc9	                                   leave	       246	ws.c	FUNCTION_4
0x933	              0xc3	                                     ret	       246	ws.c	FUNCTION_4
ws_check	CALL,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0:IF,0	19
0x984	              0x55	                                push rbp	       256	ws.c	FUNCTION_6
0x985	          0x4889e5	                            mov rbp, rsp	       256	ws.c	FUNCTION_6
0x988	        0x4883ec10	                           sub rsp, 0x10	       256	ws.c	FUNCTION_6
0x98c	        0x48897df8	                mov qword [rbp - 8], rdi	       256	ws.c	FUNCTION_6
0x990	          0x8975f4	              mov dword [rbp - 0xc], esi	       256	ws.c	FUNCTION_6
0x993	          0x8955f0	             mov dword [rbp - 0x10], edx	       256	ws.c	FUNCTION_6
0x996	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       257	ws.c	FUNCTION_6	CALL_1
0x999	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       257	ws.c	FUNCTION_6	CALL_1
0x99c	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	ws.c	FUNCTION_6	CALL_1
0x9a0	        0x4883ec08	                              sub rsp, 8	       257	ws.c	FUNCTION_6	CALL_1
0x9a4	            0x6a00	                                  push 0	       257	ws.c	FUNCTION_6	CALL_1
0x9a6	    0x41b900000000	                              mov r9d, 0	       257	ws.c	FUNCTION_6	CALL_1
0x9ac	    0x41b800000000	                              mov r8d, 0	       257	ws.c	FUNCTION_6	CALL_1
0x9b2	      0xb900000000	                              mov ecx, 0	       257	ws.c	FUNCTION_6	CALL_1
0x9b7	          0x4889c7	                            mov rdi, rax	       257	ws.c	FUNCTION_6	CALL_1
0x9ba	      0xe846fbffff	                call sym.ws_check_emit_1	       257	ws.c	FUNCTION_6	CALL_1
0x9bf	        0x4883c410	                           add rsp, 0x10	       257	ws.c	FUNCTION_6	CALL_1
0x9c3	              0xc9	                                   leave	       258	ws.c	FUNCTION_6
0x9c4	              0xc3	                                     ret	       258	ws.c	FUNCTION_6
whitespace_error_string	CALL,11:SWITCH,0:ELSE,1:FOR,0:WHILE,0:functions,0:DO,0:IF,10	97
0x393	              0x55	                                push rbp	       111	ws.c	FUNCTION_3
0x394	          0x4889e5	                            mov rbp, rsp	       111	ws.c	FUNCTION_3
0x397	        0x4883ec30	                           sub rsp, 0x30	       111	ws.c	FUNCTION_3
0x39b	          0x897ddc	             mov dword [rbp - 0x24], edi	       111	ws.c	FUNCTION_3
0x39e	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	ws.c	FUNCTION_3
0x3a7	        0x488945f8	                mov qword [rbp - 8], rax	       111	ws.c	FUNCTION_3
0x3ab	            0x31c0	                            xor eax, eax	       111	ws.c	FUNCTION_3
0x3ad	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       112	ws.c	FUNCTION_3
0x3b5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       112	ws.c	FUNCTION_3
0x3bd	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       112	ws.c	FUNCTION_3
0x3c5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       113	ws.c	FUNCTION_3	IF_1
0x3c8	      0x2540040000	                          and eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x3cd	      0x3d40040000	                          cmp eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x3d2	            0x7513	                           jne 0x4000427	       113	ws.c	FUNCTION_3	IF_1
0x3d4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       114	ws.c	FUNCTION_3	CALL_1
0x3d8	      0xbe00000000	                              mov esi, 0	       114	ws.c	FUNCTION_3	CALL_1
0x3dd	          0x4889c7	                            mov rdi, rax	       114	ws.c	FUNCTION_3	CALL_1
0x3e0	      0xe8bffcffff	                  call sym.strbuf_addstr	       114	ws.c	FUNCTION_3	CALL_1
0x3e5	            0xeb52	                           jmp 0x4000479	       114	ws.c	FUNCTION_3	CALL_1
0x3e7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x3ea	          0x83e040	                           and eax, 0x40	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x3ed	            0x85c0	                           test eax, eax	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x3ef	            0x7411	                            je 0x4000442	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x3f1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       117	ws.c	FUNCTION_3	ELSE_1	CALL_2
0x3f5	      0xbe00000000	                              mov esi, 0	       117	ws.c	FUNCTION_3	ELSE_1	CALL_2
0x3fa	          0x4889c7	                            mov rdi, rax	       117	ws.c	FUNCTION_3	ELSE_1	CALL_2
0x3fd	      0xe8a2fcffff	                  call sym.strbuf_addstr	       117	ws.c	FUNCTION_3	ELSE_1	CALL_2
0x402	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x405	      0x2500040000	                          and eax, 0x400	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40a	            0x85c0	                           test eax, eax	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40c	            0x742b	                            je 0x4000479	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x40e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x412	          0x4885c0	                           test rax, rax	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x415	            0x7411	                            je 0x4000468	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x417	        0x488d45e0	                   lea rax, [rbp - 0x20]	       120	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x41b	      0xbe00000000	                              mov esi, 0	       120	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x420	          0x4889c7	                            mov rdi, rax	       120	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x423	      0xe87cfcffff	                  call sym.strbuf_addstr	       120	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_3
0x428	        0x488d45e0	                   lea rax, [rbp - 0x20]	       121	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_4
0x42c	      0xbe00000000	                              mov esi, 0	       121	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_4
0x431	          0x4889c7	                            mov rdi, rax	       121	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_4
0x434	      0xe86bfcffff	                  call sym.strbuf_addstr	       121	ws.c	FUNCTION_3	ELSE_1	IF_3	CALL_4
0x439	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       124	ws.c	FUNCTION_3	IF_5
0x43c	      0x2580000000	                           and eax, 0x80	       124	ws.c	FUNCTION_3	IF_5
0x441	            0x85c0	                           test eax, eax	       124	ws.c	FUNCTION_3	IF_5
0x443	            0x742b	                            je 0x40004b0	       124	ws.c	FUNCTION_3	IF_5
0x445	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x449	          0x4885c0	                           test rax, rax	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x44c	            0x7411	                            je 0x400049f	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x44e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       126	ws.c	FUNCTION_3	IF_5	CALL_5
0x452	      0xbe00000000	                              mov esi, 0	       126	ws.c	FUNCTION_3	IF_5	CALL_5
0x457	          0x4889c7	                            mov rdi, rax	       126	ws.c	FUNCTION_3	IF_5	CALL_5
0x45a	      0xe845fcffff	                  call sym.strbuf_addstr	       126	ws.c	FUNCTION_3	IF_5	CALL_5
0x45f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       127	ws.c	FUNCTION_3	IF_5	CALL_6
0x463	      0xbe00000000	                              mov esi, 0	       127	ws.c	FUNCTION_3	IF_5	CALL_6
0x468	          0x4889c7	                            mov rdi, rax	       127	ws.c	FUNCTION_3	IF_5	CALL_6
0x46b	      0xe834fcffff	                  call sym.strbuf_addstr	       127	ws.c	FUNCTION_3	IF_5	CALL_6
0x470	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       129	ws.c	FUNCTION_3	IF_7
0x473	      0x2500010000	                          and eax, 0x100	       129	ws.c	FUNCTION_3	IF_7
0x478	            0x85c0	                           test eax, eax	       129	ws.c	FUNCTION_3	IF_7
0x47a	            0x742b	                            je 0x40004e7	       129	ws.c	FUNCTION_3	IF_7
0x47c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x480	          0x4885c0	                           test rax, rax	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x483	            0x7411	                            je 0x40004d6	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x485	        0x488d45e0	                   lea rax, [rbp - 0x20]	       131	ws.c	FUNCTION_3	IF_7	CALL_7
0x489	      0xbe00000000	                              mov esi, 0	       131	ws.c	FUNCTION_3	IF_7	CALL_7
0x48e	          0x4889c7	                            mov rdi, rax	       131	ws.c	FUNCTION_3	IF_7	CALL_7
0x491	      0xe80efcffff	                  call sym.strbuf_addstr	       131	ws.c	FUNCTION_3	IF_7	CALL_7
0x496	        0x488d45e0	                   lea rax, [rbp - 0x20]	       132	ws.c	FUNCTION_3	IF_7	CALL_8
0x49a	      0xbe00000000	                              mov esi, 0	       132	ws.c	FUNCTION_3	IF_7	CALL_8
0x49f	          0x4889c7	                            mov rdi, rax	       132	ws.c	FUNCTION_3	IF_7	CALL_8
0x4a2	      0xe8fdfbffff	                  call sym.strbuf_addstr	       132	ws.c	FUNCTION_3	IF_7	CALL_8
0x4a7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       134	ws.c	FUNCTION_3	IF_9
0x4aa	      0x2500080000	                          and eax, 0x800	       134	ws.c	FUNCTION_3	IF_9
0x4af	            0x85c0	                           test eax, eax	       134	ws.c	FUNCTION_3	IF_9
0x4b1	            0x742b	                            je 0x400051e	       134	ws.c	FUNCTION_3	IF_9
0x4b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x4b7	          0x4885c0	                           test rax, rax	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x4ba	            0x7411	                            je 0x400050d	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x4bc	        0x488d45e0	                   lea rax, [rbp - 0x20]	       136	ws.c	FUNCTION_3	IF_9	CALL_9
0x4c0	      0xbe00000000	                              mov esi, 0	       136	ws.c	FUNCTION_3	IF_9	CALL_9
0x4c5	          0x4889c7	                            mov rdi, rax	       136	ws.c	FUNCTION_3	IF_9	CALL_9
0x4c8	      0xe8d7fbffff	                  call sym.strbuf_addstr	       136	ws.c	FUNCTION_3	IF_9	CALL_9
0x4cd	        0x488d45e0	                   lea rax, [rbp - 0x20]	       137	ws.c	FUNCTION_3	IF_9	CALL_10
0x4d1	      0xbe00000000	                              mov esi, 0	       137	ws.c	FUNCTION_3	IF_9	CALL_10
0x4d6	          0x4889c7	                            mov rdi, rax	       137	ws.c	FUNCTION_3	IF_9	CALL_10
0x4d9	      0xe8c6fbffff	                  call sym.strbuf_addstr	       137	ws.c	FUNCTION_3	IF_9	CALL_10
0x4de	        0x488d45e0	                   lea rax, [rbp - 0x20]	       139	ws.c	FUNCTION_3	CALL_11
0x4e2	      0xbe00000000	                              mov esi, 0	       139	ws.c	FUNCTION_3	CALL_11
0x4e7	          0x4889c7	                            mov rdi, rax	       139	ws.c	FUNCTION_3	CALL_11
0x4ea	      0xe800000000	                          call 0x400052f	       139	ws.c	FUNCTION_3	CALL_11
0x4ef	        0x488b55f8	                mov rdx, qword [rbp - 8]	       140	ws.c	FUNCTION_3
0x4f3	    0x644833142528	                xor rdx, qword fs:[0x28]	       140	ws.c	FUNCTION_3
0x4fc	            0x7405	                            je 0x4000543	       140	ws.c	FUNCTION_3
0x4fe	      0xe800000000	                          call 0x4000543	       140	ws.c	FUNCTION_3
0x503	              0xc9	                                   leave	       140	ws.c	FUNCTION_3
0x504	              0xc3	                                     ret	       140	ws.c	FUNCTION_3
parse_whitespace_rule	CALL,8:SWITCH,0:ELSE,2:FOR,1:WHILE,1:functions,0:DO,0:IF,7	117
0xd9	              0x55	                                push rbp	        26	ws.c	FUNCTION_1
0xda	          0x4889e5	                            mov rbp, rsp	        26	ws.c	FUNCTION_1
0xdd	        0x4883ec30	                           sub rsp, 0x30	        26	ws.c	FUNCTION_1
0xe1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        26	ws.c	FUNCTION_1
0xe5	    0xc745e0c80400	          mov dword [rbp - 0x20], 0x4c8 	        27	ws.c	FUNCTION_1
0xec	      0xe950010000	                           jmp 0x4000281	        29	ws.c	FUNCTION_1	WHILE_1
0xf1	    0xc745e8000000	               mov dword [rbp - 0x18], 0	        33	ws.c	FUNCTION_1	WHILE_1
0xf8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0xfc	      0xbe00000000	                              mov esi, 0	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x101	          0x4889c7	                            mov rdi, rax	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x104	      0xe800000000	                          call 0x4000149	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x109	        0x480145d8	            add qword [rbp - 0x28], rax 	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x10d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x111	      0xbe2c000000	                           mov esi, 0x2c	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x116	          0x4889c7	                            mov rdi, rax	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x119	      0xe800000000	                          call 0x400015e	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x11e	        0x488945f8	                mov qword [rbp - 8], rax	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x122	        0x488b55f8	                mov rdx, qword [rbp - 8]	        37	ws.c	FUNCTION_1	WHILE_1
0x126	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        37	ws.c	FUNCTION_1	WHILE_1
0x12a	          0x4829c2	                            sub rdx, rax	        37	ws.c	FUNCTION_1	WHILE_1
0x12d	          0x4889d0	                            mov rax, rdx	        37	ws.c	FUNCTION_1	WHILE_1
0x130	        0x488945f0	             mov qword [rbp - 0x10], rax	        37	ws.c	FUNCTION_1	WHILE_1
0x134	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x138	           0xfb600	                   movzx eax, byte [rax]	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x13b	            0x3c2d	                            cmp al, 0x2d	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x13d	            0x7511	                           jne 0x4000190	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x13f	    0xc745e8010000	               mov dword [rbp - 0x18], 1	        40	ws.c	FUNCTION_1	WHILE_1	IF_1
0x146	      0x488345d801	               add qword [rbp - 0x28], 1	        41	ws.c	FUNCTION_1	WHILE_1	IF_1
0x14b	      0x48836df001	               sub qword [rbp - 0x10], 1	        42	ws.c	FUNCTION_1	WHILE_1	IF_1
0x150	      0x48837df000	               cmp qword [rbp - 0x10], 0	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x155	     0xf84f3000000	                            je 0x400028e	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x15b	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x162	            0xeb63	                           jmp 0x4000207	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x164	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x167	            0x4898	                                    cdqe	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x169	        0x48c1e004	                              shl rax, 4	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x16d	    0x480500000000	                              add rax, 0	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x173	          0x488b00	                    mov rax, qword [rax]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x176	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x17a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x17e	          0x4889ce	                            mov rsi, rcx	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x181	          0x4889c7	                            mov rdi, rax	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x184	      0xe800000000	                          call 0x40001c9	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x189	            0x85c0	                           test eax, eax	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x18b	            0x7406	                            je 0x40001d3	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x18d	        0x8345e401	               add dword [rbp - 0x1c], 1	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x191	            0xeb34	                           jmp 0x4000207	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x193	        0x837de800	               cmp dword [rbp - 0x18], 0	        50	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x197	            0x7418	                            je 0x40001f1	        50	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x199	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x19c	            0x4898	                                    cdqe	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x19e	        0x48c1e004	                              shl rax, 4	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x1a2	    0x480500000000	                              add rax, 0	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x1a8	            0x8b00	                    mov eax, dword [rax]	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x1aa	            0xf7d0	                                 not eax	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x1ac	          0x2145e0	             and dword [rbp - 0x20], eax	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x1af	            0xeb1e	                           jmp 0x400020f	        54	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x1b1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x1b4	            0x4898	                                    cdqe	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x1b6	        0x48c1e004	                              shl rax, 4	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x1ba	    0x480500000000	                              add rax, 0	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x1c0	            0x8b00	                    mov eax, dword [rax]	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x1c2	           0x945e0	              or dword [rbp - 0x20], eax	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x1c5	            0xeb08	                           jmp 0x400020f	        54	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x1c7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x1ca	          0x83f806	                              cmp eax, 6	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x1cd	            0x7695	                           jbe 0x40001a4	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x1cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x1d3	      0xba09000000	                              mov edx, 9	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x1d8	      0xbe00000000	                              mov esi, 0	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x1dd	          0x4889c7	                            mov rdi, rax	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x1e0	      0xe800000000	                          call 0x4000225	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x1e5	            0x85c0	                           test eax, eax	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x1e7	            0x7550	                           jne 0x4000279	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x1e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x1ed	        0x4883c009	                              add rax, 9	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x1f1	          0x4889c7	                            mov rdi, rax	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x1f4	      0xe800000000	                          call 0x4000239	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x1f9	          0x8945ec	             mov dword [rbp - 0x14], eax	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x1fc	        0x837dec00	               cmp dword [rbp - 0x14], 0	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x200	            0x7412	                            je 0x4000254	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x202	        0x837dec3f	           cmp dword [rbp - 0x14], 0x3f 	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x206	            0x770c	                            ja 0x4000254	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x208	        0x8365e0c0	      and dword [rbp - 0x20], 0xffffffc0	        59	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x20c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x20f	           0x945e0	              or dword [rbp - 0x20], eax	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x212	            0xeb25	                           jmp 0x4000279	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x214	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x218	        0x4883c009	                              add rax, 9	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x21c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x220	          0x83ea09	                              sub edx, 9	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x223	            0x89d1	                            mov ecx, edx	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x225	          0x4889c2	                            mov rdx, rax	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x228	            0x89ce	                            mov esi, ecx	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x22a	      0xbf00000000	                              mov edi, 0	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x22f	      0xb800000000	                              mov eax, 0	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x234	      0xe800000000	                          call 0x4000279	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x239	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	ws.c	FUNCTION_1	WHILE_1
0x23d	        0x488945d8	             mov qword [rbp - 0x28], rax	        66	ws.c	FUNCTION_1	WHILE_1
0x241	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        29	ws.c	FUNCTION_1	WHILE_1
0x246	     0xf85a5feffff	                           jne 0x4000131	        29	ws.c	FUNCTION_1	WHILE_1
0x24c	            0xeb01	                           jmp 0x400028f	        29	ws.c	FUNCTION_1	WHILE_1
0x24e	              0x90	                                     nop	        45	ws.c	FUNCTION_1	WHILE_1	IF_2
0x24f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        69	ws.c	FUNCTION_1	IF_7
0x252	      0x2500080000	                          and eax, 0x800	        69	ws.c	FUNCTION_1	IF_7
0x257	            0x85c0	                           test eax, eax	        69	ws.c	FUNCTION_1	IF_7
0x259	            0x741b	                            je 0x40002b6	        69	ws.c	FUNCTION_1	IF_7
0x25b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        69	ws.c	FUNCTION_1	IF_7
0x25e	      0x2500010000	                          and eax, 0x100	        69	ws.c	FUNCTION_1	IF_7
0x263	            0x85c0	                           test eax, eax	        69	ws.c	FUNCTION_1	IF_7
0x265	            0x740f	                            je 0x40002b6	        69	ws.c	FUNCTION_1	IF_7
0x267	      0xbf00000000	                              mov edi, 0	        70	ws.c	FUNCTION_1	CALL_8
0x26c	      0xb800000000	                              mov eax, 0	        70	ws.c	FUNCTION_1	CALL_8
0x271	      0xe800000000	                          call 0x40002b6	        70	ws.c	FUNCTION_1	CALL_8
0x276	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        71	ws.c	FUNCTION_1
0x279	              0xc9	                                   leave	        72	ws.c	FUNCTION_1
0x27a	              0xc3	                                     ret	        72	ws.c	FUNCTION_1
ws_fix_copy	CALL,13:SWITCH,0:ELSE,6:FOR,3:WHILE,2:functions,0:DO,1:IF,18	283
0xa12	              0x55	                                push rbp	       277	ws.c	FUNCTION_8
0xa13	          0x4889e5	                            mov rbp, rsp	       277	ws.c	FUNCTION_8
0xa16	        0x4883ec50	                           sub rsp, 0x50	       277	ws.c	FUNCTION_8
0xa1a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       277	ws.c	FUNCTION_8
0xa1e	        0x488975c0	             mov qword [rbp - 0x40], rsi	       277	ws.c	FUNCTION_8
0xa22	          0x8955bc	             mov dword [rbp - 0x44], edx	       277	ws.c	FUNCTION_8
0xa25	          0x894db8	             mov dword [rbp - 0x48], ecx	       277	ws.c	FUNCTION_8
0xa28	        0x4c8945b0	              mov qword [rbp - 0x50], r8	       277	ws.c	FUNCTION_8
0xa2c	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       284	ws.c	FUNCTION_8
0xa33	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       285	ws.c	FUNCTION_8
0xa3a	    0xc745e0000000	               mov dword [rbp - 0x20], 0	       286	ws.c	FUNCTION_8
0xa41	    0xc745e4ffffff	     mov dword [rbp - 0x1c], 0xffffffff 	       287	ws.c	FUNCTION_8
0xa48	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	       288	ws.c	FUNCTION_8
0xa4f	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       289	ws.c	FUNCTION_8
0xa56	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       294	ws.c	FUNCTION_8	IF_1
0xa59	          0x83e040	                           and eax, 0x40	       294	ws.c	FUNCTION_8	IF_1
0xa5c	            0x85c0	                           test eax, eax	       294	ws.c	FUNCTION_8	IF_1
0xa5e	     0xf84c7000000	                            je 0x4000b6b	       294	ws.c	FUNCTION_8	IF_1
0xa64	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa68	            0x7e56	                           jle 0x4000b00	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa6a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa6d	            0x4898	                                    cdqe	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa6f	        0x488d50ff	                      lea rdx, [rax - 1]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa73	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa77	          0x4801d0	                            add rax, rdx	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa7a	           0xfb600	                   movzx eax, byte [rax]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa7d	            0x3c0a	                             cmp al, 0xa	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa7f	            0x753f	                           jne 0x4000b00	       295	ws.c	FUNCTION_8	IF_1	IF_2
0xa81	    0xc745d8010000	               mov dword [rbp - 0x28], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0xa88	        0x836dbc01	               sub dword [rbp - 0x44], 1	       297	ws.c	FUNCTION_8	IF_1	IF_2
0xa8c	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xa90	            0x7e2e	                           jle 0x4000b00	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xa92	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xa95	            0x4898	                                    cdqe	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xa97	        0x488d50ff	                      lea rdx, [rax - 1]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xa9b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xa9f	          0x4801d0	                            add rax, rdx	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xaa2	           0xfb600	                   movzx eax, byte [rax]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xaa5	            0x3c0d	                             cmp al, 0xd	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xaa7	            0x7517	                           jne 0x4000b00	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xaa9	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xaac	      0x2500020000	                          and eax, 0x200	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xab1	            0x85c0	                           test eax, eax	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xab3	           0xf95c0	                                setne al	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xab6	           0xfb6c0	                           movzx eax, al	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xab9	          0x8945dc	             mov dword [rbp - 0x24], eax	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xabc	        0x836dbc01	               sub dword [rbp - 0x44], 1	       300	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0xac0	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xac4	            0x7e65	                           jle 0x4000b6b	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xac6	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xac9	            0x4898	                                    cdqe	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xacb	        0x488d50ff	                      lea rdx, [rax - 1]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xacf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xad3	          0x4801d0	                            add rax, rdx	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xad6	           0xfb600	                   movzx eax, byte [rax]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xad9	           0xfb6c0	                           movzx eax, al	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xadc	            0x4898	                                    cdqe	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xade	     0xfb680000000	                   movzx eax, byte [rax]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xae5	           0xfb6c0	                           movzx eax, al	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xae8	          0x83e001	                              and eax, 1	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xaeb	            0x85c0	                           test eax, eax	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xaed	            0x743c	                            je 0x4000b6b	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0xaef	            0xeb04	                           jmp 0x4000b35	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xaf1	        0x836dbc01	               sub dword [rbp - 0x44], 1	       305	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1
0xaf5	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xaf9	            0x7e29	                           jle 0x4000b64	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xafb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xafe	            0x4898	                                    cdqe	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb00	        0x488d50ff	                      lea rdx, [rax - 1]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb04	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb08	          0x4801d0	                            add rax, rdx	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb0b	           0xfb600	                   movzx eax, byte [rax]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb0e	           0xfb6c0	                           movzx eax, al	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb11	            0x4898	                                    cdqe	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb13	     0xfb680000000	                   movzx eax, byte [rax]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb1a	           0xfb6c0	                           movzx eax, al	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb1d	          0x83e001	                              and eax, 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb20	            0x85c0	                           test eax, eax	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb22	            0x75cd	                           jne 0x4000b31	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0xb24	    0xc745e0010000	               mov dword [rbp - 0x20], 1	       306	ws.c	FUNCTION_8	IF_1	IF_4
0xb2b	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       313	ws.c	FUNCTION_8	FOR_1
0xb32	            0xeb6f	                           jmp 0x4000be3	       313	ws.c	FUNCTION_8	FOR_1
0xb34	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       314	ws.c	FUNCTION_8	FOR_1
0xb37	          0x4863d0	                         movsxd rdx, eax	       314	ws.c	FUNCTION_8	FOR_1
0xb3a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       314	ws.c	FUNCTION_8	FOR_1
0xb3e	          0x4801d0	                            add rax, rdx	       314	ws.c	FUNCTION_8	FOR_1
0xb41	           0xfb600	                   movzx eax, byte [rax]	       314	ws.c	FUNCTION_8	FOR_1
0xb44	          0x8845d2	               mov byte [rbp - 0x2e], al	       314	ws.c	FUNCTION_8	FOR_1
0xb47	        0x807dd209	                cmp byte [rbp - 0x2e], 9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0xb4b	            0x7521	                           jne 0x4000bae	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0xb4d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       316	ws.c	FUNCTION_8	FOR_1	IF_5
0xb50	          0x8945e4	             mov dword [rbp - 0x1c], eax	       316	ws.c	FUNCTION_8	FOR_1	IF_5
0xb53	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0xb56	      0x2580000000	                           and eax, 0x80	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0xb5b	            0x85c0	                           test eax, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0xb5d	            0x7440	                            je 0x4000bdf	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0xb5f	        0x837de800	               cmp dword [rbp - 0x18], 0	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0xb63	            0x783a	                            js 0x4000bdf	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0xb65	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0xb6c	            0xeb31	                           jmp 0x4000bdf	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0xb6e	        0x807dd220	            cmp byte [rbp - 0x2e], 0x20 	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0xb72	            0x7539	                           jne 0x4000bed	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0xb74	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       321	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0xb77	          0x8945e8	             mov dword [rbp - 0x18], eax	       321	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0xb7a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0xb7d	      0x2500010000	                          and eax, 0x100	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0xb82	            0x85c0	                           test eax, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0xb84	            0x7419	                            je 0x4000bdf	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0xb86	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0xb89	          0x83e03f	                           and eax, 0x3f	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0xb8c	            0x89c2	                            mov edx, eax	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0xb8e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0xb91	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	       323	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8	CALL_3
0xb94	            0x39c2	                            cmp edx, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0xb96	            0x7707	                            ja 0x4000bdf	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0xb98	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       324	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0xb9f	        0x8345d401	               add dword [rbp - 0x2c], 1	       313	ws.c	FUNCTION_8	FOR_1
0xba3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       313	ws.c	FUNCTION_8	FOR_1
0xba6	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       313	ws.c	FUNCTION_8	FOR_1
0xba9	            0x7c89	                            jl 0x4000b74	       313	ws.c	FUNCTION_8	FOR_1
0xbab	            0xeb01	                           jmp 0x4000bee	       313	ws.c	FUNCTION_8	FOR_1
0xbad	              0x90	                                     nop	       326	ws.c	FUNCTION_8	FOR_1	ELSE_2
0xbae	        0x837dec00	               cmp dword [rbp - 0x14], 0	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0xbb2	     0xf84e7000000	                            je 0x4000cdf	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0xbb8	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       331	ws.c	FUNCTION_8	ELSE_2	IF_9
0xbbf	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       332	ws.c	FUNCTION_8	ELSE_2	IF_9
0xbc2	          0x83c001	                              add eax, 1	       332	ws.c	FUNCTION_8	ELSE_2	IF_9
0xbc5	          0x8945f4	              mov dword [rbp - 0xc], eax	       332	ws.c	FUNCTION_8	ELSE_2	IF_9
0xbc8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       334	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10
0xbcb	      0x2500010000	                          and eax, 0x100	       334	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10
0xbd0	            0x85c0	                           test eax, eax	       334	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10
0xbd2	            0x741c	                            je 0x4000c30	       334	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10
0xbd4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0xbd7	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0xbda	            0x7d0b	                           jge 0x4000c27	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0xbdc	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0xbdf	          0x83c001	                              add eax, 1	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0xbe2	          0x8945f4	              mov dword [rbp - 0xc], eax	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0xbe5	            0xeb09	                           jmp 0x4000c30	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0xbe7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       339	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	ELSE_3
0xbea	          0x83c001	                              add eax, 1	       339	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	ELSE_3
0xbed	          0x8945f4	              mov dword [rbp - 0xc], eax	       339	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	ELSE_3
0xbf0	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xbf7	            0xeb63	                           jmp 0x4000c9c	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xbf9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xbfc	          0x4863d0	                         movsxd rdx, eax	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xbff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xc03	          0x4801d0	                            add rax, rdx	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xc06	           0xfb600	                   movzx eax, byte [rax]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xc09	          0x8845d3	               mov byte [rbp - 0x2d], al	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xc0c	        0x807dd320	            cmp byte [rbp - 0x2d], 0x20 	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0xc10	            0x741b	                            je 0x4000c6d	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0xc12	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       349	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0xc19	         0xfbe55d3	            movsx edx, byte [rbp - 0x2d]	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0xc1d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0xc21	            0x89d6	                            mov esi, edx	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0xc23	          0x4889c7	                            mov rdi, rax	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0xc26	      0xe80bf4ffff	                   call sym.strbuf_addch	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0xc2b	            0xeb2b	                           jmp 0x4000c98	       350	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12	CALL_4
0xc2d	        0x8345f001	               add dword [rbp - 0x10], 1	       352	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4
0xc31	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0xc34	          0x83e03f	                           and eax, 0x3f	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0xc37	            0x89c2	                            mov edx, eax	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0xc39	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0xc3c	            0x39c2	                            cmp edx, eax	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0xc3e	            0x7518	                           jne 0x4000c98	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0xc40	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       354	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_6
0xc44	      0xbe09000000	                              mov esi, 9	       354	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_6
0xc49	          0x4889c7	                            mov rdi, rax	       354	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_6
0xc4c	      0xe8e5f3ffff	                   call sym.strbuf_addch	       354	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_6
0xc51	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       355	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13
0xc58	        0x8345d401	               add dword [rbp - 0x2c], 1	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xc5c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xc5f	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xc62	            0x7c95	                            jl 0x4000c39	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0xc64	            0xeb11	                           jmp 0x4000cb7	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0xc66	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       360	ws.c	FUNCTION_8	ELSE_2	IF_9	CALL_7
0xc6a	      0xbe20000000	                           mov esi, 0x20	       360	ws.c	FUNCTION_8	ELSE_2	IF_9	CALL_7
0xc6f	          0x4889c7	                            mov rdi, rax	       360	ws.c	FUNCTION_8	ELSE_2	IF_9	CALL_7
0xc72	      0xe8bff3ffff	                   call sym.strbuf_addch	       360	ws.c	FUNCTION_8	ELSE_2	IF_9	CALL_7
0xc77	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0xc7a	          0x8d50ff	                      lea edx, [rax - 1]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0xc7d	          0x8955f0	             mov dword [rbp - 0x10], edx	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0xc80	            0x85c0	                           test eax, eax	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0xc82	            0x7fe2	                            jg 0x4000ca6	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0xc84	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0xc87	          0x2945bc	             sub dword [rbp - 0x44], eax	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0xc8a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0xc8d	            0x4898	                                    cdqe	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0xc8f	        0x480145c0	            add qword [rbp - 0x40], rax 	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0xc93	    0xc745e0010000	               mov dword [rbp - 0x20], 1	       363	ws.c	FUNCTION_8	ELSE_2	IF_9
0xc9a	      0xe9cd000000	                           jmp 0x4000dac	       363	ws.c	FUNCTION_8	ELSE_2	IF_9
0xc9f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0xca2	      0x2500080000	                          and eax, 0x800	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0xca7	            0x85c0	                           test eax, eax	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0xca9	     0xf84bd000000	                            je 0x4000dac	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0xcaf	        0x837de400	               cmp dword [rbp - 0x1c], 0	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0xcb3	     0xf88b3000000	                            js 0x4000dac	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0xcb9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       366	ws.c	FUNCTION_8	ELSE_5	IF_14
0xcbd	        0x488b4008	                mov rax, qword [rax + 8]	       366	ws.c	FUNCTION_8	ELSE_5	IF_14
0xcc1	          0x8945f8	                mov dword [rbp - 8], eax	       366	ws.c	FUNCTION_8	ELSE_5	IF_14
0xcc4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0xcc7	          0x83c001	                              add eax, 1	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0xcca	          0x8945fc	                mov dword [rbp - 4], eax	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0xccd	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0xcd4	            0xeb78	                           jmp 0x4000d8e	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0xcd6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0xcd9	          0x4863d0	                         movsxd rdx, eax	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0xcdc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0xce0	          0x4801d0	                            add rax, rdx	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0xce3	           0xfb600	                   movzx eax, byte [rax]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0xce6	            0x3c09	                               cmp al, 9	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0xce8	            0x753f	                           jne 0x4000d69	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0xcea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       371	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1	CALL_8
0xcee	      0xbe20000000	                           mov esi, 0x20	       371	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1	CALL_8
0xcf3	          0x4889c7	                            mov rdi, rax	       371	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1	CALL_8
0xcf6	      0xe83bf3ffff	                   call sym.strbuf_addch	       371	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1	CALL_8
0xcfb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xcff	        0x488b5008	                mov rdx, qword [rax + 8]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd03	          0x8b45f8	                mov eax, dword [rbp - 8]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd06	            0x4898	                                    cdqe	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd08	          0x4829c2	                            sub rdx, rax	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd0b	          0x4889d0	                            mov rax, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd0e	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd11	          0x4889d1	                            mov rcx, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd14	          0x83e13f	                           and ecx, 0x3f	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd17	      0xba00000000	                              mov edx, 0	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd1c	          0x48f7f1	                                 div rcx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd1f	          0x4889d0	                            mov rax, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd22	          0x4885c0	                           test rax, rax	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd25	            0x75c3	                           jne 0x4000d2a	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd27	            0xeb21	                           jmp 0x4000d8a	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0xd29	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd2c	          0x4863d0	                         movsxd rdx, eax	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd2f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd33	          0x4801d0	                            add rax, rdx	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd36	           0xfb600	                   movzx eax, byte [rax]	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd39	           0xfbed0	                           movsx edx, al	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd3c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd40	            0x89d6	                            mov esi, edx	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd42	          0x4889c7	                            mov rdi, rax	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd45	      0xe8ecf2ffff	                   call sym.strbuf_addch	       374	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	CALL_10
0xd4a	        0x8345d401	               add dword [rbp - 0x2c], 1	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0xd4e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0xd51	          0x3b45fc	                cmp eax, dword [rbp - 4]	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0xd54	            0x7c80	                            jl 0x4000d16	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0xd56	          0x8b45fc	                mov eax, dword [rbp - 4]	       376	ws.c	FUNCTION_8	ELSE_5	IF_14
0xd59	          0x2945bc	             sub dword [rbp - 0x44], eax	       376	ws.c	FUNCTION_8	ELSE_5	IF_14
0xd5c	          0x8b45fc	                mov eax, dword [rbp - 4]	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0xd5f	            0x4898	                                    cdqe	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0xd61	        0x480145c0	            add qword [rbp - 0x40], rax 	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0xd65	    0xc745e0010000	               mov dword [rbp - 0x20], 1	       378	ws.c	FUNCTION_8	ELSE_5	IF_14
0xd6c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       381	ws.c	FUNCTION_8	CALL_11
0xd6f	          0x4863d0	                         movsxd rdx, eax	       381	ws.c	FUNCTION_8	CALL_11
0xd72	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       381	ws.c	FUNCTION_8	CALL_11
0xd76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       381	ws.c	FUNCTION_8	CALL_11
0xd7a	          0x4889ce	                            mov rsi, rcx	       381	ws.c	FUNCTION_8	CALL_11
0xd7d	          0x4889c7	                            mov rdi, rax	       381	ws.c	FUNCTION_8	CALL_11
0xd80	      0xe800000000	                          call 0x4000dc5	       381	ws.c	FUNCTION_8	CALL_11
0xd85	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       382	ws.c	FUNCTION_8	IF_16
0xd89	            0x7411	                            je 0x4000ddc	       382	ws.c	FUNCTION_8	IF_16
0xd8b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       383	ws.c	FUNCTION_8	CALL_12
0xd8f	      0xbe0d000000	                            mov esi, 0xd	       383	ws.c	FUNCTION_8	CALL_12
0xd94	          0x4889c7	                            mov rdi, rax	       383	ws.c	FUNCTION_8	CALL_12
0xd97	      0xe89af2ffff	                   call sym.strbuf_addch	       383	ws.c	FUNCTION_8	CALL_12
0xd9c	        0x837dd800	               cmp dword [rbp - 0x28], 0	       384	ws.c	FUNCTION_8	IF_17
0xda0	            0x7411	                            je 0x4000df3	       384	ws.c	FUNCTION_8	IF_17
0xda2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       385	ws.c	FUNCTION_8	CALL_13
0xda6	      0xbe0a000000	                            mov esi, 0xa	       385	ws.c	FUNCTION_8	CALL_13
0xdab	          0x4889c7	                            mov rdi, rax	       385	ws.c	FUNCTION_8	CALL_13
0xdae	      0xe883f2ffff	                   call sym.strbuf_addch	       385	ws.c	FUNCTION_8	CALL_13
0xdb3	        0x837de000	               cmp dword [rbp - 0x20], 0	       386	ws.c	FUNCTION_8	IF_18
0xdb7	            0x7416	                            je 0x4000e0f	       386	ws.c	FUNCTION_8	IF_18
0xdb9	      0x48837db000	               cmp qword [rbp - 0x50], 0	       386	ws.c	FUNCTION_8	IF_18
0xdbe	            0x740f	                            je 0x4000e0f	       386	ws.c	FUNCTION_8	IF_18
0xdc0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       387	ws.c	FUNCTION_8	IF_18
0xdc4	            0x8b00	                    mov eax, dword [rax]	       387	ws.c	FUNCTION_8	IF_18
0xdc6	          0x8d5001	                      lea edx, [rax + 1]	       387	ws.c	FUNCTION_8	IF_18
0xdc9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       387	ws.c	FUNCTION_8	IF_18
0xdcd	            0x8910	                    mov dword [rax], edx	       387	ws.c	FUNCTION_8	IF_18
0xdcf	              0x90	                                     nop	       388	ws.c	FUNCTION_8
0xdd0	              0xc9	                                   leave	       388	ws.c	FUNCTION_8
0xdd1	              0xc3	                                     ret	       388	ws.c	FUNCTION_8
