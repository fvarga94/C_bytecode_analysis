remove_entry_from_dir	DO,0:functions,0:SWITCH,0:ELSE,1:IF,4:CALL,8:FOR,0:WHILE,0	113
0x9a2	              0x55	                                push rbp	       216	ref-cache.c	FUNCTION_15
0x9a3	          0x4889e5	                            mov rbp, rsp	       216	ref-cache.c	FUNCTION_15
0x9a6	        0x4883ec30	                           sub rsp, 0x30	       216	ref-cache.c	FUNCTION_15
0x9aa	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       216	ref-cache.c	FUNCTION_15
0x9ae	        0x488975d0	             mov qword [rbp - 0x30], rsi	       216	ref-cache.c	FUNCTION_15
0x9b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       217	ref-cache.c	FUNCTION_15	CALL_1
0x9b6	          0x4889c7	                            mov rdi, rax	       217	ref-cache.c	FUNCTION_15	CALL_1
0x9b9	      0xe800000000	                          call 0x40009fe	       217	ref-cache.c	FUNCTION_15	CALL_1
0x9be	          0x8945e4	             mov dword [rbp - 0x1c], eax	       217	ref-cache.c	FUNCTION_15	CALL_1
0x9c1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       220	ref-cache.c	FUNCTION_15
0x9c4	            0x4898	                                    cdqe	       220	ref-cache.c	FUNCTION_15
0x9c6	        0x488d50ff	                      lea rdx, [rax - 1]	       220	ref-cache.c	FUNCTION_15
0x9ca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       220	ref-cache.c	FUNCTION_15
0x9ce	          0x4801d0	                            add rax, rdx	       220	ref-cache.c	FUNCTION_15
0x9d1	           0xfb600	                   movzx eax, byte [rax]	       220	ref-cache.c	FUNCTION_15
0x9d4	            0x3c2f	                            cmp al, 0x2f	       220	ref-cache.c	FUNCTION_15
0x9d6	           0xf94c0	                                 sete al	       220	ref-cache.c	FUNCTION_15
0x9d9	           0xfb6c0	                           movzx eax, al	       220	ref-cache.c	FUNCTION_15
0x9dc	          0x8945e8	             mov dword [rbp - 0x18], eax	       220	ref-cache.c	FUNCTION_15
0x9df	        0x837de800	               cmp dword [rbp - 0x18], 0	       221	ref-cache.c	FUNCTION_15	IF_1
0x9e3	            0x7446	                            je 0x4000a6b	       221	ref-cache.c	FUNCTION_15	IF_1
0x9e5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x9e8	          0x83e801	                              sub eax, 1	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x9eb	          0x4863d0	                         movsxd rdx, eax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x9ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x9f2	          0x4889d6	                            mov rsi, rdx	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x9f5	          0x4889c7	                            mov rdi, rax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x9f8	      0xe800000000	                          call 0x4000a3d	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x9fd	        0x488945f0	             mov qword [rbp - 0x10], rax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0xa01	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0xa05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0xa09	      0xba00000000	                              mov edx, 0	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0xa0e	          0x4889ce	                            mov rsi, rcx	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0xa11	          0x4889c7	                            mov rdi, rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0xa14	      0xe848feffff	            call sym.find_containing_dir	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0xa19	        0x488945d8	             mov qword [rbp - 0x28], rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0xa1d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0xa21	          0x4889c7	                            mov rdi, rax	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0xa24	      0xe800000000	                          call 0x4000a69	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0xa29	            0xeb1c	                           jmp 0x4000a87	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0xa2b	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0xa2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0xa33	      0xba00000000	                              mov edx, 0	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0xa38	          0x4889ce	                            mov rsi, rcx	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0xa3b	          0x4889c7	                            mov rdi, rax	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0xa3e	      0xe81efeffff	            call sym.find_containing_dir	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0xa43	        0x488945d8	             mov qword [rbp - 0x28], rax	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0xa47	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       234	ref-cache.c	FUNCTION_15	IF_2
0xa4c	            0x750a	                           jne 0x4000a98	       234	ref-cache.c	FUNCTION_15	IF_2
0xa4e	      0xb8ffffffff	                     mov eax, 0xffffffff	       235	ref-cache.c	FUNCTION_15	IF_2
0xa53	      0xe9d1000000	                           jmp 0x4000b69	       235	ref-cache.c	FUNCTION_15	IF_2
0xa58	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       236	ref-cache.c	FUNCTION_15	CALL_6
0xa5b	          0x4863d0	                         movsxd rdx, eax	       236	ref-cache.c	FUNCTION_15	CALL_6
0xa5e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       236	ref-cache.c	FUNCTION_15	CALL_6
0xa62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       236	ref-cache.c	FUNCTION_15	CALL_6
0xa66	          0x4889ce	                            mov rsi, rcx	       236	ref-cache.c	FUNCTION_15	CALL_6
0xa69	          0x4889c7	                            mov rdi, rax	       236	ref-cache.c	FUNCTION_15	CALL_6
0xa6c	      0xe800000000	                          call 0x4000ab1	       236	ref-cache.c	FUNCTION_15	CALL_6
0xa71	          0x8945ec	             mov dword [rbp - 0x14], eax	       236	ref-cache.c	FUNCTION_15	CALL_6
0xa74	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	       237	ref-cache.c	FUNCTION_15	IF_3
0xa78	            0x750a	                           jne 0x4000ac4	       237	ref-cache.c	FUNCTION_15	IF_3
0xa7a	      0xb8ffffffff	                     mov eax, 0xffffffff	       238	ref-cache.c	FUNCTION_15	IF_3
0xa7f	      0xe9a5000000	                           jmp 0x4000b69	       238	ref-cache.c	FUNCTION_15	IF_3
0xa84	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       239	ref-cache.c	FUNCTION_15
0xa88	        0x488b4018	            mov rax, qword [rax + 0x18] 	       239	ref-cache.c	FUNCTION_15
0xa8c	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       239	ref-cache.c	FUNCTION_15
0xa8f	          0x4863d2	                         movsxd rdx, edx	       239	ref-cache.c	FUNCTION_15
0xa92	        0x48c1e203	                              shl rdx, 3	       239	ref-cache.c	FUNCTION_15
0xa96	          0x4801d0	                            add rax, rdx	       239	ref-cache.c	FUNCTION_15
0xa99	          0x488b00	                    mov rax, qword [rax]	       239	ref-cache.c	FUNCTION_15
0xa9c	        0x488945f8	                mov qword [rbp - 8], rax	       239	ref-cache.c	FUNCTION_15
0xaa0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xaa4	            0x8b00	                    mov eax, dword [rax]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xaa6	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xaa9	          0x83e801	                              sub eax, 1	       241	ref-cache.c	FUNCTION_15	CALL_7
0xaac	            0x4898	                                    cdqe	       241	ref-cache.c	FUNCTION_15	CALL_7
0xaae	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xab2	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       241	ref-cache.c	FUNCTION_15	CALL_7
0xab6	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xab9	          0x4863c9	                         movsxd rcx, ecx	       241	ref-cache.c	FUNCTION_15	CALL_7
0xabc	        0x4883c101	                              add rcx, 1	       241	ref-cache.c	FUNCTION_15	CALL_7
0xac0	        0x48c1e103	                              shl rcx, 3	       241	ref-cache.c	FUNCTION_15	CALL_7
0xac4	        0x488d340a	                    lea rsi, [rdx + rcx]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xac8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xacc	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       241	ref-cache.c	FUNCTION_15	CALL_7
0xad0	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xad3	          0x4863c9	                         movsxd rcx, ecx	       241	ref-cache.c	FUNCTION_15	CALL_7
0xad6	        0x48c1e103	                              shl rcx, 3	       241	ref-cache.c	FUNCTION_15	CALL_7
0xada	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       241	ref-cache.c	FUNCTION_15	CALL_7
0xade	      0xb908000000	                              mov ecx, 8	       241	ref-cache.c	FUNCTION_15	CALL_7
0xae3	          0x4889c2	                            mov rdx, rax	       241	ref-cache.c	FUNCTION_15	CALL_7
0xae6	      0xe8abf5ffff	                     call sym.move_array	       241	ref-cache.c	FUNCTION_15	CALL_7
0xaeb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       243	ref-cache.c	FUNCTION_15
0xaef	            0x8b00	                    mov eax, dword [rax]	       243	ref-cache.c	FUNCTION_15
0xaf1	          0x8d50ff	                      lea edx, [rax - 1]	       243	ref-cache.c	FUNCTION_15
0xaf4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       243	ref-cache.c	FUNCTION_15
0xaf8	            0x8910	                    mov dword [rax], edx	       243	ref-cache.c	FUNCTION_15
0xafa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       244	ref-cache.c	FUNCTION_15	IF_4
0xafe	          0x8b4008	                mov eax, dword [rax + 8]	       244	ref-cache.c	FUNCTION_15	IF_4
0xb01	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       244	ref-cache.c	FUNCTION_15	IF_4
0xb04	            0x7e11	                           jle 0x4000b57	       244	ref-cache.c	FUNCTION_15	IF_4
0xb06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	ref-cache.c	FUNCTION_15	IF_4
0xb0a	          0x8b4008	                mov eax, dword [rax + 8]	       245	ref-cache.c	FUNCTION_15	IF_4
0xb0d	          0x8d50ff	                      lea edx, [rax - 1]	       245	ref-cache.c	FUNCTION_15	IF_4
0xb10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	ref-cache.c	FUNCTION_15	IF_4
0xb14	          0x895008	                mov dword [rax + 8], edx	       245	ref-cache.c	FUNCTION_15	IF_4
0xb17	        0x488b45f8	                mov rax, qword [rbp - 8]	       246	ref-cache.c	FUNCTION_15	CALL_8
0xb1b	          0x4889c7	                            mov rdi, rax	       246	ref-cache.c	FUNCTION_15	CALL_8
0xb1e	      0xe8aff9ffff	                 call sym.free_ref_entry	       246	ref-cache.c	FUNCTION_15	CALL_8
0xb23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	ref-cache.c	FUNCTION_15
0xb27	            0x8b00	                    mov eax, dword [rax]	       247	ref-cache.c	FUNCTION_15
0xb29	              0xc9	                                   leave	       248	ref-cache.c	FUNCTION_15
0xb2a	              0xc3	                                     ret	       248	ref-cache.c	FUNCTION_15
get_ref_dir	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:CALL,3:FOR,0:WHILE,0	53
0x320	              0x55	                                push rbp	        20	ref-cache.c	FUNCTION_2
0x321	          0x4889e5	                            mov rbp, rsp	        20	ref-cache.c	FUNCTION_2
0x324	        0x4883ec20	                           sub rsp, 0x20	        20	ref-cache.c	FUNCTION_2
0x328	        0x48897de8	             mov qword [rbp - 0x18], rdi	        20	ref-cache.c	FUNCTION_2
0x32c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        22	ref-cache.c	FUNCTION_2	CALL_1
0x330	           0xfb600	                   movzx eax, byte [rax]	        22	ref-cache.c	FUNCTION_2	CALL_1
0x333	           0xfb6c0	                           movzx eax, al	        22	ref-cache.c	FUNCTION_2	CALL_1
0x336	          0x83e010	                           and eax, 0x10	        22	ref-cache.c	FUNCTION_2	CALL_1
0x339	            0x85c0	                           test eax, eax	        22	ref-cache.c	FUNCTION_2	CALL_1
0x33b	            0x7519	                           jne 0x4000396	        22	ref-cache.c	FUNCTION_2	CALL_1
0x33d	      0xb900000000	                              mov ecx, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x342	      0xba16000000	                           mov edx, 0x16	        22	ref-cache.c	FUNCTION_2	CALL_1
0x347	      0xbe00000000	                              mov esi, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x34c	      0xbf00000000	                              mov edi, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x351	      0xe800000000	                          call 0x4000396	        22	ref-cache.c	FUNCTION_2	CALL_1
0x356	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        23	ref-cache.c	FUNCTION_2
0x35a	        0x4883c008	                              add rax, 8	        23	ref-cache.c	FUNCTION_2
0x35e	        0x488945f8	                mov qword [rbp - 8], rax	        23	ref-cache.c	FUNCTION_2
0x362	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        24	ref-cache.c	FUNCTION_2	IF_1
0x366	           0xfb600	                   movzx eax, byte [rax]	        24	ref-cache.c	FUNCTION_2	IF_1
0x369	           0xfb6c0	                           movzx eax, al	        24	ref-cache.c	FUNCTION_2	IF_1
0x36c	          0x83e020	                           and eax, 0x20	        24	ref-cache.c	FUNCTION_2	IF_1
0x36f	            0x85c0	                           test eax, eax	        24	ref-cache.c	FUNCTION_2	IF_1
0x371	            0x745e	                            je 0x4000411	        24	ref-cache.c	FUNCTION_2	IF_1
0x373	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x377	        0x488b4010	            mov rax, qword [rax + 0x10] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x37b	        0x488b4010	            mov rax, qword [rax + 0x10] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x37f	          0x4885c0	                           test rax, rax	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x382	            0x750f	                           jne 0x40003d3	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x384	      0xbf00000000	                              mov edi, 0	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x389	      0xb800000000	                              mov eax, 0	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x38e	      0xe800000000	                          call 0x40003d3	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x393	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x397	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x39b	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x39f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3a3	        0x488d7a28	                   lea rdi, [rdx + 0x28]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3ab	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3af	        0x488b4a08	                mov rcx, qword [rdx + 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3b3	        0x488b75f8	                mov rsi, qword [rbp - 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3b7	          0x4889fa	                            mov rdx, rdi	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3ba	          0x4889cf	                            mov rdi, rcx	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3bd	            0xffd0	                                call rax	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x3bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	ref-cache.c	FUNCTION_2	IF_1
0x3c3	           0xfb600	                   movzx eax, byte [rax]	        29	ref-cache.c	FUNCTION_2	IF_1
0x3c6	          0x83e0df	                     and eax, 0xffffffdf	        29	ref-cache.c	FUNCTION_2	IF_1
0x3c9	            0x89c2	                            mov edx, eax	        29	ref-cache.c	FUNCTION_2	IF_1
0x3cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	ref-cache.c	FUNCTION_2	IF_1
0x3cf	            0x8810	                      mov byte [rax], dl	        29	ref-cache.c	FUNCTION_2	IF_1
0x3d1	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	ref-cache.c	FUNCTION_2
0x3d5	              0xc9	                                   leave	        32	ref-cache.c	FUNCTION_2
0x3d6	              0xc3	                                     ret	        32	ref-cache.c	FUNCTION_2
add_ref_entry	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,2:FOR,0:WHILE,0	25
0xb2b	              0x55	                                push rbp	       251	ref-cache.c	FUNCTION_16
0xb2c	          0x4889e5	                            mov rbp, rsp	       251	ref-cache.c	FUNCTION_16
0xb2f	        0x4883ec10	                           sub rsp, 0x10	       251	ref-cache.c	FUNCTION_16
0xb33	        0x48897df8	                mov qword [rbp - 8], rdi	       251	ref-cache.c	FUNCTION_16
0xb37	        0x488975f0	             mov qword [rbp - 0x10], rsi	       251	ref-cache.c	FUNCTION_16
0xb3b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       252	ref-cache.c	FUNCTION_16	CALL_1
0xb3f	        0x488d4828	                   lea rcx, [rax + 0x28]	       252	ref-cache.c	FUNCTION_16	CALL_1
0xb43	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	ref-cache.c	FUNCTION_16	CALL_1
0xb47	      0xba01000000	                              mov edx, 1	       252	ref-cache.c	FUNCTION_16	CALL_1
0xb4c	          0x4889ce	                            mov rsi, rcx	       252	ref-cache.c	FUNCTION_16	CALL_1
0xb4f	          0x4889c7	                            mov rdi, rax	       252	ref-cache.c	FUNCTION_16	CALL_1
0xb52	      0xe80afdffff	            call sym.find_containing_dir	       252	ref-cache.c	FUNCTION_16	CALL_1
0xb57	        0x488945f8	                mov qword [rbp - 8], rax	       252	ref-cache.c	FUNCTION_16	CALL_1
0xb5b	      0x48837df800	                  cmp qword [rbp - 8], 0	       253	ref-cache.c	FUNCTION_16	IF_1
0xb60	            0x7507	                           jne 0x4000ba9	       253	ref-cache.c	FUNCTION_16	IF_1
0xb62	      0xb8ffffffff	                     mov eax, 0xffffffff	       254	ref-cache.c	FUNCTION_16	IF_1
0xb67	            0xeb18	                           jmp 0x4000bc1	       254	ref-cache.c	FUNCTION_16	IF_1
0xb69	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       255	ref-cache.c	FUNCTION_16	CALL_2
0xb6d	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	ref-cache.c	FUNCTION_16	CALL_2
0xb71	          0x4889d6	                            mov rsi, rdx	       255	ref-cache.c	FUNCTION_16	CALL_2
0xb74	          0x4889c7	                            mov rdi, rax	       255	ref-cache.c	FUNCTION_16	CALL_2
0xb77	      0xe800000000	                          call 0x4000bbc	       255	ref-cache.c	FUNCTION_16	CALL_2
0xb7c	      0xb800000000	                              mov eax, 0	       256	ref-cache.c	FUNCTION_16
0xb81	              0xc9	                                   leave	       257	ref-cache.c	FUNCTION_16
0xb82	              0xc3	                                     ret	       257	ref-cache.c	FUNCTION_16
cache_ref_iterator_begin	DO,0:functions,0:SWITCH,0:ELSE,1:IF,4:CALL,8:FOR,0:WHILE,0	115
0x1170	              0x55	                                push rbp	       517	ref-cache.c	FUNCTION_24
0x1171	          0x4889e5	                            mov rbp, rsp	       517	ref-cache.c	FUNCTION_24
0x1174	        0x4883ec40	                           sub rsp, 0x40	       517	ref-cache.c	FUNCTION_24
0x1178	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       517	ref-cache.c	FUNCTION_24
0x117c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       517	ref-cache.c	FUNCTION_24
0x1180	          0x8955cc	             mov dword [rbp - 0x34], edx	       517	ref-cache.c	FUNCTION_24
0x1183	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       523	ref-cache.c	FUNCTION_24	CALL_1
0x1187	          0x488b00	                    mov rax, qword [rax]	       523	ref-cache.c	FUNCTION_24	CALL_1
0x118a	          0x4889c7	                            mov rdi, rax	       523	ref-cache.c	FUNCTION_24	CALL_1
0x118d	      0xe800000000	                          call 0x40011d2	       523	ref-cache.c	FUNCTION_24	CALL_1
0x1192	        0x488945e0	             mov qword [rbp - 0x20], rax	       523	ref-cache.c	FUNCTION_24	CALL_1
0x1196	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       524	ref-cache.c	FUNCTION_24	IF_1
0x119b	            0x7427	                            je 0x4001204	       524	ref-cache.c	FUNCTION_24	IF_1
0x119d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       524	ref-cache.c	FUNCTION_24	IF_1
0x11a1	           0xfb600	                   movzx eax, byte [rax]	       524	ref-cache.c	FUNCTION_24	IF_1
0x11a4	            0x84c0	                             test al, al	       524	ref-cache.c	FUNCTION_24	IF_1
0x11a6	            0x741c	                            je 0x4001204	       524	ref-cache.c	FUNCTION_24	IF_1
0x11a8	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       525	ref-cache.c	FUNCTION_24	CALL_2
0x11ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       525	ref-cache.c	FUNCTION_24	CALL_2
0x11b0	      0xba00000000	                              mov edx, 0	       525	ref-cache.c	FUNCTION_24	CALL_2
0x11b5	          0x4889ce	                            mov rsi, rcx	       525	ref-cache.c	FUNCTION_24	CALL_2
0x11b8	          0x4889c7	                            mov rdi, rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x11bb	      0xe8a1f6ffff	            call sym.find_containing_dir	       525	ref-cache.c	FUNCTION_24	CALL_2
0x11c0	        0x488945e0	             mov qword [rbp - 0x20], rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x11c4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       526	ref-cache.c	FUNCTION_24	IF_2
0x11c9	            0x750a	                           jne 0x4001215	       526	ref-cache.c	FUNCTION_24	IF_2
0x11cb	      0xe800000000	                          call 0x4001210	       528	ref-cache.c	FUNCTION_24	CALL_3
0x11d0	      0xe951010000	                           jmp 0x4001366	       528	ref-cache.c	FUNCTION_24	CALL_3
0x11d5	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       530	ref-cache.c	FUNCTION_24	IF_3
0x11d9	            0x7413	                            je 0x400122e	       530	ref-cache.c	FUNCTION_24	IF_3
0x11db	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       531	ref-cache.c	FUNCTION_24	CALL_4
0x11df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       531	ref-cache.c	FUNCTION_24	CALL_4
0x11e3	          0x4889d6	                            mov rsi, rdx	       531	ref-cache.c	FUNCTION_24	CALL_4
0x11e6	          0x4889c7	                            mov rdi, rax	       531	ref-cache.c	FUNCTION_24	CALL_4
0x11e9	      0xe8bafbffff	                  call sym.prime_ref_dir	       531	ref-cache.c	FUNCTION_24	CALL_4
0x11ee	      0xbe48000000	                           mov esi, 0x48	       533	ref-cache.c	FUNCTION_24	CALL_5
0x11f3	      0xbf01000000	                              mov edi, 1	       533	ref-cache.c	FUNCTION_24	CALL_5
0x11f8	      0xe800000000	                          call 0x400123d	       533	ref-cache.c	FUNCTION_24	CALL_5
0x11fd	        0x488945e8	             mov qword [rbp - 0x18], rax	       533	ref-cache.c	FUNCTION_24	CALL_5
0x1201	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       534	ref-cache.c	FUNCTION_24
0x1205	        0x488945f0	             mov qword [rbp - 0x10], rax	       534	ref-cache.c	FUNCTION_24
0x1209	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       535	ref-cache.c	FUNCTION_24	CALL_6
0x120d	      0xba01000000	                              mov edx, 1	       535	ref-cache.c	FUNCTION_24	CALL_6
0x1212	      0xbe00000000	                              mov esi, 0	       535	ref-cache.c	FUNCTION_24	CALL_6
0x1217	          0x4889c7	                            mov rdi, rax	       535	ref-cache.c	FUNCTION_24	CALL_6
0x121a	      0xe800000000	                          call 0x400125f	       535	ref-cache.c	FUNCTION_24	CALL_6
0x121f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1223	        0x488b4030	            mov rax, qword [rax + 0x30] 	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1227	        0x4883f809	                              cmp rax, 9	       536	ref-cache.c	FUNCTION_24	CALL_7
0x122b	     0xf8782000000	                            ja 0x40012f3	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1231	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1235	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1239	          0x4889d0	                            mov rax, rdx	       536	ref-cache.c	FUNCTION_24	CALL_7
0x123c	          0x4801c0	                            add rax, rax	       536	ref-cache.c	FUNCTION_24	CALL_7
0x123f	          0x4801d0	                            add rax, rdx	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1242	        0x4883c030	                           add rax, 0x30	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1246	        0x4883f813	                           cmp rax, 0x13	       536	ref-cache.c	FUNCTION_24	CALL_7
0x124a	            0x770e	                            ja 0x400129a	       536	ref-cache.c	FUNCTION_24	CALL_7
0x124c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1250	    0x48c740300a00	             mov qword [rax + 0x30], 0xa	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1258	            0xeb23	                           jmp 0x40012bd	       536	ref-cache.c	FUNCTION_24	CALL_7
0x125a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24	CALL_7
0x125e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1262	          0x4889d0	                            mov rax, rdx	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1265	          0x4801c0	                            add rax, rax	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1268	          0x4801d0	                            add rax, rdx	       536	ref-cache.c	FUNCTION_24	CALL_7
0x126b	        0x4883c030	                           add rax, 0x30	       536	ref-cache.c	FUNCTION_24	CALL_7
0x126f	          0x48d1e8	                              shr rax, 1	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1272	          0x4889c2	                            mov rdx, rax	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1275	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1279	        0x48895030	             mov qword [rax + 0x30], rdx	       536	ref-cache.c	FUNCTION_24	CALL_7
0x127d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1281	        0x488b4030	            mov rax, qword [rax + 0x30] 	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1285	          0x4889c6	                            mov rsi, rax	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1288	      0xbf10000000	                           mov edi, 0x10	       536	ref-cache.c	FUNCTION_24	CALL_7
0x128d	      0xe8b2edffff	                        call sym.st_mult	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1292	          0x4889c2	                            mov rdx, rax	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1295	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24	CALL_7
0x1299	        0x488b4040	            mov rax, qword [rax + 0x40] 	       536	ref-cache.c	FUNCTION_24	CALL_7
0x129d	          0x4889d6	                            mov rsi, rdx	       536	ref-cache.c	FUNCTION_24	CALL_7
0x12a0	          0x4889c7	                            mov rdi, rax	       536	ref-cache.c	FUNCTION_24	CALL_7
0x12a3	      0xe800000000	                          call 0x40012e8	       536	ref-cache.c	FUNCTION_24	CALL_7
0x12a8	          0x4889c2	                            mov rdx, rax	       536	ref-cache.c	FUNCTION_24	CALL_7
0x12ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24	CALL_7
0x12af	        0x48895040	             mov qword [rax + 0x40], rdx	       536	ref-cache.c	FUNCTION_24	CALL_7
0x12b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       538	ref-cache.c	FUNCTION_24
0x12b7	    0x48c740280100	               mov qword [rax + 0x28], 1	       538	ref-cache.c	FUNCTION_24
0x12bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       539	ref-cache.c	FUNCTION_24
0x12c3	        0x488b4040	            mov rax, qword [rax + 0x40] 	       539	ref-cache.c	FUNCTION_24
0x12c7	        0x488945f8	                mov qword [rbp - 8], rax	       539	ref-cache.c	FUNCTION_24
0x12cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       540	ref-cache.c	FUNCTION_24
0x12cf	    0xc7400cffffff	      mov dword [rax + 0xc], 0xffffffff 	       540	ref-cache.c	FUNCTION_24
0x12d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	ref-cache.c	FUNCTION_24
0x12da	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       541	ref-cache.c	FUNCTION_24
0x12de	          0x488910	                    mov qword [rax], rdx	       541	ref-cache.c	FUNCTION_24
0x12e1	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       543	ref-cache.c	FUNCTION_24	IF_4
0x12e6	            0x742f	                            je 0x4001357	       543	ref-cache.c	FUNCTION_24	IF_4
0x12e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       543	ref-cache.c	FUNCTION_24	IF_4
0x12ec	           0xfb600	                   movzx eax, byte [rax]	       543	ref-cache.c	FUNCTION_24	IF_4
0x12ef	            0x84c0	                             test al, al	       543	ref-cache.c	FUNCTION_24	IF_4
0x12f1	            0x7424	                            je 0x4001357	       543	ref-cache.c	FUNCTION_24	IF_4
0x12f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_8
0x12f7	          0x4889c7	                            mov rdi, rax	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_8
0x12fa	      0xe800000000	                          call 0x400133f	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_8
0x12ff	          0x4889c2	                            mov rdx, rax	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_8
0x1302	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_8
0x1306	        0x48895038	             mov qword [rax + 0x38], rdx	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_8
0x130a	        0x488b45f8	                mov rax, qword [rbp - 8]	       545	ref-cache.c	FUNCTION_24	IF_4
0x130e	    0xc74008010000	                  mov dword [rax + 8], 1	       545	ref-cache.c	FUNCTION_24	IF_4
0x1315	            0xeb0b	                           jmp 0x4001362	       545	ref-cache.c	FUNCTION_24	IF_4
0x1317	        0x488b45f8	                mov rax, qword [rbp - 8]	       547	ref-cache.c	FUNCTION_24	ELSE_1
0x131b	    0xc74008000000	                  mov dword [rax + 8], 0	       547	ref-cache.c	FUNCTION_24	ELSE_1
0x1322	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       550	ref-cache.c	FUNCTION_24
0x1326	              0xc9	                                   leave	       551	ref-cache.c	FUNCTION_24
0x1327	              0xc3	                                     ret	       551	ref-cache.c	FUNCTION_24
ref_entry_cmp	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:CALL,1:FOR,0:WHILE,0	20
0x653	              0x55	                                push rbp	       101	ref-cache.c	FUNCTION_9
0x654	          0x4889e5	                            mov rbp, rsp	       101	ref-cache.c	FUNCTION_9
0x657	        0x4883ec20	                           sub rsp, 0x20	       101	ref-cache.c	FUNCTION_9
0x65b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       101	ref-cache.c	FUNCTION_9
0x65f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       101	ref-cache.c	FUNCTION_9
0x663	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	ref-cache.c	FUNCTION_9
0x667	          0x488b00	                    mov rax, qword [rax]	       102	ref-cache.c	FUNCTION_9
0x66a	        0x488945f0	             mov qword [rbp - 0x10], rax	       102	ref-cache.c	FUNCTION_9
0x66e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       103	ref-cache.c	FUNCTION_9
0x672	          0x488b00	                    mov rax, qword [rax]	       103	ref-cache.c	FUNCTION_9
0x675	        0x488945f8	                mov qword [rbp - 8], rax	       103	ref-cache.c	FUNCTION_9
0x679	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x67d	        0x488d5028	                   lea rdx, [rax + 0x28]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x681	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x685	        0x4883c028	                           add rax, 0x28	       104	ref-cache.c	FUNCTION_9	CALL_1
0x689	          0x4889d6	                            mov rsi, rdx	       104	ref-cache.c	FUNCTION_9	CALL_1
0x68c	          0x4889c7	                            mov rdi, rax	       104	ref-cache.c	FUNCTION_9	CALL_1
0x68f	      0xe800000000	                          call 0x40006d4	       104	ref-cache.c	FUNCTION_9	CALL_1
0x694	              0xc9	                                   leave	       105	ref-cache.c	FUNCTION_9
0x695	              0xc3	                                     ret	       105	ref-cache.c	FUNCTION_9
sort_ref_dir	DO,0:functions,0:SWITCH,0:ELSE,1:IF,2:CALL,3:FOR,1:WHILE,0	72
0xc52	              0x55	                                push rbp	       287	ref-cache.c	FUNCTION_18
0xc53	          0x4889e5	                            mov rbp, rsp	       287	ref-cache.c	FUNCTION_18
0xc56	        0x4883ec30	                           sub rsp, 0x30	       287	ref-cache.c	FUNCTION_18
0xc5a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       287	ref-cache.c	FUNCTION_18
0xc5e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       289	ref-cache.c	FUNCTION_18
0xc66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       295	ref-cache.c	FUNCTION_18	IF_1
0xc6a	          0x8b5008	                mov edx, dword [rax + 8]	       295	ref-cache.c	FUNCTION_18	IF_1
0xc6d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       295	ref-cache.c	FUNCTION_18	IF_1
0xc71	            0x8b00	                    mov eax, dword [rax]	       295	ref-cache.c	FUNCTION_18	IF_1
0xc73	            0x39c2	                            cmp edx, eax	       295	ref-cache.c	FUNCTION_18	IF_1
0xc75	     0xf84ca000000	                            je 0x4000d85	       295	ref-cache.c	FUNCTION_18	IF_1
0xc7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc7f	            0x8b00	                    mov eax, dword [rax]	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc81	          0x4863f0	                         movsxd rsi, eax	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc84	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc88	        0x488b4018	            mov rax, qword [rax + 0x18] 	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc8c	      0xb900000000	                              mov ecx, 0	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc91	      0xba08000000	                              mov edx, 8	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc96	          0x4889c7	                            mov rdi, rax	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc99	      0xe843f4ffff	                     call sym.sane_qsort	       298	ref-cache.c	FUNCTION_18	CALL_1
0xc9e	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0xca5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0xcac	            0xeb74	                           jmp 0x4000d62	       301	ref-cache.c	FUNCTION_18	FOR_1
0xcae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	ref-cache.c	FUNCTION_18	FOR_1
0xcb2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       302	ref-cache.c	FUNCTION_18	FOR_1
0xcb6	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       302	ref-cache.c	FUNCTION_18	FOR_1
0xcb9	          0x4863d2	                         movsxd rdx, edx	       302	ref-cache.c	FUNCTION_18	FOR_1
0xcbc	        0x48c1e203	                              shl rdx, 3	       302	ref-cache.c	FUNCTION_18	FOR_1
0xcc0	          0x4801d0	                            add rax, rdx	       302	ref-cache.c	FUNCTION_18	FOR_1
0xcc3	          0x488b00	                    mov rax, qword [rax]	       302	ref-cache.c	FUNCTION_18	FOR_1
0xcc6	        0x488945f8	                mov qword [rbp - 8], rax	       302	ref-cache.c	FUNCTION_18	FOR_1
0xcca	      0x48837df000	               cmp qword [rbp - 0x10], 0	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xccf	            0x7425	                            je 0x4000d36	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xcd1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xcd5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xcd9	          0x4889d6	                            mov rsi, rdx	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xcdc	          0x4889c7	                            mov rdi, rax	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xcdf	      0xe89ffeffff	                     call sym.is_dup_ref	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xce4	            0x85c0	                           test eax, eax	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xce6	            0x740e	                            je 0x4000d36	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xce8	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_3
0xcec	          0x4889c7	                            mov rdi, rax	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_3
0xcef	      0xe8def7ffff	                 call sym.free_ref_entry	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_3
0xcf4	            0xeb28	                           jmp 0x4000d5e	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_3
0xcf6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xcfa	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xcfe	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd01	          0x8d5001	                      lea edx, [rax + 1]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd04	          0x8955e8	             mov dword [rbp - 0x18], edx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd07	            0x4898	                                    cdqe	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd09	        0x48c1e003	                              shl rax, 3	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd0d	          0x4801c8	                            add rax, rcx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd10	        0x488b55f8	                mov rdx, qword [rbp - 8]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd14	          0x488910	                    mov qword [rax], rdx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd17	          0x488b00	                    mov rax, qword [rax]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd1a	        0x488945f0	             mov qword [rbp - 0x10], rax	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0xd1e	        0x8345ec01	               add dword [rbp - 0x14], 1	       301	ref-cache.c	FUNCTION_18	FOR_1
0xd22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       301	ref-cache.c	FUNCTION_18	FOR_1
0xd26	            0x8b00	                    mov eax, dword [rax]	       301	ref-cache.c	FUNCTION_18	FOR_1
0xd28	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       301	ref-cache.c	FUNCTION_18	FOR_1
0xd2b	            0x7f81	                            jg 0x4000cee	       301	ref-cache.c	FUNCTION_18	FOR_1
0xd2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0xd31	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0xd34	            0x8910	                    mov dword [rax], edx	       308	ref-cache.c	FUNCTION_18	ELSE_1
0xd36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0xd3a	            0x8b10	                    mov edx, dword [rax]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0xd3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0xd40	          0x895008	                mov dword [rax + 8], edx	       308	ref-cache.c	FUNCTION_18	ELSE_1
0xd43	            0xeb01	                           jmp 0x4000d86	       308	ref-cache.c	FUNCTION_18	ELSE_1
0xd45	              0x90	                                     nop	       296	ref-cache.c	FUNCTION_18	IF_1
0xd46	              0xc9	                                   leave	       309	ref-cache.c	FUNCTION_18	ELSE_1
0xd47	              0xc3	                                     ret	       309	ref-cache.c	FUNCTION_18	ELSE_1
sane_qsort	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,1:FOR,0:WHILE,0	18
0xe1	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_49
0xe2	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_49
0xe5	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_49
0xe9	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_49
0xed	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_49
0xf1	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_49
0xf5	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_49
0xf9	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_49	IF_1
0xfe	            0x7618	                           jbe 0x4000158	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x100	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_49	CALL_1
0x104	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_49	CALL_1
0x108	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_49	CALL_1
0x10c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_49	CALL_1
0x110	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_49	CALL_1
0x113	      0xe800000000	                          call 0x4000158	      1049	git-compat-util.h	FUNCTION_49	CALL_1
0x118	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_49
0x119	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_49
0x11a	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_49
create_ref_cache	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:CALL,2:FOR,0:WHILE,0	27
0x46c	              0x55	                                push rbp	        47	ref-cache.c	FUNCTION_4
0x46d	          0x4889e5	                            mov rbp, rsp	        47	ref-cache.c	FUNCTION_4
0x470	        0x4883ec20	                           sub rsp, 0x20	        47	ref-cache.c	FUNCTION_4
0x474	        0x48897de8	             mov qword [rbp - 0x18], rdi	        47	ref-cache.c	FUNCTION_4
0x478	        0x488975e0	             mov qword [rbp - 0x20], rsi	        47	ref-cache.c	FUNCTION_4
0x47c	      0xbe18000000	                           mov esi, 0x18	        48	ref-cache.c	FUNCTION_4	CALL_1
0x481	      0xbf01000000	                              mov edi, 1	        48	ref-cache.c	FUNCTION_4	CALL_1
0x486	      0xe800000000	                          call 0x40004cb	        48	ref-cache.c	FUNCTION_4	CALL_1
0x48b	        0x488945f8	                mov qword [rbp - 8], rax	        48	ref-cache.c	FUNCTION_4	CALL_1
0x48f	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	ref-cache.c	FUNCTION_4
0x493	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        50	ref-cache.c	FUNCTION_4
0x497	        0x48895008	                mov qword [rax + 8], rdx	        50	ref-cache.c	FUNCTION_4
0x49b	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	ref-cache.c	FUNCTION_4
0x49f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        51	ref-cache.c	FUNCTION_4
0x4a3	        0x48895010	             mov qword [rax + 0x10], rdx	        51	ref-cache.c	FUNCTION_4
0x4a7	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4ab	      0xb901000000	                              mov ecx, 1	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4b0	      0xba00000000	                              mov edx, 0	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4b5	      0xbe00000000	                              mov esi, 0	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4ba	          0x4889c7	                            mov rdi, rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4bd	      0xe800000000	                          call 0x4000502	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4c2	          0x4889c2	                            mov rdx, rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4c5	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4c9	          0x488910	                    mov qword [rax], rdx	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4cc	        0x488b45f8	                mov rax, qword [rbp - 8]	        53	ref-cache.c	FUNCTION_4
0x4d0	              0xc9	                                   leave	        54	ref-cache.c	FUNCTION_4
0x4d1	              0xc3	                                     ret	        54	ref-cache.c	FUNCTION_4
is_dup_ref	DO,0:functions,0:SWITCH,0:ELSE,0:IF,3:CALL,5:FOR,0:WHILE,0	58
0xb83	              0x55	                                push rbp	       265	ref-cache.c	FUNCTION_17
0xb84	          0x4889e5	                            mov rbp, rsp	       265	ref-cache.c	FUNCTION_17
0xb87	        0x4883ec10	                           sub rsp, 0x10	       265	ref-cache.c	FUNCTION_17
0xb8b	        0x48897df8	                mov qword [rbp - 8], rdi	       265	ref-cache.c	FUNCTION_17
0xb8f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       265	ref-cache.c	FUNCTION_17
0xb93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xb97	        0x488d5028	                   lea rdx, [rax + 0x28]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xb9b	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xb9f	        0x4883c028	                           add rax, 0x28	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xba3	          0x4889d6	                            mov rsi, rdx	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xba6	          0x4889c7	                            mov rdi, rax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xba9	      0xe800000000	                          call 0x4000bee	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xbae	            0x85c0	                           test eax, eax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xbb0	            0x740a	                            je 0x4000bfc	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0xbb2	      0xb800000000	                              mov eax, 0	       267	ref-cache.c	FUNCTION_17	IF_1
0xbb7	      0xe994000000	                           jmp 0x4000c90	       267	ref-cache.c	FUNCTION_17	IF_1
0xbbc	        0x488b45f8	                mov rax, qword [rbp - 8]	       271	ref-cache.c	FUNCTION_17	IF_2
0xbc0	           0xfb600	                   movzx eax, byte [rax]	       271	ref-cache.c	FUNCTION_17	IF_2
0xbc3	           0xfb6c0	                           movzx eax, al	       271	ref-cache.c	FUNCTION_17	IF_2
0xbc6	          0x83e010	                           and eax, 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0xbc9	            0x85c0	                           test eax, eax	       271	ref-cache.c	FUNCTION_17	IF_2
0xbcb	            0x7511	                           jne 0x4000c1e	       271	ref-cache.c	FUNCTION_17	IF_2
0xbcd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       271	ref-cache.c	FUNCTION_17	IF_2
0xbd1	           0xfb600	                   movzx eax, byte [rax]	       271	ref-cache.c	FUNCTION_17	IF_2
0xbd4	           0xfb6c0	                           movzx eax, al	       271	ref-cache.c	FUNCTION_17	IF_2
0xbd7	          0x83e010	                           and eax, 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0xbda	            0x85c0	                           test eax, eax	       271	ref-cache.c	FUNCTION_17	IF_2
0xbdc	            0x741a	                            je 0x4000c38	       271	ref-cache.c	FUNCTION_17	IF_2
0xbde	        0x488b45f8	                mov rax, qword [rbp - 8]	       273	ref-cache.c	FUNCTION_17	CALL_2
0xbe2	        0x4883c028	                           add rax, 0x28	       273	ref-cache.c	FUNCTION_17	CALL_2
0xbe6	          0x4889c6	                            mov rsi, rax	       273	ref-cache.c	FUNCTION_17	CALL_2
0xbe9	      0xbf00000000	                              mov edi, 0	       273	ref-cache.c	FUNCTION_17	CALL_2
0xbee	      0xb800000000	                              mov eax, 0	       273	ref-cache.c	FUNCTION_17	CALL_2
0xbf3	      0xe800000000	                          call 0x4000c38	       273	ref-cache.c	FUNCTION_17	CALL_2
0xbf8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xbfc	        0x488d5008	                      lea rdx, [rax + 8]	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xc00	        0x488b45f8	                mov rax, qword [rbp - 8]	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xc04	        0x4883c008	                              add rax, 8	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xc08	          0x4889d6	                            mov rsi, rdx	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xc0b	          0x4889c7	                            mov rdi, rax	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xc0e	      0xe832f5ffff	                         call sym.oidcmp	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xc13	            0x85c0	                           test eax, eax	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xc15	            0x741a	                            je 0x4000c71	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0xc17	        0x488b45f8	                mov rax, qword [rbp - 8]	       276	ref-cache.c	FUNCTION_17	CALL_4
0xc1b	        0x4883c028	                           add rax, 0x28	       276	ref-cache.c	FUNCTION_17	CALL_4
0xc1f	          0x4889c6	                            mov rsi, rax	       276	ref-cache.c	FUNCTION_17	CALL_4
0xc22	      0xbf00000000	                              mov edi, 0	       276	ref-cache.c	FUNCTION_17	CALL_4
0xc27	      0xb800000000	                              mov eax, 0	       276	ref-cache.c	FUNCTION_17	CALL_4
0xc2c	      0xe800000000	                          call 0x4000c71	       276	ref-cache.c	FUNCTION_17	CALL_4
0xc31	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	ref-cache.c	FUNCTION_17	CALL_5
0xc35	        0x4883c028	                           add rax, 0x28	       278	ref-cache.c	FUNCTION_17	CALL_5
0xc39	          0x4889c6	                            mov rsi, rax	       278	ref-cache.c	FUNCTION_17	CALL_5
0xc3c	      0xbf00000000	                              mov edi, 0	       278	ref-cache.c	FUNCTION_17	CALL_5
0xc41	      0xb800000000	                              mov eax, 0	       278	ref-cache.c	FUNCTION_17	CALL_5
0xc46	      0xe800000000	                          call 0x4000c8b	       278	ref-cache.c	FUNCTION_17	CALL_5
0xc4b	      0xb801000000	                              mov eax, 1	       279	ref-cache.c	FUNCTION_17
0xc50	              0xc9	                                   leave	       280	ref-cache.c	FUNCTION_17
0xc51	              0xc3	                                     ret	       280	ref-cache.c	FUNCTION_17
create_ref_entry	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:CALL,2:FOR,0:WHILE,0	41
0x3d7	              0x55	                                push rbp	        36	ref-cache.c	FUNCTION_3
0x3d8	          0x4889e5	                            mov rbp, rsp	        36	ref-cache.c	FUNCTION_3
0x3db	        0x4883ec30	                           sub rsp, 0x30	        36	ref-cache.c	FUNCTION_3
0x3df	        0x48897de8	             mov qword [rbp - 0x18], rdi	        36	ref-cache.c	FUNCTION_3
0x3e3	        0x488975e0	             mov qword [rbp - 0x20], rsi	        36	ref-cache.c	FUNCTION_3
0x3e7	          0x8955dc	             mov dword [rbp - 0x24], edx	        36	ref-cache.c	FUNCTION_3
0x3ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	ref-cache.c	FUNCTION_3	CALL_1
0x3ee	          0x4889c7	                            mov rdi, rax	        39	ref-cache.c	FUNCTION_3	CALL_1
0x3f1	      0xe800000000	                          call 0x4000436	        39	ref-cache.c	FUNCTION_3	CALL_1
0x3f6	        0x488945f0	             mov qword [rbp - 0x10], rax	        39	ref-cache.c	FUNCTION_3	CALL_1
0x3fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	ref-cache.c	FUNCTION_3	CALL_1
0x3fe	          0x4889c6	                            mov rsi, rax	        39	ref-cache.c	FUNCTION_3	CALL_1
0x401	      0xbf28000000	                           mov edi, 0x28	        39	ref-cache.c	FUNCTION_3	CALL_1
0x406	      0xe8f5fbffff	                         call sym.st_add	        39	ref-cache.c	FUNCTION_3	CALL_1
0x40b	      0xbe01000000	                              mov esi, 1	        39	ref-cache.c	FUNCTION_3	CALL_1
0x410	          0x4889c7	                            mov rdi, rax	        39	ref-cache.c	FUNCTION_3	CALL_1
0x413	      0xe8e8fbffff	                         call sym.st_add	        39	ref-cache.c	FUNCTION_3	CALL_1
0x418	          0x4889c6	                            mov rsi, rax	        39	ref-cache.c	FUNCTION_3	CALL_1
0x41b	      0xbf01000000	                              mov edi, 1	        39	ref-cache.c	FUNCTION_3	CALL_1
0x420	      0xe800000000	                          call 0x4000465	        39	ref-cache.c	FUNCTION_3	CALL_1
0x425	        0x488945f8	                mov qword [rbp - 8], rax	        39	ref-cache.c	FUNCTION_3	CALL_1
0x429	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	ref-cache.c	FUNCTION_3	CALL_1
0x42d	        0x488d4828	                   lea rcx, [rax + 0x28]	        39	ref-cache.c	FUNCTION_3	CALL_1
0x431	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        39	ref-cache.c	FUNCTION_3	CALL_1
0x435	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	ref-cache.c	FUNCTION_3	CALL_1
0x439	          0x4889c6	                            mov rsi, rax	        39	ref-cache.c	FUNCTION_3	CALL_1
0x43c	          0x4889cf	                            mov rdi, rcx	        39	ref-cache.c	FUNCTION_3	CALL_1
0x43f	      0xe800000000	                          call 0x4000484	        39	ref-cache.c	FUNCTION_3	CALL_1
0x444	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	ref-cache.c	FUNCTION_3	CALL_2
0x448	        0x488d5008	                      lea rdx, [rax + 8]	        40	ref-cache.c	FUNCTION_3	CALL_2
0x44c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        40	ref-cache.c	FUNCTION_3	CALL_2
0x450	          0x4889c6	                            mov rsi, rax	        40	ref-cache.c	FUNCTION_3	CALL_2
0x453	          0x4889d7	                            mov rdi, rdx	        40	ref-cache.c	FUNCTION_3	CALL_2
0x456	      0xe83afdffff	                         call sym.oidcpy	        40	ref-cache.c	FUNCTION_3	CALL_2
0x45b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        41	ref-cache.c	FUNCTION_3
0x45e	            0x89c2	                            mov edx, eax	        41	ref-cache.c	FUNCTION_3
0x460	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	ref-cache.c	FUNCTION_3
0x464	            0x8810	                      mov byte [rax], dl	        41	ref-cache.c	FUNCTION_3
0x466	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	ref-cache.c	FUNCTION_3
0x46a	              0xc9	                                   leave	        43	ref-cache.c	FUNCTION_3
0x46b	              0xc3	                                     ret	        43	ref-cache.c	FUNCTION_3
free_ref_cache	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:CALL,2:FOR,0:WHILE,0	14
0x50e	              0x55	                                push rbp	        71	ref-cache.c	FUNCTION_6
0x50f	          0x4889e5	                            mov rbp, rsp	        71	ref-cache.c	FUNCTION_6
0x512	        0x4883ec10	                           sub rsp, 0x10	        71	ref-cache.c	FUNCTION_6
0x516	        0x48897df8	                mov qword [rbp - 8], rdi	        71	ref-cache.c	FUNCTION_6
0x51a	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	ref-cache.c	FUNCTION_6	CALL_1
0x51e	          0x488b00	                    mov rax, qword [rax]	        72	ref-cache.c	FUNCTION_6	CALL_1
0x521	          0x4889c7	                            mov rdi, rax	        72	ref-cache.c	FUNCTION_6	CALL_1
0x524	      0xe8a9ffffff	                 call sym.free_ref_entry	        72	ref-cache.c	FUNCTION_6	CALL_1
0x529	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	ref-cache.c	FUNCTION_6	CALL_2
0x52d	          0x4889c7	                            mov rdi, rax	        73	ref-cache.c	FUNCTION_6	CALL_2
0x530	      0xe800000000	                          call 0x4000575	        73	ref-cache.c	FUNCTION_6	CALL_2
0x535	              0x90	                                     nop	        74	ref-cache.c	FUNCTION_6
0x536	              0xc9	                                   leave	        74	ref-cache.c	FUNCTION_6
0x537	              0xc3	                                     ret	        74	ref-cache.c	FUNCTION_6
prime_ref_dir	DO,0:functions,0:SWITCH,1:ELSE,2:IF,2:CALL,7:FOR,1:WHILE,0	66
0xda8	              0x55	                                push rbp	       347	ref-cache.c	ELSE_2	FUNCTION_20
0xda9	          0x4889e5	                            mov rbp, rsp	       347	ref-cache.c	ELSE_2	FUNCTION_20
0xdac	        0x4883ec20	                           sub rsp, 0x20	       347	ref-cache.c	ELSE_2	FUNCTION_20
0xdb0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       347	ref-cache.c	ELSE_2	FUNCTION_20
0xdb4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       347	ref-cache.c	ELSE_2	FUNCTION_20
0xdb8	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xdbf	      0xe9b7000000	                           jmp 0x4000ebb	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xdc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xdc8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xdcc	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xdcf	          0x4863d2	                         movsxd rdx, edx	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xdd2	        0x48c1e203	                              shl rdx, 3	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xdd6	          0x4801d0	                            add rax, rdx	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xdd9	          0x488b00	                    mov rax, qword [rax]	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xddc	        0x488945f8	                mov qword [rbp - 8], rax	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xde0	        0x488b45f8	                mov rax, qword [rbp - 8]	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0xde4	           0xfb600	                   movzx eax, byte [rax]	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0xde7	           0xfb6c0	                           movzx eax, al	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0xdea	          0x83e010	                           and eax, 0x10	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0xded	            0x85c0	                           test eax, eax	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0xdef	     0xf8482000000	                            je 0x4000eb7	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0xdf5	      0x48837de000	               cmp qword [rbp - 0x20], 0	       359	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2
0xdfa	            0x751b	                           jne 0x4000e57	       359	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2
0xdfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0xe00	          0x4889c7	                            mov rdi, rax	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0xe03	      0xe800000000	                          call 0x4000e48	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0xe08	      0xbe00000000	                              mov esi, 0	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0xe0d	          0x4889c7	                            mov rdi, rax	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0xe10	      0xe893ffffff	                  call sym.prime_ref_dir	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0xe15	            0xeb60	                           jmp 0x4000eb7	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0xe17	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe1b	        0x488d5028	                   lea rdx, [rax + 0x28]	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe23	          0x4889c6	                            mov rsi, rax	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe26	          0x4889d7	                            mov rdi, rdx	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe29	      0xe81affffff	                call sym.overlaps_prefix	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe2e	          0x83f801	                              cmp eax, 1	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe31	            0x7425	                            je 0x4000e98	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe33	          0x83f801	                              cmp eax, 1	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe36	            0x7205	                            jb 0x4000e7d	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe38	          0x83f802	                              cmp eax, 2	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0xe3b	            0xeb3a	                           jmp 0x4000eb7	       377	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1
0xe3d	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0xe41	          0x4889c7	                            mov rdi, rax	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0xe44	      0xe800000000	                          call 0x4000e89	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0xe49	      0xbe00000000	                              mov esi, 0	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0xe4e	          0x4889c7	                            mov rdi, rax	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0xe51	      0xe852ffffff	                  call sym.prime_ref_dir	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0xe56	            0xeb1f	                           jmp 0x4000eb7	       371	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1
0xe58	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0xe5c	          0x4889c7	                            mov rdi, rax	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0xe5f	      0xe800000000	                          call 0x4000ea4	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0xe64	          0x4889c2	                            mov rdx, rax	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0xe67	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0xe6b	          0x4889c6	                            mov rsi, rax	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0xe6e	          0x4889d7	                            mov rdi, rdx	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0xe71	      0xe832ffffff	                  call sym.prime_ref_dir	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0xe76	              0x90	                                     nop	       374	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1
0xe77	        0x8345f401	                add dword [rbp - 0xc], 1	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xe7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xe7f	            0x8b00	                    mov eax, dword [rax]	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xe81	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xe84	     0xf8f3affffff	                            jg 0x4000e04	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0xe8a	              0x90	                                     nop	       381	ref-cache.c	FUNCTION_20	ELSE_2
0xe8b	              0xc9	                                   leave	       381	ref-cache.c	FUNCTION_20	ELSE_2
0xe8c	              0xc3	                                     ret	       381	ref-cache.c	FUNCTION_20	ELSE_2
move_array	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,2:FOR,0:WHILE,0	23
0x96	              0x55	                                push rbp	       860	git-compat-util.h	FUNCTION_42
0x97	          0x4889e5	                            mov rbp, rsp	       860	git-compat-util.h	FUNCTION_42
0x9a	        0x4883ec20	                           sub rsp, 0x20	       860	git-compat-util.h	FUNCTION_42
0x9e	        0x48897df8	                mov qword [rbp - 8], rdi	       860	git-compat-util.h	FUNCTION_42
0xa2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       860	git-compat-util.h	FUNCTION_42
0xa6	        0x488955e8	             mov qword [rbp - 0x18], rdx	       860	git-compat-util.h	FUNCTION_42
0xaa	        0x48894de0	             mov qword [rbp - 0x20], rcx	       860	git-compat-util.h	FUNCTION_42
0xae	      0x48837de800	               cmp qword [rbp - 0x18], 0	       861	git-compat-util.h	FUNCTION_42	IF_1
0xb3	            0x7429	                            je 0x400011e	       861	git-compat-util.h	FUNCTION_42	IF_1
0xb5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xb9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xbd	          0x4889d6	                            mov rsi, rdx	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xc0	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xc3	      0xe87cffffff	                        call sym.st_mult	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xc8	          0x4889c2	                            mov rdx, rax	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xcb	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xcf	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xd3	          0x4889ce	                            mov rsi, rcx	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xd6	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xd9	      0xe800000000	                          call 0x400011e	       862	git-compat-util.h	FUNCTION_42	CALL_2
0xde	              0x90	                                     nop	       863	git-compat-util.h	FUNCTION_42
0xdf	              0xc9	                                   leave	       863	git-compat-util.h	FUNCTION_42
0xe0	              0xc3	                                     ret	       863	git-compat-util.h	FUNCTION_42
clear_ref_dir	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:CALL,2:FOR,1:WHILE,0	39
0x538	              0x55	                                push rbp	        80	ref-cache.c	FUNCTION_7
0x539	          0x4889e5	                            mov rbp, rsp	        80	ref-cache.c	FUNCTION_7
0x53c	        0x4883ec20	                           sub rsp, 0x20	        80	ref-cache.c	FUNCTION_7
0x540	        0x48897de8	             mov qword [rbp - 0x18], rdi	        80	ref-cache.c	FUNCTION_7
0x544	    0xc745fc000000	                  mov dword [rbp - 4], 0	        82	ref-cache.c	FUNCTION_7	FOR_1
0x54b	            0xeb24	                           jmp 0x40005b1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x54d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x551	        0x488b4018	            mov rax, qword [rax + 0x18] 	        83	ref-cache.c	FUNCTION_7	CALL_1
0x555	          0x8b55fc	                mov edx, dword [rbp - 4]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x558	          0x4863d2	                         movsxd rdx, edx	        83	ref-cache.c	FUNCTION_7	CALL_1
0x55b	        0x48c1e203	                              shl rdx, 3	        83	ref-cache.c	FUNCTION_7	CALL_1
0x55f	          0x4801d0	                            add rax, rdx	        83	ref-cache.c	FUNCTION_7	CALL_1
0x562	          0x488b00	                    mov rax, qword [rax]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x565	          0x4889c7	                            mov rdi, rax	        83	ref-cache.c	FUNCTION_7	CALL_1
0x568	      0xe865ffffff	                 call sym.free_ref_entry	        83	ref-cache.c	FUNCTION_7	CALL_1
0x56d	        0x8345fc01	                  add dword [rbp - 4], 1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x571	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x575	            0x8b00	                    mov eax, dword [rax]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x577	          0x3b45fc	                cmp eax, dword [rbp - 4]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x57a	            0x7fd1	                            jg 0x400058d	        82	ref-cache.c	FUNCTION_7	FOR_1
0x57c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	ref-cache.c	FUNCTION_7	CALL_2
0x580	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	ref-cache.c	FUNCTION_7	CALL_2
0x584	          0x4889c7	                            mov rdi, rax	        84	ref-cache.c	FUNCTION_7	CALL_2
0x587	      0xe800000000	                          call 0x40005cc	        84	ref-cache.c	FUNCTION_7	CALL_2
0x58c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	ref-cache.c	FUNCTION_7	CALL_2
0x590	    0x48c740180000	               mov qword [rax + 0x18], 0	        84	ref-cache.c	FUNCTION_7	CALL_2
0x598	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x59c	    0xc74004000000	                  mov dword [rax + 4], 0	        85	ref-cache.c	FUNCTION_7
0x5a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x5a7	          0x8b5004	                mov edx, dword [rax + 4]	        85	ref-cache.c	FUNCTION_7
0x5aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x5ae	            0x8910	                    mov dword [rax], edx	        85	ref-cache.c	FUNCTION_7
0x5b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x5b4	            0x8b10	                    mov edx, dword [rax]	        85	ref-cache.c	FUNCTION_7
0x5b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x5ba	          0x895008	                mov dword [rax + 8], edx	        85	ref-cache.c	FUNCTION_7
0x5bd	              0x90	                                     nop	        86	ref-cache.c	FUNCTION_7
0x5be	              0xc9	                                   leave	        86	ref-cache.c	FUNCTION_7
0x5bf	              0xc3	                                     ret	        86	ref-cache.c	FUNCTION_7
st_add	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,2:FOR,0:WHILE,0	20
0x0	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_38
0x1	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_38
0x4	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_38
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_38
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_38
0x10	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x14	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x17	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x1b	            0x731a	                           jae 0x4000077	       785	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x1d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_2
0x21	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_2
0x25	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_2
0x28	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_2
0x2d	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_2
0x32	      0xe800000000	                          call 0x4000077	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_2
0x37	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_38
0x3b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_38
0x3f	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_38
0x42	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_38
0x43	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_38
cache_ref_iterator_abort	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:CALL,3:FOR,0:WHILE,0	20
0x1129	              0x55	                                push rbp	       498	ref-cache.c	FUNCTION_23
0x112a	          0x4889e5	                            mov rbp, rsp	       498	ref-cache.c	FUNCTION_23
0x112d	        0x4883ec20	                           sub rsp, 0x20	       498	ref-cache.c	FUNCTION_23
0x1131	        0x48897de8	             mov qword [rbp - 0x18], rdi	       498	ref-cache.c	FUNCTION_23
0x1135	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	ref-cache.c	FUNCTION_23
0x1139	        0x488945f8	                mov qword [rbp - 8], rax	       499	ref-cache.c	FUNCTION_23
0x113d	        0x488b45f8	                mov rax, qword [rbp - 8]	       502	ref-cache.c	FUNCTION_23	CALL_1
0x1141	        0x488b4038	            mov rax, qword [rax + 0x38] 	       502	ref-cache.c	FUNCTION_23	CALL_1
0x1145	          0x4889c7	                            mov rdi, rax	       502	ref-cache.c	FUNCTION_23	CALL_1
0x1148	      0xe800000000	                          call 0x400118d	       502	ref-cache.c	FUNCTION_23	CALL_1
0x114d	        0x488b45f8	                mov rax, qword [rbp - 8]	       503	ref-cache.c	FUNCTION_23	CALL_2
0x1151	        0x488b4040	            mov rax, qword [rax + 0x40] 	       503	ref-cache.c	FUNCTION_23	CALL_2
0x1155	          0x4889c7	                            mov rdi, rax	       503	ref-cache.c	FUNCTION_23	CALL_2
0x1158	      0xe800000000	                          call 0x400119d	       503	ref-cache.c	FUNCTION_23	CALL_2
0x115d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	ref-cache.c	FUNCTION_23	CALL_3
0x1161	          0x4889c7	                            mov rdi, rax	       504	ref-cache.c	FUNCTION_23	CALL_3
0x1164	      0xe800000000	                          call 0x40011a9	       504	ref-cache.c	FUNCTION_23	CALL_3
0x1169	      0xb8ffffffff	                     mov eax, 0xffffffff	       505	ref-cache.c	FUNCTION_23
0x116e	              0xc9	                                   leave	       506	ref-cache.c	FUNCTION_23
0x116f	              0xc3	                                     ret	       506	ref-cache.c	FUNCTION_23
cache_ref_iterator_advance	DO,0:functions,0:SWITCH,0:ELSE,2:IF,6:CALL,5:FOR,0:WHILE,1	173
0xe8d	              0x55	                                push rbp	       441	ref-cache.c	FUNCTION_21
0xe8e	          0x4889e5	                            mov rbp, rsp	       441	ref-cache.c	FUNCTION_21
0xe91	        0x4883ec40	                           sub rsp, 0x40	       441	ref-cache.c	FUNCTION_21
0xe95	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       441	ref-cache.c	FUNCTION_21
0xe99	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       442	ref-cache.c	FUNCTION_21
0xe9d	        0x488945e0	             mov qword [rbp - 0x20], rax	       442	ref-cache.c	FUNCTION_21
0xea1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       447	ref-cache.c	FUNCTION_21	WHILE_1
0xea5	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       447	ref-cache.c	FUNCTION_21	WHILE_1
0xea9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       447	ref-cache.c	FUNCTION_21	WHILE_1
0xead	        0x488b4028	            mov rax, qword [rax + 0x28] 	       447	ref-cache.c	FUNCTION_21	WHILE_1
0xeb1	        0x48c1e004	                              shl rax, 4	       447	ref-cache.c	FUNCTION_21	WHILE_1
0xeb5	        0x4883e810	                           sub rax, 0x10	       447	ref-cache.c	FUNCTION_21	WHILE_1
0xeb9	          0x4801d0	                            add rax, rdx	       446	ref-cache.c	FUNCTION_21	WHILE_1
0xebc	        0x488945e8	             mov qword [rbp - 0x18], rax	       446	ref-cache.c	FUNCTION_21	WHILE_1
0xec0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	ref-cache.c	FUNCTION_21	WHILE_1
0xec4	          0x488b00	                    mov rax, qword [rax]	       448	ref-cache.c	FUNCTION_21	WHILE_1
0xec7	        0x488945f0	             mov qword [rbp - 0x10], rax	       448	ref-cache.c	FUNCTION_21	WHILE_1
0xecb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0xecf	          0x8b400c	              mov eax, dword [rax + 0xc]	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0xed2	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0xed5	            0x750c	                           jne 0x4000f23	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0xed7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0xedb	          0x4889c7	                            mov rdi, rax	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0xede	      0xe86ffdffff	                   call sym.sort_ref_dir	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0xee3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xee7	          0x8b400c	              mov eax, dword [rax + 0xc]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xeea	          0x8d5001	                      lea edx, [rax + 1]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xeed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xef1	          0x89500c	              mov dword [rax + 0xc], edx	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xef4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xef8	          0x8b500c	              mov edx, dword [rax + 0xc]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xefb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xeff	          0x488b00	                    mov rax, qword [rax]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xf02	            0x8b00	                    mov eax, dword [rax]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xf04	            0x39c2	                            cmp edx, eax	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xf06	            0x7536	                           jne 0x4000f7e	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0xf08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf0c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf10	        0x488d50ff	                      lea rdx, [rax - 1]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf14	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf18	        0x48895028	             mov qword [rax + 0x28], rdx	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf1c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf20	        0x488b4028	            mov rax, qword [rax + 0x28] 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf24	          0x4885c0	                           test rax, rax	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf27	     0xf85cb010000	                           jne 0x4001138	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0xf2d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0xf31	          0x4889c7	                            mov rdi, rax	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0xf34	      0xe800000000	                          call 0x4000f79	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0xf39	      0xe9c0010000	                           jmp 0x400113e	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0xf3e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf42	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf4a	          0x8b400c	              mov eax, dword [rax + 0xc]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf4d	            0x4898	                                    cdqe	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf4f	        0x48c1e003	                              shl rax, 3	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf53	          0x4801d0	                            add rax, rdx	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf56	          0x488b00	                    mov rax, qword [rax]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf59	        0x488945f8	                mov qword [rbp - 8], rax	       463	ref-cache.c	FUNCTION_21	WHILE_1
0xf5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0xf61	          0x8b4008	                mov eax, dword [rax + 8]	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0xf64	          0x83f801	                              cmp eax, 1	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0xf67	            0x7529	                           jne 0x4000fd2	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0xf69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0xf6d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0xf71	        0x488b55f8	                mov rdx, qword [rbp - 8]	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0xf75	        0x4883c228	                           add rdx, 0x28	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0xf79	          0x4889c6	                            mov rsi, rax	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0xf7c	          0x4889d7	                            mov rdi, rdx	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0xf7f	      0xe8c4fdffff	                call sym.overlaps_prefix	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0xf84	          0x8945dc	             mov dword [rbp - 0x24], eax	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0xf87	        0x837ddc02	               cmp dword [rbp - 0x24], 2	       467	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	IF_5
0xf8b	            0x750f	                           jne 0x4000fdc	       467	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	IF_5
0xf8d	      0xe967010000	                           jmp 0x4001139	       468	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	IF_5
0xf92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_1
0xf96	          0x8b4008	                mov eax, dword [rax + 8]	       470	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_1
0xf99	          0x8945dc	             mov dword [rbp - 0x24], eax	       470	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_1
0xf9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0xfa0	           0xfb600	                   movzx eax, byte [rax]	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0xfa3	           0xfb6c0	                           movzx eax, al	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0xfa6	          0x83e010	                           and eax, 0x10	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0xfa9	            0x85c0	                           test eax, eax	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0xfab	     0xf840f010000	                            je 0x4001100	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0xfb1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfb5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfb9	        0x488d5001	                      lea rdx, [rax + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfbd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfc1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfc5	          0x4839c2	                            cmp rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfc8	     0xf869b000000	                           jbe 0x40010a9	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfd2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfd6	          0x4889d0	                            mov rax, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfd9	          0x4801c0	                            add rax, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfdc	          0x4801d0	                            add rax, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfdf	        0x4883c030	                           add rax, 0x30	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfe3	          0x48d1e8	                              shr rax, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfe6	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfe9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xfed	        0x488b4028	            mov rax, qword [rax + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xff1	        0x4883c001	                              add rax, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xff5	          0x4839c2	                            cmp rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xff8	            0x7316	                           jae 0x4001050	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xffa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0xffe	        0x488b4028	            mov rax, qword [rax + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1002	        0x488d5001	                      lea rdx, [rax + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1006	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x100a	        0x48895030	             mov qword [rax + 0x30], rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x100e	            0xeb23	                           jmp 0x4001073	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1010	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1014	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1018	          0x4889d0	                            mov rax, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x101b	          0x4801c0	                            add rax, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x101e	          0x4801d0	                            add rax, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1021	        0x4883c030	                           add rax, 0x30	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1025	          0x48d1e8	                              shr rax, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1028	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x102b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x102f	        0x48895030	             mov qword [rax + 0x30], rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1033	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1037	        0x488b4030	            mov rax, qword [rax + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x103b	          0x4889c6	                            mov rsi, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x103e	      0xbf10000000	                           mov edi, 0x10	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1043	      0xe8fcefffff	                        call sym.st_mult	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1048	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x104b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x104f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1053	          0x4889d6	                            mov rsi, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1056	          0x4889c7	                            mov rdi, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1059	      0xe800000000	                          call 0x400109e	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x105e	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1061	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1065	        0x48895040	             mov qword [rax + 0x40], rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x1069	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x106d	        0x488b7040	            mov rsi, qword [rax + 0x40] 	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x1071	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x1075	        0x488b4028	            mov rax, qword [rax + 0x28] 	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x1079	        0x488d4801	                      lea rcx, [rax + 1]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x107d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x1081	        0x48894a28	             mov qword [rdx + 0x28], rcx	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x1085	        0x48c1e004	                              shl rax, 4	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x1089	          0x4801f0	                            add rax, rsi	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x108c	        0x488945e8	             mov qword [rbp - 0x18], rax	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x1090	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_5
0x1094	          0x4889c7	                            mov rdi, rax	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_5
0x1097	      0xe800000000	                          call 0x40010dc	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_5
0x109c	          0x4889c2	                            mov rdx, rax	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_5
0x109f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_5
0x10a3	          0x488910	                    mov qword [rax], rdx	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_5
0x10a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x10aa	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x10ad	          0x895008	                mov dword [rax + 8], edx	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x10b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x10b4	    0xc7400cffffff	      mov dword [rax + 0xc], 0xffffffff 	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x10bb	      0xe9e1fdffff	                           jmp 0x4000ee1	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x10c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10c4	        0x488d5028	                   lea rdx, [rax + 0x28]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10c8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10cc	        0x48895010	             mov qword [rax + 0x10], rdx	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10d4	        0x488d5008	                      lea rdx, [rax + 8]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10dc	        0x48895018	             mov qword [rax + 0x18], rdx	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10e4	           0xfb600	                   movzx eax, byte [rax]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10e7	           0xfb6d0	                           movzx edx, al	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10ee	          0x895020	             mov dword [rax + 0x20], edx	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10f1	      0xb800000000	                              mov eax, 0	       486	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10f6	            0xeb06	                           jmp 0x400113e	       486	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x10f8	              0x90	                                     nop	       460	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x10f9	      0xe9a3fdffff	                           jmp 0x4000ee1	       488	ref-cache.c	FUNCTION_21	WHILE_1
0x10fe	              0xc9	                                   leave	       489	ref-cache.c	FUNCTION_21
0x10ff	              0xc3	                                     ret	       489	ref-cache.c	FUNCTION_21
find_ref_entry	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:CALL,3:FOR,0:WHILE,0	50
0x8fb	              0x55	                                push rbp	       202	ref-cache.c	FUNCTION_14
0x8fc	          0x4889e5	                            mov rbp, rsp	       202	ref-cache.c	FUNCTION_14
0x8ff	        0x4883ec20	                           sub rsp, 0x20	       202	ref-cache.c	FUNCTION_14
0x903	        0x48897de8	             mov qword [rbp - 0x18], rdi	       202	ref-cache.c	FUNCTION_14
0x907	        0x488975e0	             mov qword [rbp - 0x20], rsi	       202	ref-cache.c	FUNCTION_14
0x90b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       205	ref-cache.c	FUNCTION_14	CALL_1
0x90f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	ref-cache.c	FUNCTION_14	CALL_1
0x913	      0xba00000000	                              mov edx, 0	       205	ref-cache.c	FUNCTION_14	CALL_1
0x918	          0x4889ce	                            mov rsi, rcx	       205	ref-cache.c	FUNCTION_14	CALL_1
0x91b	          0x4889c7	                            mov rdi, rax	       205	ref-cache.c	FUNCTION_14	CALL_1
0x91e	      0xe83effffff	            call sym.find_containing_dir	       205	ref-cache.c	FUNCTION_14	CALL_1
0x923	        0x488945e8	             mov qword [rbp - 0x18], rax	       205	ref-cache.c	FUNCTION_14	CALL_1
0x927	      0x48837de800	               cmp qword [rbp - 0x18], 0	       206	ref-cache.c	FUNCTION_14	IF_1
0x92c	            0x7507	                           jne 0x4000975	       206	ref-cache.c	FUNCTION_14	IF_1
0x92e	      0xb800000000	                              mov eax, 0	       207	ref-cache.c	FUNCTION_14	IF_1
0x933	            0xeb6b	                           jmp 0x40009e0	       207	ref-cache.c	FUNCTION_14	IF_1
0x935	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x939	          0x4889c7	                            mov rdi, rax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x93c	      0xe800000000	                          call 0x4000981	       208	ref-cache.c	FUNCTION_14	CALL_3
0x941	          0x4889c2	                            mov rdx, rax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x944	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x948	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x94c	          0x4889ce	                            mov rsi, rcx	       208	ref-cache.c	FUNCTION_14	CALL_3
0x94f	          0x4889c7	                            mov rdi, rax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x952	      0xe800000000	                          call 0x4000997	       208	ref-cache.c	FUNCTION_14	CALL_3
0x957	          0x8945f4	              mov dword [rbp - 0xc], eax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x95a	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       209	ref-cache.c	FUNCTION_14	IF_2
0x95e	            0x7507	                           jne 0x40009a7	       209	ref-cache.c	FUNCTION_14	IF_2
0x960	      0xb800000000	                              mov eax, 0	       210	ref-cache.c	FUNCTION_14	IF_2
0x965	            0xeb39	                           jmp 0x40009e0	       210	ref-cache.c	FUNCTION_14	IF_2
0x967	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	ref-cache.c	FUNCTION_14
0x96b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       211	ref-cache.c	FUNCTION_14
0x96f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       211	ref-cache.c	FUNCTION_14
0x972	          0x4863d2	                         movsxd rdx, edx	       211	ref-cache.c	FUNCTION_14
0x975	        0x48c1e203	                              shl rdx, 3	       211	ref-cache.c	FUNCTION_14
0x979	          0x4801d0	                            add rax, rdx	       211	ref-cache.c	FUNCTION_14
0x97c	          0x488b00	                    mov rax, qword [rax]	       211	ref-cache.c	FUNCTION_14
0x97f	        0x488945f8	                mov qword [rbp - 8], rax	       211	ref-cache.c	FUNCTION_14
0x983	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	ref-cache.c	FUNCTION_14
0x987	           0xfb600	                   movzx eax, byte [rax]	       212	ref-cache.c	FUNCTION_14
0x98a	           0xfb6c0	                           movzx eax, al	       212	ref-cache.c	FUNCTION_14
0x98d	          0x83e010	                           and eax, 0x10	       212	ref-cache.c	FUNCTION_14
0x990	            0x85c0	                           test eax, eax	       212	ref-cache.c	FUNCTION_14
0x992	            0x7506	                           jne 0x40009da	       212	ref-cache.c	FUNCTION_14
0x994	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	ref-cache.c	FUNCTION_14
0x998	            0xeb05	                           jmp 0x40009df	       212	ref-cache.c	FUNCTION_14
0x99a	      0xb800000000	                              mov eax, 0	       212	ref-cache.c	FUNCTION_14
0x99f	              0x90	                                     nop	       212	ref-cache.c	FUNCTION_14
0x9a0	              0xc9	                                   leave	       213	ref-cache.c	FUNCTION_14
0x9a1	              0xc3	                                     ret	       213	ref-cache.c	FUNCTION_14
add_entry_to_dir	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,2:FOR,0:WHILE,0	117
0x1bb	              0x55	                                push rbp	         8	ref-cache.c	FUNCTION_1
0x1bc	          0x4889e5	                            mov rbp, rsp	         8	ref-cache.c	FUNCTION_1
0x1bf	        0x4883ec10	                           sub rsp, 0x10	         8	ref-cache.c	FUNCTION_1
0x1c3	        0x48897df8	                mov qword [rbp - 8], rdi	         8	ref-cache.c	FUNCTION_1
0x1c7	        0x488975f0	             mov qword [rbp - 0x10], rsi	         8	ref-cache.c	FUNCTION_1
0x1cb	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1cf	            0x8b00	                    mov eax, dword [rax]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1d1	          0x8d5001	                      lea edx, [rax + 1]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1d4	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1d8	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1db	            0x39c2	                            cmp edx, eax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1dd	     0xf8e93000000	                           jle 0x40002b6	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1e3	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1e7	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1ea	          0x8d5010	                   lea edx, [rax + 0x10]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1ed	            0x89d0	                            mov eax, edx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1ef	             0x1c0	                            add eax, eax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1f1	             0x1d0	                            add eax, edx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1f3	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1f5	          0xc1ea1f	                           shr edx, 0x1f	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1f8	             0x1d0	                            add eax, edx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1fa	            0xd1f8	                              sar eax, 1	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1fc	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x1fe	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x202	            0x8b00	                    mov eax, dword [rax]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x204	          0x83c001	                              add eax, 1	         9	ref-cache.c	FUNCTION_1	CALL_1
0x207	            0x39c2	                            cmp edx, eax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x209	            0x7d12	                           jge 0x400025d	         9	ref-cache.c	FUNCTION_1	CALL_1
0x20b	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x20f	            0x8b00	                    mov eax, dword [rax]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x211	          0x8d5001	                      lea edx, [rax + 1]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x214	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x218	          0x895004	                mov dword [rax + 4], edx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x21b	            0xeb22	                           jmp 0x400027f	         9	ref-cache.c	FUNCTION_1	CALL_1
0x21d	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x221	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x224	          0x8d5010	                   lea edx, [rax + 0x10]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x227	            0x89d0	                            mov eax, edx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x229	             0x1c0	                            add eax, eax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x22b	             0x1d0	                            add eax, edx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x22d	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x22f	          0xc1ea1f	                           shr edx, 0x1f	         9	ref-cache.c	FUNCTION_1	CALL_1
0x232	             0x1d0	                            add eax, edx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x234	            0xd1f8	                              sar eax, 1	         9	ref-cache.c	FUNCTION_1	CALL_1
0x236	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x238	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x23c	          0x895004	                mov dword [rax + 4], edx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x23f	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x243	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x246	            0x4898	                                    cdqe	         9	ref-cache.c	FUNCTION_1	CALL_1
0x248	          0x4889c6	                            mov rsi, rax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x24b	      0xbf08000000	                              mov edi, 8	         9	ref-cache.c	FUNCTION_1	CALL_1
0x250	      0xe8effdffff	                        call sym.st_mult	         9	ref-cache.c	FUNCTION_1	CALL_1
0x255	          0x4889c2	                            mov rdx, rax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x258	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x25c	        0x488b4018	            mov rax, qword [rax + 0x18] 	         9	ref-cache.c	FUNCTION_1	CALL_1
0x260	          0x4889d6	                            mov rsi, rdx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x263	          0x4889c7	                            mov rdi, rax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x266	      0xe800000000	                          call 0x40002ab	         9	ref-cache.c	FUNCTION_1	CALL_1
0x26b	          0x4889c2	                            mov rdx, rax	         9	ref-cache.c	FUNCTION_1	CALL_1
0x26e	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1	CALL_1
0x272	        0x48895018	             mov qword [rax + 0x18], rdx	         9	ref-cache.c	FUNCTION_1	CALL_1
0x276	        0x488b45f8	                mov rax, qword [rbp - 8]	        10	ref-cache.c	FUNCTION_1
0x27a	        0x488b7018	            mov rsi, qword [rax + 0x18] 	        10	ref-cache.c	FUNCTION_1
0x27e	        0x488b45f8	                mov rax, qword [rbp - 8]	        10	ref-cache.c	FUNCTION_1
0x282	            0x8b00	                    mov eax, dword [rax]	        10	ref-cache.c	FUNCTION_1
0x284	          0x8d4801	                      lea ecx, [rax + 1]	        10	ref-cache.c	FUNCTION_1
0x287	        0x488b55f8	                mov rdx, qword [rbp - 8]	        10	ref-cache.c	FUNCTION_1
0x28b	            0x890a	                    mov dword [rdx], ecx	        10	ref-cache.c	FUNCTION_1
0x28d	            0x4898	                                    cdqe	        10	ref-cache.c	FUNCTION_1
0x28f	        0x48c1e003	                              shl rax, 3	        10	ref-cache.c	FUNCTION_1
0x293	        0x488d1406	                    lea rdx, [rsi + rax]	        10	ref-cache.c	FUNCTION_1
0x297	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        10	ref-cache.c	FUNCTION_1
0x29b	          0x488902	                    mov qword [rdx], rax	        10	ref-cache.c	FUNCTION_1
0x29e	        0x488b45f8	                mov rax, qword [rbp - 8]	        12	ref-cache.c	FUNCTION_1	IF_1
0x2a2	            0x8b00	                    mov eax, dword [rax]	        12	ref-cache.c	FUNCTION_1	IF_1
0x2a4	          0x83f801	                              cmp eax, 1	        12	ref-cache.c	FUNCTION_1	IF_1
0x2a7	            0x7467	                            je 0x4000350	        12	ref-cache.c	FUNCTION_1	IF_1
0x2a9	        0x488b45f8	                mov rax, qword [rbp - 8]	        13	ref-cache.c	FUNCTION_1	IF_1
0x2ad	            0x8b10	                    mov edx, dword [rax]	        13	ref-cache.c	FUNCTION_1	IF_1
0x2af	        0x488b45f8	                mov rax, qword [rbp - 8]	        13	ref-cache.c	FUNCTION_1	IF_1
0x2b3	          0x8b4008	                mov eax, dword [rax + 8]	        13	ref-cache.c	FUNCTION_1	IF_1
0x2b6	          0x83c001	                              add eax, 1	        13	ref-cache.c	FUNCTION_1	IF_1
0x2b9	            0x39c2	                            cmp edx, eax	        12	ref-cache.c	FUNCTION_1	IF_1
0x2bb	            0x7560	                           jne 0x400035d	        12	ref-cache.c	FUNCTION_1	IF_1
0x2bd	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	ref-cache.c	FUNCTION_1	IF_1
0x2c1	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        15	ref-cache.c	FUNCTION_1	IF_1
0x2c5	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	ref-cache.c	FUNCTION_1	IF_1
0x2c9	            0x8b00	                    mov eax, dword [rax]	        15	ref-cache.c	FUNCTION_1	IF_1
0x2cb	            0x4898	                                    cdqe	        15	ref-cache.c	FUNCTION_1	IF_1
0x2cd	        0x48c1e003	                              shl rax, 3	        15	ref-cache.c	FUNCTION_1	IF_1
0x2d1	        0x4883e808	                              sub rax, 8	        15	ref-cache.c	FUNCTION_1	IF_1
0x2d5	          0x4801d0	                            add rax, rdx	        15	ref-cache.c	FUNCTION_1	IF_1
0x2d8	          0x488b00	                    mov rax, qword [rax]	        15	ref-cache.c	FUNCTION_1	IF_1
0x2db	        0x488d5028	                   lea rdx, [rax + 0x28]	        15	ref-cache.c	FUNCTION_1	IF_1
0x2df	        0x488b45f8	                mov rax, qword [rbp - 8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2e3	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2e7	        0x488b45f8	                mov rax, qword [rbp - 8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2eb	            0x8b00	                    mov eax, dword [rax]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2ed	            0x4898	                                    cdqe	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2ef	        0x48c1e003	                              shl rax, 3	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2f3	        0x4883e810	                           sub rax, 0x10	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2f7	          0x4801c8	                            add rax, rcx	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2fa	          0x488b00	                    mov rax, qword [rax]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x2fd	        0x4883c028	                           add rax, 0x28	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x301	          0x4889d6	                            mov rsi, rdx	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x304	          0x4889c7	                            mov rdi, rax	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x307	      0xe800000000	                          call 0x400034c	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_2
0x30c	            0x85c0	                           test eax, eax	        13	ref-cache.c	FUNCTION_1	IF_1
0x30e	            0x790d	                           jns 0x400035d	        13	ref-cache.c	FUNCTION_1	IF_1
0x310	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	ref-cache.c	FUNCTION_1	IF_1
0x314	            0x8b10	                    mov edx, dword [rax]	        16	ref-cache.c	FUNCTION_1	IF_1
0x316	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	ref-cache.c	FUNCTION_1	IF_1
0x31a	          0x895008	                mov dword [rax + 8], edx	        16	ref-cache.c	FUNCTION_1	IF_1
0x31d	              0x90	                                     nop	        17	ref-cache.c	FUNCTION_1
0x31e	              0xc9	                                   leave	        17	ref-cache.c	FUNCTION_1
0x31f	              0xc3	                                     ret	        17	ref-cache.c	FUNCTION_1
cache_ref_iterator_peel	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:CALL,1:FOR,0:WHILE,0	13
0x1100	              0x55	                                push rbp	       493	ref-cache.c	FUNCTION_22
0x1101	          0x4889e5	                            mov rbp, rsp	       493	ref-cache.c	FUNCTION_22
0x1104	        0x4883ec10	                           sub rsp, 0x10	       493	ref-cache.c	FUNCTION_22
0x1108	        0x48897df8	                mov qword [rbp - 8], rdi	       493	ref-cache.c	FUNCTION_22
0x110c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       493	ref-cache.c	FUNCTION_22
0x1110	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	ref-cache.c	FUNCTION_22	CALL_1
0x1114	        0x488b4018	            mov rax, qword [rax + 0x18] 	       494	ref-cache.c	FUNCTION_22	CALL_1
0x1118	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       494	ref-cache.c	FUNCTION_22	CALL_1
0x111c	          0x4889d6	                            mov rsi, rdx	       494	ref-cache.c	FUNCTION_22	CALL_1
0x111f	          0x4889c7	                            mov rdi, rax	       494	ref-cache.c	FUNCTION_22	CALL_1
0x1122	      0xe800000000	                          call 0x4001167	       494	ref-cache.c	FUNCTION_22	CALL_1
0x1127	              0xc9	                                   leave	       495	ref-cache.c	FUNCTION_22
0x1128	              0xc3	                                     ret	       495	ref-cache.c	FUNCTION_22
overlaps_prefix	DO,0:functions,0:SWITCH,0:ELSE,2:IF,2:CALL,0:FOR,0:WHILE,1	32
0xd48	              0x55	                                push rbp	       328	ref-cache.c	ELSE_1	FUNCTION_19
0xd49	          0x4889e5	                            mov rbp, rsp	       328	ref-cache.c	ELSE_1	FUNCTION_19
0xd4c	        0x48897df8	                mov qword [rbp - 8], rdi	       328	ref-cache.c	ELSE_1	FUNCTION_19
0xd50	        0x488975f0	             mov qword [rbp - 0x10], rsi	       328	ref-cache.c	ELSE_1	FUNCTION_19
0xd54	            0xeb0a	                           jmp 0x4000da0	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd56	      0x488345f801	                  add qword [rbp - 8], 1	       330	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd5b	      0x488345f001	               add qword [rbp - 0x10], 1	       331	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd64	           0xfb600	                   movzx eax, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd67	            0x84c0	                             test al, al	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd69	            0x7412	                            je 0x4000dbd	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd6b	        0x488b45f8	                mov rax, qword [rbp - 8]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd6f	           0xfb610	                   movzx edx, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd76	           0xfb600	                   movzx eax, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd79	            0x38c2	                              cmp dl, al	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd7b	            0x74d9	                            je 0x4000d96	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0xd7d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       333	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0xd81	           0xfb600	                   movzx eax, byte [rax]	       333	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0xd84	            0x84c0	                             test al, al	       333	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0xd86	            0x7507	                           jne 0x4000dcf	       333	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0xd88	      0xb800000000	                              mov eax, 0	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0xd8d	            0xeb17	                           jmp 0x4000de6	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0xd8f	        0x488b45f8	                mov rax, qword [rbp - 8]	       335	ref-cache.c	FUNCTION_19	IF_2
0xd93	           0xfb600	                   movzx eax, byte [rax]	       335	ref-cache.c	FUNCTION_19	IF_2
0xd96	            0x84c0	                             test al, al	       335	ref-cache.c	FUNCTION_19	IF_2
0xd98	            0x7507	                           jne 0x4000de1	       335	ref-cache.c	FUNCTION_19	IF_2
0xd9a	      0xb801000000	                              mov eax, 1	       336	ref-cache.c	FUNCTION_19	IF_2	ELSE_1
0xd9f	            0xeb05	                           jmp 0x4000de6	       336	ref-cache.c	FUNCTION_19	IF_2	ELSE_1
0xda1	      0xb802000000	                              mov eax, 2	       338	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
0xda6	              0x5d	                                 pop rbp	       339	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
0xda7	              0xc3	                                     ret	       339	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
st_mult	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,2:FOR,0:WHILE,0	22
0x44	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_39
0x45	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_39
0x48	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_39
0x4c	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_39
0x50	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_39
0x54	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x59	            0x7430	                            je 0x40000cb	       795	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x5b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x62	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x67	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x6b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x6f	            0x731a	                           jae 0x40000cb	       795	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x71	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_2
0x75	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_2
0x79	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_2
0x7c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_2
0x81	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_2
0x86	      0xe800000000	                          call 0x40000cb	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_2
0x8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_39
0x8f	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_39
0x94	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_39
0x95	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_39
search_for_subdir	DO,0:functions,0:SWITCH,0:ELSE,1:IF,2:CALL,4:FOR,0:WHILE,0	47
0x7bd	              0x55	                                push rbp	       154	ref-cache.c	FUNCTION_12
0x7be	          0x4889e5	                            mov rbp, rsp	       154	ref-cache.c	FUNCTION_12
0x7c1	        0x4883ec30	                           sub rsp, 0x30	       154	ref-cache.c	FUNCTION_12
0x7c5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       154	ref-cache.c	FUNCTION_12
0x7c9	        0x488975e0	             mov qword [rbp - 0x20], rsi	       154	ref-cache.c	FUNCTION_12
0x7cd	        0x488955d8	             mov qword [rbp - 0x28], rdx	       154	ref-cache.c	FUNCTION_12
0x7d1	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       154	ref-cache.c	FUNCTION_12
0x7d4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       155	ref-cache.c	FUNCTION_12	CALL_1
0x7d8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       155	ref-cache.c	FUNCTION_12	CALL_1
0x7dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	ref-cache.c	FUNCTION_12	CALL_1
0x7e0	          0x4889ce	                            mov rsi, rcx	       155	ref-cache.c	FUNCTION_12	CALL_1
0x7e3	          0x4889c7	                            mov rdi, rax	       155	ref-cache.c	FUNCTION_12	CALL_1
0x7e6	      0xe800000000	                          call 0x400082b	       155	ref-cache.c	FUNCTION_12	CALL_1
0x7eb	          0x8945f4	              mov dword [rbp - 0xc], eax	       155	ref-cache.c	FUNCTION_12	CALL_1
0x7ee	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       157	ref-cache.c	FUNCTION_12	IF_1
0x7f2	            0x7543	                           jne 0x4000877	       157	ref-cache.c	FUNCTION_12	IF_1
0x7f4	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       158	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x7f8	            0x7507	                           jne 0x4000841	       158	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x7fa	      0xb800000000	                              mov eax, 0	       159	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x7ff	            0xeb5e	                           jmp 0x400089f	       159	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x801	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x805	        0x488b4010	            mov rax, qword [rax + 0x10] 	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x809	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x80d	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x811	      0xb900000000	                              mov ecx, 0	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x816	          0x4889c7	                            mov rdi, rax	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x819	      0xe800000000	                          call 0x400085e	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x81e	        0x488945f8	                mov qword [rbp - 8], rax	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x822	        0x488b55f8	                mov rdx, qword [rbp - 8]	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x826	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x82a	          0x4889d6	                            mov rsi, rdx	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x82d	          0x4889c7	                            mov rdi, rax	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x830	      0xe800000000	                          call 0x4000875	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x835	            0xeb1c	                           jmp 0x4000893	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x837	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x83b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x83f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x842	          0x4863d2	                         movsxd rdx, edx	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x845	        0x48c1e203	                              shl rdx, 3	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x849	          0x4801d0	                            add rax, rdx	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x84c	          0x488b00	                    mov rax, qword [rax]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x84f	        0x488945f8	                mov qword [rbp - 8], rax	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x853	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	ref-cache.c	FUNCTION_12	CALL_4
0x857	          0x4889c7	                            mov rdi, rax	       171	ref-cache.c	FUNCTION_12	CALL_4
0x85a	      0xe800000000	                          call 0x400089f	       171	ref-cache.c	FUNCTION_12	CALL_4
0x85f	              0xc9	                                   leave	       172	ref-cache.c	FUNCTION_12
0x860	              0xc3	                                     ret	       172	ref-cache.c	FUNCTION_12
search_ref_dir	DO,0:functions,0:SWITCH,0:ELSE,0:IF,2:CALL,2:FOR,0:WHILE,0	51
0x700	              0x55	                                push rbp	       125	ref-cache.c	FUNCTION_11
0x701	          0x4889e5	                            mov rbp, rsp	       125	ref-cache.c	FUNCTION_11
0x704	        0x4883ec50	                           sub rsp, 0x50	       125	ref-cache.c	FUNCTION_11
0x708	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       125	ref-cache.c	FUNCTION_11
0x70c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       125	ref-cache.c	FUNCTION_11
0x710	        0x488955b8	             mov qword [rbp - 0x48], rdx	       125	ref-cache.c	FUNCTION_11
0x714	    0x64488b042528	                mov rax, qword fs:[0x28]	       125	ref-cache.c	FUNCTION_11
0x71d	        0x488945f8	                mov qword [rbp - 8], rax	       125	ref-cache.c	FUNCTION_11
0x721	            0x31c0	                            xor eax, eax	       125	ref-cache.c	FUNCTION_11
0x723	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       129	ref-cache.c	FUNCTION_11	IF_1
0x728	            0x740a	                            je 0x4000774	       129	ref-cache.c	FUNCTION_11	IF_1
0x72a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       129	ref-cache.c	FUNCTION_11	IF_1
0x72e	            0x8b00	                    mov eax, dword [rax]	       129	ref-cache.c	FUNCTION_11	IF_1
0x730	            0x85c0	                           test eax, eax	       129	ref-cache.c	FUNCTION_11	IF_1
0x732	            0x7507	                           jne 0x400077b	       129	ref-cache.c	FUNCTION_11	IF_1
0x734	      0xb8ffffffff	                     mov eax, 0xffffffff	       130	ref-cache.c	FUNCTION_11	IF_1
0x739	            0xeb6c	                           jmp 0x40007e7	       130	ref-cache.c	FUNCTION_11	IF_1
0x73b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       132	ref-cache.c	FUNCTION_11	CALL_1
0x73f	          0x4889c7	                            mov rdi, rax	       132	ref-cache.c	FUNCTION_11	CALL_1
0x742	      0xe80b050000	                   call sym.sort_ref_dir	       132	ref-cache.c	FUNCTION_11	CALL_1
0x747	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       133	ref-cache.c	FUNCTION_11
0x74b	        0x488945e0	             mov qword [rbp - 0x20], rax	       133	ref-cache.c	FUNCTION_11
0x74f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       134	ref-cache.c	FUNCTION_11
0x753	        0x488945e8	             mov qword [rbp - 0x18], rax	       134	ref-cache.c	FUNCTION_11
0x757	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x75b	            0x8b00	                    mov eax, dword [rax]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x75d	          0x4863d0	                         movsxd rdx, eax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x760	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x764	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       135	ref-cache.c	FUNCTION_11	CALL_2
0x768	        0x488d45e0	                   lea rax, [rbp - 0x20]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x76c	    0x41b800000000	                              mov r8d, 0	       135	ref-cache.c	FUNCTION_11	CALL_2
0x772	      0xb908000000	                              mov ecx, 8	       135	ref-cache.c	FUNCTION_11	CALL_2
0x777	          0x4889c7	                            mov rdi, rax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x77a	      0xe800000000	                          call 0x40007bf	       135	ref-cache.c	FUNCTION_11	CALL_2
0x77f	        0x488945d8	             mov qword [rbp - 0x28], rax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x783	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       138	ref-cache.c	FUNCTION_11	IF_2
0x788	            0x7507	                           jne 0x40007d1	       138	ref-cache.c	FUNCTION_11	IF_2
0x78a	      0xb8ffffffff	                     mov eax, 0xffffffff	       139	ref-cache.c	FUNCTION_11	IF_2
0x78f	            0xeb16	                           jmp 0x40007e7	       139	ref-cache.c	FUNCTION_11	IF_2
0x791	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       141	ref-cache.c	FUNCTION_11
0x795	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       141	ref-cache.c	FUNCTION_11
0x799	        0x488b4018	            mov rax, qword [rax + 0x18] 	       141	ref-cache.c	FUNCTION_11
0x79d	          0x4829c2	                            sub rdx, rax	       141	ref-cache.c	FUNCTION_11
0x7a0	          0x4889d0	                            mov rax, rdx	       141	ref-cache.c	FUNCTION_11
0x7a3	        0x48c1f803	                              sar rax, 3	       141	ref-cache.c	FUNCTION_11
0x7a7	        0x488b4df8	                mov rcx, qword [rbp - 8]	       142	ref-cache.c	FUNCTION_11
0x7ab	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       142	ref-cache.c	FUNCTION_11
0x7b4	            0x7405	                            je 0x40007fb	       142	ref-cache.c	FUNCTION_11
0x7b6	      0xe800000000	                          call 0x40007fb	       142	ref-cache.c	FUNCTION_11
0x7bb	              0xc9	                                   leave	       142	ref-cache.c	FUNCTION_11
0x7bc	              0xc3	                                     ret	       142	ref-cache.c	FUNCTION_11
free_ref_entry	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,2:FOR,0:WHILE,0	20
0x4d2	              0x55	                                push rbp	        59	ref-cache.c	FUNCTION_5
0x4d3	          0x4889e5	                            mov rbp, rsp	        59	ref-cache.c	FUNCTION_5
0x4d6	        0x4883ec10	                           sub rsp, 0x10	        59	ref-cache.c	FUNCTION_5
0x4da	        0x48897df8	                mov qword [rbp - 8], rdi	        59	ref-cache.c	FUNCTION_5
0x4de	        0x488b45f8	                mov rax, qword [rbp - 8]	        60	ref-cache.c	FUNCTION_5	IF_1
0x4e2	           0xfb600	                   movzx eax, byte [rax]	        60	ref-cache.c	FUNCTION_5	IF_1
0x4e5	           0xfb6c0	                           movzx eax, al	        60	ref-cache.c	FUNCTION_5	IF_1
0x4e8	          0x83e010	                           and eax, 0x10	        60	ref-cache.c	FUNCTION_5	IF_1
0x4eb	            0x85c0	                           test eax, eax	        60	ref-cache.c	FUNCTION_5	IF_1
0x4ed	            0x7410	                            je 0x400053f	        60	ref-cache.c	FUNCTION_5	IF_1
0x4ef	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	ref-cache.c	FUNCTION_5	IF_1	CALL_1
0x4f3	        0x4883c008	                              add rax, 8	        65	ref-cache.c	FUNCTION_5	IF_1	CALL_1
0x4f7	          0x4889c7	                            mov rdi, rax	        65	ref-cache.c	FUNCTION_5	IF_1	CALL_1
0x4fa	      0xe839000000	                  call sym.clear_ref_dir	        65	ref-cache.c	FUNCTION_5	IF_1	CALL_1
0x4ff	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	ref-cache.c	FUNCTION_5	CALL_2
0x503	          0x4889c7	                            mov rdi, rax	        67	ref-cache.c	FUNCTION_5	CALL_2
0x506	      0xe800000000	                          call 0x400054b	        67	ref-cache.c	FUNCTION_5	CALL_2
0x50b	              0x90	                                     nop	        68	ref-cache.c	FUNCTION_5
0x50c	              0xc9	                                   leave	        68	ref-cache.c	FUNCTION_5
0x50d	              0xc3	                                     ret	        68	ref-cache.c	FUNCTION_5
ref_entry_cmp_sslice	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,1:FOR,0:WHILE,0	32
0x696	              0x55	                                push rbp	       115	ref-cache.c	FUNCTION_10
0x697	          0x4889e5	                            mov rbp, rsp	       115	ref-cache.c	FUNCTION_10
0x69a	        0x4883ec30	                           sub rsp, 0x30	       115	ref-cache.c	FUNCTION_10
0x69e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       115	ref-cache.c	FUNCTION_10
0x6a2	        0x488975d0	             mov qword [rbp - 0x30], rsi	       115	ref-cache.c	FUNCTION_10
0x6a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       116	ref-cache.c	FUNCTION_10
0x6aa	        0x488945f0	             mov qword [rbp - 0x10], rax	       116	ref-cache.c	FUNCTION_10
0x6ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       117	ref-cache.c	FUNCTION_10
0x6b2	          0x488b00	                    mov rax, qword [rax]	       117	ref-cache.c	FUNCTION_10
0x6b5	        0x488945f8	                mov qword [rbp - 8], rax	       117	ref-cache.c	FUNCTION_10
0x6b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6bd	          0x488b10	                    mov rdx, qword [rax]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6c4	        0x488d4828	                   lea rcx, [rax + 0x28]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6cc	        0x488b4008	                mov rax, qword [rax + 8]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6d0	          0x4889ce	                            mov rsi, rcx	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6d3	          0x4889c7	                            mov rdi, rax	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6d6	      0xe800000000	                          call 0x400071b	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6db	          0x8945ec	             mov dword [rbp - 0x14], eax	       118	ref-cache.c	FUNCTION_10	CALL_1
0x6de	        0x837dec00	               cmp dword [rbp - 0x14], 0	       119	ref-cache.c	FUNCTION_10	IF_1
0x6e2	            0x7405	                            je 0x4000729	       119	ref-cache.c	FUNCTION_10	IF_1
0x6e4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       120	ref-cache.c	FUNCTION_10	IF_1
0x6e7	            0xeb15	                           jmp 0x400073e	       120	ref-cache.c	FUNCTION_10	IF_1
0x6e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	ref-cache.c	FUNCTION_10
0x6ed	          0x488b00	                    mov rax, qword [rax]	       121	ref-cache.c	FUNCTION_10
0x6f0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       121	ref-cache.c	FUNCTION_10
0x6f4	       0xfb6440228	     movzx eax, byte [rdx + rax + 0x28] 	       121	ref-cache.c	FUNCTION_10
0x6f9	           0xfb6c0	                           movzx eax, al	       121	ref-cache.c	FUNCTION_10
0x6fc	            0xf7d8	                                 neg eax	       121	ref-cache.c	FUNCTION_10
0x6fe	              0xc9	                                   leave	       122	ref-cache.c	FUNCTION_10
0x6ff	              0xc3	                                     ret	       122	ref-cache.c	FUNCTION_10
create_dir_entry	DO,0:functions,0:SWITCH,0:ELSE,0:IF,0:CALL,1:FOR,0:WHILE,0	40
0x5c0	              0x55	                                push rbp	        91	ref-cache.c	FUNCTION_8
0x5c1	          0x4889e5	                            mov rbp, rsp	        91	ref-cache.c	FUNCTION_8
0x5c4	        0x4883ec30	                           sub rsp, 0x30	        91	ref-cache.c	FUNCTION_8
0x5c8	        0x48897de8	             mov qword [rbp - 0x18], rdi	        91	ref-cache.c	FUNCTION_8
0x5cc	        0x488975e0	             mov qword [rbp - 0x20], rsi	        91	ref-cache.c	FUNCTION_8
0x5d0	        0x488955d8	             mov qword [rbp - 0x28], rdx	        91	ref-cache.c	FUNCTION_8
0x5d4	          0x894dd4	             mov dword [rbp - 0x2c], ecx	        91	ref-cache.c	FUNCTION_8
0x5d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5db	        0x488945f0	             mov qword [rbp - 0x10], rax	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5e3	          0x4889c6	                            mov rsi, rax	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5e6	      0xbf28000000	                           mov edi, 0x28	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5eb	      0xe810faffff	                         call sym.st_add	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5f0	      0xbe01000000	                              mov esi, 1	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5f5	          0x4889c7	                            mov rdi, rax	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5f8	      0xe803faffff	                         call sym.st_add	        94	ref-cache.c	FUNCTION_8	CALL_1
0x5fd	          0x4889c6	                            mov rsi, rax	        94	ref-cache.c	FUNCTION_8	CALL_1
0x600	      0xbf01000000	                              mov edi, 1	        94	ref-cache.c	FUNCTION_8	CALL_1
0x605	      0xe800000000	                          call 0x400064a	        94	ref-cache.c	FUNCTION_8	CALL_1
0x60a	        0x488945f8	                mov qword [rbp - 8], rax	        94	ref-cache.c	FUNCTION_8	CALL_1
0x60e	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	ref-cache.c	FUNCTION_8	CALL_1
0x612	        0x488d4828	                   lea rcx, [rax + 0x28]	        94	ref-cache.c	FUNCTION_8	CALL_1
0x616	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        94	ref-cache.c	FUNCTION_8	CALL_1
0x61a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        94	ref-cache.c	FUNCTION_8	CALL_1
0x61e	          0x4889c6	                            mov rsi, rax	        94	ref-cache.c	FUNCTION_8	CALL_1
0x621	          0x4889cf	                            mov rdi, rcx	        94	ref-cache.c	FUNCTION_8	CALL_1
0x624	      0xe800000000	                          call 0x4000669	        94	ref-cache.c	FUNCTION_8	CALL_1
0x629	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	ref-cache.c	FUNCTION_8
0x62d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        95	ref-cache.c	FUNCTION_8
0x631	        0x48895018	             mov qword [rax + 0x18], rdx	        95	ref-cache.c	FUNCTION_8
0x635	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        96	ref-cache.c	FUNCTION_8
0x639	            0x7407	                            je 0x4000682	        96	ref-cache.c	FUNCTION_8
0x63b	      0xba30000000	                           mov edx, 0x30	        96	ref-cache.c	FUNCTION_8
0x640	            0xeb05	                           jmp 0x4000687	        96	ref-cache.c	FUNCTION_8
0x642	      0xba10000000	                           mov edx, 0x10	        96	ref-cache.c	FUNCTION_8
0x647	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	ref-cache.c	FUNCTION_8
0x64b	            0x8810	                      mov byte [rax], dl	        96	ref-cache.c	FUNCTION_8
0x64d	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	ref-cache.c	FUNCTION_8
0x651	              0xc9	                                   leave	        98	ref-cache.c	FUNCTION_8
0x652	              0xc3	                                     ret	        98	ref-cache.c	FUNCTION_8
find_containing_dir	DO,0:functions,0:SWITCH,0:ELSE,0:IF,1:CALL,3:FOR,1:WHILE,0	42
0x861	              0x55	                                push rbp	       185	ref-cache.c	FUNCTION_13
0x862	          0x4889e5	                            mov rbp, rsp	       185	ref-cache.c	FUNCTION_13
0x865	        0x4883ec40	                           sub rsp, 0x40	       185	ref-cache.c	FUNCTION_13
0x869	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       185	ref-cache.c	FUNCTION_13
0x86d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       185	ref-cache.c	FUNCTION_13
0x871	          0x8955cc	             mov dword [rbp - 0x34], edx	       185	ref-cache.c	FUNCTION_13
0x874	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x878	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x87d	          0x4889c7	                            mov rdi, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x880	      0xe800000000	                          call 0x40008c5	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x885	        0x488945e8	             mov qword [rbp - 0x18], rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x889	            0xeb63	                           jmp 0x400092e	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x88b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       188	ref-cache.c	FUNCTION_13	FOR_1
0x88f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       188	ref-cache.c	FUNCTION_13	FOR_1
0x893	          0x4829c2	                            sub rdx, rax	       188	ref-cache.c	FUNCTION_13	FOR_1
0x896	          0x4889d0	                            mov rax, rdx	       188	ref-cache.c	FUNCTION_13	FOR_1
0x899	        0x4883c001	                              add rax, 1	       188	ref-cache.c	FUNCTION_13	FOR_1
0x89d	        0x488945f0	             mov qword [rbp - 0x10], rax	       188	ref-cache.c	FUNCTION_13	FOR_1
0x8a1	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x8a4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x8a8	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x8ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x8b0	          0x4889c7	                            mov rdi, rax	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x8b3	      0xe805ffffff	              call sym.search_for_subdir	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x8b8	        0x488945f8	                mov qword [rbp - 8], rax	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x8bc	      0x48837df800	                  cmp qword [rbp - 8], 0	       191	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x8c1	            0x750a	                           jne 0x400090d	       191	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x8c3	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       192	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x8cb	            0xeb28	                           jmp 0x4000935	       193	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x8cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	ref-cache.c	FUNCTION_13	FOR_1
0x8d1	        0x488945d8	             mov qword [rbp - 0x28], rax	       195	ref-cache.c	FUNCTION_13	FOR_1
0x8d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x8d9	        0x4883c001	                              add rax, 1	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x8dd	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x8e2	          0x4889c7	                            mov rdi, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x8e5	      0xe800000000	                          call 0x400092a	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x8ea	        0x488945e8	             mov qword [rbp - 0x18], rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x8ee	      0x48837de800	               cmp qword [rbp - 0x18], 0	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x8f3	            0x7596	                           jne 0x40008cb	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x8f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       198	ref-cache.c	FUNCTION_13
0x8f9	              0xc9	                                   leave	       199	ref-cache.c	FUNCTION_13
0x8fa	              0xc3	                                     ret	       199	ref-cache.c	FUNCTION_13
