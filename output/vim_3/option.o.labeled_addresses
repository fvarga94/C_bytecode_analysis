was_set_insecurely	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,2:IF,1:functions,0:DO,0	18
0x40043e0	              0x53	                                push rbx	      5800	option.c	FUNCTION_34
0x40043e1	            0x89f3	                            mov ebx, esi	      5800	option.c	FUNCTION_34
0x40043e3	      0xe8c8c0ffff	                     call sym.findoption	      5801	option.c	FUNCTION_34	CALL_1
0x40043e8	            0x85c0	                           test eax, eax	      5804	option.c	FUNCTION_34	IF_1
0x40043ea	            0x7815	                            js 0x4004401	      5804	option.c	FUNCTION_34	IF_1
0x40043ec	            0x89de	                            mov esi, ebx	      5806	option.c	FUNCTION_34	IF_1
0x40043ee	            0x89c7	                            mov edi, eax	      5806	option.c	FUNCTION_34	IF_1
0x40043f0	      0xe84bbcffff	                  call sym.insecure_flag	      5806	option.c	FUNCTION_34	IF_1
0x40043f5	          0x488b00	                    mov rax, qword [rax]	      5807	option.c	FUNCTION_34	IF_1
0x40043f8	              0x5b	                                 pop rbx	      5811	option.c	FUNCTION_34
0x40043f9	        0x48c1e817	                           shr rax, 0x17	      5807	option.c	FUNCTION_34	IF_1
0x40043fd	          0x83e001	                              and eax, 1	      5807	option.c	FUNCTION_34	IF_1
0x4004400	              0xc3	                                     ret	      5811	option.c	FUNCTION_34
0x4004401	      0xbf00000000	                              mov edi, 0	      5809	option.c	FUNCTION_34	CALL_2
0x4004406	      0xe800000000	                          call 0x400440b	      5809	option.c	FUNCTION_34	CALL_2
0x400440b	      0xb8ffffffff	                     mov eax, 0xffffffff	      5810	option.c	FUNCTION_34
0x4004410	              0x5b	                                 pop rbx	      5811	option.c	FUNCTION_34
0x4004411	              0xc3	                                     ret	      5811	option.c	FUNCTION_34
win_copy_options	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,3:IF,0:functions,0:DO,0	18
0x4009ed0	              0x55	                                push rbp	     10848	option.c	FUNCTION_79
0x4009ed1	              0x53	                                push rbx	     10848	option.c	FUNCTION_79
0x4009ed2	          0x4889fd	                            mov rbp, rdi	     10848	option.c	FUNCTION_79
0x4009ed5	          0x4889f3	                            mov rbx, rsi	     10848	option.c	FUNCTION_79
0x4009ed8	    0x488dbfb00100	                  lea rdi, [rdi + 0x1b0]	     10849	option.c	FUNCTION_79	CALL_1
0x4009edf	    0x488db6b00100	                  lea rsi, [rsi + 0x1b0]	     10849	option.c	FUNCTION_79	CALL_1
0x4009ee6	        0x4883ec08	                              sub rsp, 8	     10848	option.c	FUNCTION_79
0x4009eea	      0xe800000000	                          call 0x4009eef	     10849	option.c	FUNCTION_79	CALL_1
0x4009eef	    0x488dbd680300	                  lea rdi, [rbp + 0x368]	     10850	option.c	FUNCTION_79	CALL_2
0x4009ef6	    0x488db3680300	                  lea rsi, [rbx + 0x368]	     10850	option.c	FUNCTION_79	CALL_2
0x4009efd	      0xe800000000	                          call 0x4009f02	     10850	option.c	FUNCTION_79	CALL_2
0x4009f02	    0x8b8578050000	           mov eax, dword [rbp + 0x578] 	     10854	option.c	FUNCTION_79
0x4009f08	          0x4889df	                            mov rdi, rbx	     10858	option.c	FUNCTION_79	CALL_3
0x4009f0b	    0x898378050000	            mov dword [rbx + 0x578], eax	     10854	option.c	FUNCTION_79
0x4009f11	        0x4883c408	                              add rsp, 8	     10860	option.c	FUNCTION_79
0x4009f15	              0x5b	                                 pop rbx	     10860	option.c	FUNCTION_79
0x4009f16	              0x5d	                                 pop rbp	     10860	option.c	FUNCTION_79
0x4009f17	      0xe9046cffff	                    jmp sym.briopt_check	     10858	option.c	FUNCTION_79	CALL_3
check_options	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,2:IF,1:functions,0:DO,0	25
0x4003a30	    0x48833d000000	               cmp qword [0x04003a38], 0	      5637	option.c	FUNCTION_28	FOR_1
0x4003a38	            0x744c	                            je 0x4003a86	      5637	option.c	FUNCTION_28	FOR_1
0x4003a3a	              0x53	                                push rbx	      5634	option.c	FUNCTION_28
0x4003a3b	      0xbb00000000	                              mov ebx, 0	      5634	option.c	FUNCTION_28
0x4003a40	            0xeb11	                           jmp 0x4003a53	      5634	option.c	FUNCTION_28
0x4003a42	    0x660f1f440000	                    nop word [rax + rax]	      5634	option.c	FUNCTION_28
0x4003a48	        0x4883c340	                           add rbx, 0x40	      5634	option.c	FUNCTION_28
0x4003a4c	      0x48837be000	               cmp qword [rbx - 0x20], 0	      5637	option.c	FUNCTION_28	FOR_1
0x4003a51	            0x7432	                            je 0x4003a85	      5637	option.c	FUNCTION_28	FOR_1
0x4003a53	        0xf643f004	               test byte [rbx - 0x10], 4	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4003a57	            0x74ef	                            je 0x4003a48	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4003a59	        0x488b7bf8	                mov rdi, qword [rbx - 8]	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4003a5d	          0x4885ff	                           test rdi, rdi	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4003a60	            0x74e6	                            je 0x4003a48	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4003a62	          0x4889de	                            mov rsi, rbx	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x4003a65	      0xe8c6daffff	                call sym.get_varp.isra.1	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x4003a6a	        0x48833800	                      cmp qword [rax], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003a6e	            0x75d8	                           jne 0x4003a48	      5771	option.c	FUNCTION_32	IF_1
0x4003a70	    0x488b15000000	            mov rdx, qword [0x04003a77] 	      5772	option.c	FUNCTION_32	IF_1
0x4003a77	        0x4883c340	                           add rbx, 0x40	      5772	option.c	FUNCTION_32	IF_1
0x4003a7b	          0x488910	                    mov qword [rax], rdx	      5772	option.c	FUNCTION_32	IF_1
0x4003a7e	      0x48837be000	               cmp qword [rbx - 0x20], 0	      5637	option.c	FUNCTION_28	FOR_1
0x4003a83	            0x75ce	                           jne 0x4003a53	      5637	option.c	FUNCTION_28	FOR_1
0x4003a85	              0x5b	                                 pop rbx	      5640	option.c	FUNCTION_28
0x4003a86	            0xf3c3	                                     ret	      5640	option.c	FUNCTION_28
unset_global_local_option	WHILE,0:FOR,0:ELSE,0:SWITCH,1:CALL,20:IF,1:functions,0:DO,0	255
0x40097c0	              0x53	                                push rbx	     10429	option.c	FUNCTION_75
0x40097c1	          0x4889f3	                            mov rbx, rsi	     10429	option.c	FUNCTION_75
0x40097c4	      0xe8e76cffff	                     call sym.findoption	     10434	option.c	FUNCTION_75	CALL_1
0x40097c9	            0x85c0	                           test eax, eax	     10435	option.c	FUNCTION_75	IF_1
0x40097cb	            0x7873	                            js 0x4009840	     10435	option.c	FUNCTION_75	IF_1
0x40097cd	            0x4898	                                    cdqe	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097cf	        0x48c1e006	                              shl rax, 6	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097d3	    0x8b8000000000	                    mov eax, dword [rax]	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097d9	      0x3d18500000	                         cmp eax, 0x5018	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097de	     0xf843c040000	                            je 0x4009c20	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097e4	            0x7762	                            ja 0x4009848	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097e6	      0x3d06500000	                         cmp eax, 0x5006	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097eb	     0xf845f040000	                            je 0x4009c50	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097f1	     0xf86b1000000	                           jbe 0x40098a8	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097f7	      0x3d14500000	                         cmp eax, 0x5014	     10439	option.c	FUNCTION_75	SWITCH_1
0x40097fc	     0xf844e030000	                            je 0x4009b50	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009802	     0xf8748010000	                            ja 0x4009950	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009808	      0x3d07500000	                         cmp eax, 0x5007	     10439	option.c	FUNCTION_75	SWITCH_1
0x400980d	     0xf84cd010000	                            je 0x40099e0	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009813	      0x3d10500000	                         cmp eax, 0x5010	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009818	            0x7526	                           jne 0x4009840	     10439	option.c	FUNCTION_75	SWITCH_1
0x400981a	    0x488bbb481700	          mov rdi, qword [rbx + 0x1748] 	      5763	option.c	FUNCTION_31	IF_1
0x4009821	    0x488b05000000	            mov rax, qword [0x04009828] 	      5763	option.c	FUNCTION_31	IF_1
0x4009828	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400982b	            0x740c	                            je 0x4009839	      5763	option.c	FUNCTION_31	IF_1
0x400982d	      0xe800000000	                          call 0x4009832	      5764	option.c	FUNCTION_31	CALL_1
0x4009832	    0x488b05000000	            mov rax, qword [0x04009839] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009839	    0x488983481700	          mov qword [rbx + 0x1748], rax 	      5765	option.c	FUNCTION_31
0x4009840	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009841	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009842	    0x660f1f440000	                    nop word [rax + rax]	     10524	option.c	FUNCTION_75
0x4009848	      0x3d30500000	                         cmp eax, 0x5030	     10439	option.c	FUNCTION_75	SWITCH_1
0x400984d	     0xf849d030000	                            je 0x4009bf0	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009853	     0xf86a7000000	                           jbe 0x4009900	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009859	      0x3d47500000	                         cmp eax, 0x5047	     10439	option.c	FUNCTION_75	SWITCH_1
0x400985e	     0xf845c030000	                            je 0x4009bc0	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009864	     0xf8726010000	                            ja 0x4009990	     10439	option.c	FUNCTION_75	SWITCH_1
0x400986a	      0x3d31500000	                         cmp eax, 0x5031	     10439	option.c	FUNCTION_75	SWITCH_1
0x400986f	     0xf8443010000	                            je 0x40099b8	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009875	      0x3d38500000	                         cmp eax, 0x5038	     10439	option.c	FUNCTION_75	SWITCH_1
0x400987a	            0x75c4	                           jne 0x4009840	     10439	option.c	FUNCTION_75	SWITCH_1
0x400987c	    0x488bbb101600	          mov rdi, qword [rbx + 0x1610] 	      5763	option.c	FUNCTION_31	IF_1
0x4009883	    0x488b05000000	            mov rax, qword [0x0400988a] 	      5763	option.c	FUNCTION_31	IF_1
0x400988a	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400988d	            0x740c	                            je 0x400989b	      5763	option.c	FUNCTION_31	IF_1
0x400988f	      0xe800000000	                          call 0x4009894	      5764	option.c	FUNCTION_31	CALL_1
0x4009894	    0x488b05000000	            mov rax, qword [0x0400989b] 	      5764	option.c	FUNCTION_31	CALL_1
0x400989b	    0x488983101600	          mov qword [rbx + 0x1610], rax 	      5765	option.c	FUNCTION_31
0x40098a2	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x40098a3	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x40098a4	         0xf1f4000	                         nop dword [rax]	     10524	option.c	FUNCTION_75
0x40098a8	      0x3d01500000	                         cmp eax, 0x5001	     10439	option.c	FUNCTION_75	SWITCH_1
0x40098ad	     0xf84fd020000	                            je 0x4009bb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x40098b3	     0xf865f020000	                           jbe 0x4009b18	     10439	option.c	FUNCTION_75	SWITCH_1
0x40098b9	      0x3d03500000	                         cmp eax, 0x5003	     10439	option.c	FUNCTION_75	SWITCH_1
0x40098be	     0xf844c010000	                            je 0x4009a10	     10439	option.c	FUNCTION_75	SWITCH_1
0x40098c4	      0x3d05500000	                         cmp eax, 0x5005	     10439	option.c	FUNCTION_75	SWITCH_1
0x40098c9	     0xf8571ffffff	                           jne 0x4009840	     10439	option.c	FUNCTION_75	SWITCH_1
0x40098cf	    0x488bbb001600	          mov rdi, qword [rbx + 0x1600] 	      5763	option.c	FUNCTION_31	IF_1
0x40098d6	    0x488b05000000	            mov rax, qword [0x040098dd] 	      5763	option.c	FUNCTION_31	IF_1
0x40098dd	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x40098e0	            0x740c	                            je 0x40098ee	      5763	option.c	FUNCTION_31	IF_1
0x40098e2	      0xe800000000	                          call 0x40098e7	      5764	option.c	FUNCTION_31	CALL_1
0x40098e7	    0x488b05000000	            mov rax, qword [0x040098ee] 	      5764	option.c	FUNCTION_31	CALL_1
0x40098ee	    0x488983001600	          mov qword [rbx + 0x1600], rax 	      5765	option.c	FUNCTION_31
0x40098f5	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x40098f6	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x40098f7	    0x660f1f840000	                    nop word [rax + rax]	     10524	option.c	FUNCTION_75
0x4009900	      0x3d1e500000	                         cmp eax, 0x501e	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009905	     0xf8475020000	                            je 0x4009b80	     10439	option.c	FUNCTION_75	SWITCH_1
0x400990b	     0xf86cf010000	                           jbe 0x4009ae0	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009911	      0x3d1f500000	                         cmp eax, 0x501f	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009916	     0xf8494010000	                            je 0x4009ab0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400991c	      0x3d2e500000	                         cmp eax, 0x502e	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009921	     0xf8519ffffff	                           jne 0x4009840	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009927	    0x488bbb181500	          mov rdi, qword [rbx + 0x1518] 	      5763	option.c	FUNCTION_31	IF_1
0x400992e	    0x488b05000000	            mov rax, qword [0x04009935] 	      5763	option.c	FUNCTION_31	IF_1
0x4009935	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009938	            0x740c	                            je 0x4009946	      5763	option.c	FUNCTION_31	IF_1
0x400993a	      0xe800000000	                          call 0x400993f	      5764	option.c	FUNCTION_31	CALL_1
0x400993f	    0x488b05000000	            mov rax, qword [0x04009946] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009946	    0x488983181500	          mov qword [rbx + 0x1518], rax 	      5765	option.c	FUNCTION_31
0x400994d	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400994e	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400994f	              0x90	                                     nop	     10524	option.c	FUNCTION_75
0x4009950	      0x3d15500000	                         cmp eax, 0x5015	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009955	     0xf8425010000	                            je 0x4009a80	     10439	option.c	FUNCTION_75	SWITCH_1
0x400995b	      0x3d17500000	                         cmp eax, 0x5017	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009960	     0xf85dafeffff	                           jne 0x4009840	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009966	    0x488bbbc01400	          mov rdi, qword [rbx + 0x14c0] 	      5763	option.c	FUNCTION_31	IF_1
0x400996d	    0x488b05000000	            mov rax, qword [0x04009974] 	      5763	option.c	FUNCTION_31	IF_1
0x4009974	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009977	            0x740c	                            je 0x4009985	      5763	option.c	FUNCTION_31	IF_1
0x4009979	      0xe800000000	                          call 0x400997e	      5764	option.c	FUNCTION_31	CALL_1
0x400997e	    0x488b05000000	            mov rax, qword [0x04009985] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009985	    0x488983c01400	          mov qword [rbx + 0x14c0], rax 	      5765	option.c	FUNCTION_31
0x400998c	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400998d	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400998e	            0x6690	                                     nop	     10524	option.c	FUNCTION_75
0x4009990	      0x3d48500000	                         cmp eax, 0x5048	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009995	     0xf84ad000000	                            je 0x4009a48	     10439	option.c	FUNCTION_75	SWITCH_1
0x400999b	      0x3d4d500000	                         cmp eax, 0x504d	     10439	option.c	FUNCTION_75	SWITCH_1
0x40099a0	     0xf859afeffff	                           jne 0x4009840	     10439	option.c	FUNCTION_75	SWITCH_1
0x40099a6	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	     10511	option.c	FUNCTION_75	SWITCH_1
0x40099b1	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x40099b2	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x40099b3	       0xf1f440000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x40099b8	    0x488bbb281500	          mov rdi, qword [rbx + 0x1528] 	      5763	option.c	FUNCTION_31	IF_1
0x40099bf	    0x488b05000000	            mov rax, qword [0x040099c6] 	      5763	option.c	FUNCTION_31	IF_1
0x40099c6	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x40099c9	            0x740c	                            je 0x40099d7	      5763	option.c	FUNCTION_31	IF_1
0x40099cb	      0xe800000000	                          call 0x40099d0	      5764	option.c	FUNCTION_31	CALL_1
0x40099d0	    0x488b05000000	            mov rax, qword [0x040099d7] 	      5764	option.c	FUNCTION_31	CALL_1
0x40099d7	    0x488983281500	          mov qword [rbx + 0x1528], rax 	      5765	option.c	FUNCTION_31
0x40099de	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x40099df	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x40099e0	    0x488bbbf81500	          mov rdi, qword [rbx + 0x15f8] 	      5763	option.c	FUNCTION_31	IF_1
0x40099e7	    0x488b05000000	            mov rax, qword [0x040099ee] 	      5763	option.c	FUNCTION_31	IF_1
0x40099ee	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x40099f1	            0x740c	                            je 0x40099ff	      5763	option.c	FUNCTION_31	IF_1
0x40099f3	      0xe800000000	                          call 0x40099f8	      5764	option.c	FUNCTION_31	CALL_1
0x40099f8	    0x488b05000000	            mov rax, qword [0x040099ff] 	      5764	option.c	FUNCTION_31	CALL_1
0x40099ff	    0x488983f81500	          mov qword [rbx + 0x15f8], rax 	      5765	option.c	FUNCTION_31
0x4009a06	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009a07	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009a08	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009a10	    0x488bbbf81300	          mov rdi, qword [rbx + 0x13f8] 	      5763	option.c	FUNCTION_31	IF_1
0x4009a17	    0x488b05000000	            mov rax, qword [0x04009a1e] 	      5763	option.c	FUNCTION_31	IF_1
0x4009a1e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009a21	            0x740c	                            je 0x4009a2f	      5763	option.c	FUNCTION_31	IF_1
0x4009a23	      0xe800000000	                          call 0x4009a28	      5764	option.c	FUNCTION_31	CALL_1
0x4009a28	    0x488b05000000	            mov rax, qword [0x04009a2f] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009a2f	    0x488983f81300	          mov qword [rbx + 0x13f8], rax 	      5765	option.c	FUNCTION_31
0x4009a36	    0xc78300140000	            mov dword [rbx + 0x1400], 0 	     10456	option.c	FUNCTION_75	SWITCH_1
0x4009a40	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009a41	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009a42	    0x660f1f440000	                    nop word [rax + rax]	     10524	option.c	FUNCTION_75
0x4009a48	    0x488bbb281600	          mov rdi, qword [rbx + 0x1628] 	      5763	option.c	FUNCTION_31	IF_1
0x4009a4f	    0x488b05000000	            mov rax, qword [0x04009a56] 	      5763	option.c	FUNCTION_31	IF_1
0x4009a56	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009a59	            0x740c	                            je 0x4009a67	      5763	option.c	FUNCTION_31	IF_1
0x4009a5b	      0xe800000000	                          call 0x4009a60	      5764	option.c	FUNCTION_31	CALL_1
0x4009a60	    0x488b05000000	            mov rax, qword [0x04009a67] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009a67	    0x488983281600	          mov qword [rbx + 0x1628], rax 	      5765	option.c	FUNCTION_31
0x4009a6e	    0xc78330160000	            mov dword [rbx + 0x1630], 0 	     10463	option.c	FUNCTION_75	SWITCH_1
0x4009a78	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009a79	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009a7a	    0x660f1f440000	                    nop word [rax + rax]	     10524	option.c	FUNCTION_75
0x4009a80	    0x488bbb401600	          mov rdi, qword [rbx + 0x1640] 	      5763	option.c	FUNCTION_31	IF_1
0x4009a87	    0x488b05000000	            mov rax, qword [0x04009a8e] 	      5763	option.c	FUNCTION_31	IF_1
0x4009a8e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009a91	            0x740c	                            je 0x4009a9f	      5763	option.c	FUNCTION_31	IF_1
0x4009a93	      0xe800000000	                          call 0x4009a98	      5764	option.c	FUNCTION_31	CALL_1
0x4009a98	    0x488b05000000	            mov rax, qword [0x04009a9f] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009a9f	    0x488983401600	          mov qword [rbx + 0x1640], rax 	      5765	option.c	FUNCTION_31
0x4009aa6	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009aa7	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009aa8	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009ab0	    0x488bbb381700	          mov rdi, qword [rbx + 0x1738] 	      5763	option.c	FUNCTION_31	IF_1
0x4009ab7	    0x488b05000000	            mov rax, qword [0x04009abe] 	      5763	option.c	FUNCTION_31	IF_1
0x4009abe	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009ac1	            0x740c	                            je 0x4009acf	      5763	option.c	FUNCTION_31	IF_1
0x4009ac3	      0xe800000000	                          call 0x4009ac8	      5764	option.c	FUNCTION_31	CALL_1
0x4009ac8	    0x488b05000000	            mov rax, qword [0x04009acf] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009acf	    0x488983381700	          mov qword [rbx + 0x1738], rax 	      5765	option.c	FUNCTION_31
0x4009ad6	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009ad7	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009ad8	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009ae0	      0x3d1b500000	                         cmp eax, 0x501b	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009ae5	     0xf8555fdffff	                           jne 0x4009840	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009aeb	    0x488bbb081600	          mov rdi, qword [rbx + 0x1608] 	      5763	option.c	FUNCTION_31	IF_1
0x4009af2	    0x488b05000000	            mov rax, qword [0x04009af9] 	      5763	option.c	FUNCTION_31	IF_1
0x4009af9	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009afc	            0x740c	                            je 0x4009b0a	      5763	option.c	FUNCTION_31	IF_1
0x4009afe	      0xe800000000	                          call 0x4009b03	      5764	option.c	FUNCTION_31	CALL_1
0x4009b03	    0x488b05000000	            mov rax, qword [0x04009b0a] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009b0a	    0x488983081600	          mov qword [rbx + 0x1608], rax 	      5765	option.c	FUNCTION_31
0x4009b11	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009b12	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009b13	       0xf1f440000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009b18	      0x3d21300000	                         cmp eax, 0x3021	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009b1d	     0xf851dfdffff	                           jne 0x4009840	     10439	option.c	FUNCTION_75	SWITCH_1
0x4009b23	    0x488bbb800200	           mov rdi, qword [rbx + 0x280] 	      5763	option.c	FUNCTION_31	IF_1
0x4009b2a	    0x488b05000000	            mov rax, qword [0x04009b31] 	      5763	option.c	FUNCTION_31	IF_1
0x4009b31	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009b34	            0x740c	                            je 0x4009b42	      5763	option.c	FUNCTION_31	IF_1
0x4009b36	      0xe800000000	                          call 0x4009b3b	      5764	option.c	FUNCTION_31	CALL_1
0x4009b3b	    0x488b05000000	            mov rax, qword [0x04009b42] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009b42	    0x488983800200	            mov qword [rbx + 0x280], rax	      5765	option.c	FUNCTION_31
0x4009b49	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009b4a	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009b4b	       0xf1f440000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009b50	    0x488bbb381600	          mov rdi, qword [rbx + 0x1638] 	      5763	option.c	FUNCTION_31	IF_1
0x4009b57	    0x488b05000000	            mov rax, qword [0x04009b5e] 	      5763	option.c	FUNCTION_31	IF_1
0x4009b5e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009b61	            0x740c	                            je 0x4009b6f	      5763	option.c	FUNCTION_31	IF_1
0x4009b63	      0xe800000000	                          call 0x4009b68	      5764	option.c	FUNCTION_31	CALL_1
0x4009b68	    0x488b05000000	            mov rax, qword [0x04009b6f] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009b6f	    0x488983381600	          mov qword [rbx + 0x1638], rax 	      5765	option.c	FUNCTION_31
0x4009b76	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009b77	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009b78	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009b80	    0x488bbbf81400	          mov rdi, qword [rbx + 0x14f8] 	      5763	option.c	FUNCTION_31	IF_1
0x4009b87	    0x488b05000000	            mov rax, qword [0x04009b8e] 	      5763	option.c	FUNCTION_31	IF_1
0x4009b8e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009b91	            0x740c	                            je 0x4009b9f	      5763	option.c	FUNCTION_31	IF_1
0x4009b93	      0xe800000000	                          call 0x4009b98	      5764	option.c	FUNCTION_31	CALL_1
0x4009b98	    0x488b05000000	            mov rax, qword [0x04009b9f] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009b9f	    0x488983f81400	          mov qword [rbx + 0x14f8], rax 	      5765	option.c	FUNCTION_31
0x4009ba6	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009ba7	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009ba8	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009bb0	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	     10452	option.c	FUNCTION_75	SWITCH_1
0x4009bba	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009bbb	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009bbc	         0xf1f4000	                         nop dword [rax]	     10524	option.c	FUNCTION_75
0x4009bc0	    0x488bbb201600	          mov rdi, qword [rbx + 0x1620] 	      5763	option.c	FUNCTION_31	IF_1
0x4009bc7	    0x488b05000000	            mov rax, qword [0x04009bce] 	      5763	option.c	FUNCTION_31	IF_1
0x4009bce	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009bd1	            0x740c	                            je 0x4009bdf	      5763	option.c	FUNCTION_31	IF_1
0x4009bd3	      0xe800000000	                          call 0x4009bd8	      5764	option.c	FUNCTION_31	CALL_1
0x4009bd8	    0x488b05000000	            mov rax, qword [0x04009bdf] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009bdf	    0x488983201600	          mov qword [rbx + 0x1620], rax 	      5765	option.c	FUNCTION_31
0x4009be6	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009be7	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009be8	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009bf0	    0x488bbb581600	          mov rdi, qword [rbx + 0x1658] 	      5763	option.c	FUNCTION_31	IF_1
0x4009bf7	    0x488b05000000	            mov rax, qword [0x04009bfe] 	      5763	option.c	FUNCTION_31	IF_1
0x4009bfe	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009c01	            0x740c	                            je 0x4009c0f	      5763	option.c	FUNCTION_31	IF_1
0x4009c03	      0xe800000000	                          call 0x4009c08	      5764	option.c	FUNCTION_31	CALL_1
0x4009c08	    0x488b05000000	            mov rax, qword [0x04009c0f] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009c0f	    0x488983581600	          mov qword [rbx + 0x1658], rax 	      5765	option.c	FUNCTION_31
0x4009c16	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009c17	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009c18	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009c20	    0x488bbbc81400	          mov rdi, qword [rbx + 0x14c8] 	      5763	option.c	FUNCTION_31	IF_1
0x4009c27	    0x488b05000000	            mov rax, qword [0x04009c2e] 	      5763	option.c	FUNCTION_31	IF_1
0x4009c2e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009c31	            0x740c	                            je 0x4009c3f	      5763	option.c	FUNCTION_31	IF_1
0x4009c33	      0xe800000000	                          call 0x4009c38	      5764	option.c	FUNCTION_31	CALL_1
0x4009c38	    0x488b05000000	            mov rax, qword [0x04009c3f] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009c3f	    0x488983c81400	          mov qword [rbx + 0x14c8], rax 	      5765	option.c	FUNCTION_31
0x4009c46	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009c47	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x4009c48	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x4009c50	    0x488bbbf01500	          mov rdi, qword [rbx + 0x15f0] 	      5763	option.c	FUNCTION_31	IF_1
0x4009c57	    0x488b05000000	            mov rax, qword [0x04009c5e] 	      5763	option.c	FUNCTION_31	IF_1
0x4009c5e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009c61	            0x740c	                            je 0x4009c6f	      5763	option.c	FUNCTION_31	IF_1
0x4009c63	      0xe800000000	                          call 0x4009c68	      5764	option.c	FUNCTION_31	CALL_1
0x4009c68	    0x488b05000000	            mov rax, qword [0x04009c6f] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009c6f	    0x488983f01500	          mov qword [rbx + 0x15f0], rax 	      5765	option.c	FUNCTION_31
0x4009c76	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x4009c77	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
int_cmp	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,0:IF,0:functions,0:DO,0	3
0x4000160	            0x8b07	                    mov eax, dword [rdi]	      7671	option.c	FUNCTION_41
0x4000162	            0x2b06	                    sub eax, dword [rsi]	      7671	option.c	FUNCTION_41
0x4000164	              0xc3	                                     ret	      7672	option.c	FUNCTION_41
set_term_defaults	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,2:IF,3:functions,0:DO,0	43
0x4005530	    0x488b05000000	            mov rax, qword [0x04005537] 	     10350	option.c	FUNCTION_72	FOR_1
0x4005537	          0x4885c0	                           test rax, rax	     10350	option.c	FUNCTION_72	FOR_1
0x400553a	            0x7479	                            je 0x40055b5	     10350	option.c	FUNCTION_72	FOR_1
0x400553c	              0x53	                                push rbx	     10347	option.c	FUNCTION_72
0x400553d	      0xbb00000000	                              mov ebx, 0	     10347	option.c	FUNCTION_72
0x4005542	            0xeb10	                           jmp 0x4005554	     10347	option.c	FUNCTION_72
0x4005544	         0xf1f4000	                         nop dword [rax]	     10347	option.c	FUNCTION_72
0x4005548	        0x4883c340	                           add rbx, 0x40	     10350	option.c	FUNCTION_72	FOR_1
0x400554c	          0x488b03	                    mov rax, qword [rbx]	     10350	option.c	FUNCTION_72	FOR_1
0x400554f	          0x4885c0	                           test rax, rax	     10350	option.c	FUNCTION_72	FOR_1
0x4005552	            0x7460	                            je 0x40055b4	     10350	option.c	FUNCTION_72	FOR_1
0x4005554	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x4005557	            0x75ef	                           jne 0x4005548	     10375	option.c	FUNCTION_73
0x4005559	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400555d	            0x75e9	                           jne 0x4005548	     10375	option.c	FUNCTION_73
0x400555f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4005563	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4005567	          0x488b10	                    mov rdx, qword [rax]	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400556a	          0x4839d7	                            cmp rdi, rdx	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400556d	            0x74d9	                            je 0x4005548	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400556f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4005573	            0xa880	                           test al, 0x80	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4005575	            0x741f	                            je 0x4005596	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4005577	    0x483b3d000000	            cmp rdi, qword [0x0400557e] 	      5756	option.c	FUNCTION_30	IF_1
0x400557e	            0x7410	                            je 0x4005590	      5756	option.c	FUNCTION_30	IF_1
0x4005580	      0xe800000000	                          call 0x4005585	      5757	option.c	FUNCTION_30	CALL_1
0x4005585	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      5757	option.c	FUNCTION_30	CALL_1
0x4005589	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x400558d	          0x488b12	                    mov rdx, qword [rdx]	      5757	option.c	FUNCTION_30	CALL_1
0x4005590	            0x247f	                            and al, 0x7f	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4005592	        0x48894310	             mov qword [rbx + 0x10], rax	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4005596	            0xa808	                              test al, 8	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4005598	        0x48895328	             mov qword [rbx + 0x28], rdx	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x400559c	            0x74aa	                            je 0x4005548	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400559e	        0x4883e0f7	             and rax, 0xfffffffffffffff7	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x40055a2	        0x4883c340	                           add rbx, 0x40	     10350	option.c	FUNCTION_72	FOR_1
0x40055a6	             0xc80	                             or al, 0x80	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x40055a8	        0x488943d0	             mov qword [rbx - 0x30], rax	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x40055ac	          0x488b03	                    mov rax, qword [rbx]	     10350	option.c	FUNCTION_72	FOR_1
0x40055af	          0x4885c0	                           test rax, rax	     10350	option.c	FUNCTION_72	FOR_1
0x40055b2	            0x75a0	                           jne 0x4005554	     10350	option.c	FUNCTION_72	FOR_1
0x40055b4	              0x5b	                                 pop rbx	     10367	option.c	FUNCTION_72
0x40055b5	            0xf3c3	                                     ret	     10367	option.c	FUNCTION_72
ExpandSettings	WHILE,0:FOR,5:ELSE,9:SWITCH,0:CALL,19:IF,24:functions,0:DO,0	297
0x400ad70	            0x4157	                                push r15	     11547	option.c	FUNCTION_89
0x400ad72	            0x4156	                                push r14	     11547	option.c	FUNCTION_89
0x400ad74	          0x4989ce	                            mov r14, rcx	     11547	option.c	FUNCTION_89
0x400ad77	            0x4155	                                push r13	     11547	option.c	FUNCTION_89
0x400ad79	            0x4154	                                push r12	     11547	option.c	FUNCTION_89
0x400ad7b	              0x55	                                push rbp	     11547	option.c	FUNCTION_89
0x400ad7c	              0x53	                                push rbx	     11547	option.c	FUNCTION_89
0x400ad7d	          0x4889f5	                            mov rbp, rsi	     11547	option.c	FUNCTION_89
0x400ad80	            0x31db	                            xor ebx, ebx	     11552	option.c	FUNCTION_89
0x400ad82	        0x4883ec68	                           sub rsp, 0x68	     11547	option.c	FUNCTION_89
0x400ad86	    0x64488b042528	                mov rax, qword fs:[0x28]	     11547	option.c	FUNCTION_89
0x400ad8f	      0x4889442458	             mov qword [rsp + 0x58], rax	     11547	option.c	FUNCTION_89
0x400ad94	            0x31c0	                            xor eax, eax	     11547	option.c	FUNCTION_89
0x400ad96	    0x8b86a8000000	            mov eax, dword [rsi + 0xa8] 	     11558	option.c	FUNCTION_89
0x400ad9c	      0x48897c2408	                mov qword [rsp + 8], rdi	     11547	option.c	FUNCTION_89
0x400ada1	      0x4889542428	             mov qword [rsp + 0x28], rdx	     11547	option.c	FUNCTION_89
0x400ada6	    0xc74424100000	               mov dword [rsp + 0x10], 0	     11558	option.c	FUNCTION_89
0x400adae	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	     11549	option.c	FUNCTION_89
0x400adb6	    0xc74424140000	               mov dword [rsp + 0x14], 0	     11548	option.c	FUNCTION_89
0x400adbe	        0x89442418	             mov dword [rsp + 0x18], eax	     11558	option.c	FUNCTION_89
0x400adc2	      0x488d442431	                   lea rax, [rsp + 0x31]	       110	string3.h	FUNCTION_126	CALL_3
0x400adc7	      0x4889442420	             mov qword [rsp + 0x20], rax	       110	string3.h	FUNCTION_126	CALL_3
0x400adcc	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     11566	option.c	FUNCTION_89	FOR_1
0x400add0	    0x8985a8000000	            mov dword [rbp + 0xa8], eax 	     11566	option.c	FUNCTION_89	FOR_1
0x400add6	      0x488b442408	                mov rax, qword [rsp + 8]	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400addb	            0x8b10	                    mov edx, dword [rax]	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400addd	          0x83fa05	                              cmp edx, 5	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400ade0	     0xf848b020000	                            je 0x400b071	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400ade6	    0x41bd00000000	                             mov r13d, 0	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400adec	    0x41bc00000000	                             mov r12d, 0	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400adf2	            0x31d2	                            xor edx, edx	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400adf4	          0x4c89e6	                            mov rsi, r12	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400adf7	          0x4889ef	                            mov rdi, rbp	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400adfa	      0xe800000000	                          call 0x400adff	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400adff	            0x85c0	                           test eax, eax	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400ae01	            0x7427	                            je 0x400ae2a	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400ae03	      0x448b5c2410	           mov r11d, dword [rsp + 0x10] 	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ae08	          0x4585db	                         test r11d, r11d	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ae0b	     0xf8406040000	                            je 0x400b217	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ae11	          0x498b06	                    mov rax, qword [r14]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ae14	        0x448d7b01	                     lea r15d, [rbx + 1]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ae18	          0x4c89e7	                            mov rdi, r12	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ae1b	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ae1f	      0xe800000000	                          call 0x400ae24	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ae24	          0x488903	                    mov qword [rbx], rax	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ae27	          0x4963df	                        movsxd rbx, r15d	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ae2a	        0x4983c508	                              add r13, 8	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400ae2e	    0x4981fd000000	                              cmp r13, 0	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400ae35	     0xf852d020000	                           jne 0x400b068	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400ae3b	    0x4c8b2d000000	            mov r13, qword [0x0400ae42] 	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae42	      0x488b442408	                mov rax, qword [rsp + 8]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae47	          0x4d85ed	                           test r13, r13	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae4a	            0x8b10	                    mov edx, dword [rax]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae4c	     0xf849e000000	                            je 0x400aef0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae52	    0x41bc00000000	                             mov r12d, 0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae58	            0xeb6c	                           jmp 0x400aec6	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae5a	    0x660f1f440000	                    nop word [rax + rax]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae60	      0x498b4424e8	             mov rax, qword [r12 - 0x18]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ae65	          0x4531ff	                          xor r15d, r15d	     10375	option.c	FUNCTION_73
0x400ae68	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400ae6b	     0xf843f010000	                            je 0x400afb0	     10375	option.c	FUNCTION_73
0x400ae71	            0x31d2	                            xor edx, edx	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ae73	          0x4c89ee	                            mov rsi, r13	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ae76	          0x4889ef	                            mov rdi, rbp	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ae79	      0xe800000000	                          call 0x400ae7e	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ae7e	            0x85c0	                           test eax, eax	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ae80	     0xf8552010000	                           jne 0x400afd8	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400ae86	      0x498b7424f0	             mov rsi, qword [r12 - 0x10]	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400ae8b	          0x4885f6	                           test rsi, rsi	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400ae8e	            0x7412	                            je 0x400aea2	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400ae90	            0x31d2	                            xor edx, edx	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400ae92	          0x4889ef	                            mov rdi, rbp	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400ae95	      0xe800000000	                          call 0x400ae9a	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400ae9a	            0x85c0	                           test eax, eax	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400ae9c	     0xf8536010000	                           jne 0x400afd8	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400aea2	          0x4585ff	                         test r15d, r15d	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400aea5	     0xf8565010000	                           jne 0x400b010	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400aeab	      0x488b442408	                mov rax, qword [rsp + 8]	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400aeb0	            0x8b10	                    mov edx, dword [rax]	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400aeb2	    0x660f1f440000	                    nop word [rax + rax]	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400aeb8	        0x4983c440	                           add r12, 0x40	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400aebc	      0x4d8b6c24e8	             mov r13, qword [r12 - 0x18]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400aec1	          0x4d85ed	                           test r13, r13	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400aec4	            0x742a	                            je 0x400aef0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400aec6	      0x49833c2400	                      cmp qword [r12], 0	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400aecb	            0x74eb	                            je 0x400aeb8	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400aecd	          0x83fa05	                              cmp edx, 5	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400aed0	            0x758e	                           jne 0x400ae60	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400aed2	    0x41f64424f801	                  test byte [r12 - 8], 1	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400aed8	            0x7586	                           jne 0x400ae60	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400aeda	        0x4983c440	                           add r12, 0x40	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400aede	      0x4d8b6c24e8	             mov r13, qword [r12 - 0x18]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400aee3	          0x4d85ed	                           test r13, r13	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400aee6	            0x75de	                           jne 0x400aec6	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400aee8	     0xf1f84000000	                   nop dword [rax + rax]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400aef0	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400aef5	          0x4585c9	                           test r9d, r9d	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400aef8	     0xf8583010000	                           jne 0x400b081	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400aefe	          0x4531ff	                          xor r15d, r15d	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400af01	          0x83fa05	                              cmp edx, 5	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400af04	            0x750e	                           jne 0x400af14	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400af06	      0xe976010000	                           jmp 0x400b081	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400af0b	       0xf1f440000	                   nop dword [rax + rax]	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400af10	        0x4183c701	                             add r15d, 1	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400af14	          0x4489ff	                           mov edi, r15d	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400af17	      0xe800000000	                          call 0x400af1c	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400af1c	          0x4885c0	                           test rax, rax	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400af1f	          0x4989c4	                            mov r12, rax	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400af22	     0xf849e010000	                            je 0x400b0c6	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400af28	      0xe800000000	                          call 0x400af2d	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400af2d	      0x410fb61424	                   movzx edx, byte [r12]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400af32	          0x488b00	                    mov rax, qword [rax]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400af35	      0xf644500140	      test byte [rax + rdx*2 + 1], 0x40 	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400af3a	            0x74d4	                            je 0x400af10	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400af3c	    0x410fb6542401	               movzx edx, byte [r12 + 1]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400af42	      0xf644500140	      test byte [rax + rdx*2 + 1], 0x40 	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400af47	            0x74c7	                            je 0x400af10	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400af49	      0xc644243074	            mov byte [rsp + 0x30], 0x74 	     11634	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400af4e	      0xc64424315f	            mov byte [rsp + 0x31], 0x5f 	     11635	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400af53	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400af58	      0x410fb60424	                   movzx eax, byte [r12]	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400af5d	            0x31d2	                            xor edx, edx	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400af5f	          0x4889ef	                            mov rdi, rbp	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400af62	        0x88442432	               mov byte [rsp + 0x32], al	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400af66	    0x410fb6442401	               movzx eax, byte [r12 + 1]	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400af6c	      0xc644243400	                mov byte [rsp + 0x34], 0	     11638	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400af71	        0x88442433	               mov byte [rsp + 0x33], al	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400af75	      0xe800000000	                          call 0x400af7a	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400af7a	            0x85c0	                           test eax, eax	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400af7c	     0xf8426020000	                            je 0x400b1a8	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400af82	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400af86	            0x85c9	                           test ecx, ecx	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400af88	     0xf84b3020000	                            je 0x400b241	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400af8e	          0x498b06	                    mov rax, qword [r14]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400af91	        0x448d6301	                     lea r12d, [rbx + 1]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400af95	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400af9a	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400af9e	      0xe800000000	                          call 0x400afa3	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400afa3	          0x488903	                    mov qword [rbx], rax	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400afa6	          0x4963dc	                        movsxd rbx, r12d	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400afa9	      0xe962ffffff	                           jmp 0x400af10	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400afae	            0x6690	                                     nop	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400afb0	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400afb4	     0xf85b7feffff	                           jne 0x400ae71	     10375	option.c	FUNCTION_73
0x400afba	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400afbf	          0x4585d2	                         test r10d, r10d	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400afc2	     0xf85f0feffff	                           jne 0x400aeb8	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400afc8	    0x41bf01000000	                             mov r15d, 1	     10375	option.c	FUNCTION_73
0x400afce	      0xe99efeffff	                           jmp 0x400ae71	     10375	option.c	FUNCTION_73
0x400afd3	       0xf1f440000	                   nop dword [rax + rax]	     10375	option.c	FUNCTION_73
0x400afd8	        0x8b742410	            mov esi, dword [rsp + 0x10] 	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400afdc	            0x85f6	                           test esi, esi	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400afde	     0xf841d020000	                            je 0x400b201	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400afe4	          0x498b06	                    mov rax, qword [r14]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400afe7	        0x448d7b01	                     lea r15d, [rbx + 1]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400afeb	          0x4c89ef	                            mov rdi, r13	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400afee	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400aff2	      0xe800000000	                          call 0x400aff7	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400aff7	          0x488903	                    mov qword [rbx], rax	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400affa	      0x488b442408	                mov rax, qword [rsp + 8]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400afff	          0x4963df	                        movsxd rbx, r15d	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400b002	            0x8b10	                    mov edx, dword [rax]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400b004	      0xe9affeffff	                           jmp 0x400aeb8	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400b009	     0xf1f80000000	                         nop dword [rax]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400b010	      0xc64424303c	            mov byte [rsp + 0x30], 0x3c 	     11598	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b015	      0xc644243174	            mov byte [rsp + 0x31], 0x74 	     11599	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b01a	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400b01f	      0xc64424325f	            mov byte [rsp + 0x32], 0x5f 	     11600	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b024	      0x410fb64502	               movzx eax, byte [r13 + 2]	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b029	            0x31d2	                            xor edx, edx	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400b02b	          0x4889ef	                            mov rdi, rbp	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400b02e	        0x88442433	               mov byte [rsp + 0x33], al	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b032	      0x410fb64503	               movzx eax, byte [r13 + 3]	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b037	      0xc64424353e	            mov byte [rsp + 0x35], 0x3e 	     11603	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b03c	      0xc644243600	                mov byte [rsp + 0x36], 0	     11604	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b041	        0x88442434	               mov byte [rsp + 0x34], al	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400b045	      0xe800000000	                          call 0x400b04a	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400b04a	            0x85c0	                           test eax, eax	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400b04c	     0xf8459feffff	                            je 0x400aeab	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400b052	        0x8b542410	            mov edx, dword [rsp + 0x10] 	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400b056	            0x85d2	                           test edx, edx	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400b058	     0xf8492010000	                            je 0x400b1f0	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400b05e	      0x4c8d6c2430	                   lea r13, [rsp + 0x30]	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x400b063	      0xe97cffffff	                           jmp 0x400afe4	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x400b068	        0x4d8b6500	                    mov r12, qword [r13]	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x400b06c	      0xe981fdffff	                           jmp 0x400adf2	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x400b071	    0x4c8b2d000000	            mov r13, qword [0x0400b078] 	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400b078	          0x4d85ed	                           test r13, r13	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400b07b	     0xf85d1fdffff	                           jne 0x400ae52	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400b081	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400b085	            0x85ff	                           test edi, edi	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400b087	     0xf84a3010000	                            je 0x400b230	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400b08d	      0x837c241001	               cmp dword [rsp + 0x10], 1	     11564	option.c	FUNCTION_89	FOR_1
0x400b092	            0x7528	                           jne 0x400b0bc	     11564	option.c	FUNCTION_89	FOR_1
0x400b094	      0xb801000000	                              mov eax, 1	     11691	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_9
0x400b099	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	     11701	option.c	FUNCTION_89
0x400b09e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     11701	option.c	FUNCTION_89
0x400b0a7	     0xf857e010000	                           jne 0x400b22b	     11701	option.c	FUNCTION_89
0x400b0ad	        0x4883c468	                           add rsp, 0x68	     11701	option.c	FUNCTION_89
0x400b0b1	              0x5b	                                 pop rbx	     11701	option.c	FUNCTION_89
0x400b0b2	              0x5d	                                 pop rbp	     11701	option.c	FUNCTION_89
0x400b0b3	            0x415c	                                 pop r12	     11701	option.c	FUNCTION_89
0x400b0b5	            0x415d	                                 pop r13	     11701	option.c	FUNCTION_89
0x400b0b7	            0x415e	                                 pop r14	     11701	option.c	FUNCTION_89
0x400b0b9	            0x415f	                                 pop r15	     11701	option.c	FUNCTION_89
0x400b0bb	              0xc3	                                     ret	     11701	option.c	FUNCTION_89
0x400b0bc	      0x8344241001	               add dword [rsp + 0x10], 1	     11701	option.c	FUNCTION_89
0x400b0c1	      0xe906fdffff	                           jmp 0x400adcc	     11701	option.c	FUNCTION_89
0x400b0c6	    0xc785a8000000	               mov dword [rbp + 0xa8], 1	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400b0d0	          0x4531ff	                          xor r15d, r15d	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b0d3	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b0d8	            0xeb6f	                           jmp 0x400b149	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b0da	    0x660f1f440000	                    nop word [rax + rax]	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b0e0	      0xba1f000000	                           mov edx, 0x1f	       110	string3.h	FUNCTION_126	CALL_3
0x400b0e5	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_126	CALL_3
0x400b0e8	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_126	CALL_3
0x400b0eb	      0xc64424303c	            mov byte [rsp + 0x30], 0x3c 	     11671	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5
0x400b0f0	      0xe800000000	                          call 0x400b0f5	       110	string3.h	FUNCTION_126	CALL_3
0x400b0f5	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       148	string3.h	FUNCTION_130	CALL_3
0x400b0fa	      0xba20000000	                           mov edx, 0x20	       148	string3.h	FUNCTION_130	CALL_3
0x400b0ff	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_130	CALL_3
0x400b104	      0xe800000000	                          call 0x400b109	       148	string3.h	FUNCTION_130	CALL_3
0x400b109	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400b10e	            0x31d2	                            xor edx, edx	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400b110	          0x4889ef	                            mov rdi, rbp	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400b113	      0xe800000000	                          call 0x400b118	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400b118	            0x85c0	                           test eax, eax	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400b11a	            0x7429	                            je 0x400b145	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400b11c	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	     11677	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x400b121	          0x4585c0	                           test r8d, r8d	     11677	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x400b124	     0xf84f7000000	                            je 0x400b221	     11677	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x400b12a	          0x498b06	                    mov rax, qword [r14]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400b12d	        0x448d6b01	                     lea r13d, [rbx + 1]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400b131	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400b136	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400b13a	      0xe800000000	                          call 0x400b13f	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400b13f	          0x488903	                    mov qword [rbx], rax	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400b142	          0x4963dd	                        movsxd rbx, r13d	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400b145	        0x4183c701	                             add r15d, 1	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b149	          0x4489ff	                           mov edi, r15d	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b14c	      0xe800000000	                          call 0x400b151	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b151	          0x4885c0	                           test rax, rax	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b154	            0x758a	                           jne 0x400b0e0	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400b156	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400b15a	    0xc74424140000	               mov dword [rsp + 0x14], 0	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400b162	            0x85c0	                           test eax, eax	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400b164	     0xf8523ffffff	                           jne 0x400b08d	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400b16a	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400b16e	            0x85c0	                           test eax, eax	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400b170	     0xf841effffff	                            je 0x400b094	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400b176	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400b17b	    0x8d3cc5000000	                        lea edi, [rax*8]	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x400b182	            0x8901	                    mov dword [rcx], eax	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400b184	      0xe800000000	                          call 0x400b189	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x400b189	          0x4885c0	                           test rax, rax	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400b18c	          0x498906	                    mov qword [r14], rax	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x400b18f	     0xf8527ffffff	                           jne 0x400b0bc	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400b195	    0x49c706000000	                      mov qword [r14], 0	     11695	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400b19c	      0xe9f8feffff	                           jmp 0x400b099	     11696	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400b1a1	     0xf1f80000000	                         nop dword [rax]	     11696	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400b1a8	      0xc64424303c	            mov byte [rsp + 0x30], 0x3c 	     11645	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1ad	      0xc644243174	            mov byte [rsp + 0x31], 0x74 	     11646	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1b2	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400b1b7	      0xc64424325f	            mov byte [rsp + 0x32], 0x5f 	     11647	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1bc	      0x410fb60424	                   movzx eax, byte [r12]	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1c1	            0x31d2	                            xor edx, edx	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400b1c3	          0x4889ef	                            mov rdi, rbp	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400b1c6	        0x88442433	               mov byte [rsp + 0x33], al	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1ca	    0x410fb6442401	               movzx eax, byte [r12 + 1]	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1d0	      0xc64424353e	            mov byte [rsp + 0x35], 0x3e 	     11650	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1d5	      0xc644243600	                mov byte [rsp + 0x36], 0	     11651	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1da	        0x88442434	               mov byte [rsp + 0x34], al	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400b1de	      0xe800000000	                          call 0x400b1e3	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400b1e3	            0x85c0	                           test eax, eax	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400b1e5	     0xf8597fdffff	                           jne 0x400af82	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400b1eb	      0xe920fdffff	                           jmp 0x400af10	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400b1f0	      0x488b442408	                mov rax, qword [rsp + 8]	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400b1f5	      0x8344241c01	               add dword [rsp + 0x1c], 1	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400b1fa	            0x8b10	                    mov edx, dword [rax]	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400b1fc	      0xe9b7fcffff	                           jmp 0x400aeb8	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400b201	          0x4585ff	                         test r15d, r15d	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400b204	            0x75ea	                           jne 0x400b1f0	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400b206	      0x488b442408	                mov rax, qword [rsp + 8]	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400b20b	      0x8344241401	               add dword [rsp + 0x14], 1	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x400b210	            0x8b10	                    mov edx, dword [rax]	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x400b212	      0xe9a1fcffff	                           jmp 0x400aeb8	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x400b217	      0x8344241401	               add dword [rsp + 0x14], 1	     11574	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400b21c	      0xe909fcffff	                           jmp 0x400ae2a	     11574	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400b221	      0x8344241c01	               add dword [rsp + 0x1c], 1	     11678	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x400b226	      0xe91affffff	                           jmp 0x400b145	     11678	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x400b22b	      0xe800000000	                          call 0x400b230	     11701	option.c	FUNCTION_89
0x400b230	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x400b234	            0x85c0	                           test eax, eax	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x400b236	     0xf853affffff	                           jne 0x400b176	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x400b23c	      0xe929ffffff	                           jmp 0x400b16a	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x400b241	      0x8344241c01	               add dword [rsp + 0x1c], 1	     11659	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400b246	      0xe9c5fcffff	                           jmp 0x400af10	     11659	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
did_set_spell_option	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,4:IF,4:functions,0:DO,0	43
0x4000790	            0x85ff	                           test edi, edi	      8042	option.c	FUNCTION_46	IF_1
0x4000792	              0x53	                                push rbx	      8037	option.c	FUNCTION_46
0x4000793	            0x7443	                            je 0x40007d8	      8042	option.c	FUNCTION_46	IF_1
0x4000795	    0x488b05000000	            mov rax, qword [0x0400079c] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x400079c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x40007a0	    0x488b98780400	           mov rbx, qword [rax + 0x478] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x40007a7	          0x4889df	                            mov rdi, rbx	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x40007aa	      0xe800000000	                          call 0x40007af	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x40007af	            0x85c0	                           test eax, eax	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40007b1	            0x7e25	                           jle 0x40007d8	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40007b3	          0x83f803	                              cmp eax, 3	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40007b6	            0x7f08	                            jg 0x40007c0	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40007b8	      0xb800000000	                              mov eax, 0	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x40007bd	              0x5b	                                 pop rbx	      8060	option.c	FUNCTION_46
0x40007be	              0xc3	                                     ret	      8060	option.c	FUNCTION_46
0x40007bf	              0x90	                                     nop	      8060	option.c	FUNCTION_46
0x40007c0	            0x4898	                                    cdqe	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40007c2	      0xbf00000000	                              mov edi, 0	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40007c7	      0xb905000000	                              mov ecx, 5	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40007cc	      0x488d7403fc	                lea rsi, [rbx + rax - 4]	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40007d1	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40007d3	            0x75e3	                           jne 0x40007b8	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40007d5	           0xf1f00	                         nop dword [rax]	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40007d8	    0x488b3d000000	            mov rdi, qword [0x040007df] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007df	          0x4885ff	                           test rdi, rdi	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007e2	            0x742c	                            je 0x4000810	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007e4	    0x488b05000000	            mov rax, qword [0x040007eb] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007eb	            0xeb0c	                           jmp 0x40007f9	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007ed	           0xf1f00	                         nop dword [rax]	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007f0	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007f4	          0x4885ff	                           test rdi, rdi	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007f7	            0x7417	                            je 0x4000810	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x40007f9	        0x48394708	                cmp qword [rdi + 8], rax	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x40007fd	            0x75f1	                           jne 0x40007f0	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x40007ff	    0x8b9768020000	           mov edx, dword [rdi + 0x268] 	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4000805	            0x85d2	                           test edx, edx	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4000807	            0x74e7	                            je 0x40007f0	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4000809	              0x5b	                                 pop rbx	      8060	option.c	FUNCTION_46
0x400080a	      0xe900000000	                           jmp 0x400080f	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x400080f	              0x90	                                     nop	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x4000810	            0x31c0	                            xor eax, eax	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4000812	              0x5b	                                 pop rbx	      8060	option.c	FUNCTION_46
0x4000813	              0xc3	                                     ret	      8060	option.c	FUNCTION_46
option_expand	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,3:IF,4:functions,0:DO,0	51
0x4000ca0	          0x4863ff	                         movsxd rdi, edi	      5522	option.c	FUNCTION_25	IF_1
0x4000ca3	              0x55	                                push rbp	      5520	option.c	FUNCTION_25
0x4000ca4	              0x53	                                push rbx	      5520	option.c	FUNCTION_25
0x4000ca5	        0x48c1e706	                              shl rdi, 6	      5522	option.c	FUNCTION_25	IF_1
0x4000ca9	    0x4881c7000000	                              add rdi, 0	      5522	option.c	FUNCTION_25	IF_1
0x4000cb0	        0x4883ec08	                              sub rsp, 8	      5520	option.c	FUNCTION_25
0x4000cb4	        0xf6471010	           test byte [rdi + 0x10], 0x10 	      5522	option.c	FUNCTION_25	IF_1
0x4000cb8	            0x747e	                            je 0x4000d38	      5522	option.c	FUNCTION_25	IF_1
0x4000cba	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	      5522	option.c	FUNCTION_25	IF_1
0x4000cbe	          0x4885ed	                           test rbp, rbp	      5522	option.c	FUNCTION_25	IF_1
0x4000cc1	            0x7475	                            je 0x4000d38	      5522	option.c	FUNCTION_25	IF_1
0x4000cc3	          0x4885f6	                           test rsi, rsi	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4000cc6	          0x4889f3	                            mov rbx, rsi	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4000cc9	            0x747d	                            je 0x4000d48	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4000ccb	          0x4889f7	                            mov rdi, rsi	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4000cce	      0xe800000000	                          call 0x4000cd3	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4000cd3	    0x483d00100000	                         cmp rax, 0x1000	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4000cd9	            0x775d	                            ja 0x4000d38	      5527	option.c	FUNCTION_25	IF_2	CALL_1
0x4000cdb	    0x4881fd000000	                              cmp rbp, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4000ce2	      0xb800000000	                              mov eax, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4000ce7	    0x488b35000000	            mov rsi, qword [0x04000cee] 	      5539	option.c	FUNCTION_25	CALL_2
0x4000cee	    0x41b900000000	                              mov r9d, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4000cf4	      0xba00100000	                         mov edx, 0x1000	      5539	option.c	FUNCTION_25	CALL_2
0x4000cf9	          0x4889df	                            mov rdi, rbx	      5539	option.c	FUNCTION_25	CALL_2
0x4000cfc	        0x4c0f44c8	                           cmove r9, rax	      5539	option.c	FUNCTION_25	CALL_2
0x4000d00	            0x31c9	                            xor ecx, ecx	      5539	option.c	FUNCTION_25	CALL_2
0x4000d02	    0x4881fd000000	                              cmp rbp, 0	      5539	option.c	FUNCTION_25	CALL_2
0x4000d09	           0xf94c1	                                 sete cl	      5539	option.c	FUNCTION_25	CALL_2
0x4000d0c	          0x4531c0	                            xor r8d, r8d	      5539	option.c	FUNCTION_25	CALL_2
0x4000d0f	      0xe800000000	                          call 0x4000d14	      5539	option.c	FUNCTION_25	CALL_2
0x4000d14	    0x488b2d000000	            mov rbp, qword [0x04000d1b] 	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4000d1b	          0x4889de	                            mov rsi, rbx	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4000d1e	          0x4889ef	                            mov rdi, rbp	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4000d21	      0xe800000000	                          call 0x4000d26	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4000d26	            0x85c0	                           test eax, eax	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4000d28	            0x740e	                            je 0x4000d38	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4000d2a	        0x4883c408	                              add rsp, 8	      5549	option.c	FUNCTION_25
0x4000d2e	          0x4889e8	                            mov rax, rbp	      5549	option.c	FUNCTION_25
0x4000d31	              0x5b	                                 pop rbx	      5549	option.c	FUNCTION_25
0x4000d32	              0x5d	                                 pop rbp	      5549	option.c	FUNCTION_25
0x4000d33	              0xc3	                                     ret	      5549	option.c	FUNCTION_25
0x4000d34	         0xf1f4000	                         nop dword [rax]	      5549	option.c	FUNCTION_25
0x4000d38	            0x31ed	                            xor ebp, ebp	      5523	option.c	FUNCTION_25	IF_1
0x4000d3a	        0x4883c408	                              add rsp, 8	      5549	option.c	FUNCTION_25
0x4000d3e	          0x4889e8	                            mov rax, rbp	      5549	option.c	FUNCTION_25
0x4000d41	              0x5b	                                 pop rbx	      5549	option.c	FUNCTION_25
0x4000d42	              0x5d	                                 pop rbp	      5549	option.c	FUNCTION_25
0x4000d43	              0xc3	                                     ret	      5549	option.c	FUNCTION_25
0x4000d44	         0xf1f4000	                         nop dword [rax]	      5549	option.c	FUNCTION_25
0x4000d48	        0x488b5d00	                    mov rbx, qword [rbp]	      5531	option.c	FUNCTION_25	IF_3
0x4000d4c	            0xeb8d	                           jmp 0x4000cdb	      5531	option.c	FUNCTION_25	IF_3
set_option_scriptID_idx	WHILE,0:FOR,0:ELSE,1:SWITCH,0:CALL,0:IF,4:functions,0:DO,0	32
0x4000170	          0x4863ff	                         movsxd rdi, edi	      8104	option.c	FUNCTION_48
0x4000173	          0x4889f8	                            mov rax, rdi	      8104	option.c	FUNCTION_48
0x4000176	        0x48c1e006	                              shl rax, 6	      8104	option.c	FUNCTION_48
0x400017a	    0x480500000000	                              add rax, 0	      8104	option.c	FUNCTION_48
0x4000180	        0x40f6c606	                             test sil, 6	      8108	option.c	FUNCTION_48	IF_1
0x4000184	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      8104	option.c	FUNCTION_48
0x4000187	            0x7417	                            je 0x40001a0	      8108	option.c	FUNCTION_48	IF_1
0x4000189	        0x40f6c602	                             test sil, 2	      8108	option.c	FUNCTION_48	IF_1
0x400018d	            0x7451	                            je 0x40001e0	      8108	option.c	FUNCTION_48	IF_1
0x400018f	        0x48c1e706	                              shl rdi, 6	      8109	option.c	FUNCTION_48	IF_1
0x4000193	    0x899700000000	                    mov dword [rdi], edx	      8109	option.c	FUNCTION_48	IF_1
0x4000199	          0x83e604	                              and esi, 4	      8110	option.c	FUNCTION_48	IF_2
0x400019c	            0x7505	                           jne 0x40001a3	      8110	option.c	FUNCTION_48	IF_2
0x400019e	            0xf3c3	                                     ret	      8110	option.c	FUNCTION_48	IF_2
0x40001a0	          0x895038	             mov dword [rax + 0x38], edx	      8109	option.c	FUNCTION_48	IF_1
0x40001a3	          0xf6c540	                           test ch, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x40001a6	            0x7520	                           jne 0x40001c8	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x40001a8	          0xf6c520	                           test ch, 0x20	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001ab	            0x74f1	                            je 0x400019e	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001ad	    0x488b05000000	            mov rax, qword [0x040001b4] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001b4	    0x81e1ff0f0000	                          and ecx, 0xfff	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001ba	    0x899488d00200	    mov dword [rax + rcx*4 + 0x2d0], edx	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x40001c1	              0xc3	                                     ret	      8117	option.c	FUNCTION_48
0x40001c2	    0x660f1f440000	                    nop word [rax + rax]	      8117	option.c	FUNCTION_48
0x40001c8	    0x488b05000000	            mov rax, qword [0x040001cf] 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001cf	    0x81e1ff0f0000	                          and ecx, 0xfff	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001d5	    0x899488ac1200	  mov dword [rax + rcx*4 + 0x12ac], edx 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001dc	              0xc3	                                     ret	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001dd	           0xf1f00	                         nop dword [rax]	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40001e0	          0xf6c560	                           test ch, 0x60	      8108	option.c	FUNCTION_48	IF_1
0x40001e3	            0x74aa	                            je 0x400018f	      8108	option.c	FUNCTION_48	IF_1
0x40001e5	            0xebb2	                           jmp 0x4000199	      8108	option.c	FUNCTION_48	IF_1
file_ff_differs	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,2:IF,6:functions,0:DO,0	68
0x400ee50	          0x8b477c	            mov eax, dword [rdi + 0x7c] 	     12486	option.c	FUNCTION_111	IF_1
0x400ee53	            0xa804	                              test al, 4	     12486	option.c	FUNCTION_111	IF_1
0x400ee55	            0x7579	                           jne 0x400eed0	     12486	option.c	FUNCTION_111	IF_1
0x400ee57	            0x85f6	                           test esi, esi	     12488	option.c	FUNCTION_111	IF_2
0x400ee59	              0x53	                                push rbx	     12484	option.c	FUNCTION_111
0x400ee5a	          0x4889fb	                            mov rbx, rdi	     12484	option.c	FUNCTION_111
0x400ee5d	            0x740e	                            je 0x400ee6d	     12488	option.c	FUNCTION_111	IF_2
0x400ee5f	            0xa810	                           test al, 0x10	     12489	option.c	FUNCTION_111	IF_2
0x400ee61	            0x740a	                            je 0x400ee6d	     12489	option.c	FUNCTION_111	IF_2
0x400ee63	        0x48833f01	                      cmp qword [rdi], 1	     12490	option.c	FUNCTION_111	IF_2
0x400ee67	     0xf84a3000000	                            je 0x400ef10	     12490	option.c	FUNCTION_111	IF_2
0x400ee6d	    0x488b83901400	          mov rax, qword [rbx + 0x1490] 	     12493	option.c	FUNCTION_111	IF_3
0x400ee74	           0xfb610	                   movzx edx, byte [rax]	     12493	option.c	FUNCTION_111	IF_3
0x400ee77	      0xb801000000	                              mov eax, 1	     12494	option.c	FUNCTION_111	IF_3
0x400ee7c	    0x399304170000	          cmp dword [rbx + 0x1704], edx 	     12493	option.c	FUNCTION_111	IF_3
0x400ee82	            0x740c	                            je 0x400ee90	     12493	option.c	FUNCTION_111	IF_3
0x400ee84	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x400ee85	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x400ee86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12506	option.c	FUNCTION_111
0x400ee90	    0x8b8b08140000	          mov ecx, dword [rbx + 0x1408] 	     12495	option.c	FUNCTION_111	IF_4
0x400ee96	            0x85c9	                           test ecx, ecx	     12495	option.c	FUNCTION_111	IF_4
0x400ee98	            0x743e	                            je 0x400eed8	     12495	option.c	FUNCTION_111	IF_4
0x400ee9a	    0x8b8b70140000	          mov ecx, dword [rbx + 0x1470] 	     12495	option.c	FUNCTION_111	IF_4
0x400eea0	    0x398b00170000	          cmp dword [rbx + 0x1700], ecx 	     12495	option.c	FUNCTION_111	IF_4
0x400eea6	            0x75dc	                           jne 0x400ee84	     12495	option.c	FUNCTION_111	IF_4
0x400eea8	    0x488bbb081700	          mov rdi, qword [rbx + 0x1708] 	     12500	option.c	FUNCTION_111	IF_6
0x400eeaf	          0x4885ff	                           test rdi, rdi	     12500	option.c	FUNCTION_111	IF_6
0x400eeb2	            0x7475	                            je 0x400ef29	     12500	option.c	FUNCTION_111	IF_6
0x400eeb4	    0x488bb3881400	          mov rsi, qword [rbx + 0x1488] 	     12502	option.c	FUNCTION_111	CALL_2
0x400eebb	      0xe800000000	                          call 0x400eec0	     12502	option.c	FUNCTION_111	CALL_2
0x400eec0	            0x85c0	                           test eax, eax	     12502	option.c	FUNCTION_111	CALL_2
0x400eec2	           0xf95c0	                                setne al	     12502	option.c	FUNCTION_111	CALL_2
0x400eec5	           0xfb6c0	                           movzx eax, al	     12502	option.c	FUNCTION_111	CALL_2
0x400eec8	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x400eec9	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x400eeca	    0x660f1f440000	                    nop word [rax + rax]	     12506	option.c	FUNCTION_111
0x400eed0	            0x31c0	                            xor eax, eax	     12487	option.c	FUNCTION_111	IF_1
0x400eed2	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x400eed3	       0xf1f440000	                   nop dword [rax + rax]	     12506	option.c	FUNCTION_111
0x400eed8	    0x8b9374140000	          mov edx, dword [rbx + 0x1474] 	     12495	option.c	FUNCTION_111	IF_4
0x400eede	            0x85d2	                           test edx, edx	     12495	option.c	FUNCTION_111	IF_4
0x400eee0	            0x741e	                            je 0x400ef00	     12495	option.c	FUNCTION_111	IF_4
0x400eee2	    0x8b8b0c140000	          mov ecx, dword [rbx + 0x140c] 	     12498	option.c	FUNCTION_111	IF_5
0x400eee8	    0x398b14170000	          cmp dword [rbx + 0x1714], ecx 	     12498	option.c	FUNCTION_111	IF_5
0x400eeee	      0xb801000000	                              mov eax, 1	     12494	option.c	FUNCTION_111	IF_3
0x400eef3	            0x74b3	                            je 0x400eea8	     12498	option.c	FUNCTION_111	IF_5
0x400eef5	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x400eef6	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x400eef7	    0x660f1f840000	                    nop word [rax + rax]	     12506	option.c	FUNCTION_111
0x400ef00	    0x8b8b00170000	          mov ecx, dword [rbx + 0x1700] 	     12495	option.c	FUNCTION_111	IF_4
0x400ef06	    0x398b70140000	          cmp dword [rbx + 0x1470], ecx 	     12495	option.c	FUNCTION_111	IF_4
0x400ef0c	            0x74d4	                            je 0x400eee2	     12495	option.c	FUNCTION_111	IF_4
0x400ef0e	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x400ef0f	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x400ef10	            0x31d2	                            xor edx, edx	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400ef12	      0xbe01000000	                              mov esi, 1	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400ef17	      0xe800000000	                          call 0x400ef1c	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400ef1c	          0x803800	                       cmp byte [rax], 0	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400ef1f	     0xf8548ffffff	                           jne 0x400ee6d	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x400ef25	            0x31c0	                            xor eax, eax	     12487	option.c	FUNCTION_111	IF_1
0x400ef27	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x400ef28	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x400ef29	    0x488b83881400	          mov rax, qword [rbx + 0x1488] 	     12501	option.c	FUNCTION_111	IF_6
0x400ef30	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x400ef31	          0x803800	                       cmp byte [rax], 0	     12501	option.c	FUNCTION_111	IF_6
0x400ef34	           0xf95c0	                                setne al	     12501	option.c	FUNCTION_111	IF_6
0x400ef37	           0xfb6c0	                           movzx eax, al	     12501	option.c	FUNCTION_111	IF_6
0x400ef3a	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
check_buf_options	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,50:IF,0:functions,0:DO,0	345
0x4003a90	              0x53	                                push rbx	      5647	option.c	FUNCTION_29
0x4003a91	    0x4883bf101400	             cmp qword [rdi + 0x1410], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003a99	          0x4889fb	                            mov rbx, rdi	      5647	option.c	FUNCTION_29
0x4003a9c	     0xf84ce020000	                            je 0x4003d70	      5771	option.c	FUNCTION_32	IF_1
0x4003aa2	    0x4883bb181400	             cmp qword [rbx + 0x1418], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003aaa	     0xf84e0020000	                            je 0x4003d90	      5771	option.c	FUNCTION_32	IF_1
0x4003ab0	    0x4883bb881400	             cmp qword [rbx + 0x1488], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ab8	     0xf84f2020000	                            je 0x4003db0	      5771	option.c	FUNCTION_32	IF_1
0x4003abe	    0x4883bb901400	             cmp qword [rbx + 0x1490], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ac6	     0xf8404030000	                            je 0x4003dd0	      5771	option.c	FUNCTION_32	IF_1
0x4003acc	    0x4883bbc01400	             cmp qword [rbx + 0x14c0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ad4	     0xf8416030000	                            je 0x4003df0	      5771	option.c	FUNCTION_32	IF_1
0x4003ada	    0x4883bbc81400	             cmp qword [rbx + 0x14c8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ae2	     0xf8428030000	                            je 0x4003e10	      5771	option.c	FUNCTION_32	IF_1
0x4003ae8	    0x4883bbd01400	             cmp qword [rbx + 0x14d0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003af0	     0xf843a030000	                            je 0x4003e30	      5771	option.c	FUNCTION_32	IF_1
0x4003af6	    0x4883bbe01400	             cmp qword [rbx + 0x14e0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003afe	     0xf844c030000	                            je 0x4003e50	      5771	option.c	FUNCTION_32	IF_1
0x4003b04	    0x4883bbf01400	             cmp qword [rbx + 0x14f0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b0c	     0xf845e030000	                            je 0x4003e70	      5771	option.c	FUNCTION_32	IF_1
0x4003b12	    0x4883bb381700	             cmp qword [rbx + 0x1738], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b1a	     0xf8470030000	                            je 0x4003e90	      5771	option.c	FUNCTION_32	IF_1
0x4003b20	    0x4883bb481700	             cmp qword [rbx + 0x1748], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b28	     0xf8482030000	                            je 0x4003eb0	      5771	option.c	FUNCTION_32	IF_1
0x4003b2e	    0x4883bbf81400	             cmp qword [rbx + 0x14f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b36	     0xf8494030000	                            je 0x4003ed0	      5771	option.c	FUNCTION_32	IF_1
0x4003b3c	    0x4883bb001500	             cmp qword [rbx + 0x1500], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b44	     0xf84a6030000	                            je 0x4003ef0	      5771	option.c	FUNCTION_32	IF_1
0x4003b4a	    0x4883bb101500	             cmp qword [rbx + 0x1510], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b52	     0xf84b8030000	                            je 0x4003f10	      5771	option.c	FUNCTION_32	IF_1
0x4003b58	    0x4883bb181500	             cmp qword [rbx + 0x1518], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b60	     0xf84ca030000	                            je 0x4003f30	      5771	option.c	FUNCTION_32	IF_1
0x4003b66	    0x4883bb301500	             cmp qword [rbx + 0x1530], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b6e	     0xf84dc030000	                            je 0x4003f50	      5771	option.c	FUNCTION_32	IF_1
0x4003b74	    0x4883bba01400	             cmp qword [rbx + 0x14a0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b7c	     0xf84ee030000	                            je 0x4003f70	      5771	option.c	FUNCTION_32	IF_1
0x4003b82	    0x4883bba81400	             cmp qword [rbx + 0x14a8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b8a	     0xf8400040000	                            je 0x4003f90	      5771	option.c	FUNCTION_32	IF_1
0x4003b90	    0x4883bbb81400	             cmp qword [rbx + 0x14b8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003b98	     0xf8412040000	                            je 0x4003fb0	      5771	option.c	FUNCTION_32	IF_1
0x4003b9e	    0x4883bb481400	             cmp qword [rbx + 0x1448], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ba6	     0xf8424040000	                            je 0x4003fd0	      5771	option.c	FUNCTION_32	IF_1
0x4003bac	    0x4883bb501400	             cmp qword [rbx + 0x1450], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003bb4	     0xf8436040000	                            je 0x4003ff0	      5771	option.c	FUNCTION_32	IF_1
0x4003bba	    0x4883bb481500	             cmp qword [rbx + 0x1548], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003bc2	     0xf8448040000	                            je 0x4004010	      5771	option.c	FUNCTION_32	IF_1
0x4003bc8	    0x4883bb581500	             cmp qword [rbx + 0x1558], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003bd0	     0xf845a040000	                            je 0x4004030	      5771	option.c	FUNCTION_32	IF_1
0x4003bd6	    0x4883bba01500	             cmp qword [rbx + 0x15a0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003bde	     0xf846c040000	                            je 0x4004050	      5771	option.c	FUNCTION_32	IF_1
0x4003be4	    0x4883bb181c00	             cmp qword [rbx + 0x1c18], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003bec	     0xf847e040000	                            je 0x4004070	      5771	option.c	FUNCTION_32	IF_1
0x4003bf2	    0x4883bbd01b00	             cmp qword [rbx + 0x1bd0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003bfa	     0xf8490040000	                            je 0x4004090	      5771	option.c	FUNCTION_32	IF_1
0x4003c00	    0x4883bbe01b00	             cmp qword [rbx + 0x1be0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c08	     0xf84a2040000	                            je 0x40040b0	      5771	option.c	FUNCTION_32	IF_1
0x4003c0e	    0x4883bbe81b00	             cmp qword [rbx + 0x1be8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c16	     0xf84b4040000	                            je 0x40040d0	      5771	option.c	FUNCTION_32	IF_1
0x4003c1c	    0x4883bb881500	             cmp qword [rbx + 0x1588], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c24	     0xf84c6040000	                            je 0x40040f0	      5771	option.c	FUNCTION_32	IF_1
0x4003c2a	    0x4883bb381400	             cmp qword [rbx + 0x1438], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c32	     0xf84d8040000	                            je 0x4004110	      5771	option.c	FUNCTION_32	IF_1
0x4003c38	    0x4883bb301400	             cmp qword [rbx + 0x1430], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c40	     0xf84ea040000	                            je 0x4004130	      5771	option.c	FUNCTION_32	IF_1
0x4003c46	          0x4889df	                            mov rdi, rbx	      5708	option.c	FUNCTION_29	CALL_32
0x4003c49	      0xe800000000	                          call 0x4003c4e	      5708	option.c	FUNCTION_29	CALL_32
0x4003c4e	    0x4883bb981400	             cmp qword [rbx + 0x1498], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c56	     0xf84ec040000	                            je 0x4004148	      5771	option.c	FUNCTION_32	IF_1
0x4003c5c	    0x4883bb401400	             cmp qword [rbx + 0x1440], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c64	     0xf84fe040000	                            je 0x4004168	      5771	option.c	FUNCTION_32	IF_1
0x4003c6a	    0x4883bb581400	             cmp qword [rbx + 0x1458], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c72	     0xf8410050000	                            je 0x4004188	      5771	option.c	FUNCTION_32	IF_1
0x4003c78	    0x4883bb601400	             cmp qword [rbx + 0x1460], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c80	     0xf8422050000	                            je 0x40041a8	      5771	option.c	FUNCTION_32	IF_1
0x4003c86	    0x4883bb681400	             cmp qword [rbx + 0x1468], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c8e	     0xf8434050000	                            je 0x40041c8	      5771	option.c	FUNCTION_32	IF_1
0x4003c94	    0x4883bbe81500	             cmp qword [rbx + 0x15e8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003c9c	     0xf8446050000	                            je 0x40041e8	      5771	option.c	FUNCTION_32	IF_1
0x4003ca2	    0x4883bbf01500	             cmp qword [rbx + 0x15f0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003caa	     0xf8458050000	                            je 0x4004208	      5771	option.c	FUNCTION_32	IF_1
0x4003cb0	    0x4883bbf81500	             cmp qword [rbx + 0x15f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003cb8	     0xf846a050000	                            je 0x4004228	      5771	option.c	FUNCTION_32	IF_1
0x4003cbe	    0x4883bb001600	             cmp qword [rbx + 0x1600], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003cc6	     0xf847c050000	                            je 0x4004248	      5771	option.c	FUNCTION_32	IF_1
0x4003ccc	    0x4883bb081600	             cmp qword [rbx + 0x1608], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003cd4	     0xf848e050000	                            je 0x4004268	      5771	option.c	FUNCTION_32	IF_1
0x4003cda	    0x4883bb101600	             cmp qword [rbx + 0x1610], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ce2	     0xf84a0050000	                            je 0x4004288	      5771	option.c	FUNCTION_32	IF_1
0x4003ce8	    0x4883bb201600	             cmp qword [rbx + 0x1620], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003cf0	     0xf84b2050000	                            je 0x40042a8	      5771	option.c	FUNCTION_32	IF_1
0x4003cf6	    0x4883bb281600	             cmp qword [rbx + 0x1628], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003cfe	     0xf84c4050000	                            je 0x40042c8	      5771	option.c	FUNCTION_32	IF_1
0x4003d04	    0x4883bb381600	             cmp qword [rbx + 0x1638], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d0c	     0xf84d6050000	                            je 0x40042e8	      5771	option.c	FUNCTION_32	IF_1
0x4003d12	    0x4883bb401600	             cmp qword [rbx + 0x1640], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d1a	     0xf84e8050000	                            je 0x4004308	      5771	option.c	FUNCTION_32	IF_1
0x4003d20	    0x4883bb581600	             cmp qword [rbx + 0x1658], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d28	     0xf84fa050000	                            je 0x4004328	      5771	option.c	FUNCTION_32	IF_1
0x4003d2e	    0x4883bbf81300	             cmp qword [rbx + 0x13f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d36	            0x7428	                            je 0x4003d60	      5771	option.c	FUNCTION_32	IF_1
0x4003d38	    0x4883bb281500	             cmp qword [rbx + 0x1528], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d40	            0x7406	                            je 0x4003d48	      5771	option.c	FUNCTION_32	IF_1
0x4003d42	              0x5b	                                 pop rbx	      5744	option.c	FUNCTION_29
0x4003d43	              0xc3	                                     ret	      5744	option.c	FUNCTION_29
0x4003d44	         0xf1f4000	                         nop dword [rax]	      5744	option.c	FUNCTION_29
0x4003d48	    0x488b05000000	            mov rax, qword [0x04003d4f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003d4f	    0x488983281500	          mov qword [rbx + 0x1528], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003d56	              0x5b	                                 pop rbx	      5744	option.c	FUNCTION_29
0x4003d57	              0xc3	                                     ret	      5744	option.c	FUNCTION_29
0x4003d58	     0xf1f84000000	                   nop dword [rax + rax]	      5744	option.c	FUNCTION_29
0x4003d60	    0x488b05000000	            mov rax, qword [0x04003d67] 	      5772	option.c	FUNCTION_32	IF_1
0x4003d67	    0x488983f81300	          mov qword [rbx + 0x13f8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003d6e	            0xebc8	                           jmp 0x4003d38	      5772	option.c	FUNCTION_32	IF_1
0x4003d70	    0x488b05000000	            mov rax, qword [0x04003d77] 	      5772	option.c	FUNCTION_32	IF_1
0x4003d77	    0x488987101400	          mov qword [rdi + 0x1410], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003d7e	    0x4883bb181400	             cmp qword [rbx + 0x1418], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d86	     0xf8524fdffff	                           jne 0x4003ab0	      5771	option.c	FUNCTION_32	IF_1
0x4003d8c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003d90	    0x4883bb881400	             cmp qword [rbx + 0x1488], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d98	    0x488b05000000	            mov rax, qword [0x04003d9f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003d9f	    0x488983181400	          mov qword [rbx + 0x1418], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003da6	     0xf8512fdffff	                           jne 0x4003abe	      5771	option.c	FUNCTION_32	IF_1
0x4003dac	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003db0	    0x4883bb901400	             cmp qword [rbx + 0x1490], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003db8	    0x488b05000000	            mov rax, qword [0x04003dbf] 	      5772	option.c	FUNCTION_32	IF_1
0x4003dbf	    0x488983881400	          mov qword [rbx + 0x1488], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003dc6	     0xf8500fdffff	                           jne 0x4003acc	      5771	option.c	FUNCTION_32	IF_1
0x4003dcc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003dd0	    0x4883bbc01400	             cmp qword [rbx + 0x14c0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003dd8	    0x488b05000000	            mov rax, qword [0x04003ddf] 	      5772	option.c	FUNCTION_32	IF_1
0x4003ddf	    0x488983901400	          mov qword [rbx + 0x1490], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003de6	     0xf85eefcffff	                           jne 0x4003ada	      5771	option.c	FUNCTION_32	IF_1
0x4003dec	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003df0	    0x4883bbc81400	             cmp qword [rbx + 0x14c8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003df8	    0x488b05000000	            mov rax, qword [0x04003dff] 	      5772	option.c	FUNCTION_32	IF_1
0x4003dff	    0x488983c01400	          mov qword [rbx + 0x14c0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003e06	     0xf85dcfcffff	                           jne 0x4003ae8	      5771	option.c	FUNCTION_32	IF_1
0x4003e0c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003e10	    0x4883bbd01400	             cmp qword [rbx + 0x14d0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e18	    0x488b05000000	            mov rax, qword [0x04003e1f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003e1f	    0x488983c81400	          mov qword [rbx + 0x14c8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003e26	     0xf85cafcffff	                           jne 0x4003af6	      5771	option.c	FUNCTION_32	IF_1
0x4003e2c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003e30	    0x4883bbe01400	             cmp qword [rbx + 0x14e0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e38	    0x488b05000000	            mov rax, qword [0x04003e3f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003e3f	    0x488983d01400	          mov qword [rbx + 0x14d0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003e46	     0xf85b8fcffff	                           jne 0x4003b04	      5771	option.c	FUNCTION_32	IF_1
0x4003e4c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003e50	    0x4883bbf01400	             cmp qword [rbx + 0x14f0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e58	    0x488b05000000	            mov rax, qword [0x04003e5f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003e5f	    0x488983e01400	          mov qword [rbx + 0x14e0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003e66	     0xf85a6fcffff	                           jne 0x4003b12	      5771	option.c	FUNCTION_32	IF_1
0x4003e6c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003e70	    0x4883bb381700	             cmp qword [rbx + 0x1738], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e78	    0x488b05000000	            mov rax, qword [0x04003e7f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003e7f	    0x488983f01400	          mov qword [rbx + 0x14f0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003e86	     0xf8594fcffff	                           jne 0x4003b20	      5771	option.c	FUNCTION_32	IF_1
0x4003e8c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003e90	    0x4883bb481700	             cmp qword [rbx + 0x1748], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e98	    0x488b05000000	            mov rax, qword [0x04003e9f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003e9f	    0x488983381700	          mov qword [rbx + 0x1738], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003ea6	     0xf8582fcffff	                           jne 0x4003b2e	      5771	option.c	FUNCTION_32	IF_1
0x4003eac	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003eb0	    0x4883bbf81400	             cmp qword [rbx + 0x14f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003eb8	    0x488b05000000	            mov rax, qword [0x04003ebf] 	      5772	option.c	FUNCTION_32	IF_1
0x4003ebf	    0x488983481700	          mov qword [rbx + 0x1748], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003ec6	     0xf8570fcffff	                           jne 0x4003b3c	      5771	option.c	FUNCTION_32	IF_1
0x4003ecc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003ed0	    0x4883bb001500	             cmp qword [rbx + 0x1500], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ed8	    0x488b05000000	            mov rax, qword [0x04003edf] 	      5772	option.c	FUNCTION_32	IF_1
0x4003edf	    0x488983f81400	          mov qword [rbx + 0x14f8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003ee6	     0xf855efcffff	                           jne 0x4003b4a	      5771	option.c	FUNCTION_32	IF_1
0x4003eec	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003ef0	    0x4883bb101500	             cmp qword [rbx + 0x1510], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ef8	    0x488b05000000	            mov rax, qword [0x04003eff] 	      5772	option.c	FUNCTION_32	IF_1
0x4003eff	    0x488983001500	          mov qword [rbx + 0x1500], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003f06	     0xf854cfcffff	                           jne 0x4003b58	      5771	option.c	FUNCTION_32	IF_1
0x4003f0c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003f10	    0x4883bb181500	             cmp qword [rbx + 0x1518], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f18	    0x488b05000000	            mov rax, qword [0x04003f1f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003f1f	    0x488983101500	          mov qword [rbx + 0x1510], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003f26	     0xf853afcffff	                           jne 0x4003b66	      5771	option.c	FUNCTION_32	IF_1
0x4003f2c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003f30	    0x4883bb301500	             cmp qword [rbx + 0x1530], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f38	    0x488b05000000	            mov rax, qword [0x04003f3f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003f3f	    0x488983181500	          mov qword [rbx + 0x1518], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003f46	     0xf8528fcffff	                           jne 0x4003b74	      5771	option.c	FUNCTION_32	IF_1
0x4003f4c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003f50	    0x4883bba01400	             cmp qword [rbx + 0x14a0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f58	    0x488b05000000	            mov rax, qword [0x04003f5f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003f5f	    0x488983301500	          mov qword [rbx + 0x1530], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003f66	     0xf8516fcffff	                           jne 0x4003b82	      5771	option.c	FUNCTION_32	IF_1
0x4003f6c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003f70	    0x4883bba81400	             cmp qword [rbx + 0x14a8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f78	    0x488b05000000	            mov rax, qword [0x04003f7f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003f7f	    0x488983a01400	          mov qword [rbx + 0x14a0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003f86	     0xf8504fcffff	                           jne 0x4003b90	      5771	option.c	FUNCTION_32	IF_1
0x4003f8c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003f90	    0x4883bbb81400	             cmp qword [rbx + 0x14b8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f98	    0x488b05000000	            mov rax, qword [0x04003f9f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003f9f	    0x488983a81400	          mov qword [rbx + 0x14a8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003fa6	     0xf85f2fbffff	                           jne 0x4003b9e	      5771	option.c	FUNCTION_32	IF_1
0x4003fac	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003fb0	    0x4883bb481400	             cmp qword [rbx + 0x1448], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003fb8	    0x488b05000000	            mov rax, qword [0x04003fbf] 	      5772	option.c	FUNCTION_32	IF_1
0x4003fbf	    0x488983b81400	          mov qword [rbx + 0x14b8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003fc6	     0xf85e0fbffff	                           jne 0x4003bac	      5771	option.c	FUNCTION_32	IF_1
0x4003fcc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003fd0	    0x4883bb501400	             cmp qword [rbx + 0x1450], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003fd8	    0x488b05000000	            mov rax, qword [0x04003fdf] 	      5772	option.c	FUNCTION_32	IF_1
0x4003fdf	    0x488983481400	          mov qword [rbx + 0x1448], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003fe6	     0xf85cefbffff	                           jne 0x4003bba	      5771	option.c	FUNCTION_32	IF_1
0x4003fec	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003ff0	    0x4883bb481500	             cmp qword [rbx + 0x1548], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ff8	    0x488b05000000	            mov rax, qword [0x04003fff] 	      5772	option.c	FUNCTION_32	IF_1
0x4003fff	    0x488983501400	          mov qword [rbx + 0x1450], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004006	     0xf85bcfbffff	                           jne 0x4003bc8	      5771	option.c	FUNCTION_32	IF_1
0x400400c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004010	    0x4883bb581500	             cmp qword [rbx + 0x1558], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004018	    0x488b05000000	            mov rax, qword [0x0400401f] 	      5772	option.c	FUNCTION_32	IF_1
0x400401f	    0x488983481500	          mov qword [rbx + 0x1548], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004026	     0xf85aafbffff	                           jne 0x4003bd6	      5771	option.c	FUNCTION_32	IF_1
0x400402c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004030	    0x4883bba01500	             cmp qword [rbx + 0x15a0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004038	    0x488b05000000	            mov rax, qword [0x0400403f] 	      5772	option.c	FUNCTION_32	IF_1
0x400403f	    0x488983581500	          mov qword [rbx + 0x1558], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004046	     0xf8598fbffff	                           jne 0x4003be4	      5771	option.c	FUNCTION_32	IF_1
0x400404c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004050	    0x4883bb181c00	             cmp qword [rbx + 0x1c18], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004058	    0x488b05000000	            mov rax, qword [0x0400405f] 	      5772	option.c	FUNCTION_32	IF_1
0x400405f	    0x488983a01500	          mov qword [rbx + 0x15a0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004066	     0xf8586fbffff	                           jne 0x4003bf2	      5771	option.c	FUNCTION_32	IF_1
0x400406c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004070	    0x4883bbd01b00	             cmp qword [rbx + 0x1bd0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004078	    0x488b05000000	            mov rax, qword [0x0400407f] 	      5772	option.c	FUNCTION_32	IF_1
0x400407f	    0x488983181c00	          mov qword [rbx + 0x1c18], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004086	     0xf8574fbffff	                           jne 0x4003c00	      5771	option.c	FUNCTION_32	IF_1
0x400408c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004090	    0x4883bbe01b00	             cmp qword [rbx + 0x1be0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004098	    0x488b05000000	            mov rax, qword [0x0400409f] 	      5772	option.c	FUNCTION_32	IF_1
0x400409f	    0x488983d01b00	          mov qword [rbx + 0x1bd0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40040a6	     0xf8562fbffff	                           jne 0x4003c0e	      5771	option.c	FUNCTION_32	IF_1
0x40040ac	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40040b0	    0x4883bbe81b00	             cmp qword [rbx + 0x1be8], 0	      5771	option.c	FUNCTION_32	IF_1
0x40040b8	    0x488b05000000	            mov rax, qword [0x040040bf] 	      5772	option.c	FUNCTION_32	IF_1
0x40040bf	    0x488983e01b00	          mov qword [rbx + 0x1be0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40040c6	     0xf8550fbffff	                           jne 0x4003c1c	      5771	option.c	FUNCTION_32	IF_1
0x40040cc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40040d0	    0x4883bb881500	             cmp qword [rbx + 0x1588], 0	      5771	option.c	FUNCTION_32	IF_1
0x40040d8	    0x488b05000000	            mov rax, qword [0x040040df] 	      5772	option.c	FUNCTION_32	IF_1
0x40040df	    0x488983e81b00	          mov qword [rbx + 0x1be8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40040e6	     0xf853efbffff	                           jne 0x4003c2a	      5771	option.c	FUNCTION_32	IF_1
0x40040ec	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40040f0	    0x4883bb381400	             cmp qword [rbx + 0x1438], 0	      5771	option.c	FUNCTION_32	IF_1
0x40040f8	    0x488b05000000	            mov rax, qword [0x040040ff] 	      5772	option.c	FUNCTION_32	IF_1
0x40040ff	    0x488983881500	          mov qword [rbx + 0x1588], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004106	     0xf852cfbffff	                           jne 0x4003c38	      5771	option.c	FUNCTION_32	IF_1
0x400410c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004110	    0x4883bb301400	             cmp qword [rbx + 0x1430], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004118	    0x488b05000000	            mov rax, qword [0x0400411f] 	      5772	option.c	FUNCTION_32	IF_1
0x400411f	    0x488983381400	          mov qword [rbx + 0x1438], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004126	     0xf851afbffff	                           jne 0x4003c46	      5771	option.c	FUNCTION_32	IF_1
0x400412c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004130	    0x488b05000000	            mov rax, qword [0x04004137] 	      5772	option.c	FUNCTION_32	IF_1
0x4004137	    0x488983301400	          mov qword [rbx + 0x1430], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400413e	      0xe903fbffff	                           jmp 0x4003c46	      5772	option.c	FUNCTION_32	IF_1
0x4004143	       0xf1f440000	                   nop dword [rax + rax]	      5772	option.c	FUNCTION_32	IF_1
0x4004148	    0x4883bb401400	             cmp qword [rbx + 0x1440], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004150	    0x488b05000000	            mov rax, qword [0x04004157] 	      5772	option.c	FUNCTION_32	IF_1
0x4004157	    0x488983981400	          mov qword [rbx + 0x1498], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400415e	     0xf8506fbffff	                           jne 0x4003c6a	      5771	option.c	FUNCTION_32	IF_1
0x4004164	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004168	    0x4883bb581400	             cmp qword [rbx + 0x1458], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004170	    0x488b05000000	            mov rax, qword [0x04004177] 	      5772	option.c	FUNCTION_32	IF_1
0x4004177	    0x488983401400	          mov qword [rbx + 0x1440], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400417e	     0xf85f4faffff	                           jne 0x4003c78	      5771	option.c	FUNCTION_32	IF_1
0x4004184	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004188	    0x4883bb601400	             cmp qword [rbx + 0x1460], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004190	    0x488b05000000	            mov rax, qword [0x04004197] 	      5772	option.c	FUNCTION_32	IF_1
0x4004197	    0x488983581400	          mov qword [rbx + 0x1458], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400419e	     0xf85e2faffff	                           jne 0x4003c86	      5771	option.c	FUNCTION_32	IF_1
0x40041a4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40041a8	    0x4883bb681400	             cmp qword [rbx + 0x1468], 0	      5771	option.c	FUNCTION_32	IF_1
0x40041b0	    0x488b05000000	            mov rax, qword [0x040041b7] 	      5772	option.c	FUNCTION_32	IF_1
0x40041b7	    0x488983601400	          mov qword [rbx + 0x1460], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40041be	     0xf85d0faffff	                           jne 0x4003c94	      5771	option.c	FUNCTION_32	IF_1
0x40041c4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40041c8	    0x4883bbe81500	             cmp qword [rbx + 0x15e8], 0	      5771	option.c	FUNCTION_32	IF_1
0x40041d0	    0x488b05000000	            mov rax, qword [0x040041d7] 	      5772	option.c	FUNCTION_32	IF_1
0x40041d7	    0x488983681400	          mov qword [rbx + 0x1468], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40041de	     0xf85befaffff	                           jne 0x4003ca2	      5771	option.c	FUNCTION_32	IF_1
0x40041e4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40041e8	    0x4883bbf01500	             cmp qword [rbx + 0x15f0], 0	      5771	option.c	FUNCTION_32	IF_1
0x40041f0	    0x488b05000000	            mov rax, qword [0x040041f7] 	      5772	option.c	FUNCTION_32	IF_1
0x40041f7	    0x488983e81500	          mov qword [rbx + 0x15e8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40041fe	     0xf85acfaffff	                           jne 0x4003cb0	      5771	option.c	FUNCTION_32	IF_1
0x4004204	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004208	    0x4883bbf81500	             cmp qword [rbx + 0x15f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004210	    0x488b05000000	            mov rax, qword [0x04004217] 	      5772	option.c	FUNCTION_32	IF_1
0x4004217	    0x488983f01500	          mov qword [rbx + 0x15f0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400421e	     0xf859afaffff	                           jne 0x4003cbe	      5771	option.c	FUNCTION_32	IF_1
0x4004224	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004228	    0x4883bb001600	             cmp qword [rbx + 0x1600], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004230	    0x488b05000000	            mov rax, qword [0x04004237] 	      5772	option.c	FUNCTION_32	IF_1
0x4004237	    0x488983f81500	          mov qword [rbx + 0x15f8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400423e	     0xf8588faffff	                           jne 0x4003ccc	      5771	option.c	FUNCTION_32	IF_1
0x4004244	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004248	    0x4883bb081600	             cmp qword [rbx + 0x1608], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004250	    0x488b05000000	            mov rax, qword [0x04004257] 	      5772	option.c	FUNCTION_32	IF_1
0x4004257	    0x488983001600	          mov qword [rbx + 0x1600], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400425e	     0xf8576faffff	                           jne 0x4003cda	      5771	option.c	FUNCTION_32	IF_1
0x4004264	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004268	    0x4883bb101600	             cmp qword [rbx + 0x1610], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004270	    0x488b05000000	            mov rax, qword [0x04004277] 	      5772	option.c	FUNCTION_32	IF_1
0x4004277	    0x488983081600	          mov qword [rbx + 0x1608], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400427e	     0xf8564faffff	                           jne 0x4003ce8	      5771	option.c	FUNCTION_32	IF_1
0x4004284	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004288	    0x4883bb201600	             cmp qword [rbx + 0x1620], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004290	    0x488b05000000	            mov rax, qword [0x04004297] 	      5772	option.c	FUNCTION_32	IF_1
0x4004297	    0x488983101600	          mov qword [rbx + 0x1610], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400429e	     0xf8552faffff	                           jne 0x4003cf6	      5771	option.c	FUNCTION_32	IF_1
0x40042a4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40042a8	    0x4883bb281600	             cmp qword [rbx + 0x1628], 0	      5771	option.c	FUNCTION_32	IF_1
0x40042b0	    0x488b05000000	            mov rax, qword [0x040042b7] 	      5772	option.c	FUNCTION_32	IF_1
0x40042b7	    0x488983201600	          mov qword [rbx + 0x1620], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40042be	     0xf8540faffff	                           jne 0x4003d04	      5771	option.c	FUNCTION_32	IF_1
0x40042c4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40042c8	    0x4883bb381600	             cmp qword [rbx + 0x1638], 0	      5771	option.c	FUNCTION_32	IF_1
0x40042d0	    0x488b05000000	            mov rax, qword [0x040042d7] 	      5772	option.c	FUNCTION_32	IF_1
0x40042d7	    0x488983281600	          mov qword [rbx + 0x1628], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40042de	     0xf852efaffff	                           jne 0x4003d12	      5771	option.c	FUNCTION_32	IF_1
0x40042e4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40042e8	    0x4883bb401600	             cmp qword [rbx + 0x1640], 0	      5771	option.c	FUNCTION_32	IF_1
0x40042f0	    0x488b05000000	            mov rax, qword [0x040042f7] 	      5772	option.c	FUNCTION_32	IF_1
0x40042f7	    0x488983381600	          mov qword [rbx + 0x1638], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40042fe	     0xf851cfaffff	                           jne 0x4003d20	      5771	option.c	FUNCTION_32	IF_1
0x4004304	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004308	    0x4883bb581600	             cmp qword [rbx + 0x1658], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004310	    0x488b05000000	            mov rax, qword [0x04004317] 	      5772	option.c	FUNCTION_32	IF_1
0x4004317	    0x488983401600	          mov qword [rbx + 0x1640], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400431e	     0xf850afaffff	                           jne 0x4003d2e	      5771	option.c	FUNCTION_32	IF_1
0x4004324	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004328	    0x488b05000000	            mov rax, qword [0x0400432f] 	      5772	option.c	FUNCTION_32	IF_1
0x400432f	    0x488983581600	          mov qword [rbx + 0x1658], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004336	      0xe9f3f9ffff	                           jmp 0x4003d2e	      5772	option.c	FUNCTION_32	IF_1
copy_winopt	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,15:IF,0:functions,0:DO,0	114
0x4009ca0	              0x55	                                push rbp	     10870	option.c	FUNCTION_80
0x4009ca1	              0x53	                                push rbx	     10870	option.c	FUNCTION_80
0x4009ca2	          0x4889fd	                            mov rbp, rdi	     10870	option.c	FUNCTION_80
0x4009ca5	          0x4889f3	                            mov rbx, rsi	     10870	option.c	FUNCTION_80
0x4009ca8	        0x4883ec08	                              sub rsp, 8	     10870	option.c	FUNCTION_80
0x4009cac	            0x8b07	                    mov eax, dword [rdi]	     10872	option.c	FUNCTION_80
0x4009cae	            0x8906	                    mov dword [rsi], eax	     10872	option.c	FUNCTION_80
0x4009cb0	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	     10874	option.c	FUNCTION_80
0x4009cb6	    0x898684000000	             mov dword [rsi + 0x84], eax	     10874	option.c	FUNCTION_80
0x4009cbc	    0x8b8788000000	            mov eax, dword [rdi + 0x88] 	     10875	option.c	FUNCTION_80
0x4009cc2	    0x898688000000	             mov dword [rsi + 0x88], eax	     10875	option.c	FUNCTION_80
0x4009cc8	    0x8b878c000000	            mov eax, dword [rdi + 0x8c] 	     10876	option.c	FUNCTION_80
0x4009cce	    0x89868c000000	             mov dword [rsi + 0x8c], eax	     10876	option.c	FUNCTION_80
0x4009cd4	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	     10878	option.c	FUNCTION_80
0x4009cdb	    0x488986900000	             mov qword [rsi + 0x90], rax	     10878	option.c	FUNCTION_80
0x4009ce2	    0x8b87a4000000	            mov eax, dword [rdi + 0xa4] 	     10881	option.c	FUNCTION_80
0x4009ce8	    0x488bbfa80000	            mov rdi, qword [rdi + 0xa8] 	     10882	option.c	FUNCTION_80	CALL_1
0x4009cef	    0x8986a4000000	             mov dword [rsi + 0xa4], eax	     10881	option.c	FUNCTION_80
0x4009cf5	      0xe800000000	                          call 0x4009cfa	     10882	option.c	FUNCTION_80	CALL_1
0x4009cfa	    0x488bbdd00000	            mov rdi, qword [rbp + 0xd0] 	     10885	option.c	FUNCTION_80	CALL_2
0x4009d01	    0x488983a80000	             mov qword [rbx + 0xa8], rax	     10882	option.c	FUNCTION_80	CALL_1
0x4009d08	      0xe800000000	                          call 0x4009d0d	     10885	option.c	FUNCTION_80	CALL_2
0x4009d0d	    0x488983d00000	             mov qword [rbx + 0xd0], rax	     10885	option.c	FUNCTION_80	CALL_2
0x4009d14	    0x8b85e4000000	            mov eax, dword [rbp + 0xe4] 	     10887	option.c	FUNCTION_80
0x4009d1a	        0x488b7d08	                mov rdi, qword [rbp + 8]	     10894	option.c	FUNCTION_80	CALL_3
0x4009d1e	    0x8983e4000000	             mov dword [rbx + 0xe4], eax	     10887	option.c	FUNCTION_80
0x4009d24	    0x8b85e8000000	            mov eax, dword [rbp + 0xe8] 	     10889	option.c	FUNCTION_80
0x4009d2a	    0x8983e8000000	             mov dword [rbx + 0xe8], eax	     10889	option.c	FUNCTION_80
0x4009d30	    0x8b8580000000	            mov eax, dword [rbp + 0x80] 	     10892	option.c	FUNCTION_80
0x4009d36	    0x898380000000	             mov dword [rbx + 0x80], eax	     10892	option.c	FUNCTION_80
0x4009d3c	          0x8b4504	                mov eax, dword [rbp + 4]	     10893	option.c	FUNCTION_80
0x4009d3f	          0x894304	                mov dword [rbx + 4], eax	     10893	option.c	FUNCTION_80
0x4009d42	      0xe800000000	                          call 0x4009d47	     10894	option.c	FUNCTION_80	CALL_3
0x4009d47	        0x48894308	                mov qword [rbx + 8], rax	     10894	option.c	FUNCTION_80	CALL_3
0x4009d4b	    0x8b85d8000000	            mov eax, dword [rbp + 0xd8] 	     10896	option.c	FUNCTION_80
0x4009d51	    0x488bbdc80000	            mov rdi, qword [rbp + 0xc8] 	     10906	option.c	FUNCTION_80	CALL_4
0x4009d58	    0x8983d8000000	             mov dword [rbx + 0xd8], eax	     10896	option.c	FUNCTION_80
0x4009d5e	    0x8b85e0000000	            mov eax, dword [rbp + 0xe0] 	     10897	option.c	FUNCTION_80
0x4009d64	    0x8983e0000000	             mov dword [rbx + 0xe0], eax	     10897	option.c	FUNCTION_80
0x4009d6a	    0x8b8500010000	           mov eax, dword [rbp + 0x100] 	     10898	option.c	FUNCTION_80
0x4009d70	    0x898300010000	            mov dword [rbx + 0x100], eax	     10898	option.c	FUNCTION_80
0x4009d76	    0x8b8504010000	           mov eax, dword [rbp + 0x104] 	     10899	option.c	FUNCTION_80
0x4009d7c	    0x898304010000	            mov dword [rbx + 0x104], eax	     10899	option.c	FUNCTION_80
0x4009d82	    0x8b85b8000000	            mov eax, dword [rbp + 0xb8] 	     10901	option.c	FUNCTION_80
0x4009d88	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	     10901	option.c	FUNCTION_80
0x4009d8e	    0x8b85bc000000	            mov eax, dword [rbp + 0xbc] 	     10904	option.c	FUNCTION_80
0x4009d94	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	     10904	option.c	FUNCTION_80
0x4009d9a	    0x8b85c0000000	            mov eax, dword [rbp + 0xc0] 	     10905	option.c	FUNCTION_80
0x4009da0	    0x8983c0000000	             mov dword [rbx + 0xc0], eax	     10905	option.c	FUNCTION_80
0x4009da6	      0xe800000000	                          call 0x4009dab	     10906	option.c	FUNCTION_80	CALL_4
0x4009dab	    0x488983c80000	             mov qword [rbx + 0xc8], rax	     10906	option.c	FUNCTION_80	CALL_4
0x4009db2	          0x8b4510	            mov eax, dword [rbp + 0x10] 	     10909	option.c	FUNCTION_80
0x4009db5	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	     10913	option.c	FUNCTION_80	CALL_5
0x4009dbc	          0x894310	             mov dword [rbx + 0x10], eax	     10909	option.c	FUNCTION_80
0x4009dbf	    0x8b85dc000000	            mov eax, dword [rbp + 0xdc] 	     10910	option.c	FUNCTION_80
0x4009dc5	    0x8983dc000000	             mov dword [rbx + 0xdc], eax	     10910	option.c	FUNCTION_80
0x4009dcb	      0xe800000000	                          call 0x4009dd0	     10913	option.c	FUNCTION_80	CALL_5
0x4009dd0	    0x488983f00000	             mov qword [rbx + 0xf0], rax	     10913	option.c	FUNCTION_80	CALL_5
0x4009dd7	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10914	option.c	FUNCTION_80
0x4009dde	    0x488bbd100100	           mov rdi, qword [rbp + 0x110] 	     10917	option.c	FUNCTION_80	CALL_6
0x4009de5	    0x488983f80000	             mov qword [rbx + 0xf8], rax	     10914	option.c	FUNCTION_80
0x4009dec	      0xe800000000	                          call 0x4009df1	     10917	option.c	FUNCTION_80	CALL_6
0x4009df1	    0x488bbd180100	           mov rdi, qword [rbp + 0x118] 	     10918	option.c	FUNCTION_80	CALL_7
0x4009df8	    0x488983100100	            mov qword [rbx + 0x110], rax	     10917	option.c	FUNCTION_80	CALL_6
0x4009dff	      0xe800000000	                          call 0x4009e04	     10918	option.c	FUNCTION_80	CALL_7
0x4009e04	    0x488983180100	            mov qword [rbx + 0x118], rax	     10918	option.c	FUNCTION_80	CALL_7
0x4009e0b	        0x488b4518	            mov rax, qword [rbp + 0x18] 	     10921	option.c	FUNCTION_80
0x4009e0f	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	     10925	option.c	FUNCTION_80	CALL_8
0x4009e13	        0x48894318	             mov qword [rbx + 0x18], rax	     10921	option.c	FUNCTION_80
0x4009e17	          0x8b4520	            mov eax, dword [rbp + 0x20] 	     10922	option.c	FUNCTION_80
0x4009e1a	          0x894320	             mov dword [rbx + 0x20], eax	     10922	option.c	FUNCTION_80
0x4009e1d	          0x8b4524	            mov eax, dword [rbp + 0x24] 	     10923	option.c	FUNCTION_80
0x4009e20	          0x894324	             mov dword [rbx + 0x24], eax	     10923	option.c	FUNCTION_80
0x4009e23	          0x8b4528	            mov eax, dword [rbp + 0x28] 	     10924	option.c	FUNCTION_80
0x4009e26	          0x894328	             mov dword [rbx + 0x28], eax	     10924	option.c	FUNCTION_80
0x4009e29	      0xe800000000	                          call 0x4009e2e	     10925	option.c	FUNCTION_80	CALL_8
0x4009e2e	        0x48894330	             mov qword [rbx + 0x30], rax	     10925	option.c	FUNCTION_80	CALL_8
0x4009e32	        0x488b4558	            mov rax, qword [rbp + 0x58] 	     10926	option.c	FUNCTION_80
0x4009e36	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	     10929	option.c	FUNCTION_80	CALL_9
0x4009e3a	        0x48894358	             mov qword [rbx + 0x58], rax	     10926	option.c	FUNCTION_80
0x4009e3e	        0x488b4538	            mov rax, qword [rbp + 0x38] 	     10927	option.c	FUNCTION_80
0x4009e42	        0x48894338	             mov qword [rbx + 0x38], rax	     10927	option.c	FUNCTION_80
0x4009e46	          0x8b4540	            mov eax, dword [rbp + 0x40] 	     10928	option.c	FUNCTION_80
0x4009e49	          0x894340	             mov dword [rbx + 0x40], eax	     10928	option.c	FUNCTION_80
0x4009e4c	      0xe800000000	                          call 0x4009e51	     10929	option.c	FUNCTION_80	CALL_9
0x4009e51	    0x8b95dc000000	            mov edx, dword [rbp + 0xdc] 	     10931	option.c	FUNCTION_80	CALL_10
0x4009e57	        0x48894348	             mov qword [rbx + 0x48], rax	     10929	option.c	FUNCTION_80	CALL_9
0x4009e5b	    0x488b05000000	            mov rax, qword [0x04009e62] 	     10931	option.c	FUNCTION_80	CALL_10
0x4009e62	            0x85d2	                           test edx, edx	     10931	option.c	FUNCTION_80	CALL_10
0x4009e64	     0xf8556000000	                           jne 0x4009ec0	     10931	option.c	FUNCTION_80	CALL_10
0x4009e6a	        0x48894350	             mov qword [rbx + 0x50], rax	     10930	option.c	FUNCTION_80
0x4009e6e	        0x488b4560	            mov rax, qword [rbp + 0x60] 	     10932	option.c	FUNCTION_80
0x4009e72	        0x488b7d68	            mov rdi, qword [rbp + 0x68] 	     10934	option.c	FUNCTION_80	CALL_11
0x4009e76	        0x48894360	             mov qword [rbx + 0x60], rax	     10932	option.c	FUNCTION_80
0x4009e7a	      0xe800000000	                          call 0x4009e7f	     10934	option.c	FUNCTION_80	CALL_11
0x4009e7f	        0x488b7d70	            mov rdi, qword [rbp + 0x70] 	     10935	option.c	FUNCTION_80	CALL_12
0x4009e83	        0x48894368	             mov qword [rbx + 0x68], rax	     10934	option.c	FUNCTION_80	CALL_11
0x4009e87	      0xe800000000	                          call 0x4009e8c	     10935	option.c	FUNCTION_80	CALL_12
0x4009e8c	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	     10937	option.c	FUNCTION_80	CALL_13
0x4009e90	        0x48894370	             mov qword [rbx + 0x70], rax	     10935	option.c	FUNCTION_80	CALL_12
0x4009e94	      0xe800000000	                          call 0x4009e99	     10937	option.c	FUNCTION_80	CALL_13
0x4009e99	    0x488bbd080100	           mov rdi, qword [rbp + 0x108] 	     10940	option.c	FUNCTION_80	CALL_14
0x4009ea0	        0x48894378	             mov qword [rbx + 0x78], rax	     10937	option.c	FUNCTION_80	CALL_13
0x4009ea4	      0xe800000000	                          call 0x4009ea9	     10940	option.c	FUNCTION_80	CALL_14
0x4009ea9	    0x488983080100	            mov qword [rbx + 0x108], rax	     10940	option.c	FUNCTION_80	CALL_14
0x4009eb0	        0x4883c408	                              add rsp, 8	     10943	option.c	FUNCTION_80
0x4009eb4	          0x4889df	                            mov rdi, rbx	     10942	option.c	FUNCTION_80	CALL_15
0x4009eb7	              0x5b	                                 pop rbx	     10943	option.c	FUNCTION_80
0x4009eb8	              0x5d	                                 pop rbp	     10943	option.c	FUNCTION_80
0x4009eb9	      0xe93263ffff	                    jmp sym.check_winopt	     10942	option.c	FUNCTION_80	CALL_15
0x4009ebe	            0x6690	                                     nop	     10942	option.c	FUNCTION_80	CALL_15
0x4009ec0	        0x488b7d50	            mov rdi, qword [rbp + 0x50] 	     10931	option.c	FUNCTION_80	CALL_10
0x4009ec4	      0xe800000000	                          call 0x4009ec9	     10931	option.c	FUNCTION_80	CALL_10
0x4009ec9	            0xeb9f	                           jmp 0x4009e6a	     10931	option.c	FUNCTION_80	CALL_10
find_key_option	WHILE,0:FOR,0:ELSE,1:SWITCH,0:CALL,2:IF,2:functions,0:DO,0	39
0x4001280	        0x4883ec28	                           sub rsp, 0x28	      9832	option.c	FUNCTION_60
0x4001284	      0x48897c2408	                mov qword [rsp + 8], rdi	      9832	option.c	FUNCTION_60
0x4001289	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      9832	option.c	FUNCTION_60
0x4001292	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      9832	option.c	FUNCTION_60
0x4001297	            0x31c9	                            xor ecx, ecx	      9832	option.c	FUNCTION_60
0x4001299	          0x803f74	                    cmp byte [rdi], 0x74	      9840	option.c	FUNCTION_60	IF_1
0x400129c	            0x7452	                            je 0x40012f0	      9840	option.c	FUNCTION_60	IF_1
0x400129e	        0x4883ef01	                              sub rdi, 1	      9844	option.c	FUNCTION_60	ELSE_1
0x40012a2	      0x488d742414	                   lea rsi, [rsp + 0x14]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40012a7	          0x4531c0	                            xor r8d, r8d	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40012aa	      0x48897c2408	                mov qword [rsp + 8], rdi	      9844	option.c	FUNCTION_60	ELSE_1
0x40012af	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40012b4	      0xba01000000	                              mov edx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40012b9	      0xb901000000	                              mov ecx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40012be	    0xc74424140000	               mov dword [rsp + 0x14], 0	      9845	option.c	FUNCTION_60	ELSE_1
0x40012c6	      0xe800000000	                          call 0x40012cb	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40012cb	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40012cf	            0x85d2	                           test edx, edx	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40012d1	      0xba00000000	                              mov edx, 0	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40012d6	           0xf45c2	                         cmovne eax, edx	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40012d9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9851	option.c	FUNCTION_60
0x40012de	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9851	option.c	FUNCTION_60
0x40012e7	            0x7526	                           jne 0x400130f	      9851	option.c	FUNCTION_60
0x40012e9	        0x4883c428	                           add rsp, 0x28	      9851	option.c	FUNCTION_60
0x40012ed	              0xc3	                                     ret	      9851	option.c	FUNCTION_60
0x40012ee	            0x6690	                                     nop	      9851	option.c	FUNCTION_60
0x40012f0	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9840	option.c	FUNCTION_60	IF_1
0x40012f4	            0x75a8	                           jne 0x400129e	      9840	option.c	FUNCTION_60	IF_1
0x40012f6	         0xfb65702	               movzx edx, byte [rdi + 2]	      9840	option.c	FUNCTION_60	IF_1
0x40012fa	            0x84d2	                             test dl, dl	      9840	option.c	FUNCTION_60	IF_1
0x40012fc	            0x74a0	                            je 0x400129e	      9840	option.c	FUNCTION_60	IF_1
0x40012fe	         0xfb64703	               movzx eax, byte [rdi + 3]	      9840	option.c	FUNCTION_60	IF_1
0x4001302	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x4001304	            0x7498	                            je 0x400129e	      9840	option.c	FUNCTION_60	IF_1
0x4001306	          0xc1e008	                              shl eax, 8	      9841	option.c	FUNCTION_60	CALL_1
0x4001309	             0x1d0	                            add eax, edx	      9841	option.c	FUNCTION_60	CALL_1
0x400130b	            0xf7d8	                                 neg eax	      9841	option.c	FUNCTION_60	CALL_1
0x400130d	            0xebca	                           jmp 0x40012d9	      9841	option.c	FUNCTION_60	CALL_1
0x400130f	      0xe800000000	                          call 0x4001314	      9851	option.c	FUNCTION_60
set_option_default	WHILE,0:FOR,0:ELSE,4:SWITCH,0:CALL,8:IF,9:functions,0:DO,0	123
0x4004610	            0x4157	                                push r15	      3764	option.c	FUNCTION_2
0x4004612	            0x4156	                                push r14	      3764	option.c	FUNCTION_2
0x4004614	            0x89f0	                            mov eax, esi	      3771	option.c	FUNCTION_2	CALL_1
0x4004616	            0x4155	                                push r13	      3764	option.c	FUNCTION_2
0x4004618	            0x4154	                                push r12	      3764	option.c	FUNCTION_2
0x400461a	          0x4c63ef	                         movsxd r13, edi	      3764	option.c	FUNCTION_2
0x400461d	              0x55	                                push rbp	      3764	option.c	FUNCTION_2
0x400461e	              0x53	                                push rbx	      3764	option.c	FUNCTION_2
0x400461f	          0x4189d6	                           mov r14d, edx	      3764	option.c	FUNCTION_2
0x4004622	            0x89f3	                            mov ebx, esi	      3764	option.c	FUNCTION_2
0x4004624	          0x4c89ea	                            mov rdx, r13	      3771	option.c	FUNCTION_2	CALL_1
0x4004627	      0xbe04000000	                              mov esi, 4	      3771	option.c	FUNCTION_2	CALL_1
0x400462c	        0x4883ec18	                           sub rsp, 0x18	      3764	option.c	FUNCTION_2
0x4004630	          0x83e006	                              and eax, 6	      3771	option.c	FUNCTION_2	CALL_1
0x4004633	          0x4c89ed	                            mov rbp, r13	      3764	option.c	FUNCTION_2
0x4004636	           0xf45f3	                         cmovne esi, ebx	      3771	option.c	FUNCTION_2	CALL_1
0x4004639	        0x48c1e206	                              shl rdx, 6	      3771	option.c	FUNCTION_2	CALL_1
0x400463d	        0x8944240c	              mov dword [rsp + 0xc], eax	      3771	option.c	FUNCTION_2	CALL_1
0x4004641	    0x4c8da2000000	                          lea r12, [rdx]	      3771	option.c	FUNCTION_2	CALL_1
0x4004648	          0x4c89e7	                            mov rdi, r12	      3771	option.c	FUNCTION_2	CALL_1
0x400464b	      0xe810deffff	                 call sym.get_varp_scope	      3771	option.c	FUNCTION_2	CALL_1
0x4004650	          0x4885c0	                           test rax, rax	      3773	option.c	FUNCTION_2	IF_1
0x4004653	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	      3772	option.c	FUNCTION_2
0x4004658	     0xf8484000000	                            je 0x40046e2	      3773	option.c	FUNCTION_2	IF_1
0x400465e	          0x4989c7	                            mov r15, rax	      3773	option.c	FUNCTION_2	IF_1
0x4004661	          0x4889c8	                            mov rax, rcx	      3775	option.c	FUNCTION_2	IF_1
0x4004664	            0x31f6	                            xor esi, esi	      3775	option.c	FUNCTION_2	IF_1
0x4004666	        0x48c1e80a	                            shr rax, 0xa	      3775	option.c	FUNCTION_2	IF_1
0x400466a	        0x4883f001	                              xor rax, 1	      3775	option.c	FUNCTION_2	IF_1
0x400466e	          0x4585f6	                         test r14d, r14d	      3775	option.c	FUNCTION_2	IF_1
0x4004671	        0x400f94c6	                                sete sil	      3775	option.c	FUNCTION_2	IF_1
0x4004675	            0x21c6	                            and esi, eax	      3775	option.c	FUNCTION_2	IF_1
0x4004677	          0xf6c104	                              test cl, 4	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x400467a	          0x4189f6	                           mov r14d, esi	      3775	option.c	FUNCTION_2	IF_1
0x400467d	     0xf847d000000	                            je 0x4004700	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x4004683	      0x418b742420	            mov esi, dword [r12 + 0x20] 	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4004688	            0x85f6	                           test esi, esi	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x400468a	     0xf8500010000	                           jne 0x4004790	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4004690	          0xf6c301	                              test bl, 1	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4004693	            0x741b	                            je 0x40046b0	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4004695	          0xf6c108	                              test cl, 8	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4004698	            0x7416	                            je 0x40046b0	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x400469a	          0x498b3f	                    mov rdi, qword [r15]	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x400469d	    0x483b3d000000	            cmp rdi, qword [0x040046a4] 	      5756	option.c	FUNCTION_30	IF_1
0x40046a4	            0x740a	                            je 0x40046b0	      5756	option.c	FUNCTION_30	IF_1
0x40046a6	      0xe800000000	                          call 0x40046ab	      5757	option.c	FUNCTION_30	CALL_1
0x40046ab	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x40046b0	          0x4963c6	                        movsxd rax, r14d	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40046b3	        0x4883e1f7	             and rcx, 0xfffffffffffffff7	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40046b7	      0x4a8d44e804	              lea rax, [rax + r13*8 + 4]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40046bc	        0x49c1e506	                              shl r13, 6	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40046c0	    0x488b04c50000	                  mov rax, qword [rax*8]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40046c8	          0x498907	                    mov qword [r15], rax	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40046cb	    0x49898d000000	                    mov qword [r13], rcx	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40046d2	            0x89de	                            mov esi, ebx	      3821	option.c	FUNCTION_2	IF_1
0x40046d4	            0x89ef	                            mov edi, ebp	      3821	option.c	FUNCTION_2	IF_1
0x40046d6	      0xe865b9ffff	                  call sym.insecure_flag	      3821	option.c	FUNCTION_2	IF_1
0x40046db	    0x488120ffff7f	     and qword [rax], 0xffffffffff7fffff	      3822	option.c	FUNCTION_2	IF_1
0x40046e2	    0x8b1500000000	            mov edx, dword [0x040046e8] 	      3826	option.c	FUNCTION_2	CALL_8
0x40046e8	        0x4883c418	                           add rsp, 0x18	      3828	option.c	FUNCTION_2
0x40046ec	            0x89de	                            mov esi, ebx	      3826	option.c	FUNCTION_2	CALL_8
0x40046ee	            0x89ef	                            mov edi, ebp	      3826	option.c	FUNCTION_2	CALL_8
0x40046f0	              0x5b	                                 pop rbx	      3828	option.c	FUNCTION_2
0x40046f1	              0x5d	                                 pop rbp	      3828	option.c	FUNCTION_2
0x40046f2	            0x415c	                                 pop r12	      3828	option.c	FUNCTION_2
0x40046f4	            0x415d	                                 pop r13	      3828	option.c	FUNCTION_2
0x40046f6	            0x415e	                                 pop r14	      3828	option.c	FUNCTION_2
0x40046f8	            0x415f	                                 pop r15	      3828	option.c	FUNCTION_2
0x40046fa	      0xe971baffff	         jmp sym.set_option_scriptID_idx	      3826	option.c	FUNCTION_2	CALL_8
0x40046ff	              0x90	                                     nop	      3826	option.c	FUNCTION_2	CALL_8
0x4004700	          0x83e102	                              and ecx, 2	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4004703	            0x7443	                            je 0x4004748	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4004705	    0x41817c24201c	         cmp dword [r12 + 0x20], 0x201c 	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x400470e	     0xf84bc000000	                            je 0x40047d0	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4004714	          0x4863c6	                         movsxd rax, esi	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4004717	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3799	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400471b	      0x4a8d44e804	              lea rax, [rax + r13*8 + 4]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4004720	    0x488b04c50000	                  mov rax, qword [rax*8]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4004728	            0x85d2	                           test edx, edx	      3799	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400472a	          0x498907	                    mov qword [r15], rax	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400472d	            0x75a3	                           jne 0x40046d2	      3799	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400472f	      0xbe02000000	                              mov esi, 2	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4004734	          0x4c89e7	                            mov rdi, r12	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4004737	      0xe824ddffff	                 call sym.get_varp_scope	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400473c	          0x498b17	                    mov rdx, qword [r15]	      3801	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400473f	          0x488910	                    mov qword [rax], rdx	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4004742	            0xeb8e	                           jmp 0x40046d2	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4004744	         0xf1f4000	                         nop dword [rax]	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4004748	          0x4863c6	                         movsxd rax, esi	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x400474b	    0x41817c242033	         cmp dword [r12 + 0x20], 0x4033 	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4004754	      0x4a8d44e804	              lea rax, [rax + r13*8 + 4]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4004759	    0x488b04c50000	                  mov rax, qword [rax*8]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4004761	          0x418907	                    mov dword [r15], eax	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4004764	            0x7452	                            je 0x40047b8	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4004766	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3815	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x400476a	            0x85c0	                           test eax, eax	      3815	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x400476c	     0xf8560ffffff	                           jne 0x40046d2	      3815	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4004772	      0xbe02000000	                              mov esi, 2	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4004777	          0x4c89e7	                            mov rdi, r12	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400477a	      0xe8e1dcffff	                 call sym.get_varp_scope	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400477f	          0x418b17	                    mov edx, dword [r15]	      3817	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4004782	            0x8910	                    mov dword [rax], edx	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4004784	      0xe949ffffff	                           jmp 0x40046d2	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4004789	     0xf1f80000000	                         nop dword [rax]	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4004790	          0x4963c6	                        movsxd rax, r14d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4004793	          0x4531c0	                            xor r8d, r8d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4004796	            0x89d9	                            mov ecx, ebx	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4004798	      0x4a8d44e804	              lea rax, [rax + r13*8 + 4]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400479d	          0x4489ee	                           mov esi, r13d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40047a0	            0x31ff	                            xor edi, edi	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40047a2	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40047aa	      0xe800000000	                          call 0x40047af	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40047af	      0xe91effffff	                           jmp 0x40046d2	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40047b4	         0xf1f4000	                         nop dword [rax]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40047b8	      0xe800000000	                          call 0x40047bd	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x40047bd	            0x85c0	                           test eax, eax	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x40047bf	            0x75a5	                           jne 0x4004766	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x40047c1	    0x41c707000000	                      mov dword [r15], 0	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x40047c8	            0xeb9c	                           jmp 0x4004766	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x40047ca	    0x660f1f440000	                    nop word [rax + rax]	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x40047d0	    0x488b3d000000	            mov rdi, qword [0x040047d7] 	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x40047d7	      0xe800000000	                          call 0x40047dc	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x40047dc	      0xe9f1feffff	                           jmp 0x40046d2	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
set_option_value	WHILE,0:FOR,1:ELSE,4:SWITCH,0:CALL,18:IF,10:functions,0:DO,0	230
0x400e460	            0x4157	                                push r15	      9697	option.c	FUNCTION_56
0x400e462	            0x4156	                                push r14	      9697	option.c	FUNCTION_56
0x400e464	          0x4989f6	                            mov r14, rsi	      9697	option.c	FUNCTION_56
0x400e467	            0x4155	                                push r13	      9697	option.c	FUNCTION_56
0x400e469	            0x4154	                                push r12	      9697	option.c	FUNCTION_56
0x400e46b	          0x4989d5	                            mov r13, rdx	      9697	option.c	FUNCTION_56
0x400e46e	              0x55	                                push rbp	      9697	option.c	FUNCTION_56
0x400e46f	              0x53	                                push rbx	      9697	option.c	FUNCTION_56
0x400e470	          0x4889fd	                            mov rbp, rdi	      9697	option.c	FUNCTION_56
0x400e473	          0x4189cc	                           mov r12d, ecx	      9697	option.c	FUNCTION_56
0x400e476	        0x4883ec28	                           sub rsp, 0x28	      9697	option.c	FUNCTION_56
0x400e47a	    0x64488b042528	                mov rax, qword fs:[0x28]	      9697	option.c	FUNCTION_56
0x400e483	      0x4889442418	             mov qword [rsp + 0x18], rax	      9697	option.c	FUNCTION_56
0x400e488	            0x31c0	                            xor eax, eax	      9697	option.c	FUNCTION_56
0x400e48a	      0xe82120ffff	                     call sym.findoption	      9702	option.c	FUNCTION_56	CALL_1
0x400e48f	            0x85c0	                           test eax, eax	      9703	option.c	FUNCTION_56	IF_1
0x400e491	     0xf8881010000	                            js 0x400e618	      9703	option.c	FUNCTION_56	IF_1
0x400e497	    0x8b1500000000	            mov edx, dword [0x0400e49d] 	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400e49d	          0x4863d8	                         movsxd rbx, eax	      9733	option.c	FUNCTION_56	ELSE_2
0x400e4a0	          0x4189c7	                           mov r15d, eax	      9733	option.c	FUNCTION_56	ELSE_2
0x400e4a3	          0x4889d8	                            mov rax, rbx	      9733	option.c	FUNCTION_56	ELSE_2
0x400e4a6	        0x48c1e006	                              shl rax, 6	      9733	option.c	FUNCTION_56	ELSE_2
0x400e4aa	            0x85d2	                           test edx, edx	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400e4ac	    0x4c8b80000000	                     mov r8, qword [rax]	      9733	option.c	FUNCTION_56	ELSE_2
0x400e4b3	            0x7e0d	                           jle 0x400e4c2	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400e4b5	    0x41f7c0000008	                       test r8d, 0x80000	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400e4bc	     0xf85ce020000	                           jne 0x400e790	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x400e4c2	        0x41f6c004	                             test r8b, 4	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x400e4c6	     0xf859c000000	                           jne 0x400e568	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x400e4cc	        0x48c1e306	                              shl rbx, 6	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400e4d0	          0x4489e6	                           mov esi, r12d	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400e4d3	        0x4c890424	                     mov qword [rsp], r8	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400e4d7	    0x488dbb000000	                          lea rdi, [rbx]	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400e4de	      0xe87d3fffff	                 call sym.get_varp_scope	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x400e4e3	          0x4885c0	                           test rax, rax	      9747	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7
0x400e4e6	     0xf847e020000	                            je 0x400e76a	      9747	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7
0x400e4ec	          0x4d85f6	                           test r14, r14	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400e4ef	        0x4c8b0424	                     mov r8, qword [rsp]	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400e4f3	            0x7530	                           jne 0x400e525	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400e4f5	          0x4d85ed	                           test r13, r13	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400e4f8	            0x742b	                            je 0x400e525	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x400e4fa	      0x41807d0030	                    cmp byte [r13], 0x30	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400e4ff	     0xf8546020000	                           jne 0x400e74b	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400e505	        0x498d5501	                      lea rdx, [r13 + 1]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400e509	     0xf1f80000000	                         nop dword [rax]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400e510	        0x4883c201	                              add rdx, 1	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400e514	         0xfb64aff	               movzx ecx, byte [rdx - 1]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400e518	          0x80f930	                            cmp cl, 0x30	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400e51b	            0x74f3	                            je 0x400e510	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x400e51d	            0x84c9	                             test cl, cl	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400e51f	     0xf8526020000	                           jne 0x400e74b	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400e525	        0x4183e002	                              and r8d, 2	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x400e529	     0xf8501020000	                           jne 0x400e730	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x400e52f	          0x4489e1	                           mov ecx, r12d	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400e532	          0x4489f2	                           mov edx, r14d	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400e535	          0x4889c6	                            mov rsi, rax	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400e538	          0x4489ff	                           mov edi, r15d	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400e53b	      0xe8d0d1ffff	                call sym.set_bool_option	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x400e540	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      9778	option.c	FUNCTION_56
0x400e545	    0x644833342528	                xor rsi, qword fs:[0x28]	      9778	option.c	FUNCTION_56
0x400e54e	     0xf8576020000	                           jne 0x400e7ca	      9778	option.c	FUNCTION_56
0x400e554	        0x4883c428	                           add rsp, 0x28	      9778	option.c	FUNCTION_56
0x400e558	              0x5b	                                 pop rbx	      9778	option.c	FUNCTION_56
0x400e559	              0x5d	                                 pop rbp	      9778	option.c	FUNCTION_56
0x400e55a	            0x415c	                                 pop r12	      9778	option.c	FUNCTION_56
0x400e55c	            0x415d	                                 pop r13	      9778	option.c	FUNCTION_56
0x400e55e	            0x415e	                                 pop r14	      9778	option.c	FUNCTION_56
0x400e560	            0x415f	                                 pop r15	      9778	option.c	FUNCTION_56
0x400e562	              0xc3	                                     ret	      9778	option.c	FUNCTION_56
0x400e563	       0xf1f440000	                   nop dword [rax + rax]	      9778	option.c	FUNCTION_56
0x400e568	          0x4889dd	                            mov rbp, rbx	      5970	option.c	FUNCTION_38	IF_1
0x400e56b	        0x48c1e506	                              shl rbp, 6	      5970	option.c	FUNCTION_38	IF_1
0x400e56f	    0x4881c5000000	                              add rbp, 0	      5970	option.c	FUNCTION_38	IF_1
0x400e576	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      5970	option.c	FUNCTION_38	IF_1
0x400e57b	     0xf84e9010000	                            je 0x400e76a	      5970	option.c	FUNCTION_38	IF_1
0x400e581	          0x4c89ef	                            mov rdi, r13	      5973	option.c	FUNCTION_38	CALL_1
0x400e584	      0xe800000000	                          call 0x400e589	      5973	option.c	FUNCTION_38	CALL_1
0x400e589	          0x4885c0	                           test rax, rax	      5974	option.c	FUNCTION_38	IF_2
0x400e58c	          0x4989c5	                            mov r13, rax	      5973	option.c	FUNCTION_38	CALL_1
0x400e58f	     0xf84d5010000	                            je 0x400e76a	      5974	option.c	FUNCTION_38	IF_2
0x400e595	        0x41f6c406	                            test r12b, 6	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400e599	          0x4489e6	                           mov esi, r12d	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400e59c	            0x7513	                           jne 0x400e5b1	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400e59e	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      5979	option.c	FUNCTION_38	IF_2
0x400e5a1	      0x2500100000	                         and eax, 0x1000	      5979	option.c	FUNCTION_38	IF_2
0x400e5a6	          0x83f801	                              cmp eax, 1	      5979	option.c	FUNCTION_38	IF_2
0x400e5a9	            0x19f6	                            sbb esi, esi	      5979	option.c	FUNCTION_38	IF_2
0x400e5ab	          0x83e602	                              and esi, 2	      5979	option.c	FUNCTION_38	IF_2
0x400e5ae	          0x83c602	                              add esi, 2	      5979	option.c	FUNCTION_38	IF_2
0x400e5b1	        0x48c1e306	                              shl rbx, 6	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400e5b5	    0x4881c3000000	                              add rbx, 0	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400e5bc	          0x4889df	                            mov rdi, rbx	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400e5bf	      0xe89c3effff	                 call sym.get_varp_scope	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400e5c4	          0x488b10	                    mov rdx, qword [rax]	      5981	option.c	FUNCTION_38	IF_2
0x400e5c7	          0x4889c6	                            mov rsi, rax	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x400e5ca	          0x4c8928	                    mov qword [rax], r13	      5982	option.c	FUNCTION_38	IF_2
0x400e5cd	    0x8b0500000000	            mov eax, dword [0x0400e5d3] 	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x400e5d3	            0x85c0	                           test eax, eax	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x400e5d5	     0xf84cd000000	                            je 0x400e6a8	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x400e5db	            0x31c9	                            xor ecx, ecx	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5dd	          0x4589e0	                           mov r8d, r12d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5e0	          0x4489ff	                           mov edi, r15d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5e3	      0xe8b881ffff	call sym.did_set_string_option.constprop.11	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5e8	          0x4885c0	                           test rax, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5eb	          0x4889c3	                            mov rbx, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5ee	     0xf84bc010000	                            je 0x400e7b0	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5f4	            0x31ed	                            xor ebp, ebp	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5f6	          0x4531f6	                          xor r14d, r14d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e5f9	          0x4c89f7	                            mov rdi, r14	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x400e5fc	      0xe800000000	                          call 0x400e601	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x400e601	          0x4889ef	                            mov rdi, rbp	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x400e604	      0xe800000000	                          call 0x400e609	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x400e609	          0x4889d8	                            mov rax, rbx	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x400e60c	      0xe92fffffff	                           jmp 0x400e540	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x400e611	     0xf1f80000000	                         nop dword [rax]	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x400e618	          0x4889ef	                            mov rdi, rbp	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400e61b	      0xe800000000	                          call 0x400e620	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400e620	        0x4883f804	                              cmp rax, 4	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400e624	            0x755a	                           jne 0x400e680	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400e626	        0x807d0074	                    cmp byte [rbp], 0x74	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400e62a	            0x7554	                           jne 0x400e680	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400e62c	        0x807d015f	                cmp byte [rbp + 1], 0x5f	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400e630	            0x754e	                           jne 0x400e680	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x400e632	          0x4889ef	                            mov rdi, rbp	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400e635	      0xe8462cffff	                call sym.find_key_option	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400e63a	            0x85c0	                           test eax, eax	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400e63c	            0x7442	                            je 0x400e680	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x400e63e	     0xf882d010000	                            js 0x400e771	      9712	option.c	FUNCTION_56	IF_1	IF_2	IF_3
0x400e644	      0xc6442410f2	            mov byte [rsp + 0x10], 0xf2 	      9719	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x400e649	        0x88442411	               mov byte [rsp + 0x11], al	      9720	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x400e64d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400e652	            0x31d2	                            xor edx, edx	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400e654	          0x4c89ee	                            mov rsi, r13	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400e657	      0xe800000000	                          call 0x400e65c	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x400e65c	    0x8b0500000000	            mov eax, dword [0x0400e662] 	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400e662	            0x85c0	                           test eax, eax	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400e664	            0x7407	                            je 0x400e66d	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x400e666	            0x31ff	                            xor edi, edi	      9724	option.c	FUNCTION_56	IF_1	IF_2	CALL_7
0x400e668	      0xe800000000	                          call 0x400e66d	      9724	option.c	FUNCTION_56	IF_1	IF_2	CALL_7
0x400e66d	      0xbf32000000	                           mov edi, 0x32	      9725	option.c	FUNCTION_56	IF_1	IF_2	CALL_8
0x400e672	      0xe800000000	                          call 0x400e677	      9725	option.c	FUNCTION_56	IF_1	IF_2	CALL_8
0x400e677	            0x31c0	                            xor eax, eax	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x400e679	      0xe9c2feffff	                           jmp 0x400e540	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x400e67e	            0x6690	                                     nop	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x400e680	      0xba05000000	                              mov edx, 5	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400e685	      0xbe00000000	                              mov esi, 0	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400e68a	            0x31ff	                            xor edi, edi	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400e68c	      0xe800000000	                          call 0x400e691	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400e691	          0x4889ee	                            mov rsi, rbp	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400e694	          0x4889c7	                            mov rdi, rax	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400e697	      0xe800000000	                          call 0x400e69c	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x400e69c	            0x31c0	                            xor eax, eax	      9777	option.c	FUNCTION_56
0x400e69e	      0xe99dfeffff	                           jmp 0x400e540	      9777	option.c	FUNCTION_56
0x400e6a3	       0xf1f440000	                   nop dword [rax + rax]	      9777	option.c	FUNCTION_56
0x400e6a8	    0x817b202c4000	         cmp dword [rbx + 0x20], 0x402c 	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x400e6af	     0xf8426ffffff	                            je 0x400e5db	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x400e6b5	          0x4889d7	                            mov rdi, rdx	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x400e6b8	      0x4889742408	                mov qword [rsp + 8], rsi	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x400e6bd	        0x48891424	                    mov qword [rsp], rdx	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x400e6c1	      0xe800000000	                          call 0x400e6c6	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x400e6c6	          0x4c89ef	                            mov rdi, r13	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x400e6c9	          0x4989c6	                            mov r14, rax	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x400e6cc	      0xe800000000	                          call 0x400e6d1	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x400e6d1	        0x488b1424	                    mov rdx, qword [rsp]	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6d5	      0x488b742408	                mov rsi, qword [rsp + 8]	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6da	            0x31c9	                            xor ecx, ecx	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6dc	          0x4589e0	                           mov r8d, r12d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6df	          0x4489ff	                           mov edi, r15d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6e2	          0x4889c5	                            mov rbp, rax	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x400e6e5	      0xe8b680ffff	call sym.did_set_string_option.constprop.11	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6ea	          0x4885c0	                           test rax, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6ed	          0x4889c3	                            mov rbx, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6f0	     0xf8503ffffff	                           jne 0x400e5f9	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x400e6f6	      0xba01000000	                              mov edx, 1	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e6fb	          0x4489e6	                           mov esi, r12d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e6fe	          0x4489ff	                           mov edi, r15d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e701	      0xe80a1affff	                 call sym.did_set_option	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e706	          0x4d85f6	                           test r14, r14	      4331	option.c	FUNCTION_15	IF_1
0x400e709	     0xf84eafeffff	                            je 0x400e5f9	      4331	option.c	FUNCTION_15	IF_1
0x400e70f	          0x4885ed	                           test rbp, rbp	      4331	option.c	FUNCTION_15	IF_1
0x400e712	     0xf84e1feffff	                            je 0x400e5f9	      4331	option.c	FUNCTION_15	IF_1
0x400e718	          0x4889e9	                            mov rcx, rbp	      4331	option.c	FUNCTION_15	IF_1
0x400e71b	          0x4c89f2	                            mov rdx, r14	      4331	option.c	FUNCTION_15	IF_1
0x400e71e	          0x4489e6	                           mov esi, r12d	      4331	option.c	FUNCTION_15	IF_1
0x400e721	          0x4489ff	                           mov edi, r15d	      4331	option.c	FUNCTION_15	IF_1
0x400e724	      0xe85747ffff	call sym.trigger_optionsset_string.part.5	      4331	option.c	FUNCTION_15	IF_1
0x400e729	      0xe9cbfeffff	                           jmp 0x400e5f9	      4331	option.c	FUNCTION_15	IF_1
0x400e72e	            0x6690	                                     nop	      4331	option.c	FUNCTION_15	IF_1
0x400e730	          0x4589e1	                           mov r9d, r12d	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400e733	          0x4531c0	                            xor r8d, r8d	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400e736	            0x31c9	                            xor ecx, ecx	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400e738	          0x4c89f2	                            mov rdx, r14	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400e73b	          0x4889c6	                            mov rsi, rax	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400e73e	          0x4489ff	                           mov edi, r15d	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400e741	      0xe86a70ffff	                 call sym.set_num_option	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400e746	      0xe9f5fdffff	                           jmp 0x400e540	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x400e74b	      0xba05000000	                              mov edx, 5	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400e750	      0xbe00000000	                              mov esi, 0	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400e755	            0x31ff	                            xor edi, edi	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400e757	      0xe800000000	                          call 0x400e75c	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400e75c	          0x4c89ea	                            mov rdx, r13	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400e75f	          0x4889ee	                            mov rsi, rbp	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400e762	          0x4889c7	                            mov rdi, rax	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400e765	      0xe800000000	                          call 0x400e76a	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x400e76a	            0x31c0	                            xor eax, eax	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400e76c	      0xe9cffdffff	                           jmp 0x400e540	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x400e771	            0x89c2	                            mov edx, eax	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400e773	            0xf7d8	                                 neg eax	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400e775	            0xf7da	                                 neg edx	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400e777	          0xc1e808	                              shr eax, 8	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400e77a	        0x88542410	               mov byte [rsp + 0x10], dl	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x400e77e	        0x88442411	               mov byte [rsp + 0x11], al	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400e782	      0xe9c6feffff	                           jmp 0x400e64d	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400e787	    0x660f1f840000	                    nop word [rax + rax]	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x400e790	      0xba05000000	                              mov edx, 5	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400e795	      0xbe00000000	                              mov esi, 0	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400e79a	            0x31ff	                            xor edi, edi	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400e79c	      0xe800000000	                          call 0x400e7a1	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400e7a1	          0x4889c7	                            mov rdi, rax	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400e7a4	      0xe800000000	                          call 0x400e7a9	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x400e7a9	            0x31c0	                            xor eax, eax	      9739	option.c	FUNCTION_56	ELSE_2	IF_5
0x400e7ab	      0xe990fdffff	                           jmp 0x400e540	      9739	option.c	FUNCTION_56	ELSE_2	IF_5
0x400e7b0	      0xba01000000	                              mov edx, 1	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e7b5	          0x4489e6	                           mov esi, r12d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e7b8	          0x4489ff	                           mov edi, r15d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e7bb	      0xe85019ffff	                 call sym.did_set_option	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e7c0	            0x31ed	                            xor ebp, ebp	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e7c2	          0x4531f6	                          xor r14d, r14d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e7c5	      0xe92ffeffff	                           jmp 0x400e5f9	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x400e7ca	      0xe800000000	                          call 0x400e7cf	      9778	option.c	FUNCTION_56
check_clipboard_option	WHILE,0:FOR,1:ELSE,8:SWITCH,0:CALL,12:IF,11:functions,0:DO,0	154
0x4000fb0	            0x4157	                                push r15	      7948	option.c	FUNCTION_45
0x4000fb2	            0x4156	                                push r14	      7948	option.c	FUNCTION_45
0x4000fb4	          0x4531f6	                          xor r14d, r14d	      7952	option.c	FUNCTION_45
0x4000fb7	            0x4155	                                push r13	      7948	option.c	FUNCTION_45
0x4000fb9	            0x4154	                                push r12	      7948	option.c	FUNCTION_45
0x4000fbb	          0x4531ed	                          xor r13d, r13d	      7951	option.c	FUNCTION_45
0x4000fbe	              0x55	                                push rbp	      7948	option.c	FUNCTION_45
0x4000fbf	              0x53	                                push rbx	      7948	option.c	FUNCTION_45
0x4000fc0	            0x31ed	                            xor ebp, ebp	      7953	option.c	FUNCTION_45
0x4000fc2	          0x4531e4	                          xor r12d, r12d	      7950	option.c	FUNCTION_45
0x4000fc5	            0x31db	                            xor ebx, ebx	      7949	option.c	FUNCTION_45
0x4000fc7	        0x4883ec08	                              sub rsp, 8	      7948	option.c	FUNCTION_45
0x4000fcb	    0x488b05000000	            mov rax, qword [0x04000fd2] 	      7958	option.c	FUNCTION_45	FOR_1
0x4000fd2	           0xfb610	                   movzx edx, byte [rax]	      7958	option.c	FUNCTION_45	FOR_1
0x4000fd5	           0xf1f00	                         nop dword [rax]	      7958	option.c	FUNCTION_45	FOR_1
0x4000fd8	            0x84d2	                             test dl, dl	      7958	option.c	FUNCTION_45	FOR_1
0x4000fda	     0xf8406010000	                            je 0x40010e6	      7958	option.c	FUNCTION_45	FOR_1
0x4000fe0	      0xbf00000000	                              mov edi, 0	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000fe5	      0xb907000000	                              mov ecx, 7	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000fea	          0x4889c6	                            mov rsi, rax	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000fed	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000fef	            0x7515	                           jne 0x4001006	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000ff1	         0xfb65007	               movzx edx, byte [rax + 7]	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000ff5	          0x80fa2c	                            cmp dl, 0x2c	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000ff8	     0xf8442010000	                            je 0x4001140	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000ffe	            0x84d2	                             test dl, dl	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4001000	     0xf843a010000	                            je 0x4001140	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4001006	      0xbf00000000	                              mov edi, 0	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x400100b	      0xb90b000000	                            mov ecx, 0xb	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4001010	          0x4889c6	                            mov rsi, rax	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4001013	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4001015	            0x7515	                           jne 0x400102c	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4001017	         0xfb6500b	            movzx edx, byte [rax + 0xb] 	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x400101b	          0x80fa2c	                            cmp dl, 0x2c	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x400101e	     0xf842c010000	                            je 0x4001150	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001024	            0x84d2	                             test dl, dl	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001026	     0xf8424010000	                            je 0x4001150	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x400102c	      0xbf00000000	                              mov edi, 0	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4001031	      0xb90a000000	                            mov ecx, 0xa	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4001036	          0x4889c6	                            mov rsi, rax	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4001039	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x400103b	            0x7515	                           jne 0x4001052	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x400103d	         0xfb6500a	            movzx edx, byte [rax + 0xa] 	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4001041	          0x80fa2c	                            cmp dl, 0x2c	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4001044	     0xf8416010000	                            je 0x4001160	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x400104a	            0x84d2	                             test dl, dl	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x400104c	     0xf840e010000	                            je 0x4001160	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4001052	      0xbf00000000	                              mov edi, 0	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4001057	      0xb90e000000	                            mov ecx, 0xe	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x400105c	          0x4889c6	                            mov rsi, rax	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x400105f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4001061	            0x7515	                           jne 0x4001078	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x4001063	         0xfb6500e	            movzx edx, byte [rax + 0xe] 	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4001067	          0x80fa2c	                            cmp dl, 0x2c	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x400106a	     0xf8400010000	                            je 0x4001170	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4001070	            0x84d2	                             test dl, dl	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4001072	     0xf84f8000000	                            je 0x4001170	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4001078	      0xbf00000000	                              mov edi, 0	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x400107d	      0xb90c000000	                            mov ecx, 0xc	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4001082	          0x4889c6	                            mov rsi, rax	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4001085	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4001087	            0x7515	                           jne 0x400109e	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x4001089	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x400108d	          0x80fa2c	                            cmp dl, 0x2c	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4001090	     0xf84ea000000	                            je 0x4001180	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4001096	            0x84d2	                             test dl, dl	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4001098	     0xf84e2000000	                            je 0x4001180	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x400109e	      0xbf00000000	                              mov edi, 0	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010a3	      0xb904000000	                              mov ecx, 4	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010a8	          0x4889c6	                            mov rsi, rax	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010ab	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010ad	     0xf85dd000000	                           jne 0x4001190	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010b3	         0xfb65004	               movzx edx, byte [rax + 4]	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010b7	          0x80fa2c	                            cmp dl, 0x2c	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010ba	            0x7408	                            je 0x40010c4	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010bc	            0x84d2	                             test dl, dl	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010be	     0xf85cc000000	                           jne 0x4001190	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x40010c4	        0x4883c004	                              add rax, 4	      7992	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x40010c8	      0xbd01000000	                              mov ebp, 1	      7991	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x40010cd	          0x80fa2c	                            cmp dl, 0x2c	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x40010d0	     0xf8502ffffff	                           jne 0x4000fd8	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x40010d6	         0xfb65001	               movzx edx, byte [rax + 1]	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x40010da	        0x4883c001	                              add rax, 1	      8008	option.c	FUNCTION_45	FOR_1	IF_9
0x40010de	            0x84d2	                             test dl, dl	      7958	option.c	FUNCTION_45	FOR_1
0x40010e0	     0xf85fafeffff	                           jne 0x4000fe0	      7958	option.c	FUNCTION_45	FOR_1
0x40010e6	          0x4531ff	                          xor r15d, r15d	      7954	option.c	FUNCTION_45
0x40010e9	    0x488b3d000000	            mov rdi, qword [0x040010f0] 	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x40010f0	    0x891d00000000	            mov dword [0x040010f6], ebx 	      8012	option.c	FUNCTION_45	IF_10
0x40010f6	    0x448925000000	           mov dword [0x040010fd], r12d 	      8013	option.c	FUNCTION_45	IF_10
0x40010fd	    0x44892d000000	           mov dword [0x04001104], r13d 	      8014	option.c	FUNCTION_45	IF_10
0x4001104	    0x448935000000	           mov dword [0x0400110b], r14d 	      8015	option.c	FUNCTION_45	IF_10
0x400110b	    0x892d00000000	            mov dword [0x04001111], ebp 	      8016	option.c	FUNCTION_45	IF_10
0x4001111	      0xe800000000	                          call 0x4001116	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x4001116	    0x8b0500000000	            mov eax, dword [0x0400111c] 	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x400111c	    0x4c893d000000	            mov qword [0x04001123], r15 	      8018	option.c	FUNCTION_45	IF_10
0x4001123	            0x85c0	                           test eax, eax	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x4001125	     0xf85ac000000	                           jne 0x40011d7	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x400112b	            0x31c0	                            xor eax, eax	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x400112d	        0x4883c408	                              add rsp, 8	      8031	option.c	FUNCTION_45
0x4001131	              0x5b	                                 pop rbx	      8031	option.c	FUNCTION_45
0x4001132	              0x5d	                                 pop rbp	      8031	option.c	FUNCTION_45
0x4001133	            0x415c	                                 pop r12	      8031	option.c	FUNCTION_45
0x4001135	            0x415d	                                 pop r13	      8031	option.c	FUNCTION_45
0x4001137	            0x415e	                                 pop r14	      8031	option.c	FUNCTION_45
0x4001139	            0x415f	                                 pop r15	      8031	option.c	FUNCTION_45
0x400113b	              0xc3	                                     ret	      8031	option.c	FUNCTION_45
0x400113c	         0xf1f4000	                         nop dword [rax]	      8031	option.c	FUNCTION_45
0x4001140	          0x83cb01	                               or ebx, 1	      7962	option.c	FUNCTION_45	FOR_1	IF_1
0x4001143	        0x4883c007	                              add rax, 7	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x4001147	            0xeb84	                           jmp 0x40010cd	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x4001149	     0xf1f80000000	                         nop dword [rax]	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x4001150	          0x83cb02	                               or ebx, 2	      7968	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001153	        0x4883c00b	                            add rax, 0xb	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001157	      0xe971ffffff	                           jmp 0x40010cd	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x400115c	         0xf1f4000	                         nop dword [rax]	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4001160	        0x4883c00a	                            add rax, 0xa	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4001164	    0x41bc01000000	                             mov r12d, 1	      7974	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x400116a	      0xe95effffff	                           jmp 0x40010cd	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x400116f	              0x90	                                     nop	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x4001170	        0x4883c00e	                            add rax, 0xe	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4001174	    0x41bd01000000	                             mov r13d, 1	      7980	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x400117a	      0xe94effffff	                           jmp 0x40010cd	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x400117f	              0x90	                                     nop	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x4001180	        0x4883c00c	                            add rax, 0xc	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4001184	    0x41be01000000	                             mov r14d, 1	      7986	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x400118a	      0xe93effffff	                           jmp 0x40010cd	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x400118f	              0x90	                                     nop	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x4001190	      0xbf00000000	                              mov edi, 0	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4001195	      0xb908000000	                              mov ecx, 8	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x400119a	          0x4889c6	                            mov rsi, rax	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x400119d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x400119f	            0x741b	                            je 0x40011bc	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40011a1	            0x31ff	                            xor edi, edi	      8028	option.c	FUNCTION_45	CALL_12
0x40011a3	      0xe800000000	                          call 0x40011a8	      8028	option.c	FUNCTION_45	CALL_12
0x40011a8	        0x4883c408	                              add rsp, 8	      8031	option.c	FUNCTION_45
0x40011ac	      0xb800000000	                              mov eax, 0	      8028	option.c	FUNCTION_45	CALL_12
0x40011b1	              0x5b	                                 pop rbx	      8031	option.c	FUNCTION_45
0x40011b2	              0x5d	                                 pop rbp	      8031	option.c	FUNCTION_45
0x40011b3	            0x415c	                                 pop r12	      8031	option.c	FUNCTION_45
0x40011b5	            0x415d	                                 pop r13	      8031	option.c	FUNCTION_45
0x40011b7	            0x415e	                                 pop r14	      8031	option.c	FUNCTION_45
0x40011b9	            0x415f	                                 pop r15	      8031	option.c	FUNCTION_45
0x40011bb	              0xc3	                                     ret	      8031	option.c	FUNCTION_45
0x40011bc	        0x488d7808	                      lea rdi, [rax + 8]	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x40011c0	      0xbe01000000	                              mov esi, 1	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x40011c5	      0xe800000000	                          call 0x40011ca	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x40011ca	          0x4885c0	                           test rax, rax	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x40011cd	          0x4989c7	                            mov r15, rax	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x40011d0	            0x74cf	                            je 0x40011a1	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x40011d2	      0xe912ffffff	                           jmp 0x40010e9	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x40011d7	      0xe800000000	                          call 0x40011dc	      8022	option.c	FUNCTION_45	IF_10	IF_11	CALL_10
0x40011dc	      0xe800000000	                          call 0x40011e1	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x40011e1	            0x31c0	                            xor eax, eax	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x40011e3	      0xe945ffffff	                           jmp 0x400112d	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
get_bkc_value	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,0:IF,0:functions,0:DO,0	4
0x400f1a0	    0x8b8700140000	          mov eax, dword [rdi + 0x1400] 	     12687	option.c	FUNCTION_117
0x400f1a6	            0x85c0	                           test eax, eax	     12687	option.c	FUNCTION_117
0x400f1a8	     0xf4405000000	           cmove eax, dword [0x0400f1af]	     12687	option.c	FUNCTION_117
0x400f1af	              0xc3	                                     ret	     12688	option.c	FUNCTION_117
has_format_option	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:IF,1:functions,0:DO,0	16
0x400b3d0	    0x8b0500000000	            mov eax, dword [0x0400b3d6] 	     12043	option.c	FUNCTION_97	IF_1
0x400b3d6	            0x85c0	                           test eax, eax	     12043	option.c	FUNCTION_97	IF_1
0x400b3d8	            0x7406	                            je 0x400b3e0	     12043	option.c	FUNCTION_97	IF_1
0x400b3da	            0x31c0	                            xor eax, eax	     12043	option.c	FUNCTION_97	IF_1
0x400b3dc	              0xc3	                                     ret	     12043	option.c	FUNCTION_97	IF_1
0x400b3dd	           0xf1f00	                         nop dword [rax]	     12043	option.c	FUNCTION_97	IF_1
0x400b3e0	        0x4883ec08	                              sub rsp, 8	     12042	option.c	FUNCTION_97
0x400b3e4	    0x488b05000000	            mov rax, qword [0x0400b3eb] 	     12045	option.c	FUNCTION_97	CALL_1
0x400b3eb	            0x89fe	                            mov esi, edi	     12045	option.c	FUNCTION_97	CALL_1
0x400b3ed	    0x488bb8a01400	          mov rdi, qword [rax + 0x14a0] 	     12045	option.c	FUNCTION_97	CALL_1
0x400b3f4	      0xe800000000	                          call 0x400b3f9	     12045	option.c	FUNCTION_97	CALL_1
0x400b3f9	          0x4885c0	                           test rax, rax	     12045	option.c	FUNCTION_97	CALL_1
0x400b3fc	           0xf95c0	                                setne al	     12045	option.c	FUNCTION_97	CALL_1
0x400b3ff	        0x4883c408	                              add rsp, 8	     12046	option.c	FUNCTION_97
0x400b403	           0xfb6c0	                           movzx eax, al	     12045	option.c	FUNCTION_97	CALL_1
0x400b406	              0xc3	                                     ret	     12046	option.c	FUNCTION_97
didset_options	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,20:IF,0:functions,0:DO,0	92
0x40035c0	        0x4883ec08	                              sub rsp, 8	      5557	option.c	FUNCTION_26
0x40035c4	      0xe800000000	                          call 0x40035c9	      5559	option.c	FUNCTION_26	CALL_1
0x40035c9	    0x488b3d000000	            mov rdi, qword [0x040035d0] 	      5562	option.c	FUNCTION_26	CALL_2
0x40035d0	      0xb901000000	                              mov ecx, 1	      5562	option.c	FUNCTION_26	CALL_2
0x40035d5	      0xba00000000	                              mov edx, 0	      5562	option.c	FUNCTION_26	CALL_2
0x40035da	      0xbe00000000	                              mov esi, 0	      5562	option.c	FUNCTION_26	CALL_2
0x40035df	      0xe83cd2ffff	              call sym.opt_strings_flags	      5562	option.c	FUNCTION_26	CALL_2
0x40035e4	    0x488b3d000000	            mov rdi, qword [0x040035eb] 	      5564	option.c	FUNCTION_26	CALL_3
0x40035eb	      0xb901000000	                              mov ecx, 1	      5564	option.c	FUNCTION_26	CALL_3
0x40035f0	      0xba00000000	                              mov edx, 0	      5564	option.c	FUNCTION_26	CALL_3
0x40035f5	      0xbe00000000	                              mov esi, 0	      5564	option.c	FUNCTION_26	CALL_3
0x40035fa	      0xe821d2ffff	              call sym.opt_strings_flags	      5564	option.c	FUNCTION_26	CALL_3
0x40035ff	    0x488b3d000000	            mov rdi, qword [0x04003606] 	      5565	option.c	FUNCTION_26	CALL_4
0x4003606	      0xb901000000	                              mov ecx, 1	      5565	option.c	FUNCTION_26	CALL_4
0x400360b	      0xba00000000	                              mov edx, 0	      5565	option.c	FUNCTION_26	CALL_4
0x4003610	      0xbe00000000	                              mov esi, 0	      5565	option.c	FUNCTION_26	CALL_4
0x4003615	      0xe806d2ffff	              call sym.opt_strings_flags	      5565	option.c	FUNCTION_26	CALL_4
0x400361a	    0x488b3d000000	            mov rdi, qword [0x04003621] 	      5567	option.c	FUNCTION_26	CALL_5
0x4003621	      0xb901000000	                              mov ecx, 1	      5567	option.c	FUNCTION_26	CALL_5
0x4003626	      0xba00000000	                              mov edx, 0	      5567	option.c	FUNCTION_26	CALL_5
0x400362b	      0xbe00000000	                              mov esi, 0	      5567	option.c	FUNCTION_26	CALL_5
0x4003630	      0xe8ebd1ffff	              call sym.opt_strings_flags	      5567	option.c	FUNCTION_26	CALL_5
0x4003635	    0x488b3d000000	            mov rdi, qword [0x0400363c] 	      5568	option.c	FUNCTION_26	CALL_6
0x400363c	      0xb901000000	                              mov ecx, 1	      5568	option.c	FUNCTION_26	CALL_6
0x4003641	      0xba00000000	                              mov edx, 0	      5568	option.c	FUNCTION_26	CALL_6
0x4003646	      0xbe00000000	                              mov esi, 0	      5568	option.c	FUNCTION_26	CALL_6
0x400364b	      0xe8d0d1ffff	              call sym.opt_strings_flags	      5568	option.c	FUNCTION_26	CALL_6
0x4003650	    0x488b3d000000	            mov rdi, qword [0x04003657] 	      5571	option.c	FUNCTION_26	CALL_7
0x4003657	      0xb901000000	                              mov ecx, 1	      5571	option.c	FUNCTION_26	CALL_7
0x400365c	      0xba00000000	                              mov edx, 0	      5571	option.c	FUNCTION_26	CALL_7
0x4003661	      0xbe00000000	                              mov esi, 0	      5571	option.c	FUNCTION_26	CALL_7
0x4003666	      0xe8b5d1ffff	              call sym.opt_strings_flags	      5571	option.c	FUNCTION_26	CALL_7
0x400366b	    0x488b3d000000	            mov rdi, qword [0x04003672] 	      5573	option.c	FUNCTION_26	CALL_8
0x4003672	      0xb901000000	                              mov ecx, 1	      5573	option.c	FUNCTION_26	CALL_8
0x4003677	      0xba00000000	                              mov edx, 0	      5573	option.c	FUNCTION_26	CALL_8
0x400367c	      0xbe00000000	                              mov esi, 0	      5573	option.c	FUNCTION_26	CALL_8
0x4003681	      0xe89ad1ffff	              call sym.opt_strings_flags	      5573	option.c	FUNCTION_26	CALL_8
0x4003686	    0x488b3d000000	            mov rdi, qword [0x0400368d] 	      5574	option.c	FUNCTION_26	CALL_9
0x400368d	            0x31c9	                            xor ecx, ecx	      5574	option.c	FUNCTION_26	CALL_9
0x400368f	      0xba00000000	                              mov edx, 0	      5574	option.c	FUNCTION_26	CALL_9
0x4003694	      0xbe00000000	                              mov esi, 0	      5574	option.c	FUNCTION_26	CALL_9
0x4003699	      0xe882d1ffff	              call sym.opt_strings_flags	      5574	option.c	FUNCTION_26	CALL_9
0x400369e	    0x488b3d000000	            mov rdi, qword [0x040036a5] 	      5576	option.c	FUNCTION_26	CALL_10
0x40036a5	      0xb901000000	                              mov ecx, 1	      5576	option.c	FUNCTION_26	CALL_10
0x40036aa	      0xba00000000	                              mov edx, 0	      5576	option.c	FUNCTION_26	CALL_10
0x40036af	      0xbe00000000	                              mov esi, 0	      5576	option.c	FUNCTION_26	CALL_10
0x40036b4	      0xe867d1ffff	              call sym.opt_strings_flags	      5576	option.c	FUNCTION_26	CALL_10
0x40036b9	    0x488b3d000000	            mov rdi, qword [0x040036c0] 	      5579	option.c	FUNCTION_26	CALL_11
0x40036c0	            0x31c9	                            xor ecx, ecx	      5579	option.c	FUNCTION_26	CALL_11
0x40036c2	      0xba00000000	                              mov edx, 0	      5579	option.c	FUNCTION_26	CALL_11
0x40036c7	      0xbe00000000	                              mov esi, 0	      5579	option.c	FUNCTION_26	CALL_11
0x40036cc	      0xe84fd1ffff	              call sym.opt_strings_flags	      5579	option.c	FUNCTION_26	CALL_11
0x40036d1	      0xe800000000	                          call 0x40036d6	      5582	option.c	FUNCTION_26	CALL_12
0x40036d6	      0xe800000000	                          call 0x40036db	      5583	option.c	FUNCTION_26	CALL_13
0x40036db	    0x488b05000000	            mov rax, qword [0x040036e2] 	      5584	option.c	FUNCTION_26	CALL_14
0x40036e2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5584	option.c	FUNCTION_26	CALL_14
0x40036e6	    0x488bb8680400	           mov rdi, qword [rax + 0x468] 	      5584	option.c	FUNCTION_26	CALL_14
0x40036ed	    0x488db0700400	                  lea rsi, [rax + 0x470]	      5584	option.c	FUNCTION_26	CALL_14
0x40036f4	      0xe847f0ffff	        call sym.compile_cap_prog.isra.2	      5584	option.c	FUNCTION_26	CALL_14
0x40036f9	      0xbf01000000	                              mov edi, 1	      5585	option.c	FUNCTION_26	CALL_15
0x40036fe	      0xe88dd0ffff	           call sym.did_set_spell_option	      5585	option.c	FUNCTION_26	CALL_15
0x4003703	    0x488b3d000000	            mov rdi, qword [0x0400370a] 	      5588	option.c	FUNCTION_26	CALL_16
0x400370a	      0xb901000000	                              mov ecx, 1	      5588	option.c	FUNCTION_26	CALL_16
0x400370f	      0xba00000000	                              mov edx, 0	      5588	option.c	FUNCTION_26	CALL_16
0x4003714	      0xbe00000000	                              mov esi, 0	      5588	option.c	FUNCTION_26	CALL_16
0x4003719	      0xe802d1ffff	              call sym.opt_strings_flags	      5588	option.c	FUNCTION_26	CALL_16
0x400371e	    0x488b3d000000	            mov rdi, qword [0x04003725] 	      5591	option.c	FUNCTION_26	CALL_17
0x4003725	            0x31c9	                            xor ecx, ecx	      5591	option.c	FUNCTION_26	CALL_17
0x4003727	      0xba00000000	                              mov edx, 0	      5591	option.c	FUNCTION_26	CALL_17
0x400372c	      0xbe00000000	                              mov esi, 0	      5591	option.c	FUNCTION_26	CALL_17
0x4003731	      0xe8ead0ffff	              call sym.opt_strings_flags	      5591	option.c	FUNCTION_26	CALL_17
0x4003736	      0xe835feffff	                    call sym.check_cedit	      5595	option.c	FUNCTION_26	CALL_18
0x400373b	    0x488b3d000000	            mov rdi, qword [0x04003742] 	      5598	option.c	FUNCTION_26	CALL_19
0x4003742	      0xe8d9d3ffff	                   call sym.briopt_check	      5598	option.c	FUNCTION_26	CALL_19
0x4003747	      0xb800000000	                              mov eax, 0	      5598	option.c	FUNCTION_26	CALL_19
0x400374c	         0xf1f4000	                         nop dword [rax]	      5598	option.c	FUNCTION_26	CALL_19
0x4003750	          0xc60000	                       mov byte [rax], 0	     12314	option.c	FUNCTION_105	FOR_1
0x4003753	        0x4883c001	                              add rax, 1	     12314	option.c	FUNCTION_105	FOR_1
0x4003757	    0x483d00000000	                              cmp rax, 0	     12313	option.c	FUNCTION_105	FOR_1
0x400375d	            0x75f1	                           jne 0x4003750	     12313	option.c	FUNCTION_105	FOR_1
0x400375f	    0x488b15000000	            mov rdx, qword [0x04003766] 	     12316	option.c	FUNCTION_105	IF_1
0x4003766	          0x4885d2	                           test rdx, rdx	     12316	option.c	FUNCTION_105	IF_1
0x4003769	            0x7510	                           jne 0x400377b	     12316	option.c	FUNCTION_105	IF_1
0x400376b	            0xeb15	                           jmp 0x4003782	     12316	option.c	FUNCTION_105	IF_1
0x400376d	           0xf1f00	                         nop dword [rax]	     12316	option.c	FUNCTION_105	IF_1
0x4003770	    0xc68000000000	                       mov byte [rax], 1	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x4003777	        0x4883c201	                              add rdx, 1	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x400377b	           0xfb602	                   movzx eax, byte [rdx]	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x400377e	            0x84c0	                             test al, al	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4003780	            0x75ee	                           jne 0x4003770	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4003782	        0x4883c408	                              add rsp, 8	      5605	option.c	FUNCTION_26
0x4003786	              0xc3	                                     ret	      5605	option.c	FUNCTION_26
get_highlight_default	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:IF,1:functions,0:DO,0	13
0x4004f20	        0x4883ec08	                              sub rsp, 8	      9805	option.c	FUNCTION_58
0x4004f24	      0xbf00000000	                              mov edi, 0	      9808	option.c	FUNCTION_58	CALL_1
0x4004f29	      0xe882b5ffff	                     call sym.findoption	      9808	option.c	FUNCTION_58	CALL_1
0x4004f2e	            0x85c0	                           test eax, eax	      9809	option.c	FUNCTION_58	IF_1
0x4004f30	            0x7816	                            js 0x4004f48	      9809	option.c	FUNCTION_58	IF_1
0x4004f32	            0x4898	                                    cdqe	      9810	option.c	FUNCTION_58	IF_1
0x4004f34	        0x48c1e006	                              shl rax, 6	      9810	option.c	FUNCTION_58	IF_1
0x4004f38	    0x488b80000000	                    mov rax, qword [rax]	      9810	option.c	FUNCTION_58	IF_1
0x4004f3f	        0x4883c408	                              add rsp, 8	      9812	option.c	FUNCTION_58
0x4004f43	              0xc3	                                     ret	      9812	option.c	FUNCTION_58
0x4004f44	         0xf1f4000	                         nop dword [rax]	      9812	option.c	FUNCTION_58
0x4004f48	            0x31c0	                            xor eax, eax	      9811	option.c	FUNCTION_58
0x4004f4a	            0xebf3	                           jmp 0x4004f3f	      9811	option.c	FUNCTION_58
check_opt_wim	WHILE,1:FOR,4:ELSE,3:SWITCH,0:CALL,4:IF,7:functions,0:DO,0	110
0x4000940	              0x53	                                push rbx	     12388	option.c	FUNCTION_108
0x4000941	          0x4531db	                          xor r11d, r11d	     12397	option.c	FUNCTION_108	FOR_2
0x4000944	        0x4883ec10	                           sub rsp, 0x10	     12388	option.c	FUNCTION_108
0x4000948	    0x4c8b15000000	            mov r10, qword [0x0400094f] 	     12397	option.c	FUNCTION_108	FOR_2
0x400094f	    0x64488b042528	                mov rax, qword fs:[0x28]	     12388	option.c	FUNCTION_108
0x4000958	      0x4889442408	                mov qword [rsp + 8], rax	     12388	option.c	FUNCTION_108
0x400095d	            0x31c0	                            xor eax, eax	     12388	option.c	FUNCTION_108
0x400095f	        0xc6042400	                       mov byte [rsp], 0	     12395	option.c	FUNCTION_108	FOR_1
0x4000963	      0xc644240100	                   mov byte [rsp + 1], 0	     12395	option.c	FUNCTION_108	FOR_1
0x4000968	        0x450fb602	                   movzx r8d, byte [r10]	     12397	option.c	FUNCTION_108	FOR_2
0x400096c	      0xc644240200	                   mov byte [rsp + 2], 0	     12395	option.c	FUNCTION_108	FOR_1
0x4000971	      0xc644240300	                   mov byte [rsp + 3], 0	     12395	option.c	FUNCTION_108	FOR_1
0x4000976	          0x4584c0	                           test r8b, r8b	     12397	option.c	FUNCTION_108	FOR_2
0x4000979	     0xf84e1000000	                            je 0x4000a60	     12397	option.c	FUNCTION_108	FOR_2
0x400097f	    0x48bb01000000	          movabs rbx, 0x400100000000001 	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4000989	     0xf1f80000000	                         nop dword [rax]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4000990	          0x4489c2	                            mov edx, r8d	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000993	            0x31c9	                            xor ecx, ecx	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000995	        0x498d4201	                      lea rax, [r10 + 1]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000999	          0x83e2df	                     and edx, 0xffffffdf	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x400099c	          0x4d89d1	                             mov r9, r10	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x400099f	          0x83ea41	                           sub edx, 0x41	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009a2	          0x80fa19	                            cmp dl, 0x19	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009a5	            0x7725	                            ja 0x40009cc	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009a7	    0x660f1f840000	                    nop word [rax + rax]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009b0	        0x440fb600	                   movzx r8d, byte [rax]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009b4	          0x83c101	                              add ecx, 1	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009b7	          0x4989c1	                             mov r9, rax	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009ba	        0x4883c001	                              add rax, 1	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009be	          0x4489c2	                            mov edx, r8d	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009c1	          0x83e2df	                     and edx, 0xffffffdf	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009c4	          0x83ea41	                           sub edx, 0x41	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009c7	          0x80fa19	                            cmp dl, 0x19	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009ca	            0x76e4	                           jbe 0x40009b0	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x40009cc	        0x4180f83a	                           cmp r8b, 0x3a	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x40009d0	            0x7714	                            ja 0x40009e6	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x40009d2	        0x4c0fa3c3	                              bt rbx, r8	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x40009d6	            0x730e	                           jae 0x40009e6	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x40009d8	          0x83f907	                              cmp ecx, 7	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x40009db	     0xf84f7000000	                            je 0x4000ad8	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x40009e1	          0x83f904	                              cmp ecx, 4	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40009e4	            0x7422	                            je 0x4000a08	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x40009e6	            0x31c0	                            xor eax, eax	     12402	option.c	FUNCTION_108	FOR_2	IF_1
0x40009e8	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     12433	option.c	FUNCTION_108
0x40009ed	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     12433	option.c	FUNCTION_108
0x40009f6	     0xf8517010000	                           jne 0x4000b13	     12433	option.c	FUNCTION_108
0x40009fc	        0x4883c410	                           add rsp, 0x10	     12433	option.c	FUNCTION_108
0x4000a00	              0x5b	                                 pop rbx	     12433	option.c	FUNCTION_108
0x4000a01	              0xc3	                                     ret	     12433	option.c	FUNCTION_108
0x4000a02	    0x660f1f440000	                    nop word [rax + rax]	     12433	option.c	FUNCTION_108
0x4000a08	      0xbf00000000	                              mov edi, 0	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000a0d	      0xb904000000	                              mov ecx, 4	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000a12	          0x4c89d6	                            mov rsi, r10	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000a15	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000a17	     0xf8593000000	                           jne 0x4000ab0	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000a1d	          0x4963c3	                        movsxd rax, r11d	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x4000a20	        0x800c0401	                  or byte [rsp + rax], 1	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x4000a24	         0xf1f4000	                         nop dword [rax]	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x4000a28	          0x4584c0	                           test r8b, r8b	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x4000a2b	            0x741c	                            je 0x4000a49	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x4000a2d	        0x4180f82c	                           cmp r8b, 0x2c	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x4000a31	     0xf84c9000000	                            je 0x4000b00	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x4000a37	      0x450fb64101	                movzx r8d, byte [r9 + 1]	     12397	option.c	FUNCTION_108	FOR_2
0x4000a3c	        0x4d8d5101	                       lea r10, [r9 + 1]	     12397	option.c	FUNCTION_108	FOR_2
0x4000a40	          0x4584c0	                           test r8b, r8b	     12397	option.c	FUNCTION_108	FOR_2
0x4000a43	     0xf8547ffffff	                           jne 0x4000990	     12397	option.c	FUNCTION_108	FOR_2
0x4000a49	        0x4183fb02	                             cmp r11d, 2	     12423	option.c	FUNCTION_108	WHILE_1
0x4000a4d	            0x7f22	                            jg 0x4000a71	     12423	option.c	FUNCTION_108	WHILE_1
0x4000a4f	          0x4963c3	                        movsxd rax, r11d	     12423	option.c	FUNCTION_108	WHILE_1
0x4000a52	      0x440fb60404	             movzx r8d, byte [rsp + rax]	     12423	option.c	FUNCTION_108	WHILE_1
0x4000a57	    0x660f1f840000	                    nop word [rax + rax]	     12423	option.c	FUNCTION_108	WHILE_1
0x4000a60	        0x4183c301	                             add r11d, 1	     12425	option.c	FUNCTION_108	WHILE_1
0x4000a64	          0x4963c3	                        movsxd rax, r11d	     12425	option.c	FUNCTION_108	WHILE_1
0x4000a67	        0x4183fb03	                             cmp r11d, 3	     12423	option.c	FUNCTION_108	WHILE_1
0x4000a6b	        0x44880404	               mov byte [rsp + rax], r8b	     12425	option.c	FUNCTION_108	WHILE_1
0x4000a6f	            0x75ef	                           jne 0x4000a60	     12423	option.c	FUNCTION_108	WHILE_1
0x4000a71	         0xfb60424	                   movzx eax, byte [rsp]	     12431	option.c	FUNCTION_108	FOR_4
0x4000a75	    0x880500000000	               mov byte [0x04000a7b], al	     12431	option.c	FUNCTION_108	FOR_4
0x4000a7b	       0xfb6442401	               movzx eax, byte [rsp + 1]	     12431	option.c	FUNCTION_108	FOR_4
0x4000a80	    0x880500000000	               mov byte [0x04000a86], al	     12431	option.c	FUNCTION_108	FOR_4
0x4000a86	       0xfb6442402	               movzx eax, byte [rsp + 2]	     12431	option.c	FUNCTION_108	FOR_4
0x4000a8b	    0x880500000000	               mov byte [0x04000a91], al	     12431	option.c	FUNCTION_108	FOR_4
0x4000a91	       0xfb6442403	               movzx eax, byte [rsp + 3]	     12431	option.c	FUNCTION_108	FOR_4
0x4000a96	    0x880500000000	               mov byte [0x04000a9c], al	     12431	option.c	FUNCTION_108	FOR_4
0x4000a9c	      0xb801000000	                              mov eax, 1	     12432	option.c	FUNCTION_108
0x4000aa1	      0xe942ffffff	                           jmp 0x40009e8	     12432	option.c	FUNCTION_108
0x4000aa6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12432	option.c	FUNCTION_108
0x4000ab0	      0xbf00000000	                              mov edi, 0	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4000ab5	      0xb904000000	                              mov ecx, 4	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4000aba	          0x4c89d6	                            mov rsi, r10	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4000abd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4000abf	     0xf8521ffffff	                           jne 0x40009e6	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4000ac5	          0x4963c3	                        movsxd rax, r11d	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4000ac8	        0x800c0404	                  or byte [rsp + rax], 4	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4000acc	      0xe957ffffff	                           jmp 0x4000a28	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4000ad1	     0xf1f80000000	                         nop dword [rax]	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4000ad8	      0xbf00000000	                              mov edi, 0	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4000add	      0xb907000000	                              mov ecx, 7	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4000ae2	          0x4c89d6	                            mov rsi, r10	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4000ae5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4000ae7	     0xf85f9feffff	                           jne 0x40009e6	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4000aed	          0x4963c3	                        movsxd rax, r11d	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4000af0	        0x800c0402	                  or byte [rsp + rax], 2	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4000af4	      0xe92fffffff	                           jmp 0x4000a28	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4000af9	     0xf1f80000000	                         nop dword [rax]	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4000b00	        0x4183fb03	                             cmp r11d, 3	     12416	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x4000b04	     0xf84dcfeffff	                            je 0x40009e6	     12416	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x4000b0a	        0x4183c301	                             add r11d, 1	     12418	option.c	FUNCTION_108	FOR_2	IF_6
0x4000b0e	      0xe924ffffff	                           jmp 0x4000a37	     12418	option.c	FUNCTION_108	FOR_2	IF_6
0x4000b13	      0xe800000000	                          call 0x4000b18	     12433	option.c	FUNCTION_108
option_value2string	WHILE,0:FOR,0:ELSE,7:SWITCH,0:CALL,10:IF,7:functions,0:DO,0	98
0x4002860	            0x4154	                                push r12	     11769	option.c	FUNCTION_91
0x4002862	              0x55	                                push rbp	     11769	option.c	FUNCTION_91
0x4002863	              0x53	                                push rbx	     11769	option.c	FUNCTION_91
0x4002864	          0x4889fb	                            mov rbx, rdi	     11769	option.c	FUNCTION_91
0x4002867	      0xe8f4fbffff	                 call sym.get_varp_scope	     11772	option.c	FUNCTION_91	CALL_1
0x400286c	          0x4889c5	                            mov rbp, rax	     11772	option.c	FUNCTION_91	CALL_1
0x400286f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     11774	option.c	FUNCTION_91	IF_1
0x4002873	            0xa802	                              test al, 2	     11774	option.c	FUNCTION_91	IF_1
0x4002875	            0x7449	                            je 0x40028c0	     11774	option.c	FUNCTION_91	IF_1
0x4002877	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x400287e	     0xf848c000000	                            je 0x4002910	     11813	option.c	FUNCTION_92	IF_1
0x4002884	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x400288b	     0xf847f000000	                            je 0x4002910	     11813	option.c	FUNCTION_92	IF_1
0x4002891	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4002892	        0x4c8b4500	                     mov r8, qword [rbp]	        33	stdio2.h	FUNCTION_132	CALL_1
0x4002896	    0x488b3d000000	            mov rdi, qword [0x0400289d] 	        33	stdio2.h	FUNCTION_132	CALL_1
0x400289d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_132	CALL_1
0x40028a2	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x40028a3	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x40028a5	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_132	CALL_1
0x40028ac	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_132	CALL_1
0x40028b1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_132	CALL_1
0x40028b3	      0xe900000000	                           jmp 0x40028b8	        33	stdio2.h	FUNCTION_132	CALL_1
0x40028b8	     0xf1f84000000	                   nop dword [rax + rax]	        33	stdio2.h	FUNCTION_132	CALL_1
0x40028c0	        0x488b7500	                    mov rsi, qword [rbp]	     11787	option.c	FUNCTION_91	ELSE_3
0x40028c4	          0x4885f6	                           test rsi, rsi	     11788	option.c	FUNCTION_91	ELSE_3	IF_4
0x40028c7	            0x7437	                            je 0x4002900	     11788	option.c	FUNCTION_91	ELSE_3	IF_4
0x40028c9	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x40028cd	    0x4881fa000000	                              cmp rdx, 0	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x40028d4	            0x747a	                            je 0x4002950	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x40028d6	            0xa810	                           test al, 0x10	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x40028d8	            0x757f	                           jne 0x4002959	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x40028da	    0x4881fa000000	                              cmp rdx, 0	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40028e1	     0xf8491000000	                            je 0x4002978	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x40028e7	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x40028e8	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x40028e9	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x40028eb	    0x488b3d000000	            mov rdi, qword [0x040028f2] 	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x40028f2	      0xbaff0f0000	                          mov edx, 0xfff	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x40028f7	      0xe900000000	                           jmp 0x40028fc	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x40028fc	         0xf1f4000	                         nop dword [rax]	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x4002900	    0x488b05000000	            mov rax, qword [0x04002907] 	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x4002907	          0xc60000	                       mov byte [rax], 0	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x400290a	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x400290b	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x400290c	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x400290e	              0xc3	                                     ret	     11803	option.c	FUNCTION_91
0x400290f	              0x90	                                     nop	     11803	option.c	FUNCTION_91
0x4002910	        0x488b5d00	                    mov rbx, qword [rbp]	     11815	option.c	FUNCTION_92	IF_1
0x4002914	          0x4885db	                           test rbx, rbx	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002917	          0x4189dc	                           mov r12d, ebx	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400291a	            0x780f	                            js 0x400292b	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400291c	            0x89df	                            mov edi, ebx	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400291e	      0xe800000000	                          call 0x4002923	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002923	            0x85c0	                           test eax, eax	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002925	     0xf888d000000	                            js 0x40029b8	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400292b	            0x31f6	                            xor esi, esi	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x400292d	          0x4489e7	                           mov edi, r12d	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x4002930	      0xe800000000	                          call 0x4002935	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x4002935	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4002936	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x4002937	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x4002939	    0x488b3d000000	            mov rdi, qword [0x04002940] 	       110	string3.h	FUNCTION_126	CALL_3
0x4002940	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_126	CALL_3
0x4002943	      0xe900000000	                           jmp 0x4002948	       110	string3.h	FUNCTION_126	CALL_3
0x4002948	     0xf1f84000000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_126	CALL_3
0x4002950	          0x803e00	                       cmp byte [rsi], 0	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4002953	            0x7543	                           jne 0x4002998	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4002955	            0xa810	                           test al, 0x10	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002957	            0x748e	                            je 0x40028e7	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002959	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x400295a	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x400295b	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x400295d	    0x488b15000000	            mov rdx, qword [0x04002964] 	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002964	          0x4531c0	                            xor r8d, r8d	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002967	      0xb900100000	                         mov ecx, 0x1000	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x400296c	            0x31ff	                            xor edi, edi	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x400296e	      0xe900000000	                           jmp 0x4002973	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002973	       0xf1f440000	                   nop dword [rax + rax]	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4002978	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4002979	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x400297a	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x400297c	    0x488b35000000	            mov rsi, qword [0x04002983] 	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4002983	    0x488b3d000000	            mov rdi, qword [0x0400298a] 	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x400298a	      0xba00100000	                         mov edx, 0x1000	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x400298f	      0xe900000000	                           jmp 0x4002994	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4002994	         0xf1f4000	                         nop dword [rax]	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4002998	    0x488b05000000	            mov rax, qword [0x0400299f] 	       110	string3.h	FUNCTION_126	CALL_3
0x400299f	      0xba2a000000	                           mov edx, 0x2a	       110	string3.h	FUNCTION_126	CALL_3
0x40029a4	    0xc7002a2a2a2a	            mov dword [rax], 0x2a2a2a2a 	       110	string3.h	FUNCTION_126	CALL_3
0x40029aa	        0x66895004	                  mov word [rax + 4], dx	       110	string3.h	FUNCTION_126	CALL_3
0x40029ae	      0xe957ffffff	                           jmp 0x400290a	       110	string3.h	FUNCTION_126	CALL_3
0x40029b3	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_126	CALL_3
0x40029b8	          0x4885db	                           test rbx, rbx	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40029bb	     0xf84d0feffff	                            je 0x4002891	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40029c1	            0x89df	                            mov edi, ebx	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40029c3	      0xe800000000	                          call 0x40029c8	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x40029c8	      0xe968ffffff	                           jmp 0x4002935	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
did_set_option	WHILE,0:FOR,0:ELSE,1:SWITCH,0:CALL,0:IF,2:functions,0:DO,0	20
0x4000110	          0x4863c7	                         movsxd rax, edi	      5303	option.c	FUNCTION_17
0x4000113	            0x89f1	                            mov ecx, esi	      5300	option.c	FUNCTION_17
0x4000115	        0x48c1e006	                              shl rax, 6	      5303	option.c	FUNCTION_17
0x4000119	    0x488188000000	                   or qword [rax], 0x100	      5303	option.c	FUNCTION_17
0x4000124	      0xe817ffffff	                  call sym.insecure_flag	      5308	option.c	FUNCTION_17
0x4000129	    0x8b3d00000000	            mov edi, dword [0x0400012f] 	      5309	option.c	FUNCTION_17	IF_1
0x400012f	            0x85ff	                           test edi, edi	      5309	option.c	FUNCTION_17	IF_1
0x4000131	            0x751d	                           jne 0x4000150	      5309	option.c	FUNCTION_17	IF_1
0x4000133	    0x8b3500000000	            mov esi, dword [0x04000139] 	      5311	option.c	FUNCTION_17	IF_1
0x4000139	            0x85f6	                           test esi, esi	      5311	option.c	FUNCTION_17	IF_1
0x400013b	            0x7513	                           jne 0x4000150	      5311	option.c	FUNCTION_17	IF_1
0x400013d	          0x83e108	                              and ecx, 8	      5313	option.c	FUNCTION_17	IF_1
0x4000140	            0x750e	                           jne 0x4000150	      5313	option.c	FUNCTION_17	IF_1
0x4000142	            0x85d2	                           test edx, edx	      5315	option.c	FUNCTION_17	ELSE_1	IF_2
0x4000144	            0x7407	                            je 0x400014d	      5315	option.c	FUNCTION_17	ELSE_1	IF_2
0x4000146	    0x488120ffff7f	     and qword [rax], 0xffffffffff7fffff	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x400014d	            0xf3c3	                                     ret	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x400014f	              0x90	                                     nop	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4000150	    0x488108000080	                or qword [rax], 0x800000	      5314	option.c	FUNCTION_17	IF_1
0x4000157	              0xc3	                                     ret	      5314	option.c	FUNCTION_17	IF_1
set_init_1	WHILE,0:FOR,3:ELSE,9:SWITCH,0:CALL,86:IF,41:functions,0:DO,0	353
0x400e860	            0x4156	                                push r14	      3329	option.c	FUNCTION_1
0x400e862	            0x4155	                                push r13	      3329	option.c	FUNCTION_1
0x400e864	            0x4154	                                push r12	      3329	option.c	FUNCTION_1
0x400e866	              0x55	                                push rbp	      3329	option.c	FUNCTION_1
0x400e867	          0x4189fc	                           mov r12d, edi	      3329	option.c	FUNCTION_1
0x400e86a	              0x53	                                push rbx	      3329	option.c	FUNCTION_1
0x400e86b	        0x4883ec40	                           sub rsp, 0x40	      3329	option.c	FUNCTION_1
0x400e86f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3329	option.c	FUNCTION_1
0x400e878	      0x4889442438	             mov qword [rsp + 0x38], rax	      3329	option.c	FUNCTION_1
0x400e87d	            0x31c0	                            xor eax, eax	      3329	option.c	FUNCTION_1
0x400e87f	              0x90	                                     nop	      3329	option.c	FUNCTION_1
0x400e880	    0x888000000000	                      mov byte [rax], al	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x400e886	        0x4883c001	                              add rax, 1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x400e88a	    0x483d00010000	                          cmp rax, 0x100	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x400e890	            0x75ee	                           jne 0x400e880	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x400e892	      0xba08000000	                              mov edx, 8	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x400e897	      0xbe08000000	                              mov esi, 8	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x400e89c	      0xbf00000000	                              mov edi, 0	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x400e8a1	      0xe800000000	                          call 0x400e8a6	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x400e8a6	      0xbf00000000	                              mov edi, 0	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400e8ab	    0xc70500000000	               mov dword [0x0400e8b5], 1	      3339	option.c	FUNCTION_1
0x400e8b5	      0xe800000000	                          call 0x400e8ba	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400e8ba	          0x4885c0	                           test rax, rax	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400e8bd	            0x7422	                            je 0x400e8e1	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x400e8bf	            0x31d2	                            xor edx, edx	      3898	option.c	FUNCTION_5	CALL_1
0x400e8c1	      0xbe00000000	                              mov esi, 0	      3898	option.c	FUNCTION_5	CALL_1
0x400e8c6	      0xbf00000000	                              mov edi, 0	      3898	option.c	FUNCTION_5	CALL_1
0x400e8cb	      0xe8201effff	         call sym.set_string_default_esc	      3898	option.c	FUNCTION_5	CALL_1
0x400e8d0	            0x31d2	                            xor edx, edx	      3898	option.c	FUNCTION_5	CALL_1
0x400e8d2	      0xbe00000000	                              mov esi, 0	      3898	option.c	FUNCTION_5	CALL_1
0x400e8d7	      0xbf00000000	                              mov edi, 0	      3898	option.c	FUNCTION_5	CALL_1
0x400e8dc	      0xe80f1effff	         call sym.set_string_default_esc	      3898	option.c	FUNCTION_5	CALL_1
0x400e8e1	      0xbf00000000	                              mov edi, 0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400e8e6	      0xe800000000	                          call 0x400e8eb	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400e8eb	          0x4885c0	                           test rax, rax	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400e8ee	            0x7409	                            je 0x400e8f9	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400e8f0	          0x803800	                       cmp byte [rax], 0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400e8f3	     0xf851d050000	                           jne 0x400ee16	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x400e8f9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3377	option.c	FUNCTION_1	CALL_9
0x400e8fe	      0xba64000000	                           mov edx, 0x64	      3377	option.c	FUNCTION_1	CALL_9
0x400e903	      0xbe01000000	                              mov esi, 1	      3377	option.c	FUNCTION_1	CALL_9
0x400e908	      0xbb00000000	                              mov ebx, 0	      3377	option.c	FUNCTION_1	CALL_9
0x400e90d	      0xe800000000	                          call 0x400e912	      3377	option.c	FUNCTION_1	CALL_9
0x400e912	      0xbf00000000	                              mov edi, 0	      3377	option.c	FUNCTION_1	CALL_9
0x400e917	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3380	option.c	FUNCTION_1	FOR_1
0x400e91f	          0x803f00	                       cmp byte [rdi], 0	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x400e922	    0x41bd07000000	                             mov r13d, 7	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x400e928	      0xbd00000000	                              mov ebp, 0	      3386	option.c	FUNCTION_1	FOR_1
0x400e92d	            0x7541	                           jne 0x400e970	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x400e92f	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400e934	          0x4489ee	                           mov esi, r13d	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400e937	      0xe800000000	                          call 0x400e93c	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400e93c	          0x83f801	                              cmp eax, 1	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400e93f	     0xf8418040000	                            je 0x400ed5d	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x400e945	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x400e949	            0x85c9	                           test ecx, ecx	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x400e94b	            0x7408	                            je 0x400e955	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x400e94d	          0x4889ef	                            mov rdi, rbp	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x400e950	      0xe800000000	                          call 0x400e955	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x400e955	        0x4883c308	                              add rbx, 8	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x400e959	    0x4881fb000000	                              cmp rbx, 0	      3378	option.c	FUNCTION_1	FOR_1
0x400e960	            0x7433	                            je 0x400e995	      3378	option.c	FUNCTION_1	FOR_1
0x400e962	          0x488b3b	                    mov rdi, qword [rbx]	      3378	option.c	FUNCTION_1	FOR_1
0x400e965	            0xebb0	                           jmp 0x400e917	      3378	option.c	FUNCTION_1	FOR_1
0x400e967	    0x660f1f840000	                    nop word [rax + rax]	      3378	option.c	FUNCTION_1	FOR_1
0x400e970	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x400e975	      0xe800000000	                          call 0x400e97a	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x400e97a	          0x4885c0	                           test rax, rax	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400e97d	          0x4889c5	                            mov rbp, rax	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x400e980	            0x74c3	                            je 0x400e945	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400e982	          0x803800	                       cmp byte [rax], 0	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400e985	            0x74be	                            je 0x400e945	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400e987	          0x4889c7	                            mov rdi, rax	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400e98a	      0xe800000000	                          call 0x400e98f	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400e98f	        0x448d6803	                     lea r13d, [rax + 3]	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400e993	            0xeb9a	                           jmp 0x400e92f	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x400e995	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      3408	option.c	FUNCTION_1	IF_8
0x400e99a	          0x4885f6	                           test rsi, rsi	      3408	option.c	FUNCTION_1	IF_8
0x400e99d	            0x7416	                            je 0x400e9b5	      3408	option.c	FUNCTION_1	IF_8
0x400e99f	      0xbf00000000	                              mov edi, 0	      3898	option.c	FUNCTION_5	CALL_1
0x400e9a4	            0x31d2	                            xor edx, edx	      3898	option.c	FUNCTION_5	CALL_1
0x400e9a6	      0xe8451dffff	         call sym.set_string_default_esc	      3898	option.c	FUNCTION_5	CALL_1
0x400e9ab	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x400e9b0	      0xe800000000	                          call 0x400e9b5	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x400e9b5	      0xbf00000000	                              mov edi, 0	      3419	option.c	FUNCTION_1	CALL_20
0x400e9ba	      0xe8f11affff	                     call sym.findoption	      3419	option.c	FUNCTION_1	CALL_20
0x400e9bf	          0x4863d8	                         movsxd rbx, eax	      3419	option.c	FUNCTION_1	CALL_20
0x400e9c2	            0x85db	                           test ebx, ebx	      3420	option.c	FUNCTION_1	IF_9
0x400e9c4	            0x7834	                            js 0x400e9fa	      3420	option.c	FUNCTION_1	IF_9
0x400e9c6	            0x31ff	                            xor edi, edi	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x400e9c8	        0x48c1e306	                              shl rbx, 6	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400e9cc	      0xe800000000	                          call 0x400e9d1	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x400e9d1	      0xbf00000000	                              mov edi, 0	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x400e9d6	          0x48d1e8	                              shr rax, 1	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400e9d9	          0x4889c5	                            mov rbp, rax	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400e9dc	    0x488983000000	                    mov qword [rbx], rax	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x400e9e3	      0xe8c81affff	                     call sym.findoption	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x400e9e8	            0x85c0	                           test eax, eax	      3439	option.c	FUNCTION_1	IF_9	IF_10	IF_11
0x400e9ea	            0x780e	                            js 0x400e9fa	      3439	option.c	FUNCTION_1	IF_9	IF_10	IF_11
0x400e9ec	          0x4863d0	                         movsxd rdx, eax	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x400e9ef	        0x48c1e206	                              shl rdx, 6	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x400e9f3	    0x4889aa000000	                    mov qword [rdx], rbp	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x400e9fa	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3459	option.c	FUNCTION_1	CALL_24
0x400e9ff	      0xbf00000000	                              mov edi, 0	      3459	option.c	FUNCTION_1	CALL_24
0x400ea04	    0xc74424200000	               mov dword [rsp + 0x20], 0	      3456	option.c	FUNCTION_1
0x400ea0c	      0xe800000000	                          call 0x400ea11	      3459	option.c	FUNCTION_1	CALL_24
0x400ea11	          0x4885c0	                           test rax, rax	      3460	option.c	FUNCTION_1	IF_13
0x400ea14	          0x4989c5	                            mov r13, rax	      3459	option.c	FUNCTION_1	CALL_24
0x400ea17	     0xf84c8000000	                            je 0x400eae5	      3460	option.c	FUNCTION_1	IF_13
0x400ea1d	          0x4889c7	                            mov rdi, rax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400ea20	      0xe800000000	                          call 0x400ea25	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400ea25	        0x8d7c0002	                lea edi, [rax + rax + 2]	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400ea29	      0xe800000000	                          call 0x400ea2e	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400ea2e	          0x4885c0	                           test rax, rax	      3463	option.c	FUNCTION_1	IF_13	IF_14
0x400ea31	          0x4889c5	                            mov rbp, rax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x400ea34	     0xf849f000000	                            je 0x400ead9	      3463	option.c	FUNCTION_1	IF_13	IF_14
0x400ea3a	          0xc6002c	                    mov byte [rax], 0x2c	      3465	option.c	FUNCTION_1	IF_13	IF_14
0x400ea3d	      0x410fb67d00	                   movzx edi, byte [r13]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea42	          0x4084ff	                           test dil, dil	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea45	     0xf84ef030000	                            je 0x400ee3a	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea4b	      0xbb01000000	                              mov ebx, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea50	          0x4d89ee	                            mov r14, r13	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea53	            0xeb1b	                           jmp 0x400ea70	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea55	           0xf1f00	                         nop dword [rax]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea58	          0x4863c3	                         movsxd rax, ebx	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400ea5b	        0x4983c601	                              add r14, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea5f	          0x83c301	                              add ebx, 1	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400ea62	      0xc64405002c	              mov byte [rbp + rax], 0x2c	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x400ea67	        0x410fb63e	                   movzx edi, byte [r14]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea6b	          0x4084ff	                           test dil, dil	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea6e	            0x7434	                            je 0x400eaa4	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea70	      0xe800000000	                          call 0x400ea75	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400ea75	            0x85c0	                           test eax, eax	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400ea77	            0x75df	                           jne 0x400ea58	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x400ea79	        0x410fb606	                   movzx eax, byte [r14]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ea7d	            0x3c20	                            cmp al, 0x20	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ea7f	     0xf846b010000	                            je 0x400ebf0	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ea85	            0x3c2c	                            cmp al, 0x2c	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ea87	     0xf8463010000	                            je 0x400ebf0	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ea8d	          0x4863d3	                         movsxd rdx, ebx	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400ea90	        0x4983c601	                              add r14, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea94	          0x83c301	                              add ebx, 1	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400ea97	        0x88441500	                mov byte [rbp + rdx], al	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x400ea9b	        0x410fb63e	                   movzx edi, byte [r14]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ea9f	          0x4084ff	                           test dil, dil	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400eaa2	            0x75cc	                           jne 0x400ea70	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400eaa4	          0x4863db	                         movsxd rbx, ebx	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400eaa7	      0xc6441d0000	                 mov byte [rbp + rbx], 0	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x400eaac	      0xbf00000000	                              mov edi, 0	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x400eab1	      0xe8fa19ffff	                     call sym.findoption	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x400eab6	            0x85c0	                           test eax, eax	      3480	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400eab8	     0xf886f030000	                            js 0x400ee2d	      3480	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400eabe	            0x4898	                                    cdqe	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400eac0	        0x48c1e006	                              shl rax, 6	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400eac4	    0x4889a8000000	                    mov qword [rax], rbp	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400eacb	    0x480500000000	                              add rax, 0	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400ead1	    0x488148108000	             or qword [rax + 0x10], 0x80	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x400ead9	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x400eadd	            0x85d2	                           test edx, edx	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x400eadf	     0xf85f6010000	                           jne 0x400ecdb	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x400eae5	            0x31d2	                            xor edx, edx	      3898	option.c	FUNCTION_5	CALL_1
0x400eae7	      0xbe00000000	                              mov esi, 0	      3898	option.c	FUNCTION_5	CALL_1
0x400eaec	      0xbf00000000	                              mov edi, 0	      3898	option.c	FUNCTION_5	CALL_1
0x400eaf1	      0xe8fa1bffff	         call sym.set_string_default_esc	      3898	option.c	FUNCTION_5	CALL_1
0x400eaf6	            0x31ff	                            xor edi, edi	      3537	option.c	FUNCTION_1	CALL_33
0x400eaf8	      0xe8f35cffff	            call sym.set_options_default	      3537	option.c	FUNCTION_1	CALL_33
0x400eafd	          0x4585e4	                         test r12d, r12d	      3540	option.c	FUNCTION_1	IF_19
0x400eb00	     0xf85fa010000	                           jne 0x400ed00	      3540	option.c	FUNCTION_1	IF_19
0x400eb06	    0x8b0500000000	            mov eax, dword [0x0400eb0c] 	      3558	option.c	FUNCTION_1	IF_22
0x400eb0c	            0x85c0	                           test eax, eax	      3558	option.c	FUNCTION_1	IF_22
0x400eb0e	     0xf85d4010000	                           jne 0x400ece8	      3558	option.c	FUNCTION_1	IF_22
0x400eb14	    0x488b3d000000	            mov rdi, qword [0x0400eb1b] 	      3562	option.c	FUNCTION_1
0x400eb1b	            0x31ed	                            xor ebp, ebp	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400eb1d	    0xc787a8120000	            mov dword [rdi + 0x12a8], 1 	      3562	option.c	FUNCTION_1
0x400eb27	    0xc78718160000	   mov dword [rdi + 0x1618], 0xffffffff 	      3563	option.c	FUNCTION_1
0x400eb31	    0x48c787481600	mov qword [rdi + 0x1648], 0xfffffffffffe1dc0 	      3564	option.c	FUNCTION_1
0x400eb3c	      0xe800000000	                          call 0x400eb41	      3565	option.c	FUNCTION_1	CALL_37
0x400eb41	    0x488b1d000000	            mov rbx, qword [0x0400eb48] 	      3566	option.c	FUNCTION_1	CALL_38
0x400eb48	    0x488dbbb00100	                  lea rdi, [rbx + 0x1b0]	     10951	option.c	FUNCTION_81	CALL_1
0x400eb4f	      0xe89c16ffff	                   call sym.check_winopt	     10951	option.c	FUNCTION_81	CALL_1
0x400eb54	    0x488dbb680300	                  lea rdi, [rbx + 0x368]	     10952	option.c	FUNCTION_81	CALL_2
0x400eb5b	      0xbb00000000	                              mov ebx, 0	     10952	option.c	FUNCTION_81	CALL_2
0x400eb60	      0xe88b16ffff	                   call sym.check_winopt	     10952	option.c	FUNCTION_81	CALL_2
0x400eb65	      0xe800000000	                          call 0x400eb6a	      3567	option.c	FUNCTION_1	CALL_39
0x400eb6a	      0xe8514affff	                 call sym.didset_options	      3570	option.c	FUNCTION_1	CALL_40
0x400eb6f	      0xe800000000	                          call 0x400eb74	      3575	option.c	FUNCTION_1	CALL_41
0x400eb74	            0xeb58	                           jmp 0x400ebce	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400eb76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400eb80	        0x488b4308	                mov rax, qword [rbx + 8]	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400eb84	          0x4885c0	                           test rax, rax	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400eb87	            0x7457	                            je 0x400ebe0	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x400eb89	          0x488b30	                    mov rsi, qword [rax]	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400eb8c	      0xba05000000	                              mov edx, 5	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400eb91	            0x31ff	                            xor edi, edi	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400eb93	      0xe800000000	                          call 0x400eb98	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x400eb98	          0x4885c0	                           test rax, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400eb9b	            0x742a	                            je 0x400ebc7	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400eb9d	          0x4889c7	                            mov rdi, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400eba0	      0xe800000000	                          call 0x400eba5	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400eba5	          0x4885c0	                           test rax, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400eba8	            0x741d	                            je 0x400ebc7	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x400ebaa	        0x488b5308	                mov rdx, qword [rbx + 8]	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x400ebae	          0x488902	                    mov qword [rdx], rax	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x400ebb1	          0x488b13	                    mov rdx, qword [rbx]	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400ebb4	          0xf6c280	                           test dl, 0x80	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400ebb7	     0xf8503010000	                           jne 0x400ecc0	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x400ebbd	          0x80ca80	                             or dl, 0x80	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x400ebc0	        0x48894318	             mov qword [rbx + 0x18], rax	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x400ebc4	          0x488913	                    mov qword [rbx], rdx	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x400ebc7	          0x83c501	                              add ebp, 1	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400ebca	        0x4883c340	                           add rbx, 0x40	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400ebce	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x400ebd2	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400ebd5	            0x7431	                            je 0x400ec08	     10375	option.c	FUNCTION_73
0x400ebd7	    0x48f703000010	              test qword [rbx], 0x100000	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x400ebde	            0x75a0	                           jne 0x400eb80	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x400ebe0	            0x31f6	                            xor esi, esi	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x400ebe2	            0x89ef	                            mov edi, ebp	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x400ebe4	      0xe8b720ffff	                  call sym.option_expand	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x400ebe9	            0xebad	                           jmp 0x400eb98	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x400ebeb	       0xf1f440000	                   nop dword [rax + rax]	      3593	option.c	FUNCTION_1	FOR_3	CALL_44
0x400ebf0	          0x4863c3	                         movsxd rax, ebx	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ebf3	          0x83c301	                              add ebx, 1	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ebf6	      0xc64405005c	              mov byte [rbp + rax], 0x5c	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ebfb	        0x410fb606	                   movzx eax, byte [r14]	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ebff	      0xe989feffff	                           jmp 0x400ea8d	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ec04	         0xf1f4000	                         nop dword [rax]	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x400ec08	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400ec0c	            0x75c9	                           jne 0x400ebd7	     10375	option.c	FUNCTION_73
0x400ec0e	    0x488b3d000000	            mov rdi, qword [0x0400ec15] 	      3609	option.c	FUNCTION_1	CALL_47
0x400ec15	      0xe800000000	                          call 0x400ec1a	      3609	option.c	FUNCTION_1	CALL_47
0x400ec1a	      0xbf00000000	                              mov edi, 0	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x400ec1f	      0xe800000000	                          call 0x400ec24	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x400ec24	          0x4885c0	                           test rax, rax	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x400ec27	            0x7413	                            je 0x400ec3c	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x400ec29	            0x31c9	                            xor ecx, ecx	      3619	option.c	FUNCTION_1	CALL_49
0x400ec2b	            0x31d2	                            xor edx, edx	      3619	option.c	FUNCTION_1	CALL_49
0x400ec2d	      0xbe01000000	                              mov esi, 1	      3619	option.c	FUNCTION_1	CALL_49
0x400ec32	      0xbf00000000	                              mov edi, 0	      3619	option.c	FUNCTION_1	CALL_49
0x400ec37	      0xe800000000	                          call 0x400ec3c	      3619	option.c	FUNCTION_1	CALL_49
0x400ec3c	      0xe8af25ffff	                call sym.didset_options2	      3622	option.c	FUNCTION_1	CALL_50
0x400ec41	      0xe800000000	                          call 0x400ec46	      3662	option.c	FUNCTION_1	CALL_64
0x400ec46	          0x4885c0	                           test rax, rax	      3663	option.c	FUNCTION_1	IF_32
0x400ec49	          0x4889c3	                            mov rbx, rax	      3662	option.c	FUNCTION_1	CALL_64
0x400ec4c	            0x7444	                            je 0x400ec92	      3663	option.c	FUNCTION_1	IF_32
0x400ec4e	    0x488b2d000000	            mov rbp, qword [0x0400ec55] 	      3669	option.c	FUNCTION_1	IF_32
0x400ec55	      0xbf00000000	                              mov edi, 0	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400ec5a	    0x488905000000	            mov qword [0x0400ec61], rax 	      3670	option.c	FUNCTION_1	IF_32
0x400ec61	      0xb908000000	                              mov ecx, 8	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400ec66	          0x4889c6	                            mov rsi, rax	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400ec69	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400ec6b	     0xf8445010000	                            je 0x400edb6	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x400ec71	      0xe800000000	                          call 0x400ec76	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400ec76	          0x4885c0	                           test rax, rax	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400ec79	     0xf845e010000	                            je 0x400eddd	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400ec7f	    0x488b3d000000	            mov rdi, qword [0x0400ec86] 	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_84
0x400ec86	      0xe800000000	                          call 0x400ec8b	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_84
0x400ec8b	    0x48892d000000	            mov qword [0x0400ec92], rbp 	      3744	option.c	FUNCTION_1	IF_32	ELSE_9
0x400ec92	      0xe800000000	                          call 0x400ec97	      3751	option.c	FUNCTION_1	CALL_86
0x400ec97	          0x4889c7	                            mov rdi, rax	      3751	option.c	FUNCTION_1	CALL_86
0x400ec9a	      0xe800000000	                          call 0x400ec9f	      3751	option.c	FUNCTION_1	CALL_86
0x400ec9f	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3753	option.c	FUNCTION_1
0x400eca4	    0x644833042528	                xor rax, qword fs:[0x28]	      3753	option.c	FUNCTION_1
0x400ecad	     0xf8591010000	                           jne 0x400ee44	      3753	option.c	FUNCTION_1
0x400ecb3	        0x4883c440	                           add rsp, 0x40	      3753	option.c	FUNCTION_1
0x400ecb7	              0x5b	                                 pop rbx	      3753	option.c	FUNCTION_1
0x400ecb8	              0x5d	                                 pop rbp	      3753	option.c	FUNCTION_1
0x400ecb9	            0x415c	                                 pop r12	      3753	option.c	FUNCTION_1
0x400ecbb	            0x415d	                                 pop r13	      3753	option.c	FUNCTION_1
0x400ecbd	            0x415e	                                 pop r14	      3753	option.c	FUNCTION_1
0x400ecbf	              0xc3	                                     ret	      3753	option.c	FUNCTION_1
0x400ecc0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400ecc4	      0x4889442408	                mov qword [rsp + 8], rax	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400ecc9	      0xe800000000	                          call 0x400ecce	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400ecce	          0x488b13	                    mov rdx, qword [rbx]	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400ecd1	      0x488b442408	                mov rax, qword [rsp + 8]	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400ecd6	      0xe9e2feffff	                           jmp 0x400ebbd	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x400ecdb	          0x4c89ef	                            mov rdi, r13	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x400ecde	      0xe800000000	                          call 0x400ece3	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x400ece3	      0xe9fdfdffff	                           jmp 0x400eae5	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x400ece8	            0x31c9	                            xor ecx, ecx	      3559	option.c	FUNCTION_1	CALL_36
0x400ecea	      0xba00000000	                              mov edx, 0	      3559	option.c	FUNCTION_1	CALL_36
0x400ecef	            0x31f6	                            xor esi, esi	      3559	option.c	FUNCTION_1	CALL_36
0x400ecf1	      0xbf00000000	                              mov edi, 0	      3559	option.c	FUNCTION_1	CALL_36
0x400ecf6	      0xe800000000	                          call 0x400ecfb	      3559	option.c	FUNCTION_1	CALL_36
0x400ecfb	      0xe914feffff	                           jmp 0x400eb14	      3559	option.c	FUNCTION_1	CALL_36
0x400ed00	      0xbf00000000	                              mov edi, 0	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x400ed05	      0xe8a617ffff	                     call sym.findoption	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x400ed0a	            0x85c0	                           test eax, eax	      3543	option.c	FUNCTION_1	IF_19	IF_20
0x400ed0c	            0x781c	                            js 0x400ed2a	      3543	option.c	FUNCTION_1	IF_19	IF_20
0x400ed0e	            0x4898	                                    cdqe	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400ed10	    0x48c705000000	               mov qword [0x0400ed1b], 0	      3546	option.c	FUNCTION_1	IF_19	IF_20
0x400ed1b	        0x48c1e006	                              shl rax, 6	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400ed1f	    0x48c780000000	                      mov qword [rax], 0	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x400ed2a	      0xbf00000000	                              mov edi, 0	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x400ed2f	      0xe87c17ffff	                     call sym.findoption	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x400ed34	            0x85c0	                           test eax, eax	      3549	option.c	FUNCTION_1	IF_19	IF_21
0x400ed36	     0xf88cafdffff	                            js 0x400eb06	      3549	option.c	FUNCTION_1	IF_19	IF_21
0x400ed3c	            0x4898	                                    cdqe	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x400ed3e	    0x48c705000000	               mov qword [0x0400ed49], 0	      3552	option.c	FUNCTION_1	IF_19	IF_21
0x400ed49	        0x48c1e006	                              shl rax, 6	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x400ed4d	    0x48c780000000	                      mov qword [rax], 0	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x400ed58	      0xe9a9fdffff	                           jmp 0x400eb06	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x400ed5d	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x400ed62	          0x4585c0	                           test r8d, r8d	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x400ed65	            0x7e17	                           jle 0x400ed7e	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x400ed67	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x400ed6c	          0x4c89f7	                            mov rdi, r14	       148	string3.h	FUNCTION_130	CALL_3
0x400ed6f	      0xe800000000	                          call 0x400ed74	       148	string3.h	FUNCTION_130	CALL_3
0x400ed74	      0xbf2c000000	                           mov edi, 0x2c	       148	string3.h	FUNCTION_130	CALL_3
0x400ed79	      0x6641893c06	                mov word [r14 + rax], di	       148	string3.h	FUNCTION_130	CALL_3
0x400ed7e	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       148	string3.h	FUNCTION_130	CALL_3
0x400ed83	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_130	CALL_3
0x400ed86	      0xe800000000	                          call 0x400ed8b	       148	string3.h	FUNCTION_130	CALL_3
0x400ed8b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x400ed90	      0xe800000000	                          call 0x400ed95	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x400ed95	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x400ed9a	          0x4c89f7	                            mov rdi, r14	       148	string3.h	FUNCTION_130	CALL_3
0x400ed9d	      0xe800000000	                          call 0x400eda2	       148	string3.h	FUNCTION_130	CALL_3
0x400eda2	      0xbe2a000000	                           mov esi, 0x2a	       148	string3.h	FUNCTION_130	CALL_3
0x400eda7	      0x6641893406	                mov word [r14 + rax], si	       148	string3.h	FUNCTION_130	CALL_3
0x400edac	      0x44016c2420	            add dword [rsp + 0x20], r13d	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x400edb1	      0xe98ffbffff	                           jmp 0x400e945	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x400edb6	      0xbf00000000	                              mov edi, 0	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x400edbb	      0xe800000000	                          call 0x400edc0	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x400edc0	          0x4889df	                            mov rdi, rbx	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x400edc3	    0x488905000000	            mov qword [0x0400edca], rax 	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x400edca	      0xe800000000	                          call 0x400edcf	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x400edcf	      0xe800000000	                          call 0x400edd4	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400edd4	          0x4885c0	                           test rax, rax	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400edd7	     0xf85a2feffff	                           jne 0x400ec7f	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x400eddd	      0xbf00000000	                              mov edi, 0	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x400ede2	      0xe8c916ffff	                     call sym.findoption	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x400ede7	            0x85c0	                           test eax, eax	      3682	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400ede9	     0xf88a3feffff	                            js 0x400ec92	      3682	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400edef	    0x488b15000000	            mov rdx, qword [0x0400edf6] 	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400edf6	            0x4898	                                    cdqe	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400edf8	        0x48c1e006	                              shl rax, 6	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400edfc	    0x488990000000	                    mov qword [rax], rdx	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400ee03	    0x480500000000	                              add rax, 0	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400ee09	    0x488148108000	             or qword [rax + 0x10], 0x80	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400ee11	      0xe97cfeffff	                           jmp 0x400ec92	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x400ee16	      0xba01000000	                              mov edx, 1	      3360	option.c	FUNCTION_1	CALL_8
0x400ee1b	          0x4889c6	                            mov rsi, rax	      3360	option.c	FUNCTION_1	CALL_8
0x400ee1e	      0xbf00000000	                              mov edi, 0	      3360	option.c	FUNCTION_1	CALL_8
0x400ee23	      0xe8c818ffff	         call sym.set_string_default_esc	      3360	option.c	FUNCTION_1	CALL_8
0x400ee28	      0xe9ccfaffff	                           jmp 0x400e8f9	      3360	option.c	FUNCTION_1	CALL_8
0x400ee2d	          0x4889ef	                            mov rdi, rbp	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x400ee30	      0xe800000000	                          call 0x400ee35	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x400ee35	      0xe99ffcffff	                           jmp 0x400ead9	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x400ee3a	      0xbb01000000	                              mov ebx, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ee3f	      0xe963fcffff	                           jmp 0x400eaa7	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x400ee44	      0xe800000000	                          call 0x400ee49	      3753	option.c	FUNCTION_1
save_file_ff	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,3:IF,1:functions,0:DO,0	28
0x400b690	              0x55	                                push rbp	     12457	option.c	FUNCTION_110
0x400b691	              0x53	                                push rbx	     12457	option.c	FUNCTION_110
0x400b692	          0x4889fb	                            mov rbx, rdi	     12457	option.c	FUNCTION_110
0x400b695	        0x4883ec08	                              sub rsp, 8	     12457	option.c	FUNCTION_110
0x400b699	    0x488b87901400	          mov rax, qword [rdi + 0x1490] 	     12458	option.c	FUNCTION_110
0x400b6a0	    0x488baf081700	          mov rbp, qword [rdi + 0x1708] 	     12464	option.c	FUNCTION_110	IF_1
0x400b6a7	           0xfb600	                   movzx eax, byte [rax]	     12458	option.c	FUNCTION_110
0x400b6aa	          0x4885ed	                           test rbp, rbp	     12464	option.c	FUNCTION_110	IF_1
0x400b6ad	    0x898704170000	          mov dword [rdi + 0x1704], eax 	     12458	option.c	FUNCTION_110
0x400b6b3	    0x8b8770140000	          mov eax, dword [rdi + 0x1470] 	     12459	option.c	FUNCTION_110
0x400b6b9	    0x898700170000	          mov dword [rdi + 0x1700], eax 	     12459	option.c	FUNCTION_110
0x400b6bf	    0x8b870c140000	          mov eax, dword [rdi + 0x140c] 	     12461	option.c	FUNCTION_110
0x400b6c5	    0x898714170000	          mov dword [rdi + 0x1714], eax 	     12461	option.c	FUNCTION_110
0x400b6cb	            0x7413	                            je 0x400b6e0	     12464	option.c	FUNCTION_110	IF_1
0x400b6cd	    0x488bb7881400	          mov rsi, qword [rdi + 0x1488] 	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400b6d4	          0x4889ef	                            mov rdi, rbp	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400b6d7	      0xe800000000	                          call 0x400b6dc	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400b6dc	            0x85c0	                           test eax, eax	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400b6de	            0x741b	                            je 0x400b6fb	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x400b6e0	          0x4889ef	                            mov rdi, rbp	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x400b6e3	      0xe800000000	                          call 0x400b6e8	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x400b6e8	    0x488bbb881400	          mov rdi, qword [rbx + 0x1488] 	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x400b6ef	      0xe800000000	                          call 0x400b6f4	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x400b6f4	    0x488983081700	          mov qword [rbx + 0x1708], rax 	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x400b6fb	        0x4883c408	                              add rsp, 8	     12471	option.c	FUNCTION_110
0x400b6ff	              0x5b	                                 pop rbx	     12471	option.c	FUNCTION_110
0x400b700	              0x5d	                                 pop rbp	     12471	option.c	FUNCTION_110
0x400b701	              0xc3	                                     ret	     12471	option.c	FUNCTION_110
free_one_termoption	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,1:IF,2:functions,0:DO,0	33
0x40054b0	    0x48833d000000	               cmp qword [0x040054b8], 0	     10330	option.c	FUNCTION_71	FOR_1
0x40054b8	            0x7427	                            je 0x40054e1	     10330	option.c	FUNCTION_71	FOR_1
0x40054ba	    0x483b3d000000	            cmp rdi, qword [0x040054c1] 	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x40054c1	              0x53	                                push rbx	     10327	option.c	FUNCTION_71
0x40054c2	      0xbb00000000	                              mov ebx, 0	     10330	option.c	FUNCTION_71	FOR_1
0x40054c7	            0x750d	                           jne 0x40054d6	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x40054c9	            0xeb1d	                           jmp 0x40054e8	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x40054cb	       0xf1f440000	                   nop dword [rax + rax]	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x40054d0	        0x48397b18	            cmp qword [rbx + 0x18], rdi 	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x40054d4	            0x7412	                            je 0x40054e8	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x40054d6	        0x4883c340	                           add rbx, 0x40	     10330	option.c	FUNCTION_71	FOR_1
0x40054da	        0x48833b00	                      cmp qword [rbx], 0	     10330	option.c	FUNCTION_71	FOR_1
0x40054de	            0x75f0	                           jne 0x40054d0	     10330	option.c	FUNCTION_71	FOR_1
0x40054e0	              0x5b	                                 pop rbx	     10339	option.c	FUNCTION_71
0x40054e1	            0xf3c3	                                     ret	     10339	option.c	FUNCTION_71
0x40054e3	       0xf1f440000	                   nop dword [rax + rax]	     10339	option.c	FUNCTION_71
0x40054e8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40054ec	    0x488b15000000	            mov rdx, qword [0x040054f3] 	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40054f3	            0xa808	                              test al, 8	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40054f5	            0x741f	                            je 0x4005516	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40054f7	          0x488b3f	                    mov rdi, qword [rdi]	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x40054fa	    0x488b15000000	            mov rdx, qword [0x04005501] 	      5756	option.c	FUNCTION_30	IF_1
0x4005501	          0x4839d7	                            cmp rdi, rdx	      5756	option.c	FUNCTION_30	IF_1
0x4005504	            0x7410	                            je 0x4005516	      5756	option.c	FUNCTION_30	IF_1
0x4005506	      0xe800000000	                          call 0x400550b	      5757	option.c	FUNCTION_30	CALL_1
0x400550b	    0x488b15000000	            mov rdx, qword [0x04005512] 	      5757	option.c	FUNCTION_30	CALL_1
0x4005512	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x4005516	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x400551a	        0x4883e0f7	             and rax, 0xfffffffffffffff7	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x400551e	          0x488911	                    mov qword [rcx], rdx	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x4005521	        0x48894310	             mov qword [rbx + 0x10], rax	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x4005525	              0x5b	                                 pop rbx	     10339	option.c	FUNCTION_71
0x4005526	            0xebb9	                           jmp 0x40054e1	     10339	option.c	FUNCTION_71
put_setnum	WHILE,0:FOR,0:ELSE,1:SWITCH,0:CALL,4:IF,5:functions,0:DO,0	54
0x4003010	            0x4154	                                push r12	     10238	option.c	FUNCTION_67
0x4003012	              0x55	                                push rbp	     10238	option.c	FUNCTION_67
0x4003013	          0x4989d0	                             mov r8, rdx	     10238	option.c	FUNCTION_67
0x4003016	              0x53	                                push rbx	     10238	option.c	FUNCTION_67
0x4003017	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_64
0x4003019	          0x4889cd	                            mov rbp, rcx	     10238	option.c	FUNCTION_67
0x400301c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_64
0x4003021	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_64
0x4003024	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_64
0x4003029	          0x4889fb	                            mov rbx, rdi	     10238	option.c	FUNCTION_67
0x400302c	      0xe800000000	                          call 0x4003031	        97	stdio2.h	CALL_64
0x4003031	            0x85c0	                           test eax, eax	     10241	option.c	FUNCTION_67	IF_1
0x4003033	            0x7871	                            js 0x40030a6	     10241	option.c	FUNCTION_67	IF_1
0x4003035	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x400303c	            0x743a	                            je 0x4003078	     11813	option.c	FUNCTION_92	IF_1
0x400303e	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x4003045	            0x7431	                            je 0x4003078	     11813	option.c	FUNCTION_92	IF_1
0x4003047	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_64
0x400304b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_64
0x400304d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_64
0x4003052	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_64
0x4003057	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_64
0x400305a	      0xe800000000	                          call 0x400305f	        97	stdio2.h	CALL_64
0x400305f	            0x85c0	                           test eax, eax	     10249	option.c	FUNCTION_67	ELSE_1	IF_4
0x4003061	            0x7843	                            js 0x40030a6	     10249	option.c	FUNCTION_67	ELSE_1	IF_4
0x4003063	          0x4889df	                            mov rdi, rbx	     10251	option.c	FUNCTION_67	IF_5	CALL_4
0x4003066	      0xe800000000	                          call 0x400306b	     10251	option.c	FUNCTION_67	IF_5	CALL_4
0x400306b	            0xf7d0	                                 not eax	     10242	option.c	FUNCTION_67	IF_1
0x400306d	              0x5b	                                 pop rbx	     10254	option.c	FUNCTION_67
0x400306e	          0xc1e81f	                           shr eax, 0x1f	     10242	option.c	FUNCTION_67	IF_1
0x4003071	              0x5d	                                 pop rbp	     10254	option.c	FUNCTION_67
0x4003072	            0x415c	                                 pop r12	     10254	option.c	FUNCTION_67
0x4003074	              0xc3	                                     ret	     10254	option.c	FUNCTION_67
0x4003075	           0xf1f00	                         nop dword [rax]	     10254	option.c	FUNCTION_67
0x4003078	        0x488b7d00	                    mov rdi, qword [rbp]	     11815	option.c	FUNCTION_92	IF_1
0x400307c	          0x4885ff	                           test rdi, rdi	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400307f	          0x4189fc	                           mov r12d, edi	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4003082	            0x7809	                            js 0x400308d	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4003084	      0xe800000000	                          call 0x4003089	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4003089	            0x85c0	                           test eax, eax	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400308b	            0x78ba	                            js 0x4003047	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400308d	            0x31f6	                            xor esi, esi	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x400308f	          0x4489e7	                           mov edi, r12d	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4003092	      0xe800000000	                          call 0x4003097	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4003097	          0x4889de	                            mov rsi, rbx	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x400309a	          0x4889c7	                            mov rdi, rax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x400309d	      0xe800000000	                          call 0x40030a2	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x40030a2	            0x85c0	                           test eax, eax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x40030a4	            0x79bd	                           jns 0x4003063	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x40030a6	              0x5b	                                 pop rbx	     10254	option.c	FUNCTION_67
0x40030a7	            0x31c0	                            xor eax, eax	     10242	option.c	FUNCTION_67	IF_1
0x40030a9	              0x5d	                                 pop rbp	     10254	option.c	FUNCTION_67
0x40030aa	            0x415c	                                 pop r12	     10254	option.c	FUNCTION_67
0x40030ac	              0xc3	                                     ret	     10254	option.c	FUNCTION_67
set_string_option_global	WHILE,0:FOR,0:ELSE,1:SWITCH,0:CALL,3:IF,2:functions,0:DO,0	29
0x4000440	              0x55	                                push rbp	      5933	option.c	FUNCTION_37
0x4000441	          0x4863ff	                         movsxd rdi, edi	      5937	option.c	FUNCTION_37	IF_1
0x4000444	              0x53	                                push rbx	      5933	option.c	FUNCTION_37
0x4000445	        0x48c1e706	                              shl rdi, 6	      5937	option.c	FUNCTION_37	IF_1
0x4000449	    0x488d86b80100	                  lea rax, [rsi + 0x1b8]	      5938	option.c	FUNCTION_37	CALL_1
0x4000450	        0x4883ec08	                              sub rsp, 8	      5933	option.c	FUNCTION_37
0x4000454	    0x488b9f000000	                    mov rbx, qword [rdi]	      5937	option.c	FUNCTION_37	IF_1
0x400045b	    0x4881c7000000	                              add rdi, 0	      5937	option.c	FUNCTION_37	IF_1
0x4000462	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      5938	option.c	FUNCTION_37	CALL_1
0x4000466	        0x480f44d8	                          cmove rbx, rax	      5938	option.c	FUNCTION_37	CALL_1
0x400046a	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      5942	option.c	FUNCTION_37	IF_2
0x400046d	            0x85c0	                           test eax, eax	      5942	option.c	FUNCTION_37	IF_2
0x400046f	            0x7429	                            je 0x400049a	      5942	option.c	FUNCTION_37	IF_2
0x4000471	          0x4839f3	                            cmp rbx, rsi	      5942	option.c	FUNCTION_37	IF_2
0x4000474	            0x7424	                            je 0x400049a	      5942	option.c	FUNCTION_37	IF_2
0x4000476	          0x488b3e	                    mov rdi, qword [rsi]	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4000479	      0xe800000000	                          call 0x400047e	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x400047e	          0x4885c0	                           test rax, rax	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4000481	          0x4889c5	                            mov rbp, rax	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4000484	            0x7414	                            je 0x400049a	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4000486	          0x488b3b	                    mov rdi, qword [rbx]	      5945	option.c	FUNCTION_37	IF_2	CALL_3
0x4000489	    0x483b3d000000	            cmp rdi, qword [0x04000490] 	      5756	option.c	FUNCTION_30	IF_1
0x4000490	            0x7405	                            je 0x4000497	      5756	option.c	FUNCTION_30	IF_1
0x4000492	      0xe800000000	                          call 0x4000497	      5757	option.c	FUNCTION_30	CALL_1
0x4000497	          0x48892b	                    mov qword [rbx], rbp	      5946	option.c	FUNCTION_37	IF_2
0x400049a	        0x4883c408	                              add rsp, 8	      5948	option.c	FUNCTION_37
0x400049e	              0x5b	                                 pop rbx	      5948	option.c	FUNCTION_37
0x400049f	              0x5d	                                 pop rbp	      5948	option.c	FUNCTION_37
0x40004a0	              0xc3	                                     ret	      5948	option.c	FUNCTION_37
set_string_option_direct	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,11:IF,8:functions,0:DO,0	131
0x4004420	            0x4157	                                push r15	      5876	option.c	FUNCTION_36
0x4004422	            0x4156	                                push r14	      5876	option.c	FUNCTION_36
0x4004424	          0x4589c6	                           mov r14d, r8d	      5876	option.c	FUNCTION_36
0x4004427	            0x4155	                                push r13	      5876	option.c	FUNCTION_36
0x4004429	            0x4154	                                push r12	      5876	option.c	FUNCTION_36
0x400442b	          0x4189cd	                           mov r13d, ecx	      5876	option.c	FUNCTION_36
0x400442e	              0x55	                                push rbp	      5876	option.c	FUNCTION_36
0x400442f	              0x53	                                push rbx	      5876	option.c	FUNCTION_36
0x4004430	          0x4189f4	                           mov r12d, esi	      5876	option.c	FUNCTION_36
0x4004433	        0x4883ec18	                           sub rsp, 0x18	      5876	option.c	FUNCTION_36
0x4004437	          0x83feff	             cmp esi, 0xffffffffffffffff	      5882	option.c	FUNCTION_36	IF_1
0x400443a	     0xf8460010000	                            je 0x40045a0	      5882	option.c	FUNCTION_36	IF_1
0x4004440	          0x4963dc	                        movsxd rbx, r12d	      5893	option.c	FUNCTION_36	IF_3
0x4004443	          0x4889dd	                            mov rbp, rbx	      5893	option.c	FUNCTION_36	IF_3
0x4004446	        0x48c1e506	                              shl rbp, 6	      5893	option.c	FUNCTION_36	IF_3
0x400444a	    0x4881c5000000	                              add rbp, 0	      5893	option.c	FUNCTION_36	IF_3
0x4004451	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      5893	option.c	FUNCTION_36	IF_3
0x4004456	     0xf84dc000000	                            je 0x4004538	      5893	option.c	FUNCTION_36	IF_3
0x400445c	          0x4889d7	                            mov rdi, rdx	      5896	option.c	FUNCTION_36	CALL_6
0x400445f	      0xe800000000	                          call 0x4004464	      5896	option.c	FUNCTION_36	CALL_6
0x4004464	          0x4885c0	                           test rax, rax	      5897	option.c	FUNCTION_36	IF_4
0x4004467	          0x4989c7	                            mov r15, rax	      5896	option.c	FUNCTION_36	CALL_6
0x400446a	     0xf84c8000000	                            je 0x4004538	      5897	option.c	FUNCTION_36	IF_4
0x4004470	          0x4489e8	                           mov eax, r13d	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004473	          0x83e006	                              and eax, 6	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004476	          0x890424	                    mov dword [rsp], eax	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004479	            0x7455	                            je 0x40044d0	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x400447b	          0x4489ee	                           mov esi, r13d	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x400447e	          0x4889ef	                            mov rdi, rbp	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004481	      0xe8dadfffff	                 call sym.get_varp_scope	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004486	        0x41f6c501	                            test r13b, 1	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x400448a	     0xf85c0000000	                           jne 0x4004550	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004490	          0x4c8938	                    mov qword [rax], r15	      5903	option.c	FUNCTION_36	IF_4
0x4004493	        0x48c1e306	                              shl rbx, 6	      5909	option.c	FUNCTION_36	IF_4
0x4004497	    0x48838b000000	                       or qword [rbx], 8	      5909	option.c	FUNCTION_36	IF_4
0x400449f	        0x4183fefa	            cmp r14d, 0xfffffffffffffffa	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x40044a3	     0xf848f000000	                            je 0x4004538	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x40044a9	          0x4585f6	                         test r14d, r14d	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40044ac	          0x4489f2	                           mov edx, r14d	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40044af	     0xf4415000000	           cmove edx, dword [0x040044b6]	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40044b6	        0x4883c418	                           add rsp, 0x18	      5924	option.c	FUNCTION_36
0x40044ba	          0x4489ee	                           mov esi, r13d	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40044bd	          0x4489e7	                           mov edi, r12d	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40044c0	              0x5b	                                 pop rbx	      5924	option.c	FUNCTION_36
0x40044c1	              0x5d	                                 pop rbp	      5924	option.c	FUNCTION_36
0x40044c2	            0x415c	                                 pop r12	      5924	option.c	FUNCTION_36
0x40044c4	            0x415d	                                 pop r13	      5924	option.c	FUNCTION_36
0x40044c6	            0x415e	                                 pop r14	      5924	option.c	FUNCTION_36
0x40044c8	            0x415f	                                 pop r15	      5924	option.c	FUNCTION_36
0x40044ca	      0xe9a1bcffff	         jmp sym.set_option_scriptID_idx	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40044cf	              0x90	                                     nop	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40044d0	      0xbe04000000	                              mov esi, 4	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x40044d5	          0x4889ef	                            mov rdi, rbp	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x40044d8	      0xe883dfffff	                 call sym.get_varp_scope	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x40044dd	        0x41f6c501	                            test r13b, 1	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x40044e1	            0x757d	                           jne 0x4004560	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x40044e3	          0x4c8938	                    mov qword [rax], r15	      5903	option.c	FUNCTION_36	IF_4
0x40044e6	        0x48c1e306	                              shl rbx, 6	      5909	option.c	FUNCTION_36	IF_4
0x40044ea	          0x4889c6	                            mov rsi, rax	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x40044ed	          0x4489e7	                           mov edi, r12d	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x40044f0	    0x4881c3000000	                              add rbx, 0	      5909	option.c	FUNCTION_36	IF_4
0x40044f7	        0x48890424	                    mov qword [rsp], rax	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x40044fb	      0xe840bfffff	       call sym.set_string_option_global	      5907	option.c	FUNCTION_36	IF_4	CALL_9
0x4004500	      0x48834b1008	                or qword [rbx + 0x10], 8	      5909	option.c	FUNCTION_36	IF_4
0x4004505	        0xf6432110	           test byte [rbx + 0x21], 0x10 	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004509	            0x7494	                            je 0x400449f	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x400450b	        0x488b0424	                    mov rax, qword [rsp]	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x400450f	          0x488b38	                    mov rdi, qword [rax]	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x4004512	    0x48393d000000	            cmp qword [0x04004519], rdi 	      5756	option.c	FUNCTION_30	IF_1
0x4004519	            0x7410	                            je 0x400452b	      5756	option.c	FUNCTION_30	IF_1
0x400451b	      0xe800000000	                          call 0x4004520	      5757	option.c	FUNCTION_30	CALL_1
0x4004520	    0x488b3d000000	            mov rdi, qword [0x04004527] 	      5757	option.c	FUNCTION_30	CALL_1
0x4004527	        0x488b0424	                    mov rax, qword [rsp]	      5757	option.c	FUNCTION_30	CALL_1
0x400452b	        0x4183fefa	            cmp r14d, 0xfffffffffffffffa	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x400452f	          0x488938	                    mov qword [rax], rdi	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x4004532	     0xf8571ffffff	                           jne 0x40044a9	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x4004538	        0x4883c418	                           add rsp, 0x18	      5924	option.c	FUNCTION_36
0x400453c	              0x5b	                                 pop rbx	      5924	option.c	FUNCTION_36
0x400453d	              0x5d	                                 pop rbp	      5924	option.c	FUNCTION_36
0x400453e	            0x415c	                                 pop r12	      5924	option.c	FUNCTION_36
0x4004540	            0x415d	                                 pop r13	      5924	option.c	FUNCTION_36
0x4004542	            0x415e	                                 pop r14	      5924	option.c	FUNCTION_36
0x4004544	            0x415f	                                 pop r15	      5924	option.c	FUNCTION_36
0x4004546	              0xc3	                                     ret	      5924	option.c	FUNCTION_36
0x4004547	    0x660f1f840000	                    nop word [rax + rax]	      5924	option.c	FUNCTION_36
0x4004550	        0xf6451008	               test byte [rbp + 0x10], 8	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004554	     0xf8436ffffff	                            je 0x4004490	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x400455a	            0xeb0e	                           jmp 0x400456a	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x400455c	         0xf1f4000	                         nop dword [rax]	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004560	        0xf6451008	               test byte [rbp + 0x10], 8	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004564	     0xf8479ffffff	                            je 0x40044e3	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x400456a	          0x488b38	                    mov rdi, qword [rax]	      5902	option.c	FUNCTION_36	IF_4	CALL_8
0x400456d	    0x483b3d000000	            cmp rdi, qword [0x04004574] 	      5756	option.c	FUNCTION_30	IF_1
0x4004574	            0x740f	                            je 0x4004585	      5756	option.c	FUNCTION_30	IF_1
0x4004576	      0x4889442408	                mov qword [rsp + 8], rax	      5756	option.c	FUNCTION_30	IF_1
0x400457b	      0xe800000000	                          call 0x4004580	      5757	option.c	FUNCTION_30	CALL_1
0x4004580	      0x488b442408	                mov rax, qword [rsp + 8]	      5757	option.c	FUNCTION_30	CALL_1
0x4004585	          0x8b1424	                    mov edx, dword [rsp]	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x4004588	          0x4c8938	                    mov qword [rax], r15	      5903	option.c	FUNCTION_36	IF_4
0x400458b	            0x85d2	                           test edx, edx	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x400458d	     0xf8500ffffff	                           jne 0x4004493	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x4004593	      0xe94effffff	                           jmp 0x40044e6	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x4004598	     0xf1f84000000	                   nop dword [rax + rax]	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x40045a0	        0x48891424	                    mov qword [rsp], rdx	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x40045a4	          0x4889fb	                            mov rbx, rdi	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x40045a7	      0xe804bfffff	                     call sym.findoption	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x40045ac	            0x85c0	                           test eax, eax	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x40045ae	          0x4189c4	                           mov r12d, eax	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x40045b1	        0x488b1424	                    mov rdx, qword [rsp]	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x40045b5	     0xf8985feffff	                           jns 0x4004440	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x40045bb	      0xba05000000	                              mov edx, 5	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40045c0	      0xbe00000000	                              mov esi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40045c5	            0x31ff	                            xor edi, edi	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40045c7	      0xe800000000	                          call 0x40045cc	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40045cc	      0xbe00000000	                              mov esi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40045d1	          0x4889c7	                            mov rdi, rax	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40045d4	      0xe800000000	                          call 0x40045d9	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40045d9	      0xbe00000000	                              mov esi, 0	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x40045de	            0x31ff	                            xor edi, edi	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x40045e0	      0xba05000000	                              mov edx, 5	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x40045e5	      0xe800000000	                          call 0x40045ea	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x40045ea	        0x4883c418	                           add rsp, 0x18	      5924	option.c	FUNCTION_36
0x40045ee	          0x4889de	                            mov rsi, rbx	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x40045f1	          0x4889c7	                            mov rdi, rax	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x40045f4	              0x5b	                                 pop rbx	      5924	option.c	FUNCTION_36
0x40045f5	              0x5d	                                 pop rbp	      5924	option.c	FUNCTION_36
0x40045f6	            0x415c	                                 pop r12	      5924	option.c	FUNCTION_36
0x40045f8	            0x415d	                                 pop r13	      5924	option.c	FUNCTION_36
0x40045fa	            0x415e	                                 pop r14	      5924	option.c	FUNCTION_36
0x40045fc	            0x415f	                                 pop r15	      5924	option.c	FUNCTION_36
0x40045fe	      0xe900000000	                           jmp 0x4004603	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
set_init_3	WHILE,0:FOR,0:ELSE,4:SWITCH,0:CALL,38:IF,17:functions,0:DO,0	137
0x40032c0	            0x4156	                                push r14	      4037	option.c	FUNCTION_10
0x40032c2	            0x4155	                                push r13	      4037	option.c	FUNCTION_10
0x40032c4	      0xbf00000000	                              mov edi, 0	      4052	option.c	FUNCTION_10	CALL_1
0x40032c9	            0x4154	                                push r12	      4037	option.c	FUNCTION_10
0x40032cb	              0x55	                                push rbp	      4037	option.c	FUNCTION_10
0x40032cc	              0x53	                                push rbx	      4037	option.c	FUNCTION_10
0x40032cd	            0x31db	                            xor ebx, ebx	      4037	option.c	FUNCTION_10
0x40032cf	      0xe8dcd1ffff	                     call sym.findoption	      4052	option.c	FUNCTION_10	CALL_1
0x40032d4	          0x4c63e0	                         movsxd r12, eax	      4052	option.c	FUNCTION_10	CALL_1
0x40032d7	          0x4585e4	                         test r12d, r12d	      4053	option.c	FUNCTION_10	IF_1
0x40032da	            0x7819	                            js 0x40032f5	      4053	option.c	FUNCTION_10	IF_1
0x40032dc	          0x4963c4	                        movsxd rax, r12d	      4056	option.c	FUNCTION_10	ELSE_1
0x40032df	        0x48c1e006	                              shl rax, 6	      4056	option.c	FUNCTION_10	ELSE_1
0x40032e3	    0x488b98000000	                    mov rbx, qword [rax]	      4056	option.c	FUNCTION_10	ELSE_1
0x40032ea	        0x48c1eb08	                              shr rbx, 8	      4056	option.c	FUNCTION_10	ELSE_1
0x40032ee	        0x4883f301	                              xor rbx, 1	      4056	option.c	FUNCTION_10	ELSE_1
0x40032f2	          0x83e301	                              and ebx, 1	      4056	option.c	FUNCTION_10	ELSE_1
0x40032f5	      0xbf00000000	                              mov edi, 0	      4058	option.c	FUNCTION_10	CALL_2
0x40032fa	            0x31ed	                            xor ebp, ebp	      4060	option.c	FUNCTION_10	IF_2
0x40032fc	      0xe8afd1ffff	                     call sym.findoption	      4058	option.c	FUNCTION_10	CALL_2
0x4003301	          0x4c63e8	                         movsxd r13, eax	      4058	option.c	FUNCTION_10	CALL_2
0x4003304	          0x4585ed	                         test r13d, r13d	      4059	option.c	FUNCTION_10	IF_2
0x4003307	            0x7819	                            js 0x4003322	      4059	option.c	FUNCTION_10	IF_2
0x4003309	          0x4963c5	                        movsxd rax, r13d	      4062	option.c	FUNCTION_10	ELSE_2
0x400330c	        0x48c1e006	                              shl rax, 6	      4062	option.c	FUNCTION_10	ELSE_2
0x4003310	    0x488ba8000000	                    mov rbp, qword [rax]	      4062	option.c	FUNCTION_10	ELSE_2
0x4003317	        0x48c1ed08	                              shr rbp, 8	      4062	option.c	FUNCTION_10	ELSE_2
0x400331b	        0x4883f501	                              xor rbp, 1	      4062	option.c	FUNCTION_10	ELSE_2
0x400331f	          0x83e501	                              and ebp, 1	      4062	option.c	FUNCTION_10	ELSE_2
0x4003322	      0xe800000000	                          call 0x4003327	      4064	option.c	FUNCTION_10	CALL_3
0x4003327	          0x4885c0	                           test rax, rax	      4065	option.c	FUNCTION_10	IF_3
0x400332a	          0x4989c6	                            mov r14, rax	      4064	option.c	FUNCTION_10	CALL_3
0x400332d	            0x743b	                            je 0x400336a	      4065	option.c	FUNCTION_10	IF_3
0x400332f	      0xbe00000000	                              mov esi, 0	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003334	          0x4889c7	                            mov rdi, rax	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003337	      0xe800000000	                          call 0x400333c	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400333c	            0x85c0	                           test eax, eax	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400333e	            0x7570	                           jne 0x40033b0	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003340	            0x85ed	                           test ebp, ebp	      4080	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003342	            0x741a	                            je 0x400335e	      4080	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003344	        0x49c1e506	                              shl r13, 6	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003348	    0x48c705000000	               mov qword [0x04003353], 0	      4085	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003353	    0x49c785000000	                      mov qword [r13], 0	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400335e	            0x85db	                           test ebx, ebx	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4003360	            0x752e	                           jne 0x4003390	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4003362	          0x4c89f7	                            mov rdi, r14	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x4003365	      0xe800000000	                          call 0x400336a	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x400336a	    0x488b05000000	            mov rax, qword [0x04003371] 	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x4003371	        0x48833801	                      cmp qword [rax], 1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x4003375	     0xf84a5000000	                            je 0x4003420	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x400337b	              0x5b	                                 pop rbx	      4213	option.c	FUNCTION_10
0x400337c	              0x5d	                                 pop rbp	      4213	option.c	FUNCTION_10
0x400337d	            0x415c	                                 pop r12	      4213	option.c	FUNCTION_10
0x400337f	            0x415d	                                 pop r13	      4213	option.c	FUNCTION_10
0x4003381	            0x415e	                                 pop r14	      4213	option.c	FUNCTION_10
0x4003383	      0xe958feffff	              jmp sym.set_title_defaults	      4211	option.c	FUNCTION_10	CALL_38
0x4003388	     0xf1f84000000	                   nop dword [rax + rax]	      4211	option.c	FUNCTION_10	CALL_38
0x4003390	        0x49c1e406	                              shl r12, 6	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4003394	    0x48c705000000	               mov qword [0x0400339f], 0	      4092	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x400339f	    0x49c784240000	                      mov qword [r12], 0	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40033ab	            0xebb5	                           jmp 0x4003362	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40033ad	           0xf1f00	                         nop dword [rax]	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x40033b0	      0xbe00000000	                              mov esi, 0	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40033b5	          0x4c89f7	                            mov rdi, r14	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40033b8	      0xe800000000	                          call 0x40033bd	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40033bd	            0x85c0	                           test eax, eax	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40033bf	     0xf847bffffff	                            je 0x4003340	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x40033c5	      0xbe00000000	                              mov esi, 0	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40033ca	          0x4c89f7	                            mov rdi, r14	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40033cd	      0xe800000000	                          call 0x40033d2	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40033d2	            0x85c0	                           test eax, eax	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40033d4	     0xf8596000000	                           jne 0x4003470	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x40033da	            0x85ed	                           test ebp, ebp	      4120	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x40033dc	            0x741a	                            je 0x40033f8	      4120	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x40033de	        0x49c1e506	                              shl r13, 6	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x40033e2	    0x48c705000000	               mov qword [0x040033ed], 0	      4125	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x40033ed	    0x49c785000000	                      mov qword [r13], 0	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x40033f8	            0x85db	                           test ebx, ebx	      4130	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x40033fa	     0xf8462ffffff	                            je 0x4003362	      4130	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4003400	        0x49c1e406	                              shl r12, 6	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4003404	    0x48c705000000	               mov qword [0x0400340f], 0	      4132	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x400340f	    0x49c784240000	                      mov qword [r12], 0	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x400341b	      0xe942ffffff	                           jmp 0x4003362	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x4003420	      0xbf01000000	                              mov edi, 1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x4003425	      0xe800000000	                          call 0x400342a	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x400342a	          0x803800	                       cmp byte [rax], 0	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x400342d	     0xf8548ffffff	                           jne 0x400337b	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x4003433	      0xbf00000000	                              mov edi, 0	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x4003438	      0xe873d0ffff	                     call sym.findoption	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x400343d	            0x85c0	                           test eax, eax	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x400343f	     0xf8836ffffff	                            js 0x400337b	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x4003445	            0x4898	                                    cdqe	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x4003447	        0x48c1e006	                              shl rax, 6	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x400344b	    0xf68000000000	                      test byte [rax], 1	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x4003452	     0xf8423ffffff	                            je 0x400337b	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x4003458	      0xe800000000	                          call 0x400345d	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x400345d	      0xbe04000000	                              mov esi, 4	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x4003462	            0x89c7	                            mov edi, eax	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x4003464	      0xe800000000	                          call 0x4003469	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x4003469	      0xe90dffffff	                           jmp 0x400337b	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x400346e	            0x6690	                                     nop	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x4003470	      0xbe00000000	                              mov esi, 0	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x4003475	          0x4c89f7	                            mov rdi, r14	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x4003478	      0xe800000000	                          call 0x400347d	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x400347d	            0x85c0	                           test eax, eax	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x400347f	     0xf8455ffffff	                            je 0x40033da	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x4003485	      0xbe00000000	                              mov esi, 0	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x400348a	          0x4c89f7	                            mov rdi, r14	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x400348d	      0xe800000000	                          call 0x4003492	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x4003492	            0x85c0	                           test eax, eax	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x4003494	     0xf8440ffffff	                            je 0x40033da	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x400349a	      0xbe00000000	                              mov esi, 0	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x400349f	          0x4c89f7	                            mov rdi, r14	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40034a2	      0xe800000000	                          call 0x40034a7	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40034a7	            0x85c0	                           test eax, eax	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40034a9	     0xf842bffffff	                            je 0x40033da	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x40034af	      0xbe00000000	                              mov esi, 0	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40034b4	          0x4c89f7	                            mov rdi, r14	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40034b7	      0xe800000000	                          call 0x40034bc	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40034bc	            0x85c0	                           test eax, eax	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40034be	     0xf8416ffffff	                            je 0x40033da	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x40034c4	      0xbe00000000	                              mov esi, 0	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x40034c9	          0x4c89f7	                            mov rdi, r14	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x40034cc	      0xe800000000	                          call 0x40034d1	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x40034d1	            0x85c0	                           test eax, eax	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x40034d3	     0xf8401ffffff	                            je 0x40033da	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x40034d9	      0xbe00000000	                              mov esi, 0	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40034de	          0x4c89f7	                            mov rdi, r14	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40034e1	      0xe800000000	                          call 0x40034e6	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40034e6	            0x85c0	                           test eax, eax	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40034e8	     0xf84ecfeffff	                            je 0x40033da	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40034ee	      0xbe00000000	                              mov esi, 0	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40034f3	          0x4c89f7	                            mov rdi, r14	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40034f6	      0xe800000000	                          call 0x40034fb	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40034fb	            0x85c0	                           test eax, eax	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40034fd	     0xf84d7feffff	                            je 0x40033da	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x4003503	      0xe95afeffff	                           jmp 0x4003362	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
compatible_set	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,4:IF,1:functions,0:DO,0	37
0x40048b0	              0x55	                                push rbp	     12286	option.c	FUNCTION_104
0x40048b1	              0x53	                                push rbx	     12286	option.c	FUNCTION_104
0x40048b2	            0x31ed	                            xor ebp, ebp	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40048b4	      0xbb00000000	                              mov ebx, 0	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40048b9	        0x4883ec08	                              sub rsp, 8	     12286	option.c	FUNCTION_104
0x40048bd	            0xeb23	                           jmp 0x40048e2	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40048bf	              0x90	                                     nop	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40048c0	    0x8b1500000000	            mov edx, dword [0x040048c6] 	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40048c6	            0x85d2	                           test edx, edx	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40048c8	            0x7505	                           jne 0x40048cf	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40048ca	          0xf6c404	                              test ah, 4	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40048cd	            0x750c	                           jne 0x40048db	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40048cf	      0xbe01000000	                              mov esi, 1	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x40048d4	            0x89ef	                            mov edi, ebp	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x40048d6	      0xe835fdffff	             call sym.set_option_default	     12292	option.c	FUNCTION_104	FOR_1	IF_1
0x40048db	          0x83c501	                              add ebp, 1	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40048de	        0x4883c340	                           add rbx, 0x40	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40048e2	          0x488b03	                    mov rax, qword [rbx]	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x40048e5	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x40048e8	            0x741e	                            je 0x4004908	     10375	option.c	FUNCTION_73
0x40048ea	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40048ee	          0xf6c408	                              test ah, 8	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40048f1	            0x75cd	                           jne 0x40048c0	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x40048f3	          0xf6c404	                              test ah, 4	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40048f6	            0x75e3	                           jne 0x40048db	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40048f8	    0x8b1500000000	            mov edx, dword [0x040048fe] 	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x40048fe	            0x85d2	                           test edx, edx	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004900	            0x75d9	                           jne 0x40048db	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004902	            0xebcb	                           jmp 0x40048cf	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004904	         0xf1f4000	                         nop dword [rax]	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004908	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400490c	            0x75dc	                           jne 0x40048ea	     10375	option.c	FUNCTION_73
0x400490e	      0xe8adecffff	                 call sym.didset_options	     12293	option.c	FUNCTION_104	CALL_3
0x4004913	        0x4883c408	                              add rsp, 8	     12295	option.c	FUNCTION_104
0x4004917	              0x5b	                                 pop rbx	     12295	option.c	FUNCTION_104
0x4004918	              0x5d	                                 pop rbp	     12295	option.c	FUNCTION_104
0x4004919	      0xe9d2c8ffff	                 jmp sym.didset_options2	     12294	option.c	FUNCTION_104	CALL_4
didset_options2	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,5:IF,0:functions,0:DO,0	9
0x40011f0	        0x4883ec08	                              sub rsp, 8	      5612	option.c	FUNCTION_27
0x40011f4	      0xe800000000	                          call 0x40011f9	      5614	option.c	FUNCTION_27	CALL_1
0x40011f9	      0xe842f7ffff	                  call sym.check_opt_wim	      5617	option.c	FUNCTION_27	CALL_2
0x40011fe	      0xbf00000000	                              mov edi, 0	      5619	option.c	FUNCTION_27	CALL_3
0x4001203	      0xe848fbffff	               call sym.set_chars_option	      5619	option.c	FUNCTION_27	CALL_3
0x4001208	      0xbf00000000	                              mov edi, 0	      5621	option.c	FUNCTION_27	CALL_4
0x400120d	      0xe83efbffff	               call sym.set_chars_option	      5621	option.c	FUNCTION_27	CALL_4
0x4001212	        0x4883c408	                              add rsp, 8	      5627	option.c	FUNCTION_27
0x4001216	      0xe995fdffff	          jmp sym.check_clipboard_option	      5625	option.c	FUNCTION_27	CALL_5
optval_default	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:IF,3:functions,0:DO,0	44
0x4000660	          0x4885f6	                           test rsi, rsi	      9972	option.c	FUNCTION_62	IF_1
0x4000663	            0x747b	                            je 0x40006e0	      9972	option.c	FUNCTION_62	IF_1
0x4000665	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      9974	option.c	FUNCTION_62
0x4000669	            0x31c0	                            xor eax, eax	      9974	option.c	FUNCTION_62
0x400066b	          0xf6c604	                              test dh, 4	      9974	option.c	FUNCTION_62
0x400066e	            0x7430	                            je 0x40006a0	      9974	option.c	FUNCTION_62
0x4000670	          0xf6c202	                              test dl, 2	      9975	option.c	FUNCTION_62	IF_2
0x4000673	            0x753d	                           jne 0x40006b2	      9975	option.c	FUNCTION_62	IF_2
0x4000675	          0x83e201	                              and edx, 1	      9977	option.c	FUNCTION_62	IF_3
0x4000678	            0x754e	                           jne 0x40006c8	      9977	option.c	FUNCTION_62	IF_3
0x400067a	          0x4889f2	                            mov rdx, rsi	      9977	option.c	FUNCTION_62	IF_3
0x400067d	        0x4883c004	                              add rax, 4	      9982	option.c	FUNCTION_62	CALL_1
0x4000681	        0x4883ec08	                              sub rsp, 8	      9969	option.c	FUNCTION_62
0x4000685	      0x488b74c708	       mov rsi, qword [rdi + rax*8 + 8] 	      9982	option.c	FUNCTION_62	CALL_1
0x400068a	          0x488b3a	                    mov rdi, qword [rdx]	      9982	option.c	FUNCTION_62	CALL_1
0x400068d	      0xe800000000	                          call 0x4000692	      9982	option.c	FUNCTION_62	CALL_1
0x4000692	            0x85c0	                           test eax, eax	      9982	option.c	FUNCTION_62	CALL_1
0x4000694	           0xf94c0	                                 sete al	      9982	option.c	FUNCTION_62	CALL_1
0x4000697	        0x4883c408	                              add rsp, 8	      9983	option.c	FUNCTION_62
0x400069b	           0xfb6c0	                           movzx eax, al	      9982	option.c	FUNCTION_62	CALL_1
0x400069e	              0xc3	                                     ret	      9983	option.c	FUNCTION_62
0x400069f	              0x90	                                     nop	      9983	option.c	FUNCTION_62
0x40006a0	    0x8b0d00000000	            mov ecx, dword [0x040006a6] 	      9974	option.c	FUNCTION_62
0x40006a6	            0x31c0	                            xor eax, eax	      9974	option.c	FUNCTION_62
0x40006a8	            0x85c9	                           test ecx, ecx	      9974	option.c	FUNCTION_62
0x40006aa	           0xf94c0	                                 sete al	      9974	option.c	FUNCTION_62
0x40006ad	          0xf6c202	                              test dl, 2	      9975	option.c	FUNCTION_62	IF_2
0x40006b0	            0x74c3	                            je 0x4000675	      9975	option.c	FUNCTION_62	IF_2
0x40006b2	        0x4883c004	                              add rax, 4	      9976	option.c	FUNCTION_62	IF_2
0x40006b6	          0x488b0e	                    mov rcx, qword [rsi]	      9976	option.c	FUNCTION_62	IF_2
0x40006b9	      0x48394cc708	       cmp qword [rdi + rax*8 + 8], rcx 	      9976	option.c	FUNCTION_62	IF_2
0x40006be	           0xf94c0	                                 sete al	      9976	option.c	FUNCTION_62	IF_2
0x40006c1	           0xfb6c0	                           movzx eax, al	      9976	option.c	FUNCTION_62	IF_2
0x40006c4	              0xc3	                                     ret	      9976	option.c	FUNCTION_62	IF_2
0x40006c5	           0xf1f00	                         nop dword [rax]	      9976	option.c	FUNCTION_62	IF_2
0x40006c8	        0x4883c004	                              add rax, 4	      9980	option.c	FUNCTION_62	IF_3
0x40006cc	            0x8b0e	                    mov ecx, dword [rsi]	      9980	option.c	FUNCTION_62	IF_3
0x40006ce	        0x394cc708	       cmp dword [rdi + rax*8 + 8], ecx 	      9980	option.c	FUNCTION_62	IF_3
0x40006d2	           0xf94c0	                                 sete al	      9980	option.c	FUNCTION_62	IF_3
0x40006d5	           0xfb6c0	                           movzx eax, al	      9980	option.c	FUNCTION_62	IF_3
0x40006d8	              0xc3	                                     ret	      9980	option.c	FUNCTION_62	IF_3
0x40006d9	     0xf1f80000000	                         nop dword [rax]	      9980	option.c	FUNCTION_62	IF_3
0x40006e0	      0xb801000000	                              mov eax, 1	      9973	option.c	FUNCTION_62	IF_1
0x40006e5	              0xc3	                                     ret	      9973	option.c	FUNCTION_62	IF_1
clear_termoptions	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,5:IF,1:functions,0:DO,0	12
0x4005470	        0x4883ec08	                              sub rsp, 8	     10278	option.c	FUNCTION_69
0x4005474	            0x31ff	                            xor edi, edi	     10285	option.c	FUNCTION_69	CALL_1
0x4005476	      0xe800000000	                          call 0x400547b	     10285	option.c	FUNCTION_69	CALL_1
0x400547b	      0xbf03000000	                              mov edi, 3	     10288	option.c	FUNCTION_69	CALL_2
0x4005480	      0xe800000000	                          call 0x4005485	     10288	option.c	FUNCTION_69	CALL_2
0x4005485	    0x8b0500000000	            mov eax, dword [0x0400548b] 	     10293	option.c	FUNCTION_69	IF_1
0x400548b	            0x85c0	                           test eax, eax	     10293	option.c	FUNCTION_69	IF_1
0x400548d	            0x7405	                            je 0x4005494	     10293	option.c	FUNCTION_69	IF_1
0x400548f	      0xe800000000	                          call 0x4005494	     10294	option.c	FUNCTION_69	CALL_3
0x4005494	      0xe800000000	                          call 0x4005499	     10296	option.c	FUNCTION_69	CALL_4
0x4005499	        0x4883c408	                              add rsp, 8	     10299	option.c	FUNCTION_69
0x400549d	      0xe90effffff	                jmp sym.free_termoptions	     10298	option.c	FUNCTION_69	CALL_5
free_termoptions	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,4:IF,3:functions,0:DO,0	48
0x40053b0	    0x488b05000000	            mov rax, qword [0x040053b7] 	     10306	option.c	FUNCTION_70	FOR_1
0x40053b7	          0x4885c0	                           test rax, rax	     10306	option.c	FUNCTION_70	FOR_1
0x40053ba	     0xf84a0000000	                            je 0x4005460	     10306	option.c	FUNCTION_70	FOR_1
0x40053c0	              0x53	                                push rbx	     10303	option.c	FUNCTION_70
0x40053c1	      0xbb00000000	                              mov ebx, 0	     10303	option.c	FUNCTION_70
0x40053c6	            0xeb14	                           jmp 0x40053dc	     10303	option.c	FUNCTION_70
0x40053c8	     0xf1f84000000	                   nop dword [rax + rax]	     10303	option.c	FUNCTION_70
0x40053d0	        0x4883c340	                           add rbx, 0x40	     10306	option.c	FUNCTION_70	FOR_1
0x40053d4	          0x488b03	                    mov rax, qword [rbx]	     10306	option.c	FUNCTION_70	FOR_1
0x40053d7	          0x4885c0	                           test rax, rax	     10306	option.c	FUNCTION_70	FOR_1
0x40053da	            0x747e	                            je 0x400545a	     10306	option.c	FUNCTION_70	FOR_1
0x40053dc	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x40053df	            0x75ef	                           jne 0x40053d0	     10375	option.c	FUNCTION_73
0x40053e1	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x40053e5	            0x75e9	                           jne 0x40053d0	     10375	option.c	FUNCTION_73
0x40053e7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x40053eb	    0x488b15000000	            mov rdx, qword [0x040053f2] 	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x40053f2	            0xa808	                              test al, 8	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x40053f4	            0x7423	                            je 0x4005419	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x40053f6	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x40053fa	          0x488b3a	                    mov rdi, qword [rdx]	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x40053fd	    0x488b15000000	            mov rdx, qword [0x04005404] 	      5756	option.c	FUNCTION_30	IF_1
0x4005404	          0x4839d7	                            cmp rdi, rdx	      5756	option.c	FUNCTION_30	IF_1
0x4005407	            0x7410	                            je 0x4005419	      5756	option.c	FUNCTION_30	IF_1
0x4005409	      0xe800000000	                          call 0x400540e	      5757	option.c	FUNCTION_30	CALL_1
0x400540e	    0x488b15000000	            mov rdx, qword [0x04005415] 	      5757	option.c	FUNCTION_30	CALL_1
0x4005415	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x4005419	            0xa880	                           test al, 0x80	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x400541b	            0x7419	                            je 0x4005436	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x400541d	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	     10312	option.c	FUNCTION_70	FOR_1	IF_1	CALL_3
0x4005421	          0x4839d7	                            cmp rdi, rdx	      5756	option.c	FUNCTION_30	IF_1
0x4005424	            0x7410	                            je 0x4005436	      5756	option.c	FUNCTION_30	IF_1
0x4005426	      0xe800000000	                          call 0x400542b	      5757	option.c	FUNCTION_30	CALL_1
0x400542b	    0x488b15000000	            mov rdx, qword [0x04005432] 	      5757	option.c	FUNCTION_30	CALL_1
0x4005432	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x4005436	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x400543a	            0x2477	                            and al, 0x77	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x400543c	        0x4883c340	                           add rbx, 0x40	     10306	option.c	FUNCTION_70	FOR_1
0x4005440	          0x488911	                    mov qword [rcx], rdx	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x4005443	    0x488b15000000	            mov rdx, qword [0x0400544a] 	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x400544a	        0x488943d0	             mov qword [rbx - 0x30], rax	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x400544e	        0x488953e8	             mov qword [rbx - 0x18], rdx	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x4005452	          0x488b03	                    mov rax, qword [rbx]	     10306	option.c	FUNCTION_70	FOR_1
0x4005455	          0x4885c0	                           test rax, rax	     10306	option.c	FUNCTION_70	FOR_1
0x4005458	            0x7582	                           jne 0x40053dc	     10306	option.c	FUNCTION_70	FOR_1
0x400545a	              0x5b	                                 pop rbx	     10318	option.c	FUNCTION_70
0x400545b	      0xe900000000	                           jmp 0x4005460	     10317	option.c	FUNCTION_70	CALL_4
0x4005460	      0xe900000000	                           jmp 0x4005465	     10317	option.c	FUNCTION_70	CALL_4
check_winopt	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,14:IF,0:functions,0:DO,0	95
0x40001f0	      0x48837f3000	               cmp qword [rdi + 0x30], 0	      5771	option.c	FUNCTION_32	IF_1
0x40001f5	     0xf84c5000000	                            je 0x40002c0	      5771	option.c	FUNCTION_32	IF_1
0x40001fb	      0x48837f4800	               cmp qword [rdi + 0x48], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000200	     0xf84da000000	                            je 0x40002e0	      5771	option.c	FUNCTION_32	IF_1
0x4000206	      0x48837f5000	               cmp qword [rdi + 0x50], 0	      5771	option.c	FUNCTION_32	IF_1
0x400020b	     0xf84ef000000	                            je 0x4000300	      5771	option.c	FUNCTION_32	IF_1
0x4000211	      0x48837f6800	               cmp qword [rdi + 0x68], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000216	     0xf8404010000	                            je 0x4000320	      5771	option.c	FUNCTION_32	IF_1
0x400021c	      0x48837f7000	               cmp qword [rdi + 0x70], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000221	     0xf8419010000	                            je 0x4000340	      5771	option.c	FUNCTION_32	IF_1
0x4000227	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      5771	option.c	FUNCTION_32	IF_1
0x400022c	     0xf842e010000	                            je 0x4000360	      5771	option.c	FUNCTION_32	IF_1
0x4000232	    0x4883bf080100	              cmp qword [rdi + 0x108], 0	      5771	option.c	FUNCTION_32	IF_1
0x400023a	     0xf8440010000	                            je 0x4000380	      5771	option.c	FUNCTION_32	IF_1
0x4000240	    0x4883bfa80000	               cmp qword [rdi + 0xa8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000248	     0xf8452010000	                            je 0x40003a0	      5771	option.c	FUNCTION_32	IF_1
0x400024e	    0x4883bfd00000	               cmp qword [rdi + 0xd0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000256	     0xf8464010000	                            je 0x40003c0	      5771	option.c	FUNCTION_32	IF_1
0x400025c	    0x4883bfc80000	               cmp qword [rdi + 0xc8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000264	     0xf8476010000	                            je 0x40003e0	      5771	option.c	FUNCTION_32	IF_1
0x400026a	    0x4883bff00000	               cmp qword [rdi + 0xf0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000272	     0xf8488010000	                            je 0x4000400	      5771	option.c	FUNCTION_32	IF_1
0x4000278	    0x4883bf100100	              cmp qword [rdi + 0x110], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000280	     0xf849a010000	                            je 0x4000420	      5771	option.c	FUNCTION_32	IF_1
0x4000286	    0x4883bf180100	              cmp qword [rdi + 0x118], 0	      5771	option.c	FUNCTION_32	IF_1
0x400028e	            0x7420	                            je 0x40002b0	      5771	option.c	FUNCTION_32	IF_1
0x4000290	      0x48837f0800	                  cmp qword [rdi + 8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000295	            0x7409	                            je 0x40002a0	      5771	option.c	FUNCTION_32	IF_1
0x4000297	            0xf3c3	                                     ret	      5771	option.c	FUNCTION_32	IF_1
0x4000299	     0xf1f80000000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40002a0	    0x488b05000000	            mov rax, qword [0x040002a7] 	      5772	option.c	FUNCTION_32	IF_1
0x40002a7	        0x48894708	                mov qword [rdi + 8], rax	      5772	option.c	FUNCTION_32	IF_1
0x40002ab	              0xc3	                                     ret	      5772	option.c	FUNCTION_32	IF_1
0x40002ac	         0xf1f4000	                         nop dword [rax]	      5772	option.c	FUNCTION_32	IF_1
0x40002b0	    0x488b05000000	            mov rax, qword [0x040002b7] 	      5772	option.c	FUNCTION_32	IF_1
0x40002b7	    0x488987180100	            mov qword [rdi + 0x118], rax	      5772	option.c	FUNCTION_32	IF_1
0x40002be	            0xebd0	                           jmp 0x4000290	      5772	option.c	FUNCTION_32	IF_1
0x40002c0	      0x48837f4800	               cmp qword [rdi + 0x48], 0	      5771	option.c	FUNCTION_32	IF_1
0x40002c5	    0x488b05000000	            mov rax, qword [0x040002cc] 	      5772	option.c	FUNCTION_32	IF_1
0x40002cc	        0x48894730	             mov qword [rdi + 0x30], rax	      5772	option.c	FUNCTION_32	IF_1
0x40002d0	     0xf8530ffffff	                           jne 0x4000206	      5771	option.c	FUNCTION_32	IF_1
0x40002d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5771	option.c	FUNCTION_32	IF_1
0x40002e0	      0x48837f5000	               cmp qword [rdi + 0x50], 0	      5771	option.c	FUNCTION_32	IF_1
0x40002e5	    0x488b05000000	            mov rax, qword [0x040002ec] 	      5772	option.c	FUNCTION_32	IF_1
0x40002ec	        0x48894748	             mov qword [rdi + 0x48], rax	      5772	option.c	FUNCTION_32	IF_1
0x40002f0	     0xf851bffffff	                           jne 0x4000211	      5771	option.c	FUNCTION_32	IF_1
0x40002f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5771	option.c	FUNCTION_32	IF_1
0x4000300	      0x48837f6800	               cmp qword [rdi + 0x68], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000305	    0x488b05000000	            mov rax, qword [0x0400030c] 	      5772	option.c	FUNCTION_32	IF_1
0x400030c	        0x48894750	             mov qword [rdi + 0x50], rax	      5772	option.c	FUNCTION_32	IF_1
0x4000310	     0xf8506ffffff	                           jne 0x400021c	      5771	option.c	FUNCTION_32	IF_1
0x4000316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5771	option.c	FUNCTION_32	IF_1
0x4000320	      0x48837f7000	               cmp qword [rdi + 0x70], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000325	    0x488b05000000	            mov rax, qword [0x0400032c] 	      5772	option.c	FUNCTION_32	IF_1
0x400032c	        0x48894768	             mov qword [rdi + 0x68], rax	      5772	option.c	FUNCTION_32	IF_1
0x4000330	     0xf85f1feffff	                           jne 0x4000227	      5771	option.c	FUNCTION_32	IF_1
0x4000336	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5771	option.c	FUNCTION_32	IF_1
0x4000340	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000345	    0x488b05000000	            mov rax, qword [0x0400034c] 	      5772	option.c	FUNCTION_32	IF_1
0x400034c	        0x48894770	             mov qword [rdi + 0x70], rax	      5772	option.c	FUNCTION_32	IF_1
0x4000350	     0xf85dcfeffff	                           jne 0x4000232	      5771	option.c	FUNCTION_32	IF_1
0x4000356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5771	option.c	FUNCTION_32	IF_1
0x4000360	    0x4883bf080100	              cmp qword [rdi + 0x108], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000368	    0x488b05000000	            mov rax, qword [0x0400036f] 	      5772	option.c	FUNCTION_32	IF_1
0x400036f	        0x48894778	             mov qword [rdi + 0x78], rax	      5772	option.c	FUNCTION_32	IF_1
0x4000373	     0xf85c7feffff	                           jne 0x4000240	      5771	option.c	FUNCTION_32	IF_1
0x4000379	     0xf1f80000000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4000380	    0x4883bfa80000	               cmp qword [rdi + 0xa8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000388	    0x488b05000000	            mov rax, qword [0x0400038f] 	      5772	option.c	FUNCTION_32	IF_1
0x400038f	    0x488987080100	            mov qword [rdi + 0x108], rax	      5772	option.c	FUNCTION_32	IF_1
0x4000396	     0xf85b2feffff	                           jne 0x400024e	      5771	option.c	FUNCTION_32	IF_1
0x400039c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40003a0	    0x4883bfd00000	               cmp qword [rdi + 0xd0], 0	      5771	option.c	FUNCTION_32	IF_1
0x40003a8	    0x488b05000000	            mov rax, qword [0x040003af] 	      5772	option.c	FUNCTION_32	IF_1
0x40003af	    0x488987a80000	             mov qword [rdi + 0xa8], rax	      5772	option.c	FUNCTION_32	IF_1
0x40003b6	     0xf85a0feffff	                           jne 0x400025c	      5771	option.c	FUNCTION_32	IF_1
0x40003bc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40003c0	    0x4883bfc80000	               cmp qword [rdi + 0xc8], 0	      5771	option.c	FUNCTION_32	IF_1
0x40003c8	    0x488b05000000	            mov rax, qword [0x040003cf] 	      5772	option.c	FUNCTION_32	IF_1
0x40003cf	    0x488987d00000	             mov qword [rdi + 0xd0], rax	      5772	option.c	FUNCTION_32	IF_1
0x40003d6	     0xf858efeffff	                           jne 0x400026a	      5771	option.c	FUNCTION_32	IF_1
0x40003dc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40003e0	    0x4883bff00000	               cmp qword [rdi + 0xf0], 0	      5771	option.c	FUNCTION_32	IF_1
0x40003e8	    0x488b05000000	            mov rax, qword [0x040003ef] 	      5772	option.c	FUNCTION_32	IF_1
0x40003ef	    0x488987c80000	             mov qword [rdi + 0xc8], rax	      5772	option.c	FUNCTION_32	IF_1
0x40003f6	     0xf857cfeffff	                           jne 0x4000278	      5771	option.c	FUNCTION_32	IF_1
0x40003fc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4000400	    0x4883bf100100	              cmp qword [rdi + 0x110], 0	      5771	option.c	FUNCTION_32	IF_1
0x4000408	    0x488b05000000	            mov rax, qword [0x0400040f] 	      5772	option.c	FUNCTION_32	IF_1
0x400040f	    0x488987f00000	             mov qword [rdi + 0xf0], rax	      5772	option.c	FUNCTION_32	IF_1
0x4000416	     0xf856afeffff	                           jne 0x4000286	      5771	option.c	FUNCTION_32	IF_1
0x400041c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4000420	    0x488b05000000	            mov rax, qword [0x04000427] 	      5772	option.c	FUNCTION_32	IF_1
0x4000427	    0x488987100100	            mov qword [rdi + 0x110], rax	      5772	option.c	FUNCTION_32	IF_1
0x400042e	      0xe953feffff	                           jmp 0x4000286	      5772	option.c	FUNCTION_32	IF_1
showoptions	WHILE,0:FOR,4:ELSE,6:SWITCH,0:CALL,21:IF,12:functions,0:DO,0	239
0x4002ab0	            0x4157	                                push r15	      9862	option.c	FUNCTION_61
0x4002ab2	            0x4156	                                push r14	      9862	option.c	FUNCTION_61
0x4002ab4	            0x4155	                                push r13	      9862	option.c	FUNCTION_61
0x4002ab6	            0x4154	                                push r12	      9862	option.c	FUNCTION_61
0x4002ab8	              0x55	                                push rbp	      9862	option.c	FUNCTION_61
0x4002ab9	              0x53	                                push rbx	      9862	option.c	FUNCTION_61
0x4002aba	            0x89fb	                            mov ebx, edi	      9862	option.c	FUNCTION_61
0x4002abc	            0x89f5	                            mov ebp, esi	      9862	option.c	FUNCTION_61
0x4002abe	        0x4883ec38	                           sub rsp, 0x38	      9862	option.c	FUNCTION_61
0x4002ac2	        0x897c242c	             mov dword [rsp + 0x2c], edi	      9862	option.c	FUNCTION_61
0x4002ac6	      0xbf200f0000	                          mov edi, 0xf20	      9878	option.c	FUNCTION_61	CALL_1
0x4002acb	      0xe800000000	                          call 0x4002ad0	      9878	option.c	FUNCTION_61	CALL_1
0x4002ad0	          0x4885c0	                           test rax, rax	      9880	option.c	FUNCTION_61	IF_1
0x4002ad3	      0x4889442418	             mov qword [rsp + 0x18], rax	      9878	option.c	FUNCTION_61	CALL_1
0x4002ad8	     0xf845b030000	                            je 0x4002e39	      9880	option.c	FUNCTION_61	IF_1
0x4002ade	          0x83fb02	                              cmp ebx, 2	      9884	option.c	FUNCTION_61	IF_2
0x4002ae1	      0xba05000000	                              mov edx, 5	      9885	option.c	FUNCTION_61	CALL_3
0x4002ae6	     0xf8434030000	                            je 0x4002e20	      9884	option.c	FUNCTION_61	IF_2
0x4002aec	        0x40f6c502	                             test bpl, 2	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002af0	     0xf85ba020000	                           jne 0x4002db0	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002af6	        0x40f6c504	                             test bpl, 4	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002afa	     0xf85d6010000	                           jne 0x4002cd6	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002b00	            0x31ff	                            xor edi, edi	      9891	option.c	FUNCTION_61	CALL_9
0x4002b02	      0xbe00000000	                              mov esi, 0	      9891	option.c	FUNCTION_61	CALL_9
0x4002b07	      0xe800000000	                          call 0x4002b0c	      9891	option.c	FUNCTION_61	CALL_9
0x4002b0c	          0x4889c7	                            mov rdi, rax	      9891	option.c	FUNCTION_61	CALL_9
0x4002b0f	      0xe800000000	                          call 0x4002b14	      9891	option.c	FUNCTION_61	CALL_9
0x4002b14	    0xc74424240100	               mov dword [rsp + 0x24], 1	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002b1c	    0xc74424280200	               mov dword [rsp + 0x28], 2	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002b24	    0x8b0500000000	            mov eax, dword [0x04002b2a] 	      9898	option.c	FUNCTION_61	FOR_1
0x4002b2a	            0x85c0	                           test eax, eax	      9898	option.c	FUNCTION_61	FOR_1
0x4002b2c	     0xf8566020000	                           jne 0x4002d98	      9898	option.c	FUNCTION_61	FOR_1
0x4002b32	    0x488b05000000	            mov rax, qword [0x04002b39] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b39	            0x31db	                            xor ebx, ebx	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b3b	    0x41bc00000000	                             mov r12d, 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b41	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b44	     0xf847f020000	                            je 0x4002dc9	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b4a	      0x448b742424	           mov r14d, dword [rsp + 0x24] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b4f	      0x448b6c242c	           mov r13d, dword [rsp + 0x2c] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b54	            0xeb2c	                           jmp 0x4002b82	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b60	            0x85ed	                           test ebp, ebp	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4002b62	     0xf8428020000	                            je 0x4002d90	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4002b68	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x4002b6d	            0x85c0	                           test eax, eax	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x4002b6f	     0xf857b010000	                           jne 0x4002cf0	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x4002b75	        0x4983c440	                           add r12, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b79	        0x498b0424	                    mov rax, qword [r12]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b7d	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b80	            0x7473	                            je 0x4002bf5	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002b82	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x4002b85	            0x75d9	                           jne 0x4002b60	     10375	option.c	FUNCTION_73
0x4002b87	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4002b8b	            0x75d3	                           jne 0x4002b60	     10375	option.c	FUNCTION_73
0x4002b8d	            0x85ed	                           test ebp, ebp	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4002b8f	    0x41bf01000000	                             mov r15d, 1	     10375	option.c	FUNCTION_73
0x4002b95	            0x75de	                           jne 0x4002b75	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4002b97	    0x660f1f840000	                    nop word [rax + rax]	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4002ba0	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x4002ba5	      0x498d742420	                   lea rsi, [r12 + 0x20]	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x4002baa	      0xe881e9ffff	                call sym.get_varp.isra.1	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x4002baf	          0x4885c0	                           test rax, rax	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bb2	            0x74c1	                            je 0x4002b75	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bb4	        0x4183fd02	                             cmp r13d, 2	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bb8	     0xf8548010000	                           jne 0x4002d06	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bbe	          0x4585ff	                         test r15d, r15d	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bc1	     0xf843f010000	                            je 0x4002d06	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002bc7	    0x41f644241001	               test byte [r12 + 0x10], 1	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4002bcd	     0xf846d010000	                            je 0x4002d40	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4002bd3	        0x4183fe01	                             cmp r14d, 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002bd7	            0x759c	                           jne 0x4002b75	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002bd9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002bde	          0x4863c3	                         movsxd rax, ebx	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002be1	          0x83c301	                              add ebx, 1	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002be4	        0x4c8924c1	            mov qword [rcx + rax*8], r12	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002be8	        0x4983c440	                           add r12, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002bec	        0x498b0424	                    mov rax, qword [r12]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002bf0	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002bf3	            0x758d	                           jne 0x4002b82	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4002bf5	      0x837c242401	               cmp dword [rsp + 0x24], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x4002bfa	     0xf8448020000	                            je 0x4002e48	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x4002c00	            0x85db	                           test ebx, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c02	     0xf84b4000000	                            je 0x4002cbc	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c08	          0x4189dc	                           mov r12d, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c0b	    0x8b0500000000	            mov eax, dword [0x04002c11] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c11	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c13	     0xf85a3000000	                           jne 0x4002cbc	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c19	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c1e	          0x4c63eb	                         movsxd r13, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c21	    0xc74424200000	               mov dword [rsp + 0x20], 0	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c29	      0x4889442410	             mov qword [rsp + 0x10], rax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c2e	    0x4a8d04ed0000	                        lea rax, [r13*8]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c36	      0x4889442408	                mov qword [rsp + 8], rax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c3b	       0xf1f440000	                   nop dword [rax + rax]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002c40	      0xbf0a000000	                            mov edi, 0xa	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x4002c45	      0xe800000000	                          call 0x4002c4a	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x4002c4a	    0x8b0500000000	            mov eax, dword [0x04002c50] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4002c50	            0x85c0	                           test eax, eax	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4002c52	            0x7568	                           jne 0x4002cbc	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4002c54	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4002c58	          0x4531ff	                          xor r15d, r15d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c5b	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c60	          0x4439e0	                           cmp eax, r12d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c63	        0x448d2c18	                   lea r13d, [rax + rbx]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c67	            0x7d2c	                           jge 0x4002c95	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c69	     0xf1f80000000	                         nop dword [rax]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c70	          0x498b3e	                    mov rdi, qword [r14]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002c73	            0x89ee	                            mov esi, ebp	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002c75	    0x44893d000000	           mov dword [0x04002c7c], r15d 	      9953	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c7c	        0x4183c714	                          add r15d, 0x14	      9955	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c80	      0xe84bfdffff	                     call sym.showoneopt	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002c85	          0x4489ea	                           mov edx, r13d	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002c88	      0x4c03742408	                add r14, qword [rsp + 8]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002c8d	          0x4101dd	                           add r13d, ebx	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4002c90	          0x4439e2	                           cmp edx, r12d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c93	            0x7cdb	                            jl 0x4002c70	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4002c95	      0xe800000000	                          call 0x4002c9a	      9957	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_19
0x4002c9a	      0xe800000000	                          call 0x4002c9f	      9958	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_20
0x4002c9f	      0x8344242001	               add dword [rsp + 0x20], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002ca4	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002ca8	            0x39d8	                            cmp eax, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002caa	            0x7d10	                           jge 0x4002cbc	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cac	    0x8b0500000000	            mov eax, dword [0x04002cb2] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cb2	    0x488344241008	               add qword [rsp + 0x10], 8	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cb8	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cba	            0x7484	                            je 0x4002c40	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002cbc	      0x837c242803	               cmp dword [rsp + 0x28], 3	      9898	option.c	FUNCTION_61	FOR_1
0x4002cc1	     0xf84d1000000	                            je 0x4002d98	      9898	option.c	FUNCTION_61	FOR_1
0x4002cc7	      0x8344242801	               add dword [rsp + 0x28], 1	      9898	option.c	FUNCTION_61	FOR_1
0x4002ccc	      0x8344242401	               add dword [rsp + 0x24], 1	      9898	option.c	FUNCTION_61	FOR_1
0x4002cd1	      0xe94efeffff	                           jmp 0x4002b24	      9898	option.c	FUNCTION_61	FOR_1
0x4002cd6	            0x31ff	                            xor edi, edi	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002cd8	      0xbe00000000	                              mov esi, 0	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002cdd	      0xe800000000	                          call 0x4002ce2	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002ce2	          0x4889c7	                            mov rdi, rax	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002ce5	      0xe800000000	                          call 0x4002cea	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002cea	      0xe925feffff	                           jmp 0x4002b14	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002cef	              0x90	                                     nop	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x4002cf0	            0x89ee	                            mov esi, ebp	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x4002cf2	          0x4c89e7	                            mov rdi, r12	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x4002cf5	      0xe866f7ffff	                 call sym.get_varp_scope	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x4002cfa	          0x4885c0	                           test rax, rax	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002cfd	     0xf8472feffff	                            je 0x4002b75	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002d03	          0x4531ff	                          xor r15d, r15d	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002d06	        0x4183fd01	                             cmp r13d, 1	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002d0a	            0x7509	                           jne 0x4002d15	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002d0c	          0x4585ff	                         test r15d, r15d	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002d0f	     0xf84b2feffff	                            je 0x4002bc7	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4002d15	          0x4585ed	                         test r13d, r13d	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002d18	     0xf8557feffff	                           jne 0x4002b75	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002d1e	          0x4889c6	                            mov rsi, rax	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002d21	          0x4c89e7	                            mov rdi, r12	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002d24	      0xe837d9ffff	                 call sym.optval_default	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002d29	            0x85c0	                           test eax, eax	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002d2b	     0xf8544feffff	                           jne 0x4002b75	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4002d31	    0x41f644241001	               test byte [r12 + 0x10], 1	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4002d37	     0xf8596feffff	                           jne 0x4002bd3	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4002d3d	           0xf1f00	                         nop dword [rax]	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4002d40	            0x89ee	                            mov esi, ebp	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x4002d42	          0x4c89e7	                            mov rdi, r12	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x4002d45	      0xe816fbffff	            call sym.option_value2string	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x4002d4a	        0x498b3c24	                    mov rdi, qword [r12]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002d4e	      0xe800000000	                          call 0x4002d53	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002d53	    0x488b3d000000	            mov rdi, qword [0x04002d5a] 	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002d5a	          0x4989c7	                            mov r15, rax	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002d5d	      0xe800000000	                          call 0x4002d62	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002d62	      0x428d443801	                lea eax, [rax + r15 + 1]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4002d67	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d6a	            0x7f0a	                            jg 0x4002d76	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d6c	        0x4183fe01	                             cmp r14d, 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d70	     0xf8463feffff	                            je 0x4002bd9	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d76	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d79	     0xf8ef6fdffff	                           jle 0x4002b75	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d7f	        0x4183fe02	                             cmp r14d, 2	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d83	     0xf8450feffff	                            je 0x4002bd9	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d89	      0xe9e7fdffff	                           jmp 0x4002b75	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d8e	            0x6690	                                     nop	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d90	          0x4531ff	                          xor r15d, r15d	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d93	      0xe908feffff	                           jmp 0x4002ba0	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4002d98	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9961	option.c	FUNCTION_61	CALL_21
0x4002d9d	        0x4883c438	                           add rsp, 0x38	      9962	option.c	FUNCTION_61
0x4002da1	              0x5b	                                 pop rbx	      9962	option.c	FUNCTION_61
0x4002da2	              0x5d	                                 pop rbp	      9962	option.c	FUNCTION_61
0x4002da3	            0x415c	                                 pop r12	      9962	option.c	FUNCTION_61
0x4002da5	            0x415d	                                 pop r13	      9962	option.c	FUNCTION_61
0x4002da7	            0x415e	                                 pop r14	      9962	option.c	FUNCTION_61
0x4002da9	            0x415f	                                 pop r15	      9962	option.c	FUNCTION_61
0x4002dab	      0xe900000000	                           jmp 0x4002db0	      9961	option.c	FUNCTION_61	CALL_21
0x4002db0	            0x31ff	                            xor edi, edi	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002db2	      0xbe00000000	                              mov esi, 0	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002db7	      0xe800000000	                          call 0x4002dbc	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002dbc	          0x4889c7	                            mov rdi, rax	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002dbf	      0xe800000000	                          call 0x4002dc4	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002dc4	      0xe94bfdffff	                           jmp 0x4002b14	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4002dc9	      0x837c242401	               cmp dword [rsp + 0x24], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x4002dce	     0xf85e8feffff	                           jne 0x4002cbc	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x4002dd4	    0x488b0d000000	            mov rcx, qword [0x04002ddb] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002ddb	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002de5	          0x48f7e9	                                imul rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002de8	        0x48c1f93f	                           sar rcx, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002dec	          0x4889d0	                            mov rax, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002def	        0x48c1f803	                              sar rax, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002df3	          0x4829c8	                            sub rax, rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002df6	            0x85c0	                           test eax, eax	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002df8	            0x89c1	                            mov ecx, eax	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002dfa	     0xf84c7feffff	                            je 0x4002cc7	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002e00	        0x8d440bff	                lea eax, [rbx + rcx - 1]	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e04	              0x99	                                     cdq	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e05	            0xf7f9	                                idiv ecx	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e07	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002e09	     0xf8eb8feffff	                           jle 0x4002cc7	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002e0f	          0x4189dc	                           mov r12d, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002e12	            0x89c3	                            mov ebx, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002e14	      0xe9f2fdffff	                           jmp 0x4002c0b	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002e19	     0xf1f80000000	                         nop dword [rax]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4002e20	            0x31ff	                            xor edi, edi	      9885	option.c	FUNCTION_61	CALL_3
0x4002e22	      0xbe00000000	                              mov esi, 0	      9885	option.c	FUNCTION_61	CALL_3
0x4002e27	      0xe800000000	                          call 0x4002e2c	      9885	option.c	FUNCTION_61	CALL_3
0x4002e2c	          0x4889c7	                            mov rdi, rax	      9885	option.c	FUNCTION_61	CALL_3
0x4002e2f	      0xe800000000	                          call 0x4002e34	      9885	option.c	FUNCTION_61	CALL_3
0x4002e34	      0xe9dbfcffff	                           jmp 0x4002b14	      9885	option.c	FUNCTION_61	CALL_3
0x4002e39	        0x4883c438	                           add rsp, 0x38	      9962	option.c	FUNCTION_61
0x4002e3d	              0x5b	                                 pop rbx	      9962	option.c	FUNCTION_61
0x4002e3e	              0x5d	                                 pop rbp	      9962	option.c	FUNCTION_61
0x4002e3f	            0x415c	                                 pop r12	      9962	option.c	FUNCTION_61
0x4002e41	            0x415d	                                 pop r13	      9962	option.c	FUNCTION_61
0x4002e43	            0x415e	                                 pop r14	      9962	option.c	FUNCTION_61
0x4002e45	            0x415f	                                 pop r15	      9962	option.c	FUNCTION_61
0x4002e47	              0xc3	                                     ret	      9962	option.c	FUNCTION_61
0x4002e48	    0x488b35000000	            mov rsi, qword [0x04002e4f] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e4f	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e59	          0x48f7ee	                                imul rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e5c	        0x48c1fe3f	                           sar rsi, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e60	          0x4889d1	                            mov rcx, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e63	        0x48c1f903	                              sar rcx, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e67	          0x4829f1	                            sub rcx, rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4002e6a	            0x85c9	                           test ecx, ecx	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002e6c	       0xf444c2424	           cmove ecx, dword [rsp + 0x24]	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4002e71	            0xeb8d	                           jmp 0x4002e00	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
set_bool_option	WHILE,0:FOR,0:ELSE,45:SWITCH,0:CALL,87:IF,88:functions,1:DO,0	894
0x400b710	            0x4157	                                push r15	      8130	option.c	FUNCTION_49
0x400b712	            0x4156	                                push r14	      8130	option.c	FUNCTION_49
0x400b714	            0x4155	                                push r13	      8130	option.c	FUNCTION_49
0x400b716	            0x4154	                                push r12	      8130	option.c	FUNCTION_49
0x400b718	          0x4189d5	                           mov r13d, edx	      8130	option.c	FUNCTION_49
0x400b71b	              0x55	                                push rbp	      8130	option.c	FUNCTION_49
0x400b71c	              0x53	                                push rbx	      8130	option.c	FUNCTION_49
0x400b71d	          0x4863ef	                         movsxd rbp, edi	      8130	option.c	FUNCTION_49
0x400b720	          0x4889f3	                            mov rbx, rsi	      8130	option.c	FUNCTION_49
0x400b723	          0x4189cc	                           mov r12d, ecx	      8130	option.c	FUNCTION_49
0x400b726	        0x4883ec68	                           sub rsp, 0x68	      8130	option.c	FUNCTION_49
0x400b72a	    0x448b05000000	            mov r8d, dword [0x0400b731] 	      8134	option.c	FUNCTION_49	IF_1
0x400b731	    0x64488b042528	                mov rax, qword fs:[0x28]	      8130	option.c	FUNCTION_49
0x400b73a	      0x4889442458	             mov qword [rsp + 0x58], rax	      8130	option.c	FUNCTION_49
0x400b73f	            0x31c0	                            xor eax, eax	      8130	option.c	FUNCTION_49
0x400b741	          0x4585c0	                           test r8d, r8d	      8134	option.c	FUNCTION_49	IF_1
0x400b744	     0xf85f6010000	                           jne 0x400b940	      8134	option.c	FUNCTION_49	IF_1
0x400b74a	    0x8b3d00000000	            mov edi, dword [0x0400b750] 	      8136	option.c	FUNCTION_49	IF_1
0x400b750	            0x85ff	                           test edi, edi	      8136	option.c	FUNCTION_49	IF_1
0x400b752	     0xf85e8010000	                           jne 0x400b940	      8136	option.c	FUNCTION_49	IF_1
0x400b758	          0x448b33	                   mov r14d, dword [rbx]	      8131	option.c	FUNCTION_49
0x400b75b	          0x44892b	                   mov dword [rbx], r13d	      8141	option.c	FUNCTION_49
0x400b75e	          0x4489e6	                           mov esi, r12d	      8144	option.c	FUNCTION_49	CALL_1
0x400b761	    0x8b1500000000	            mov edx, dword [0x0400b767] 	      8144	option.c	FUNCTION_49	CALL_1
0x400b767	            0x89ef	                            mov edi, ebp	      8144	option.c	FUNCTION_49	CALL_1
0x400b769	      0xe8024affff	        call sym.set_option_scriptID_idx	      8144	option.c	FUNCTION_49	CALL_1
0x400b76e	        0x41f6c406	                            test r12b, 6	      8152	option.c	FUNCTION_49	IF_2
0x400b772	    0xc70500000000	               mov dword [0x0400b77c], 1	      8148	option.c	FUNCTION_49
0x400b77c	     0xf84de030000	                            je 0x400bb60	      8152	option.c	FUNCTION_49	IF_2
0x400b782	    0x4881fb000000	                              cmp rbx, 0	      8160	option.c	FUNCTION_49	IF_3
0x400b789	     0xf84b1070000	                            je 0x400bf40	      8160	option.c	FUNCTION_49	IF_3
0x400b78f	    0x4881fb000000	                              cmp rbx, 0	      8166	option.c	FUNCTION_49	IF_4
0x400b796	     0xf843d090000	                            je 0x400c0d9	      8166	option.c	FUNCTION_49	IF_4
0x400b79c	    0x4881fb000000	                              cmp rbx, 0	      8169	option.c	FUNCTION_49	ELSE_1	IF_5
0x400b7a3	     0xf840b090000	                            je 0x400c0b4	      8169	option.c	FUNCTION_49	ELSE_1	IF_5
0x400b7a9	    0x4c8b3d000000	            mov r15, qword [0x0400b7b0] 	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400b7b0	    0x498d87501600	                 lea rax, [r15 + 0x1650]	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400b7b7	          0x4839c3	                            cmp rbx, rax	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400b7ba	     0xf849b070000	                            je 0x400bf5b	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400b7c0	    0x4881fb000000	                              cmp rbx, 0	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400b7c7	     0xf848e070000	                            je 0x400bf5b	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400b7cd	    0x498d87601500	                 lea rax, [r15 + 0x1560]	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400b7d4	          0x4839c3	                            cmp rbx, rax	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400b7d7	     0xf841e060000	                            je 0x400bdfb	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400b7dd	    0x4881fb000000	                              cmp rbx, 0	      8221	option.c	FUNCTION_49	ELSE_4	IF_11
0x400b7e4	     0xf8414090000	                            je 0x400c0fe	      8221	option.c	FUNCTION_49	ELSE_4	IF_11
0x400b7ea	    0x498d87401500	                 lea rax, [r15 + 0x1540]	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400b7f1	          0x4839c3	                            cmp rbx, rax	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400b7f4	     0xf842e050000	                            je 0x400bd28	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400b7fa	    0x498d87701400	                 lea rax, [r15 + 0x1470]	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400b801	          0x4839c3	                            cmp rbx, rax	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400b804	     0xf8416060000	                            je 0x400be20	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400b80a	    0x498d87741400	                 lea rax, [r15 + 0x1474]	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400b811	          0x4839c3	                            cmp rbx, rax	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400b814	     0xf8406060000	                            je 0x400be20	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400b81a	    0x498d870c1400	                 lea rax, [r15 + 0x140c]	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400b821	          0x4839c3	                            cmp rbx, rax	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400b824	     0xf84f6050000	                            je 0x400be20	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400b82a	    0x498d87081400	                 lea rax, [r15 + 0x1408]	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400b831	          0x4839c3	                            cmp rbx, rax	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400b834	     0xf84b10c0000	                            je 0x400c4eb	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400b83a	    0x498d87241400	                 lea rax, [r15 + 0x1424]	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b841	          0x4839c3	                            cmp rbx, rax	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b844	     0xf84d6030000	                            je 0x400bc20	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400b84a	    0x498d87901500	                 lea rax, [r15 + 0x1590]	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400b851	          0x4839c3	                            cmp rbx, rax	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400b854	     0xf84bb090000	                            je 0x400c215	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400b85a	    0x4881fb000000	                              cmp rbx, 0	      8292	option.c	FUNCTION_49	ELSE_13	IF_22
0x400b861	     0xf84a80d0000	                            je 0x400c60f	      8292	option.c	FUNCTION_49	ELSE_13	IF_22
0x400b867	    0x4881fb000000	                              cmp rbx, 0	      8311	option.c	FUNCTION_49	ELSE_15	IF_25
0x400b86e	     0xf848e0c0000	                            je 0x400c502	      8311	option.c	FUNCTION_49	ELSE_15	IF_25
0x400b874	    0x4881fb000000	                              cmp rbx, 0	      8317	option.c	FUNCTION_49	ELSE_16	IF_26
0x400b87b	     0xf84e8090000	                            je 0x400c269	      8317	option.c	FUNCTION_49	ELSE_16	IF_26
0x400b881	    0x4881fb000000	                              cmp rbx, 0	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400b888	     0xf84f2050000	                            je 0x400be80	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400b88e	    0x4881fb000000	                              cmp rbx, 0	      8344	option.c	FUNCTION_49	ELSE_19	IF_32
0x400b895	     0xf845b0d0000	                            je 0x400c5f6	      8344	option.c	FUNCTION_49	ELSE_19	IF_32
0x400b89b	    0x488b3d000000	            mov rdi, qword [0x0400b8a2] 	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400b8a2	    0x488d87880200	                  lea rax, [rdi + 0x288]	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400b8a9	          0x4839c3	                            cmp rbx, rax	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400b8ac	     0xf84f6090000	                            je 0x400c2a8	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400b8b2	    0x488d87500200	                  lea rax, [rdi + 0x250]	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400b8b9	          0x4839c3	                            cmp rbx, rax	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400b8bc	     0xf859e000000	                           jne 0x400b960	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400b8c2	    0x8b8f50020000	           mov ecx, dword [rdi + 0x250] 	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x400b8c8	            0x85c9	                           test ecx, ecx	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x400b8ca	     0xf84a8010000	                            je 0x400ba78	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x400b8d0	    0x488b05000000	            mov rax, qword [0x0400b8d7] 	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b8d7	          0x4885c0	                           test rax, rax	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b8da	            0x7519	                           jne 0x400b8f5	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b8dc	      0xe997010000	                           jmp 0x400ba78	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b8e1	     0xf1f80000000	                         nop dword [rax]	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b8e8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b8ec	          0x4885c0	                           test rax, rax	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b8ef	     0xf8483010000	                            je 0x400ba78	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400b8f5	    0x8b9050020000	           mov edx, dword [rax + 0x250] 	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b8fb	            0x85d2	                           test edx, edx	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b8fd	            0x74e9	                            je 0x400b8e8	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b8ff	          0x4839c7	                            cmp rdi, rax	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b902	            0x74e4	                            je 0x400b8e8	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b904	    0xc78750020000	              mov dword [rdi + 0x250], 0	      8372	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400b90e	      0xb800000000	                              mov eax, 0	      8373	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x400b913	       0xf1f440000	                   nop dword [rax + rax]	      8373	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x400b918	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      8749	option.c	FUNCTION_49
0x400b91d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8749	option.c	FUNCTION_49
0x400b926	     0xf8533100000	                           jne 0x400c95f	      8749	option.c	FUNCTION_49
0x400b92c	        0x4883c468	                           add rsp, 0x68	      8749	option.c	FUNCTION_49
0x400b930	              0x5b	                                 pop rbx	      8749	option.c	FUNCTION_49
0x400b931	              0x5d	                                 pop rbp	      8749	option.c	FUNCTION_49
0x400b932	            0x415c	                                 pop r12	      8749	option.c	FUNCTION_49
0x400b934	            0x415d	                                 pop r13	      8749	option.c	FUNCTION_49
0x400b936	            0x415e	                                 pop r14	      8749	option.c	FUNCTION_49
0x400b938	            0x415f	                                 pop r15	      8749	option.c	FUNCTION_49
0x400b93a	              0xc3	                                     ret	      8749	option.c	FUNCTION_49
0x400b93b	       0xf1f440000	                   nop dword [rax + rax]	      8749	option.c	FUNCTION_49
0x400b940	          0x4863d5	                         movsxd rdx, ebp	      8138	option.c	FUNCTION_49	IF_1
0x400b943	      0xb800000000	                              mov eax, 0	      8139	option.c	FUNCTION_49	IF_1
0x400b948	        0x48c1e206	                              shl rdx, 6	      8138	option.c	FUNCTION_49	IF_1
0x400b94c	    0xf68200000000	                      test byte [rdx], 8	      8138	option.c	FUNCTION_49	IF_1
0x400b953	     0xf84fffdffff	                            je 0x400b758	      8138	option.c	FUNCTION_49	IF_1
0x400b959	            0xebbd	                           jmp 0x400b918	      8138	option.c	FUNCTION_49	IF_1
0x400b95b	       0xf1f440000	                   nop dword [rax + rax]	      8138	option.c	FUNCTION_49	IF_1
0x400b960	    0x498d87b01500	                 lea rax, [r15 + 0x15b0]	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400b967	          0x4839c3	                            cmp rbx, rax	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400b96a	     0xf843b080000	                            je 0x400c1ab	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400b970	    0x4881fb000000	                              cmp rbx, 0	      8386	option.c	FUNCTION_49	ELSE_23	IF_39
0x400b977	     0xf848c060000	                            je 0x400c009	      8386	option.c	FUNCTION_49	ELSE_23	IF_39
0x400b97d	    0x498d87201500	                 lea rax, [r15 + 0x1520]	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400b984	          0x4839c3	                            cmp rbx, rax	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400b987	     0xf84c0080000	                            je 0x400c24d	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400b98d	    0x4881fb000000	                              cmp rbx, 0	      8404	option.c	FUNCTION_49	ELSE_25	IF_41
0x400b994	     0xf8440090000	                            je 0x400c2da	      8404	option.c	FUNCTION_49	ELSE_25	IF_41
0x400b99a	    0x4881fb000000	                              cmp rbx, 0	      8409	option.c	FUNCTION_49	ELSE_26	IF_42
0x400b9a1	     0xf8499090000	                            je 0x400c340	      8409	option.c	FUNCTION_49	ELSE_26	IF_42
0x400b9a7	    0x498d87c80000	                   lea rax, [r15 + 0xc8]	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400b9ae	          0x4839c3	                            cmp rbx, rax	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400b9b1	     0xf84ab060000	                            je 0x400c062	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400b9b7	    0x488d87940200	                  lea rax, [rdi + 0x294]	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400b9be	          0x4839c3	                            cmp rbx, rax	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400b9c1	     0xf84ca060000	                            je 0x400c091	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400b9c7	    0x4881fb000000	                              cmp rbx, 0	      8457	option.c	FUNCTION_49	ELSE_31	IF_49
0x400b9ce	     0xf8451070000	                            je 0x400c125	      8457	option.c	FUNCTION_49	ELSE_31	IF_49
0x400b9d4	    0x4881fb000000	                              cmp rbx, 0	      8463	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b9db	     0xf84f3070000	                            je 0x400c1d4	      8463	option.c	FUNCTION_49	ELSE_32	IF_51
0x400b9e1	    0x4881fb000000	                              cmp rbx, 0	      8477	option.c	FUNCTION_49	ELSE_34	IF_54
0x400b9e8	     0xf8405090000	                            je 0x400c2f3	      8477	option.c	FUNCTION_49	ELSE_34	IF_54
0x400b9ee	    0x4881fb000000	                              cmp rbx, 0	      8489	option.c	FUNCTION_49	ELSE_36	IF_58
0x400b9f5	     0xf842e050000	                            je 0x400bf29	      8489	option.c	FUNCTION_49	ELSE_36	IF_58
0x400b9fb	    0x4881fb000000	                              cmp rbx, 0	      8496	option.c	FUNCTION_49	ELSE_37	IF_59
0x400ba02	     0xf8454090000	                            je 0x400c35c	      8496	option.c	FUNCTION_49	ELSE_37	IF_59
0x400ba08	    0x488d87c00100	                  lea rax, [rdi + 0x1c0]	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400ba0f	          0x4839c3	                            cmp rbx, rax	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400ba12	     0xf84780c0000	                            je 0x400c690	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400ba18	    0x4881fb000000	                              cmp rbx, 0	      8518	option.c	FUNCTION_49	ELSE_39	IF_62
0x400ba1f	     0xf84aa090000	                            je 0x400c3cf	      8518	option.c	FUNCTION_49	ELSE_39	IF_62
0x400ba25	    0x488d87680200	                  lea rax, [rdi + 0x268]	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400ba2c	          0x4839c3	                            cmp rbx, rax	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400ba2f	     0xf84f6090000	                            je 0x400c42b	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400ba35	    0x4881fb000000	                              cmp rbx, 0	      8544	option.c	FUNCTION_49	ELSE_42	IF_68
0x400ba3c	            0x753a	                           jne 0x400ba78	      8544	option.c	FUNCTION_49	ELSE_42	IF_68
0x400ba3e	    0x8b0500000000	            mov eax, dword [0x0400ba44] 	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400ba44	          0x4139c6	                           cmp r14d, eax	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400ba47	            0x742f	                            je 0x400ba78	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400ba49	            0x85c0	                           test eax, eax	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400ba4b	     0xf85160e0000	                           jne 0x400c867	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400ba51	    0x8b0500000000	            mov eax, dword [0x0400ba57] 	      8550	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400ba57	    0xc70500000000	               mov dword [0x0400ba61], 0	      8551	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400ba61	    0x890500000000	            mov dword [0x0400ba67], eax 	      8550	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400ba67	      0xe800000000	                          call 0x400ba6c	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400ba6c	    0x488b3d000000	            mov rdi, qword [0x0400ba73] 	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400ba73	       0xf1f440000	                   nop dword [rax + rax]	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400ba78	    0x8b0500000000	            mov eax, dword [0x0400ba7e] 	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400ba7e	            0x85c0	                           test eax, eax	      8570	option.c	FUNCTION_49	IF_71
0x400ba80	     0xf858a000000	                           jne 0x400bb10	      8570	option.c	FUNCTION_49	IF_71
0x400ba86	    0x8b0500000000	            mov eax, dword [0x0400ba8c] 	      8570	option.c	FUNCTION_49	IF_71
0x400ba8c	            0x85c0	                           test eax, eax	      8570	option.c	FUNCTION_49	IF_71
0x400ba8e	            0x89c2	                            mov edx, eax	      8570	option.c	FUNCTION_49	IF_71
0x400ba90	     0xf85ea000000	                           jne 0x400bb80	      8570	option.c	FUNCTION_49	IF_71
0x400ba96	    0x488d87b00100	                  lea rax, [rdi + 0x1b0]	      8607	option.c	FUNCTION_49	IF_74
0x400ba9d	          0x4839c3	                            cmp rbx, rax	      8607	option.c	FUNCTION_49	IF_74
0x400baa0	     0xf84ba020000	                            je 0x400bd60	      8607	option.c	FUNCTION_49	IF_74
0x400baa6	    0x4881fb000000	                              cmp rbx, 0	      8694	option.c	FUNCTION_49	ELSE_45	IF_82
0x400baad	     0xf849d030000	                            je 0x400be50	      8694	option.c	FUNCTION_49	ELSE_45	IF_82
0x400bab3	    0x8b0d00000000	            mov ecx, dword [0x0400bab9] 	      8728	option.c	FUNCTION_49	IF_87
0x400bab9	          0x4889eb	                            mov rbx, rbp	      8725	option.c	FUNCTION_49
0x400babc	        0x48c1e306	                              shl rbx, 6	      8725	option.c	FUNCTION_49
0x400bac0	    0x48818b000000	                   or qword [rbx], 0x100	      8725	option.c	FUNCTION_49
0x400bacb	            0x85c9	                           test ecx, ecx	      8728	option.c	FUNCTION_49	IF_87
0x400bacd	     0xf848d010000	                            je 0x400bc60	      8728	option.c	FUNCTION_49	IF_87
0x400bad3	      0xe800000000	                          call 0x400bad8	      8742	option.c	FUNCTION_49	CALL_86
0x400bad8	    0x488b05000000	            mov rax, qword [0x0400badf] 	      8743	option.c	FUNCTION_49	IF_88
0x400badf	        0x48c1e506	                              shl rbp, 6	      8744	option.c	FUNCTION_49	IF_88
0x400bae3	    0x488bbd000000	                    mov rdi, qword [rbp]	      8744	option.c	FUNCTION_49	IF_88
0x400baea	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      8743	option.c	FUNCTION_49	IF_88
0x400baf1	            0x740f	                            je 0x400bb02	      8743	option.c	FUNCTION_49	IF_88
0x400baf3	    0xf7c700600004	                     test edi, 0x4006000	      8744	option.c	FUNCTION_49	IF_88
0x400baf9	            0x7407	                            je 0x400bb02	      8744	option.c	FUNCTION_49	IF_88
0x400bafb	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8745	option.c	FUNCTION_49	IF_88
0x400bb02	      0xe81958ffff	                   call sym.check_redraw	      8746	option.c	FUNCTION_49	CALL_87
0x400bb07	            0x31c0	                            xor eax, eax	      8748	option.c	FUNCTION_49
0x400bb09	      0xe90afeffff	                           jmp 0x400b918	      8748	option.c	FUNCTION_49
0x400bb0e	            0x6690	                                     nop	      8748	option.c	FUNCTION_49
0x400bb10	    0x8b1500000000	            mov edx, dword [0x0400bb16] 	      8570	option.c	FUNCTION_49	IF_71
0x400bb16	            0x85d2	                           test edx, edx	      8570	option.c	FUNCTION_49	IF_71
0x400bb18	     0xf858a000000	                           jne 0x400bba8	      8570	option.c	FUNCTION_49	IF_71
0x400bb1e	    0x8b0500000000	            mov eax, dword [0x0400bb24] 	      8595	option.c	FUNCTION_49	IF_73
0x400bb24	            0x85c0	                           test eax, eax	      8595	option.c	FUNCTION_49	IF_73
0x400bb26	     0xf846affffff	                            je 0x400ba96	      8595	option.c	FUNCTION_49	IF_73
0x400bb2c	    0xc787b0010000	              mov dword [rdi + 0x1b0], 0	      8600	option.c	FUNCTION_49	IF_73
0x400bb36	    0xc70500000000	               mov dword [0x0400bb40], 1	      8597	option.c	FUNCTION_49	IF_73
0x400bb40	    0xc70500000000	               mov dword [0x0400bb4a], 0	      8598	option.c	FUNCTION_49	IF_73
0x400bb4a	      0xe800000000	                          call 0x400bb4f	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400bb4f	    0x488b3d000000	            mov rdi, qword [0x0400bb56] 	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400bb56	      0xe93bffffff	                           jmp 0x400ba96	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400bb5b	       0xf1f440000	                   nop dword [rax + rax]	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400bb60	          0x4863fd	                         movsxd rdi, ebp	      8153	option.c	FUNCTION_49	CALL_2
0x400bb63	      0xbe02000000	                              mov esi, 2	      8153	option.c	FUNCTION_49	CALL_2
0x400bb68	        0x48c1e706	                              shl rdi, 6	      8153	option.c	FUNCTION_49	CALL_2
0x400bb6c	    0x4881c7000000	                              add rdi, 0	      8153	option.c	FUNCTION_49	CALL_2
0x400bb73	      0xe8e868ffff	                 call sym.get_varp_scope	      8153	option.c	FUNCTION_49	CALL_2
0x400bb78	          0x448928	                   mov dword [rax], r13d	      8153	option.c	FUNCTION_49	CALL_2
0x400bb7b	      0xe902fcffff	                           jmp 0x400b782	      8153	option.c	FUNCTION_49	CALL_2
0x400bb80	    0x8b0d00000000	            mov ecx, dword [0x0400bb86] 	      8570	option.c	FUNCTION_49	IF_71
0x400bb86	            0x85c9	                           test ecx, ecx	      8570	option.c	FUNCTION_49	IF_71
0x400bb88	            0x7524	                           jne 0x400bbae	      8570	option.c	FUNCTION_49	IF_71
0x400bb8a	            0x85c0	                           test eax, eax	      8595	option.c	FUNCTION_49	IF_73
0x400bb8c	     0xf8404ffffff	                            je 0x400ba96	      8595	option.c	FUNCTION_49	IF_73
0x400bb92	    0x8b0500000000	            mov eax, dword [0x0400bb98] 	      8595	option.c	FUNCTION_49	IF_73
0x400bb98	            0x85c0	                           test eax, eax	      8595	option.c	FUNCTION_49	IF_73
0x400bb9a	     0xf85f6feffff	                           jne 0x400ba96	      8595	option.c	FUNCTION_49	IF_73
0x400bba0	            0xeb8a	                           jmp 0x400bb2c	      8595	option.c	FUNCTION_49	IF_73
0x400bba2	    0x660f1f440000	                    nop word [rax + rax]	      8595	option.c	FUNCTION_49	IF_73
0x400bba8	    0x8b1500000000	            mov edx, dword [0x0400bbae] 	      8595	option.c	FUNCTION_49	IF_73
0x400bbae	    0xc787b0010000	              mov dword [rdi + 0x1b0], 0	      8574	option.c	FUNCTION_49	IF_71
0x400bbb8	    0x891500000000	            mov dword [0x0400bbbe], edx 	      8572	option.c	FUNCTION_49	IF_71
0x400bbbe	      0xe800000000	                          call 0x400bbc3	      8576	option.c	FUNCTION_49	IF_71	CALL_53
0x400bbc3	    0x8b0500000000	            mov eax, dword [0x0400bbc9] 	      8582	option.c	FUNCTION_49	IF_72
0x400bbc9	    0x488b3d000000	            mov rdi, qword [0x0400bbd0] 	      8582	option.c	FUNCTION_49	IF_72
0x400bbd0	            0x85c0	                           test eax, eax	      8582	option.c	FUNCTION_49	IF_72
0x400bbd2	     0xf8478030000	                            je 0x400bf50	      8582	option.c	FUNCTION_49	IF_72
0x400bbd8	    0x8b0500000000	            mov eax, dword [0x0400bbde] 	      8582	option.c	FUNCTION_49	IF_72
0x400bbde	            0x85c0	                           test eax, eax	      8582	option.c	FUNCTION_49	IF_72
0x400bbe0	     0xf8438ffffff	                            je 0x400bb1e	      8582	option.c	FUNCTION_49	IF_72
0x400bbe6	    0xc787b0010000	              mov dword [rdi + 0x1b0], 0	      8587	option.c	FUNCTION_49	IF_72
0x400bbf0	    0xc70500000000	               mov dword [0x0400bbfa], 0	      8584	option.c	FUNCTION_49	IF_72
0x400bbfa	    0xc70500000000	               mov dword [0x0400bc04], 0	      8585	option.c	FUNCTION_49	IF_72
0x400bc04	      0xe800000000	                          call 0x400bc09	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400bc09	    0x8b0500000000	            mov eax, dword [0x0400bc0f] 	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400bc0f	    0x488b3d000000	            mov rdi, qword [0x0400bc16] 	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400bc16	      0xe96fffffff	                           jmp 0x400bb8a	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400bc1b	       0xf1f440000	                   nop dword [rax + rax]	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400bc20	    0x418b87241400	          mov eax, dword [r15 + 0x1424] 	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400bc27	          0x4139c6	                           cmp r14d, eax	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400bc2a	     0xf841afcffff	                            je 0x400b84a	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400bc30	            0x31ff	                            xor edi, edi	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc32	            0x85c0	                           test eax, eax	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc34	          0x4d89f8	                             mov r8, r15	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc37	        0x400f94c7	                                sete dil	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc3b	      0xb901000000	                              mov ecx, 1	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc40	            0x31d2	                            xor edx, edx	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc42	            0x31f6	                            xor esi, esi	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc44	      0xe800000000	                          call 0x400bc49	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc49	    0x488b3d000000	            mov rdi, qword [0x0400bc50] 	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc50	    0x8b0500000000	            mov eax, dword [0x0400bc56] 	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc56	      0xe923feffff	                           jmp 0x400ba7e	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc5b	       0xf1f440000	                   nop dword [rax + rax]	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400bc60	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bc65	            0x31c9	                            xor ecx, ecx	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bc67	          0x4585f6	                         test r14d, r14d	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bc6a	           0xf95c1	                                setne cl	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bc6d	      0xba00000000	                              mov edx, 0	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bc72	      0xbe02000000	                              mov esi, 2	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bc77	            0x31c0	                            xor eax, eax	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bc79	      0xe800000000	                          call 0x400bc7e	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400bc7e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bc83	            0x31c9	                            xor ecx, ecx	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bc85	          0x4585ed	                         test r13d, r13d	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bc88	           0xf95c1	                                setne cl	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bc8b	      0xba00000000	                              mov edx, 0	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bc90	      0xbe02000000	                              mov esi, 2	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bc95	            0x31c0	                            xor eax, eax	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bc97	      0xe800000000	                          call 0x400bc9c	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400bc9c	        0x4183e404	                             and r12d, 4	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bca0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bca5	      0xb800000000	                              mov eax, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bcaa	      0xb900000000	                              mov ecx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bcaf	      0xba00000000	                              mov edx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bcb4	      0xbe07000000	                              mov esi, 7	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bcb9	        0x480f44c8	                          cmove rcx, rax	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bcbd	            0x31c0	                            xor eax, eax	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bcbf	      0xe800000000	                          call 0x400bcc4	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400bcc4	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400bcc9	      0xbaffffffff	                     mov edx, 0xffffffff	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400bcce	      0xbf3d000000	                           mov edi, 0x3d	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400bcd3	      0xe800000000	                          call 0x400bcd8	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400bcd8	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400bcdd	      0xbaffffffff	                     mov edx, 0xffffffff	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400bce2	      0xbf3e000000	                           mov edi, 0x3e	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400bce7	      0xe800000000	                          call 0x400bcec	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400bcec	      0x488d742430	                   lea rsi, [rsp + 0x30]	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400bcf1	      0xbaffffffff	                     mov edx, 0xffffffff	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400bcf6	      0xbf3f000000	                           mov edi, 0x3f	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400bcfb	      0xe800000000	                          call 0x400bd00	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400bd00	    0x488bb3000000	                    mov rsi, qword [rbx]	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bd07	          0x4531c0	                            xor r8d, r8d	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bd0a	            0x31c9	                            xor ecx, ecx	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bd0c	            0x31d2	                            xor edx, edx	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bd0e	      0xbf3e000000	                           mov edi, 0x3e	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bd13	      0xe800000000	                          call 0x400bd18	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400bd18	      0xe800000000	                          call 0x400bd1d	      8738	option.c	FUNCTION_49	IF_87	CALL_85
0x400bd1d	      0xe9b1fdffff	                           jmp 0x400bad3	      8738	option.c	FUNCTION_49	IF_87	CALL_85
0x400bd22	    0x660f1f440000	                    nop word [rax + rax]	      8738	option.c	FUNCTION_49	IF_87	CALL_85
0x400bd28	    0x418b87401500	          mov eax, dword [r15 + 0x1540] 	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400bd2f	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400bd31	     0xf84e9000000	                            je 0x400be20	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400bd37	      0xe800000000	                          call 0x400bd3c	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400bd3c	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400bd3e	     0xf84aa010000	                            je 0x400beee	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400bd44	    0x488b05000000	            mov rax, qword [0x0400bd4b] 	      8236	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14
0x400bd4b	    0xc78040150000	            mov dword [rax + 0x1540], 0 	      8236	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14
0x400bd55	      0xb800000000	                              mov eax, 0	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400bd5a	      0xe9b9fbffff	                           jmp 0x400b918	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400bd5f	              0x90	                                     nop	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400bd60	    0x448bbfb00100	          mov r15d, dword [rdi + 0x1b0] 	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x400bd67	          0x4585ff	                         test r15d, r15d	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x400bd6a	     0xf8440010000	                            je 0x400beb0	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x400bd70	    0x8b1d00000000	            mov ebx, dword [0x0400bd76] 	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x400bd76	            0x85db	                           test ebx, ebx	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x400bd78	            0x7520	                           jne 0x400bd9a	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x400bd7a	    0x448b9f540200	          mov r11d, dword [rdi + 0x254] 	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400bd81	          0x4585db	                         test r11d, r11d	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400bd84	     0xf8431060000	                            je 0x400c3bb	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400bd8a	    0x448b15000000	           mov r10d, dword [0x0400bd91] 	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400bd91	          0x4585d2	                         test r10d, r10d	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400bd94	     0xf840d060000	                            je 0x400c3a7	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400bd9a	    0x488b35000000	            mov rsi, qword [0x0400bda1] 	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400bda1	      0xbf00000000	                              mov edi, 0	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400bda6	      0xb906000000	                              mov ecx, 6	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400bdab	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400bdad	     0xf85a4030000	                           jne 0x400c157	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400bdb3	      0xb904000000	                              mov ecx, 4	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400bdb8	      0xba00000000	                              mov edx, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400bdbd	            0x31f6	                            xor esi, esi	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400bdbf	      0xbf00000000	                              mov edi, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400bdc4	    0xc70500000000	               mov dword [0x0400bdce], 1	      8646	option.c	FUNCTION_49	IF_74	IF_75
0x400bdce	      0xe800000000	                          call 0x400bdd3	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400bdd3	    0xc70500000000	               mov dword [0x0400bddd], 0	      8655	option.c	FUNCTION_49	IF_74	IF_75
0x400bddd	    0xc70500000000	               mov dword [0x0400bde7], 0	      8656	option.c	FUNCTION_49	IF_74	IF_75
0x400bde7	    0xc70500000000	               mov dword [0x0400bdf1], 0	      8657	option.c	FUNCTION_49	IF_74	IF_75
0x400bdf1	      0xe800000000	                          call 0x400bdf6	      8658	option.c	FUNCTION_49	IF_74	IF_75	CALL_68
0x400bdf6	      0xe9b8fcffff	                           jmp 0x400bab3	      8658	option.c	FUNCTION_49	IF_74	IF_75	CALL_68
0x400bdfb	    0x418b87601500	          mov eax, dword [r15 + 0x1560] 	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400be02	            0x85c0	                           test eax, eax	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400be04	     0xf8579050000	                           jne 0x400c383	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400be0a	        0x41f6c404	                            test r12b, 4	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400be0e	            0x7510	                           jne 0x400be20	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400be10	    0xc70500000000	               mov dword [0x0400be1a], 0	      8209	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400be1a	    0x660f1f440000	                    nop word [rax + rax]	      8209	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400be20	    0xc70500000000	               mov dword [0x0400be2a], 1	      5857	option.c	FUNCTION_35
0x400be2a	    0xc70500000000	               mov dword [0x0400be34], 1	      5858	option.c	FUNCTION_35
0x400be34	    0x488b3d000000	            mov rdi, qword [0x0400be3b] 	      5858	option.c	FUNCTION_35
0x400be3b	    0x8b0500000000	            mov eax, dword [0x0400be41] 	      5858	option.c	FUNCTION_35
0x400be41	      0xe938fcffff	                           jmp 0x400ba7e	      5858	option.c	FUNCTION_35
0x400be46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5858	option.c	FUNCTION_35
0x400be50	    0x8b3d00000000	            mov edi, dword [0x0400be56] 	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400be56	            0x85ff	                           test edi, edi	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400be58	     0xf8555fcffff	                           jne 0x400bab3	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400be5e	    0x8b3500000000	            mov esi, dword [0x0400be64] 	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400be64	            0x85f6	                           test esi, esi	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400be66	     0xf8547fcffff	                           jne 0x400bab3	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400be6c	      0xe800000000	                          call 0x400be71	      8709	option.c	FUNCTION_49	ELSE_45	IF_82	CALL_74
0x400be71	      0xe93dfcffff	                           jmp 0x400bab3	      8709	option.c	FUNCTION_49	ELSE_45	IF_82	CALL_74
0x400be76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8709	option.c	FUNCTION_49	ELSE_45	IF_82	CALL_74
0x400be80	    0x8b3d00000000	            mov edi, dword [0x0400be86] 	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400be86	            0x85ff	                           test edi, edi	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400be88	     0xf8400faffff	                            je 0x400b88e	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400be8e	      0xbf23000000	                           mov edi, 0x23	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400be93	      0xe800000000	                          call 0x400be98	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400be98	    0x488b3d000000	            mov rdi, qword [0x0400be9f] 	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400be9f	    0x8b0500000000	            mov eax, dword [0x0400bea5] 	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400bea5	      0xe9d4fbffff	                           jmp 0x400ba7e	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400beaa	    0x660f1f440000	                    nop word [rax + rax]	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400beb0	    0x448b0d000000	            mov r9d, dword [0x0400beb7] 	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400beb7	          0x4585c9	                           test r9d, r9d	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400beba	            0x7510	                           jne 0x400becc	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400bebc	    0x448b87540200	           mov r8d, dword [rdi + 0x254] 	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400bec3	          0x4585c0	                           test r8d, r8d	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400bec6	     0xf85c7040000	                           jne 0x400c393	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400becc	    0x488b05000000	            mov rax, qword [0x0400bed3] 	      8684	option.c	FUNCTION_49	IF_74	ELSE_44
0x400bed3	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      8684	option.c	FUNCTION_49	IF_74	ELSE_44
0x400bede	    0x48c780801200	mov qword [rax + 0x1280], 0xffffffffffffffff 	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400bee9	      0xe9c5fbffff	                           jmp 0x400bab3	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400beee	    0x488b3d000000	            mov rdi, qword [0x0400bef5] 	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400bef5	      0xe800000000	                          call 0x400befa	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400befa	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400befc	     0xf841effffff	                            je 0x400be20	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400bf02	    0x488b3d000000	            mov rdi, qword [0x0400bf09] 	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400bf09	    0x4883bf481c00	             cmp qword [rdi + 0x1c48], 0	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400bf11	     0xf8409ffffff	                            je 0x400be20	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400bf17	      0xe800000000	                          call 0x400bf1c	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400bf1c	            0x85c0	                           test eax, eax	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400bf1e	     0xf8420feffff	                            je 0x400bd44	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400bf24	      0xe9f7feffff	                           jmp 0x400be20	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400bf29	      0xe800000000	                          call 0x400bf2e	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400bf2e	    0x488b3d000000	            mov rdi, qword [0x0400bf35] 	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400bf35	    0x8b0500000000	            mov eax, dword [0x0400bf3b] 	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400bf3b	      0xe93efbffff	                           jmp 0x400ba7e	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400bf40	      0xe86b89ffff	                 call sym.compatible_set	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400bf45	      0xe945f8ffff	                           jmp 0x400b78f	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400bf4a	    0x660f1f440000	                    nop word [rax + rax]	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400bf50	    0x8b0500000000	            mov eax, dword [0x0400bf56] 	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400bf56	      0xe92ffcffff	                           jmp 0x400bb8a	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400bf5b	    0x418b97501600	          mov edx, dword [r15 + 0x1650] 	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf62	            0x85d2	                           test edx, edx	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf64	            0x750e	                           jne 0x400bf74	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf66	    0x8b0500000000	            mov eax, dword [0x0400bf6c] 	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf6c	            0x85c0	                           test eax, eax	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf6e	     0xf84f8faffff	                            je 0x400ba6c	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf74	    0x488b05000000	            mov rax, qword [0x0400bf7b] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf7b	          0x4885c0	                           test rax, rax	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf7e	    0x488905000000	            mov qword [0x0400bf85], rax 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf85	     0xf84be000000	                            je 0x400c049	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bf8b	          0x4489e2	                           mov edx, r12d	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bf8e	            0xd1ea	                              shr edx, 1	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bf90	            0x89d1	                            mov ecx, edx	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bf92	          0x83e101	                              and ecx, 1	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bf95	        0x884c2408	                  mov byte [rsp + 8], cl	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bf99	            0xeb25	                           jmp 0x400bfc0	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bf9b	       0xf1f440000	                   nop dword [rax + rax]	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bfa0	          0x4585e4	                         test r12d, r12d	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bfa3	            0x7427	                            je 0x400bfcc	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bfa5	    0x488b05000000	            mov rax, qword [0x0400bfac] 	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bfac	        0x488b4068	            mov rax, qword [rax + 0x68] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bfb0	          0x4885c0	                           test rax, rax	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bfb3	    0x488905000000	            mov qword [0x0400bfba], rax 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bfba	     0xf8489000000	                            je 0x400c049	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400bfc0	          0x4939c7	                            cmp r15, rax	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bfc3	            0x7407	                            je 0x400bfcc	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bfc5	      0x807c240800	                   cmp byte [rsp + 8], 0	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bfca	            0x74d4	                            je 0x400bfa0	      8193	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400bfcc	      0xe800000000	                          call 0x400bfd1	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400bfd1	            0x85c0	                           test eax, eax	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400bfd3	    0x488b05000000	            mov rax, qword [0x0400bfda] 	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400bfda	            0x75d0	                           jne 0x400bfac	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400bfdc	      0x4883780800	                  cmp qword [rax + 8], 0	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400bfe1	            0x74c9	                            je 0x400bfac	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400bfe3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x400bfe8	      0xe800000000	                          call 0x400bfed	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x400bfed	    0x488b05000000	            mov rax, qword [0x0400bff4] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400bff4	      0x488d742430	                   lea rsi, [rsp + 0x30]	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400bff9	            0x31ff	                            xor edi, edi	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400bffb	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400c002	      0xe800000000	                          call 0x400c007	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400c007	            0xeb9c	                           jmp 0x400bfa5	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400c009	    0x8b0500000000	            mov eax, dword [0x0400c00f] 	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c00f	          0x4489e1	                           mov ecx, r12d	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c012	      0xba00000000	                              mov edx, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c017	          0x83c901	                               or ecx, 1	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c01a	      0xbf00000000	                              mov edi, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c01f	      0xbeffffffff	                     mov esi, 0xffffffff	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c024	            0x85c0	                           test eax, eax	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c026	      0xb800000000	                              mov eax, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c02b	        0x480f44d0	                          cmove rdx, rax	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c02f	          0x4531c0	                            xor r8d, r8d	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c032	      0xe800000000	                          call 0x400c037	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c037	    0x488b3d000000	            mov rdi, qword [0x0400c03e] 	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c03e	    0x8b0500000000	            mov eax, dword [0x0400c044] 	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c044	      0xe935faffff	                           jmp 0x400ba7e	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400c049	    0x4c893d000000	            mov qword [0x0400c050], r15 	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400c050	    0x488b3d000000	            mov rdi, qword [0x0400c057] 	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400c057	    0x8b0500000000	            mov eax, dword [0x0400c05d] 	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400c05d	      0xe91cfaffff	                           jmp 0x400ba7e	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400c062	          0x4585ed	                         test r13d, r13d	      8417	option.c	FUNCTION_49	ELSE_27	IF_43	IF_44
0x400c065	     0xf8405040000	                            je 0x400c470	      8417	option.c	FUNCTION_49	ELSE_27	IF_43	IF_44
0x400c06b	    0xc70500000000	               mov dword [0x0400c075], 1	      5857	option.c	FUNCTION_35
0x400c075	    0xc70500000000	               mov dword [0x0400c07f], 1	      5858	option.c	FUNCTION_35
0x400c07f	    0x44892d000000	           mov dword [0x0400c086], r13d 	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x400c086	    0x8b0500000000	            mov eax, dword [0x0400c08c] 	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x400c08c	      0xe9edf9ffff	                           jmp 0x400ba7e	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x400c091	    0x8b8794020000	           mov eax, dword [rdi + 0x294] 	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400c097	            0x85c0	                           test eax, eax	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400c099	     0xf84d9f9ffff	                            je 0x400ba78	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400c09f	    0xc78794000000	               mov dword [rdi + 0x94], 0	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400c0a9	    0x8b0500000000	            mov eax, dword [0x0400c0af] 	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400c0af	      0xe9caf9ffff	                           jmp 0x400ba7e	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400c0b4	    0x8b0d00000000	            mov ecx, dword [0x0400c0ba] 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400c0ba	            0x31c0	                            xor eax, eax	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400c0bc	    0x488b3d000000	            mov rdi, qword [0x0400c0c3] 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400c0c3	            0x85c9	                           test ecx, ecx	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400c0c5	           0xf94c0	                                 sete al	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400c0c8	    0x890500000000	            mov dword [0x0400c0ce], eax 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400c0ce	    0x8b0500000000	            mov eax, dword [0x0400c0d4] 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400c0d4	      0xe9a5f9ffff	                           jmp 0x400ba7e	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400c0d9	    0x8b3500000000	            mov esi, dword [0x0400c0df] 	      8168	option.c	FUNCTION_49	IF_4
0x400c0df	            0x31c0	                            xor eax, eax	      8168	option.c	FUNCTION_49	IF_4
0x400c0e1	    0x488b3d000000	            mov rdi, qword [0x0400c0e8] 	      8168	option.c	FUNCTION_49	IF_4
0x400c0e8	            0x85f6	                           test esi, esi	      8168	option.c	FUNCTION_49	IF_4
0x400c0ea	           0xf94c0	                                 sete al	      8168	option.c	FUNCTION_49	IF_4
0x400c0ed	    0x890500000000	            mov dword [0x0400c0f3], eax 	      8168	option.c	FUNCTION_49	IF_4
0x400c0f3	    0x8b0500000000	            mov eax, dword [0x0400c0f9] 	      8168	option.c	FUNCTION_49	IF_4
0x400c0f9	      0xe980f9ffff	                           jmp 0x400ba7e	      8168	option.c	FUNCTION_49	IF_4
0x400c0fe	    0x8b0500000000	            mov eax, dword [0x0400c104] 	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x400c104	            0x85c0	                           test eax, eax	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x400c106	     0xf8560f9ffff	                           jne 0x400ba6c	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x400c10c	            0x31ff	                            xor edi, edi	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400c10e	      0xe800000000	                          call 0x400c113	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400c113	    0x488b3d000000	            mov rdi, qword [0x0400c11a] 	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400c11a	    0x8b0500000000	            mov eax, dword [0x0400c120] 	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400c120	      0xe959f9ffff	                           jmp 0x400ba7e	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400c125	    0x8b0500000000	            mov eax, dword [0x0400c12b] 	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400c12b	            0x85c0	                           test eax, eax	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400c12d	     0xf8445f9ffff	                            je 0x400ba78	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400c133	          0x4585f6	                         test r14d, r14d	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400c136	     0xf853cf9ffff	                           jne 0x400ba78	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400c13c	            0x31d2	                            xor edx, edx	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400c13e	            0x31f6	                            xor esi, esi	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400c140	      0xe800000000	                          call 0x400c145	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400c145	    0x488b3d000000	            mov rdi, qword [0x0400c14c] 	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400c14c	    0x8b0500000000	            mov eax, dword [0x0400c152] 	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400c152	      0xe927f9ffff	                           jmp 0x400ba7e	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400c157	    0x8b3d00000000	            mov edi, dword [0x0400c15d] 	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x400c15d	      0xe800000000	                          call 0x400c162	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x400c162	    0x8b1d00000000	            mov ebx, dword [0x0400c168] 	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400c168	      0xba05000000	                              mov edx, 5	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400c16d	            0x31ff	                            xor edi, edi	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400c16f	      0xbe00000000	                              mov esi, 0	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400c174	      0xe800000000	                          call 0x400c179	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400c179	            0x89de	                            mov esi, ebx	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400c17b	          0x4889c7	                            mov rdi, rax	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400c17e	      0xe800000000	                          call 0x400c183	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400c183	            0x31ff	                            xor edi, edi	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c185	      0xba05000000	                              mov edx, 5	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c18a	      0xbe00000000	                              mov esi, 0	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c18f	      0xe800000000	                          call 0x400c194	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c194	      0xbaffffffff	                     mov edx, 0xffffffff	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c199	          0x4889c6	                            mov rsi, rax	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c19c	      0xbf04000000	                              mov edi, 4	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c1a1	      0xe800000000	                          call 0x400c1a6	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c1a6	      0xe908fcffff	                           jmp 0x400bdb3	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400c1ab	    0x418b87b01500	          mov eax, dword [r15 + 0x15b0] 	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1b2	            0x31ff	                            xor edi, edi	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1b4	          0x4489e6	                           mov esi, r12d	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1b7	            0x85c0	                           test eax, eax	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1b9	        0x400f95c7	                               setne dil	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1bd	      0xe800000000	                          call 0x400c1c2	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1c2	    0x488b3d000000	            mov rdi, qword [0x0400c1c9] 	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1c9	    0x8b0500000000	            mov eax, dword [0x0400c1cf] 	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1cf	      0xe9aaf8ffff	                           jmp 0x400ba7e	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400c1d4	    0x448b3d000000	           mov r15d, dword [0x0400c1db] 	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400c1db	          0x4585ff	                         test r15d, r15d	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400c1de	     0xf852d020000	                           jne 0x400c411	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400c1e4	          0x4585f6	                         test r14d, r14d	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400c1e7	     0xf8497020000	                            je 0x400c484	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400c1ed	    0x488b05000000	            mov rax, qword [0x0400c1f4] 	      8472	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400c1f4	    0x488905000000	            mov qword [0x0400c1fb], rax 	      8472	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400c1fb	          0x803800	                       cmp byte [rax], 0	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400c1fe	           0xf95c0	                                setne al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400c201	           0xfb6c0	                           movzx eax, al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400c204	    0x890500000000	            mov dword [0x0400c20a], eax 	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400c20a	    0x8b0500000000	            mov eax, dword [0x0400c210] 	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400c210	      0xe969f8ffff	                           jmp 0x400ba7e	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400c215	    0x418b87901500	          mov eax, dword [r15 + 0x1590] 	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400c21c	            0x85c0	                           test eax, eax	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400c21e	            0x740e	                            je 0x400c22e	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400c220	    0x48833d000000	               cmp qword [0x0400c228], 0	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400c228	     0xf85c9050000	                           jne 0x400c7f7	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400c22e	          0x4c89ff	                            mov rdi, r15	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400c231	      0xbe01000000	                              mov esi, 1	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400c236	      0xe800000000	                          call 0x400c23b	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400c23b	    0x488b3d000000	            mov rdi, qword [0x0400c242] 	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400c242	    0x8b0500000000	            mov eax, dword [0x0400c248] 	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400c248	      0xe931f8ffff	                           jmp 0x400ba7e	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400c24d	          0x4c89ff	                            mov rdi, r15	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400c250	            0x31f6	                            xor esi, esi	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400c252	      0xe800000000	                          call 0x400c257	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400c257	    0x488b3d000000	            mov rdi, qword [0x0400c25e] 	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400c25e	    0x8b0500000000	            mov eax, dword [0x0400c264] 	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400c264	      0xe915f8ffff	                           jmp 0x400ba7e	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400c269	    0x448b15000000	           mov r10d, dword [0x0400c270] 	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400c270	          0x4585d2	                         test r10d, r10d	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400c273	     0xf8417020000	                            je 0x400c490	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400c279	    0xf60500000000	           test byte [0x0400c280], 0x10 	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400c280	            0x750a	                           jne 0x400c28c	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400c282	    0xc70500000000	               mov dword [0x0400c28c], 1	      8322	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400c28c	    0xc70500000000	               mov dword [0x0400c296], 0	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400c296	    0x488b3d000000	            mov rdi, qword [0x0400c29d] 	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400c29d	    0x8b0500000000	            mov eax, dword [0x0400c2a3] 	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400c2a3	      0xe9d6f7ffff	                           jmp 0x400ba7e	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400c2a8	    0x8bb788020000	           mov esi, dword [rdi + 0x288] 	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400c2ae	            0x85f6	                           test esi, esi	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400c2b0	     0xf84c2f7ffff	                            je 0x400ba78	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400c2b6	            0x31ff	                            xor edi, edi	      8356	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34	CALL_27
0x400c2b8	      0xe800000000	                          call 0x400c2bd	      8356	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34	CALL_27
0x400c2bd	    0x488b3d000000	            mov rdi, qword [0x0400c2c4] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400c2c4	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400c2c8	    0x488987500500	            mov qword [rdi + 0x550], rax	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400c2cf	    0x8b0500000000	            mov eax, dword [0x0400c2d5] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400c2d5	      0xe9a4f7ffff	                           jmp 0x400ba7e	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400c2da	            0x31ff	                            xor edi, edi	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x400c2dc	      0xe86f6cffff	                  call sym.did_set_title	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x400c2e1	    0x488b3d000000	            mov rdi, qword [0x0400c2e8] 	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x400c2e8	    0x8b0500000000	            mov eax, dword [0x0400c2ee] 	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x400c2ee	      0xe98bf7ffff	                           jmp 0x400ba7e	      8406	option.c	FUNCTION_49	ELSE_25	IF_41	CALL_33
0x400c2f3	    0x448b1d000000	           mov r11d, dword [0x0400c2fa] 	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x400c2fa	          0x4585db	                         test r11d, r11d	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x400c2fd	     0xf8575f7ffff	                           jne 0x400ba78	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x400c303	    0x448b15000000	           mov r10d, dword [0x0400c30a] 	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400c30a	          0x4585d2	                         test r10d, r10d	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400c30d	     0xf85b4030000	                           jne 0x400c6c7	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400c313	          0x4585f6	                         test r14d, r14d	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400c316	     0xf845cf7ffff	                            je 0x400ba78	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400c31c	    0x488b3d000000	            mov rdi, qword [0x0400c323] 	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400c323	      0xe800000000	                          call 0x400c328	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400c328	    0x488b3d000000	            mov rdi, qword [0x0400c32f] 	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400c32f	    0x8b0500000000	            mov eax, dword [0x0400c335] 	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400c335	      0xe944f7ffff	                           jmp 0x400ba7e	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400c33a	    0x660f1f440000	                    nop word [rax + rax]	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400c340	      0xbf01000000	                              mov edi, 1	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x400c345	      0xe8066cffff	                  call sym.did_set_title	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x400c34a	    0x488b3d000000	            mov rdi, qword [0x0400c351] 	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x400c351	    0x8b0500000000	            mov eax, dword [0x0400c357] 	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x400c357	      0xe922f7ffff	                           jmp 0x400ba7e	      8411	option.c	FUNCTION_49	ELSE_26	IF_42	CALL_34
0x400c35c	    0x448b0d000000	            mov r9d, dword [0x0400c363] 	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400c363	          0x4585c9	                           test r9d, r9d	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400c366	     0xf840cf7ffff	                            je 0x400ba78	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400c36c	      0xe800000000	                          call 0x400c371	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400c371	    0x488b3d000000	            mov rdi, qword [0x0400c378] 	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400c378	    0x8b0500000000	            mov eax, dword [0x0400c37e] 	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400c37e	      0xe9fbf6ffff	                           jmp 0x400ba7e	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400c383	    0x41c787541700	            mov dword [r15 + 0x1754], 0 	      8213	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x400c38e	      0xe98dfaffff	                           jmp 0x400be20	      8213	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x400c393	    0xc78754020000	              mov dword [rdi + 0x254], 0	      8671	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400c39d	      0xe800000000	                          call 0x400c3a2	      8672	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81	CALL_69
0x400c3a2	      0xe925fbffff	                           jmp 0x400becc	      8672	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81	CALL_69
0x400c3a7	    0xc70500000000	               mov dword [0x0400c3b1], 1	      8626	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400c3b1	      0xe800000000	                          call 0x400c3b6	      8627	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78	CALL_57
0x400c3b6	      0xe9dff9ffff	                           jmp 0x400bd9a	      8627	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78	CALL_57
0x400c3bb	    0xc78754020000	              mov dword [rdi + 0x254], 1	      8619	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400c3c5	      0xe800000000	                          call 0x400c3ca	      8620	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77	CALL_56
0x400c3ca	      0xe9bbf9ffff	                           jmp 0x400bd8a	      8620	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77	CALL_56
0x400c3cf	    0x448b05000000	            mov r8d, dword [0x0400c3d6] 	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x400c3d6	          0x4585c0	                           test r8d, r8d	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x400c3d9	     0xf856f040000	                           jne 0x400c84e	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x400c3df	    0xf60500000000	           test byte [0x0400c3e6], 0x10 	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c3e6	     0xf848cf6ffff	                            je 0x400ba78	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c3ec	            0x31ff	                            xor edi, edi	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c3ee	    0x4983bf781200	            cmp qword [r15 + 0x1278], 2 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c3f6	        0x400f94c7	                                sete dil	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c3fa	      0xe800000000	                          call 0x400c3ff	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c3ff	    0x488b3d000000	            mov rdi, qword [0x0400c406] 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c406	    0x8b0500000000	            mov eax, dword [0x0400c40c] 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c40c	      0xe96df6ffff	                           jmp 0x400ba7e	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400c411	          0x4585f6	                         test r14d, r14d	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400c414	            0x756e	                           jne 0x400c484	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400c416	    0x48c705000000	               mov qword [0x0400c421], 0	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400c421	      0xb800000000	                              mov eax, 0	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400c426	      0xe9d0fdffff	                           jmp 0x400c1fb	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400c42b	    0x8bb768020000	           mov esi, dword [rdi + 0x268] 	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x400c431	            0x85f6	                           test esi, esi	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x400c433	     0xf843ff6ffff	                            je 0x400ba78	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x400c439	      0xe800000000	                          call 0x400c43e	      8536	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_49
0x400c43e	          0x4885c0	                           test rax, rax	      8537	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	IF_67
0x400c441	     0xf8425f6ffff	                            je 0x400ba6c	      8537	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	IF_67
0x400c447	      0xba05000000	                              mov edx, 5	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c44c	          0x4889c6	                            mov rsi, rax	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c44f	            0x31ff	                            xor edi, edi	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c451	      0xe800000000	                          call 0x400c456	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c456	          0x4889c7	                            mov rdi, rax	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c459	      0xe800000000	                          call 0x400c45e	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c45e	    0x488b3d000000	            mov rdi, qword [0x0400c465] 	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c465	    0x8b0500000000	            mov eax, dword [0x0400c46b] 	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c46b	      0xe90ef6ffff	                           jmp 0x400ba7e	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400c470	          0x4c89ff	                            mov rdi, r15	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400c473	      0xe800000000	                          call 0x400c478	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400c478	    0x488b3d000000	            mov rdi, qword [0x0400c47f] 	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400c47f	      0xe9e7fbffff	                           jmp 0x400c06b	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400c484	    0x488b05000000	            mov rax, qword [0x0400c48b] 	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400c48b	      0xe96bfdffff	                           jmp 0x400c1fb	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400c490	          0x4585f6	                         test r14d, r14d	      8326	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400c493	     0xf84d3f5ffff	                            je 0x400ba6c	      8326	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400c499	    0x448b0d000000	            mov r9d, dword [0x0400c4a0] 	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400c4a0	    0xc70500000000	               mov dword [0x0400c4aa], 0	      8328	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400c4aa	    0xc70500000000	               mov dword [0x0400c4b4], 1	      8329	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400c4b4	          0x4585c9	                           test r9d, r9d	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400c4b7	            0x7416	                            je 0x400c4cf	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400c4b9	    0x448b05000000	            mov r8d, dword [0x0400c4c0] 	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400c4c0	          0x4585c0	                           test r8d, r8d	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400c4c3	            0x740a	                            je 0x400c4cf	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400c4c5	    0xc70500000000	               mov dword [0x0400c4cf], 1	      8331	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400c4cf	    0xc70500000000	               mov dword [0x0400c4d9], 0	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400c4d9	    0x488b3d000000	            mov rdi, qword [0x0400c4e0] 	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400c4e0	    0x8b0500000000	            mov eax, dword [0x0400c4e6] 	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400c4e6	      0xe993f5ffff	                           jmp 0x400ba7e	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400c4eb	    0x418bb7081400	          mov esi, dword [r15 + 0x1408] 	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400c4f2	          0x4489e2	                           mov edx, r12d	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400c4f5	          0x4489f7	                           mov edi, r14d	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400c4f8	      0xe800000000	                          call 0x400c4fd	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400c4fd	      0xe91ef9ffff	                           jmp 0x400be20	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400c502	    0x8b0d00000000	            mov ecx, dword [0x0400c508] 	     12079	option.c	FUNCTION_99	IF_1
0x400c508	            0x85c9	                           test ecx, ecx	     12079	option.c	FUNCTION_99	IF_1
0x400c50a	            0x89ce	                            mov esi, ecx	     12079	option.c	FUNCTION_99	IF_1
0x400c50c	     0xf84dc010000	                            je 0x400c6ee	     12079	option.c	FUNCTION_99	IF_1
0x400c512	    0x448b1d000000	           mov r11d, dword [0x0400c519] 	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400c519	          0x4585db	                         test r11d, r11d	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400c51c	     0xf8460030000	                            je 0x400c882	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400c522	    0x8b1500000000	            mov edx, dword [0x0400c528] 	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400c528	    0x488b05000000	            mov rax, qword [0x0400c52f] 	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400c52f	            0xeb40	                           jmp 0x400c571	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400c531	     0xf1f80000000	                         nop dword [rax]	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400c538	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	     12122	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400c543	    0x48c780d01500	            mov qword [rax + 0x15d0], 0 	     12123	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400c54e	    0x48c780781500	            mov qword [rax + 0x1578], 0 	     12124	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400c559	    0xc780ec130000	            mov dword [rax + 0x13ec], 0 	     12125	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400c563	    0xc78078140000	            mov dword [rax + 0x1478], 0 	     12126	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400c56d	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12120	option.c	FUNCTION_99	IF_1
0x400c571	          0x4885c0	                           test rax, rax	     12120	option.c	FUNCTION_99	IF_1
0x400c574	            0x75c2	                           jne 0x400c538	     12120	option.c	FUNCTION_99	IF_1
0x400c576	            0x85d2	                           test edx, edx	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x400c578	    0xc70500000000	               mov dword [0x0400c582], 0	     12130	option.c	FUNCTION_99	IF_1
0x400c582	    0xc70500000000	               mov dword [0x0400c58c], 0	     12131	option.c	FUNCTION_99	IF_1
0x400c58c	            0x740b	                            je 0x400c599	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x400c58e	      0xe800000000	                          call 0x400c593	     12134	option.c	FUNCTION_99	IF_1	CALL_1
0x400c593	    0x8b0d00000000	            mov ecx, dword [0x0400c599] 	     12134	option.c	FUNCTION_99	IF_1	CALL_1
0x400c599	    0xc70500000000	               mov dword [0x0400c5a3], 0	     12135	option.c	FUNCTION_99	IF_1
0x400c5a3	    0xc70500000000	               mov dword [0x0400c5ad], 0	     12138	option.c	FUNCTION_99	IF_1
0x400c5ad	            0x31c0	                            xor eax, eax	     12145	option.c	FUNCTION_99	IF_1
0x400c5af	    0xc70500000000	               mov dword [0x0400c5b9], 0	     12139	option.c	FUNCTION_99	IF_1
0x400c5b9	    0x48c705000000	               mov qword [0x0400c5c4], 0	     12142	option.c	FUNCTION_99	IF_1
0x400c5c4	    0x48c705000000	               mov qword [0x0400c5cf], 0	     12143	option.c	FUNCTION_99	IF_1
0x400c5cf	    0x48c705000000	               mov qword [0x0400c5da], 0	     12144	option.c	FUNCTION_99	IF_1
0x400c5da	    0xc70500000000	               mov dword [0x0400c5e4], 0	     12145	option.c	FUNCTION_99	IF_1
0x400c5e4	    0x890d00000000	            mov dword [0x0400c5ea], ecx 	     12183	option.c	FUNCTION_99
0x400c5ea	    0x488b3d000000	            mov rdi, qword [0x0400c5f1] 	     12183	option.c	FUNCTION_99
0x400c5f1	      0xe988f4ffff	                           jmp 0x400ba7e	     12183	option.c	FUNCTION_99
0x400c5f6	            0x31ff	                            xor edi, edi	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400c5f8	      0xe800000000	                          call 0x400c5fd	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400c5fd	    0x488b3d000000	            mov rdi, qword [0x0400c604] 	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400c604	    0x8b0500000000	            mov eax, dword [0x0400c60a] 	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400c60a	      0xe96ff4ffff	                           jmp 0x400ba7e	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400c60f	    0x488b3d000000	            mov rdi, qword [0x0400c616] 	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400c616	      0xbe73000000	                           mov esi, 0x73	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400c61b	      0xe800000000	                          call 0x400c620	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400c620	          0x4989c7	                            mov r15, rax	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400c623	    0x8b0500000000	            mov eax, dword [0x0400c629] 	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400c629	            0x85c0	                           test eax, eax	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400c62b	     0xf84e0010000	                            je 0x400c811	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400c631	          0x4d85ff	                           test r15, r15	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400c634	     0xf8532f4ffff	                           jne 0x400ba6c	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400c63a	    0x488b35000000	            mov rsi, qword [0x0400c641] 	       110	string3.h	FUNCTION_126	CALL_3
0x400c641	    0x488b3d000000	            mov rdi, qword [0x0400c648] 	       110	string3.h	FUNCTION_126	CALL_3
0x400c648	      0xe800000000	                          call 0x400c64d	       110	string3.h	FUNCTION_126	CALL_3
0x400c64d	    0x488b3d000000	            mov rdi, qword [0x0400c654] 	       148	string3.h	FUNCTION_130	CALL_3
0x400c654	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_130	CALL_3
0x400c659	      0xe800000000	                          call 0x400c65e	       148	string3.h	FUNCTION_130	CALL_3
0x400c65e	    0x488b15000000	            mov rdx, qword [0x0400c665] 	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c665	      0xbf00000000	                              mov edi, 0	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c66a	          0x4531c0	                            xor r8d, r8d	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c66d	      0xb901000000	                              mov ecx, 1	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c672	          0x83ceff	                      or esi, 0xffffffff	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c675	      0xe800000000	                          call 0x400c67a	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c67a	    0x488b3d000000	            mov rdi, qword [0x0400c681] 	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c681	    0x8b0500000000	            mov eax, dword [0x0400c687] 	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c687	      0xe9f2f3ffff	                           jmp 0x400ba7e	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c68c	         0xf1f4000	                         nop dword [rax]	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400c690	      0xe800000000	                          call 0x400c695	      8508	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_44
0x400c695	    0x488b3d000000	            mov rdi, qword [0x0400c69c] 	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400c69c	      0xe800000000	                          call 0x400c6a1	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400c6a1	            0x85c0	                           test eax, eax	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400c6a3	    0x488b3d000000	            mov rdi, qword [0x0400c6aa] 	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400c6aa	     0xf84c8f3ffff	                            je 0x400ba78	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400c6b0	      0xe800000000	                          call 0x400c6b5	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400c6b5	    0x488b3d000000	            mov rdi, qword [0x0400c6bc] 	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400c6bc	    0x8b0500000000	            mov eax, dword [0x0400c6c2] 	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400c6c2	      0xe9b7f3ffff	                           jmp 0x400ba7e	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400c6c7	          0x4585f6	                         test r14d, r14d	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400c6ca	     0xf85a8f3ffff	                           jne 0x400ba78	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400c6d0	    0x488b3d000000	            mov rdi, qword [0x0400c6d7] 	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400c6d7	      0xe800000000	                          call 0x400c6dc	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400c6dc	    0x488b3d000000	            mov rdi, qword [0x0400c6e3] 	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400c6e3	    0x8b0500000000	            mov eax, dword [0x0400c6e9] 	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400c6e9	      0xe990f3ffff	                           jmp 0x400ba7e	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400c6ee	    0x8b0d00000000	            mov ecx, dword [0x0400c6f4] 	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c6f4	    0x8b0500000000	            mov eax, dword [0x0400c6fa] 	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c6fa	            0x85c9	                           test ecx, ecx	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c6fc	     0xf84e2feffff	                            je 0x400c5e4	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c702	    0x488b05000000	            mov rax, qword [0x0400c709] 	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c709	          0x4885c0	                           test rax, rax	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c70c	            0x744b	                            je 0x400c759	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c70e	    0x488b90c81500	          mov rdx, qword [rax + 0x15c8] 	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c715	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c71c	    0x488b90e01500	          mov rdx, qword [rax + 0x15e0] 	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c723	    0x488990d01500	          mov qword [rax + 0x15d0], rdx 	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c72a	    0x488b90801500	          mov rdx, qword [rax + 0x1580] 	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c731	    0x488990781500	          mov qword [rax + 0x1578], rdx 	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c738	    0x8b90f0130000	          mov edx, dword [rax + 0x13f0] 	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c73e	    0x8990ec130000	          mov dword [rax + 0x13ec], edx 	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c744	    0x8b9080140000	          mov edx, dword [rax + 0x1480] 	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c74a	    0x899078140000	          mov dword [rax + 0x1478], edx 	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400c750	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c754	          0x4885c0	                           test rax, rax	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c757	            0x75b5	                           jne 0x400c70e	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c759	    0x8b0500000000	            mov eax, dword [0x0400c75f] 	     12164	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c75f	    0x890500000000	            mov dword [0x0400c765], eax 	     12164	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c765	    0x8b0500000000	            mov eax, dword [0x0400c76b] 	     12165	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c76b	    0x890500000000	            mov dword [0x0400c771], eax 	     12165	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c771	    0x8b0500000000	            mov eax, dword [0x0400c777] 	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400c777	    0x390500000000	            cmp dword [0x0400c77d], eax 	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400c77d	            0x740b	                            je 0x400c78a	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400c77f	      0xe800000000	                          call 0x400c784	     12168	option.c	FUNCTION_99	ELSE_1	IF_4	CALL_2
0x400c784	    0x8b3500000000	            mov esi, dword [0x0400c78a] 	     12168	option.c	FUNCTION_99	ELSE_1	IF_4	CALL_2
0x400c78a	    0x8b1500000000	            mov edx, dword [0x0400c790] 	     12176	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c790	    0x8b0500000000	            mov eax, dword [0x0400c796] 	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c796	            0x89f1	                            mov ecx, esi	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c798	    0x891500000000	            mov dword [0x0400c79e], edx 	     12176	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c79e	    0x8b1500000000	            mov edx, dword [0x0400c7a4] 	     12177	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7a4	    0x890500000000	            mov dword [0x0400c7aa], eax 	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7aa	    0x8b0500000000	            mov eax, dword [0x0400c7b0] 	     12172	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7b0	    0x891500000000	            mov dword [0x0400c7b6], edx 	     12177	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7b6	    0x488b15000000	            mov rdx, qword [0x0400c7bd] 	     12178	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7bd	    0x890500000000	            mov dword [0x0400c7c3], eax 	     12172	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7c3	    0x8b0500000000	            mov eax, dword [0x0400c7c9] 	     12173	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7c9	    0x488915000000	            mov qword [0x0400c7d0], rdx 	     12178	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7d0	    0x488b15000000	            mov rdx, qword [0x0400c7d7] 	     12179	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7d7	    0x890500000000	            mov dword [0x0400c7dd], eax 	     12173	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7dd	    0x488915000000	            mov qword [0x0400c7e4], rdx 	     12179	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7e4	    0x488b15000000	            mov rdx, qword [0x0400c7eb] 	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7eb	    0x488915000000	            mov qword [0x0400c7f2], rdx 	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7f2	      0xe9edfdffff	                           jmp 0x400c5e4	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x400c7f7	          0x4c89ff	                            mov rdi, r15	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400c7fa	      0xe800000000	                          call 0x400c7ff	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400c7ff	    0x488b3d000000	            mov rdi, qword [0x0400c806] 	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400c806	    0x8b0500000000	            mov eax, dword [0x0400c80c] 	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400c80c	      0xe96df2ffff	                           jmp 0x400ba7e	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400c811	          0x4d85ff	                           test r15, r15	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400c814	     0xf8452f2ffff	                            je 0x400ba6c	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400c81a	        0x498d7701	                      lea rsi, [r15 + 1]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400c81e	          0x4889f7	                            mov rdi, rsi	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400c821	      0x4889742408	                mov qword [rsp + 8], rsi	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400c826	      0xe800000000	                          call 0x400c82b	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400c82b	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_121	CALL_3
0x400c830	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_121	CALL_3
0x400c834	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_121	CALL_3
0x400c837	      0xe800000000	                          call 0x400c83c	        59	string3.h	FUNCTION_121	CALL_3
0x400c83c	    0x488b3d000000	            mov rdi, qword [0x0400c843] 	        59	string3.h	FUNCTION_121	CALL_3
0x400c843	    0x8b0500000000	            mov eax, dword [0x0400c849] 	        59	string3.h	FUNCTION_121	CALL_3
0x400c849	      0xe930f2ffff	                           jmp 0x400ba7e	        59	string3.h	FUNCTION_121	CALL_3
0x400c84e	            0x31ff	                            xor edi, edi	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400c850	      0xe800000000	                          call 0x400c855	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400c855	    0x488b3d000000	            mov rdi, qword [0x0400c85c] 	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400c85c	    0x8b0500000000	            mov eax, dword [0x0400c862] 	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400c862	      0xe917f2ffff	                           jmp 0x400ba7e	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400c867	    0x8b0500000000	            mov eax, dword [0x0400c86d] 	      8555	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400c86d	    0xc70500000000	               mov dword [0x0400c877], 0	      8556	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400c877	    0x890500000000	            mov dword [0x0400c87d], eax 	      8555	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400c87d	      0xe9e5f1ffff	                           jmp 0x400ba67	      8555	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400c882	    0x488b05000000	            mov rax, qword [0x0400c889] 	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400c889	          0x4885c0	                           test rax, rax	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400c88c	          0x4889c2	                            mov rdx, rax	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400c88f	            0x744b	                            je 0x400c8dc	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400c891	    0x488bb2b81500	          mov rsi, qword [rdx + 0x15b8] 	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c898	    0x4889b2c81500	          mov qword [rdx + 0x15c8], rsi 	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c89f	    0x488bb2d01500	          mov rsi, qword [rdx + 0x15d0] 	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c8a6	    0x4889b2e01500	          mov qword [rdx + 0x15e0], rsi 	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c8ad	    0x488bb2781500	          mov rsi, qword [rdx + 0x1578] 	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c8b4	    0x4889b2801500	          mov qword [rdx + 0x1580], rsi 	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c8bb	    0x8bb2ec130000	          mov esi, dword [rdx + 0x13ec] 	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c8c1	    0x89b2f0130000	          mov dword [rdx + 0x13f0], esi 	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c8c7	    0x8bb278140000	          mov esi, dword [rdx + 0x1478] 	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c8cd	    0x89b280140000	          mov dword [rdx + 0x1480], esi 	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400c8d3	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400c8d7	          0x4885d2	                           test rdx, rdx	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400c8da	            0x75b5	                           jne 0x400c891	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400c8dc	    0x8b3500000000	            mov esi, dword [0x0400c8e2] 	     12104	option.c	FUNCTION_99	IF_1	IF_2
0x400c8e2	    0x8b1500000000	            mov edx, dword [0x0400c8e8] 	     12098	option.c	FUNCTION_99	IF_1	IF_2
0x400c8e8	    0x893500000000	            mov dword [0x0400c8ee], esi 	     12104	option.c	FUNCTION_99	IF_1	IF_2
0x400c8ee	    0x8b3500000000	            mov esi, dword [0x0400c8f4] 	     12105	option.c	FUNCTION_99	IF_1	IF_2
0x400c8f4	    0x891500000000	            mov dword [0x0400c8fa], edx 	     12098	option.c	FUNCTION_99	IF_1	IF_2
0x400c8fa	    0x8b1500000000	            mov edx, dword [0x0400c900] 	     12099	option.c	FUNCTION_99	IF_1	IF_2
0x400c900	    0x893500000000	            mov dword [0x0400c906], esi 	     12105	option.c	FUNCTION_99	IF_1	IF_2
0x400c906	    0x8b3500000000	            mov esi, dword [0x0400c90c] 	     12108	option.c	FUNCTION_99	IF_1	IF_2
0x400c90c	    0x891500000000	            mov dword [0x0400c912], edx 	     12099	option.c	FUNCTION_99	IF_1	IF_2
0x400c912	    0x8b1500000000	            mov edx, dword [0x0400c918] 	     12101	option.c	FUNCTION_99	IF_1	IF_2
0x400c918	    0x893500000000	            mov dword [0x0400c91e], esi 	     12108	option.c	FUNCTION_99	IF_1	IF_2
0x400c91e	    0x8b3500000000	            mov esi, dword [0x0400c924] 	     12109	option.c	FUNCTION_99	IF_1	IF_2
0x400c924	    0x891500000000	            mov dword [0x0400c92a], edx 	     12101	option.c	FUNCTION_99	IF_1	IF_2
0x400c92a	    0x893500000000	            mov dword [0x0400c930], esi 	     12109	option.c	FUNCTION_99	IF_1	IF_2
0x400c930	    0x488b35000000	            mov rsi, qword [0x0400c937] 	     12110	option.c	FUNCTION_99	IF_1	IF_2
0x400c937	    0x488935000000	            mov qword [0x0400c93e], rsi 	     12110	option.c	FUNCTION_99	IF_1	IF_2
0x400c93e	    0x488b35000000	            mov rsi, qword [0x0400c945] 	     12111	option.c	FUNCTION_99	IF_1	IF_2
0x400c945	    0x488935000000	            mov qword [0x0400c94c], rsi 	     12111	option.c	FUNCTION_99	IF_1	IF_2
0x400c94c	    0x488b35000000	            mov rsi, qword [0x0400c953] 	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x400c953	    0x488935000000	            mov qword [0x0400c95a], rsi 	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x400c95a	      0xe912fcffff	                           jmp 0x400c571	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x400c95f	      0xe800000000	                          call 0x400c964	      8749	option.c	FUNCTION_49
get_varp_scope	WHILE,0:FOR,0:ELSE,0:SWITCH,1:CALL,3:IF,3:functions,0:DO,0	144
0x4002460	        0x40f6c602	                             test sil, 2	     10532	option.c	FUNCTION_76	IF_1
0x4002464	            0x741a	                            je 0x4002480	     10532	option.c	FUNCTION_76	IF_1
0x4002466	          0x8b4720	            mov eax, dword [rdi + 0x20] 	     10532	option.c	FUNCTION_76	IF_1
0x4002469	            0x85c0	                           test eax, eax	     10532	option.c	FUNCTION_76	IF_1
0x400246b	     0xf847f000000	                            je 0x40024f0	     10532	option.c	FUNCTION_76	IF_1
0x4002471	        0x488b4718	            mov rax, qword [rdi + 0x18] 	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x4002475	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x4002479	     0xf8489010000	                            je 0x4002608	     10534	option.c	FUNCTION_76	IF_1	IF_2
0x400247f	              0xc3	                                     ret	     10583	option.c	FUNCTION_76
0x4002480	          0x83e604	                              and esi, 4	     10538	option.c	FUNCTION_76	IF_3
0x4002483	            0x746b	                            je 0x40024f0	     10538	option.c	FUNCTION_76	IF_3
0x4002485	          0x8b5720	            mov edx, dword [rdi + 0x20] 	     10538	option.c	FUNCTION_76	IF_3
0x4002488	          0xf6c610	                           test dh, 0x10	     10538	option.c	FUNCTION_76	IF_3
0x400248b	            0x7463	                            je 0x40024f0	     10538	option.c	FUNCTION_76	IF_3
0x400248d	    0x81fa18500000	                         cmp edx, 0x5018	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002493	     0xf8457020000	                            je 0x40026f0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002499	            0x7765	                            ja 0x4002500	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400249b	    0x81fa06500000	                         cmp edx, 0x5006	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024a1	     0xf8469020000	                            je 0x4002710	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024a7	     0xf869b000000	                           jbe 0x4002548	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024ad	    0x81fa14500000	                         cmp edx, 0x5014	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024b3	    0x488b05000000	            mov rax, qword [0x040024ba] 	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024ba	     0xf8440020000	                            je 0x4002700	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024c0	     0xf871a010000	                            ja 0x40025e0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024c6	    0x81fa07500000	                         cmp edx, 0x5007	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024cc	     0xf845e020000	                            je 0x4002730	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024d2	    0x480548170000	                         add rax, 0x1748	     10566	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024d8	    0x81fa10500000	                         cmp edx, 0x5010	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024de	     0xf859b000000	                           jne 0x400257f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40024e4	            0xf3c3	                                     ret	     10583	option.c	FUNCTION_76
0x40024e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10583	option.c	FUNCTION_76
0x40024f0	        0x488d7720	                   lea rsi, [rdi + 0x20]	     10583	option.c	FUNCTION_76
0x40024f4	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	     10582	option.c	FUNCTION_76	CALL_3
0x40024f8	      0xe933f0ffff	                 jmp sym.get_varp.isra.1	     10582	option.c	FUNCTION_76	CALL_3
0x40024fd	           0xf1f00	                         nop dword [rax]	     10582	option.c	FUNCTION_76	CALL_3
0x4002500	    0x81fa30500000	                         cmp edx, 0x5030	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002506	    0x488b05000000	            mov rax, qword [0x0400250d] 	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400250d	     0xf849d010000	                            je 0x40026b0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002513	            0x7673	                           jbe 0x4002588	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002515	    0x81fa47500000	                         cmp edx, 0x5047	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400251b	     0xf847f010000	                            je 0x40026a0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002521	     0xf8799000000	                            ja 0x40025c0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002527	    0x81fa31500000	                         cmp edx, 0x5031	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400252d	     0xf84ad010000	                            je 0x40026e0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002533	    0x480510160000	                         add rax, 0x1610	     10550	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002539	    0x81fa38500000	                         cmp edx, 0x5038	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400253f	            0x753e	                           jne 0x400257f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002541	            0xf3c3	                                     ret	     10583	option.c	FUNCTION_76
0x4002543	       0xf1f440000	                   nop dword [rax + rax]	     10583	option.c	FUNCTION_76
0x4002548	    0x81fa01500000	                         cmp edx, 0x5001	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400254e	     0xf84ec000000	                            je 0x4002640	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002554	     0xf86f6000000	                           jbe 0x4002650	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400255a	    0x81fa03500000	                         cmp edx, 0x5003	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002560	    0x488b05000000	            mov rax, qword [0x04002567] 	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002567	     0xf8463010000	                            je 0x40026d0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400256d	    0x480500160000	                         add rax, 0x1600	     10544	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002573	    0x81fa05500000	                         cmp edx, 0x5005	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002579	     0xf8400ffffff	                            je 0x400247f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400257f	            0x31c0	                            xor eax, eax	     10580	option.c	FUNCTION_76	IF_3
0x4002581	              0xc3	                                     ret	     10580	option.c	FUNCTION_76	IF_3
0x4002582	    0x660f1f440000	                    nop word [rax + rax]	     10580	option.c	FUNCTION_76	IF_3
0x4002588	    0x81fa1e500000	                         cmp edx, 0x501e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400258e	     0xf849c000000	                            je 0x4002630	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002594	     0xf86d6000000	                           jbe 0x4002670	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400259a	    0x81fa1f500000	                         cmp edx, 0x501f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025a0	     0xf84ea000000	                            je 0x4002690	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025a6	    0x480518150000	                         add rax, 0x1518	     10549	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025ac	    0x81fa2e500000	                         cmp edx, 0x502e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025b2	     0xf84c7feffff	                            je 0x400247f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025b8	            0xebc5	                           jmp 0x400257f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025ba	    0x660f1f440000	                    nop word [rax + rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025c0	    0x81fa48500000	                         cmp edx, 0x5048	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025c6	     0xf8454010000	                            je 0x4002720	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025cc	    0x480548160000	                         add rax, 0x1648	     10571	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025d2	    0x81fa4d500000	                         cmp edx, 0x504d	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025d8	     0xf84a1feffff	                            je 0x400247f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025de	            0xeb9f	                           jmp 0x400257f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025e0	    0x81fa15500000	                         cmp edx, 0x5015	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025e6	     0xf84d4000000	                            je 0x40026c0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025ec	    0x4805c0140000	                         add rax, 0x14c0	     10555	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025f2	    0x81fa17500000	                         cmp edx, 0x5017	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025f8	     0xf8481feffff	                            je 0x400247f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40025fe	      0xe97cffffff	                           jmp 0x400257f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002603	       0xf1f440000	                   nop dword [rax + rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002608	        0x488d7720	                   lea rsi, [rdi + 0x20]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400260c	        0x4883ec08	                              sub rsp, 8	     10531	option.c	FUNCTION_76
0x4002610	          0x4889c7	                            mov rdi, rax	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x4002613	      0xe818efffff	                call sym.get_varp.isra.1	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x4002618	        0x4883c408	                              add rsp, 8	     10583	option.c	FUNCTION_76
0x400261c	    0x4805b8010000	                          add rax, 0x1b8	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x4002622	      0xe958feffff	                           jmp 0x400247f	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x4002627	    0x660f1f840000	                    nop word [rax + rax]	     10535	option.c	FUNCTION_76	IF_1	CALL_2
0x4002630	    0x4805f8140000	                         add rax, 0x14f8	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002636	              0xc3	                                     ret	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002637	    0x660f1f840000	                    nop word [rax + rax]	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002640	    0x488b05000000	            mov rax, qword [0x04002647] 	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002647	    0x480518160000	                         add rax, 0x1618	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400264d	              0xc3	                                     ret	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400264e	            0x6690	                                     nop	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002650	    0x488b05000000	            mov rax, qword [0x04002657] 	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002657	    0x480580020000	                          add rax, 0x280	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400265d	    0x81fa21300000	                         cmp edx, 0x3021	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002663	     0xf8416feffff	                            je 0x400247f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002669	      0xe911ffffff	                           jmp 0x400257f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400266e	            0x6690	                                     nop	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002670	    0x480508160000	                         add rax, 0x1608	     10548	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002676	    0x81fa1b500000	                         cmp edx, 0x501b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400267c	     0xf84fdfdffff	                            je 0x400247f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002682	      0xe9f8feffff	                           jmp 0x400257f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002687	    0x660f1f840000	                    nop word [rax + rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002690	    0x480538170000	                         add rax, 0x1738	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002696	              0xc3	                                     ret	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002697	    0x660f1f840000	                    nop word [rax + rax]	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026a0	    0x480520160000	                         add rax, 0x1620	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026a6	              0xc3	                                     ret	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026a7	    0x660f1f840000	                    nop word [rax + rax]	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026b0	    0x480558160000	                         add rax, 0x1658	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026b6	              0xc3	                                     ret	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026b7	    0x660f1f840000	                    nop word [rax + rax]	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026c0	    0x480540160000	                         add rax, 0x1640	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026c6	              0xc3	                                     ret	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026c7	    0x660f1f840000	                    nop word [rax + rax]	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026d0	    0x4805f8130000	                         add rax, 0x13f8	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026d6	              0xc3	                                     ret	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026d7	    0x660f1f840000	                    nop word [rax + rax]	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026e0	    0x480528150000	                         add rax, 0x1528	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026e6	              0xc3	                                     ret	     10583	option.c	FUNCTION_76
0x40026e7	    0x660f1f840000	                    nop word [rax + rax]	     10583	option.c	FUNCTION_76
0x40026f0	    0x488b05000000	            mov rax, qword [0x040026f7] 	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026f7	    0x4805c8140000	                         add rax, 0x14c8	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026fd	              0xc3	                                     ret	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40026fe	            0x6690	                                     nop	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002700	    0x480538160000	                         add rax, 0x1638	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002706	              0xc3	                                     ret	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002707	    0x660f1f840000	                    nop word [rax + rax]	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002710	    0x488b05000000	            mov rax, qword [0x04002717] 	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002717	    0x4805f0150000	                         add rax, 0x15f0	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400271d	              0xc3	                                     ret	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400271e	            0x6690	                                     nop	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002720	    0x480528160000	                         add rax, 0x1628	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002726	              0xc3	                                     ret	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002727	    0x660f1f840000	                    nop word [rax + rax]	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002730	    0x4805f8150000	                         add rax, 0x15f8	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4002736	              0xc3	                                     ret	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
do_set	WHILE,6:FOR,4:ELSE,45:SWITCH,1:CALL,129:IF,120:functions,0:DO,0	1570
0x400c970	            0x4157	                                push r15	      4366	option.c	FUNCTION_16
0x400c972	            0x4156	                                push r14	      4366	option.c	FUNCTION_16
0x400c974	            0x4155	                                push r13	      4366	option.c	FUNCTION_16
0x400c976	            0x4154	                                push r12	      4366	option.c	FUNCTION_16
0x400c978	              0x55	                                push rbp	      4366	option.c	FUNCTION_16
0x400c979	              0x53	                                push rbx	      4366	option.c	FUNCTION_16
0x400c97a	    0x4881ecf80000	                           sub rsp, 0xf8	      4366	option.c	FUNCTION_16
0x400c981	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      4366	option.c	FUNCTION_16
0x400c986	        0x89742408	                mov dword [rsp + 8], esi	      4366	option.c	FUNCTION_16
0x400c98a	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      4366	option.c	FUNCTION_16
0x400c993	    0x48899c24e800	             mov qword [rsp + 0xe8], rbx	      4366	option.c	FUNCTION_16
0x400c99b	            0x31db	                            xor ebx, ebx	      4366	option.c	FUNCTION_16
0x400c99d	          0x803f00	                       cmp byte [rdi], 0	      4387	option.c	FUNCTION_16	IF_1
0x400c9a0	     0xf845a0b0000	                            je 0x400d500	      4387	option.c	FUNCTION_16	IF_1
0x400c9a6	        0x8b442408	                mov eax, dword [rsp + 8]	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9aa	          0x4989fe	                            mov r14, rdi	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9ad	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9b5	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9bd	          0x4531ff	                          xor r15d, r15d	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9c0	          0xc1e805	                              shr eax, 5	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9c3	          0x83e001	                              and eax, 1	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9c6	        0x8844245b	               mov byte [rsp + 0x5b], al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9ca	            0xeb6a	                           jmp 0x400ca36	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400c9cc	      0xe800000000	                          call 0x400c9d1	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400c9d1	      0x410fb65603	               movzx edx, byte [r14 + 3]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400c9d6	          0x488b00	                    mov rax, qword [rax]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400c9d9	      0xf644500104	         test byte [rax + rdx*2 + 1], 4 	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400c9de	            0x7567	                           jne 0x400ca47	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400c9e0	      0xf644240808	                  test byte [rsp + 8], 8	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400c9e5	            0x757c	                           jne 0x400ca63	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400c9e7	        0x498d4603	                      lea rax, [r14 + 3]	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x400c9eb	      0x4889442468	             mov qword [rsp + 0x68], rax	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x400c9f0	      0x41807e0326	                cmp byte [r14 + 3], 0x26	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400c9f5	     0xf841d070000	                            je 0x400d118	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400c9fb	        0x8b742408	                mov esi, dword [rsp + 8]	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x400c9ff	      0xbf01000000	                              mov edi, 1	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x400ca04	      0xe8a760ffff	                    call sym.showoptions	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x400ca09	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4418	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x400ca0e	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x400ca16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x400ca20	      0xe800000000	                          call 0x400ca25	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400ca25	      0x4889442468	             mov qword [rsp + 0x68], rax	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400ca2a	          0x803800	                       cmp byte [rax], 0	      4394	option.c	FUNCTION_16	WHILE_1
0x400ca2d	          0x4989c6	                            mov r14, rax	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400ca30	     0xf847b070000	                            je 0x400d1b1	      4394	option.c	FUNCTION_16	WHILE_1
0x400ca36	      0xb903000000	                              mov ecx, 3	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400ca3b	          0x4c89f6	                            mov rsi, r14	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400ca3e	      0xbf00000000	                              mov edi, 0	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400ca43	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400ca45	            0x7485	                            je 0x400c9cc	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400ca47	      0xbf00000000	                              mov edi, 0	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400ca4c	      0xb907000000	                              mov ecx, 7	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400ca51	          0x4c89f6	                            mov rsi, r14	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400ca54	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400ca56	            0x750b	                           jne 0x400ca63	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400ca58	      0xf644240808	                  test byte [rsp + 8], 8	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400ca5d	     0xf841a040000	                            je 0x400ce7d	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400ca63	      0xbf00000000	                              mov edi, 0	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca68	      0xb902000000	                              mov ecx, 2	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca6d	          0x4c89f6	                            mov rsi, r14	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca70	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca72	     0xf8598020000	                           jne 0x400cd10	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca78	      0xbf00000000	                              mov edi, 0	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca7d	      0xb906000000	                              mov ecx, 6	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca82	          0x4c89f6	                            mov rsi, r14	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca85	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca87	     0xf8483020000	                            je 0x400cd10	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400ca8d	        0x498d7e02	                      lea rdi, [r14 + 2]	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400ca91	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4434	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400ca99	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400ca9e	           0xfb607	                   movzx eax, byte [rdi]	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400caa1	            0x3c3c	                            cmp al, 0x3c	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400caa3	     0xf8494020000	                            je 0x400cd3d	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400caa9	            0x3c74	                            cmp al, 0x74	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400caab	     0xf8427010000	                            je 0x400cbd8	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cab1	            0x31f6	                            xor esi, esi	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cab3	            0xeb0b	                           jmp 0x400cac0	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cab5	           0xf1f00	                         nop dword [rax]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cab8	        0x4883c601	                              add rsi, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cabc	        0x4883c701	                              add rdi, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cac0	        0x440fb62f	                  movzx r13d, byte [rdi]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cac4	          0x4189f4	                           mov r12d, esi	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cac7	          0x4889f5	                            mov rbp, rsi	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400caca	          0x4889f8	                            mov rax, rdi	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cacd	          0x4489ea	                           mov edx, r13d	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cad0	          0x83e2df	                     and edx, 0xffffffdf	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cad3	          0x83ea41	                           sub edx, 0x41	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cad6	          0x80fa19	                            cmp dl, 0x19	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cad9	            0x76dd	                           jbe 0x400cab8	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cadb	        0x410fb6d5	                         movzx edx, r13b	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cadf	          0x83ea30	                           sub edx, 0x30	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cae2	          0x83fa09	                              cmp edx, 9	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cae5	            0x76d1	                           jbe 0x400cab8	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400cae7	        0x4180fd5f	                          cmp r13b, 0x5f	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400caeb	            0x74cb	                            je 0x400cab8	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400caed	          0xc60000	                       mov byte [rax], 0	      4482	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400caf0	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400caf5	      0xe8b639ffff	                     call sym.findoption	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400cafa	          0x4863d8	                         movsxd rbx, eax	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400cafd	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400cb02	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400cb05	        0x44882c28	              mov byte [rax + rbp], r13b	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400cb09	     0xf849c050000	                            je 0x400d0ab	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400cb0f	    0x41b901000000	                              mov r9d, 1	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400cb15	          0x4531d2	                          xor r10d, r10d	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400cb18	            0x31c0	                            xor eax, eax	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cb1a	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cb1f	      0x440fb6042e	             movzx r8d, byte [rsi + rbp]	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cb24	          0x4889f7	                            mov rdi, rsi	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cb27	        0x4180f809	                              cmp r8b, 9	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb2b	            0x740a	                            je 0x400cb37	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb2d	        0x4180f820	                           cmp r8b, 0x20	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb31	     0xf858f050000	                           jne 0x400d0c6	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb37	          0x4963ec	                        movsxd rbp, r12d	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb3a	        0x4883c501	                              add rbp, 1	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb3e	            0xeb03	                           jmp 0x400cb43	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb40	          0x4889d5	                            mov rbp, rdx	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb43	         0xfb60c2e	             movzx ecx, byte [rsi + rbp]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb47	        0x4183c401	                             add r12d, 1	      4494	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4
0x400cb4b	        0x488d5501	                      lea rdx, [rbp + 1]	      4494	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4
0x400cb4f	          0x80f920	                            cmp cl, 0x20	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb52	            0x74ec	                            je 0x400cb40	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb54	          0x80f909	                               cmp cl, 9	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb57	            0x74e7	                            je 0x400cb40	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400cb59	            0x84c9	                             test cl, cl	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400cb5b	            0x740b	                            je 0x400cb68	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400cb5d	      0x807c2e013d	         cmp byte [rsi + rbp + 1], 0x3d 	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400cb62	     0xf8407050000	                            je 0x400d06f	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400cb68	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cb70	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cb78	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cb80	          0x4584c9	                           test r9b, r9b	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400cb83	     0xf8457020000	                            je 0x400cde0	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400cb89	          0x4584d2	                         test r10b, r10b	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400cb8c	    0x41bd00000000	                             mov r13d, 0	      4521	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18	CALL_21
0x400cb92	     0xf8448020000	                            je 0x400cde0	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400cb98	    0xc74424740000	               mov dword [rsp + 0x74], 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cba0	           0xfb607	                   movzx eax, byte [rdi]	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cba3	            0xeb06	                           jmp 0x400cbab	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cba5	           0xf1f00	                         nop dword [rax]	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cba8	          0x4889d7	                            mov rdi, rdx	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x400cbab	            0xa8df	                           test al, 0xdf	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400cbad	            0x7461	                            je 0x400cc10	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400cbaf	            0x3c09	                               cmp al, 9	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400cbb1	            0x745d	                            je 0x400cc10	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400cbb3	        0x488d5701	                      lea rdx, [rdi + 1]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbb7	      0x4889542468	             mov qword [rsp + 0x68], rdx	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbbc	          0x803f5c	                    cmp byte [rdi], 0x5c	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbbf	         0xfb64701	               movzx eax, byte [rdi + 1]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbc3	            0x75e3	                           jne 0x400cba8	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbc5	            0x84c0	                             test al, al	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbc7	            0x74df	                            je 0x400cba8	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbc9	        0x488d5702	                      lea rdx, [rdi + 2]	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbcd	      0x4889542468	             mov qword [rsp + 0x68], rdx	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbd2	         0xfb64702	               movzx eax, byte [rdi + 2]	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbd6	            0xebd0	                           jmp 0x400cba8	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400cbd8	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cbdc	     0xf85cffeffff	                           jne 0x400cab1	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cbe2	        0x807f0200	                   cmp byte [rdi + 2], 0	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cbe6	     0xf84c5feffff	                            je 0x400cab1	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cbec	        0x807f0300	                   cmp byte [rdi + 3], 0	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cbf0	     0xf84bbfeffff	                            je 0x400cab1	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cbf6	        0x488d4704	                      lea rax, [rdi + 4]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cbfa	      0x440fb66f04	              movzx r13d, byte [rdi + 4]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cbff	      0xbd04000000	                              mov ebp, 4	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cc04	    0x41bc04000000	                             mov r12d, 4	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cc0a	      0xe9defeffff	                           jmp 0x400caed	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cc0f	              0x90	                                     nop	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400cc10	      0xe800000000	                          call 0x400cc15	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400cc15	      0x4889442468	             mov qword [rsp + 0x68], rax	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400cc1a	          0x80383d	                    cmp byte [rax], 0x3d	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x400cc1d	          0x4889c7	                            mov rdi, rax	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400cc20	            0x7514	                           jne 0x400cc36	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x400cc22	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cc26	          0x83c001	                              add eax, 1	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cc29	          0x83f801	                              cmp eax, 1	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cc2c	        0x89442474	             mov dword [rsp + 0x74], eax	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cc30	     0xf8e6affffff	                           jle 0x400cba0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400cc36	          0x4d85ed	                           test r13, r13	      5251	option.c	FUNCTION_16	WHILE_1	IF_118
0x400cc39	     0xf84e1fdffff	                            je 0x400ca20	      5251	option.c	FUNCTION_16	WHILE_1	IF_118
0x400cc3f	            0x31ff	                            xor edi, edi	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400cc41	      0xba05000000	                              mov edx, 5	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400cc46	          0x4c89ee	                            mov rsi, r13	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400cc49	      0xe800000000	                          call 0x400cc4e	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400cc4e	    0x488b3d000000	            mov rdi, qword [0x0400cc55] 	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400cc55	      0xba00040000	                          mov edx, 0x400	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400cc5a	          0x4889c6	                            mov rsi, rax	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400cc5d	      0xe800000000	                          call 0x400cc62	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400cc62	    0x488b1d000000	            mov rbx, qword [0x0400cc69] 	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400cc69	          0x4889df	                            mov rdi, rbx	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400cc6c	      0xe800000000	                          call 0x400cc71	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400cc71	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cc76	          0x83c002	                              add eax, 2	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400cc79	        0x89442474	             mov dword [rsp + 0x74], eax	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400cc7d	            0x4898	                                    cdqe	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cc7f	          0x4c29f2	                            sub rdx, r14	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cc82	          0x4801d0	                            add rax, rdx	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cc85	    0x483d00040000	                          cmp rax, 0x400	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cc8b	            0x7f54	                            jg 0x400cce1	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cc8d	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_130	CALL_3
0x400cc90	      0xe800000000	                          call 0x400cc95	       148	string3.h	FUNCTION_130	CALL_3
0x400cc95	    0x41ba3a200000	                        mov r10d, 0x203a	       148	string3.h	FUNCTION_130	CALL_3
0x400cc9b	          0x4801c3	                            add rbx, rax	       148	string3.h	FUNCTION_130	CALL_3
0x400cc9e	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_121	CALL_3
0x400cca1	        0x66448913	                    mov word [rbx], r10w	       148	string3.h	FUNCTION_130	CALL_3
0x400cca5	        0xc6430200	                   mov byte [rbx + 2], 0	       148	string3.h	FUNCTION_130	CALL_3
0x400cca9	      0x48637c2474	         movsxd rdi, dword [rsp + 0x74] 	        59	string3.h	FUNCTION_121	CALL_3
0x400ccae	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	        59	string3.h	FUNCTION_121	CALL_3
0x400ccb3	    0x48033d000000	             add rdi, qword [0x0400ccba]	        59	string3.h	FUNCTION_121	CALL_3
0x400ccba	          0x4c29f2	                            sub rdx, r14	        59	string3.h	FUNCTION_121	CALL_3
0x400ccbd	      0xe800000000	                          call 0x400ccc2	        59	string3.h	FUNCTION_121	CALL_3
0x400ccc2	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400ccc7	      0x4863542474	         movsxd rdx, dword [rsp + 0x74] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cccc	          0x4c29f0	                            sub rax, r14	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cccf	    0x480305000000	             add rax, qword [0x0400ccd6]	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400ccd6	        0xc6041000	                 mov byte [rax + rdx], 0	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400ccda	    0x488b1d000000	            mov rbx, qword [0x0400cce1] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400cce1	      0xbe01040000	                          mov esi, 0x401	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400cce6	          0x4889df	                            mov rdi, rbx	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400cce9	      0xe800000000	                          call 0x400ccee	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400ccee	    0x488b3d000000	            mov rdi, qword [0x0400ccf5] 	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x400ccf5	    0x830500000000	               add dword [0x0400ccfc], 1	      5265	option.c	FUNCTION_16	WHILE_1	IF_118
0x400ccfc	      0xe800000000	                          call 0x400cd01	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x400cd01	    0x832d00000000	               sub dword [0x0400cd08], 1	      5267	option.c	FUNCTION_16	WHILE_1	IF_118
0x400cd08	            0x31c0	                            xor eax, eax	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400cd0a	      0xe9b3040000	                           jmp 0x400d1c2	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400cd0f	              0x90	                                     nop	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400cd10	      0xbf00000000	                              mov edi, 0	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400cd15	      0xb903000000	                              mov ecx, 3	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400cd1a	          0x4c89f6	                            mov rsi, r14	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400cd1d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400cd1f	     0xf8442010000	                            je 0x400ce67	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400cd25	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400cd2a	    0xc74424180100	               mov dword [rsp + 0x18], 1	      4431	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cd32	           0xfb607	                   movzx eax, byte [rdi]	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400cd35	            0x3c3c	                            cmp al, 0x3c	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400cd37	     0xf856cfdffff	                           jne 0x400caa9	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400cd3d	         0xfb64f01	               movzx ecx, byte [rdi + 1]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400cd41	          0x80f974	                            cmp cl, 0x74	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400cd44	     0xf8484030000	                            je 0x400d0ce	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400cd4a	          0x80f93e	                            cmp cl, 0x3e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd4d	     0xf8465080000	                            je 0x400d5b8	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd53	            0x84c9	                             test cl, cl	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd55	     0xf845d080000	                            je 0x400d5b8	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd5b	        0x488d4702	                      lea rax, [rdi + 2]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd5f	      0xbd02000000	                              mov ebp, 2	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400cd64	            0xeb12	                           jmp 0x400cd78	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400cd66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400cd70	          0x80f93e	                            cmp cl, 0x3e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd73	            0x7418	                            je 0x400cd8d	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd75	          0x4889d5	                            mov rbp, rdx	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd78	           0xfb608	                   movzx ecx, byte [rax]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd7b	          0x4989c0	                             mov r8, rax	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd7e	        0x4883c001	                              add rax, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd82	          0x4189ec	                           mov r12d, ebp	      4456	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd85	        0x488d5501	                      lea rdx, [rbp + 1]	      4456	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd89	            0x84c9	                             test cl, cl	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd8b	            0x75e3	                           jne 0x400cd70	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400cd8d	          0x80f93e	                            cmp cl, 0x3e	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400cd90	    0x41bd00000000	                             mov r13d, 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400cd96	     0xf85fcfdffff	                           jne 0x400cb98	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400cd9c	        0x41c60000	                        mov byte [r8], 0	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400cda0	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400cda5	        0x80780174	                cmp byte [rax + 1], 0x74	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400cda9	     0xf84c5070000	                            je 0x400d574	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400cdaf	        0x4183c401	                             add r12d, 1	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400cdb3	        0xc604283e	              mov byte [rax + rbp], 0x3e	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400cdb7	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cdbc	          0x4963ec	                        movsxd rbp, r12d	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cdbf	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cdc6	        0x488d7801	                      lea rdi, [rax + 1]	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cdca	      0xe8b144ffff	                call sym.find_key_option	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cdcf	            0x85c0	                           test eax, eax	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cdd1	    0x41ba01000000	                             mov r10d, 1	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cdd7	        0x410f94c1	                                sete r9b	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cddb	      0xe93afdffff	                           jmp 0x400cb1a	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400cde0	          0x4963d4	                        movsxd rdx, r12d	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cde3	            0x85db	                           test ebx, ebx	      4525	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400cde5	      0x440fb62c16	            movzx r13d, byte [rsi + rdx]	      4517	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cdea	     0xf88bb000000	                            js 0x400ceab	      4525	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400cdf0	          0x4863cb	                         movsxd rcx, ebx	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400cdf3	        0x48c1e106	                              shl rcx, 6	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400cdf7	    0x488da9000000	                          lea rbp, [rcx]	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400cdfe	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400ce03	     0xf8442030000	                            je 0x400d14b	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400ce09	      0x448b642408	               mov r12d, dword [rsp + 8]	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400ce0e	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400ce12	          0x4889ef	                            mov rdi, rbp	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400ce15	      0x4889542430	             mov qword [rsp + 0x30], rdx	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400ce1a	      0x4488442420	              mov byte [rsp + 0x20], r8b	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400ce1f	          0x4489e6	                           mov esi, r12d	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400ce22	        0x48890424	                    mov qword [rsp], rax	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400ce26	      0xe83556ffff	                 call sym.get_varp_scope	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400ce2b	          0x4989c7	                            mov r15, rax	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400ce2e	          0x4489e0	                           mov eax, r12d	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ce31	    0x440fb6442420	           movzx r8d, byte [rsp + 0x20] 	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ce37	            0xa810	                           test al, 0x10	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ce39	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ce3e	     0xf848d000000	                            je 0x400ced1	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ce44	      0x48837d18ff	cmp qword [rbp + 0x18], 0xffffffffffffffff	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ce49	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ce4e	     0xf8487070000	                            je 0x400d5db	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ce54	    0xc74424740000	               mov dword [rsp + 0x74], 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400ce5c	          0x4889f7	                            mov rdi, rsi	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400ce5f	          0x4531ed	                          xor r13d, r13d	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400ce62	      0xe939fdffff	                           jmp 0x400cba0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400ce67	        0x498d7e03	                      lea rdi, [r14 + 3]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400ce6b	    0xc74424180200	               mov dword [rsp + 0x18], 2	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400ce73	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400ce78	      0xe921fcffff	                           jmp 0x400ca9e	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400ce7d	        0x8b742408	                mov esi, dword [rsp + 8]	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x400ce81	      0xbf02000000	                              mov edi, 2	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x400ce86	      0xe8255cffff	                    call sym.showoptions	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x400ce8b	      0xe800000000	                          call 0x400ce90	      4425	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_11
0x400ce90	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400ce95	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4426	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400ce9d	        0x488d7807	                      lea rdi, [rax + 7]	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400cea1	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400cea6	      0xe975fbffff	                           jmp 0x400ca20	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400ceab	            0x85c0	                           test eax, eax	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x400cead	     0xf8803080000	                            js 0x400d6b6	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x400ceb3	    0xc68424800000	            mov byte [rsp + 0x80], 0xf2 	      4551	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x400cebb	    0x888424810000	               mov byte [rsp + 0x81], al	      4552	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x400cec2	      0xf644240810	               test byte [rsp + 8], 0x10	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400cec7	            0x758b	                           jne 0x400ce54	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400cec9	    0x48c704240400	                      mov qword [rsp], 4	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ced1	       0xfb66c245b	           movzx ebp, byte [rsp + 0x5b] 	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400ced6	            0x89d8	                            mov eax, ebx	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400ced8	            0xf7d0	                                 not eax	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400ceda	          0xc1e81f	                           shr eax, 0x1f	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400cedd	          0x4020c5	                             and bpl, al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400cee0	     0xf8405030000	                            je 0x400d1eb	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400cee6	          0x4863c3	                         movsxd rax, ebx	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400cee9	        0x48c1e006	                              shl rax, 6	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400ceed	    0x4883b8000000	     cmp qword [rax], 0xffffffffffffffff	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400cef5	     0xf844d010000	                            je 0x400d048	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400cefb	      0xf644240808	                  test byte [rsp + 8], 8	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x400cf00	            0x7447	                            je 0x400cf49	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x400cf02	    0x48f704240000	            test qword [rsp], 0x2080000 	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x400cf0a	     0xf8546060000	                           jne 0x400d556	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x400cf10	    0x488b05000000	            mov rax, qword [0x0400cf17] 	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf17	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf1d	            0x85c0	                           test eax, eax	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf1f	            0x7428	                            je 0x400cf49	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf21	          0x4084ed	                           test bpl, bpl	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf24	            0x7423	                            je 0x400cf49	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf26	          0x4863c3	                         movsxd rax, ebx	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf29	        0x48c1e006	                              shl rax, 6	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf2d	    0x8b8000000000	                    mov eax, dword [rax]	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf33	      0x3d0e200000	                         cmp eax, 0x200e	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf38	     0xf840a010000	                            je 0x400d048	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf3e	      0x3d24200000	                         cmp eax, 0x2024	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf43	     0xf84ff000000	                            je 0x400d048	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400cf49	    0x8b0500000000	            mov eax, dword [0x0400cf4f] 	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400cf4f	            0x85c0	                           test eax, eax	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400cf51	            0x740e	                            je 0x400cf61	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400cf53	    0x48f704240000	               test qword [rsp], 0x80000	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400cf5b	     0xf8537070000	                           jne 0x400d698	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400cf61	          0x4489ee	                           mov esi, r13d	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400cf64	      0xbf00000000	                              mov edi, 0	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400cf69	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400cf6e	        0x450fb6e0	                         movzx r12d, r8b	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400cf72	      0xe800000000	                          call 0x400cf77	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400cf77	          0x4885c0	                           test rax, rax	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400cf7a	            0x744a	                            je 0x400cfc6	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400cf7c	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400cf81	      0x4803542468	             add rdx, qword [rsp + 0x68]	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400cf86	        0x4183fd26	                          cmp r13d, 0x26	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400cf8a	    0x8b0500000000	            mov eax, dword [0x0400cf90] 	      4602	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400cf90	      0x4889542468	             mov qword [rsp + 0x68], rdx	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400cf95	        0x8944242c	             mov dword [rsp + 0x2c], eax	      4602	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400cf99	     0xf8474020000	                            je 0x400d213	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400cf9f	          0x4489ee	                           mov esi, r13d	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400cfa2	      0xbf00000000	                              mov edi, 0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400cfa7	      0xe800000000	                          call 0x400cfac	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400cfac	          0x4885c0	                           test rax, rax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400cfaf	            0x7415	                            je 0x400cfc6	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400cfb1	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400cfb6	         0xfb64701	               movzx eax, byte [rdi + 1]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400cfba	            0xa8df	                           test al, 0xdf	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400cfbc	            0x7408	                            je 0x400cfc6	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400cfbe	            0x3c09	                               cmp al, 9	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400cfc0	     0xf8542020000	                           jne 0x400d208	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400cfc6	        0x4183fd3f	                          cmp r13d, 0x3f	      4628	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400cfca	     0xf842a060000	                            je 0x400d5fa	      4628	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400cfd0	      0x837c241801	               cmp dword [rsp + 0x18], 1	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400cfd5	     0xf8476020000	                            je 0x400d251	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400cfdb	        0xf6042401	                      test byte [rsp], 1	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400cfdf	            0x7471	                            je 0x400d052	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400cfe1	        0x4183fd3d	                          cmp r13d, 0x3d	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400cfe5	            0x7478	                            je 0x400d05f	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400cfe7	        0x4183fd3a	                          cmp r13d, 0x3a	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400cfeb	            0x7472	                            je 0x400d05f	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400cfed	        0x4183fd21	                          cmp r13d, 0x21	      4693	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400cff1	     0xf84be070000	                            je 0x400d7b5	      4693	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400cff7	        0x4183fd26	                          cmp r13d, 0x26	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400cffb	     0xf84c4070000	                            je 0x400d7c5	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d001	        0x4183fd3c	                          cmp r13d, 0x3c	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x400d005	     0xf8413130000	                            je 0x400e31e	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x400d00b	          0x4585ed	                         test r13d, r13d	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400d00e	     0xf8454070000	                            je 0x400d768	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400d014	        0x4183fc20	                          cmp r12d, 0x20	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400d018	     0xf844a070000	                            je 0x400d768	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400d01e	        0x4183fc09	                             cmp r12d, 9	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400d022	     0xf8440070000	                            je 0x400d768	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400d028	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400d02d	    0x41bd00000000	                             mov r13d, 0	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400d033	      0xe960fbffff	                           jmp 0x400cb98	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400d038	     0xf1f84000000	                   nop dword [rax + rax]	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400d040	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400d048	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400d04d	      0xe902feffff	                           jmp 0x400ce54	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400d052	          0x4489ee	                           mov esi, r13d	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d055	      0xbf00000000	                              mov edi, 0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d05a	      0xe800000000	                          call 0x400d05f	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d05f	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d064	    0x41bd00000000	                             mov r13d, 0	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400d06a	      0xe929fbffff	                           jmp 0x400cb98	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400d06f	          0x80f92b	                            cmp cl, 0x2b	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400d072	     0xf8418010000	                            je 0x400d190	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400d078	          0x80f95e	                            cmp cl, 0x5e	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400d07b	     0xf8451060000	                            je 0x400d6d2	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400d081	          0x80f92d	                            cmp cl, 0x2d	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400d084	     0xf85defaffff	                           jne 0x400cb68	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400d08a	        0x4183c401	                             add r12d, 1	      4514	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400d08e	    0xc74424140100	               mov dword [rsp + 0x14], 1	      4513	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400d096	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d09e	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d0a6	      0xe9d5faffff	                           jmp 0x400cb80	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d0ab	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400d0b0	      0xe8cb41ffff	                call sym.find_key_option	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400d0b5	            0x85c0	                           test eax, eax	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400d0b7	    0x41ba01000000	                             mov r10d, 1	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400d0bd	        0x410f94c1	                                sete r9b	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400d0c1	      0xe954faffff	                           jmp 0x400cb1a	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400d0c6	          0x4489c1	                            mov ecx, r8d	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400d0c9	      0xe98bfaffff	                           jmp 0x400cb59	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400d0ce	        0x807f025f	                cmp byte [rdi + 2], 0x5f	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0d2	     0xf8583fcffff	                           jne 0x400cd5b	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0d8	        0x807f0300	                   cmp byte [rdi + 3], 0	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0dc	     0xf8479fcffff	                            je 0x400cd5b	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0e2	        0x807f0400	                   cmp byte [rdi + 4], 0	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0e6	     0xf846ffcffff	                            je 0x400cd5b	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0ec	         0xfb64f05	               movzx ecx, byte [rdi + 5]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0f0	        0x4c8d4705	                       lea r8, [rdi + 5]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0f4	      0xbd05000000	                              mov ebp, 5	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0f9	    0x41bc05000000	                             mov r12d, 5	      4451	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400d0ff	    0x41bd00000000	                             mov r13d, 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d105	          0x80f93e	                            cmp cl, 0x3e	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d108	     0xf858afaffff	                           jne 0x400cb98	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d10e	      0xe989fcffff	                           jmp 0x400cd9c	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d113	       0xf1f440000	                   nop dword [rax + rax]	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d118	        0x8b7c2408	                mov edi, dword [rsp + 8]	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400d11c	        0x4983c604	                              add r14, 4	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400d120	      0x4c89742468	             mov qword [rsp + 0x68], r14	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400d125	          0x83cf01	                               or edi, 1	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400d128	      0xe8c376ffff	            call sym.set_options_default	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400d12d	      0xe88e64ffff	                 call sym.didset_options	      4412	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_5
0x400d132	      0xe8b940ffff	                call sym.didset_options2	      4413	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_6
0x400d137	      0xbf32000000	                           mov edi, 0x32	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400d13c	      0xe800000000	                          call 0x400d141	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400d141	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400d146	      0xe9d5f8ffff	                           jmp 0x400ca20	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400d14b	          0x4489ee	                           mov esi, r13d	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400d14e	      0xbf00000000	                              mov edi, 0	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400d153	      0xe800000000	                          call 0x400d158	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400d158	          0x4885c0	                           test rax, rax	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400d15b	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400d160	     0xf85eefcffff	                           jne 0x400ce54	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400d166	        0xf6451001	               test byte [rbp + 0x10], 1	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400d16a	            0x740a	                            je 0x400d176	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400d16c	        0x4183fd3f	                          cmp r13d, 0x3f	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400d170	     0xf85defcffff	                           jne 0x400ce54	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400d176	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400d17b	    0x41bd00000000	                             mov r13d, 0	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x400d181	      0xe912faffff	                           jmp 0x400cb98	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x400d186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x400d190	        0x4183c401	                             add r12d, 1	      4504	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400d194	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d19c	    0xc74424100000	               mov dword [rsp + 0x10], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d1a4	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400d1ac	      0xe9cff9ffff	                           jmp 0x400cb80	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400d1b1	    0x448b0d000000	            mov r9d, dword [0x0400d1b8] 	      5276	option.c	FUNCTION_16	IF_120
0x400d1b8	          0x4585c9	                           test r9d, r9d	      5276	option.c	FUNCTION_16	IF_120
0x400d1bb	            0x7535	                           jne 0x400d1f2	      5276	option.c	FUNCTION_16	IF_120
0x400d1bd	      0xb801000000	                              mov eax, 1	      5288	option.c	FUNCTION_16
0x400d1c2	    0x488b9c24e800	            mov rbx, qword [rsp + 0xe8] 	      5289	option.c	FUNCTION_16
0x400d1ca	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5289	option.c	FUNCTION_16
0x400d1d3	     0xf8526060000	                           jne 0x400d7ff	      5289	option.c	FUNCTION_16
0x400d1d9	    0x4881c4f80000	                           add rsp, 0xf8	      5289	option.c	FUNCTION_16
0x400d1e0	              0x5b	                                 pop rbx	      5289	option.c	FUNCTION_16
0x400d1e1	              0x5d	                                 pop rbp	      5289	option.c	FUNCTION_16
0x400d1e2	            0x415c	                                 pop r12	      5289	option.c	FUNCTION_16
0x400d1e4	            0x415d	                                 pop r13	      5289	option.c	FUNCTION_16
0x400d1e6	            0x415e	                                 pop r14	      5289	option.c	FUNCTION_16
0x400d1e8	            0x415f	                                 pop r15	      5289	option.c	FUNCTION_16
0x400d1ea	              0xc3	                                     ret	      5289	option.c	FUNCTION_16
0x400d1eb	            0x89c5	                            mov ebp, eax	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d1ed	      0xe909fdffff	                           jmp 0x400cefb	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d1f2	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      5276	option.c	FUNCTION_16	IF_120
0x400d1f7	          0x4585c0	                           test r8d, r8d	      5276	option.c	FUNCTION_16	IF_120
0x400d1fa	            0x74c1	                            je 0x400d1bd	      5276	option.c	FUNCTION_16	IF_120
0x400d1fc	      0xe914030000	                           jmp 0x400d515	      5276	option.c	FUNCTION_16	IF_120
0x400d201	     0xf1f80000000	                         nop dword [rax]	      5276	option.c	FUNCTION_16	IF_120
0x400d208	    0x41bd00000000	                             mov r13d, 0	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32
0x400d20e	      0xe985f9ffff	                           jmp 0x400cb98	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32
0x400d213	        0x807a0176	                cmp byte [rdx + 1], 0x76	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400d217	     0xf841a050000	                            je 0x400d737	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400d21d	      0xbe26000000	                           mov esi, 0x26	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d222	      0xbf00000000	                              mov edi, 0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d227	      0xe800000000	                          call 0x400d22c	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d22c	          0x4885c0	                           test rax, rax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d22f	     0xf849bfdffff	                            je 0x400cfd0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400d235	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d23a	         0xfb64701	               movzx eax, byte [rdi + 1]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d23e	            0xa8df	                           test al, 0xdf	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d240	     0xf8578fdffff	                           jne 0x400cfbe	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400d246	      0x837c241801	               cmp dword [rsp + 0x18], 1	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400d24b	     0xf858afdffff	                           jne 0x400cfdb	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400d251	          0x4489ee	                           mov esi, r13d	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400d254	      0xbf00000000	                              mov edi, 0	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400d259	      0xe800000000	                          call 0x400d25e	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400d25e	          0x4885c0	                           test rax, rax	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400d261	     0xf8489030000	                            je 0x400d5f0	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400d267	        0xf6042401	                      test byte [rsp], 1	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400d26b	     0xf8570fdffff	                           jne 0x400cfe1	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400d271	          0x4489ee	                           mov esi, r13d	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d274	      0xbf00000000	                              mov edi, 0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d279	      0xe800000000	                          call 0x400d27e	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400d27e	          0x4885c0	                           test rax, rax	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400d281	     0xf84d8fdffff	                            je 0x400d05f	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400d287	        0x4c8b2424	                    mov r12, qword [rsp]	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400d28b	        0x4183e402	                             and r12d, 2	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400d28f	     0xf85750e0000	                           jne 0x400e10a	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400d295	          0x4084ed	                           test bpl, bpl	      4807	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d298	     0xf84160e0000	                            je 0x400e0b4	      4807	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d29e	      0xf644240806	                  test byte [rsp + 8], 6	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2a3	     0xf85b50d0000	                           jne 0x400e05e	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2a9	          0x4863c3	                         movsxd rax, ebx	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2ac	      0x4889442430	             mov qword [rsp + 0x30], rax	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2b1	        0x48c1e006	                              shl rax, 6	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2b5	    0x480500000000	                              add rax, 0	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2bb	        0xf6402110	           test byte [rax + 0x21], 0x10 	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2bf	     0xf848c0d0000	                            je 0x400e051	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2c5	        0x4c8b7818	            mov r15, qword [rax + 0x18] 	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400d2c9	          0x498b07	                    mov rax, qword [r15]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d2cc	      0x4889442420	             mov qword [rsp + 0x20], rax	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d2d1	      0xf644240804	                  test byte [rsp + 8], 4	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400d2d6	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400d2db	            0x741f	                            je 0x400d2fc	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400d2dd	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400d2e2	        0x48c1e006	                              shl rax, 6	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400d2e6	    0x488bb8000000	                    mov rdi, qword [rax]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400d2ed	    0x488db0000000	                          lea rsi, [rax]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400d2f4	      0xe83742ffff	                call sym.get_varp.isra.1	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400d2f9	          0x4c8b20	                    mov r12, qword [rax]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400d2fc	        0x4183fd26	                          cmp r13d, 0x26	      4844	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400d300	     0xf84e50c0000	                            je 0x400dfeb	      4844	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400d306	        0x4183fd3c	                          cmp r13d, 0x3c	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x400d30a	     0xf84b10c0000	                            je 0x400dfc1	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x400d310	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400d315	    0x4981ff000000	                              cmp r15, 0	      4890	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400d31c	        0x488d4801	                      lea rcx, [rax + 1]	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400d320	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400d325	      0x48894c2468	             mov qword [rsp + 0x68], rcx	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400d32a	     0xf84b10b0000	                            je 0x400dee1	      4890	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400d330	    0x4981ff000000	                              cmp r15, 0	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400d337	     0xf8402050000	                            je 0x400d83f	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400d33d	    0x4981ff000000	                              cmp r15, 0	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d344	     0xf8481050000	                            je 0x400d8cb	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d34a	         0xfb65001	               movzx edx, byte [rax + 1]	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d34e	          0x80fa3e	                            cmp dl, 0x3e	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d351	     0xf84ad040000	                            je 0x400d804	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d357	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d35c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d365	      0xe800000000	                          call 0x400d36a	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400d36a	          0x4989c5	                            mov r13, rax	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400d36d	          0x8d7801	                      lea edi, [rax + 1]	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400d370	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400d374	         0xb442410	              or eax, dword [rsp + 0x10]	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400d378	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400d37c	             0x9c1	                             or ecx, eax	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400d37e	        0x89442438	             mov dword [rsp + 0x38], eax	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400d382	        0x894c2440	             mov dword [rsp + 0x40], ecx	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400d386	            0x740d	                            je 0x400d395	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400d388	          0x4c89e7	                            mov rdi, r12	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400d38b	      0xe800000000	                          call 0x400d390	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400d390	      0x418d7c0502	                lea edi, [r13 + rax + 2]	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400d395	      0xe800000000	                          call 0x400d39a	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x400d39a	          0x4885c0	                           test rax, rax	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400d39d	          0x4989c5	                            mov r13, rax	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x400d3a0	     0xf840bfeffff	                            je 0x400d1b1	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400d3a6	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400d3ab	          0x4889c5	                            mov rbp, rax	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400d3ae	            0xeb32	                           jmp 0x400d3e2	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400d3b0	            0x3c09	                               cmp al, 9	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400d3b2	            0x7435	                            je 0x400d3e9	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400d3b4	            0x3c5c	                            cmp al, 0x5c	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400d3b6	     0xf845e060000	                            je 0x400da1a	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400d3bc	    0x8b0500000000	            mov eax, dword [0x0400d3c2] 	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400d3c2	            0x85c0	                           test eax, eax	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400d3c4	     0xf8533060000	                           jne 0x400d9fd	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400d3ca	        0x488d4701	                      lea rax, [rdi + 1]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400d3ce	        0x4883c501	                              add rbp, 1	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400d3d2	      0x4889442468	             mov qword [rsp + 0x68], rax	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400d3d7	           0xfb607	                   movzx eax, byte [rdi]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400d3da	          0x8845ff	                  mov byte [rbp - 1], al	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400d3dd	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400d3e2	           0xfb607	                   movzx eax, byte [rdi]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400d3e5	            0xa8df	                           test al, 0xdf	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400d3e7	            0x75c7	                           jne 0x400d3b0	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400d3e9	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400d3ed	        0xc6450000	                       mov byte [rbp], 0	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39
0x400d3f1	            0x85c0	                           test eax, eax	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400d3f3	     0xf84460b0000	                            je 0x400df3f	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400d3f9	    0x48f704240080	                test qword [rsp], 0x8000	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400d401	            0x744e	                            je 0x400d451	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400d403	          0x4c89ee	                            mov rsi, r13	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d406	            0x89df	                            mov edi, ebx	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d408	      0xe89338ffff	                  call sym.option_expand	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d40d	          0x4885c0	                           test rax, rax	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400d410	          0x4889c5	                            mov rbp, rax	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400d413	            0x743c	                            je 0x400d451	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400d415	          0x4c89ef	                            mov rdi, r13	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400d418	      0xe800000000	                          call 0x400d41d	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400d41d	          0x4889ef	                            mov rdi, rbp	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d420	      0xe800000000	                          call 0x400d425	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d425	          0x4c89e7	                            mov rdi, r12	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d428	          0x4989c5	                            mov r13, rax	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400d42b	      0xe800000000	                          call 0x400d430	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d430	      0x428d7c2802	                lea edi, [rax + r13 + 2]	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400d435	      0xe800000000	                          call 0x400d43a	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x400d43a	          0x4885c0	                           test rax, rax	      5025	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x400d43d	          0x4989c5	                            mov r13, rax	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x400d440	     0xf846bfdffff	                            je 0x400d1b1	      5025	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x400d446	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_126	CALL_3
0x400d449	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_126	CALL_3
0x400d44c	      0xe800000000	                          call 0x400d451	       110	string3.h	FUNCTION_126	CALL_3
0x400d451	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400d455	    0xc74424740000	               mov dword [rsp + 0x74], 0	      5033	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400d45d	            0x85c0	                           test eax, eax	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400d45f	            0x750e	                           jne 0x400d46f	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400d461	    0x48f704240000	               test qword [rsp], 0x20000	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400d469	     0xf84fa0a0000	                            je 0x400df69	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400d46f	          0x4c89ef	                            mov rdi, r13	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400d472	      0xe800000000	                          call 0x400d477	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400d477	        0x89442474	             mov dword [rsp + 0x74], eax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400d47b	      0x41803c2400	                       cmp byte [r12], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d480	          0x4c63c8	                          movsxd r9, eax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400d483	     0xf8425060000	                            je 0x400daae	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d489	        0x488b0424	                    mov rax, qword [rsp]	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d48d	          0x4c89e5	                            mov rbp, r12	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d490	      0x4d8d542401	                      lea r10, [r12 + 1]	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d495	      0x2500800000	                         and eax, 0x8000	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d49a	       0xf94442448	                  sete byte [rsp + 0x48]	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d49f	      0x4889442440	             mov qword [rsp + 0x40], rax	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4a4	          0x4531c0	                            xor r8d, r8d	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d4a7	            0xeb1d	                           jmp 0x400d4c6	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d4a9	          0x4939ea	                            cmp r10, rbp	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4ac	            0x7507	                           jne 0x400d4b5	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4ae	      0x41807aff5c	                cmp byte [r10 - 1], 0x5c	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4b3	            0x7440	                            je 0x400d4f5	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4b5	          0x4531c0	                            xor r8d, r8d	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x400d4b8	        0x4883c501	                              add rbp, 1	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d4bc	        0x807d0000	                       cmp byte [rbp], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d4c0	     0xf84eb050000	                            je 0x400dab1	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400d4c6	          0x4939ec	                            cmp r12, rbp	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400d4c9	     0xf8469050000	                            je 0x400da38	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400d4cf	      0x807c244800	                cmp byte [rsp + 0x48], 0	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400d4d4	     0xf855e050000	                           jne 0x400da38	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400d4da	        0x807dff2c	                cmp byte [rbp - 1], 0x2c	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400d4de	     0xf84e5090000	                            je 0x400dec9	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400d4e4	          0x4939ea	                            cmp r10, rbp	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4e7	            0x73c0	                           jae 0x400d4a9	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4e9	        0x807dff5c	                cmp byte [rbp - 1], 0x5c	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4ed	            0x75c6	                           jne 0x400d4b5	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4ef	        0x807dfe2c	                cmp byte [rbp - 2], 0x2c	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4f3	            0x74c0	                            je 0x400d4b5	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4f5	        0x4183c001	                              add r8d, 1	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4f9	            0xebbd	                           jmp 0x400d4b8	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d4fb	       0xf1f440000	                   nop dword [rax + rax]	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400d500	            0x31ff	                            xor edi, edi	      4389	option.c	FUNCTION_16	IF_1	CALL_1
0x400d502	      0xe8a955ffff	                    call sym.showoptions	      4389	option.c	FUNCTION_16	IF_1	CALL_1
0x400d507	    0x8b0500000000	            mov eax, dword [0x0400d50d] 	      5276	option.c	FUNCTION_16	IF_120
0x400d50d	            0x85c0	                           test eax, eax	      5276	option.c	FUNCTION_16	IF_120
0x400d50f	     0xf84a8fcffff	                            je 0x400d1bd	      5276	option.c	FUNCTION_16	IF_120
0x400d515	      0xbf0a000000	                            mov edi, 0xa	      5281	option.c	FUNCTION_16	IF_120	CALL_127
0x400d51a	    0xc70500000000	               mov dword [0x0400d524], 0	      5279	option.c	FUNCTION_16	IF_120
0x400d524	    0xc70500000000	               mov dword [0x0400d52e], 1	      5280	option.c	FUNCTION_16	IF_120
0x400d52e	      0xe800000000	                          call 0x400d533	      5281	option.c	FUNCTION_16	IF_120	CALL_127
0x400d533	      0xe800000000	                          call 0x400d538	      5282	option.c	FUNCTION_16	IF_120	CALL_128
0x400d538	      0xe800000000	                          call 0x400d53d	      5283	option.c	FUNCTION_16	IF_120	CALL_129
0x400d53d	    0xc70500000000	               mov dword [0x0400d547], 1	      5284	option.c	FUNCTION_16	IF_120
0x400d547	    0xc70500000000	               mov dword [0x0400d551], 0	      5285	option.c	FUNCTION_16	IF_120
0x400d551	      0xe967fcffff	                           jmp 0x400d1bd	      5285	option.c	FUNCTION_16	IF_120
0x400d556	            0x31ff	                            xor edi, edi	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400d558	      0xba05000000	                              mov edx, 5	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400d55d	      0xbe00000000	                              mov esi, 0	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400d562	      0xe800000000	                          call 0x400d567	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400d567	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400d56c	          0x4989c5	                            mov r13, rax	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x400d56f	      0xe924f6ffff	                           jmp 0x400cb98	      4573	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x400d574	        0x8078025f	                cmp byte [rax + 2], 0x5f	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400d578	     0xf8531f8ffff	                           jne 0x400cdaf	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400d57e	        0x488d7801	                      lea rdi, [rax + 1]	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x400d582	        0x4183c401	                             add r12d, 1	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400d586	      0xe8252fffff	                     call sym.findoption	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x400d58b	          0x4863d8	                         movsxd rbx, eax	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x400d58e	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400d593	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x400d596	        0xc604283e	              mov byte [rax + rbp], 0x3e	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400d59a	     0xf8417f8ffff	                            je 0x400cdb7	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x400d5a0	          0x4963ec	                        movsxd rbp, r12d	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x400d5a3	    0x41b901000000	                              mov r9d, 1	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x400d5a9	          0x4531d2	                          xor r10d, r10d	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x400d5ac	            0x31c0	                            xor eax, eax	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d5ae	      0xe967f5ffff	                           jmp 0x400cb1a	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d5b3	       0xf1f440000	                   nop dword [rax + rax]	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d5b8	          0x80f93e	                            cmp cl, 0x3e	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d5bb	        0x4c8d4701	                       lea r8, [rdi + 1]	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d5bf	      0xbd01000000	                              mov ebp, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400d5c4	    0x41bc01000000	                             mov r12d, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400d5ca	    0x41bd00000000	                             mov r13d, 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d5d0	     0xf85c2f5ffff	                           jne 0x400cb98	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d5d6	      0xe9c1f7ffff	                           jmp 0x400cd9c	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400d5db	      0xf644240820	               test byte [rsp + 8], 0x20	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d5e0	      0xbd01000000	                              mov ebp, 1	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d5e5	     0xf8569f8ffff	                           jne 0x400ce54	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d5eb	      0xe90bf9ffff	                           jmp 0x400cefb	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400d5f0	        0xf6042401	                      test byte [rsp], 1	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400d5f4	     0xf85e7f9ffff	                           jne 0x400cfe1	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400d5fa	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x400d5fe	            0x85c0	                           test eax, eax	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x400d600	     0xf8422010000	                            je 0x400d728	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x400d606	      0xbf0a000000	                            mov edi, 0xa	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x400d60b	      0xe800000000	                          call 0x400d610	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x400d610	          0x4084ed	                           test bpl, bpl	      4643	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x400d613	     0xf84da000000	                            je 0x400d6f3	      4643	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x400d619	        0x48c1e306	                              shl rbx, 6	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400d61d	        0x8b742408	                mov esi, dword [rsp + 8]	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400d621	    0x4881c3000000	                              add rbx, 0	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400d628	          0x4889df	                            mov rdi, rbx	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400d62b	      0xe8a053ffff	                     call sym.showoneopt	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x400d630	    0x48833d000000	               cmp qword [0x0400d638], 0	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x400d638	            0x7e1f	                           jle 0x400d659	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x400d63a	        0x4c3b7b18	            cmp r15, qword [rbx + 0x18] 	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x400d63e	     0xf84cd0c0000	                            je 0x400e311	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x400d644	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400d647	          0xf6c420	                           test ah, 0x20	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400d64a	     0xf85a40c0000	                           jne 0x400e2f4	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x400d650	          0xf6c440	                           test ah, 0x40	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x400d653	     0xf857e0c0000	                           jne 0x400e2d7	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x400d659	        0x4183fd3f	                          cmp r13d, 0x3f	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400d65d	     0xf84ddf9ffff	                            je 0x400d040	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400d663	          0x4585ed	                         test r13d, r13d	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400d666	     0xf84d4f9ffff	                            je 0x400d040	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400d66c	        0x4183fc20	                          cmp r12d, 0x20	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400d670	     0xf84caf9ffff	                            je 0x400d040	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400d676	        0x4183fc09	                             cmp r12d, 9	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400d67a	     0xf84c0f9ffff	                            je 0x400d040	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400d680	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400d685	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x400d68d	    0x41bd00000000	                             mov r13d, 0	      4676	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400d693	      0xe900f5ffff	                           jmp 0x400cb98	      4676	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x400d698	            0x31ff	                            xor edi, edi	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400d69a	      0xba05000000	                              mov edx, 5	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400d69f	      0xbe00000000	                              mov esi, 0	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400d6a4	      0xe800000000	                          call 0x400d6a9	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400d6a9	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400d6ae	          0x4989c5	                            mov r13, rax	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x400d6b1	      0xe9e2f4ffff	                           jmp 0x400cb98	      4595	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400d6b6	            0x89c1	                            mov ecx, eax	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400d6b8	            0xf7d8	                                 neg eax	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400d6ba	            0xf7d9	                                 neg ecx	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400d6bc	          0xc1e808	                              shr eax, 8	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400d6bf	    0x888c24800000	               mov byte [rsp + 0x80], cl	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400d6c6	    0x888424810000	               mov byte [rsp + 0x81], al	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400d6cd	      0xe9f0f7ffff	                           jmp 0x400cec2	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400d6d2	        0x4183c401	                             add r12d, 1	      4509	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400d6d6	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d6de	    0xc74424100100	               mov dword [rsp + 0x10], 1	      4508	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400d6e6	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d6ee	      0xe98df4ffff	                           jmp 0x400cb80	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400d6f3	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x400d6fb	      0xe800000000	                          call 0x400d700	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x400d700	          0x4885c0	                           test rax, rax	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x400d703	     0xf84b60b0000	                            je 0x400e2bf	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x400d709	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400d711	      0xba01000000	                              mov edx, 1	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400d716	          0x4889c6	                            mov rsi, rax	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400d719	      0xe800000000	                          call 0x400d71e	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400d71e	      0xe936ffffff	                           jmp 0x400d659	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400d723	       0xf1f440000	                   nop dword [rax + rax]	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x400d728	      0xbf01000000	                              mov edi, 1	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x400d72d	      0xe800000000	                          call 0x400d732	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x400d732	      0xe9d9feffff	                           jmp 0x400d610	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x400d737	        0x807a0269	                cmp byte [rdx + 2], 0x69	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400d73b	     0xf85dcfaffff	                           jne 0x400d21d	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400d741	        0x807a036d	                cmp byte [rdx + 3], 0x6d	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400d745	     0xf84af0c0000	                            je 0x400e3fa	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400d74b	        0x4883c202	                              add rdx, 2	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400d74f	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      4612	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400d757	      0x4889542468	             mov qword [rsp + 0x68], rdx	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400d75c	      0xe9bcfaffff	                           jmp 0x400d21d	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400d761	     0xf1f80000000	                         nop dword [rax]	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x400d768	      0x837c241802	               cmp dword [rsp + 0x18], 2	      4720	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400d76d	            0x7446	                            je 0x400d7b5	      4720	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400d76f	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x400d773	          0x4863c2	                         movsxd rax, edx	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x400d776	      0x4889442478	             mov qword [rsp + 0x78], rax	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x400d77b	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400d77f	          0x4c89fe	                            mov rsi, r15	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400d782	            0x89df	                            mov edi, ebx	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400d784	      0xe887dfffff	                call sym.set_bool_option	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400d789	          0x4989c5	                            mov r13, rax	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x400d78c	          0x4084ed	                           test bpl, bpl	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x400d78f	            0x741a	                            je 0x400d7ab	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x400d791	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x400d795	         0xb54240c	               or edx, dword [rsp + 0xc]	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x400d799	            0x89df	                            mov edi, ebx	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d79b	         0xb542414	              or edx, dword [rsp + 0x14]	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d79f	        0x8b742408	                mov esi, dword [rsp + 8]	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d7a3	          0x83f201	                              xor edx, 1	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d7a6	      0xe86529ffff	                 call sym.did_set_option	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d7ab	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d7b0	      0xe9e3f3ffff	                           jmp 0x400cb98	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x400d7b5	          0x418b17	                    mov edx, dword [r15]	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400d7b8	          0x83f201	                              xor edx, 1	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400d7bb	          0x4863c2	                         movsxd rax, edx	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400d7be	      0x4889442478	             mov qword [rsp + 0x78], rax	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400d7c3	            0xebb6	                           jmp 0x400d77b	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x400d7c5	        0x488b0424	                    mov rax, qword [rsp]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7c9	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7ce	            0x31d2	                            xor edx, edx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7d0	        0x48c1e80a	                            shr rax, 0xa	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7d4	        0x4883f001	                              xor rax, 1	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7d8	          0x4585e4	                         test r12d, r12d	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7db	           0xf94c2	                                 sete dl	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7de	          0x4821d0	                            and rax, rdx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7e1	          0x4863d3	                         movsxd rdx, ebx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7e4	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7e9	    0x488b04c50000	                  mov rax, qword [rax*8]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7f1	            0x89c2	                            mov edx, eax	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7f3	            0x4898	                                    cdqe	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7f5	      0x4889442478	             mov qword [rsp + 0x78], rax	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7fa	      0xe97cffffff	                           jmp 0x400d77b	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400d7ff	      0xe800000000	                          call 0x400d804	      5289	option.c	FUNCTION_16
0x400d804	    0x4981ff000000	                              cmp r15, 0	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d80b	            0x741b	                            je 0x400d828	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d80d	    0x4981ff000000	                              cmp r15, 0	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d814	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d819	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d822	     0xf853dfbffff	                           jne 0x400d365	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d828	        0x488d7802	                      lea rdi, [rax + 2]	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d82c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d835	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d83a	      0xe926fbffff	                           jmp 0x400d365	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400d83f	    0x488b15000000	            mov rdx, qword [0x0400d846] 	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400d846	           0xfb612	                   movzx edx, byte [rdx]	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400d849	          0x83ea30	                           sub edx, 0x30	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400d84c	          0x83fa09	                              cmp edx, 9	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400d84f	     0xf87e8faffff	                            ja 0x400d33d	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x400d855	      0xbf00000000	                              mov edi, 0	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x400d85a	      0xe800000000	                          call 0x400d85f	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x400d85f	          0x83f801	                              cmp eax, 1	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d862	        0x89442474	             mov dword [rsp + 0x74], eax	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x400d866	     0xf84ac060000	                            je 0x400df18	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d86c	          0x83f802	                              cmp eax, 2	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d86f	            0x7447	                            je 0x400d8b8	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d871	            0x85c0	                           test eax, eax	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d873	            0x750e	                           jne 0x400d883	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d875	    0x488b05000000	            mov rax, qword [0x0400d87c] 	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d87c	    0x488905000000	            mov qword [0x0400d883], rax 	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d883	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x400d888	          0x4889ef	                            mov rdi, rbp	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x400d88b	      0xe800000000	                          call 0x400d890	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x400d890	          0x4939ec	                            cmp r12, rbp	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400d893	     0xf8495060000	                            je 0x400df2e	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400d899	    0x488b05000000	            mov rax, qword [0x0400d8a0] 	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400d8a0	      0x4889442420	             mov qword [rsp + 0x20], rax	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400d8a5	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400d8aa	    0x48c744241800	               mov qword [rsp + 0x18], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400d8b3	      0xe9adfaffff	                           jmp 0x400d365	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400d8b8	      0xbf00000000	                              mov edi, 0	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x400d8bd	      0xe800000000	                          call 0x400d8c2	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x400d8c2	    0x488905000000	            mov qword [0x0400d8c9], rax 	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x400d8c9	            0xebb8	                           jmp 0x400d883	      4917	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400d8cb	         0xfb64801	               movzx ecx, byte [rax + 1]	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400d8cf	            0x89ca	                            mov edx, ecx	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400d8d1	          0x83e930	                           sub ecx, 0x30	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400d8d4	          0x83f909	                              cmp ecx, 9	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400d8d7	     0xf8771faffff	                            ja 0x400d34e	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x400d8dd	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x400d8e2	    0xc68424900000	                mov byte [rsp + 0x90], 0	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d8ea	      0xe800000000	                          call 0x400d8ef	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x400d8ef	            0xa801	                              test al, 1	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x400d8f1	          0x4989c5	                            mov r13, rax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x400d8f4	        0x89442474	             mov dword [rsp + 0x74], eax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x400d8f8	            0x7417	                            je 0x400d911	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x400d8fa	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       148	string3.h	FUNCTION_130	CALL_3
0x400d902	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_130	CALL_3
0x400d907	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_130	CALL_3
0x400d90c	      0xe800000000	                          call 0x400d911	       148	string3.h	FUNCTION_130	CALL_3
0x400d911	        0x41f6c502	                            test r13b, 2	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x400d915	            0x7417	                            je 0x400d92e	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x400d917	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       148	string3.h	FUNCTION_130	CALL_3
0x400d91f	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_130	CALL_3
0x400d924	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_130	CALL_3
0x400d929	      0xe800000000	                          call 0x400d92e	       148	string3.h	FUNCTION_130	CALL_3
0x400d92e	        0x41f6c504	                            test r13b, 4	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x400d932	            0x7417	                            je 0x400d94b	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x400d934	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       148	string3.h	FUNCTION_130	CALL_3
0x400d93c	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_130	CALL_3
0x400d941	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_130	CALL_3
0x400d946	      0xe800000000	                          call 0x400d94b	       148	string3.h	FUNCTION_130	CALL_3
0x400d94b	        0x41f6c508	                            test r13b, 8	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x400d94f	            0x7417	                            je 0x400d968	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x400d951	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       148	string3.h	FUNCTION_130	CALL_3
0x400d959	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_130	CALL_3
0x400d95e	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_130	CALL_3
0x400d963	      0xe800000000	                          call 0x400d968	       148	string3.h	FUNCTION_130	CALL_3
0x400d968	        0x4183e510	                          and r13d, 0x10	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x400d96c	            0x7417	                            je 0x400d985	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x400d96e	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       148	string3.h	FUNCTION_130	CALL_3
0x400d976	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_130	CALL_3
0x400d97b	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_130	CALL_3
0x400d980	      0xe800000000	                          call 0x400d985	       148	string3.h	FUNCTION_130	CALL_3
0x400d985	    0x80bc24900000	                cmp byte [rsp + 0x90], 0	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x400d98d	            0x744f	                            je 0x400d9de	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x400d98f	    0x488d94249000	                   lea rdx, [rsp + 0x90]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d997	            0x8b0a	                    mov ecx, dword [rdx]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d999	        0x4883c204	                              add rdx, 4	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d99d	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9a3	            0xf7d1	                                 not ecx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9a5	            0x21c8	                            and eax, ecx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9a7	      0x2580808080	                     and eax, 0x80808080	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9ac	            0x74e9	                            je 0x400d997	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9ae	            0x89c1	                            mov ecx, eax	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9b0	          0xc1e910	                           shr ecx, 0x10	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9b3	      0xa980800000	                        test eax, 0x8080	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9b8	           0xf44c1	                          cmove eax, ecx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9bb	        0x488d4a02	                      lea rcx, [rdx + 2]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9bf	        0x480f44d1	                          cmove rdx, rcx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9c3	            0x89c1	                            mov ecx, eax	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9c5	              0xc1	                              add cl, al	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9c7	    0x488d84249000	                   lea rax, [rsp + 0x90]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9cf	        0x4883da03	                              sbb rdx, 3	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9d3	          0x4829c2	                            sub rdx, rax	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9d6	    0xc684148f0000	          mov byte [rsp + rdx + 0x8f], 0	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x400d9de	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d9e3	      0x4889442418	             mov qword [rsp + 0x18], rax	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d9e8	    0x488d84249000	                   lea rax, [rsp + 0x90]	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d9f0	      0x4889442468	             mov qword [rsp + 0x68], rax	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d9f5	          0x4889c7	                            mov rdi, rax	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d9f8	      0xe968f9ffff	                           jmp 0x400d365	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400d9fd	    0xff1500000000	                 call qword [0x0400da03]	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400da03	          0x83f801	                              cmp eax, 1	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400da06	        0x89442474	             mov dword [rsp + 0x74], eax	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400da0a	     0xf8f7a050000	                            jg 0x400df8a	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400da10	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400da15	      0xe9b0f9ffff	                           jmp 0x400d3ca	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400da1a	        0x807f0100	                   cmp byte [rdi + 1], 0	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400da1e	     0xf8498f9ffff	                            je 0x400d3bc	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400da24	        0x4883c701	                              add rdi, 1	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400da28	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400da2d	      0xe98af9ffff	                           jmp 0x400d3bc	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400da32	    0x660f1f440000	                    nop word [rax + rax]	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400da38	          0x4c89ca	                             mov rdx, r9	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da3b	          0x4c89ee	                            mov rsi, r13	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da3e	          0x4889ef	                            mov rdi, rbp	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da41	      0x4c89542460	             mov qword [rsp + 0x60], r10	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da46	      0x448944245c	             mov dword [rsp + 0x5c], r8d	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da4b	      0x4c894c2450	              mov qword [rsp + 0x50], r9	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da50	      0xe800000000	                          call 0x400da55	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da55	            0x85c0	                           test eax, eax	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da57	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da5c	      0x448b44245c	            mov r8d, dword [rsp + 0x5c] 	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da61	      0x4c8b542460	            mov r10, qword [rsp + 0x60] 	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da66	     0xf8578faffff	                           jne 0x400d4e4	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x400da6c	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400da72	            0x7412	                            je 0x400da86	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400da74	    0x420fb6440d00	              movzx eax, byte [rbp + r9]	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400da7a	            0x3c2c	                            cmp al, 0x2c	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400da7c	            0x7408	                            je 0x400da86	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400da7e	            0x84c0	                             test al, al	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400da80	     0xf855efaffff	                           jne 0x400d4e4	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400da86	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400da8a	            0x85f6	                           test esi, esi	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400da8c	            0x740b	                            je 0x400da99	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400da8e	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_126	CALL_3
0x400da91	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_126	CALL_3
0x400da94	      0xe800000000	                          call 0x400da99	       110	string3.h	FUNCTION_126	CALL_3
0x400da99	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400daa1	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400daa9	      0xe9db000000	                           jmp 0x400db89	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400daae	          0x4c89e5	                            mov rbp, r12	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400dab1	        0x8b7c2438	            mov edi, dword [rsp + 0x38] 	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400dab5	            0x85ff	                           test edi, edi	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400dab7	            0x74e0	                            je 0x400da99	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x400dab9	    0x48f704240080	                test qword [rsp], 0x8000	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400dac1	     0xf84d7030000	                            je 0x400de9e	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400dac7	      0x41803c2400	                       cmp byte [r12], 0	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400dacc	     0xf84cc030000	                            je 0x400de9e	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400dad2	      0x41807d0000	                       cmp byte [r13], 0	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400dad7	     0xf84c1030000	                            je 0x400de9e	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400dadd	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400dae1	      0xbe01000000	                              mov esi, 1	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400dae6	    0x41b801000000	                              mov r8d, 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400daec	            0x85c9	                           test ecx, ecx	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400daee	     0xf8433030000	                            je 0x400de27	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400daf4	          0x4c89e7	                            mov rdi, r12	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400daf7	      0xe800000000	                          call 0x400dafc	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400dafc	          0x83f801	                              cmp eax, 1	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400daff	        0x89442474	             mov dword [rsp + 0x74], eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400db03	     0xf8e0a030000	                           jle 0x400de13	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400db09	        0x488b1424	                    mov rdx, qword [rsp]	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400db0d	          0x4863f0	                         movsxd rsi, eax	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400db10	    0x41b901000000	                              mov r9d, 1	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400db16	    0x41b801000000	                              mov r8d, 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400db1c	    0x81e200800100	                        and edx, 0x18000	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400db22	    0x4881fa008001	                        cmp rdx, 0x18000	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400db29	     0xf84a0020000	                            je 0x400ddcf	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400db2f	          0x4c89ef	                            mov rdi, r13	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400db32	      0x4489442440	             mov dword [rsp + 0x40], r8d	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400db37	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400db3c	      0x4889742438	             mov qword [rsp + 0x38], rsi	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400db41	      0xe800000000	                          call 0x400db46	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x400db46	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	        59	string3.h	FUNCTION_121	CALL_3
0x400db4b	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        59	string3.h	FUNCTION_121	CALL_3
0x400db50	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_121	CALL_3
0x400db54	          0x4c01ce	                             add rsi, r9	        59	string3.h	FUNCTION_121	CALL_3
0x400db57	      0x498d7c3500	                    lea rdi, [r13 + rsi]	        59	string3.h	FUNCTION_121	CALL_3
0x400db5c	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_121	CALL_3
0x400db5f	      0xe800000000	                          call 0x400db64	        59	string3.h	FUNCTION_121	CALL_3
0x400db64	      0x4863542474	         movsxd rdx, dword [rsp + 0x74] 	        59	string3.h	FUNCTION_121	CALL_3
0x400db69	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_121	CALL_3
0x400db6c	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_121	CALL_3
0x400db6f	      0xe800000000	                          call 0x400db74	        59	string3.h	FUNCTION_121	CALL_3
0x400db74	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	        59	string3.h	FUNCTION_121	CALL_3
0x400db79	          0x4585c0	                           test r8d, r8d	      5096	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400db7c	            0x740b	                            je 0x400db89	      5096	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400db7e	      0x4863442474	         movsxd rax, dword [rsp + 0x74] 	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400db83	    0x41c64405002c	              mov byte [r13 + rax], 0x2c	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x400db89	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x400db8d	            0x85c0	                           test eax, eax	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x400db8f	     0xf85e8010000	                           jne 0x400dd7d	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x400db95	    0x48f704240000	               test qword [rsp], 0x40000	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400db9d	     0xf858b000000	                           jne 0x400dc2e	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400dba3	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400dba9	            0x740a	                            je 0x400dbb5	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400dbab	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400dbb0	      0x4889442468	             mov qword [rsp + 0x68], rax	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x400dbb5	    0x448b1d000000	           mov r11d, dword [0x0400dbbc] 	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbbc	          0x4d892f	                    mov qword [r15], r13	      5166	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400dbbf	          0x4585db	                         test r11d, r11d	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbc2	            0x7523	                           jne 0x400dbe7	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbc4	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbc9	        0x48c1e006	                              shl rax, 6	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbcd	    0x81b800000000	                 cmp dword [rax], 0x402c	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbd7	            0x740e	                            je 0x400dbe7	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbd9	          0x4d85e4	                           test r12, r12	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbdc	            0x7409	                            je 0x400dbe7	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbde	          0x4d85ed	                           test r13, r13	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbe1	     0xf85a7000000	                           jne 0x400dc8e	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x400dbe7	      0x448b442408	                mov r8d, dword [rsp + 8]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dbec	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dbf1	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dbf9	          0x4c89fe	                            mov rsi, r15	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dbfc	            0x89df	                            mov edi, ebx	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dbfe	            0x31ed	                            xor ebp, ebp	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400dc00	          0x4531e4	                          xor r12d, r12d	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400dc03	      0xe8988bffff	call sym.did_set_string_option.constprop.11	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dc08	          0x4885c0	                           test rax, rax	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400dc0b	          0x4989c5	                            mov r13, rax	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dc0e	     0xf84d3000000	                            je 0x400dce7	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400dc14	          0x4c89e7	                            mov rdi, r12	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400dc17	      0xe800000000	                          call 0x400dc1c	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400dc1c	          0x4889ef	                            mov rdi, rbp	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400dc1f	      0xe800000000	                          call 0x400dc24	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400dc24	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400dc29	      0xe96aefffff	                           jmp 0x400cb98	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400dc2e	        0x488b3424	                    mov rsi, qword [rsp]	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400dc32	      0x410fb64500	                   movzx eax, byte [r13]	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400dc37	          0x4c89ed	                            mov rbp, r13	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400dc3a	        0x895c2440	             mov dword [rsp + 0x40], ebx	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x400dc3e	          0x4889f1	                            mov rcx, rsi	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400dc41	    0x81e100800100	                        and ecx, 0x18000	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400dc47	        0x48890c24	                    mov qword [rsp], rcx	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400dc4b	          0x4889f1	                            mov rcx, rsi	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dc4e	        0x48c1e90f	                            shr rcx, 0xf	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dc52	          0x4889ca	                            mov rdx, rcx	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dc55	        0x4883f201	                              xor rdx, 1	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dc59	            0x89d1	                            mov ecx, edx	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dc5b	          0x83e101	                              and ecx, 1	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dc5e	        0x884c2438	               mov byte [rsp + 0x38], cl	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dc62	            0x84c0	                             test al, al	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400dc64	     0xf840a010000	                            je 0x400dd74	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x400dc6a	      0x48833c2400	                      cmp qword [rsp], 0	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400dc6f	     0xf84d4000000	                            je 0x400dd49	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x400dc75	            0x3c2c	                            cmp al, 0x2c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dc77	         0xfb65501	               movzx edx, byte [rbp + 1]	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dc7b	     0xf84b2000000	                            je 0x400dd33	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dc81	          0x80fa2c	                            cmp dl, 0x2c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dc84	            0x7479	                            je 0x400dcff	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dc86	        0x4883c501	                              add rbp, 1	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dc8a	            0x89d0	                            mov eax, edx	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400dc8c	            0xebd4	                           jmp 0x400dc62	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400dc8e	          0x4c89e7	                            mov rdi, r12	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x400dc91	      0xe800000000	                          call 0x400dc96	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x400dc96	          0x4c89ef	                            mov rdi, r13	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400dc99	          0x4989c4	                            mov r12, rax	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x400dc9c	      0xe800000000	                          call 0x400dca1	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400dca1	      0x448b442408	                mov r8d, dword [rsp + 8]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dca6	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dcab	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dcb3	          0x4c89fe	                            mov rsi, r15	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dcb6	            0x89df	                            mov edi, ebx	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dcb8	          0x4889c5	                            mov rbp, rax	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x400dcbb	      0xe8e08affff	call sym.did_set_string_option.constprop.11	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dcc0	          0x4885c0	                           test rax, rax	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400dcc3	          0x4989c5	                            mov r13, rax	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x400dcc6	     0xf8548ffffff	                           jne 0x400dc14	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x400dccc	          0x4d85e4	                           test r12, r12	      4331	option.c	FUNCTION_15	IF_1
0x400dccf	            0x7416	                            je 0x400dce7	      4331	option.c	FUNCTION_15	IF_1
0x400dcd1	          0x4885ed	                           test rbp, rbp	      4331	option.c	FUNCTION_15	IF_1
0x400dcd4	            0x7411	                            je 0x400dce7	      4331	option.c	FUNCTION_15	IF_1
0x400dcd6	        0x8b742408	                mov esi, dword [rsp + 8]	      4331	option.c	FUNCTION_15	IF_1
0x400dcda	          0x4889e9	                            mov rcx, rbp	      4331	option.c	FUNCTION_15	IF_1
0x400dcdd	          0x4c89e2	                            mov rdx, r12	      4331	option.c	FUNCTION_15	IF_1
0x400dce0	            0x89df	                            mov edi, ebx	      4331	option.c	FUNCTION_15	IF_1
0x400dce2	      0xe89951ffff	call sym.trigger_optionsset_string.part.5	      4331	option.c	FUNCTION_15	IF_1
0x400dce7	          0x4c89e7	                            mov rdi, r12	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400dcea	          0x4531ed	                          xor r13d, r13d	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400dced	      0xe800000000	                          call 0x400dcf2	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x400dcf2	          0x4889ef	                            mov rdi, rbp	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400dcf5	      0xe800000000	                          call 0x400dcfa	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400dcfa	      0xe992faffff	                           jmp 0x400d791	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x400dcff	        0x488d5d02	                      lea rbx, [rbp + 2]	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400dd03	           0xfb6f0	                           movzx esi, al	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400dd06	          0x4889df	                            mov rdi, rbx	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400dd09	      0xe800000000	                          call 0x400dd0e	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400dd0e	          0x4885c0	                           test rax, rax	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400dd11	            0x7429	                            je 0x400dd3c	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x400dd13	          0x4889df	                            mov rdi, rbx	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400dd16	      0xe800000000	                          call 0x400dd1b	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x400dd1b	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_121	CALL_3
0x400dd1f	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_121	CALL_3
0x400dd22	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_121	CALL_3
0x400dd25	      0xe800000000	                          call 0x400dd2a	        59	string3.h	FUNCTION_121	CALL_3
0x400dd2a	         0xfb64500	                   movzx eax, byte [rbp]	        59	string3.h	FUNCTION_121	CALL_3
0x400dd2e	      0xe92fffffff	                           jmp 0x400dc62	      5151	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dd33	        0x4883c501	                              add rbp, 1	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dd37	      0xe94effffff	                           jmp 0x400dc8a	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dd3c	         0xfb65501	               movzx edx, byte [rbp + 1]	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x400dd40	        0x4883c501	                              add rbp, 1	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dd44	      0xe941ffffff	                           jmp 0x400dc8a	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dd49	      0x807c243800	                cmp byte [rsp + 0x38], 0	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dd4e	            0x7504	                           jne 0x400dd54	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dd50	            0x3c2c	                            cmp al, 0x2c	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dd52	            0x74e8	                            je 0x400dd3c	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x400dd54	        0x488d5d01	                      lea rbx, [rbp + 1]	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd58	           0xfb6f0	                           movzx esi, al	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd5b	          0x4889df	                            mov rdi, rbx	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd5e	      0xe800000000	                          call 0x400dd63	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd63	          0x4885c0	                           test rax, rax	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd66	            0x75ab	                           jne 0x400dd13	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd68	         0xfb65501	               movzx edx, byte [rbp + 1]	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd6c	          0x4889dd	                            mov rbp, rbx	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd6f	      0xe916ffffff	                           jmp 0x400dc8a	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd74	        0x8b5c2440	            mov ebx, dword [rsp + 0x40] 	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd78	      0xe926feffff	                           jmp 0x400dba3	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x400dd7d	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_126	CALL_3
0x400dd80	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_126	CALL_3
0x400dd83	      0xe800000000	                          call 0x400dd88	       110	string3.h	FUNCTION_126	CALL_3
0x400dd88	        0x807d0000	                       cmp byte [rbp], 0	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x400dd8c	     0xf8403feffff	                            je 0x400db95	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x400dd92	    0x48f704240080	                test qword [rsp], 0x8000	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x400dd9a	            0x755a	                           jne 0x400ddf6	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x400dd9c	      0x4863742474	         movsxd rsi, dword [rsp + 0x74] 	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x400dda1	          0x4801ee	                            add rsi, rbp	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x400dda4	          0x4889f7	                            mov rdi, rsi	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400dda7	      0x4889742438	             mov qword [rsp + 0x38], rsi	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ddac	      0xe800000000	                          call 0x400ddb1	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x400ddb1	          0x4889e9	                            mov rcx, rbp	        59	string3.h	FUNCTION_121	CALL_3
0x400ddb4	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        59	string3.h	FUNCTION_121	CALL_3
0x400ddb9	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_121	CALL_3
0x400ddbd	          0x4c29e1	                            sub rcx, r12	        59	string3.h	FUNCTION_121	CALL_3
0x400ddc0	      0x498d7c0d00	                    lea rdi, [r13 + rcx]	        59	string3.h	FUNCTION_121	CALL_3
0x400ddc5	      0xe800000000	                          call 0x400ddca	        59	string3.h	FUNCTION_121	CALL_3
0x400ddca	      0xe9c6fdffff	                           jmp 0x400db95	        59	string3.h	FUNCTION_121	CALL_3
0x400ddcf	    0x41807c34ff2c	         cmp byte [r12 + rsi - 1], 0x2c 	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400ddd5	     0xf8554fdffff	                           jne 0x400db2f	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400dddb	    0x41807c34fe5c	         cmp byte [r12 + rsi - 2], 0x5c 	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400dde1	     0xf8448fdffff	                            je 0x400db2f	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400dde7	          0x83e801	                              sub eax, 1	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400ddea	        0x89442474	             mov dword [rsp + 0x74], eax	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400ddee	          0x4863f0	                         movsxd rsi, eax	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400ddf1	      0xe939fdffff	                           jmp 0x400db2f	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400ddf6	          0x4939ec	                            cmp r12, rbp	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x400ddf9	            0x747a	                            je 0x400de75	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x400ddfb	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400ddff	        0x4883ed01	                              sub rbp, 1	      5119	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400de03	          0x83c001	                              add eax, 1	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400de06	        0x89442474	             mov dword [rsp + 0x74], eax	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400de0a	            0x4898	                                    cdqe	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400de0c	      0x488d740500	                    lea rsi, [rbp + rax]	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400de11	            0xeb91	                           jmp 0x400dda4	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400de13	          0x4863f0	                         movsxd rsi, eax	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x400de16	    0x41b901000000	                              mov r9d, 1	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x400de1c	    0x41b801000000	                              mov r8d, 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400de22	      0xe908fdffff	                           jmp 0x400db2f	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400de27	          0x4c89ef	                            mov rdi, r13	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400de2a	      0x4489442440	             mov dword [rsp + 0x40], r8d	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400de2f	      0x4889742448	             mov qword [rsp + 0x48], rsi	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400de34	      0xe800000000	                          call 0x400de39	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400de39	          0x4c89e7	                            mov rdi, r12	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400de3c	        0x89442474	             mov dword [rsp + 0x74], eax	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400de40	      0x4889442438	             mov qword [rsp + 0x38], rax	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x400de45	      0xe800000000	                          call 0x400de4a	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x400de4a	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	        59	string3.h	FUNCTION_121	CALL_3
0x400de4f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	        59	string3.h	FUNCTION_121	CALL_3
0x400de54	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_121	CALL_3
0x400de58	          0x4963f9	                         movsxd rdi, r9d	        59	string3.h	FUNCTION_121	CALL_3
0x400de5b	          0x4801fe	                            add rsi, rdi	        59	string3.h	FUNCTION_121	CALL_3
0x400de5e	      0x498d7c3500	                    lea rdi, [r13 + rsi]	        59	string3.h	FUNCTION_121	CALL_3
0x400de63	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_121	CALL_3
0x400de66	      0xe800000000	                          call 0x400de6b	        59	string3.h	FUNCTION_121	CALL_3
0x400de6b	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	        59	string3.h	FUNCTION_121	CALL_3
0x400de70	      0xe904fdffff	                           jmp 0x400db79	        59	string3.h	FUNCTION_121	CALL_3
0x400de75	      0x4863742474	         movsxd rsi, dword [rsp + 0x74] 	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de7a	          0x4c89e5	                            mov rbp, r12	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de7d	          0x4889f0	                            mov rax, rsi	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de80	          0x4c01e6	                            add rsi, r12	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de83	          0x803e2c	                    cmp byte [rsi], 0x2c	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de86	     0xf8518ffffff	                           jne 0x400dda4	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de8c	          0x83c001	                              add eax, 1	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de8f	        0x89442474	             mov dword [rsp + 0x74], eax	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de93	            0x4898	                                    cdqe	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de95	        0x498d3404	                    lea rsi, [r12 + rax]	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de99	      0xe906ffffff	                           jmp 0x400dda4	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x400de9e	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400dea2	            0x31f6	                            xor esi, esi	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400dea4	          0x4531c0	                            xor r8d, r8d	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400dea7	            0x85d2	                           test edx, edx	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400dea9	     0xf8478ffffff	                            je 0x400de27	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x400deaf	          0x4c89e7	                            mov rdi, r12	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400deb2	      0xe800000000	                          call 0x400deb7	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400deb7	          0x4531c9	                            xor r9d, r9d	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400deba	        0x89442474	             mov dword [rsp + 0x74], eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400debe	          0x4863f0	                         movsxd rsi, eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400dec1	          0x4531c0	                            xor r8d, r8d	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400dec4	      0xe966fcffff	                           jmp 0x400db2f	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x400dec9	        0x41f6c001	                             test r8b, 1	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400decd	     0xf8465fbffff	                            je 0x400da38	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x400ded3	          0x4939ea	                            cmp r10, rbp	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400ded6	     0xf82d9f5ffff	                            jb 0x400d4b5	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400dedc	      0xe9c8f5ffff	                           jmp 0x400d4a9	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x400dee1	        0xf64001df	               test byte [rax + 1], 0xdf	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400dee5	     0xf8545f4ffff	                           jne 0x400d330	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400deeb	      0xb870000000	                           mov eax, 0x70	       110	string3.h	FUNCTION_126	CALL_3
0x400def0	    0xc78424900000	     mov dword [rsp + 0x90], 0x6c65683a 	       110	string3.h	FUNCTION_126	CALL_3
0x400defb	    0x668984249400	               mov word [rsp + 0x94], ax	       110	string3.h	FUNCTION_126	CALL_3
0x400df03	    0x488d84249000	                   lea rax, [rsp + 0x90]	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400df0b	      0x4889442468	             mov qword [rsp + 0x68], rax	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400df10	          0x4889c7	                            mov rdi, rax	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400df13	      0xe94df4ffff	                           jmp 0x400d365	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400df18	      0xbf00000000	                              mov edi, 0	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x400df1d	      0xe800000000	                          call 0x400df22	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x400df22	    0x488905000000	            mov qword [0x0400df29], rax 	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x400df29	      0xe955f9ffff	                           jmp 0x400d883	      4913	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x400df2e	    0x4c8b25000000	            mov r12, qword [0x0400df35] 	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400df35	      0x4c89642420	             mov qword [rsp + 0x20], r12	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400df3a	      0xe966f9ffff	                           jmp 0x400d8a5	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x400df3f	          0x4c89ee	                            mov rsi, r13	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400df42	            0x89df	                            mov edi, ebx	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400df44	      0xe8572dffff	                  call sym.option_expand	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400df49	          0x4885c0	                           test rax, rax	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400df4c	          0x4889c5	                            mov rbp, rax	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400df4f	            0x7463	                            je 0x400dfb4	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400df51	          0x4c89ef	                            mov rdi, r13	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400df54	      0xe800000000	                          call 0x400df59	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400df59	          0x4889ef	                            mov rdi, rbp	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400df5c	      0xe800000000	                          call 0x400df61	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400df61	          0x8d7801	                      lea edi, [rax + 1]	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400df64	      0xe9ccf4ffff	                           jmp 0x400d435	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400df69	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400df6d	            0x85c0	                           test eax, eax	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400df6f	     0xf8544fbffff	                           jne 0x400dab9	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400df75	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400df7d	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400df85	      0xe90bfcffff	                           jmp 0x400db95	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x400df8a	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	        59	string3.h	FUNCTION_121	CALL_3
0x400df8f	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_121	CALL_3
0x400df92	          0x4863d0	                         movsxd rdx, eax	        59	string3.h	FUNCTION_121	CALL_3
0x400df95	      0xe800000000	                          call 0x400df9a	        59	string3.h	FUNCTION_121	CALL_3
0x400df9a	      0x4863442474	         movsxd rax, dword [rsp + 0x74] 	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400df9f	          0x4889c7	                            mov rdi, rax	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400dfa2	      0x48037c2468	             add rdi, qword [rsp + 0x68]	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400dfa7	          0x4801c5	                            add rbp, rax	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400dfaa	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400dfaf	      0xe92ef4ffff	                           jmp 0x400d3e2	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400dfb4	    0xc74424740000	               mov dword [rsp + 0x74], 0	      5033	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400dfbc	      0xe9a0f4ffff	                           jmp 0x400d461	      5033	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400dfc1	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfc6	      0xbe02000000	                              mov esi, 2	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfcb	        0x48c1e706	                              shl rdi, 6	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfcf	    0x4881c7000000	                              add rdi, 0	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfd6	      0xe88544ffff	                 call sym.get_varp_scope	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfdb	          0x488b38	                    mov rdi, qword [rax]	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfde	      0xe800000000	                          call 0x400dfe3	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfe3	          0x4989c5	                            mov r13, rax	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfe6	      0xe9cafbffff	                           jmp 0x400dbb5	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x400dfeb	        0x488b0424	                    mov rax, qword [rsp]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400dfef	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400dff3	            0x31d2	                            xor edx, edx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400dff5	        0x48c1e80a	                            shr rax, 0xa	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400dff9	        0x4883f001	                              xor rax, 1	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400dffd	            0x85c9	                           test ecx, ecx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400dfff	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400e004	           0xf94c2	                                 sete dl	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400e007	          0x4821d0	                            and rax, rdx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400e00a	    0x4981ff000000	                              cmp r15, 0	      4849	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x400e011	      0x488d44c804	              lea rax, [rax + rcx*8 + 4]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400e016	    0x488b2cc50000	                  mov rbp, qword [rax*8]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400e01e	            0x7464	                            je 0x400e084	      4849	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x400e020	          0x4885ed	                           test rbp, rbp	      4864	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x400e023	    0x4c8b2d000000	            mov r13, qword [0x0400e02a] 	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x400e02a	     0xf8485fbffff	                            je 0x400dbb5	      4864	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x400e030	          0x4889ee	                            mov rsi, rbp	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x400e033	            0x89df	                            mov edi, ebx	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x400e035	      0xe8662cffff	                  call sym.option_expand	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x400e03a	          0x4885c0	                           test rax, rax	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x400e03d	        0x480f45e8	                         cmovne rbp, rax	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x400e041	          0x4889ef	                            mov rdi, rbp	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400e044	      0xe800000000	                          call 0x400e049	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400e049	          0x4989c5	                            mov r13, rax	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400e04c	      0xe964fbffff	                           jmp 0x400dbb5	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x400e051	          0x4d8b27	                    mov r12, qword [r15]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400e054	      0x4c89642420	             mov qword [rsp + 0x20], r12	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400e059	      0xe99ef2ffff	                           jmp 0x400d2fc	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400e05e	          0x4863c3	                         movsxd rax, ebx	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400e061	          0x4d8b27	                    mov r12, qword [r15]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400e064	      0x4889442430	             mov qword [rsp + 0x30], rax	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400e069	        0x48c1e006	                              shl rax, 6	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400e06d	    0xf68000000000	                   test byte [rax], 0x10	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400e074	      0x4c89642420	             mov qword [rsp + 0x20], r12	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400e079	     0xf847df2ffff	                            je 0x400d2fc	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400e07f	      0xe94df2ffff	                           jmp 0x400d2d1	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400e084	    0x8b0500000000	            mov eax, dword [0x0400e08a] 	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x400e08a	            0x85c0	                           test eax, eax	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x400e08c	     0xf845b030000	                            je 0x400e3ed	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x400e092	    0x488b3d000000	            mov rdi, qword [0x0400e099] 	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x400e099	      0xbd00000000	                              mov ebp, 0	      4258	option.c	FUNCTION_12
0x400e09e	      0xe800000000	                          call 0x400e0a3	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x400e0a3	          0x83f87f	                           cmp eax, 0x7f	      4258	option.c	FUNCTION_12
0x400e0a6	      0xb800000000	                              mov eax, 0	      4258	option.c	FUNCTION_12
0x400e0ab	        0x480f4ce8	                          cmovl rbp, rax	      4258	option.c	FUNCTION_12
0x400e0af	      0xe97cffffff	                           jmp 0x400e030	      4258	option.c	FUNCTION_12
0x400e0b4	        0x4183fd26	                          cmp r13d, 0x26	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x400e0b8	     0xf840f030000	                            je 0x400e3cd	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x400e0be	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400e0c3	        0x488d5801	                      lea rbx, [rax + 1]	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400e0c7	      0x48895c2468	             mov qword [rsp + 0x68], rbx	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400e0cc	         0xfb66801	               movzx ebp, byte [rax + 1]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0d0	          0x4084ed	                           test bpl, bpl	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0d3	            0x752a	                           jne 0x400e0ff	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0d5	      0xe99e020000	                           jmp 0x400e378	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0da	        0x4080fd09	                              cmp bpl, 9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0de	     0xf8494020000	                            je 0x400e378	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0e4	        0x4080fd5c	                           cmp bpl, 0x5c	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e0e8	     0xf84cc020000	                            je 0x400e3ba	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e0ee	         0xfb66b01	               movzx ebp, byte [rbx + 1]	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e0f2	        0x4883c301	                              add rbx, 1	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0f6	          0x4084ed	                           test bpl, bpl	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0f9	     0xf8477020000	                            je 0x400e376	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e0ff	        0x4080fd20	                           cmp bpl, 0x20	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e103	            0x75d5	                           jne 0x400e0da	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e105	      0xe96e020000	                           jmp 0x400e378	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e10a	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400e10f	        0x4183fd26	                          cmp r13d, 0x26	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e113	        0x488d7a01	                      lea rdi, [rdx + 1]	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400e117	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400e11c	     0xf84ee020000	                            je 0x400e410	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e122	        0x4183fd3c	                          cmp r13d, 0x3c	      4754	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x400e126	     0xf8451010000	                            je 0x400e27d	      4754	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x400e12c	    0x4981ff000000	                              cmp r15, 0	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e133	         0xfb64201	               movzx eax, byte [rdx + 1]	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e137	     0xf84d4000000	                            je 0x400e211	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e13d	    0x4981ff000000	                              cmp r15, 0	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e144	     0xf84c7000000	                            je 0x400e211	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e14a	          0x8d50d0	                   lea edx, [rax - 0x30]	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400e14d	          0x80fa09	                               cmp dl, 9	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400e150	            0x760e	                           jbe 0x400e160	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400e152	            0x3c2d	                            cmp al, 0x2d	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400e154	    0x41bd00000000	                             mov r13d, 0	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x400e15a	     0xf8538eaffff	                           jne 0x400cb98	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x400e160	        0x4883ec08	                              sub rsp, 8	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400e164	          0x4531c9	                            xor r9d, r9d	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400e167	            0x31f6	                            xor esi, esi	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400e169	            0x6a00	                                  push 0	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400e16b	      0xb907000000	                              mov ecx, 7	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400e170	    0x4c8d84248800	                    lea r8, [rsp + 0x88]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400e178	    0x488d94248400	                   lea rdx, [rsp + 0x84]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400e180	      0xe800000000	                          call 0x400e185	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x400e185	    0x486384248400	         movsxd rax, dword [rsp + 0x84] 	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e18d	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e192	            0x4159	                                  pop r9	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e194	            0x415a	                                 pop r10	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e196	         0xfb60407	             movzx eax, byte [rdi + rax]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e19a	            0xa8df	                           test al, 0xdf	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e19c	            0x7563	                           jne 0x400e201	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e19e	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e1a3	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400e1a8	          0x4585c0	                           test r8d, r8d	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400e1ab	            0x7408	                            je 0x400e1b5	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400e1ad	          0x490317	                    add rdx, qword [r15]	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400e1b0	      0x4889542478	             mov qword [rsp + 0x78], rdx	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x400e1b5	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400e1b9	            0x85ff	                           test edi, edi	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400e1bb	            0x7409	                            je 0x400e1c6	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400e1bd	        0x490faf17	                   imul rdx, qword [r15]	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400e1c1	      0x4889542478	             mov qword [rsp + 0x78], rdx	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x400e1c6	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400e1ca	            0x85f6	                           test esi, esi	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400e1cc	            0x740e	                            je 0x400e1dc	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400e1ce	          0x498b07	                    mov rax, qword [r15]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400e1d1	          0x4829d0	                            sub rax, rdx	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400e1d4	          0x4889c2	                            mov rdx, rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400e1d7	      0x4889442478	             mov qword [rsp + 0x78], rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x400e1dc	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400e1e1	    0x488d8c249000	                   lea rcx, [rsp + 0x90]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400e1e9	    0x41b850000000	                           mov r8d, 0x50	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400e1ef	          0x4c89fe	                            mov rsi, r15	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400e1f2	            0x89df	                            mov edi, ebx	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400e1f4	      0xe8b775ffff	                 call sym.set_num_option	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400e1f9	          0x4989c5	                            mov r13, rax	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400e1fc	      0xe98bf5ffff	                           jmp 0x400d78c	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x400e201	            0x3c09	                               cmp al, 9	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e203	    0x41bd00000000	                             mov r13d, 0	      4788	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58
0x400e209	     0xf8589e9ffff	                           jne 0x400cb98	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e20f	            0xeb8d	                           jmp 0x400e19e	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x400e211	            0x3c3c	                            cmp al, 0x3c	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e213	            0x7433	                            je 0x400e248	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e215	            0x3c5e	                            cmp al, 0x5e	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e217	            0x742f	                            je 0x400e248	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e219	            0x84c0	                             test al, al	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e21b	    0x41bd00000000	                             mov r13d, 0	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x400e221	     0xf8471e9ffff	                            je 0x400cb98	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x400e227	         0xfb65202	               movzx edx, byte [rdx + 2]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400e22b	          0xf6c2df	                           test dl, 0xdf	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400e22e	            0x7409	                            je 0x400e239	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400e230	          0x80fa09	                               cmp dl, 9	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400e233	     0xf8511ffffff	                           jne 0x400e14a	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x400e239	           0xfb6d0	                           movzx edx, al	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400e23c	          0x83ea30	                           sub edx, 0x30	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400e23f	          0x83fa09	                              cmp edx, 9	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400e242	     0xf8602ffffff	                           jbe 0x400e14a	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x400e248	            0x31f6	                            xor esi, esi	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x400e24a	      0xe800000000	                          call 0x400e24f	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x400e24f	    0x4981ff000000	                              cmp r15, 0	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400e256	          0x4863d0	                         movsxd rdx, eax	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x400e259	      0x4889542478	             mov qword [rsp + 0x78], rdx	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x400e25e	     0xf843fffffff	                            je 0x400e1a3	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400e264	          0x4885d2	                           test rdx, rdx	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400e267	     0xf8536ffffff	                           jne 0x400e1a3	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400e26d	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400e272	    0x41bd00000000	                             mov r13d, 0	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400e278	      0xe91be9ffff	                           jmp 0x400cb98	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400e27d	    0x488b05000000	            mov rax, qword [0x0400e284] 	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400e284	    0x480548160000	                         add rax, 0x1648	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400e28a	          0x4939c7	                            cmp r15, rax	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400e28d	            0x750b	                           jne 0x400e29a	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400e28f	      0x837c240804	                  cmp dword [rsp + 8], 4	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400e294	     0xf84ac010000	                            je 0x400e446	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400e29a	          0x4863fb	                         movsxd rdi, ebx	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e29d	      0xbe02000000	                              mov esi, 2	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e2a2	        0x48c1e706	                              shl rdi, 6	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e2a6	    0x4881c7000000	                              add rdi, 0	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e2ad	      0xe8ae41ffff	                 call sym.get_varp_scope	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e2b2	          0x488b10	                    mov rdx, qword [rax]	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e2b5	      0x4889542478	             mov qword [rsp + 0x78], rdx	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e2ba	      0xe9e4feffff	                           jmp 0x400e1a3	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e2bf	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x400e2c4	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x400e2cc	    0x41bd00000000	                             mov r13d, 0	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40	CALL_40
0x400e2d2	      0xe9c1e8ffff	                           jmp 0x400cb98	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40	CALL_40
0x400e2d7	    0x488b15000000	            mov rdx, qword [0x0400e2de] 	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400e2de	      0x25ff0f0000	                          and eax, 0xfff	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400e2e3	    0x8bbc82ac1200	  mov edi, dword [rdx + rax*4 + 0x12ac] 	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400e2ea	      0xe800000000	                          call 0x400e2ef	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400e2ef	      0xe965f3ffff	                           jmp 0x400d659	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x400e2f4	    0x488b15000000	            mov rdx, qword [0x0400e2fb] 	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400e2fb	      0x25ff0f0000	                          and eax, 0xfff	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400e300	    0x8bbc82d00200	   mov edi, dword [rdx + rax*4 + 0x2d0] 	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400e307	      0xe800000000	                          call 0x400e30c	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400e30c	      0xe948f3ffff	                           jmp 0x400d659	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x400e311	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400e314	      0xe800000000	                          call 0x400e319	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400e319	      0xe93bf3ffff	                           jmp 0x400d659	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x400e31e	    0x488b05000000	            mov rax, qword [0x0400e325] 	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e325	    0x480518160000	                         add rax, 0x1618	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e32b	          0x4939c7	                            cmp r15, rax	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e32e	            0x7507	                           jne 0x400e337	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e330	      0x837c240804	                  cmp dword [rsp + 8], 4	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e335	            0x7428	                            je 0x400e35f	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e337	          0x4863fb	                         movsxd rdi, ebx	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e33a	      0xbe02000000	                              mov esi, 2	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e33f	        0x48c1e706	                              shl rdi, 6	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e343	    0x4881c7000000	                              add rdi, 0	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e34a	      0xe81141ffff	                 call sym.get_varp_scope	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e34f	          0x486300	                 movsxd rax, dword [rax]	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e352	          0x4889c2	                            mov rdx, rax	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e355	      0x4889442478	             mov qword [rsp + 0x78], rax	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e35a	      0xe91cf4ffff	                           jmp 0x400d77b	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x400e35f	    0x48c7442478ff	mov qword [rsp + 0x78], 0xffffffffffffffff	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e368	      0xbaffffffff	                     mov edx, 0xffffffff	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e36d	      0xe909f4ffff	                           jmp 0x400d77b	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x400e372	        0x4883c301	                              add rbx, 1	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x400e376	            0x31ed	                            xor ebp, ebp	      5216	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e378	          0xc60300	                       mov byte [rbx], 0	      5218	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400e37b	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400e380	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400e388	            0x31d2	                            xor edx, edx	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400e38a	          0x4531ed	                          xor r13d, r13d	      4396	option.c	FUNCTION_16	WHILE_1
0x400e38d	      0xe800000000	                          call 0x400e392	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x400e392	          0x40882b	                     mov byte [rbx], bpl	      5220	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x400e395	    0x8b0500000000	            mov eax, dword [0x0400e39b] 	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x400e39b	            0x85c0	                           test eax, eax	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x400e39d	            0x7407	                            je 0x400e3a6	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x400e39f	            0x31ff	                            xor edi, edi	      5223	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x400e3a1	      0xe800000000	                          call 0x400e3a6	      5223	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x400e3a6	      0xbf32000000	                           mov edi, 0x32	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x400e3ab	      0xe800000000	                          call 0x400e3b0	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x400e3b0	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x400e3b5	      0xe9dee7ffff	                           jmp 0x400cb98	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x400e3ba	        0x807b0100	                   cmp byte [rbx + 1], 0	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e3be	            0x74b2	                            je 0x400e372	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e3c0	         0xfb66b02	               movzx ebp, byte [rbx + 2]	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e3c4	        0x4883c301	                              add rbx, 1	      5216	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e3c8	      0xe925fdffff	                           jmp 0x400e0f2	      5216	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x400e3cd	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x400e3d5	      0xbe01000000	                              mov esi, 1	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x400e3da	    0x41bd00000000	                             mov r13d, 0	      4396	option.c	FUNCTION_16	WHILE_1
0x400e3e0	      0xe800000000	                          call 0x400e3e5	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x400e3e5	            0x85c0	                           test eax, eax	      4396	option.c	FUNCTION_16	WHILE_1
0x400e3e7	        0x4d0f45ec	                         cmovne r13, r12	      4396	option.c	FUNCTION_16	WHILE_1
0x400e3eb	            0xeba8	                           jmp 0x400e395	      4396	option.c	FUNCTION_16	WHILE_1
0x400e3ed	      0xe8be43ffff	                call sym.term_bg_default	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x400e3f2	          0x4889c5	                            mov rbp, rax	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x400e3f5	      0xe926fcffff	                           jmp 0x400e020	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x400e3fa	        0x4883c203	                              add rdx, 3	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400e3fe	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      4607	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400e406	      0x4889542468	             mov qword [rsp + 0x68], rdx	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400e40b	      0xe90deeffff	                           jmp 0x400d21d	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x400e410	        0x488b0424	                    mov rax, qword [rsp]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e414	      0x448b5c242c	           mov r11d, dword [rsp + 0x2c] 	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e419	            0x31d2	                            xor edx, edx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e41b	        0x48c1e80a	                            shr rax, 0xa	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e41f	        0x4883f001	                              xor rax, 1	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e423	          0x4585db	                         test r11d, r11d	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e426	           0xf94c2	                                 sete dl	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e429	          0x4821d0	                            and rax, rdx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e42c	          0x4863d3	                         movsxd rdx, ebx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e42f	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e434	    0x488b14c50000	                  mov rdx, qword [rax*8]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e43c	      0x4889542478	             mov qword [rsp + 0x78], rdx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e441	      0xe95dfdffff	                           jmp 0x400e1a3	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x400e446	    0x48c7442478c0	mov qword [rsp + 0x78], 0xfffffffffffe1dc0	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400e44f	    0x48c7c2c01dfe	             mov rdx, 0xfffffffffffe1dc0	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x400e456	      0xe948fdffff	                           jmp 0x400e1a3	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
vimrc_found	WHILE,0:FOR,1:ELSE,1:SWITCH,0:CALL,10:IF,6:functions,0:DO,0	76
0x400b470	            0x4155	                                push r13	     12196	option.c	FUNCTION_100
0x400b472	            0x4154	                                push r12	     12196	option.c	FUNCTION_100
0x400b474	          0x4989fc	                            mov r12, rdi	     12196	option.c	FUNCTION_100
0x400b477	              0x55	                                push rbp	     12196	option.c	FUNCTION_100
0x400b478	              0x53	                                push rbx	     12196	option.c	FUNCTION_100
0x400b479	      0xbf00000000	                              mov edi, 0	     12256	option.c	FUNCTION_102	CALL_1
0x400b47e	          0x4989f5	                            mov r13, rsi	     12196	option.c	FUNCTION_100
0x400b481	        0x4883ec18	                           sub rsp, 0x18	     12196	option.c	FUNCTION_100
0x400b485	    0x64488b042528	                mov rax, qword fs:[0x28]	     12196	option.c	FUNCTION_100
0x400b48e	      0x4889442408	                mov qword [rsp + 8], rax	     12196	option.c	FUNCTION_100
0x400b493	            0x31c0	                            xor eax, eax	     12196	option.c	FUNCTION_100
0x400b495	    0xc74424040000	                  mov dword [rsp + 4], 0	     12198	option.c	FUNCTION_100
0x400b49d	      0xe80e50ffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x400b4a2	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x400b4a4	            0x780f	                            js 0x400b4b5	     12257	option.c	FUNCTION_102	IF_1
0x400b4a6	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x400b4a8	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x400b4ac	    0xf68000000000	                      test byte [rax], 1	     12259	option.c	FUNCTION_102	IF_2
0x400b4b3	            0x755b	                           jne 0x400b510	     12259	option.c	FUNCTION_102	IF_2
0x400b4b5	    0xc70500000000	               mov dword [0x0400b4bf], 0	     12203	option.c	FUNCTION_100	IF_1
0x400b4bf	      0xbb00000000	                              mov ebx, 0	     12203	option.c	FUNCTION_100	IF_1
0x400b4c4	            0x31ed	                            xor ebp, ebp	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400b4c6	            0xeb0f	                           jmp 0x400b4d7	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400b4c8	     0xf1f84000000	                   nop dword [rax + rax]	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400b4d0	          0x83c501	                              add ebp, 1	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400b4d3	        0x4883c340	                           add rbx, 0x40	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400b4d7	          0x488b03	                    mov rax, qword [rbx]	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400b4da	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400b4dd	            0x7421	                            je 0x400b500	     10375	option.c	FUNCTION_73
0x400b4df	    0x48f743100005	         test qword [rbx + 0x10], 0x500 	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400b4e7	            0x75e7	                           jne 0x400b4d0	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400b4e9	            0x31d2	                            xor edx, edx	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400b4eb	      0xbe01000000	                              mov esi, 1	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400b4f0	            0x89ef	                            mov edi, ebp	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400b4f2	      0xe81991ffff	             call sym.set_option_default	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400b4f7	            0xebd7	                           jmp 0x400b4d0	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400b4f9	     0xf1f80000000	                         nop dword [rax]	     12206	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400b500	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400b504	            0x75d9	                           jne 0x400b4df	     10375	option.c	FUNCTION_73
0x400b506	      0xe8b580ffff	                 call sym.didset_options	     12207	option.c	FUNCTION_100	IF_1	CALL_4
0x400b50b	      0xe8e05cffff	                call sym.didset_options2	     12208	option.c	FUNCTION_100	IF_1	CALL_5
0x400b510	          0x4d85e4	                           test r12, r12	     12211	option.c	FUNCTION_100	IF_3
0x400b513	            0x741a	                            je 0x400b52f	     12211	option.c	FUNCTION_100	IF_3
0x400b515	      0x488d742404	                      lea rsi, [rsp + 4]	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400b51a	          0x4c89ef	                            mov rdi, r13	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400b51d	      0xe800000000	                          call 0x400b522	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400b522	          0x4885c0	                           test rax, rax	     12214	option.c	FUNCTION_100	IF_3	IF_4
0x400b525	            0x742d	                            je 0x400b554	     12214	option.c	FUNCTION_100	IF_3	IF_4
0x400b527	        0x8b542404	                mov edx, dword [rsp + 4]	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400b52b	            0x85d2	                           test edx, edx	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400b52d	            0x751b	                           jne 0x400b54a	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400b52f	      0x488b442408	                mov rax, qword [rsp + 8]	     12227	option.c	FUNCTION_100
0x400b534	    0x644833042528	                xor rax, qword fs:[0x28]	     12227	option.c	FUNCTION_100
0x400b53d	            0x753c	                           jne 0x400b57b	     12227	option.c	FUNCTION_100
0x400b53f	        0x4883c418	                           add rsp, 0x18	     12227	option.c	FUNCTION_100
0x400b543	              0x5b	                                 pop rbx	     12227	option.c	FUNCTION_100
0x400b544	              0x5d	                                 pop rbp	     12227	option.c	FUNCTION_100
0x400b545	            0x415c	                                 pop r12	     12227	option.c	FUNCTION_100
0x400b547	            0x415d	                                 pop r13	     12227	option.c	FUNCTION_100
0x400b549	              0xc3	                                     ret	     12227	option.c	FUNCTION_100
0x400b54a	          0x4889c7	                            mov rdi, rax	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400b54d	      0xe800000000	                          call 0x400b552	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400b552	            0xebdb	                           jmp 0x400b52f	     12227	option.c	FUNCTION_100
0x400b554	            0x31f6	                            xor esi, esi	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400b556	          0x4c89e7	                            mov rdi, r12	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400b559	      0xe800000000	                          call 0x400b55e	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400b55e	          0x4885c0	                           test rax, rax	     12218	option.c	FUNCTION_100	IF_3	IF_4	IF_5
0x400b561	          0x4889c3	                            mov rbx, rax	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400b564	            0x74c9	                            je 0x400b52f	     12218	option.c	FUNCTION_100	IF_3	IF_4	IF_5
0x400b566	          0x4c89ef	                            mov rdi, r13	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400b569	          0x4889c6	                            mov rsi, rax	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400b56c	      0xe800000000	                          call 0x400b571	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400b571	          0x4889df	                            mov rdi, rbx	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400b574	      0xe800000000	                          call 0x400b579	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400b579	            0xebb4	                           jmp 0x400b52f	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400b57b	      0xe800000000	              call sym.change_compatible	     12227	option.c	FUNCTION_100
set_options_default	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,5:IF,1:functions,0:DO,0	56
0x40047f0	            0x4154	                                push r12	      3837	option.c	FUNCTION_3
0x40047f2	          0x4189fc	                           mov r12d, edi	      3837	option.c	FUNCTION_3
0x40047f5	              0x55	                                push rbp	      3837	option.c	FUNCTION_3
0x40047f6	            0x31ed	                            xor ebp, ebp	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x40047f8	              0x53	                                push rbx	      3837	option.c	FUNCTION_3
0x40047f9	      0xbb00000000	                              mov ebx, 0	      3837	option.c	FUNCTION_3
0x40047fe	            0xeb44	                           jmp 0x4004844	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004800	        0xf6431040	           test byte [rbx + 0x10], 0x40 	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4004804	            0x7537	                           jne 0x400483d	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4004806	          0x4585e4	                         test r12d, r12d	      3845	option.c	FUNCTION_3	FOR_1	IF_1
0x4004809	            0x7422	                            je 0x400482d	      3845	option.c	FUNCTION_3	FOR_1	IF_1
0x400480b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3848	option.c	FUNCTION_3	FOR_1	IF_1
0x400480f	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004815	           0xf95c1	                                setne cl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004818	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400481e	           0xf95c2	                                setne dl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004821	            0x84d1	                             test cl, dl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004823	            0x7418	                            je 0x400483d	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x4004825	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400482b	            0x7410	                            je 0x400483d	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400482d	    0x8b1500000000	            mov edx, dword [0x04004833] 	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4004833	          0x4489e6	                           mov esi, r12d	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4004836	            0x89ef	                            mov edi, ebp	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x4004838	      0xe8d3fdffff	             call sym.set_option_default	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x400483d	          0x83c501	                              add ebp, 1	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004840	        0x4883c340	                           add rbx, 0x40	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004844	          0x488b03	                    mov rax, qword [rbx]	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4004847	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400484a	            0x75b4	                           jne 0x4004800	     10375	option.c	FUNCTION_73
0x400484c	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4004850	            0x75ae	                           jne 0x4004800	     10375	option.c	FUNCTION_73
0x4004852	    0x488b2d000000	            mov rbp, qword [0x04004859] 	      3860	option.c	FUNCTION_3	CALL_3
0x4004859	          0x4885ed	                           test rbp, rbp	      3860	option.c	FUNCTION_3	CALL_3
0x400485c	            0x742c	                            je 0x400488a	      3860	option.c	FUNCTION_3	CALL_3
0x400485e	            0x6690	                                     nop	      3860	option.c	FUNCTION_3	CALL_3
0x4004860	    0x48392d000000	            cmp qword [0x04004867], rbp 	      3860	option.c	FUNCTION_3	CALL_3
0x4004867	            0x7437	                            je 0x40048a0	      3860	option.c	FUNCTION_3	CALL_3
0x4004869	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x400486d	            0xeb0d	                           jmp 0x400487c	      3860	option.c	FUNCTION_3	CALL_3
0x400486f	              0x90	                                     nop	      3860	option.c	FUNCTION_3	CALL_3
0x4004870	          0x4889df	                            mov rdi, rbx	      3861	option.c	FUNCTION_3	CALL_4
0x4004873	      0xe800000000	                          call 0x4004878	      3861	option.c	FUNCTION_3	CALL_4
0x4004878	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x400487c	          0x4885db	                           test rbx, rbx	      3860	option.c	FUNCTION_3	CALL_3
0x400487f	            0x75ef	                           jne 0x4004870	      3860	option.c	FUNCTION_3	CALL_3
0x4004881	        0x488b6d00	                    mov rbp, qword [rbp]	      3860	option.c	FUNCTION_3	CALL_3
0x4004885	          0x4885ed	                           test rbp, rbp	      3860	option.c	FUNCTION_3	CALL_3
0x4004888	            0x75d6	                           jne 0x4004860	      3860	option.c	FUNCTION_3	CALL_3
0x400488a	              0x5b	                                 pop rbx	      3865	option.c	FUNCTION_3
0x400488b	              0x5d	                                 pop rbp	      3865	option.c	FUNCTION_3
0x400488c	            0x415c	                                 pop r12	      3865	option.c	FUNCTION_3
0x400488e	    0x488b3d000000	            mov rdi, qword [0x04004895] 	      3863	option.c	FUNCTION_3	CALL_5
0x4004895	      0xe900000000	                           jmp 0x400489a	      3863	option.c	FUNCTION_3	CALL_5
0x400489a	    0x660f1f440000	                    nop word [rax + rax]	      3863	option.c	FUNCTION_3	CALL_5
0x40048a0	    0x488b1d000000	            mov rbx, qword [0x040048a7] 	      3860	option.c	FUNCTION_3	CALL_3
0x40048a7	            0xebd3	                           jmp 0x400487c	      3860	option.c	FUNCTION_3	CALL_3
get_sts_value	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:IF,0:functions,0:DO,0	11
0x400ef70	    0x488b15000000	            mov rdx, qword [0x0400ef77] 	     12534	option.c	FUNCTION_114	CALL_1
0x400ef77	    0x488b82781500	          mov rax, qword [rdx + 0x1578] 	     12534	option.c	FUNCTION_114	CALL_1
0x400ef7e	          0x4885c0	                           test rax, rax	     12534	option.c	FUNCTION_114	CALL_1
0x400ef81	            0x7805	                            js 0x400ef88	     12534	option.c	FUNCTION_114	CALL_1
0x400ef83	            0xf3c3	                                     ret	     12535	option.c	FUNCTION_114
0x400ef85	           0xf1f00	                         nop dword [rax]	     12535	option.c	FUNCTION_114
0x400ef88	    0x488b82681500	          mov rax, qword [rdx + 0x1568] 	     12524	option.c	FUNCTION_113
0x400ef8f	          0x4885c0	                           test rax, rax	     12524	option.c	FUNCTION_113
0x400ef92	            0x75ef	                           jne 0x400ef83	     12524	option.c	FUNCTION_113
0x400ef94	    0x488b82a81500	          mov rax, qword [rdx + 0x15a8] 	     12524	option.c	FUNCTION_113
0x400ef9b	              0xc3	                                     ret	     12535	option.c	FUNCTION_114
reset_modifiable	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:IF,1:functions,0:DO,0	13
0x400a820	        0x4883ec08	                              sub rsp, 8	     11301	option.c	FUNCTION_85
0x400a824	    0x488b05000000	            mov rax, qword [0x0400a82b] 	     11304	option.c	FUNCTION_85
0x400a82b	      0xbf00000000	                              mov edi, 0	     11306	option.c	FUNCTION_85	CALL_1
0x400a830	    0xc70500000000	               mov dword [0x0400a83a], 0	     11305	option.c	FUNCTION_85
0x400a83a	    0xc78040150000	            mov dword [rax + 0x1540], 0 	     11304	option.c	FUNCTION_85
0x400a844	      0xe8675cffff	                     call sym.findoption	     11306	option.c	FUNCTION_85	CALL_1
0x400a849	            0x85c0	                           test eax, eax	     11307	option.c	FUNCTION_85	IF_1
0x400a84b	            0x7811	                            js 0x400a85e	     11307	option.c	FUNCTION_85	IF_1
0x400a84d	            0x4898	                                    cdqe	     11308	option.c	FUNCTION_85	IF_1
0x400a84f	        0x48c1e006	                              shl rax, 6	     11308	option.c	FUNCTION_85	IF_1
0x400a853	    0x48c780000000	                      mov qword [rax], 0	     11308	option.c	FUNCTION_85	IF_1
0x400a85e	        0x4883c408	                              add rsp, 8	     11309	option.c	FUNCTION_85
0x400a862	              0xc3	                                     ret	     11309	option.c	FUNCTION_85
set_title_defaults	WHILE,0:FOR,0:ELSE,2:SWITCH,0:CALL,4:IF,4:functions,0:DO,0	56
0x40031e0	              0x53	                                push rbx	      4287	option.c	FUNCTION_14
0x40031e1	      0xbf00000000	                              mov edi, 0	      4296	option.c	FUNCTION_14	CALL_1
0x40031e6	      0xe8c5d2ffff	                     call sym.findoption	      4296	option.c	FUNCTION_14	CALL_1
0x40031eb	            0x85c0	                           test eax, eax	      4297	option.c	FUNCTION_14	IF_1
0x40031ed	            0x7813	                            js 0x4003202	      4297	option.c	FUNCTION_14	IF_1
0x40031ef	          0x4863d8	                         movsxd rbx, eax	      4297	option.c	FUNCTION_14	IF_1
0x40031f2	          0x4889d8	                            mov rax, rbx	      4297	option.c	FUNCTION_14	IF_1
0x40031f5	        0x48c1e006	                              shl rax, 6	      4297	option.c	FUNCTION_14	IF_1
0x40031f9	    0xf68000000000	                      test byte [rax], 1	      4297	option.c	FUNCTION_14	IF_1
0x4003200	            0x745e	                            je 0x4003260	      4297	option.c	FUNCTION_14	IF_1
0x4003202	      0xbf00000000	                              mov edi, 0	      4308	option.c	FUNCTION_14	CALL_3
0x4003207	      0xe8a4d2ffff	                     call sym.findoption	      4308	option.c	FUNCTION_14	CALL_3
0x400320c	            0x85c0	                           test eax, eax	      4309	option.c	FUNCTION_14	IF_3
0x400320e	            0x7845	                            js 0x4003255	      4309	option.c	FUNCTION_14	IF_3
0x4003210	          0x4863d8	                         movsxd rbx, eax	      4309	option.c	FUNCTION_14	IF_3
0x4003213	          0x4889d8	                            mov rax, rbx	      4309	option.c	FUNCTION_14	IF_3
0x4003216	        0x48c1e006	                              shl rax, 6	      4309	option.c	FUNCTION_14	IF_3
0x400321a	    0xf68000000000	                      test byte [rax], 1	      4309	option.c	FUNCTION_14	IF_3
0x4003221	            0x7532	                           jne 0x4003255	      4309	option.c	FUNCTION_14	IF_3
0x4003223	    0x8b3500000000	            mov esi, dword [0x04003229] 	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x4003229	      0xba01000000	                              mov edx, 1	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x400322e	      0xb901000000	                              mov ecx, 1	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x4003233	            0x85f6	                           test esi, esi	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x4003235	            0x750a	                           jne 0x4003241	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x4003237	    0x8b0500000000	            mov eax, dword [0x0400323d] 	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x400323d	            0x85c0	                           test eax, eax	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x400323f	            0x746f	                            je 0x40032b0	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x4003241	          0x4889d8	                            mov rax, rbx	      4317	option.c	FUNCTION_14	IF_3
0x4003244	    0x891500000000	            mov dword [0x0400324a], edx 	      4318	option.c	FUNCTION_14	IF_3
0x400324a	        0x48c1e006	                              shl rax, 6	      4317	option.c	FUNCTION_14	IF_3
0x400324e	    0x488988000000	                    mov qword [rax], rcx	      4317	option.c	FUNCTION_14	IF_3
0x4003255	              0x5b	                                 pop rbx	      4320	option.c	FUNCTION_14
0x4003256	              0xc3	                                     ret	      4320	option.c	FUNCTION_14
0x4003257	    0x660f1f840000	                    nop word [rax + rax]	      4320	option.c	FUNCTION_14
0x4003260	    0x448b05000000	            mov r8d, dword [0x04003267] 	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003267	      0xba01000000	                              mov edx, 1	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x400326c	      0xb901000000	                              mov ecx, 1	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003271	          0x4585c0	                           test r8d, r8d	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003274	            0x751a	                           jne 0x4003290	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003276	    0x8b3d00000000	            mov edi, dword [0x0400327c] 	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x400327c	            0x85ff	                           test edi, edi	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x400327e	            0x7510	                           jne 0x4003290	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003280	      0xe800000000	                          call 0x4003285	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x4003285	          0x4863c8	                         movsxd rcx, eax	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x4003288	          0x4889ca	                            mov rdx, rcx	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x400328b	       0xf1f440000	                   nop dword [rax + rax]	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x4003290	          0x4889d8	                            mov rax, rbx	      4305	option.c	FUNCTION_14	IF_1
0x4003293	    0x891500000000	            mov dword [0x04003299], edx 	      4306	option.c	FUNCTION_14	IF_1
0x4003299	        0x48c1e006	                              shl rax, 6	      4305	option.c	FUNCTION_14	IF_1
0x400329d	    0x488988000000	                    mov qword [rax], rcx	      4305	option.c	FUNCTION_14	IF_1
0x40032a4	      0xe959ffffff	                           jmp 0x4003202	      4305	option.c	FUNCTION_14	IF_1
0x40032a9	     0xf1f80000000	                         nop dword [rax]	      4305	option.c	FUNCTION_14	IF_1
0x40032b0	      0xe800000000	                          call 0x40032b5	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40032b5	          0x4863c8	                         movsxd rcx, eax	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40032b8	          0x4889ca	                            mov rdx, rcx	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40032bb	            0xeb84	                           jmp 0x4003241	      4316	option.c	FUNCTION_14	IF_3	CALL_4
opt_strings_flags	WHILE,1:FOR,1:ELSE,0:SWITCH,0:CALL,2:IF,3:functions,0:DO,0	82
0x4000820	            0x4157	                                push r15	     12355	option.c	FUNCTION_107
0x4000822	            0x4156	                                push r14	     12355	option.c	FUNCTION_107
0x4000824	            0x4155	                                push r13	     12355	option.c	FUNCTION_107
0x4000826	            0x4154	                                push r12	     12355	option.c	FUNCTION_107
0x4000828	              0x55	                                push rbp	     12355	option.c	FUNCTION_107
0x4000829	              0x53	                                push rbx	     12355	option.c	FUNCTION_107
0x400082a	        0x4883ec28	                           sub rsp, 0x28	     12355	option.c	FUNCTION_107
0x400082e	          0x803f00	                       cmp byte [rdi], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4000831	      0x4889542418	             mov qword [rsp + 0x18], rdx	     12355	option.c	FUNCTION_107
0x4000836	        0x894c2410	             mov dword [rsp + 0x10], ecx	     12355	option.c	FUNCTION_107
0x400083a	     0xf84e7000000	                            je 0x4000927	     12360	option.c	FUNCTION_107	WHILE_1
0x4000840	          0x488b06	                    mov rax, qword [rsi]	     12360	option.c	FUNCTION_107	WHILE_1
0x4000843	          0x4889fb	                            mov rbx, rdi	     12360	option.c	FUNCTION_107	WHILE_1
0x4000846	          0x4889f5	                            mov rbp, rsi	     12360	option.c	FUNCTION_107	WHILE_1
0x4000849	    0xc74424140000	               mov dword [rsp + 0x14], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4000851	      0x4889442408	                mov qword [rsp + 8], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x4000856	      0x488b442408	                mov rax, qword [rsp + 8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400085b	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400085e	            0x7457	                            je 0x40008b7	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4000860	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4000863	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4000866	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4000870	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4000873	          0x4589fd	                          mov r13d, r15d	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4000876	      0xe800000000	                          call 0x400087b	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x400087b	          0x4c63e0	                         movsxd r12, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x400087e	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4000881	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4000884	          0x4c89e2	                            mov rdx, r12	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4000887	        0x89442404	                mov dword [rsp + 4], eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x400088b	      0xe800000000	                          call 0x4000890	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4000890	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4000892	            0x7515	                           jne 0x40008a9	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4000894	        0x8b542410	            mov edx, dword [rsp + 0x10] 	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4000898	      0x420fb60423	             movzx eax, byte [rbx + r12]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400089d	            0x85d2	                           test edx, edx	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400089f	            0x7404	                            je 0x40008a5	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008a1	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008a3	            0x7450	                            je 0x40008f5	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008a5	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008a7	            0x7427	                            je 0x40008d0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008a9	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008ad	      0x4e8b74fd00	            mov r14, qword [rbp + r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40008b2	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40008b5	            0x75b9	                           jne 0x4000870	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40008b7	            0x31c0	                            xor eax, eax	     12365	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40008b9	        0x4883c428	                           add rsp, 0x28	     12381	option.c	FUNCTION_107
0x40008bd	              0x5b	                                 pop rbx	     12381	option.c	FUNCTION_107
0x40008be	              0x5d	                                 pop rbp	     12381	option.c	FUNCTION_107
0x40008bf	            0x415c	                                 pop r12	     12381	option.c	FUNCTION_107
0x40008c1	            0x415d	                                 pop r13	     12381	option.c	FUNCTION_107
0x40008c3	            0x415e	                                 pop r14	     12381	option.c	FUNCTION_107
0x40008c5	            0x415f	                                 pop r15	     12381	option.c	FUNCTION_107
0x40008c7	              0xc3	                                     ret	     12381	option.c	FUNCTION_107
0x40008c8	     0xf1f84000000	                   nop dword [rax + rax]	     12381	option.c	FUNCTION_107
0x40008d0	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008d5	          0x4489e9	                           mov ecx, r13d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008d8	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008da	         0x9442414	              or dword [rsp + 0x14], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008de	      0x488b442418	            mov rax, qword [rsp + 0x18] 	     12377	option.c	FUNCTION_107	IF_3
0x40008e3	          0x4885c0	                           test rax, rax	     12377	option.c	FUNCTION_107	IF_3
0x40008e6	            0x7438	                            je 0x4000920	     12377	option.c	FUNCTION_107	IF_3
0x40008e8	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	     12378	option.c	FUNCTION_107	IF_3
0x40008ec	            0x8908	                    mov dword [rax], ecx	     12378	option.c	FUNCTION_107	IF_3
0x40008ee	      0xb801000000	                              mov eax, 1	     12380	option.c	FUNCTION_107
0x40008f3	            0xebc4	                           jmp 0x40008b9	     12380	option.c	FUNCTION_107
0x40008f5	        0x8b442404	                mov eax, dword [rsp + 4]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008f9	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008fc	          0x83c001	                              add eax, 1	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40008ff	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4000901	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4000904	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4000909	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400090b	         0x9442414	              or dword [rsp + 0x14], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400090f	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4000912	     0xf853effffff	                           jne 0x4000856	     12360	option.c	FUNCTION_107	WHILE_1
0x4000918	            0xebc4	                           jmp 0x40008de	     12360	option.c	FUNCTION_107	WHILE_1
0x400091a	    0x660f1f440000	                    nop word [rax + rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4000920	      0xb801000000	                              mov eax, 1	     12380	option.c	FUNCTION_107
0x4000925	            0xeb92	                           jmp 0x40008b9	     12380	option.c	FUNCTION_107
0x4000927	    0xc74424140000	               mov dword [rsp + 0x14], 0	     12358	option.c	FUNCTION_107
0x400092f	            0xebad	                           jmp 0x40008de	     12358	option.c	FUNCTION_107
get_equalprg	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,0:IF,1:functions,0:DO,0	5
0x4009c80	    0x488b05000000	            mov rax, qword [0x04009c87] 	     10837	option.c	FUNCTION_78	IF_1
0x4009c87	    0x488b80081600	          mov rax, qword [rax + 0x1608] 	     10837	option.c	FUNCTION_78	IF_1
0x4009c8e	          0x803800	                       cmp byte [rax], 0	     10838	option.c	FUNCTION_78	IF_1
0x4009c91	    0x480f44050000	           cmove rax, qword [0x04009c99]	     10838	option.c	FUNCTION_78	IF_1
0x4009c99	              0xc3	                                     ret	     10840	option.c	FUNCTION_78
can_bs	WHILE,0:FOR,0:ELSE,0:SWITCH,1:CALL,1:IF,0:functions,0:DO,0	26
0x400b630	    0x488b0d000000	            mov rcx, qword [0x0400b637] 	     12442	option.c	FUNCTION_109	SWITCH_1
0x400b637	           0xfb611	                   movzx edx, byte [rcx]	     12442	option.c	FUNCTION_109	SWITCH_1
0x400b63a	          0x80fa31	                            cmp dl, 0x31	     12442	option.c	FUNCTION_109	SWITCH_1
0x400b63d	            0x7439	                            je 0x400b678	     12442	option.c	FUNCTION_109	SWITCH_1
0x400b63f	          0x80fa32	                            cmp dl, 0x32	     12442	option.c	FUNCTION_109	SWITCH_1
0x400b642	      0xb801000000	                              mov eax, 1	     12444	option.c	FUNCTION_109	SWITCH_1
0x400b647	            0x7422	                            je 0x400b66b	     12442	option.c	FUNCTION_109	SWITCH_1
0x400b649	            0x31c0	                            xor eax, eax	     12446	option.c	FUNCTION_109	SWITCH_1
0x400b64b	          0x80fa30	                            cmp dl, 0x30	     12442	option.c	FUNCTION_109	SWITCH_1
0x400b64e	            0x7420	                            je 0x400b670	     12442	option.c	FUNCTION_109	SWITCH_1
0x400b650	        0x4883ec08	                              sub rsp, 8	     12441	option.c	FUNCTION_109
0x400b654	            0x89fe	                            mov esi, edi	     12441	option.c	FUNCTION_109
0x400b656	          0x4889cf	                            mov rdi, rcx	     12448	option.c	FUNCTION_109	CALL_1
0x400b659	      0xe800000000	                          call 0x400b65e	     12448	option.c	FUNCTION_109	CALL_1
0x400b65e	          0x4885c0	                           test rax, rax	     12448	option.c	FUNCTION_109	CALL_1
0x400b661	           0xf95c0	                                setne al	     12448	option.c	FUNCTION_109	CALL_1
0x400b664	        0x4883c408	                              add rsp, 8	     12449	option.c	FUNCTION_109
0x400b668	           0xfb6c0	                           movzx eax, al	     12448	option.c	FUNCTION_109	CALL_1
0x400b66b	            0xf3c3	                                     ret	     12449	option.c	FUNCTION_109
0x400b66d	           0xf1f00	                         nop dword [rax]	     12449	option.c	FUNCTION_109
0x400b670	            0xf3c3	                                     ret	     12449	option.c	FUNCTION_109
0x400b672	    0x660f1f440000	                    nop word [rax + rax]	     12449	option.c	FUNCTION_109
0x400b678	            0x31c0	                            xor eax, eax	     12445	option.c	FUNCTION_109	SWITCH_1
0x400b67a	          0x83ff73	                           cmp edi, 0x73	     12445	option.c	FUNCTION_109	SWITCH_1
0x400b67d	           0xf95c0	                                setne al	     12445	option.c	FUNCTION_109	SWITCH_1
0x400b680	              0xc3	                                     ret	     12445	option.c	FUNCTION_109	SWITCH_1
showoneopt	WHILE,0:FOR,0:ELSE,2:SWITCH,0:CALL,9:IF,3:functions,0:DO,0	58
0x40029d0	            0x4155	                                push r13	      9993	option.c	FUNCTION_63
0x40029d2	            0x4154	                                push r12	      9993	option.c	FUNCTION_63
0x40029d4	              0x55	                                push rbp	      9993	option.c	FUNCTION_63
0x40029d5	              0x53	                                push rbx	      9993	option.c	FUNCTION_63
0x40029d6	          0x4889fb	                            mov rbx, rdi	      9993	option.c	FUNCTION_63
0x40029d9	            0x89f5	                            mov ebp, esi	      9993	option.c	FUNCTION_63
0x40029db	        0x4883ec08	                              sub rsp, 8	      9993	option.c	FUNCTION_63
0x40029df	    0xc70500000000	               mov dword [0x040029e9], 1	      9998	option.c	FUNCTION_63
0x40029e9	    0x448b25000000	           mov r12d, dword [0x040029f0] 	      9995	option.c	FUNCTION_63
0x40029f0	    0xc70500000000	               mov dword [0x040029fa], 0	      9997	option.c	FUNCTION_63
0x40029fa	      0xe861faffff	                 call sym.get_varp_scope	     10000	option.c	FUNCTION_63	CALL_1
0x40029ff	        0xf6431001	               test byte [rbx + 0x10], 1	     10003	option.c	FUNCTION_63	IF_1
0x4002a03	            0x7447	                            je 0x4002a4c	     10003	option.c	FUNCTION_63	IF_1
0x4002a05	          0x4989c5	                            mov r13, rax	     10003	option.c	FUNCTION_63	IF_1
0x4002a08	    0x488b05000000	            mov rax, qword [0x04002a0f] 	     10003	option.c	FUNCTION_63	IF_1
0x4002a0f	    0x4805c8000000	                           add rax, 0xc8	     10003	option.c	FUNCTION_63	IF_1
0x4002a15	          0x4939c5	                            cmp r13, rax	     10003	option.c	FUNCTION_63	IF_1
0x4002a18	            0x7416	                            je 0x4002a30	     10003	option.c	FUNCTION_63	IF_1
0x4002a1a	        0x418b4500	                    mov eax, dword [r13]	     10004	option.c	FUNCTION_63	IF_1	CALL_2
0x4002a1e	            0x85c0	                           test eax, eax	     10003	option.c	FUNCTION_63	IF_1
0x4002a20	            0x7526	                           jne 0x4002a48	     10003	option.c	FUNCTION_63	IF_1
0x4002a22	      0xbf00000000	                              mov edi, 0	     10005	option.c	FUNCTION_63	CALL_3
0x4002a27	      0xe800000000	                          call 0x4002a2c	     10005	option.c	FUNCTION_63	CALL_3
0x4002a2c	            0xeb28	                           jmp 0x4002a56	     10005	option.c	FUNCTION_63	CALL_3
0x4002a2e	            0x6690	                                     nop	     10005	option.c	FUNCTION_63	CALL_3
0x4002a30	      0xe800000000	                          call 0x4002a35	     10004	option.c	FUNCTION_63	IF_1	CALL_2
0x4002a35	            0x85c0	                           test eax, eax	     10003	option.c	FUNCTION_63	IF_1
0x4002a37	            0x74e9	                            je 0x4002a22	     10003	option.c	FUNCTION_63	IF_1
0x4002a39	        0xf6431001	               test byte [rbx + 0x10], 1	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a3d	            0x740d	                            je 0x4002a4c	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a3f	        0x418b4500	                    mov eax, dword [r13]	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a43	       0xf1f440000	                   nop dword [rax + rax]	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a48	            0x85c0	                           test eax, eax	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a4a	            0x7854	                            js 0x4002aa0	     10006	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002a4c	      0xbf00000000	                              mov edi, 0	     10009	option.c	FUNCTION_63	CALL_5
0x4002a51	      0xe800000000	                          call 0x4002a56	     10009	option.c	FUNCTION_63	CALL_5
0x4002a56	          0x488b3b	                    mov rdi, qword [rbx]	     10010	option.c	FUNCTION_63	CALL_6
0x4002a59	      0xe800000000	                          call 0x4002a5e	     10010	option.c	FUNCTION_63	CALL_6
0x4002a5e	        0xf6431001	               test byte [rbx + 0x10], 1	     10011	option.c	FUNCTION_63	IF_3
0x4002a62	            0x7520	                           jne 0x4002a84	     10011	option.c	FUNCTION_63	IF_3
0x4002a64	      0xbf3d000000	                           mov edi, 0x3d	     10013	option.c	FUNCTION_63	IF_3	CALL_7
0x4002a69	      0xe800000000	                          call 0x4002a6e	     10013	option.c	FUNCTION_63	IF_3	CALL_7
0x4002a6e	          0x4889df	                            mov rdi, rbx	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x4002a71	            0x89ee	                            mov esi, ebp	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x4002a73	      0xe8e8fdffff	            call sym.option_value2string	     10015	option.c	FUNCTION_63	IF_3	CALL_8
0x4002a78	    0x488b3d000000	            mov rdi, qword [0x04002a7f] 	     10016	option.c	FUNCTION_63	IF_3	CALL_9
0x4002a7f	      0xe800000000	                          call 0x4002a84	     10016	option.c	FUNCTION_63	IF_3	CALL_9
0x4002a84	    0x448925000000	           mov dword [0x04002a8b], r12d 	     10019	option.c	FUNCTION_63
0x4002a8b	    0xc70500000000	               mov dword [0x04002a95], 0	     10020	option.c	FUNCTION_63
0x4002a95	        0x4883c408	                              add rsp, 8	     10021	option.c	FUNCTION_63
0x4002a99	              0x5b	                                 pop rbx	     10021	option.c	FUNCTION_63
0x4002a9a	              0x5d	                                 pop rbp	     10021	option.c	FUNCTION_63
0x4002a9b	            0x415c	                                 pop r12	     10021	option.c	FUNCTION_63
0x4002a9d	            0x415d	                                 pop r13	     10021	option.c	FUNCTION_63
0x4002a9f	              0xc3	                                     ret	     10021	option.c	FUNCTION_63
0x4002aa0	      0xbf00000000	                              mov edi, 0	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002aa5	      0xe800000000	                          call 0x4002aaa	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
0x4002aaa	            0xebaa	                           jmp 0x4002a56	     10007	option.c	FUNCTION_63	ELSE_1	IF_2
illegal_char	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,2:IF,1:functions,0:DO,0	29
0x4001220	          0x4885ff	                           test rdi, rdi	      5322	option.c	FUNCTION_18	IF_1
0x4001223	            0x7453	                            je 0x4001278	      5322	option.c	FUNCTION_18	IF_1
0x4001225	              0x55	                                push rbp	      5321	option.c	FUNCTION_18
0x4001226	              0x53	                                push rbx	      5321	option.c	FUNCTION_18
0x4001227	          0x4889fa	                            mov rdx, rdi	      5321	option.c	FUNCTION_18
0x400122a	            0x89f7	                            mov edi, esi	      5321	option.c	FUNCTION_18
0x400122c	          0x4889d3	                            mov rbx, rdx	      5321	option.c	FUNCTION_18
0x400122f	        0x4883ec08	                              sub rsp, 8	      5321	option.c	FUNCTION_18
0x4001233	      0xe800000000	                          call 0x4001238	      5325	option.c	FUNCTION_18	CALL_2
0x4001238	      0xba05000000	                              mov edx, 5	      5324	option.c	FUNCTION_18	CALL_1
0x400123d	          0x4889c5	                            mov rbp, rax	      5325	option.c	FUNCTION_18	CALL_2
0x4001240	      0xbe00000000	                              mov esi, 0	      5324	option.c	FUNCTION_18	CALL_1
0x4001245	            0x31ff	                            xor edi, edi	      5324	option.c	FUNCTION_18	CALL_1
0x4001247	      0xe800000000	                          call 0x400124c	      5324	option.c	FUNCTION_18	CALL_1
0x400124c	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_132	CALL_1
0x400124f	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_132	CALL_1
0x4001252	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_132	CALL_1
0x4001255	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_132	CALL_1
0x400125c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_132	CALL_1
0x4001261	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_132	CALL_1
0x4001263	      0xe800000000	                          call 0x4001268	        33	stdio2.h	FUNCTION_132	CALL_1
0x4001268	        0x4883c408	                              add rsp, 8	      5327	option.c	FUNCTION_18
0x400126c	          0x4889d8	                            mov rax, rbx	      5326	option.c	FUNCTION_18
0x400126f	              0x5b	                                 pop rbx	      5327	option.c	FUNCTION_18
0x4001270	              0x5d	                                 pop rbp	      5327	option.c	FUNCTION_18
0x4001271	              0xc3	                                     ret	      5327	option.c	FUNCTION_18
0x4001272	    0x660f1f440000	                    nop word [rax + rax]	      5327	option.c	FUNCTION_18
0x4001278	      0xb800000000	                              mov eax, 0	      5327	option.c	FUNCTION_18
0x400127d	              0xc3	                                     ret	      5327	option.c	FUNCTION_18
comp_col	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,0:IF,6:functions,0:DO,0	58
0x40055c0	    0x488b05000000	            mov rax, qword [0x040055c7] 	     10391	option.c	FUNCTION_74
0x40055c7	      0xba01000000	                              mov edx, 1	     10391	option.c	FUNCTION_74
0x40055cc	        0x4883f802	                              cmp rax, 2	     10391	option.c	FUNCTION_74
0x40055d0	            0x740c	                            je 0x40055de	     10391	option.c	FUNCTION_74
0x40055d2	            0x31d2	                            xor edx, edx	     10391	option.c	FUNCTION_74
0x40055d4	        0x4883f801	                              cmp rax, 1	     10391	option.c	FUNCTION_74
0x40055d8	     0xf8492000000	                            je 0x4005670	     10391	option.c	FUNCTION_74
0x40055de	    0x8b0d00000000	            mov ecx, dword [0x040055e4] 	     10395	option.c	FUNCTION_74	IF_1
0x40055e4	            0x85c9	                           test ecx, ecx	     10395	option.c	FUNCTION_74	IF_1
0x40055e6	            0x7428	                            je 0x4005610	     10395	option.c	FUNCTION_74	IF_1
0x40055e8	    0x8b0500000000	            mov eax, dword [0x040055ee] 	     10398	option.c	FUNCTION_74	IF_1
0x40055ee	            0x85c0	                           test eax, eax	     10398	option.c	FUNCTION_74	IF_1
0x40055f0	            0x7556	                           jne 0x4005648	     10398	option.c	FUNCTION_74	IF_1
0x40055f2	      0xbe12000000	                           mov esi, 0x12	     10398	option.c	FUNCTION_74	IF_1
0x40055f7	      0xb812000000	                           mov eax, 0x12	     10398	option.c	FUNCTION_74	IF_1
0x40055fc	            0x85d2	                           test edx, edx	     10403	option.c	FUNCTION_74	IF_1	IF_2
0x40055fe	            0x7512	                           jne 0x4005612	     10403	option.c	FUNCTION_74	IF_1	IF_2
0x4005600	    0x8b1500000000	            mov edx, dword [0x04005606] 	     10406	option.c	FUNCTION_74	IF_3
0x4005606	            0x85d2	                           test edx, edx	     10406	option.c	FUNCTION_74	IF_3
0x4005608	            0x747e	                            je 0x4005688	     10406	option.c	FUNCTION_74	IF_3
0x400560a	          0x83c00a	                            add eax, 0xa	     10406	option.c	FUNCTION_74	IF_3
0x400560d	            0xeb11	                           jmp 0x4005620	     10406	option.c	FUNCTION_74	IF_3
0x400560f	              0x90	                                     nop	     10406	option.c	FUNCTION_74	IF_3
0x4005610	            0x31f6	                            xor esi, esi	     10406	option.c	FUNCTION_74	IF_3
0x4005612	    0x833d00000000	               cmp dword [0x04005619], 1	     10406	option.c	FUNCTION_74	IF_3
0x4005619	            0x19c0	                            sbb eax, eax	     10406	option.c	FUNCTION_74	IF_3
0x400561b	            0xf7d0	                                 not eax	     10406	option.c	FUNCTION_74	IF_3
0x400561d	          0x83e00b	                            and eax, 0xb	     10406	option.c	FUNCTION_74	IF_3
0x4005620	    0x488b15000000	            mov rdx, qword [0x04005627] 	     10412	option.c	FUNCTION_74
0x4005627	            0x89d1	                            mov ecx, edx	     10412	option.c	FUNCTION_74
0x4005629	            0x29c1	                            sub ecx, eax	     10412	option.c	FUNCTION_74
0x400562b	            0x89d0	                            mov eax, edx	     10413	option.c	FUNCTION_74
0x400562d	            0x29f0	                            sub eax, esi	     10413	option.c	FUNCTION_74
0x400562f	            0x85c9	                           test ecx, ecx	     10414	option.c	FUNCTION_74	IF_5
0x4005631	    0x890d00000000	            mov dword [0x04005637], ecx 	     10412	option.c	FUNCTION_74
0x4005637	    0x890500000000	            mov dword [0x0400563d], eax 	     10413	option.c	FUNCTION_74
0x400563d	            0x7e21	                           jle 0x4005660	     10414	option.c	FUNCTION_74	IF_5
0x400563f	            0x85c0	                           test eax, eax	     10416	option.c	FUNCTION_74	IF_6
0x4005641	            0x7e0d	                           jle 0x4005650	     10416	option.c	FUNCTION_74	IF_6
0x4005643	            0xf3c3	                                     ret	     10416	option.c	FUNCTION_74	IF_6
0x4005645	           0xf1f00	                         nop dword [rax]	     10416	option.c	FUNCTION_74	IF_6
0x4005648	          0x83c001	                              add eax, 1	     10398	option.c	FUNCTION_74	IF_1
0x400564b	            0x89c6	                            mov esi, eax	     10398	option.c	FUNCTION_74	IF_1
0x400564d	            0xebad	                           jmp 0x40055fc	     10398	option.c	FUNCTION_74	IF_1
0x400564f	              0x90	                                     nop	     10398	option.c	FUNCTION_74	IF_1
0x4005650	    0xc70500000000	               mov dword [0x0400565a], 1	     10417	option.c	FUNCTION_74	IF_6
0x400565a	              0xc3	                                     ret	     10422	option.c	FUNCTION_74
0x400565b	       0xf1f440000	                   nop dword [rax + rax]	     10422	option.c	FUNCTION_74
0x4005660	    0xc70500000000	               mov dword [0x0400566a], 1	     10415	option.c	FUNCTION_74	IF_5
0x400566a	            0xebd3	                           jmp 0x400563f	     10415	option.c	FUNCTION_74	IF_5
0x400566c	         0xf1f4000	                         nop dword [rax]	     10415	option.c	FUNCTION_74	IF_5
0x4005670	            0x31d2	                            xor edx, edx	     10391	option.c	FUNCTION_74
0x4005672	    0x488b05000000	            mov rax, qword [0x04005679] 	     10391	option.c	FUNCTION_74
0x4005679	    0x483905000000	            cmp qword [0x04005680], rax 	     10391	option.c	FUNCTION_74
0x4005680	           0xf95c2	                                setne dl	     10391	option.c	FUNCTION_74
0x4005683	      0xe956ffffff	                           jmp 0x40055de	     10391	option.c	FUNCTION_74
0x4005688	            0x89f0	                            mov eax, esi	     10391	option.c	FUNCTION_74
0x400568a	            0xeb94	                           jmp 0x4005620	     10391	option.c	FUNCTION_74
set_context_in_set_cmd	WHILE,5:FOR,1:ELSE,6:SWITCH,0:CALL,11:IF,27:functions,0:DO,0	322
0x400a8b0	            0x4157	                                push r15	     11339	option.c	FUNCTION_88
0x400a8b2	            0x4156	                                push r14	     11339	option.c	FUNCTION_88
0x400a8b4	            0x4155	                                push r13	     11339	option.c	FUNCTION_88
0x400a8b6	            0x4154	                                push r12	     11339	option.c	FUNCTION_88
0x400a8b8	          0x4989fd	                            mov r13, rdi	     11339	option.c	FUNCTION_88
0x400a8bb	              0x55	                                push rbp	     11339	option.c	FUNCTION_88
0x400a8bc	              0x53	                                push rbx	     11339	option.c	FUNCTION_88
0x400a8bd	          0x4889f3	                            mov rbx, rsi	     11339	option.c	FUNCTION_88
0x400a8c0	        0x4883ec08	                              sub rsp, 8	     11339	option.c	FUNCTION_88
0x400a8c4	    0xc70704000000	                      mov dword [rdi], 4	     11350	option.c	FUNCTION_88
0x400a8ca	          0x803e00	                       cmp byte [rsi], 0	     11351	option.c	FUNCTION_88	IF_1
0x400a8cd	    0x891500000000	            mov dword [0x0400a8d3], edx 	     11348	option.c	FUNCTION_88
0x400a8d3	     0xf844f010000	                            je 0x400aa28	     11351	option.c	FUNCTION_88	IF_1
0x400a8d9	          0x4889f7	                            mov rdi, rsi	     11356	option.c	FUNCTION_88	CALL_1
0x400a8dc	      0xe800000000	                          call 0x400a8e1	     11356	option.c	FUNCTION_88	CALL_1
0x400a8e1	      0x488d5403ff	                lea rdx, [rbx + rax - 1]	     11356	option.c	FUNCTION_88	CALL_1
0x400a8e6	           0xfb60a	                   movzx ecx, byte [rdx]	     11357	option.c	FUNCTION_88	IF_2
0x400a8e9	          0x80f920	                            cmp cl, 0x20	     11357	option.c	FUNCTION_88	IF_2
0x400a8ec	     0xf8449010000	                            je 0x400aa3b	     11357	option.c	FUNCTION_88	IF_2
0x400a8f2	          0x4839d3	                            cmp rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x400a8f5	     0xf82ca000000	                            jb 0x400a9c5	     11362	option.c	FUNCTION_88	WHILE_1
0x400a8fb	          0x4889d3	                            mov rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x400a8fe	            0x6690	                                     nop	     11362	option.c	FUNCTION_88	WHILE_1
0x400a900	      0xbf00000000	                              mov edi, 0	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a905	      0xb902000000	                              mov ecx, 2	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a90a	          0x4889de	                            mov rsi, rbx	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a90d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a90f	            0x751d	                           jne 0x400a92e	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a911	      0xbf00000000	                              mov edi, 0	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a916	      0xb906000000	                              mov ecx, 6	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a91b	          0x4889de	                            mov rsi, rbx	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a91e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a920	            0x740c	                            je 0x400a92e	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400a922	    0x41c745000500	                      mov dword [r13], 5	     11381	option.c	FUNCTION_88	IF_5
0x400a92a	        0x4883c302	                              add rbx, 2	     11382	option.c	FUNCTION_88	IF_5
0x400a92e	      0xbf00000000	                              mov edi, 0	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400a933	      0xb903000000	                              mov ecx, 3	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400a938	          0x4889de	                            mov rsi, rbx	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400a93b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400a93d	            0x750c	                           jne 0x400a94b	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400a93f	    0x41c745000500	                      mov dword [r13], 5	     11386	option.c	FUNCTION_88	IF_6
0x400a947	        0x4883c303	                              add rbx, 3	     11387	option.c	FUNCTION_88	IF_6
0x400a94b	        0x49895d08	                mov qword [r13 + 8], rbx	     11389	option.c	FUNCTION_88
0x400a94f	        0x440fb623	                  movzx r12d, byte [rbx]	     11390	option.c	FUNCTION_88	IF_7
0x400a953	        0x4180fc3c	                          cmp r12b, 0x3c	     11390	option.c	FUNCTION_88	IF_7
0x400a957	     0xf84ff000000	                            je 0x400aa5c	     11390	option.c	FUNCTION_88	IF_7
0x400a95d	        0x4180fc74	                          cmp r12b, 0x74	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400a961	     0xf84bf010000	                            je 0x400ab26	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400a967	          0x4889dd	                            mov rbp, rbx	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400a96a	    0x48bac1ff0000	            movabs rdx, 0x2000000000ffc1	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a974	         0xf1f4000	                         nop dword [rax]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a978	          0x4489e0	                           mov eax, r12d	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a97b	          0x83e0df	                     and eax, 0xffffffdf	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a97e	          0x83e841	                           sub eax, 0x41	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a981	            0x3c19	                            cmp al, 0x19	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a983	     0xf8691000000	                           jbe 0x400aa1a	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a989	      0x418d4424d6	                   lea eax, [r12 - 0x2a]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a98e	            0x3c35	                            cmp al, 0x35	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a990	            0x767e	                           jbe 0x400aa10	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400a992	          0x4584e4	                         test r12b, r12b	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400a995	     0xf852b010000	                           jne 0x400aac6	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400a99b	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x400a99f	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x400a9a0	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x400a9a1	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x400a9a3	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x400a9a5	            0x415e	                                 pop r14	     11539	option.c	FUNCTION_88
0x400a9a7	            0x415f	                                 pop r15	     11539	option.c	FUNCTION_88
0x400a9a9	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
0x400a9aa	    0x660f1f440000	                    nop word [rax + rax]	     11539	option.c	FUNCTION_88
0x400a9b0	          0x80f92c	                            cmp cl, 0x2c	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400a9b3	            0x7415	                            je 0x400a9ca	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400a9b5	        0x4883ea01	                              sub rdx, 1	     11377	option.c	FUNCTION_88	WHILE_1
0x400a9b9	          0x4839d3	                            cmp rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x400a9bc	     0xf843effffff	                            je 0x400a900	     11362	option.c	FUNCTION_88	WHILE_1
0x400a9c2	           0xfb60a	                   movzx ecx, byte [rdx]	     11362	option.c	FUNCTION_88	WHILE_1
0x400a9c5	          0x80f920	                            cmp cl, 0x20	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400a9c8	            0x75e6	                           jne 0x400a9b0	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400a9ca	          0x4839d3	                            cmp rbx, rdx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9cd	          0x4889d0	                            mov rax, rdx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9d0	            0x7320	                           jae 0x400a9f2	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9d2	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9d6	            0x740e	                            je 0x400a9e6	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9d8	            0xeb18	                           jmp 0x400a9f2	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9da	    0x660f1f440000	                    nop word [rax + rax]	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9e0	        0x8078ff5c	                cmp byte [rax - 1], 0x5c	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9e4	            0x750c	                           jne 0x400a9f2	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9e6	        0x4883e801	                              sub rax, 1	     11369	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9ea	          0x4839c3	                            cmp rbx, rax	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9ed	            0x75f1	                           jne 0x400a9e0	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9ef	          0x4889d8	                            mov rax, rbx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400a9f2	          0x80f920	                            cmp cl, 0x20	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400a9f5	            0x75be	                           jne 0x400a9b5	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400a9f7	          0x4889d6	                            mov rsi, rdx	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400a9fa	          0x4829c6	                            sub rsi, rax	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400a9fd	          0x4889f0	                            mov rax, rsi	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400aa00	            0xa801	                              test al, 1	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400aa02	            0x75b1	                           jne 0x400a9b5	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400aa04	        0x488d5a01	                      lea rbx, [rdx + 1]	     11374	option.c	FUNCTION_88	WHILE_1	IF_4
0x400aa08	      0xe9f3feffff	                           jmp 0x400a900	     11375	option.c	FUNCTION_88	WHILE_1	IF_4
0x400aa0d	           0xf1f00	                         nop dword [rax]	     11375	option.c	FUNCTION_88	WHILE_1	IF_4
0x400aa10	        0x480fa3c2	                             bt rdx, rax	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400aa14	     0xf83ac000000	                           jae 0x400aac6	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400aa1a	        0x4883c501	                              add rbp, 1	     11424	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4
0x400aa1e	      0x440fb66500	                  movzx r12d, byte [rbp]	     11424	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4
0x400aa23	      0xe950ffffff	                           jmp 0x400a978	     11424	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4
0x400aa28	        0x49897508	                mov qword [r13 + 8], rsi	     11353	option.c	FUNCTION_88	IF_1
0x400aa2c	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x400aa30	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x400aa31	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x400aa32	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x400aa34	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x400aa36	            0x415e	                                 pop r14	     11539	option.c	FUNCTION_88
0x400aa38	            0x415f	                                 pop r15	     11539	option.c	FUNCTION_88
0x400aa3a	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
0x400aa3b	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11357	option.c	FUNCTION_88	IF_2
0x400aa3f	     0xf84adfeffff	                            je 0x400a8f2	     11357	option.c	FUNCTION_88	IF_2
0x400aa45	        0x4883c201	                              add rdx, 1	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400aa49	        0x49895508	                mov qword [r13 + 8], rdx	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400aa4d	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x400aa51	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x400aa52	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x400aa53	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x400aa55	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x400aa57	            0x415e	                                 pop r14	     11539	option.c	FUNCTION_88
0x400aa59	            0x415f	                                 pop r15	     11539	option.c	FUNCTION_88
0x400aa5b	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
0x400aa5c	          0x4989de	                            mov r14, rbx	     11539	option.c	FUNCTION_88
0x400aa5f	              0x90	                                     nop	     11539	option.c	FUNCTION_88
0x400aa60	        0x4983c601	                              add r14, 1	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400aa64	          0x4584e4	                         test r12b, r12b	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400aa67	     0xf842effffff	                            je 0x400a99b	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400aa6d	        0x450fb626	                  movzx r12d, byte [r14]	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400aa71	        0x4180fc3e	                          cmp r12b, 0x3e	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400aa75	            0x75e9	                           jne 0x400aa60	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400aa77	        0x488d7b01	                      lea rdi, [rbx + 1]	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400aa7b	      0xe800000000	                          call 0x400aa80	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400aa80	            0x85c0	                           test eax, eax	     11396	option.c	FUNCTION_88	IF_7	IF_9
0x400aa82	            0x742b	                            je 0x400aaaf	     11396	option.c	FUNCTION_88	IF_7	IF_9
0x400aa84	            0x89c2	                            mov edx, eax	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400aa86	            0xf7d8	                                 neg eax	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400aa88	      0x450fb66601	              movzx r12d, byte [r14 + 1]	     11401	option.c	FUNCTION_88	IF_7
0x400aa8d	          0xc1e808	                              shr eax, 8	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400aa90	            0xf7da	                                 neg edx	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400aa92	        0x498d6e01	                      lea rbp, [r14 + 1]	     11401	option.c	FUNCTION_88	IF_7
0x400aa96	    0x880500000000	               mov byte [0x0400aa9c], al	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400aa9c	    0x881500000000	               mov byte [0x0400aaa2], dl	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400aaa2	      0xb801000000	                              mov eax, 1	     11402	option.c	FUNCTION_88	IF_7
0x400aaa7	          0x4531f6	                          xor r14d, r14d	     11342	option.c	FUNCTION_88
0x400aaaa	          0x4531ff	                          xor r15d, r15d	     11341	option.c	FUNCTION_88
0x400aaad	            0xeb4e	                           jmp 0x400aafd	     11341	option.c	FUNCTION_88
0x400aaaf	    0x41c745000000	                      mov dword [r13], 0	     11398	option.c	FUNCTION_88	IF_7	IF_9
0x400aab7	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x400aabb	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x400aabc	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x400aabd	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x400aabf	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x400aac1	            0x415e	                                 pop r14	     11539	option.c	FUNCTION_88
0x400aac3	            0x415f	                                 pop r15	     11539	option.c	FUNCTION_88
0x400aac5	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
0x400aac6	        0xc6450000	                       mov byte [rbp], 0	     11428	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400aaca	          0x4889df	                            mov rdi, rbx	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400aacd	      0xe8de59ffff	                     call sym.findoption	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400aad2	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400aad5	          0x4189c6	                           mov r14d, eax	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400aad8	        0x44886500	                    mov byte [rbp], r12b	     11430	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400aadc	            0x74d1	                            je 0x400aaaf	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400aade	            0x4898	                                    cdqe	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400aae0	        0x48c1e006	                              shl rax, 6	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400aae4	    0x480500000000	                              add rax, 0	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400aaea	      0x4883781800	               cmp qword [rax + 0x18], 0	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400aaef	            0x74be	                            je 0x400aaaf	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400aaf1	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400aaf5	        0x41f6c701	                            test r15b, 1	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400aaf9	            0x75b4	                           jne 0x400aaaf	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400aafb	            0x31c0	                            xor eax, eax	     11345	option.c	FUNCTION_88
0x400aafd	      0x418d5424d5	                   lea edx, [r12 - 0x2b]	     11445	option.c	FUNCTION_88	IF_16
0x400ab02	          0x83e2fd	                     and edx, 0xfffffffd	     11445	option.c	FUNCTION_88	IF_16
0x400ab05	            0x7467	                            je 0x400ab6e	     11445	option.c	FUNCTION_88	IF_16
0x400ab07	        0x4183fc5e	                          cmp r12d, 0x5e	     11445	option.c	FUNCTION_88	IF_16
0x400ab0b	            0x7461	                            je 0x400ab6e	     11445	option.c	FUNCTION_88	IF_16
0x400ab0d	        0x4183fc3d	                          cmp r12d, 0x3d	     11450	option.c	FUNCTION_88	IF_17
0x400ab11	            0x7465	                            je 0x400ab78	     11450	option.c	FUNCTION_88	IF_17
0x400ab13	        0x4183fc3a	                          cmp r12d, 0x3a	     11450	option.c	FUNCTION_88	IF_17
0x400ab17	            0x745f	                            je 0x400ab78	     11450	option.c	FUNCTION_88	IF_17
0x400ab19	    0x41c74500feff	            mov dword [r13], 0xfffffffe 	     11453	option.c	FUNCTION_88	IF_17
0x400ab21	      0xe975feffff	                           jmp 0x400a99b	     11454	option.c	FUNCTION_88	IF_17
0x400ab26	        0x807b015f	                cmp byte [rbx + 1], 0x5f	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab2a	     0xf8537feffff	                           jne 0x400a967	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab30	        0x807b0200	                   cmp byte [rbx + 2], 0	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400ab34	     0xf8461feffff	                            je 0x400a99b	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400ab3a	        0x807b0300	                   cmp byte [rbx + 3], 0	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400ab3e	     0xf8457feffff	                            je 0x400a99b	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400ab44	         0xfb64302	               movzx eax, byte [rbx + 2]	     11417	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab48	      0x440fb66304	              movzx r12d, byte [rbx + 4]	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab4d	        0x488d6b04	                      lea rbp, [rbx + 4]	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab51	          0x4531f6	                          xor r14d, r14d	     11342	option.c	FUNCTION_88
0x400ab54	          0x4531ff	                          xor r15d, r15d	     11341	option.c	FUNCTION_88
0x400ab57	    0x880500000000	               mov byte [0x0400ab5d], al	     11417	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab5d	         0xfb64303	               movzx eax, byte [rbx + 3]	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab61	    0x880500000000	               mov byte [0x0400ab67], al	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab67	      0xb801000000	                              mov eax, 1	     11416	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab6c	            0xeb8f	                           jmp 0x400aafd	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400ab6e	        0x807d013d	                cmp byte [rbp + 1], 0x3d	     11445	option.c	FUNCTION_88	IF_16
0x400ab72	            0x7599	                           jne 0x400ab0d	     11445	option.c	FUNCTION_88	IF_16
0x400ab74	        0x4883c501	                              add rbp, 1	     11447	option.c	FUNCTION_88	IF_16
0x400ab78	      0x41837d0005	                      cmp dword [r13], 5	     11451	option.c	FUNCTION_88	IF_17
0x400ab7d	            0x749a	                            je 0x400ab19	     11451	option.c	FUNCTION_88	IF_17
0x400ab7f	        0x807d0100	                   cmp byte [rbp + 1], 0	     11456	option.c	FUNCTION_88	IF_18
0x400ab83	     0xf8447010000	                            je 0x400acd0	     11456	option.c	FUNCTION_88	IF_18
0x400ab89	            0x85c0	                           test eax, eax	     11467	option.c	FUNCTION_88	IF_20
0x400ab8b	    0x41c745000000	                      mov dword [r13], 0	     11466	option.c	FUNCTION_88
0x400ab93	     0xf8502feffff	                           jne 0x400a99b	     11467	option.c	FUNCTION_88	IF_20
0x400ab99	        0x41f6c702	                            test r15b, 2	     11467	option.c	FUNCTION_88	IF_20
0x400ab9d	     0xf85f8fdffff	                           jne 0x400a99b	     11467	option.c	FUNCTION_88	IF_20
0x400aba3	        0x4883c501	                              add rbp, 1	     11470	option.c	FUNCTION_88
0x400aba7	        0x41f6c710	                         test r15b, 0x10	     11472	option.c	FUNCTION_88	IF_21
0x400abab	        0x49896d08	                mov qword [r13 + 8], rbp	     11470	option.c	FUNCTION_88
0x400abaf	            0x747f	                            je 0x400ac30	     11472	option.c	FUNCTION_88	IF_21
0x400abb1	          0x4963c6	                        movsxd rax, r14d	     11474	option.c	FUNCTION_88	IF_21
0x400abb4	        0x48c1e006	                              shl rax, 6	     11474	option.c	FUNCTION_88	IF_21
0x400abb8	    0x488b80000000	                    mov rax, qword [rax]	     11474	option.c	FUNCTION_88	IF_21
0x400abbf	    0x483d00000000	                              cmp rax, 0	     11477	option.c	FUNCTION_88	IF_21	IF_22
0x400abc5	        0x400f94c7	                                sete dil	     11477	option.c	FUNCTION_88	IF_21	IF_22
0x400abc9	    0x483d00000000	                              cmp rax, 0	     11481	option.c	FUNCTION_88	IF_21	IF_22
0x400abcf	        0x400f94c6	                                sete sil	     11481	option.c	FUNCTION_88	IF_21	IF_22
0x400abd3	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abd9	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abdc	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abe2	           0xf94c2	                                 sete dl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abe5	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abe7	             0x9fa	                             or edx, edi	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abe9	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abef	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abf2	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abf4	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abfa	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abfd	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400abff	          0x4008f2	                              or dl, sil	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400ac02	     0xf8538010000	                           jne 0x400ad40	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400ac08	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400ac0e	     0xf842c010000	                            je 0x400ad40	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400ac14	    0x483d00000000	                              cmp rax, 0	     11502	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400ac1a	    0x41c745000200	                      mov dword [r13], 2	     11500	option.c	FUNCTION_88	IF_21	ELSE_5
0x400ac22	     0xf842e010000	                            je 0x400ad56	     11502	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400ac28	    0x41c745240100	               mov dword [r13 + 0x24], 1	     11496	option.c	FUNCTION_88	IF_21	IF_22	ELSE_4
0x400ac30	          0x4889df	                            mov rdi, rbx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ac33	      0xe800000000	                          call 0x400ac38	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ac38	      0x488d5403ff	                lea rdx, [rbx + rax - 1]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ac3d	          0x4839d5	                            cmp rbp, rdx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ac40	     0xf8355fdffff	                           jae 0x400a99b	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ac46	          0x4d63c6	                         movsxd r8, r14d	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ac49	    0x4181e7008000	                        and r15d, 0x8000	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ac50	        0x49c1e006	                               shl r8, 6	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ac54	    0x4981c0000000	                               add r8, 0	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ac5b	            0xeb23	                           jmp 0x400ac80	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ac5d	           0xf1f00	                         nop dword [rax]	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ac60	          0x80f92c	                            cmp cl, 0x2c	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ac63	            0x7423	                            je 0x400ac88	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ac65	    0x498178180000	                cmp qword [r8 + 0x18], 0	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ac6d	     0xf8484000000	                            je 0x400acf7	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ac73	        0x4883ea01	                              sub rdx, 1	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ac77	          0x4839d5	                            cmp rbp, rdx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ac7a	     0xf841bfdffff	                            je 0x400a99b	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ac80	           0xfb60a	                   movzx ecx, byte [rdx]	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ac83	          0x80f920	                            cmp cl, 0x20	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ac86	            0x75d8	                           jne 0x400ac60	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ac88	          0x4839d5	                            cmp rbp, rdx	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ac8b	          0x4889d0	                            mov rax, rdx	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ac8e	            0x731f	                           jae 0x400acaf	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ac90	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ac94	            0x7410	                            je 0x400aca6	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ac96	            0xeb17	                           jmp 0x400acaf	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ac98	     0xf1f84000000	                   nop dword [rax + rax]	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400aca0	        0x8078ff5c	                cmp byte [rax - 1], 0x5c	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400aca4	            0x7509	                           jne 0x400acaf	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400aca6	        0x4883e801	                              sub rax, 1	     11518	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400acaa	          0x4839c5	                            cmp rbp, rax	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400acad	            0x75f1	                           jne 0x400aca0	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400acaf	          0x80f920	                            cmp cl, 0x20	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acb2	            0x746c	                            je 0x400ad20	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acb4	          0x80f92c	                            cmp cl, 0x2c	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acb7	            0x75ac	                           jne 0x400ac65	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acb9	          0x4d85ff	                           test r15, r15	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acbc	            0x74a7	                            je 0x400ac65	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acbe	          0x4889d7	                            mov rdi, rdx	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acc1	          0x4829c7	                            sub rdi, rax	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acc4	          0x4889f8	                            mov rax, rdi	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acc7	            0xa801	                              test al, 1	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acc9	            0x759a	                           jne 0x400ac65	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400accb	      0xe975fdffff	                           jmp 0x400aa45	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400acd0	            0x85c0	                           test eax, eax	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400acd2	      0xb8ffffffff	                     mov eax, 0xffffffff	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400acd7	    0x41c745000700	                      mov dword [r13], 7	     11458	option.c	FUNCTION_88	IF_18
0x400acdf	        0x440f45f0	                        cmovne r14d, eax	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400ace3	        0x4883c501	                              add rbp, 1	     11463	option.c	FUNCTION_88	IF_18
0x400ace7	    0x448935000000	           mov dword [0x0400acee], r14d 	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400acee	        0x49896d08	                mov qword [r13 + 8], rbp	     11463	option.c	FUNCTION_88	IF_18
0x400acf2	      0xe9a4fcffff	                           jmp 0x400a99b	     11464	option.c	FUNCTION_88	IF_18
0x400acf7	      0xbf00000000	                              mov edi, 0	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400acfc	      0xb905000000	                              mov ecx, 5	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400ad01	          0x4889d6	                            mov rsi, rdx	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400ad04	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400ad06	     0xf8567ffffff	                           jne 0x400ac73	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400ad0c	        0x4883c205	                              add rdx, 5	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ad10	        0x49895508	                mov qword [r13 + 8], rdx	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ad14	      0xe982fcffff	                           jmp 0x400a99b	     11533	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ad19	     0xf1f80000000	                         nop dword [rax]	     11533	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ad20	      0x41837d2402	               cmp dword [r13 + 0x24], 2	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ad25	     0xf853affffff	                           jne 0x400ac65	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ad2b	          0x4889d7	                            mov rdi, rdx	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ad2e	          0x4829c7	                            sub rdi, rax	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ad31	        0x4883ff02	                              cmp rdi, 2	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ad35	     0xf8f2affffff	                            jg 0x400ac65	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ad3b	      0xe905fdffff	                           jmp 0x400aa45	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ad40	          0x4084ff	                           test dil, dil	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400ad43	    0x41c745000300	                      mov dword [r13], 3	     11488	option.c	FUNCTION_88	IF_21	IF_22
0x400ad4b	            0x7509	                           jne 0x400ad56	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400ad4d	          0x4084f6	                           test sil, sil	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400ad50	     0xf84d2feffff	                            je 0x400ac28	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400ad56	    0x41c745240200	               mov dword [r13 + 0x24], 2	     11494	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400ad5e	      0xe9cdfeffff	                           jmp 0x400ac30	     11494	option.c	FUNCTION_88	IF_21	IF_22	IF_23
buf_copy_options	WHILE,0:FOR,0:ELSE,2:SWITCH,1:CALL,37:IF,10:functions,0:DO,0	322
0x400a0e0	            0x4155	                                push r13	     11046	option.c	FUNCTION_84
0x400a0e2	            0x4154	                                push r12	     11046	option.c	FUNCTION_84
0x400a0e4	              0x55	                                push rbp	     11046	option.c	FUNCTION_84
0x400a0e5	              0x53	                                push rbx	     11046	option.c	FUNCTION_84
0x400a0e6	          0x4889fb	                            mov rbx, rdi	     11046	option.c	FUNCTION_84
0x400a0e9	        0x4883ec08	                              sub rsp, 8	     11046	option.c	FUNCTION_84
0x400a0ed	    0x488b3d000000	            mov rdi, qword [0x0400a0f4] 	     11056	option.c	FUNCTION_84	IF_1
0x400a0f4	          0x4885ff	                           test rdi, rdi	     11056	option.c	FUNCTION_84	IF_1
0x400a0f7	     0xf8476050000	                            je 0x400a673	     11056	option.c	FUNCTION_84	IF_1
0x400a0fd	            0x89f5	                            mov ebp, esi	     11056	option.c	FUNCTION_84	IF_1
0x400a0ff	      0xbe53000000	                           mov esi, 0x53	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400a104	      0xe800000000	                          call 0x400a109	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400a109	          0x4885c0	                           test rax, rax	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400a10c	     0xf8446060000	                            je 0x400a758	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400a112	        0x40f6c501	                             test bpl, 1	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400a116	     0xf846c050000	                            je 0x400a688	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400a11c	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400a122	    0x41bc01000000	                             mov r12d, 1	     11046	option.c	FUNCTION_84
0x400a128	          0x83e504	                              and ebp, 4	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400a12b	            0x7433	                            je 0x400a160	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400a12d	    0x8b8b58170000	          mov ecx, dword [rbx + 0x1758] 	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400a133	            0x85c9	                           test ecx, ecx	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400a135	            0x7429	                            je 0x400a160	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400a137	            0x85c0	                           test eax, eax	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a139	    0x4c8babb81400	          mov r13, qword [rbx + 0x14b8] 	     11085	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400a140	    0x48c783b81400	            mov qword [rbx + 0x14b8], 0 	     11086	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400a14b	     0xf8571050000	                           jne 0x400a6c2	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a151	      0xbd01000000	                              mov ebp, 1	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a156	            0xeb15	                           jmp 0x400a16d	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a158	     0xf1f84000000	                   nop dword [rax + rax]	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a160	            0x85c0	                           test eax, eax	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400a162	     0xf8548050000	                           jne 0x400a6b0	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400a168	            0x31ed	                            xor ebp, ebp	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400a16a	          0x4531ed	                          xor r13d, r13d	     11048	option.c	FUNCTION_84
0x400a16d	      0xbe01000000	                              mov esi, 1	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400a172	          0x4889df	                            mov rdi, rbx	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400a175	      0xe800000000	                          call 0x400a17a	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400a17a	    0x8b0500000000	            mov eax, dword [0x0400a180] 	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a180	    0x488b3d000000	            mov rdi, qword [0x0400a187] 	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400a187	    0xc78360150000	            mov dword [rbx + 0x1560], 0 	     11095	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a191	    0x8983b0150000	          mov dword [rbx + 0x15b0], eax 	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a197	      0xe800000000	                          call 0x400a19c	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400a19c	    0x488983881400	          mov qword [rbx + 0x1488], rax 	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400a1a3	    0x488b05000000	            mov rax, qword [0x0400a1aa] 	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400a1aa	           0xfb600	                   movzx eax, byte [rax]	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400a1ad	            0x3c6d	                            cmp al, 0x6d	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400a1af	     0xf84db050000	                            je 0x400a790	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400a1b5	            0x3c75	                            cmp al, 0x75	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400a1b7	     0xf8413060000	                            je 0x400a7d0	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400a1bd	            0x3c64	                            cmp al, 0x64	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400a1bf	     0xf84eb050000	                            je 0x400a7b0	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400a1c5	    0x488b3d000000	            mov rdi, qword [0x0400a1cc] 	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400a1cc	      0xe800000000	                          call 0x400a1d1	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400a1d1	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400a1d8	          0x4885c0	                           test rax, rax	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400a1db	            0x7409	                            je 0x400a1e6	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400a1dd	           0xfb600	                   movzx eax, byte [rax]	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400a1e0	    0x898304170000	          mov dword [rbx + 0x1704], eax 	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400a1e6	    0x488b05000000	            mov rax, qword [0x0400a1ed] 	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a1ed	    0x488983101400	          mov qword [rbx + 0x1410], rax 	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a1f4	    0x488983181400	          mov qword [rbx + 0x1418], rax 	     11114	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400a1fb	    0x8b0500000000	            mov eax, dword [0x0400a201] 	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x400a201	    0x8983ec130000	          mov dword [rbx + 0x13ec], eax 	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x400a207	    0x8b0500000000	            mov eax, dword [0x0400a20d] 	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x400a20d	    0x8983f0130000	          mov dword [rbx + 0x13f0], eax 	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x400a213	    0x488b05000000	            mov rax, qword [0x0400a21a] 	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x400a21a	    0x488983681500	          mov qword [rbx + 0x1568], rax 	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x400a221	    0x488b05000000	            mov rax, qword [0x0400a228] 	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x400a228	    0x488983b81500	          mov qword [rbx + 0x15b8], rax 	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x400a22f	    0x488b05000000	            mov rax, qword [0x0400a236] 	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x400a236	    0x488983c81500	          mov qword [rbx + 0x15c8], rax 	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x400a23d	    0x488b05000000	            mov rax, qword [0x0400a244] 	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x400a244	    0x488983c01500	          mov qword [rbx + 0x15c0], rax 	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x400a24b	    0x488b05000000	            mov rax, qword [0x0400a252] 	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x400a252	    0x488983d01500	          mov qword [rbx + 0x15d0], rax 	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x400a259	    0x488b05000000	            mov rax, qword [0x0400a260] 	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x400a260	    0x488983e01500	          mov qword [rbx + 0x15e0], rax 	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x400a267	    0x488b05000000	            mov rax, qword [0x0400a26e] 	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x400a26e	    0x488983d81500	          mov qword [rbx + 0x15d8], rax 	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x400a275	    0x8b0500000000	            mov eax, dword [0x0400a27b] 	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x400a27b	    0x898308140000	          mov dword [rbx + 0x1408], eax 	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x400a281	    0x8b0500000000	            mov eax, dword [0x0400a287] 	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x400a287	    0x89830c140000	          mov dword [rbx + 0x140c], eax 	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x400a28d	    0x8b0500000000	            mov eax, dword [0x0400a293] 	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x400a293	    0x898374140000	          mov dword [rbx + 0x1474], eax 	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x400a299	    0x8b0500000000	            mov eax, dword [0x0400a29f] 	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x400a29f	    0x898378140000	          mov dword [rbx + 0x1478], eax 	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x400a2a5	    0x8b0500000000	            mov eax, dword [0x0400a2ab] 	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x400a2ab	    0x89837c140000	          mov dword [rbx + 0x147c], eax 	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x400a2b1	    0x8b0500000000	            mov eax, dword [0x0400a2b7] 	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x400a2b7	    0x898380140000	          mov dword [rbx + 0x1480], eax 	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x400a2bd	    0x8b0500000000	            mov eax, dword [0x0400a2c3] 	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x400a2c3	    0x898338150000	          mov dword [rbx + 0x1538], eax 	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x400a2c9	    0x8b0500000000	            mov eax, dword [0x0400a2cf] 	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x400a2cf	    0x8b1500000000	            mov edx, dword [0x0400a2d5] 	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400a2d5	    0x488b3d000000	            mov rdi, qword [0x0400a2dc] 	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400a2dc	    0x89833c150000	          mov dword [rbx + 0x153c], eax 	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x400a2e2	    0x8b0500000000	            mov eax, dword [0x0400a2e8] 	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x400a2e8	            0x85d2	                           test edx, edx	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400a2ea	    0x8983b0140000	          mov dword [rbx + 0x14b0], eax 	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x400a2f0	      0xb800000000	                              mov eax, 0	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400a2f5	     0xf4405000000	           cmove eax, dword [0x0400a2fc]	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400a2fc	    0x898390150000	          mov dword [rbx + 0x1590], eax 	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400a302	      0xe800000000	                          call 0x400a307	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400a307	    0x488b3d000000	            mov rdi, qword [0x0400a30e] 	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400a30e	    0x488983581400	          mov qword [rbx + 0x1458], rax 	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400a315	      0xe800000000	                          call 0x400a31a	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400a31a	    0x488b3d000000	            mov rdi, qword [0x0400a321] 	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400a321	    0x488983601400	          mov qword [rbx + 0x1460], rax 	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400a328	      0xe800000000	                          call 0x400a32d	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400a32d	    0x488983681400	          mov qword [rbx + 0x1468], rax 	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400a334	    0x488b05000000	            mov rax, qword [0x0400a33b] 	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x400a33b	    0x488b3d000000	            mov rdi, qword [0x0400a342] 	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400a342	    0x488983781500	          mov qword [rbx + 0x1578], rax 	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x400a349	    0x488b05000000	            mov rax, qword [0x0400a350] 	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x400a350	    0x488983801500	          mov qword [rbx + 0x1580], rax 	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x400a357	    0x8b0500000000	            mov eax, dword [0x0400a35d] 	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x400a35d	    0x898370150000	          mov dword [rbx + 0x1570], eax 	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x400a363	      0xe800000000	                          call 0x400a368	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400a368	    0x488b3d000000	            mov rdi, qword [0x0400a36f] 	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400a36f	    0x488983481400	          mov qword [rbx + 0x1448], rax 	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400a376	      0xe800000000	                          call 0x400a37b	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400a37b	    0x488b3d000000	            mov rdi, qword [0x0400a382] 	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400a382	    0x488983501400	          mov qword [rbx + 0x1450], rax 	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400a389	      0xe800000000	                          call 0x400a38e	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400a38e	    0x488b3d000000	            mov rdi, qword [0x0400a395] 	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400a395	    0x488983a01400	          mov qword [rbx + 0x14a0], rax 	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400a39c	      0xe800000000	                          call 0x400a3a1	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400a3a1	    0x488b3d000000	            mov rdi, qword [0x0400a3a8] 	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400a3a8	    0x488983a81400	          mov qword [rbx + 0x14a8], rax 	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400a3af	      0xe800000000	                          call 0x400a3b4	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400a3b4	    0x488b3d000000	            mov rdi, qword [0x0400a3bb] 	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400a3bb	    0x488983481500	          mov qword [rbx + 0x1548], rax 	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400a3c2	      0xe800000000	                          call 0x400a3c7	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400a3c7	    0x488983301500	          mov qword [rbx + 0x1530], rax 	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400a3ce	    0x8b0500000000	            mov eax, dword [0x0400a3d4] 	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x400a3d4	    0x488b3d000000	            mov rdi, qword [0x0400a3db] 	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400a3db	    0x898374150000	          mov dword [rbx + 0x1574], eax 	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x400a3e1	    0x8b0500000000	            mov eax, dword [0x0400a3e7] 	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x400a3e7	    0x898304140000	          mov dword [rbx + 0x1404], eax 	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x400a3ed	    0x8b0500000000	            mov eax, dword [0x0400a3f3] 	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x400a3f3	    0x898328140000	          mov dword [rbx + 0x1428], eax 	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x400a3f9	      0xe800000000	                          call 0x400a3fe	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400a3fe	    0x488b3d000000	            mov rdi, qword [0x0400a405] 	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400a405	    0x488983381400	          mov qword [rbx + 0x1438], rax 	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400a40c	      0xe800000000	                          call 0x400a411	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400a411	    0x488983301400	          mov qword [rbx + 0x1430], rax 	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400a418	    0x488b05000000	            mov rax, qword [0x0400a41f] 	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x400a41f	    0x488b3d000000	            mov rdi, qword [0x0400a426] 	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400a426	    0x488983981400	          mov qword [rbx + 0x1498], rax 	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x400a42d	    0x8b0500000000	            mov eax, dword [0x0400a433] 	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x400a433	    0x898350150000	          mov dword [rbx + 0x1550], eax 	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x400a439	      0xe800000000	                          call 0x400a43e	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400a43e	    0x488983401400	          mov qword [rbx + 0x1440], rax 	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400a445	    0x8b0500000000	            mov eax, dword [0x0400a44b] 	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x400a44b	    0x488b15000000	            mov rdx, qword [0x0400a452] 	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x400a452	    0x488b3d000000	            mov rdi, qword [0x0400a459] 	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400a459	    0x898320150000	          mov dword [rbx + 0x1520], eax 	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x400a45f	    0x488b05000000	            mov rax, qword [0x0400a466] 	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x400a466	    0x488993981500	          mov qword [rbx + 0x1598], rdx 	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x400a46d	    0x488983a01500	          mov qword [rbx + 0x15a0], rax 	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x400a474	    0x488983181c00	          mov qword [rbx + 0x1c18], rax 	     11182	option.c	FUNCTION_84	IF_1	IF_3
0x400a47b	      0xe800000000	                          call 0x400a480	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400a480	    0x488db3d81b00	                 lea rsi, [rbx + 0x1bd8]	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400a487	          0x4889c7	                            mov rdi, rax	     11186	option.c	FUNCTION_84	IF_1	IF_3	CALL_23
0x400a48a	    0x488983d01b00	          mov qword [rbx + 0x1bd0], rax 	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400a491	      0xe8aa82ffff	        call sym.compile_cap_prog.isra.2	     11186	option.c	FUNCTION_84	IF_1	IF_3	CALL_23
0x400a496	    0x488b3d000000	            mov rdi, qword [0x0400a49d] 	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400a49d	      0xe800000000	                          call 0x400a4a2	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400a4a2	    0x488b3d000000	            mov rdi, qword [0x0400a4a9] 	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400a4a9	    0x488983e01b00	          mov qword [rbx + 0x1be0], rax 	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400a4b0	      0xe800000000	                          call 0x400a4b5	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400a4b5	    0x488b3d000000	            mov rdi, qword [0x0400a4bc] 	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400a4bc	    0x488983e81b00	          mov qword [rbx + 0x1be8], rax 	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400a4c3	      0xe800000000	                          call 0x400a4c8	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400a4c8	    0x488b3d000000	            mov rdi, qword [0x0400a4cf] 	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400a4cf	    0x488983e01400	          mov qword [rbx + 0x14e0], rax 	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400a4d6	      0xe800000000	                          call 0x400a4db	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400a4db	    0x488983f01400	          mov qword [rbx + 0x14f0], rax 	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400a4e2	    0x488b05000000	            mov rax, qword [0x0400a4e9] 	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x400a4e9	    0x488b3d000000	            mov rdi, qword [0x0400a4f0] 	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400a4f0	    0x488983f81400	          mov qword [rbx + 0x14f8], rax 	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x400a4f7	      0xe800000000	                          call 0x400a4fc	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400a4fc	    0x488b3d000000	            mov rdi, qword [0x0400a503] 	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400a503	    0x488983001500	          mov qword [rbx + 0x1500], rax 	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400a50a	      0xe800000000	                          call 0x400a50f	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400a50f	    0x488b3d000000	            mov rdi, qword [0x0400a516] 	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400a516	    0x488983101500	          mov qword [rbx + 0x1510], rax 	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400a51d	      0xe800000000	                          call 0x400a522	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400a522	    0x488b3d000000	            mov rdi, qword [0x0400a529] 	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400a529	    0x488983881500	          mov qword [rbx + 0x1588], rax 	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400a530	      0xe800000000	                          call 0x400a535	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400a535	    0x488983e81500	          mov qword [rbx + 0x15e8], rax 	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400a53c	    0x488b05000000	            mov rax, qword [0x0400a543] 	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x400a543	    0x66838b881200	               or word [rbx + 0x1288], 1	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x400a54b	    0x488b3d000000	            mov rdi, qword [0x0400a552] 	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400a552	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	     11218	option.c	FUNCTION_84	IF_1	IF_3
0x400a55c	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	     11219	option.c	FUNCTION_84	IF_1	IF_3
0x400a567	    0x488983601600	          mov qword [rbx + 0x1660], rax 	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x400a56e	    0x488b05000000	            mov rax, qword [0x0400a575] 	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x400a575	    0xc78300140000	            mov dword [rbx + 0x1400], 0 	     11221	option.c	FUNCTION_84	IF_1	IF_3
0x400a57f	    0xc78330160000	            mov dword [rbx + 0x1630], 0 	     11232	option.c	FUNCTION_84	IF_1	IF_3
0x400a589	    0x488983781200	          mov qword [rbx + 0x1278], rax 	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x400a590	    0x488b05000000	            mov rax, qword [0x0400a597] 	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x400a597	    0x488983801200	          mov qword [rbx + 0x1280], rax 	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x400a59e	    0x488b05000000	            mov rax, qword [0x0400a5a5] 	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x400a5a5	    0x488983f81300	          mov qword [rbx + 0x13f8], rax 	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x400a5ac	    0x488983f01500	          mov qword [rbx + 0x15f0], rax 	     11223	option.c	FUNCTION_84	IF_1	IF_3
0x400a5b3	    0x488983f81500	          mov qword [rbx + 0x15f8], rax 	     11224	option.c	FUNCTION_84	IF_1	IF_3
0x400a5ba	    0x488983001600	          mov qword [rbx + 0x1600], rax 	     11225	option.c	FUNCTION_84	IF_1	IF_3
0x400a5c1	    0x488983081600	          mov qword [rbx + 0x1608], rax 	     11227	option.c	FUNCTION_84	IF_1	IF_3
0x400a5c8	    0x488983181500	          mov qword [rbx + 0x1518], rax 	     11228	option.c	FUNCTION_84	IF_1	IF_3
0x400a5cf	    0x488983101600	          mov qword [rbx + 0x1610], rax 	     11229	option.c	FUNCTION_84	IF_1	IF_3
0x400a5d6	    0x488983201600	          mov qword [rbx + 0x1620], rax 	     11230	option.c	FUNCTION_84	IF_1	IF_3
0x400a5dd	    0x488983281600	          mov qword [rbx + 0x1628], rax 	     11231	option.c	FUNCTION_84	IF_1	IF_3
0x400a5e4	    0x488983c01400	          mov qword [rbx + 0x14c0], rax 	     11234	option.c	FUNCTION_84	IF_1	IF_3
0x400a5eb	    0x488983c81400	          mov qword [rbx + 0x14c8], rax 	     11235	option.c	FUNCTION_84	IF_1	IF_3
0x400a5f2	      0xe800000000	                          call 0x400a5f7	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400a5f7	    0x488983d01400	          mov qword [rbx + 0x14d0], rax 	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400a5fe	    0x488b05000000	            mov rax, qword [0x0400a605] 	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x400a605	    0x488b3d000000	            mov rdi, qword [0x0400a60c] 	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400a60c	    0x488983381600	          mov qword [rbx + 0x1638], rax 	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x400a613	    0x488983401600	          mov qword [rbx + 0x1640], rax 	     11242	option.c	FUNCTION_84	IF_1	IF_3
0x400a61a	      0xe800000000	                          call 0x400a61f	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400a61f	    0x8b1500000000	            mov edx, dword [0x0400a625] 	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x400a625	    0x488983581500	          mov qword [rbx + 0x1558], rax 	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400a62c	            0x85ed	                           test ebp, ebp	     11269	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400a62e	    0x488b05000000	            mov rax, qword [0x0400a635] 	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x400a635	    0x899350160000	          mov dword [rbx + 0x1650], edx 	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x400a63b	    0x488983381700	          mov qword [rbx + 0x1738], rax 	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x400a642	    0x488983481700	          mov qword [rbx + 0x1748], rax 	     11251	option.c	FUNCTION_84	IF_1	IF_3
0x400a649	    0x488983581600	          mov qword [rbx + 0x1658], rax 	     11257	option.c	FUNCTION_84	IF_1	IF_3
0x400a650	    0x488983281500	          mov qword [rbx + 0x1528], rax 	     11260	option.c	FUNCTION_84	IF_1	IF_3
0x400a657	     0xf8483000000	                            je 0x400a6e0	     11269	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400a65d	          0x4585e4	                         test r12d, r12d	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400a660	    0x4c89abb81400	          mov qword [rbx + 0x14b8], r13 	     11270	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400a667	            0x740a	                            je 0x400a673	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400a669	    0xc783a8120000	            mov dword [rbx + 0x12a8], 1 	     11288	option.c	FUNCTION_84	IF_1	IF_9
0x400a673	        0x4883c408	                              add rsp, 8	     11294	option.c	FUNCTION_84
0x400a677	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x400a67a	              0x5b	                                 pop rbx	     11294	option.c	FUNCTION_84
0x400a67b	              0x5d	                                 pop rbp	     11294	option.c	FUNCTION_84
0x400a67c	            0x415c	                                 pop r12	     11294	option.c	FUNCTION_84
0x400a67e	            0x415d	                                 pop r13	     11294	option.c	FUNCTION_84
0x400a680	      0xe90b94ffff	               jmp sym.check_buf_options	     11291	option.c	FUNCTION_84	CALL_36
0x400a685	           0xf1f00	                         nop dword [rax]	     11291	option.c	FUNCTION_84	CALL_36
0x400a688	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400a68e	            0x85c0	                           test eax, eax	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400a690	     0xf84da000000	                            je 0x400a770	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400a696	        0x40f6c502	                             test bpl, 2	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400a69a	            0x74d7	                            je 0x400a673	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400a69c	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400a6a2	          0x4531e4	                          xor r12d, r12d	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400a6a5	      0xe97efaffff	                           jmp 0x400a128	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400a6aa	    0x660f1f440000	                    nop word [rax + rax]	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400a6b0	    0x4c8babb81400	          mov r13, qword [rbx + 0x14b8] 	     11085	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400a6b7	    0x48c783b81400	            mov qword [rbx + 0x14b8], 0 	     11086	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400a6c2	            0x31f6	                            xor esi, esi	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400a6c4	          0x4889df	                            mov rdi, rbx	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400a6c7	      0xbd01000000	                              mov ebp, 1	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400a6cc	      0xe800000000	                          call 0x400a6d1	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400a6d1	      0xe925fbffff	                           jmp 0x400a1fb	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400a6d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400a6e0	    0x488b3d000000	            mov rdi, qword [0x0400a6e7] 	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400a6e7	      0xe800000000	                          call 0x400a6ec	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400a6ec	    0x488bbb181400	          mov rdi, qword [rbx + 0x1418] 	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400a6f3	    0x488983b81400	          mov qword [rbx + 0x14b8], rax 	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400a6fa	    0x488b05000000	            mov rax, qword [0x0400a701] 	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400a701	    0xc78358170000	            mov dword [rbx + 0x1758], 0 	     11276	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400a70b	    0x488983a81500	          mov qword [rbx + 0x15a8], rax 	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400a712	          0x803f68	                    cmp byte [rdi], 0x68	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400a715	     0xf84d5000000	                            je 0x400a7f0	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400a71b	    0x8b0500000000	            mov eax, dword [0x0400a721] 	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400a721	          0x4585e4	                         test r12d, r12d	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400a724	    0x898340150000	          mov dword [rbx + 0x1540], eax 	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400a72a	            0x740a	                            je 0x400a736	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400a72c	    0xc783a8120000	            mov dword [rbx + 0x12a8], 1 	     11288	option.c	FUNCTION_84	IF_1	IF_9
0x400a736	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x400a739	      0xe800000000	                          call 0x400a73e	     11291	option.c	FUNCTION_84	CALL_36
0x400a73e	        0x4883c408	                              add rsp, 8	     11294	option.c	FUNCTION_84
0x400a742	          0x4889df	                            mov rdi, rbx	     11293	option.c	FUNCTION_84	CALL_37
0x400a745	            0x31f6	                            xor esi, esi	     11293	option.c	FUNCTION_84	CALL_37
0x400a747	              0x5b	                                 pop rbx	     11294	option.c	FUNCTION_84
0x400a748	              0x5d	                                 pop rbp	     11294	option.c	FUNCTION_84
0x400a749	            0x415c	                                 pop r12	     11294	option.c	FUNCTION_84
0x400a74b	            0x415d	                                 pop r13	     11294	option.c	FUNCTION_84
0x400a74d	      0xe900000000	                           jmp 0x400a752	     11293	option.c	FUNCTION_84	CALL_37
0x400a752	    0x660f1f440000	                    nop word [rax + rax]	     11293	option.c	FUNCTION_84	CALL_37
0x400a758	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400a75e	            0x85c0	                           test eax, eax	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400a760	     0xf8530ffffff	                           jne 0x400a696	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400a766	        0x40f6c501	                             test bpl, 1	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400a76a	     0xf85b2f9ffff	                           jne 0x400a122	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400a770	    0x488b3d000000	            mov rdi, qword [0x0400a777] 	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400a777	      0xbe73000000	                           mov esi, 0x73	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400a77c	      0xe800000000	                          call 0x400a781	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400a781	          0x4885c0	                           test rax, rax	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400a784	     0xf850cffffff	                           jne 0x400a696	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400a78a	      0xe98df9ffff	                           jmp 0x400a11c	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400a78f	              0x90	                                     nop	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400a790	      0xbf00000000	                              mov edi, 0	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400a795	      0xe800000000	                          call 0x400a79a	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400a79a	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400a7a1	      0xe932faffff	                           jmp 0x400a1d8	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400a7a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400a7b0	      0xbf00000000	                              mov edi, 0	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400a7b5	      0xe800000000	                          call 0x400a7ba	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400a7ba	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400a7c1	      0xe912faffff	                           jmp 0x400a1d8	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400a7c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400a7d0	      0xbf00000000	                              mov edi, 0	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400a7d5	      0xe800000000	                          call 0x400a7da	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400a7da	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400a7e1	      0xe9f2f9ffff	                           jmp 0x400a1d8	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400a7e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400a7f0	    0x488b05000000	            mov rax, qword [0x0400a7f7] 	      5763	option.c	FUNCTION_31	IF_1
0x400a7f7	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400a7fa	            0x740c	                            je 0x400a808	      5763	option.c	FUNCTION_31	IF_1
0x400a7fc	      0xe800000000	                          call 0x400a801	      5764	option.c	FUNCTION_31	CALL_1
0x400a801	    0x488b05000000	            mov rax, qword [0x0400a808] 	      5764	option.c	FUNCTION_31	CALL_1
0x400a808	    0x488983181400	          mov qword [rbx + 0x1418], rax 	      5765	option.c	FUNCTION_31
0x400a80f	      0xe907ffffff	                           jmp 0x400a71b	      5765	option.c	FUNCTION_31
put_setstring	WHILE,1:FOR,0:ELSE,2:SWITCH,0:CALL,9:IF,9:functions,0:DO,0	87
0x40013f0	            0x4154	                                push r12	     10193	option.c	FUNCTION_66
0x40013f2	              0x55	                                push rbp	     10193	option.c	FUNCTION_66
0x40013f3	          0x4589c4	                           mov r12d, r8d	     10193	option.c	FUNCTION_66
0x40013f6	              0x53	                                push rbx	     10193	option.c	FUNCTION_66
0x40013f7	          0x4989d0	                             mov r8, rdx	        97	stdio2.h	CALL_64
0x40013fa	          0x4889cd	                            mov rbp, rcx	     10193	option.c	FUNCTION_66
0x40013fd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_64
0x4001402	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_64
0x4001405	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_64
0x400140a	        0x4883ec20	                           sub rsp, 0x20	     10193	option.c	FUNCTION_66
0x400140e	          0x4889fb	                            mov rbx, rdi	     10193	option.c	FUNCTION_66
0x4001411	    0x64488b042528	                mov rax, qword fs:[0x28]	     10193	option.c	FUNCTION_66
0x400141a	      0x4889442418	             mov qword [rsp + 0x18], rax	     10193	option.c	FUNCTION_66
0x400141f	            0x31c0	                            xor eax, eax	     10193	option.c	FUNCTION_66
0x4001421	      0xe800000000	                          call 0x4001426	        97	stdio2.h	CALL_64
0x4001426	            0x85c0	                           test eax, eax	     10197	option.c	FUNCTION_66	IF_1
0x4001428	     0xf889b000000	                            js 0x40014c9	     10197	option.c	FUNCTION_66	IF_1
0x400142e	        0x488b7500	                    mov rsi, qword [rbp]	     10199	option.c	FUNCTION_66	IF_2
0x4001432	          0x4885f6	                           test rsi, rsi	     10199	option.c	FUNCTION_66	IF_2
0x4001435	            0x7456	                            je 0x400148d	     10199	option.c	FUNCTION_66	IF_2
0x4001437	    0x4881fd000000	                              cmp rbp, 0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x400143e	     0xf84a4000000	                            je 0x40014e8	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4001444	          0x4585e4	                         test r12d, r12d	     10211	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5
0x4001447	            0x746f	                            je 0x40014b8	     10211	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5
0x4001449	      0xbf00100000	                         mov edi, 0x1000	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x400144e	      0xe800000000	                          call 0x4001453	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x4001453	          0x4885c0	                           test rax, rax	     10214	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x4001456	          0x4989c4	                            mov r12, rax	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x4001459	            0x746e	                            je 0x40014c9	     10214	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x400145b	        0x488b7500	                    mov rsi, qword [rbp]	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x400145f	          0x4531c0	                            xor r8d, r8d	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4001462	          0x4889c2	                            mov rdx, rax	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4001465	            0x31ff	                            xor edi, edi	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4001467	      0xb900100000	                         mov ecx, 0x1000	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x400146c	      0xe800000000	                          call 0x4001471	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4001471	      0xba02000000	                              mov edx, 2	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4001476	          0x4c89e6	                            mov rsi, r12	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4001479	          0x4889df	                            mov rdi, rbx	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x400147c	      0xe800000000	                          call 0x4001481	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4001481	            0x85c0	                           test eax, eax	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4001483	            0x744b	                            je 0x40014d0	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4001485	          0x4c89e7	                            mov rdi, r12	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_7
0x4001488	      0xe800000000	                          call 0x400148d	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_7
0x400148d	          0x4889df	                            mov rdi, rbx	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4001490	      0xe800000000	                          call 0x4001495	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4001495	            0xf7d0	                                 not eax	     10198	option.c	FUNCTION_66	IF_1
0x4001497	          0xc1e81f	                           shr eax, 0x1f	     10198	option.c	FUNCTION_66	IF_1
0x400149a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	     10230	option.c	FUNCTION_66
0x400149f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10230	option.c	FUNCTION_66
0x40014a8	            0x7575	                           jne 0x400151f	     10230	option.c	FUNCTION_66
0x40014aa	        0x4883c420	                           add rsp, 0x20	     10230	option.c	FUNCTION_66
0x40014ae	              0x5b	                                 pop rbx	     10230	option.c	FUNCTION_66
0x40014af	              0x5d	                                 pop rbp	     10230	option.c	FUNCTION_66
0x40014b0	            0x415c	                                 pop r12	     10230	option.c	FUNCTION_66
0x40014b2	              0xc3	                                     ret	     10230	option.c	FUNCTION_66
0x40014b3	       0xf1f440000	                   nop dword [rax + rax]	     10230	option.c	FUNCTION_66
0x40014b8	      0xba02000000	                              mov edx, 2	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40014bd	          0x4889df	                            mov rdi, rbx	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40014c0	      0xe800000000	                          call 0x40014c5	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40014c5	            0x85c0	                           test eax, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40014c7	            0x75c4	                           jne 0x400148d	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40014c9	            0x31c0	                            xor eax, eax	     10198	option.c	FUNCTION_66	IF_1
0x40014cb	            0xebcd	                           jmp 0x400149a	     10198	option.c	FUNCTION_66	IF_1
0x40014cd	           0xf1f00	                         nop dword [rax]	     10198	option.c	FUNCTION_66	IF_1
0x40014d0	          0x4c89e7	                            mov rdi, r12	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x40014d3	        0x8944240c	              mov dword [rsp + 0xc], eax	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x40014d7	      0xe800000000	                          call 0x40014dc	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x40014dc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10220	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7
0x40014e0	            0xebb8	                           jmp 0x400149a	     10220	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7
0x40014e2	    0x660f1f440000	                    nop word [rax + rax]	     10220	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7
0x40014e8	      0x4889742410	             mov qword [rsp + 0x10], rsi	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x40014ed	            0xeb26	                           jmp 0x4001515	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x40014ef	              0x90	                                     nop	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x40014f0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40014f5	            0x31f6	                            xor esi, esi	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40014f7	      0xe800000000	                          call 0x40014fc	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40014fc	      0xba02000000	                              mov edx, 2	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4001501	          0x4889c6	                            mov rsi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4001504	          0x4889df	                            mov rdi, rbx	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4001507	      0xe800000000	                          call 0x400150c	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400150c	            0x85c0	                           test eax, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400150e	            0x74b9	                            je 0x40014c9	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4001510	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4001515	          0x803e00	                       cmp byte [rsi], 0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4001518	            0x75d6	                           jne 0x40014f0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400151a	      0xe96effffff	                           jmp 0x400148d	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400151f	      0xe800000000	                          call 0x4001524	     10230	option.c	FUNCTION_66
get_winbuf_options	WHILE,0:FOR,1:ELSE,2:SWITCH,0:CALL,6:IF,5:functions,0:DO,0	75
0x400f200	            0x4156	                                push r14	     12715	option.c	FUNCTION_119
0x400f202	            0x4155	                                push r13	     12715	option.c	FUNCTION_119
0x400f204	          0x4189fd	                           mov r13d, edi	     12715	option.c	FUNCTION_119
0x400f207	            0x4154	                                push r12	     12715	option.c	FUNCTION_119
0x400f209	              0x55	                                push rbp	     12715	option.c	FUNCTION_119
0x400f20a	              0x53	                                push rbx	     12715	option.c	FUNCTION_119
0x400f20b	      0xe800000000	                          call 0x400f210	     12719	option.c	FUNCTION_119	CALL_1
0x400f210	          0x4885c0	                           test rax, rax	     12720	option.c	FUNCTION_119	IF_1
0x400f213	     0xf84dd000000	                            je 0x400f2f6	     12720	option.c	FUNCTION_119	IF_1
0x400f219	          0x4989c6	                            mov r14, rax	     12720	option.c	FUNCTION_119	IF_1
0x400f21c	      0xbb00000000	                              mov ebx, 0	     12720	option.c	FUNCTION_119	IF_1
0x400f221	          0x4531e4	                          xor r12d, r12d	     12720	option.c	FUNCTION_119	IF_1
0x400f224	            0xeb62	                           jmp 0x400f288	     12720	option.c	FUNCTION_119	IF_1
0x400f226	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12720	option.c	FUNCTION_119	IF_1
0x400f230	          0x4963ec	                        movsxd rbp, r12d	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400f233	          0x4889e8	                            mov rax, rbp	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400f236	        0x48c1e006	                              shl rax, 6	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400f23a	    0xf68000000000	                   test byte [rax], 0x20	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400f241	            0x743d	                            je 0x400f280	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x400f243	        0x488b7bf8	                mov rdi, qword [rbx - 8]	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x400f247	          0x4889de	                            mov rsi, rbx	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x400f24a	      0xe8e122ffff	                call sym.get_varp.isra.1	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x400f24f	          0x4885c0	                           test rax, rax	     12732	option.c	FUNCTION_119	FOR_1	IF_2	IF_3
0x400f252	            0x742c	                            je 0x400f280	     12732	option.c	FUNCTION_119	FOR_1	IF_2	IF_3
0x400f254	        0x48c1e506	                              shl rbp, 6	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400f258	    0x488b95000000	                    mov rdx, qword [rbp]	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400f25f	          0xf6c204	                              test dl, 4	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400f262	            0x757c	                           jne 0x400f2e0	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x400f264	          0x83e202	                              and edx, 2	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400f267	            0x745f	                            je 0x400f2c8	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400f269	          0x488b10	                    mov rdx, qword [rax]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400f26c	    0x488bb5000000	                    mov rsi, qword [rbp]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400f273	            0x31c9	                            xor ecx, ecx	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400f275	          0x4c89f7	                            mov rdi, r14	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400f278	      0xe800000000	                          call 0x400f27d	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400f27d	           0xf1f00	                         nop dword [rax]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x400f280	        0x4183c401	                             add r12d, 1	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400f284	        0x4883c340	                           add rbx, 0x40	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400f288	        0x488b43e0	             mov rax, qword [rbx - 0x20]	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x400f28c	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400f28f	            0x741f	                            je 0x400f2b0	     10375	option.c	FUNCTION_73
0x400f291	          0x4585ed	                         test r13d, r13d	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f294	            0x749a	                            je 0x400f230	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f296	          0x4963ec	                        movsxd rbp, r12d	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f299	          0x4889e8	                            mov rax, rbp	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f29c	        0x48c1e006	                              shl rax, 6	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f2a0	    0xf68000000000	                   test byte [rax], 0x40	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f2a7	            0x759a	                           jne 0x400f243	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f2a9	            0xebd5	                           jmp 0x400f280	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f2ab	       0xf1f440000	                   nop dword [rax + rax]	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x400f2b0	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400f2b4	            0x75db	                           jne 0x400f291	     10375	option.c	FUNCTION_73
0x400f2b6	          0x4c89f0	                            mov rax, r14	     10375	option.c	FUNCTION_73
0x400f2b9	              0x5b	                                 pop rbx	     12745	option.c	FUNCTION_119
0x400f2ba	              0x5d	                                 pop rbp	     12745	option.c	FUNCTION_119
0x400f2bb	            0x415c	                                 pop r12	     12745	option.c	FUNCTION_119
0x400f2bd	            0x415d	                                 pop r13	     12745	option.c	FUNCTION_119
0x400f2bf	            0x415e	                                 pop r14	     12745	option.c	FUNCTION_119
0x400f2c1	              0xc3	                                     ret	     12745	option.c	FUNCTION_119
0x400f2c2	    0x660f1f440000	                    nop word [rax + rax]	     12745	option.c	FUNCTION_119
0x400f2c8	          0x486310	                 movsxd rdx, dword [rax]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400f2cb	    0x488bb5000000	                    mov rsi, qword [rbp]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400f2d2	            0x31c9	                            xor ecx, ecx	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400f2d4	          0x4c89f7	                            mov rdi, r14	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400f2d7	      0xe800000000	                          call 0x400f2dc	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400f2dc	            0xeba2	                           jmp 0x400f280	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400f2de	            0x6690	                                     nop	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x400f2e0	          0x488b08	                    mov rcx, qword [rax]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400f2e3	    0x488bb5000000	                    mov rsi, qword [rbp]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400f2ea	            0x31d2	                            xor edx, edx	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400f2ec	          0x4c89f7	                            mov rdi, r14	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400f2ef	      0xe800000000	                          call 0x400f2f4	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400f2f4	            0xeb8a	                           jmp 0x400f280	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x400f2f6	            0x31c0	                            xor eax, eax	     12721	option.c	FUNCTION_119	IF_1
0x400f2f8	            0xebbf	                           jmp 0x400f2b9	     12721	option.c	FUNCTION_119	IF_1
valid_filetype	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,2:IF,1:functions,0:DO,0	20
0x4000040	          0x83e604	                              and esi, 4	      5820	option.c	IF_1
0x4000043	          0x4863ff	                         movsxd rdi, edi	      5821	option.c	IF_1	SWITCH_1
0x4000046	            0x742f	                            je 0x4000077	      5820	option.c	IF_1
0x4000048	          0x4889f8	                            mov rax, rdi	      5821	option.c	IF_1	SWITCH_1
0x400004b	        0x48c1e006	                              shl rax, 6	      5821	option.c	IF_1	SWITCH_1
0x400004f	    0x8b8000000000	                    mov eax, dword [rax]	      5821	option.c	IF_1	SWITCH_1
0x4000055	      0x3d20400000	                         cmp eax, 0x4020	      5821	option.c	IF_1	SWITCH_1
0x400005a	            0x7474	                            je 0x40000d0	      5821	option.c	IF_1	SWITCH_1
0x400005c	            0x772a	                            ja 0x4000088	      5821	option.c	IF_1	SWITCH_1
0x400005e	      0x3d12200000	                         cmp eax, 0x2012	      5821	option.c	IF_1	SWITCH_1
0x4000063	            0x744b	                            je 0x40000b0	      5821	option.c	IF_1	SWITCH_1
0x4000065	      0x3d21300000	                         cmp eax, 0x3021	      5821	option.c	IF_1	SWITCH_1
0x400006a	     0xf8480000000	                            je 0x40000f0	      5821	option.c	IF_1	SWITCH_1
0x4000070	      0x3d11200000	                         cmp eax, 0x2011	      5821	option.c	IF_1	SWITCH_1
0x4000075	            0x7469	                            je 0x40000e0	      5821	option.c	IF_1	SWITCH_1
0x4000077	        0x48c1e706	                              shl rdi, 6	      5845	option.c	
0x400007b	              0x48	                                 invalid	      5845	option.c	
0x400007c	              0x8d	                                 invalid	      5845	option.c	
0x400007d	            0x8700	                   xchg dword [rax], eax	      5845	option.c	
0x400007f	               0x0	                                 invalid	      5845	option.c	
get_option_value	WHILE,0:FOR,0:ELSE,4:SWITCH,0:CALL,11:IF,12:functions,0:DO,0	118
0x4004cc0	            0x4155	                                push r13	      9412	option.c	FUNCTION_53
0x4004cc2	            0x4154	                                push r12	      9412	option.c	FUNCTION_53
0x4004cc4	          0x4189cd	                           mov r13d, ecx	      9412	option.c	FUNCTION_53
0x4004cc7	              0x55	                                push rbp	      9412	option.c	FUNCTION_53
0x4004cc8	              0x53	                                push rbx	      9412	option.c	FUNCTION_53
0x4004cc9	          0x4989f4	                            mov r12, rsi	      9412	option.c	FUNCTION_53
0x4004ccc	          0x4889fb	                            mov rbx, rdi	      9412	option.c	FUNCTION_53
0x4004ccf	          0x4889d5	                            mov rbp, rdx	      9412	option.c	FUNCTION_53
0x4004cd2	        0x4883ec18	                           sub rsp, 0x18	      9412	option.c	FUNCTION_53
0x4004cd6	    0x64488b042528	                mov rax, qword fs:[0x28]	      9412	option.c	FUNCTION_53
0x4004cdf	      0x4889442408	                mov qword [rsp + 8], rax	      9412	option.c	FUNCTION_53
0x4004ce4	            0x31c0	                            xor eax, eax	      9412	option.c	FUNCTION_53
0x4004ce6	      0xe8c5b7ffff	                     call sym.findoption	      9416	option.c	FUNCTION_53	CALL_1
0x4004ceb	            0x85c0	                           test eax, eax	      9417	option.c	FUNCTION_53	IF_1
0x4004ced	     0xf88bd000000	                            js 0x4004db0	      9417	option.c	FUNCTION_53	IF_1
0x4004cf3	            0x4898	                                    cdqe	      9448	option.c	FUNCTION_53	CALL_8
0x4004cf5	          0x4489ee	                           mov esi, r13d	      9448	option.c	FUNCTION_53	CALL_8
0x4004cf8	        0x48c1e006	                              shl rax, 6	      9448	option.c	FUNCTION_53	CALL_8
0x4004cfc	    0x488d98000000	                          lea rbx, [rax]	      9448	option.c	FUNCTION_53	CALL_8
0x4004d03	          0x4889df	                            mov rdi, rbx	      9448	option.c	FUNCTION_53	CALL_8
0x4004d06	      0xe855d7ffff	                 call sym.get_varp_scope	      9448	option.c	FUNCTION_53	CALL_8
0x4004d0b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      9450	option.c	FUNCTION_53	IF_6
0x4004d0f	          0xf6c204	                              test dl, 4	      9450	option.c	FUNCTION_53	IF_6
0x4004d12	            0x745c	                            je 0x4004d70	      9450	option.c	FUNCTION_53	IF_6
0x4004d14	          0x4885c0	                           test rax, rax	      9452	option.c	FUNCTION_53	IF_6	IF_7
0x4004d17	     0xf846d010000	                            je 0x4004e8a	      9452	option.c	FUNCTION_53	IF_6	IF_7
0x4004d1d	          0x4885ed	                           test rbp, rbp	      9454	option.c	FUNCTION_53	IF_6	IF_8
0x4004d20	     0xf84e3000000	                            je 0x4004e09	      9454	option.c	FUNCTION_53	IF_6	IF_8
0x4004d26	    0x488b35000000	            mov rsi, qword [0x04004d2d] 	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004d2d	          0x488b38	                    mov rdi, qword [rax]	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004d30	    0x488d96101500	                 lea rdx, [rsi + 0x1510]	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004d37	          0x4839d0	                            cmp rax, rdx	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004d3a	     0xf84e8000000	                            je 0x4004e28	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004d40	      0xe800000000	                          call 0x4004d45	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x4004d45	        0x48894500	                    mov qword [rbp], rax	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x4004d49	            0x31c0	                            xor eax, eax	      9465	option.c	FUNCTION_53	IF_6
0x4004d4b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      9482	option.c	FUNCTION_53
0x4004d50	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9482	option.c	FUNCTION_53
0x4004d59	     0xf853f010000	                           jne 0x4004e9e	      9482	option.c	FUNCTION_53
0x4004d5f	        0x4883c418	                           add rsp, 0x18	      9482	option.c	FUNCTION_53
0x4004d63	              0x5b	                                 pop rbx	      9482	option.c	FUNCTION_53
0x4004d64	              0x5d	                                 pop rbp	      9482	option.c	FUNCTION_53
0x4004d65	            0x415c	                                 pop r12	      9482	option.c	FUNCTION_53
0x4004d67	            0x415d	                                 pop r13	      9482	option.c	FUNCTION_53
0x4004d69	              0xc3	                                     ret	      9482	option.c	FUNCTION_53
0x4004d6a	    0x660f1f440000	                    nop word [rax + rax]	      9482	option.c	FUNCTION_53
0x4004d70	          0x4885c0	                           test rax, rax	      9468	option.c	FUNCTION_53	IF_10
0x4004d73	     0xf841b010000	                            je 0x4004e94	      9468	option.c	FUNCTION_53	IF_10
0x4004d79	          0x83e202	                              and edx, 2	      9470	option.c	FUNCTION_53	IF_11
0x4004d7c	     0xf858e000000	                           jne 0x4004e10	      9470	option.c	FUNCTION_53	IF_11
0x4004d82	    0x488b35000000	            mov rsi, qword [0x04004d89] 	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x4004d89	    0x488d96c80000	                   lea rdx, [rsi + 0xc8]	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x4004d90	          0x4839d0	                            cmp rax, rdx	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x4004d93	     0xf84dc000000	                            je 0x4004e75	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x4004d99	          0x486300	                 movsxd rax, dword [rax]	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x4004d9c	        0x49890424	                    mov qword [r12], rax	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x4004da0	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x4004da5	            0xeba4	                           jmp 0x4004d4b	      9481	option.c	FUNCTION_53
0x4004da7	    0x660f1f840000	                    nop word [rax + rax]	      9481	option.c	FUNCTION_53
0x4004db0	          0x4889df	                            mov rdi, rbx	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4004db3	      0xe800000000	                          call 0x4004db8	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4004db8	        0x4883f804	                              cmp rax, 4	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4004dbc	     0xf858e000000	                           jne 0x4004e50	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4004dc2	          0x803b74	                    cmp byte [rbx], 0x74	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4004dc5	     0xf8585000000	                           jne 0x4004e50	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4004dcb	        0x807b015f	                cmp byte [rbx + 1], 0x5f	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4004dcf	            0x757f	                           jne 0x4004e50	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4004dd1	          0x4889df	                            mov rdi, rbx	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x4004dd4	      0xe8a7c4ffff	                call sym.find_key_option	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x4004dd9	            0x85c0	                           test eax, eax	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x4004ddb	            0x7473	                            je 0x4004e50	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x4004ddd	     0xf887d000000	                            js 0x4004e60	      9427	option.c	FUNCTION_53	IF_1	IF_2	IF_3
0x4004de3	        0xc60424f2	                    mov byte [rsp], 0xf2	      9434	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x4004de7	        0x88442401	                  mov byte [rsp + 1], al	      9435	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x4004deb	          0x4889e7	                            mov rdi, rsp	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x4004dee	      0xe800000000	                          call 0x4004df3	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x4004df3	          0x4885c0	                           test rax, rax	      9438	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x4004df6	            0x7458	                            je 0x4004e50	      9438	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x4004df8	          0x4885ed	                           test rbp, rbp	      9440	option.c	FUNCTION_53	IF_1	IF_2	IF_4	IF_5
0x4004dfb	            0x740c	                            je 0x4004e09	      9440	option.c	FUNCTION_53	IF_1	IF_2	IF_4	IF_5
0x4004dfd	          0x4889c7	                            mov rdi, rax	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x4004e00	      0xe800000000	                          call 0x4004e05	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x4004e05	        0x48894500	                    mov qword [rbp], rax	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x4004e09	            0x31c0	                            xor eax, eax	      9465	option.c	FUNCTION_53	IF_6
0x4004e0b	      0xe93bffffff	                           jmp 0x4004d4b	      9465	option.c	FUNCTION_53	IF_6
0x4004e10	          0x488b00	                    mov rax, qword [rax]	      9471	option.c	FUNCTION_53	IF_11
0x4004e13	        0x49890424	                    mov qword [r12], rax	      9471	option.c	FUNCTION_53	IF_11
0x4004e17	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x4004e1c	      0xe92affffff	                           jmp 0x4004d4b	      9481	option.c	FUNCTION_53
0x4004e21	     0xf1f80000000	                         nop dword [rax]	      9481	option.c	FUNCTION_53
0x4004e28	          0x803f00	                       cmp byte [rdi], 0	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004e2b	     0xf840fffffff	                            je 0x4004d40	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4004e31	      0xbf00000000	                              mov edi, 0	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x4004e36	      0xe800000000	                          call 0x4004e3b	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x4004e3b	        0x48894500	                    mov qword [rbp], rax	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x4004e3f	            0x31c0	                            xor eax, eax	      9465	option.c	FUNCTION_53	IF_6
0x4004e41	      0xe905ffffff	                           jmp 0x4004d4b	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x4004e46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x4004e50	      0xb8fdffffff	                     mov eax, 0xfffffffd	      9445	option.c	FUNCTION_53	IF_1
0x4004e55	      0xe9f1feffff	                           jmp 0x4004d4b	      9445	option.c	FUNCTION_53	IF_1
0x4004e5a	    0x660f1f440000	                    nop word [rax + rax]	      9445	option.c	FUNCTION_53	IF_1
0x4004e60	            0x89c2	                            mov edx, eax	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x4004e62	            0xf7d8	                                 neg eax	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4004e64	            0xf7da	                                 neg edx	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x4004e66	          0xc1e808	                              shr eax, 8	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4004e69	          0x881424	                      mov byte [rsp], dl	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x4004e6c	        0x88442401	                  mov byte [rsp + 1], al	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4004e70	      0xe976ffffff	                           jmp 0x4004deb	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4004e75	      0xe800000000	                          call 0x4004e7a	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x4004e7a	            0x4898	                                    cdqe	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x4004e7c	        0x49890424	                    mov qword [r12], rax	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x4004e80	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x4004e85	      0xe9c1feffff	                           jmp 0x4004d4b	      9481	option.c	FUNCTION_53
0x4004e8a	      0xb8feffffff	                     mov eax, 0xfffffffe	      9453	option.c	FUNCTION_53	IF_6	IF_7
0x4004e8f	      0xe9b7feffff	                           jmp 0x4004d4b	      9453	option.c	FUNCTION_53	IF_6	IF_7
0x4004e94	      0xb8ffffffff	                     mov eax, 0xffffffff	      9469	option.c	FUNCTION_53	IF_10
0x4004e99	      0xe9adfeffff	                           jmp 0x4004d4b	      9469	option.c	FUNCTION_53	IF_10
0x4004e9e	      0xe800000000	                          call 0x4004ea3	      9482	option.c	FUNCTION_53
set_term_option_alloced	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,0:IF,1:functions,0:DO,0	20
0x4004390	    0x48833d000000	               cmp qword [0x04004398], 0	      5783	option.c	FUNCTION_33	FOR_1
0x4004398	            0x7429	                            je 0x40043c3	      5783	option.c	FUNCTION_33	FOR_1
0x400439a	    0x483b3d000000	            cmp rdi, qword [0x040043a1] 	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043a1	      0xb800000000	                              mov eax, 0	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043a6	      0xba01000000	                              mov edx, 1	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043ab	            0x750d	                           jne 0x40043ba	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043ad	            0xeb16	                           jmp 0x40043c5	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043af	              0x90	                                     nop	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043b0	        0x4883c040	                           add rax, 0x40	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043b4	        0x483978d8	            cmp qword [rax - 0x28], rdi 	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043b8	            0x7410	                            je 0x40043ca	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40043ba	          0x83c201	                              add edx, 1	      5783	option.c	FUNCTION_33	FOR_1
0x40043bd	        0x48833800	                      cmp qword [rax], 0	      5783	option.c	FUNCTION_33	FOR_1
0x40043c1	            0x75ed	                           jne 0x40043b0	      5783	option.c	FUNCTION_33	FOR_1
0x40043c3	            0xf3c3	                                     ret	      5783	option.c	FUNCTION_33	FOR_1
0x40043c5	      0xba01000000	                              mov edx, 1	      5783	option.c	FUNCTION_33	FOR_1
0x40043ca	          0x4863d2	                         movsxd rdx, edx	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x40043cd	        0x48c1e206	                              shl rdx, 6	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x40043d1	    0x48838a000000	                       or qword [rdx], 8	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x40043d9	              0xc3	                                     ret	      5787	option.c	FUNCTION_33	FOR_1	IF_1
reset_option_was_set	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:IF,1:functions,0:DO,0	9
0x400b600	        0x4883ec08	                              sub rsp, 8	     12269	option.c	FUNCTION_103
0x400b604	      0xe8a74effff	                     call sym.findoption	     12270	option.c	FUNCTION_103	CALL_1
0x400b609	            0x85c0	                           test eax, eax	     12272	option.c	FUNCTION_103	IF_1
0x400b60b	            0x7811	                            js 0x400b61e	     12272	option.c	FUNCTION_103	IF_1
0x400b60d	            0x4898	                                    cdqe	     12273	option.c	FUNCTION_103	IF_1
0x400b60f	        0x48c1e006	                              shl rax, 6	     12273	option.c	FUNCTION_103	IF_1
0x400b613	    0x4881a0000000	     and qword [rax], 0xfffffffffffffeff	     12273	option.c	FUNCTION_103	IF_1
0x400b61e	        0x4883c408	                              add rsp, 8	     12274	option.c	FUNCTION_103
0x400b622	              0xc3	                                     ret	     12274	option.c	FUNCTION_103
check_cedit	WHILE,0:FOR,0:ELSE,1:SWITCH,0:CALL,2:IF,2:functions,0:DO,0	23
0x4003570	    0x488b3d000000	            mov rdi, qword [0x04003577] 	      5356	option.c	FUNCTION_20	IF_1
0x4003577	          0x803f00	                       cmp byte [rdi], 0	      5356	option.c	FUNCTION_20	IF_1
0x400357a	            0x7424	                            je 0x40035a0	      5356	option.c	FUNCTION_20	IF_1
0x400357c	              0x53	                                push rbx	      5353	option.c	FUNCTION_20
0x400357d	            0x31f6	                            xor esi, esi	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x400357f	      0xe800000000	                          call 0x4003584	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003584	            0x89c7	                            mov edi, eax	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003586	            0x89c3	                            mov ebx, eax	      5360	option.c	FUNCTION_20	ELSE_1	CALL_1
0x4003588	      0xe800000000	                          call 0x400358d	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x400358d	            0x85c0	                           test eax, eax	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x400358f	      0xba00000000	                              mov edx, 0	      5362	option.c	FUNCTION_20	ELSE_1	IF_2
0x4003594	            0x741a	                            je 0x40035b0	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4003596	          0x4889d0	                            mov rax, rdx	      5366	option.c	FUNCTION_20
0x4003599	              0x5b	                                 pop rbx	      5366	option.c	FUNCTION_20
0x400359a	              0xc3	                                     ret	      5366	option.c	FUNCTION_20
0x400359b	       0xf1f440000	                   nop dword [rax + rax]	      5366	option.c	FUNCTION_20
0x40035a0	            0x31d2	                            xor edx, edx	      5365	option.c	FUNCTION_20
0x40035a2	    0xc70500000000	     mov dword [0x040035ac], 0xffffffff 	      5357	option.c	FUNCTION_20	IF_1
0x40035ac	          0x4889d0	                            mov rax, rdx	      5366	option.c	FUNCTION_20
0x40035af	              0xc3	                                     ret	      5366	option.c	FUNCTION_20
0x40035b0	    0x891d00000000	            mov dword [0x040035b6], ebx 	      5363	option.c	FUNCTION_20	ELSE_1
0x40035b6	            0x31d2	                            xor edx, edx	      5365	option.c	FUNCTION_20
0x40035b8	            0xebdc	                           jmp 0x4003596	      5365	option.c	FUNCTION_20
set_string_default_esc	WHILE,0:FOR,0:ELSE,1:SWITCH,0:CALL,5:IF,4:functions,0:DO,0	48
0x40006f0	            0x85d2	                           test edx, edx	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40006f2	            0x4154	                                push r12	      3874	option.c	FUNCTION_4
0x40006f4	              0x55	                                push rbp	      3874	option.c	FUNCTION_4
0x40006f5	          0x4889fd	                            mov rbp, rdi	      3874	option.c	FUNCTION_4
0x40006f8	              0x53	                                push rbx	      3874	option.c	FUNCTION_4
0x40006f9	          0x4889f3	                            mov rbx, rsi	      3874	option.c	FUNCTION_4
0x40006fc	            0x742a	                            je 0x4000728	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x40006fe	      0xbe20000000	                           mov esi, 0x20	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000703	          0x4889df	                            mov rdi, rbx	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000706	      0xe800000000	                          call 0x400070b	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x400070b	          0x4885c0	                           test rax, rax	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x400070e	            0x7418	                            je 0x4000728	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4000710	      0xbe00000000	                              mov esi, 0	      3879	option.c	FUNCTION_4	CALL_2
0x4000715	          0x4889df	                            mov rdi, rbx	      3879	option.c	FUNCTION_4	CALL_2
0x4000718	      0xe800000000	                          call 0x400071d	      3879	option.c	FUNCTION_4	CALL_2
0x400071d	          0x4989c4	                            mov r12, rax	      3879	option.c	FUNCTION_4	CALL_2
0x4000720	            0xeb11	                           jmp 0x4000733	      3879	option.c	FUNCTION_4	CALL_2
0x4000722	    0x660f1f440000	                    nop word [rax + rax]	      3879	option.c	FUNCTION_4	CALL_2
0x4000728	          0x4889df	                            mov rdi, rbx	      3881	option.c	FUNCTION_4	CALL_3
0x400072b	      0xe800000000	                          call 0x4000730	      3881	option.c	FUNCTION_4	CALL_3
0x4000730	          0x4989c4	                            mov r12, rax	      3881	option.c	FUNCTION_4	CALL_3
0x4000733	          0x4d85e4	                           test r12, r12	      3882	option.c	FUNCTION_4	IF_2
0x4000736	            0x7441	                            je 0x4000779	      3882	option.c	FUNCTION_4	IF_2
0x4000738	          0x4889ef	                            mov rdi, rbp	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x400073b	      0xe870fdffff	                     call sym.findoption	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4000740	            0x85c0	                           test eax, eax	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4000742	            0x7835	                            js 0x4000779	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4000744	          0x4863d8	                         movsxd rbx, eax	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000747	          0x4889dd	                            mov rbp, rbx	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x400074a	        0x48c1e506	                              shl rbp, 6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x400074e	    0x488b95000000	                    mov rdx, qword [rbp]	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000755	    0x4881c5000000	                              add rbp, 0	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x400075c	          0xf6c280	                           test dl, 0x80	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x400075f	            0x751f	                           jne 0x4000780	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4000761	          0x4889d8	                            mov rax, rbx	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000764	          0x80ca80	                             or dl, 0x80	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000767	        0x48c1e006	                              shl rax, 6	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x400076b	    0x4c89a0000000	                    mov qword [rax], r12	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4000772	    0x488990000000	                    mov qword [rax], rdx	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4000779	              0x5b	                                 pop rbx	      3893	option.c	FUNCTION_4
0x400077a	              0x5d	                                 pop rbp	      3893	option.c	FUNCTION_4
0x400077b	            0x415c	                                 pop r12	      3893	option.c	FUNCTION_4
0x400077d	              0xc3	                                     ret	      3893	option.c	FUNCTION_4
0x400077e	            0x6690	                                     nop	      3893	option.c	FUNCTION_4
0x4000780	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000784	      0xe800000000	                          call 0x4000789	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4000789	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x400078d	            0xebd2	                           jmp 0x4000761	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
ExpandOldSetting	WHILE,0:FOR,1:ELSE,1:SWITCH,0:CALL,9:IF,7:functions,0:DO,0	62
0x400b250	              0x55	                                push rbp	     11705	option.c	FUNCTION_90
0x400b251	              0x53	                                push rbx	     11705	option.c	FUNCTION_90
0x400b252	          0x4889fd	                            mov rbp, rdi	     11705	option.c	FUNCTION_90
0x400b255	          0x4889f3	                            mov rbx, rsi	     11705	option.c	FUNCTION_90
0x400b258	        0x4883ec08	                              sub rsp, 8	     11705	option.c	FUNCTION_90
0x400b25c	    0xc70700000000	                      mov dword [rdi], 0	     11709	option.c	FUNCTION_90
0x400b262	      0xbf08000000	                              mov edi, 8	     11710	option.c	FUNCTION_90	CALL_1
0x400b267	      0xe800000000	                          call 0x400b26c	     11710	option.c	FUNCTION_90	CALL_1
0x400b26c	          0x4885c0	                           test rax, rax	     11711	option.c	FUNCTION_90	IF_1
0x400b26f	          0x488903	                    mov qword [rbx], rax	     11710	option.c	FUNCTION_90	CALL_1
0x400b272	            0x7470	                            je 0x400b2e4	     11711	option.c	FUNCTION_90	IF_1
0x400b274	    0x8b0500000000	            mov eax, dword [0x0400b27a] 	     11717	option.c	FUNCTION_90	IF_2
0x400b27a	            0x85c0	                           test eax, eax	     11717	option.c	FUNCTION_90	IF_2
0x400b27c	            0x7872	                            js 0x400b2f0	     11717	option.c	FUNCTION_90	IF_2
0x400b27e	          0x4863f8	                         movsxd rdi, eax	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400b281	    0x8b3500000000	            mov esi, dword [0x0400b287] 	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400b287	          0x4889fa	                            mov rdx, rdi	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400b28a	        0x48c1e206	                              shl rdx, 6	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400b28e	    0x488dba000000	                          lea rdi, [rdx]	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400b295	      0xe8c675ffff	            call sym.option_value2string	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400b29a	    0x488b3d000000	            mov rdi, qword [0x0400b2a1] 	     11728	option.c	FUNCTION_90	IF_4
0x400b2a1	    0x488b35000000	            mov rsi, qword [0x0400b2a8] 	     11735	option.c	FUNCTION_90	CALL_5
0x400b2a8	      0xe800000000	                          call 0x400b2ad	     11735	option.c	FUNCTION_90	CALL_5
0x400b2ad	          0x4885c0	                           test rax, rax	     11737	option.c	FUNCTION_90	IF_6
0x400b2b0	            0x741e	                            je 0x400b2d0	     11737	option.c	FUNCTION_90	IF_6
0x400b2b2	          0x488b13	                    mov rdx, qword [rbx]	     11755	option.c	FUNCTION_90
0x400b2b5	          0x488902	                    mov qword [rdx], rax	     11755	option.c	FUNCTION_90
0x400b2b8	    0xc74500010000	                      mov dword [rbp], 1	     11756	option.c	FUNCTION_90
0x400b2bf	        0x4883c408	                              add rsp, 8	     11758	option.c	FUNCTION_90
0x400b2c3	      0xb801000000	                              mov eax, 1	     11757	option.c	FUNCTION_90
0x400b2c8	              0x5b	                                 pop rbx	     11758	option.c	FUNCTION_90
0x400b2c9	              0x5d	                                 pop rbp	     11758	option.c	FUNCTION_90
0x400b2ca	              0xc3	                                     ret	     11758	option.c	FUNCTION_90
0x400b2cb	       0xf1f440000	                   nop dword [rax + rax]	     11758	option.c	FUNCTION_90
0x400b2d0	          0x488b3b	                    mov rdi, qword [rbx]	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400b2d3	          0x4885ff	                           test rdi, rdi	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400b2d6	            0x740c	                            je 0x400b2e4	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400b2d8	      0xe800000000	                          call 0x400b2dd	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400b2dd	    0x48c703000000	                      mov qword [rbx], 0	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400b2e4	        0x4883c408	                              add rsp, 8	     11758	option.c	FUNCTION_90
0x400b2e8	            0x31c0	                            xor eax, eax	     11740	option.c	FUNCTION_90	IF_6
0x400b2ea	              0x5b	                                 pop rbx	     11758	option.c	FUNCTION_90
0x400b2eb	              0x5d	                                 pop rbp	     11758	option.c	FUNCTION_90
0x400b2ec	              0xc3	                                     ret	     11758	option.c	FUNCTION_90
0x400b2ed	           0xf1f00	                         nop dword [rax]	     11758	option.c	FUNCTION_90
0x400b2f0	      0xbf00000000	                              mov edi, 0	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x400b2f5	      0xe800000000	                          call 0x400b2fa	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x400b2fa	          0x4885c0	                           test rax, rax	     11720	option.c	FUNCTION_90	IF_2	IF_3
0x400b2fd	          0x4889c7	                            mov rdi, rax	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x400b300	            0x7416	                            je 0x400b318	     11720	option.c	FUNCTION_90	IF_2	IF_3
0x400b302	    0x8b0500000000	            mov eax, dword [0x0400b308] 	     11724	option.c	FUNCTION_90	IF_4
0x400b308	            0x85c0	                           test eax, eax	     11724	option.c	FUNCTION_90	IF_4
0x400b30a	            0x7895	                            js 0x400b2a1	     11724	option.c	FUNCTION_90	IF_4
0x400b30c	      0xe96dffffff	                           jmp 0x400b27e	     11724	option.c	FUNCTION_90	IF_4
0x400b311	     0xf1f80000000	                         nop dword [rax]	     11724	option.c	FUNCTION_90	IF_4
0x400b318	      0xbf00000000	                              mov edi, 0	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x400b31d	      0xe88e51ffff	                     call sym.findoption	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x400b322	            0x85c0	                           test eax, eax	     11724	option.c	FUNCTION_90	IF_4
0x400b324	    0x890500000000	            mov dword [0x0400b32a], eax 	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x400b32a	     0xf894effffff	                           jns 0x400b27e	     11724	option.c	FUNCTION_90	IF_4
0x400b330	      0xbf00000000	                              mov edi, 0	     11731	option.c	FUNCTION_90	ELSE_1	IF_5
0x400b335	      0xe967ffffff	                           jmp 0x400b2a1	     11731	option.c	FUNCTION_90	ELSE_1	IF_5
set_num_option	WHILE,0:FOR,0:ELSE,36:SWITCH,0:CALL,53:IF,99:functions,0:DO,0	773
0x40057b0	            0x4157	                                push r15	      8764	option.c	FUNCTION_50
0x40057b2	            0x4156	                                push r14	      8764	option.c	FUNCTION_50
0x40057b4	          0x4989d7	                            mov r15, rdx	      8764	option.c	FUNCTION_50
0x40057b7	            0x4155	                                push r13	      8764	option.c	FUNCTION_50
0x40057b9	            0x4154	                                push r12	      8764	option.c	FUNCTION_50
0x40057bb	          0x4989ce	                            mov r14, rcx	      8764	option.c	FUNCTION_50
0x40057be	              0x55	                                push rbp	      8764	option.c	FUNCTION_50
0x40057bf	              0x53	                                push rbx	      8764	option.c	FUNCTION_50
0x40057c0	          0x4589cd	                           mov r13d, r9d	      8764	option.c	FUNCTION_50
0x40057c3	          0x4889f3	                            mov rbx, rsi	      8764	option.c	FUNCTION_50
0x40057c6	          0x4c63e7	                         movsxd r12, edi	      8776	option.c	FUNCTION_50	IF_1
0x40057c9	        0x4883ec78	                           sub rsp, 0x78	      8764	option.c	FUNCTION_50
0x40057cd	    0x448b1d000000	           mov r11d, dword [0x040057d4] 	      8772	option.c	FUNCTION_50	IF_1
0x40057d4	    0x64488b042528	                mov rax, qword fs:[0x28]	      8764	option.c	FUNCTION_50
0x40057dd	      0x4889442468	             mov qword [rsp + 0x68], rax	      8764	option.c	FUNCTION_50
0x40057e2	            0x31c0	                            xor eax, eax	      8764	option.c	FUNCTION_50
0x40057e4	      0x4c89442408	                 mov qword [rsp + 8], r8	      8764	option.c	FUNCTION_50
0x40057e9	          0x4585db	                         test r11d, r11d	      8772	option.c	FUNCTION_50	IF_1
0x40057ec	     0xf855e020000	                           jne 0x4005a50	      8772	option.c	FUNCTION_50	IF_1
0x40057f2	    0x448b15000000	           mov r10d, dword [0x040057f9] 	      8774	option.c	FUNCTION_50	IF_1
0x40057f9	          0x4585d2	                         test r10d, r10d	      8774	option.c	FUNCTION_50	IF_1
0x40057fc	     0xf854e020000	                           jne 0x4005a50	      8774	option.c	FUNCTION_50	IF_1
0x4005802	          0x488b03	                    mov rax, qword [rbx]	      8766	option.c	FUNCTION_50
0x4005805	    0x8b1500000000	            mov edx, dword [0x0400580b] 	      8782	option.c	FUNCTION_50	CALL_1
0x400580b	          0x4489ee	                           mov esi, r13d	      8782	option.c	FUNCTION_50	CALL_1
0x400580e	            0x31ed	                            xor ebp, ebp	      8765	option.c	FUNCTION_50
0x4005810	      0x4889442410	             mov qword [rsp + 0x10], rax	      8766	option.c	FUNCTION_50
0x4005815	    0x488b05000000	            mov rax, qword [0x0400581c] 	      8767	option.c	FUNCTION_50
0x400581c	        0x48890424	                    mov qword [rsp], rax	      8767	option.c	FUNCTION_50
0x4005820	    0x488b05000000	            mov rax, qword [0x04005827] 	      8768	option.c	FUNCTION_50
0x4005827	          0x4c893b	                    mov qword [rbx], r15	      8779	option.c	FUNCTION_50
0x400582a	      0x4889442418	             mov qword [rsp + 0x18], rax	      8768	option.c	FUNCTION_50
0x400582f	      0xe83ca9ffff	        call sym.set_option_scriptID_idx	      8782	option.c	FUNCTION_50	CALL_1
0x4005834	    0x488b05000000	            mov rax, qword [0x0400583b] 	      8788	option.c	FUNCTION_50	IF_2
0x400583b	    0xc70500000000	               mov dword [0x04005845], 1	      8785	option.c	FUNCTION_50
0x4005845	    0x4883b8681500	             cmp qword [rax + 0x1568], 0	      8788	option.c	FUNCTION_50	IF_2
0x400584d	     0xf888d070000	                            js 0x4005fe0	      8788	option.c	FUNCTION_50	IF_2
0x4005853	    0x4881fb000000	                              cmp rbx, 0	      8797	option.c	FUNCTION_50	IF_3
0x400585a	     0xf84c0050000	                            je 0x4005e20	      8797	option.c	FUNCTION_50	IF_3
0x4005860	    0x4881fb000000	                              cmp rbx, 0	      8797	option.c	FUNCTION_50	IF_3
0x4005867	     0xf84b3050000	                            je 0x4005e20	      8797	option.c	FUNCTION_50	IF_3
0x400586d	    0x4881fb000000	                              cmp rbx, 0	      8826	option.c	FUNCTION_50	ELSE_1	IF_10
0x4005874	     0xf8416020000	                            je 0x4005a90	      8826	option.c	FUNCTION_50	ELSE_1	IF_10
0x400587a	    0x4881fb000000	                              cmp rbx, 0	      8840	option.c	FUNCTION_50	ELSE_2	IF_13
0x4005881	     0xf84e1070000	                            je 0x4006068	      8840	option.c	FUNCTION_50	ELSE_2	IF_13
0x4005887	    0x4881fb000000	                              cmp rbx, 0	      8859	option.c	FUNCTION_50	ELSE_3	IF_17
0x400588e	     0xf8434080000	                            je 0x40060c8	      8859	option.c	FUNCTION_50	ELSE_3	IF_17
0x4005894	    0x4881fb000000	                              cmp rbx, 0	      8875	option.c	FUNCTION_50	ELSE_4	IF_20
0x400589b	     0xf844f0b0000	                            je 0x40063f0	      8875	option.c	FUNCTION_50	ELSE_4	IF_20
0x40058a1	    0x4881fb000000	                              cmp rbx, 0	      8881	option.c	FUNCTION_50	ELSE_5	IF_21
0x40058a8	     0xf84720b0000	                            je 0x4006420	      8881	option.c	FUNCTION_50	ELSE_5	IF_21
0x40058ae	    0x4881fb000000	                              cmp rbx, 0	      8887	option.c	FUNCTION_50	ELSE_6	IF_22
0x40058b5	     0xf8455090000	                            je 0x4006210	      8887	option.c	FUNCTION_50	ELSE_6	IF_22
0x40058bb	    0x488b3d000000	            mov rdi, qword [0x040058c2] 	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x40058c2	    0x488d97e80100	                  lea rdx, [rdi + 0x1e8]	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x40058c9	          0x4839d3	                            cmp rbx, rdx	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x40058cc	     0xf847e080000	                            je 0x4006150	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x40058d2	    0x488d97080200	                  lea rdx, [rdi + 0x208]	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x40058d9	          0x4839d3	                            cmp rbx, rdx	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x40058dc	     0xf84020b0000	                            je 0x40063e4	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x40058e2	    0x488d97100200	                  lea rdx, [rdi + 0x210]	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x40058e9	          0x4839d3	                            cmp rbx, rdx	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x40058ec	     0xf84ce0a0000	                            je 0x40063c0	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x40058f2	    0x488d97c80100	                  lea rdx, [rdi + 0x1c8]	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x40058f9	          0x4839d3	                            cmp rbx, rdx	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x40058fc	     0xf849e090000	                            je 0x40062a0	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x4005902	    0x488d90681500	                 lea rdx, [rax + 0x1568]	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x4005909	          0x4839d3	                            cmp rbx, rdx	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400590c	     0xf8436090000	                            je 0x4006248	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x4005912	    0x488d90a81500	                 lea rdx, [rax + 0x15a8]	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x4005919	          0x4839d3	                            cmp rbx, rdx	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400591c	     0xf8426090000	                            je 0x4006248	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x4005922	    0x4881fb000000	                              cmp rbx, 0	      8953	option.c	FUNCTION_50	ELSE_13	IF_35
0x4005929	     0xf84010b0000	                            je 0x4006430	      8953	option.c	FUNCTION_50	ELSE_13	IF_35
0x400592f	    0x488d90781200	                 lea rdx, [rax + 0x1278]	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x4005936	          0x4839d3	                            cmp rbx, rdx	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x4005939	     0xf84210b0000	                            je 0x4006460	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400593f	    0x4881fb000000	                              cmp rbx, 0	      8981	option.c	FUNCTION_50	ELSE_16	IF_41
0x4005946	     0xf84540b0000	                            je 0x40064a0	      8981	option.c	FUNCTION_50	ELSE_16	IF_41
0x400594c	    0x4881fb000000	                              cmp rbx, 0	      8988	option.c	FUNCTION_50	ELSE_17	IF_43
0x4005953	     0xf84670b0000	                            je 0x40064c0	      8988	option.c	FUNCTION_50	ELSE_17	IF_43
0x4005959	    0x488d90801200	                 lea rdx, [rax + 0x1280]	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x4005960	          0x4839d3	                            cmp rbx, rdx	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x4005963	     0xf84970b0000	                            je 0x4006500	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x4005969	    0x4881fb000000	                              cmp rbx, 0	      9008	option.c	FUNCTION_50	ELSE_20	IF_48
0x4005970	     0xf8449080000	                            je 0x40061bf	      9008	option.c	FUNCTION_50	ELSE_20	IF_48
0x4005976	    0x4881fb000000	                              cmp rbx, 0	      9021	option.c	FUNCTION_50	ELSE_21	IF_51
0x400597d	     0xf84eb0b0000	                            je 0x400656e	      9021	option.c	FUNCTION_50	ELSE_21	IF_51
0x4005983	    0x4881fb000000	                              cmp rbx, 0	      9042	option.c	FUNCTION_50	ELSE_22	IF_55
0x400598a	     0xf844f0c0000	                            je 0x40065df	      9042	option.c	FUNCTION_50	ELSE_22	IF_55
0x4005990	    0x488d97a80200	                  lea rdx, [rdi + 0x2a8]	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x4005997	          0x4839d3	                            cmp rbx, rdx	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x400599a	     0xf846e0c0000	                            je 0x400660e	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x40059a0	    0x4881fb000000	                              cmp rbx, 0	      9082	option.c	FUNCTION_50	ELSE_27	IF_64
0x40059a7	     0xf84410d0000	                            je 0x40066ee	      9082	option.c	FUNCTION_50	ELSE_27	IF_64
0x40059ad	    0x488d90481600	                 lea rdx, [rax + 0x1648]	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x40059b4	          0x4839d3	                            cmp rbx, rdx	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x40059b7	     0xf84530d0000	                            je 0x4006710	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x40059bd	    0x488d97400200	                  lea rdx, [rdi + 0x240]	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x40059c4	          0x4839d3	                            cmp rbx, rdx	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x40059c7	     0xf84860c0000	                            je 0x4006653	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x40059cd	    0x488d90b81500	                 lea rdx, [rax + 0x15b8]	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x40059d4	          0x4839d3	                            cmp rbx, rdx	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x40059d7	     0xf85db000000	                           jne 0x4005ab8	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x40059dd	    0x4883b8b81500	             cmp qword [rax + 0x15b8], 0	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x40059e5	     0xf88920d0000	                            js 0x400677d	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x40059eb	    0x488b05000000	            mov rax, qword [0x040059f2] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x40059f2	          0x4885c0	                           test rax, rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x40059f5	      0x4889442428	             mov qword [rsp + 0x28], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x40059fa	     0xf84b8000000	                            je 0x4005ab8	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a00	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a05	    0x483905000000	            cmp qword [0x04005a0c], rax 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a0c	     0xf842b0c0000	                            je 0x400663d	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a12	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a16	            0xeb1e	                           jmp 0x4005a36	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a18	     0xf1f84000000	                   nop dword [rax + rax]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a20	          0x4889d7	                            mov rdi, rdx	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x4005a23	      0x4889542420	             mov qword [rsp + 0x20], rdx	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x4005a28	      0xe800000000	                          call 0x4005a2d	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x4005a2d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a32	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a36	          0x4885d2	                           test rdx, rdx	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a39	            0x75e5	                           jne 0x4005a20	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a3b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a40	          0x488b00	                    mov rax, qword [rax]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a43	          0x4885c0	                           test rax, rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a46	      0x4889442428	             mov qword [rsp + 0x28], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a4b	            0x75b3	                           jne 0x4005a00	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a4d	            0xeb69	                           jmp 0x4005ab8	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a4f	              0x90	                                     nop	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4005a50	          0x4c89e2	                            mov rdx, r12	      8776	option.c	FUNCTION_50	IF_1
0x4005a53	      0xb800000000	                              mov eax, 0	      8777	option.c	FUNCTION_50	IF_1
0x4005a58	        0x48c1e206	                              shl rdx, 6	      8776	option.c	FUNCTION_50	IF_1
0x4005a5c	    0xf68200000000	                      test byte [rdx], 8	      8776	option.c	FUNCTION_50	IF_1
0x4005a63	     0xf8499fdffff	                            je 0x4005802	      8776	option.c	FUNCTION_50	IF_1
0x4005a69	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      9299	option.c	FUNCTION_50
0x4005a6e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9299	option.c	FUNCTION_50
0x4005a77	     0xf85150d0000	                           jne 0x4006792	      9299	option.c	FUNCTION_50
0x4005a7d	        0x4883c478	                           add rsp, 0x78	      9299	option.c	FUNCTION_50
0x4005a81	              0x5b	                                 pop rbx	      9299	option.c	FUNCTION_50
0x4005a82	              0x5d	                                 pop rbp	      9299	option.c	FUNCTION_50
0x4005a83	            0x415c	                                 pop r12	      9299	option.c	FUNCTION_50
0x4005a85	            0x415d	                                 pop r13	      9299	option.c	FUNCTION_50
0x4005a87	            0x415e	                                 pop r14	      9299	option.c	FUNCTION_50
0x4005a89	            0x415f	                                 pop r15	      9299	option.c	FUNCTION_50
0x4005a8b	              0xc3	                                     ret	      9299	option.c	FUNCTION_50
0x4005a8c	         0xf1f4000	                         nop dword [rax]	      9299	option.c	FUNCTION_50
0x4005a90	    0x488b05000000	            mov rax, qword [0x04005a97] 	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4005a97	          0x4885c0	                           test rax, rax	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4005a9a	     0xf8860090000	                            js 0x4006400	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4005aa0	    0x488b15000000	            mov rdx, qword [0x04005aa7] 	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4005aa7	          0x4839c2	                            cmp rdx, rax	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4005aaa	     0xf8c88060000	                            jl 0x4006138	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4005ab0	      0xe800000000	                          call 0x4005ab5	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x4005ab5	           0xf1f00	                         nop dword [rax]	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x4005ab8	      0xe800000000	                          call 0x4005abd	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4005abd	            0x4898	                                    cdqe	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4005abf	    0x483b05000000	            cmp rax, qword [0x04005ac6] 	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4005ac6	            0x7e4c	                           jle 0x4005b14	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4005ac8	    0x8b0500000000	            mov eax, dword [0x04005ace] 	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4005ace	            0x85c0	                           test eax, eax	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4005ad0	            0x7442	                            je 0x4005b14	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4005ad2	          0x4d85f6	                           test r14, r14	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x4005ad5	            0x742f	                            je 0x4005b06	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x4005ad7	      0xe800000000	                          call 0x4005adc	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005adc	      0xba05000000	                              mov edx, 5	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005ae1	      0xbe00000000	                              mov esi, 0	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005ae6	            0x31ff	                            xor edi, edi	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005ae8	            0x89c5	                            mov ebp, eax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005aea	      0xe800000000	                          call 0x4005aef	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005aef	      0x488b742408	                mov rsi, qword [rsp + 8]	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005af4	            0x89e9	                            mov ecx, ebp	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005af6	          0x4889c2	                            mov rdx, rax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005af9	          0x4c89f7	                            mov rdi, r14	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005afc	            0x31c0	                            xor eax, eax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005afe	          0x4c89f5	                            mov rbp, r14	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005b01	      0xe800000000	                          call 0x4005b06	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4005b06	      0xe800000000	                          call 0x4005b0b	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x4005b0b	            0x4898	                                    cdqe	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x4005b0d	    0x488905000000	            mov qword [0x04005b14], rax 	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x4005b14	    0x48833d000000	            cmp qword [0x04005b1c], 0xb 	      9146	option.c	FUNCTION_50	IF_73
0x4005b1c	            0x7f45	                            jg 0x4005b63	      9146	option.c	FUNCTION_50	IF_73
0x4005b1e	    0x8b0500000000	            mov eax, dword [0x04005b24] 	      9146	option.c	FUNCTION_50	IF_73
0x4005b24	            0x85c0	                           test eax, eax	      9146	option.c	FUNCTION_50	IF_73
0x4005b26	            0x743b	                            je 0x4005b63	      9146	option.c	FUNCTION_50	IF_73
0x4005b28	          0x4d85f6	                           test r14, r14	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x4005b2b	            0x742b	                            je 0x4005b58	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x4005b2d	      0xba05000000	                              mov edx, 5	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b32	      0xbe00000000	                              mov esi, 0	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b37	            0x31ff	                            xor edi, edi	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b39	      0xe800000000	                          call 0x4005b3e	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b3e	      0x488b742408	                mov rsi, qword [rsp + 8]	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b43	          0x4889c2	                            mov rdx, rax	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b46	      0xb90c000000	                            mov ecx, 0xc	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b4b	          0x4c89f7	                            mov rdi, r14	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b4e	            0x31c0	                            xor eax, eax	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b50	          0x4c89f5	                            mov rbp, r14	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b53	      0xe800000000	                          call 0x4005b58	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4005b58	    0x48c705000000	            mov qword [0x04005b63], 0xc 	      9154	option.c	FUNCTION_50	IF_73
0x4005b63	      0xe800000000	                          call 0x4005b68	      9156	option.c	FUNCTION_50	CALL_38
0x4005b68	    0x488b35000000	            mov rsi, qword [0x04005b6f] 	      9162	option.c	FUNCTION_50	IF_75
0x4005b6f	        0x48393424	                    cmp qword [rsp], rsi	      9162	option.c	FUNCTION_50	IF_75
0x4005b73	     0xf848f020000	                            je 0x4005e08	      9162	option.c	FUNCTION_50	IF_75
0x4005b79	    0x8b0d00000000	            mov ecx, dword [0x04005b7f] 	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x4005b7f	            0x85c9	                           test ecx, ecx	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x4005b81	     0xf84f1010000	                            je 0x4005d78	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x4005b87	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x4005b8c	          0x488903	                    mov qword [rbx], rax	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x4005b8f	    0x488b05000000	            mov rax, qword [0x04005b96] 	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x4005b96	    0x483905000000	            cmp qword [0x04005b9d], rax 	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x4005b9d	     0xf8c5d040000	                            jl 0x4006000	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x4005ba3	        0x4883e801	                              sub rax, 1	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x4005ba7	    0x488905000000	            mov qword [0x04005bae], rax 	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x4005bae	    0x488b05000000	            mov rax, qword [0x04005bb5] 	      9185	option.c	FUNCTION_50	IF_80
0x4005bb5	    0x4883b8a81500	             cmp qword [rax + 0x15a8], 0	      9185	option.c	FUNCTION_50	IF_80
0x4005bbd	     0xf8e05040000	                           jle 0x4005fc8	      9185	option.c	FUNCTION_50	IF_80
0x4005bc3	    0x48833d000000	               cmp qword [0x04005bcb], 0	      9190	option.c	FUNCTION_50	IF_81
0x4005bcb	     0xf88f7020000	                            js 0x4005ec8	      9190	option.c	FUNCTION_50	IF_81
0x4005bd1	    0x488b3d000000	            mov rdi, qword [0x04005bd8] 	      9195	option.c	FUNCTION_50	IF_82
0x4005bd8	    0x488b87600200	           mov rax, qword [rdi + 0x260] 	      9195	option.c	FUNCTION_50	IF_82
0x4005bdf	          0x4885c0	                           test rax, rax	      9195	option.c	FUNCTION_50	IF_82
0x4005be2	            0x7e10	                           jle 0x4005bf4	      9195	option.c	FUNCTION_50	IF_82
0x4005be4	    0x48638fa00000	         movsxd rcx, dword [rdi + 0xa0] 	      9196	option.c	FUNCTION_50	IF_82
0x4005beb	          0x4839c8	                            cmp rax, rcx	      9197	option.c	FUNCTION_50	IF_82
0x4005bee	            0x7e35	                           jle 0x4005c25	      9197	option.c	FUNCTION_50	IF_82
0x4005bf0	            0x85c9	                           test ecx, ecx	      9197	option.c	FUNCTION_50	IF_82
0x4005bf2	            0x7e31	                           jle 0x4005c25	      9197	option.c	FUNCTION_50	IF_82
0x4005bf4	    0x8b1500000000	            mov edx, dword [0x04005bfa] 	      9198	option.c	FUNCTION_50	IF_82
0x4005bfa	            0x85d2	                           test edx, edx	      9198	option.c	FUNCTION_50	IF_82
0x4005bfc	            0x7427	                            je 0x4005c25	      9198	option.c	FUNCTION_50	IF_82
0x4005bfe	    0x488d97600200	                  lea rdx, [rdi + 0x260]	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x4005c05	          0x4839d3	                            cmp rbx, rdx	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x4005c08	     0xf8472060000	                            je 0x4006280	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x4005c0e	          0x4885c0	                           test rax, rax	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x4005c11	     0xf8ee9050000	                           jle 0x4006200	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x4005c17	    0x486387a00000	         movsxd rax, dword [rdi + 0xa0] 	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x4005c1e	    0x488987600200	            mov qword [rdi + 0x260], rax	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x4005c25	    0x488b05000000	            mov rax, qword [0x04005c2c] 	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x4005c2c	          0x4885c0	                           test rax, rax	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x4005c2f	     0xf887b030000	                            js 0x4005fb0	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x4005c35	    0x483d10270000	                         cmp rax, 0x2710	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x4005c3b	            0x7e10	                           jle 0x4005c4d	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x4005c3d	    0x48c705000000	         mov qword [0x04005c48], 0x2710 	      9221	option.c	FUNCTION_50	ELSE_35	IF_87
0x4005c48	      0xbd00000000	                              mov ebp, 0	      9220	option.c	FUNCTION_50	ELSE_35	IF_87
0x4005c4d	    0x48833d000000	               cmp qword [0x04005c55], 2	      9223	option.c	FUNCTION_50	IF_88
0x4005c55	            0x7610	                           jbe 0x4005c67	      9223	option.c	FUNCTION_50	IF_88
0x4005c57	    0x48c705000000	               mov qword [0x04005c62], 0	      9226	option.c	FUNCTION_50	IF_88
0x4005c62	      0xbd00000000	                              mov ebp, 0	      9225	option.c	FUNCTION_50	IF_88
0x4005c67	    0x48833d000000	               cmp qword [0x04005c6f], 0	      9228	option.c	FUNCTION_50	IF_89
0x4005c6f	     0xf8823030000	                            js 0x4005f98	      9228	option.c	FUNCTION_50	IF_89
0x4005c75	    0x488b05000000	            mov rax, qword [0x04005c7c] 	      9233	option.c	FUNCTION_50	IF_90
0x4005c7c	        0x4883f89c	             cmp rax, 0xffffffffffffff9c	      9233	option.c	FUNCTION_50	IF_90
0x4005c80	            0x7c09	                            jl 0x4005c8b	      9233	option.c	FUNCTION_50	IF_90
0x4005c82	    0x483b05000000	            cmp rax, qword [0x04005c89] 	      9233	option.c	FUNCTION_50	IF_90
0x4005c89	            0x7c2f	                            jl 0x4005cba	      9233	option.c	FUNCTION_50	IF_90
0x4005c8b	    0x8b0500000000	            mov eax, dword [0x04005c91] 	      9233	option.c	FUNCTION_50	IF_90
0x4005c91	            0x85c0	                           test eax, eax	      9233	option.c	FUNCTION_50	IF_90
0x4005c93	            0x7425	                            je 0x4005cba	      9233	option.c	FUNCTION_50	IF_90
0x4005c95	    0x488b05000000	            mov rax, qword [0x04005c9c] 	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x4005c9c	        0x48390424	                    cmp qword [rsp], rax	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x4005ca0	     0xf848a030000	                            je 0x4006030	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x4005ca6	          0x4889c2	                            mov rdx, rax	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4005ca9	        0x48c1ea3f	                           shr rdx, 0x3f	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4005cad	          0x4801d0	                            add rax, rdx	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4005cb0	          0x48d1f8	                              sar rax, 1	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4005cb3	    0x488905000000	            mov qword [0x04005cba], rax 	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4005cba	    0x48833d000000	               cmp qword [0x04005cc2], 0	      9243	option.c	FUNCTION_50	IF_92
0x4005cc2	     0xf88a8020000	                            js 0x4005f70	      9243	option.c	FUNCTION_50	IF_92
0x4005cc8	    0x48833d000000	               cmp qword [0x04005cd0], 0	      9248	option.c	FUNCTION_50	IF_93
0x4005cd0	     0xf8872020000	                            js 0x4005f48	      9248	option.c	FUNCTION_50	IF_93
0x4005cd6	    0x48833d000000	               cmp qword [0x04005cde], 0	      9254	option.c	FUNCTION_50	IF_94
0x4005cde	     0xf8e4c020000	                           jle 0x4005f30	      9254	option.c	FUNCTION_50	IF_94
0x4005ce4	    0x48833d000000	               cmp qword [0x04005cec], 0	      9260	option.c	FUNCTION_50	IF_95
0x4005cec	     0xf8826020000	                            js 0x4005f18	      9260	option.c	FUNCTION_50	IF_95
0x4005cf2	    0x48833d000000	               cmp qword [0x04005cfa], 0	      9265	option.c	FUNCTION_50	IF_96
0x4005cfa	     0xf88e0010000	                            js 0x4005ee0	      9265	option.c	FUNCTION_50	IF_96
0x4005d00	          0x4885ed	                           test rbp, rbp	      9265	option.c	FUNCTION_50	IF_96
0x4005d03	        0x410f94c6	                               sete r14b	      9265	option.c	FUNCTION_50	IF_96
0x4005d07	        0x41f6c506	                            test r13b, 6	      9272	option.c	FUNCTION_50	IF_97
0x4005d0b	     0xf84cf000000	                            je 0x4005de0	      9272	option.c	FUNCTION_50	IF_97
0x4005d11	    0x8b0500000000	            mov eax, dword [0x04005d17] 	      9278	option.c	FUNCTION_50	IF_98
0x4005d17	          0x4c89e3	                            mov rbx, r12	      9275	option.c	FUNCTION_50
0x4005d1a	        0x48c1e306	                              shl rbx, 6	      9275	option.c	FUNCTION_50
0x4005d1e	    0x48818b000000	                   or qword [rbx], 0x100	      9275	option.c	FUNCTION_50
0x4005d29	            0x85c0	                           test eax, eax	      9278	option.c	FUNCTION_50	IF_98
0x4005d2b	            0x7509	                           jne 0x4005d36	      9278	option.c	FUNCTION_50	IF_98
0x4005d2d	          0x4584f6	                         test r14b, r14b	      9278	option.c	FUNCTION_50	IF_98
0x4005d30	     0xf85ca050000	                           jne 0x4006300	      9278	option.c	FUNCTION_50	IF_98
0x4005d36	      0xe800000000	                          call 0x4005d3b	      9292	option.c	FUNCTION_50	CALL_52
0x4005d3b	    0x488b05000000	            mov rax, qword [0x04005d42] 	      9293	option.c	FUNCTION_50	IF_99
0x4005d42	        0x49c1e406	                              shl r12, 6	      9294	option.c	FUNCTION_50	IF_99
0x4005d46	    0x498bbc240000	                    mov rdi, qword [r12]	      9294	option.c	FUNCTION_50	IF_99
0x4005d4e	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      9293	option.c	FUNCTION_50	IF_99
0x4005d55	            0x740f	                            je 0x4005d66	      9293	option.c	FUNCTION_50	IF_99
0x4005d57	    0xf7c700600004	                     test edi, 0x4006000	      9294	option.c	FUNCTION_50	IF_99
0x4005d5d	            0x7407	                            je 0x4005d66	      9294	option.c	FUNCTION_50	IF_99
0x4005d5f	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9295	option.c	FUNCTION_50	IF_99
0x4005d66	      0xe8b5b5ffff	                   call sym.check_redraw	      9296	option.c	FUNCTION_50	CALL_53
0x4005d6b	          0x4889e8	                            mov rax, rbp	      9298	option.c	FUNCTION_50
0x4005d6e	      0xe9f6fcffff	                           jmp 0x4005a69	      9298	option.c	FUNCTION_50
0x4005d73	       0xf1f440000	                   nop dword [rax + rax]	      9298	option.c	FUNCTION_50
0x4005d78	    0x8b0500000000	            mov eax, dword [0x04005d7e] 	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4005d7e	            0x85c0	                           test eax, eax	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4005d80	            0x740e	                            je 0x4005d90	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4005d82	    0x8b1500000000	            mov edx, dword [0x04005d88] 	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4005d88	            0x85d2	                           test edx, edx	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4005d8a	     0xf84b8020000	                            je 0x4006048	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4005d90	      0xe800000000	                          call 0x4005d95	      9177	option.c	FUNCTION_50	IF_75	ELSE_32	CALL_40
0x4005d95	    0x488b05000000	            mov rax, qword [0x04005d9c] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005d9c	    0x488b15000000	            mov rdx, qword [0x04005da3] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005da3	    0x486335000000	         movsxd rsi, dword [0x04005daa] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005daa	          0x4889c1	                            mov rcx, rax	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005dad	          0x4829d1	                            sub rcx, rdx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005db0	          0x4839ce	                            cmp rsi, rcx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005db3	     0xf8eddfdffff	                           jle 0x4005b96	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005db9	          0x4839d0	                            cmp rax, rdx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005dbc	     0xf8ed4fdffff	                           jle 0x4005b96	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005dc2	            0x89c1	                            mov ecx, eax	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005dc4	            0x29d1	                            sub ecx, edx	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005dc6	    0x890d00000000	            mov dword [0x04005dcc], ecx 	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005dcc	      0xe9c5fdffff	                           jmp 0x4005b96	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005dd1	     0xf1f80000000	                         nop dword [rax]	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4005dd8	          0x4531f6	                          xor r14d, r14d	      9272	option.c	FUNCTION_50	IF_97
0x4005ddb	      0xbd00000000	                              mov ebp, 0	      9267	option.c	FUNCTION_50	IF_96
0x4005de0	          0x4c89e7	                            mov rdi, r12	      9273	option.c	FUNCTION_50	CALL_43
0x4005de3	      0xbe02000000	                              mov esi, 2	      9273	option.c	FUNCTION_50	CALL_43
0x4005de8	        0x48c1e706	                              shl rdi, 6	      9273	option.c	FUNCTION_50	CALL_43
0x4005dec	    0x4881c7000000	                              add rdi, 0	      9273	option.c	FUNCTION_50	CALL_43
0x4005df3	      0xe868c6ffff	                 call sym.get_varp_scope	      9273	option.c	FUNCTION_50	CALL_43
0x4005df8	          0x488b13	                    mov rdx, qword [rbx]	      9273	option.c	FUNCTION_50	CALL_43
0x4005dfb	          0x488910	                    mov qword [rax], rdx	      9273	option.c	FUNCTION_50	CALL_43
0x4005dfe	      0xe90effffff	                           jmp 0x4005d11	      9273	option.c	FUNCTION_50	CALL_43
0x4005e03	       0xf1f440000	                   nop dword [rax + rax]	      9273	option.c	FUNCTION_50	CALL_43
0x4005e08	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      9162	option.c	FUNCTION_50	IF_75
0x4005e0d	    0x483b05000000	            cmp rax, qword [0x04005e14] 	      9162	option.c	FUNCTION_50	IF_75
0x4005e14	     0xf855ffdffff	                           jne 0x4005b79	      9162	option.c	FUNCTION_50	IF_75
0x4005e1a	      0xe98ffdffff	                           jmp 0x4005bae	      9162	option.c	FUNCTION_50	IF_75
0x4005e1f	              0x90	                                     nop	      9162	option.c	FUNCTION_50	IF_75
0x4005e20	    0x488b05000000	            mov rax, qword [0x04005e27] 	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x4005e27	          0x4885c0	                           test rax, rax	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x4005e2a	     0xf8ed0020000	                           jle 0x4006100	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x4005e30	    0x488b15000000	            mov rdx, qword [0x04005e37] 	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4005e37	          0x4839c2	                            cmp rdx, rax	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4005e3a	            0x7e0c	                           jle 0x4005e48	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4005e3c	    0x488915000000	            mov qword [0x04005e43], rdx 	      8807	option.c	FUNCTION_50	IF_3	IF_5
0x4005e43	      0xbd00000000	                              mov ebp, 0	      8806	option.c	FUNCTION_50	IF_3	IF_5
0x4005e48	    0x48833d000000	               cmp qword [0x04005e50], 0	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x4005e50	     0xf88ca020000	                            js 0x4006120	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x4005e56	    0x488b05000000	            mov rax, qword [0x04005e5d] 	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4005e5d	    0x483905000000	            cmp qword [0x04005e64], rax 	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4005e64	     0xf844efcffff	                            je 0x4005ab8	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4005e6a	    0x4881fb000000	                              cmp rbx, 0	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4005e71	     0xf8459040000	                            je 0x40062d0	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4005e77	    0x4881fb000000	                              cmp rbx, 0	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005e7e	     0xf8534fcffff	                           jne 0x4005ab8	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005e84	    0x488b05000000	            mov rax, qword [0x04005e8b] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005e8b	    0x448b88581700	          mov r9d, dword [rax + 0x1758] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005e92	          0x4585c9	                           test r9d, r9d	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005e95	     0xf841dfcffff	                            je 0x4005ab8	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005e9b	    0x488b05000000	            mov rax, qword [0x04005ea2] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005ea2	    0x488b3d000000	            mov rdi, qword [0x04005ea9] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005ea9	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005eb0	          0x4839f8	                            cmp rax, rdi	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005eb3	     0xf8dfffbffff	                           jge 0x4005ab8	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4005eb9	      0xe800000000	                          call 0x4005ebe	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x4005ebe	      0xe9f5fbffff	                           jmp 0x4005ab8	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x4005ec3	       0xf1f440000	                   nop dword [rax + rax]	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x4005ec8	    0x48c705000000	               mov qword [0x04005ed3], 0	      9193	option.c	FUNCTION_50	IF_81
0x4005ed3	      0xbd00000000	                              mov ebp, 0	      9192	option.c	FUNCTION_50	IF_81
0x4005ed8	      0xe9f4fcffff	                           jmp 0x4005bd1	      9192	option.c	FUNCTION_50	IF_81
0x4005edd	           0xf1f00	                         nop dword [rax]	      9192	option.c	FUNCTION_50	IF_81
0x4005ee0	        0x41f6c506	                            test r13b, 6	      9272	option.c	FUNCTION_50	IF_97
0x4005ee4	    0x48c705000000	               mov qword [0x04005eef], 0	      9268	option.c	FUNCTION_50	IF_96
0x4005eef	     0xf84e3feffff	                            je 0x4005dd8	      9272	option.c	FUNCTION_50	IF_97
0x4005ef5	          0x4c89e0	                            mov rax, r12	      9275	option.c	FUNCTION_50
0x4005ef8	      0xbd00000000	                              mov ebp, 0	      9267	option.c	FUNCTION_50	IF_96
0x4005efd	        0x48c1e006	                              shl rax, 6	      9275	option.c	FUNCTION_50
0x4005f01	    0x488188000000	                   or qword [rax], 0x100	      9275	option.c	FUNCTION_50
0x4005f0c	      0xe925feffff	                           jmp 0x4005d36	      9275	option.c	FUNCTION_50
0x4005f11	     0xf1f80000000	                         nop dword [rax]	      9275	option.c	FUNCTION_50
0x4005f18	    0x48c705000000	          mov qword [0x04005f23], 0x7d0 	      9263	option.c	FUNCTION_50	IF_95
0x4005f23	      0xbd00000000	                              mov ebp, 0	      9262	option.c	FUNCTION_50	IF_95
0x4005f28	      0xe9c5fdffff	                           jmp 0x4005cf2	      9262	option.c	FUNCTION_50	IF_95
0x4005f2d	           0xf1f00	                         nop dword [rax]	      9262	option.c	FUNCTION_50	IF_95
0x4005f30	    0x48c705000000	               mov qword [0x04005f3b], 1	      9257	option.c	FUNCTION_50	IF_94
0x4005f3b	      0xbd00000000	                              mov ebp, 0	      9256	option.c	FUNCTION_50	IF_94
0x4005f40	      0xe99ffdffff	                           jmp 0x4005ce4	      9256	option.c	FUNCTION_50	IF_94
0x4005f45	           0xf1f00	                         nop dword [rax]	      9256	option.c	FUNCTION_50	IF_94
0x4005f48	    0x8b0500000000	            mov eax, dword [0x04005f4e] 	      9248	option.c	FUNCTION_50	IF_93
0x4005f4e	            0x85c0	                           test eax, eax	      9248	option.c	FUNCTION_50	IF_93
0x4005f50	     0xf8480fdffff	                            je 0x4005cd6	      9248	option.c	FUNCTION_50	IF_93
0x4005f56	    0x48c705000000	               mov qword [0x04005f61], 0	      9251	option.c	FUNCTION_50	IF_93
0x4005f61	      0xbd00000000	                              mov ebp, 0	      9250	option.c	FUNCTION_50	IF_93
0x4005f66	      0xe96bfdffff	                           jmp 0x4005cd6	      9250	option.c	FUNCTION_50	IF_93
0x4005f6b	       0xf1f440000	                   nop dword [rax + rax]	      9250	option.c	FUNCTION_50	IF_93
0x4005f70	    0x8b0500000000	            mov eax, dword [0x04005f76] 	      9243	option.c	FUNCTION_50	IF_92
0x4005f76	            0x85c0	                           test eax, eax	      9243	option.c	FUNCTION_50	IF_92
0x4005f78	     0xf844afdffff	                            je 0x4005cc8	      9243	option.c	FUNCTION_50	IF_92
0x4005f7e	    0x48c705000000	               mov qword [0x04005f89], 0	      9246	option.c	FUNCTION_50	IF_92
0x4005f89	      0xbd00000000	                              mov ebp, 0	      9245	option.c	FUNCTION_50	IF_92
0x4005f8e	      0xe935fdffff	                           jmp 0x4005cc8	      9245	option.c	FUNCTION_50	IF_92
0x4005f93	       0xf1f440000	                   nop dword [rax + rax]	      9245	option.c	FUNCTION_50	IF_92
0x4005f98	    0x48c705000000	               mov qword [0x04005fa3], 1	      9231	option.c	FUNCTION_50	IF_89
0x4005fa3	      0xbd00000000	                              mov ebp, 0	      9230	option.c	FUNCTION_50	IF_89
0x4005fa8	      0xe9c8fcffff	                           jmp 0x4005c75	      9230	option.c	FUNCTION_50	IF_89
0x4005fad	           0xf1f00	                         nop dword [rax]	      9230	option.c	FUNCTION_50	IF_89
0x4005fb0	    0x48c705000000	               mov qword [0x04005fbb], 0	      9216	option.c	FUNCTION_50	ELSE_34	IF_86
0x4005fbb	      0xbd00000000	                              mov ebp, 0	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x4005fc0	      0xe988fcffff	                           jmp 0x4005c4d	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x4005fc5	           0xf1f00	                         nop dword [rax]	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x4005fc8	    0x48c780a81500	            mov qword [rax + 0x15a8], 8 	      9188	option.c	FUNCTION_50	IF_80
0x4005fd3	      0xbd00000000	                              mov ebp, 0	      9187	option.c	FUNCTION_50	IF_80
0x4005fd8	      0xe9e6fbffff	                           jmp 0x4005bc3	      9187	option.c	FUNCTION_50	IF_80
0x4005fdd	           0xf1f00	                         nop dword [rax]	      9187	option.c	FUNCTION_50	IF_80
0x4005fe0	    0x488b90a81500	          mov rdx, qword [rax + 0x15a8] 	      8791	option.c	FUNCTION_50	IF_2
0x4005fe7	      0xbd00000000	                              mov ebp, 0	      8790	option.c	FUNCTION_50	IF_2
0x4005fec	    0x488990681500	          mov qword [rax + 0x1568], rdx 	      8791	option.c	FUNCTION_50	IF_2
0x4005ff3	      0xe95bf8ffff	                           jmp 0x4005853	      8791	option.c	FUNCTION_50	IF_2
0x4005ff8	     0xf1f84000000	                   nop dword [rax + rax]	      8791	option.c	FUNCTION_50	IF_2
0x4006000	      0xbf00000000	                              mov edi, 0	     12256	option.c	FUNCTION_102	CALL_1
0x4006005	      0xe8a6a4ffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x400600a	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x400600c	            0x7813	                            js 0x4006021	     12257	option.c	FUNCTION_102	IF_1
0x400600e	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x4006010	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x4006014	    0xf68000000000	                      test byte [rax], 1	     12259	option.c	FUNCTION_102	IF_2
0x400601b	     0xf858dfbffff	                           jne 0x4005bae	     12259	option.c	FUNCTION_102	IF_2
0x4006021	    0x488b05000000	            mov rax, qword [0x04006028] 	     12259	option.c	FUNCTION_102	IF_2
0x4006028	      0xe976fbffff	                           jmp 0x4005ba3	     12259	option.c	FUNCTION_102	IF_2
0x400602d	           0xf1f00	                         nop dword [rax]	     12259	option.c	FUNCTION_102	IF_2
0x4006030	    0x48c705000000	               mov qword [0x0400603b], 1	      9240	option.c	FUNCTION_50	IF_90	ELSE_36
0x400603b	      0xbd00000000	                              mov ebp, 0	      9239	option.c	FUNCTION_50	IF_90	ELSE_36
0x4006040	      0xe975fcffff	                           jmp 0x4005cba	      9239	option.c	FUNCTION_50	IF_90	ELSE_36
0x4006045	           0xf1f00	                         nop dword [rax]	      9239	option.c	FUNCTION_50	IF_90	ELSE_36
0x4006048	    0x8b3d00000000	            mov edi, dword [0x0400604e] 	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400604e	      0xba01000000	                              mov edx, 1	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006053	      0xe800000000	                          call 0x4006058	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006058	    0x488b05000000	            mov rax, qword [0x0400605f] 	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400605f	      0xe932fbffff	                           jmp 0x4005b96	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006064	         0xf1f4000	                         nop dword [rax]	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006068	    0x488b05000000	            mov rax, qword [0x0400606f] 	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400606f	          0x4885c0	                           test rax, rax	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4006072	     0xf8e10010000	                           jle 0x4006188	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4006078	    0x488b15000000	            mov rdx, qword [0x0400607f] 	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400607f	          0x4839c2	                            cmp rdx, rax	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4006082	     0xf8fe8000000	                            jg 0x4006170	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4006088	    0x488b05000000	            mov rax, qword [0x0400608f] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400608f	    0x483905000000	            cmp qword [0x04006096], rax 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x4006096	     0xf841cfaffff	                            je 0x4005ab8	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400609c	    0x488b05000000	            mov rax, qword [0x040060a3] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x40060a3	    0x488b3d000000	            mov rdi, qword [0x040060aa] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x40060aa	    0x486380ac0000	         movsxd rax, dword [rax + 0xac] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x40060b1	          0x4839f8	                            cmp rax, rdi	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x40060b4	     0xf8dfef9ffff	                           jge 0x4005ab8	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x40060ba	      0xe800000000	                          call 0x40060bf	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x40060bf	      0xe9f4f9ffff	                           jmp 0x4005ab8	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x40060c4	         0xf1f4000	                         nop dword [rax]	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x40060c8	    0x488b05000000	            mov rax, qword [0x040060cf] 	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40060cf	          0x4885c0	                           test rax, rax	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40060d2	     0xf88d0000000	                            js 0x40061a8	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40060d8	    0x488b15000000	            mov rdx, qword [0x040060df] 	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40060df	          0x4839c2	                            cmp rdx, rax	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40060e2	     0xf8dc8f9ffff	                           jge 0x4005ab0	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40060e8	    0x488915000000	            mov qword [0x040060ef], rdx 	      8869	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40060ef	      0xbd00000000	                              mov ebp, 0	      8868	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40060f4	      0xe9b7f9ffff	                           jmp 0x4005ab0	      8868	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40060f9	     0xf1f80000000	                         nop dword [rax]	      8868	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x4006100	    0x48c705000000	               mov qword [0x0400610b], 1	      8802	option.c	FUNCTION_50	IF_3	IF_4
0x400610b	      0xb801000000	                              mov eax, 1	      8802	option.c	FUNCTION_50	IF_3	IF_4
0x4006110	      0xbd00000000	                              mov ebp, 0	      8801	option.c	FUNCTION_50	IF_3	IF_4
0x4006115	      0xe916fdffff	                           jmp 0x4005e30	      8801	option.c	FUNCTION_50	IF_3	IF_4
0x400611a	    0x660f1f440000	                    nop word [rax + rax]	      8801	option.c	FUNCTION_50	IF_3	IF_4
0x4006120	    0x48c705000000	               mov qword [0x0400612b], 0	      8812	option.c	FUNCTION_50	IF_3	IF_6
0x400612b	      0xbd00000000	                              mov ebp, 0	      8811	option.c	FUNCTION_50	IF_3	IF_6
0x4006130	      0xe921fdffff	                           jmp 0x4005e56	      8811	option.c	FUNCTION_50	IF_3	IF_6
0x4006135	           0xf1f00	                         nop dword [rax]	      8811	option.c	FUNCTION_50	IF_3	IF_6
0x4006138	    0x488915000000	            mov qword [0x0400613f], rdx 	      8836	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x400613f	      0xbd00000000	                              mov ebp, 0	      8835	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4006144	      0xe967f9ffff	                           jmp 0x4005ab0	      8835	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4006149	     0xf1f80000000	                         nop dword [rax]	      8835	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x4006150	    0x4883bfe80100	              cmp qword [rdi + 0x1e8], 0	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x4006158	     0xf8892030000	                            js 0x40064f0	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400615e	      0xe800000000	                          call 0x4006163	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x4006163	      0xe950f9ffff	                           jmp 0x4005ab8	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x4006168	     0xf1f84000000	                   nop dword [rax + rax]	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x4006170	    0x488915000000	            mov qword [0x04006177], rdx 	      8850	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4006177	      0xbd00000000	                              mov ebp, 0	      8849	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400617c	      0xe907ffffff	                           jmp 0x4006088	      8849	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4006181	     0xf1f80000000	                         nop dword [rax]	      8849	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4006188	    0x48c705000000	               mov qword [0x04006193], 1	      8845	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4006193	      0xb801000000	                              mov eax, 1	      8845	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4006198	      0xbd00000000	                              mov ebp, 0	      8844	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400619d	      0xe9d6feffff	                           jmp 0x4006078	      8844	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x40061a2	    0x660f1f440000	                    nop word [rax + rax]	      8844	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x40061a8	    0x48c705000000	               mov qword [0x040061b3], 0	      8864	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40061b3	            0x31c0	                            xor eax, eax	      8864	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40061b5	      0xbd00000000	                              mov ebp, 0	      8863	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40061ba	      0xe919ffffff	                           jmp 0x40060d8	      8863	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40061bf	    0x48833d000000	               cmp qword [0x040061c7], 0	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40061c7	     0xf88cc040000	                            js 0x4006699	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40061cd	    0x833d00000000	               cmp dword [0x040061d4], 2	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40061d4	     0xf84def8ffff	                            je 0x4005ab8	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40061da	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40061df	    0x483b05000000	            cmp rax, qword [0x040061e6] 	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40061e6	     0xf84ccf8ffff	                            je 0x4005ab8	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40061ec	    0xc70500000000	               mov dword [0x040061f6], 1	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40061f6	      0xe9bdf8ffff	                           jmp 0x4005ab8	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40061fb	       0xf1f440000	                   nop dword [rax + rax]	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x4006200	    0x48c787600200	              mov qword [rdi + 0x260], 1	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x400620b	      0xe915faffff	                           jmp 0x4005c25	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x4006210	    0x448b05000000	            mov r8d, dword [0x04006217] 	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x4006217	          0x4585c0	                           test r8d, r8d	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400621a	     0xf8498f8ffff	                            je 0x4005ab8	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x4006220	      0xe800000000	                          call 0x4006225	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x4006225	          0x83f801	                              cmp eax, 1	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x4006228	     0xf858af8ffff	                           jne 0x4005ab8	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x400622e	      0xba01000000	                              mov edx, 1	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x4006233	            0x31f6	                            xor esi, esi	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x4006235	            0x31ff	                            xor edi, edi	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x4006237	      0xe800000000	                          call 0x400623c	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x400623c	      0xe977f8ffff	                           jmp 0x4005ab8	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x4006241	     0xf1f80000000	                         nop dword [rax]	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x4006248	      0xe800000000	                          call 0x400624d	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400624d	            0x85c0	                           test eax, eax	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400624f	     0xf85da020000	                           jne 0x400652f	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x4006255	    0x488b3d000000	            mov rdi, qword [0x0400625c] 	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400625c	    0x488d87681500	                 lea rax, [rdi + 0x1568]	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4006263	          0x4839c3	                            cmp rbx, rax	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4006266	            0x740e	                            je 0x4006276	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4006268	    0x4883bf681500	             cmp qword [rdi + 0x1568], 0	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4006270	     0xf8542f8ffff	                           jne 0x4005ab8	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4006276	      0xe800000000	                          call 0x400627b	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x400627b	      0xe938f8ffff	                           jmp 0x4005ab8	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x4006280	          0x4885c0	                           test rax, rax	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x4006283	      0xb800000000	                              mov eax, 0	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x4006288	        0x480f45e8	                         cmovne rbp, rax	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400628c	      0xe800000000	                          call 0x4006291	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x4006291	      0xe98ff9ffff	                           jmp 0x4005c25	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x4006296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x40062a0	    0x488b87c80100	           mov rax, qword [rdi + 0x1c8] 	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x40062a7	          0x4885c0	                           test rax, rax	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x40062aa	     0xf88a9020000	                            js 0x4006559	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x40062b0	        0x4883f80c	                            cmp rax, 0xc	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x40062b4	     0xf8efef7ffff	                           jle 0x4005ab8	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x40062ba	    0x48c787c80100	           mov qword [rdi + 0x1c8], 0xc 	      8929	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x40062c5	      0xbd00000000	                              mov ebp, 0	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x40062ca	      0xe9e9f7ffff	                           jmp 0x4005ab8	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x40062cf	              0x90	                                     nop	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x40062d0	    0x488b05000000	            mov rax, qword [0x040062d7] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40062d7	    0x488b3d000000	            mov rdi, qword [0x040062de] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40062de	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40062e5	          0x4839f8	                            cmp rax, rdi	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40062e8	     0xf8d89fbffff	                           jge 0x4005e77	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40062ee	      0xe800000000	                          call 0x40062f3	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x40062f3	      0xe97ffbffff	                           jmp 0x4005e77	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x40062f8	     0xf1f84000000	                   nop dword [rax + rax]	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x4006300	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x4006305	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400630a	      0xba00000000	                              mov edx, 0	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400630f	      0xbe0a000000	                            mov esi, 0xa	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x4006314	            0x31c0	                            xor eax, eax	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x4006316	      0xe800000000	                          call 0x400631b	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400631b	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x4006320	          0x4c89f9	                            mov rcx, r15	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x4006323	      0xba00000000	                              mov edx, 0	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x4006328	      0xbe0a000000	                            mov esi, 0xa	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400632d	            0x31c0	                            xor eax, eax	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400632f	      0xe800000000	                          call 0x4006334	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x4006334	        0x4183e504	                             and r13d, 4	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4006338	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400633d	      0xb800000000	                              mov eax, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4006342	      0xb900000000	                              mov ecx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4006347	      0xba00000000	                              mov edx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400634c	      0xbe07000000	                              mov esi, 7	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4006351	        0x480f44c8	                          cmove rcx, rax	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4006355	            0x31c0	                            xor eax, eax	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4006357	      0xe800000000	                          call 0x400635c	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400635c	      0x488d742450	                   lea rsi, [rsp + 0x50]	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x4006361	      0xbaffffffff	                     mov edx, 0xffffffff	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x4006366	      0xbf3d000000	                           mov edi, 0x3d	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400636b	      0xe800000000	                          call 0x4006370	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x4006370	      0x488d742440	                   lea rsi, [rsp + 0x40]	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x4006375	      0xbaffffffff	                     mov edx, 0xffffffff	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400637a	      0xbf3e000000	                           mov edi, 0x3e	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400637f	      0xe800000000	                          call 0x4006384	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x4006384	      0x488d742430	                   lea rsi, [rsp + 0x30]	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x4006389	      0xbaffffffff	                     mov edx, 0xffffffff	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400638e	      0xbf3f000000	                           mov edi, 0x3f	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x4006393	      0xe800000000	                          call 0x4006398	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x4006398	    0x488bb3000000	                    mov rsi, qword [rbx]	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400639f	          0x4531c0	                            xor r8d, r8d	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x40063a2	            0x31c9	                            xor ecx, ecx	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x40063a4	            0x31d2	                            xor edx, edx	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x40063a6	      0xbf3e000000	                           mov edi, 0x3e	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x40063ab	      0xe800000000	                          call 0x40063b0	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x40063b0	      0xe800000000	                          call 0x40063b5	      9288	option.c	FUNCTION_50	IF_98	CALL_51
0x40063b5	      0xe97cf9ffff	                           jmp 0x4005d36	      9288	option.c	FUNCTION_50	IF_98	CALL_51
0x40063ba	    0x660f1f440000	                    nop word [rax + rax]	      9288	option.c	FUNCTION_50	IF_98	CALL_51
0x40063c0	      0xe800000000	                          call 0x40063c5	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40063c5	            0x85c0	                           test eax, eax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40063c7	            0x7514	                           jne 0x40063dd	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40063c9	    0x488b3d000000	            mov rdi, qword [0x040063d0] 	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40063d0	      0xe800000000	                          call 0x40063d5	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40063d5	            0x85c0	                           test eax, eax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40063d7	     0xf84dbf6ffff	                            je 0x4005ab8	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40063dd	    0x488b3d000000	            mov rdi, qword [0x040063e4] 	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x40063e4	      0xe800000000	                          call 0x40063e9	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x40063e9	      0xe9caf6ffff	                           jmp 0x4005ab8	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x40063ee	            0x6690	                                     nop	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x40063f0	            0x31ff	                            xor edi, edi	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x40063f2	      0xe800000000	                          call 0x40063f7	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x40063f7	      0xe9bcf6ffff	                           jmp 0x4005ab8	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x40063fc	         0xf1f4000	                         nop dword [rax]	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x4006400	    0x48c705000000	               mov qword [0x0400640b], 0	      8831	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400640b	            0x31c0	                            xor eax, eax	      8831	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400640d	      0xbd00000000	                              mov ebp, 0	      8830	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4006412	      0xe989f6ffff	                           jmp 0x4005aa0	      8830	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4006417	    0x660f1f840000	                    nop word [rax + rax]	      8830	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4006420	      0xe800000000	                          call 0x4006425	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x4006425	      0xe98ef6ffff	                           jmp 0x4005ab8	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x400642a	    0x660f1f440000	                    nop word [rax + rax]	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x4006430	    0x488b05000000	            mov rax, qword [0x04006437] 	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x4006437	        0x4883f806	                              cmp rax, 6	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400643b	     0xf8eff000000	                           jle 0x4006540	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x4006441	    0x48c705000000	               mov qword [0x0400644c], 6	      8956	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400644c	      0xe800000000	                          call 0x4006451	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x4006451	      0xe962f6ffff	                           jmp 0x4005ab8	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x4006456	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x4006460	    0x488b90781200	          mov rdx, qword [rax + 0x1278] 	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x4006467	        0x4883fa02	                              cmp rdx, 2	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400646b	            0x7612	                           jbe 0x400647f	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400646d	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      8968	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x4006478	            0x31d2	                            xor edx, edx	      8968	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400647a	      0xbd00000000	                              mov ebp, 0	      8967	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400647f	    0x8b3d00000000	            mov edi, dword [0x04006485] 	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x4006485	    0x488915000000	            mov qword [0x0400648c], rdx 	      8970	option.c	FUNCTION_50	ELSE_15	IF_38
0x400648c	            0x85ff	                           test edi, edi	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x400648e	     0xf85b5010000	                           jne 0x4006649	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x4006494	      0xe800000000	                          call 0x4006499	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x4006499	      0xe91af6ffff	                           jmp 0x4005ab8	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x400649e	            0x6690	                                     nop	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x40064a0	    0x48833d000000	               cmp qword [0x040064a8], 2	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40064a8	      0xb800000000	                              mov eax, 0	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40064ad	        0x480f43e8	                         cmovae rbp, rax	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40064b1	      0xe902f6ffff	                           jmp 0x4005ab8	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40064b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40064c0	    0x488b05000000	            mov rax, qword [0x040064c7] 	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x40064c7	          0x4885c0	                           test rax, rax	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x40064ca	     0xf8eb9010000	                           jle 0x4006689	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x40064d0	    0x488b15000000	            mov rdx, qword [0x040064d7] 	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40064d7	          0x4839d0	                            cmp rax, rdx	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40064da	     0xf8cd8f5ffff	                            jl 0x4005ab8	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40064e0	        0x4883ea01	                              sub rdx, 1	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40064e4	    0x488915000000	            mov qword [0x040064eb], rdx 	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40064eb	      0xe9c8f5ffff	                           jmp 0x4005ab8	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40064f0	    0x48c787e80100	              mov qword [rdi + 0x1e8], 0	      8901	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x40064fb	      0xe95efcffff	                           jmp 0x400615e	      8901	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x4006500	    0x488b90801200	          mov rdx, qword [rax + 0x1280] 	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x4006507	        0x488d4a01	                      lea rcx, [rdx + 1]	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400650b	        0x4883f903	                              cmp rcx, 3	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400650f	            0x7612	                           jbe 0x4006523	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x4006511	    0x48c780801200	            mov qword [rax + 0x1280], 0 	      9001	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400651c	            0x31d2	                            xor edx, edx	      9001	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400651e	      0xbd00000000	                              mov ebp, 0	      9000	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x4006523	    0x488915000000	            mov qword [0x0400652a], rdx 	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400652a	      0xe989f5ffff	                           jmp 0x4005ab8	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400652f	    0x488b3d000000	            mov rdi, qword [0x04006536] 	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x4006536	      0xe800000000	                          call 0x400653b	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x400653b	      0xe915fdffff	                           jmp 0x4006255	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x4006540	          0x4885c0	                           test rax, rax	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x4006543	     0xf8903ffffff	                           jns 0x400644c	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x4006549	    0x48c705000000	               mov qword [0x04006554], 0	      8958	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x4006554	      0xe9f3feffff	                           jmp 0x400644c	      8958	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x4006559	    0x48c787c80100	              mov qword [rdi + 0x1c8], 0	      8924	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x4006564	      0xbd00000000	                              mov ebp, 0	      8923	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x4006569	      0xe94af5ffff	                           jmp 0x4005ab8	      8923	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400656e	    0x48833d000000	               cmp qword [0x04006576], 0	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x4006576	     0xf8e5d010000	                           jle 0x40066d9	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400657c	    0x488b05000000	            mov rax, qword [0x04006583] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x4006583	      0x4889442420	             mov qword [rsp + 0x20], rax	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x4006588	      0xe800000000	                          call 0x400658d	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400658d	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x4006592	            0x4898	                                    cdqe	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x4006594	    0x488b15000000	            mov rdx, qword [0x0400659b] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400659b	          0x4829c1	                            sub rcx, rax	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400659e	          0x4889c8	                            mov rax, rcx	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x40065a1	        0x4883c001	                              add rax, 1	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x40065a5	          0x4839d0	                            cmp rax, rdx	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x40065a8	     0xf8c00010000	                            jl 0x40066ae	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x40065ae	      0x4839542410	            cmp qword [rsp + 0x10], rdx 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40065b3	     0xf84fff4ffff	                            je 0x4005ab8	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40065b9	    0x8b0500000000	            mov eax, dword [0x040065bf] 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40065bf	            0x85c0	                           test eax, eax	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40065c1	     0xf84f1f4ffff	                            je 0x4005ab8	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40065c7	    0x8b3500000000	            mov esi, dword [0x040065cd] 	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40065cd	            0x85f6	                           test esi, esi	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40065cf	     0xf85e3f4ffff	                           jne 0x4005ab8	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40065d5	      0xe800000000	                          call 0x40065da	      9038	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_24
0x40065da	      0xe9d9f4ffff	                           jmp 0x4005ab8	      9038	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_24
0x40065df	    0x48833d000000	               cmp qword [0x040065e7], 0	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x40065e7	     0xf884c010000	                            js 0x4006739	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x40065ed	           0xf95c0	                                setne al	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x40065f0	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x40065f6	     0xf85bcf4ffff	                           jne 0x4005ab8	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x40065fc	            0x84c0	                             test al, al	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x40065fe	     0xf84b4f4ffff	                            je 0x4005ab8	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x4006604	      0xe800000000	                          call 0x4006609	      9050	option.c	FUNCTION_50	ELSE_22	IF_55	CALL_25
0x4006609	      0xe9aaf4ffff	                           jmp 0x4005ab8	      9050	option.c	FUNCTION_50	ELSE_22	IF_55	CALL_25
0x400660e	    0x488b87a80200	           mov rax, qword [rdi + 0x2a8] 	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x4006615	          0x4885c0	                           test rax, rax	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x4006618	     0xf8835010000	                            js 0x4006753	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400661e	        0x4883f803	                              cmp rax, 3	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x4006622	     0xf8e90f4ffff	                           jle 0x4005ab8	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x4006628	    0x48c787a80200	              mov qword [rdi + 0x2a8], 3	      9063	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x4006633	      0xbd00000000	                              mov ebp, 0	      9062	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x4006638	      0xe97bf4ffff	                           jmp 0x4005ab8	      9062	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400663d	    0x488b15000000	            mov rdx, qword [0x04006644] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006644	      0xe9edf3ffff	                           jmp 0x4005a36	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006649	      0xe800000000	                          call 0x400664e	      8972	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_20
0x400664e	      0xe941feffff	                           jmp 0x4006494	      8972	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_20
0x4006653	    0x488b87400200	           mov rax, qword [rdi + 0x240] 	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400665a	          0x4885c0	                           test rax, rax	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400665d	     0xf8e05010000	                           jle 0x4006768	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x4006663	        0x4883f80a	                            cmp rax, 0xa	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x4006667	            0x7e10	                           jle 0x4006679	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x4006669	    0x48c787400200	            mov qword [rdi + 0x240], 0xa	      9109	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x4006674	      0xbd00000000	                              mov ebp, 0	      9108	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x4006679	    0x48c787301900	            mov qword [rdi + 0x1930], 0 	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x4006684	      0xe92ff4ffff	                           jmp 0x4005ab8	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x4006689	    0x48c705000000	               mov qword [0x04006694], 1	      8991	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x4006694	      0xe91ff4ffff	                           jmp 0x4005ab8	      8991	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x4006699	    0x48c705000000	           mov qword [0x040066a4], 0x55 	      9013	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40066a4	      0xbd00000000	                              mov ebp, 0	      9012	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40066a9	      0xe91ffbffff	                           jmp 0x40061cd	      9012	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40066ae	    0x488b05000000	            mov rax, qword [0x040066b5] 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066b5	      0x4889442420	             mov qword [rsp + 0x20], rax	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066ba	      0xe800000000	                          call 0x40066bf	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066bf	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066c4	            0x4898	                                    cdqe	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066c6	          0x4829c2	                            sub rdx, rax	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066c9	        0x4883c201	                              add rdx, 1	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066cd	    0x488915000000	            mov qword [0x040066d4], rdx 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066d4	      0xe9d5feffff	                           jmp 0x40065ae	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40066d9	    0x48c705000000	               mov qword [0x040066e4], 1	      9026	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x40066e4	      0xbd00000000	                              mov ebp, 0	      9025	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x40066e9	      0xe98efeffff	                           jmp 0x400657c	      9025	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x40066ee	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      9085	option.c	FUNCTION_50	ELSE_27	IF_64
0x40066f3	      0xbf01000000	                              mov edi, 1	      9086	option.c	FUNCTION_50	ELSE_27	IF_64	CALL_27
0x40066f8	    0x488905000000	            mov qword [0x040066ff], rax 	      9085	option.c	FUNCTION_50	ELSE_27	IF_64
0x40066ff	      0xe800000000	                          call 0x4006704	      9086	option.c	FUNCTION_50	ELSE_27	IF_64	CALL_27
0x4006704	    0x4c893d000000	            mov qword [0x0400670b], r15 	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x400670b	      0xe9a8f3ffff	                           jmp 0x4005ab8	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x4006710	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x4006715	      0xbf01000000	                              mov edi, 1	      9093	option.c	FUNCTION_50	ELSE_28	IF_65	CALL_28
0x400671a	    0x488988481600	          mov qword [rax + 0x1648], rcx 	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x4006721	      0xe800000000	                          call 0x4006726	      9093	option.c	FUNCTION_50	ELSE_28	IF_65	CALL_28
0x4006726	    0x488b05000000	            mov rax, qword [0x0400672d] 	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400672d	    0x4c89b8481600	          mov qword [rax + 0x1648], r15 	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x4006734	      0xe97ff3ffff	                           jmp 0x4005ab8	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x4006739	    0x48c705000000	           mov qword [0x04006744], 0x64 	      9047	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x4006744	      0xb801000000	                              mov eax, 1	      9047	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x4006749	      0xbd00000000	                              mov ebp, 0	      9046	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400674e	      0xe99dfeffff	                           jmp 0x40065f0	      9046	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x4006753	    0x48c787a80200	              mov qword [rdi + 0x2a8], 0	      9058	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400675e	      0xbd00000000	                              mov ebp, 0	      9057	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x4006763	      0xe950f3ffff	                           jmp 0x4005ab8	      9057	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x4006768	    0x48c787400200	              mov qword [rdi + 0x240], 1	      9104	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x4006773	      0xbd00000000	                              mov ebp, 0	      9103	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x4006778	      0xe9fcfeffff	                           jmp 0x4006679	      9103	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400677d	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	      9120	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x4006788	      0xbd00000000	                              mov ebp, 0	      9119	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400678d	      0xe959f2ffff	                           jmp 0x40059eb	      9119	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x4006792	      0xe800000000	                          call 0x4006797	      9299	option.c	FUNCTION_50
check_stl_option	WHILE,5:FOR,0:ELSE,0:SWITCH,0:CALL,7:IF,14:functions,0:DO,0	133
0x4004b20	            0x4154	                                push r12	      7877	option.c	FUNCTION_44
0x4004b22	              0x55	                                push rbp	      7877	option.c	FUNCTION_44
0x4004b23	          0x4531e4	                          xor r12d, r12d	      7879	option.c	FUNCTION_44
0x4004b26	              0x53	                                push rbx	      7877	option.c	FUNCTION_44
0x4004b27	           0xfb607	                   movzx eax, byte [rdi]	      7877	option.c	FUNCTION_44
0x4004b2a	          0x4889fb	                            mov rbx, rdi	      7877	option.c	FUNCTION_44
0x4004b2d	            0x31ed	                            xor ebp, ebp	      7878	option.c	FUNCTION_44
0x4004b2f	            0x84c0	                             test al, al	      7882	option.c	FUNCTION_44	WHILE_1
0x4004b31	     0xf84c4000000	                            je 0x4004bfb	      7882	option.c	FUNCTION_44	WHILE_1
0x4004b37	          0x83fd4f	                           cmp ebp, 0x4f	      7882	option.c	FUNCTION_44	WHILE_1
0x4004b3a	     0xf8f97000000	                            jg 0x4004bd7	      7882	option.c	FUNCTION_44	WHILE_1
0x4004b40	            0x3c25	                            cmp al, 0x25	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b42	            0x7510	                           jne 0x4004b54	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b44	            0xeb21	                           jmp 0x4004b67	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b50	            0x3c25	                            cmp al, 0x25	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b52	            0x740b	                            je 0x4004b5f	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b54	        0x4883c301	                              add rbx, 1	      7886	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b58	           0xfb603	                   movzx eax, byte [rbx]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b5b	            0x84c0	                             test al, al	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b5d	            0x75f1	                           jne 0x4004b50	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4004b5f	            0x84c0	                             test al, al	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x4004b61	     0xf849e000000	                            je 0x4004c05	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x4004b67	         0xfb65301	               movzx edx, byte [rbx + 1]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4004b6b	          0x8d42db	                   lea eax, [rdx - 0x25]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4004b6e	          0x83e0fb	                     and eax, 0xfffffffb	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x4004b71	            0x3c01	                               cmp al, 1	      7891	option.c	FUNCTION_44	WHILE_1	IF_2
0x4004b73	          0x8d42c4	                   lea eax, [rdx - 0x3c]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004b76	          0x83ddff	             sbb ebp, 0xffffffffffffffff	      7891	option.c	FUNCTION_44	WHILE_1	IF_2
0x4004b79	            0x3c01	                               cmp al, 1	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004b7b	            0x766e	                           jbe 0x4004beb	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004b7d	          0x80fa25	                            cmp dl, 0x25	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004b80	            0x7469	                            je 0x4004beb	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x4004b82	          0x80fa29	                            cmp dl, 0x29	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x4004b85	            0x745a	                            je 0x4004be1	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x4004b87	          0x80fa2d	                            cmp dl, 0x2d	      7904	option.c	FUNCTION_44	WHILE_1	IF_6
0x4004b8a	     0xf84db000000	                            je 0x4004c6b	      7904	option.c	FUNCTION_44	WHILE_1	IF_6
0x4004b90	        0x4883c301	                              add rbx, 1	      7889	option.c	FUNCTION_44	WHILE_1
0x4004b94	           0xfb6c2	                           movzx eax, dl	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004b97	          0x83e830	                           sub eax, 0x30	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004b9a	          0x83f809	                              cmp eax, 9	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004b9d	            0x7712	                            ja 0x4004bb1	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004b9f	              0x90	                                     nop	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004ba0	        0x4883c301	                              add rbx, 1	      7907	option.c	FUNCTION_44	WHILE_1	WHILE_3
0x4004ba4	           0xfb603	                   movzx eax, byte [rbx]	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004ba7	            0x89c2	                            mov edx, eax	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004ba9	          0x83e830	                           sub eax, 0x30	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004bac	          0x83f809	                              cmp eax, 9	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004baf	            0x76ef	                           jbe 0x4004ba0	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4004bb1	          0x80fa2a	                            cmp dl, 0x2a	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x4004bb4	     0xf84a9000000	                            je 0x4004c63	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x4004bba	          0x80fa2e	                            cmp dl, 0x2e	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x4004bbd	     0xf84b5000000	                            je 0x4004c78	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x4004bc3	           0xfb603	                   movzx eax, byte [rbx]	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x4004bc6	            0x3c28	                            cmp al, 0x28	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x4004bc8	            0x7551	                           jne 0x4004c1b	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x4004bca	        0x4183c401	                             add r12d, 1	      7918	option.c	FUNCTION_44	WHILE_1	IF_9
0x4004bce	          0x83fd4f	                           cmp ebp, 0x4f	      7882	option.c	FUNCTION_44	WHILE_1
0x4004bd1	     0xf8e69ffffff	                           jle 0x4004b40	      7882	option.c	FUNCTION_44	WHILE_1
0x4004bd7	              0x5b	                                 pop rbx	      7939	option.c	FUNCTION_44
0x4004bd8	      0xb800000000	                              mov eax, 0	      7935	option.c	FUNCTION_44	CALL_6
0x4004bdd	              0x5d	                                 pop rbp	      7939	option.c	FUNCTION_44
0x4004bde	            0x415c	                                 pop r12	      7939	option.c	FUNCTION_44
0x4004be0	              0xc3	                                     ret	      7939	option.c	FUNCTION_44
0x4004be1	        0x4183ec01	                             sub r12d, 1	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4004be5	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4004be9	            0x7410	                            je 0x4004bfb	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4004beb	         0xfb64302	               movzx eax, byte [rbx + 2]	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4004bef	        0x4883c302	                              add rbx, 2	      7899	option.c	FUNCTION_44	WHILE_1	IF_4
0x4004bf3	            0x84c0	                             test al, al	      7882	option.c	FUNCTION_44	WHILE_1
0x4004bf5	     0xf853cffffff	                           jne 0x4004b37	      7882	option.c	FUNCTION_44	WHILE_1
0x4004bfb	          0x83fd4f	                           cmp ebp, 0x4f	      7934	option.c	FUNCTION_44	IF_13
0x4004bfe	      0xb800000000	                              mov eax, 0	      7935	option.c	FUNCTION_44	CALL_6
0x4004c03	            0x7f11	                            jg 0x4004c16	      7934	option.c	FUNCTION_44	IF_13
0x4004c05	          0x4585e4	                         test r12d, r12d	      7937	option.c	FUNCTION_44	CALL_7
0x4004c08	      0xba00000000	                              mov edx, 0	      7937	option.c	FUNCTION_44	CALL_7
0x4004c0d	      0xb800000000	                              mov eax, 0	      7937	option.c	FUNCTION_44	CALL_7
0x4004c12	        0x480f44c2	                          cmove rax, rdx	      7937	option.c	FUNCTION_44	CALL_7
0x4004c16	              0x5b	                                 pop rbx	      7939	option.c	FUNCTION_44
0x4004c17	              0x5d	                                 pop rbp	      7939	option.c	FUNCTION_44
0x4004c18	            0x415c	                                 pop r12	      7939	option.c	FUNCTION_44
0x4004c1a	              0xc3	                                     ret	      7939	option.c	FUNCTION_44
0x4004c1b	           0xfb6f0	                           movzx esi, al	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4004c1e	      0xbf00000000	                              mov edi, 0	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4004c23	      0xe800000000	                          call 0x4004c28	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4004c28	          0x4885c0	                           test rax, rax	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4004c2b	            0x7477	                            je 0x4004ca4	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4004c2d	           0xfb603	                   movzx eax, byte [rbx]	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4004c30	            0x3c7b	                            cmp al, 0x7b	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4004c32	     0xf85f7feffff	                           jne 0x4004b2f	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4004c38	         0xfb64301	               movzx eax, byte [rbx + 1]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c3c	        0x488d5301	                      lea rdx, [rbx + 1]	      7927	option.c	FUNCTION_44	WHILE_1	IF_11
0x4004c40	          0x4889d3	                            mov rbx, rdx	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c43	            0x84c0	                             test al, al	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c45	            0x7418	                            je 0x4004c5f	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c47	            0x3c7d	                            cmp al, 0x7d	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c49	            0x7509	                           jne 0x4004c54	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c4b	            0xeb12	                           jmp 0x4004c5f	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c4d	           0xf1f00	                         nop dword [rax]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c50	            0x84c0	                             test al, al	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c52	            0x740b	                            je 0x4004c5f	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c54	        0x4883c301	                              add rbx, 1	      7929	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c58	           0xfb603	                   movzx eax, byte [rbx]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c5b	            0x3c7d	                            cmp al, 0x7d	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c5d	            0x75f1	                           jne 0x4004c50	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4004c5f	            0x3c7d	                            cmp al, 0x7d	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4004c61	            0x7552	                           jne 0x4004cb5	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4004c63	           0xfb603	                   movzx eax, byte [rbx]	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4004c66	      0xe9c4feffff	                           jmp 0x4004b2f	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4004c6b	         0xfb65302	               movzx edx, byte [rbx + 2]	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x4004c6f	        0x4883c302	                              add rbx, 2	      7905	option.c	FUNCTION_44	WHILE_1	IF_6
0x4004c73	      0xe91cffffff	                           jmp 0x4004b94	      7905	option.c	FUNCTION_44	WHILE_1	IF_6
0x4004c78	         0xfb64301	               movzx eax, byte [rbx + 1]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c7c	        0x488d5301	                      lea rdx, [rbx + 1]	      7912	option.c	FUNCTION_44	WHILE_1	IF_8
0x4004c80	          0x4889d3	                            mov rbx, rdx	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c83	          0x8d48d0	                   lea ecx, [rax - 0x30]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c86	          0x80f909	                               cmp cl, 9	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c89	     0xf8737ffffff	                            ja 0x4004bc6	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c8f	              0x90	                                     nop	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c90	        0x4883c301	                              add rbx, 1	      7914	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4
0x4004c94	           0xfb603	                   movzx eax, byte [rbx]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c97	          0x8d50d0	                   lea edx, [rax - 0x30]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c9a	          0x80fa09	                               cmp dl, 9	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c9d	            0x76f1	                           jbe 0x4004c90	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004c9f	      0xe922ffffff	                           jmp 0x4004bc6	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x4004ca4	           0xfb633	                   movzx esi, byte [rbx]	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4004ca7	      0xbf00000000	                              mov edi, 0	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4004cac	              0x5b	                                 pop rbx	      7939	option.c	FUNCTION_44
0x4004cad	              0x5d	                                 pop rbp	      7939	option.c	FUNCTION_44
0x4004cae	            0x415c	                                 pop r12	      7939	option.c	FUNCTION_44
0x4004cb0	      0xe96bc5ffff	                    jmp sym.illegal_char	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4004cb5	      0xb800000000	                              mov eax, 0	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
0x4004cba	      0xe957ffffff	                           jmp 0x4004c16	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
findoption	WHILE,0:FOR,3:ELSE,2:SWITCH,0:CALL,6:IF,10:functions,0:DO,0	115
0x40004b0	            0x4155	                                push r13	      9332	option.c	FUNCTION_52
0x40004b2	            0x4154	                                push r12	      9332	option.c	FUNCTION_52
0x40004b4	              0x55	                                push rbp	      9332	option.c	FUNCTION_52
0x40004b5	              0x53	                                push rbx	      9332	option.c	FUNCTION_52
0x40004b6	        0x4883ec08	                              sub rsp, 8	      9332	option.c	FUNCTION_52
0x40004ba	    0x66833d000000	                cmp word [0x040004c2], 0	      9343	option.c	FUNCTION_52	IF_1
0x40004c2	            0x756c	                           jne 0x4000530	      9343	option.c	FUNCTION_52	IF_1
0x40004c4	    0x488b15000000	            mov rdx, qword [0x040004cb] 	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x40004cb	    0x488b05000000	            mov rax, qword [0x040004d2] 	      9345	option.c	FUNCTION_52	IF_1
0x40004d2	          0x4885d2	                           test rdx, rdx	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x40004d5	            0x7459	                            je 0x4000530	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x40004d7	        0x440fb600	                   movzx r8d, byte [rax]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x40004db	      0xb900000000	                              mov ecx, 0	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x40004e0	      0xbe01000000	                              mov esi, 1	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x40004e5	            0xeb2d	                           jmp 0x4000514	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x40004e7	    0x660f1f840000	                    nop word [rax + rax]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x40004f0	           0xfbed0	                           movsx edx, al	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x40004f3	          0x83ea61	                           sub edx, 0x61	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x40004f6	          0x4863d2	                         movsxd rdx, edx	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x40004f9	    0x6689b4120000	                mov word [rdx + rdx], si	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000501	        0x4883c140	                           add rcx, 0x40	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000505	        0x488b51c0	             mov rdx, qword [rcx - 0x40]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000509	          0x83c601	                              add esi, 1	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400050c	          0x4189c0	                            mov r8d, eax	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400050f	          0x4885d2	                           test rdx, rdx	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000512	            0x741c	                            je 0x4000530	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000514	           0xfb602	                   movzx eax, byte [rdx]	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4000517	          0x4138c0	                             cmp r8b, al	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400051a	            0x74e5	                            je 0x4000501	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400051c	            0x3c74	                            cmp al, 0x74	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400051e	            0x75d0	                           jne 0x40004f0	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000520	        0x807a015f	                cmp byte [rdx + 1], 0x5f	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000524	            0x75ca	                           jne 0x40004f0	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000526	    0x668935000000	               mov word [0x0400052d], si	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400052d	            0xebd2	                           jmp 0x4000501	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400052f	              0x90	                                     nop	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000530	        0x440fb627	                  movzx r12d, byte [rdi]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x4000534	      0x418d44249f	                   lea eax, [r12 - 0x61]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x4000539	            0x3c19	                            cmp al, 0x19	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x400053b	     0xf87d2000000	                            ja 0x4000613	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x4000541	        0x4180fc74	                          cmp r12b, 0x74	      9369	option.c	FUNCTION_52
0x4000545	          0x4889fd	                            mov rbp, rdi	      9369	option.c	FUNCTION_52
0x4000548	     0xf84d5000000	                            je 0x4000623	      9369	option.c	FUNCTION_52
0x400054e	        0x410fb6c4	                         movzx eax, r12b	      9373	option.c	FUNCTION_52	CALL_3
0x4000552	          0x4531ed	                          xor r13d, r13d	      9374	option.c	FUNCTION_52	FOR_2
0x4000555	          0x83e861	                           sub eax, 0x61	      9373	option.c	FUNCTION_52	CALL_3
0x4000558	            0x4898	                                    cdqe	      9373	option.c	FUNCTION_52	CALL_3
0x400055a	    0x480fbf840000	             movsx rax, word [rax + rax]	      9373	option.c	FUNCTION_52	CALL_3
0x4000563	          0x4889c3	                            mov rbx, rax	      9373	option.c	FUNCTION_52	CALL_3
0x4000566	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x400056a	    0x488bb0000000	                    mov rsi, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x4000571	          0x4885f6	                           test rsi, rsi	      9374	option.c	FUNCTION_52	FOR_2
0x4000574	            0x7520	                           jne 0x4000596	      9374	option.c	FUNCTION_52	FOR_2
0x4000576	      0xe998000000	                           jmp 0x4000613	      9374	option.c	FUNCTION_52	FOR_2
0x400057b	       0xf1f440000	                   nop dword [rax + rax]	      9374	option.c	FUNCTION_52	FOR_2
0x4000580	          0x83c301	                              add ebx, 1	      9374	option.c	FUNCTION_52	FOR_2
0x4000583	          0x4863c3	                         movsxd rax, ebx	      9374	option.c	FUNCTION_52	FOR_2
0x4000586	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x400058a	    0x488bb0000000	                    mov rsi, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x4000591	          0x4885f6	                           test rsi, rsi	      9374	option.c	FUNCTION_52	FOR_2
0x4000594	            0x7419	                            je 0x40005af	      9374	option.c	FUNCTION_52	FOR_2
0x4000596	          0x4889ef	                            mov rdi, rbp	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x4000599	      0xe800000000	                          call 0x400059e	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400059e	            0x85c0	                           test eax, eax	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x40005a0	            0x75de	                           jne 0x4000580	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x40005a2	        0x4883c408	                              add rsp, 8	      9393	option.c	FUNCTION_52
0x40005a6	            0x89d8	                            mov eax, ebx	      9393	option.c	FUNCTION_52
0x40005a8	              0x5b	                                 pop rbx	      9393	option.c	FUNCTION_52
0x40005a9	              0x5d	                                 pop rbp	      9393	option.c	FUNCTION_52
0x40005aa	            0x415c	                                 pop r12	      9393	option.c	FUNCTION_52
0x40005ac	            0x415d	                                 pop r13	      9393	option.c	FUNCTION_52
0x40005ae	              0xc3	                                     ret	      9393	option.c	FUNCTION_52
0x40005af	        0x4183fd01	                             cmp r13d, 1	      9379	option.c	FUNCTION_52	IF_8
0x40005b3	            0x745e	                            je 0x4000613	      9379	option.c	FUNCTION_52	IF_8
0x40005b5	        0x410fb6c4	                         movzx eax, r12b	      9379	option.c	FUNCTION_52	IF_8
0x40005b9	          0x83e861	                           sub eax, 0x61	      9379	option.c	FUNCTION_52	IF_8
0x40005bc	            0x4898	                                    cdqe	      9379	option.c	FUNCTION_52	IF_8
0x40005be	    0x480fbf840000	             movsx rax, word [rax + rax]	      9379	option.c	FUNCTION_52	IF_8
0x40005c7	          0x4889c2	                            mov rdx, rax	      9379	option.c	FUNCTION_52	IF_8
0x40005ca	          0x4889c3	                            mov rbx, rax	      9379	option.c	FUNCTION_52	IF_8
0x40005cd	        0x48c1e206	                              shl rdx, 6	      9379	option.c	FUNCTION_52	IF_8
0x40005d1	    0x4883ba000000	                      cmp qword [rdx], 0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x40005d9	            0x7438	                            je 0x4000613	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x40005db	       0xf1f440000	                   nop dword [rax + rax]	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x40005e0	        0x48c1e006	                              shl rax, 6	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x40005e4	    0x488bb0000000	                    mov rsi, qword [rax]	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x40005eb	          0x4885f6	                           test rsi, rsi	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x40005ee	            0x740c	                            je 0x40005fc	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x40005f0	          0x4889ef	                            mov rdi, rbp	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x40005f3	      0xe800000000	                          call 0x40005f8	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x40005f8	            0x85c0	                           test eax, eax	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x40005fa	            0x74a6	                            je 0x40005a2	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x40005fc	          0x83c301	                              add ebx, 1	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x40005ff	          0x4863c3	                         movsxd rax, ebx	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000602	          0x4889c2	                            mov rdx, rax	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000605	        0x48c1e206	                              shl rdx, 6	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000609	    0x4883ba000000	                      cmp qword [rdx], 0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000611	            0x75cd	                           jne 0x40005e0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000613	        0x4883c408	                              add rsp, 8	      9393	option.c	FUNCTION_52
0x4000617	      0xb8ffffffff	                     mov eax, 0xffffffff	      9391	option.c	FUNCTION_52	IF_10
0x400061c	              0x5b	                                 pop rbx	      9393	option.c	FUNCTION_52
0x400061d	              0x5d	                                 pop rbp	      9393	option.c	FUNCTION_52
0x400061e	            0x415c	                                 pop r12	      9393	option.c	FUNCTION_52
0x4000620	            0x415d	                                 pop r13	      9393	option.c	FUNCTION_52
0x4000622	              0xc3	                                     ret	      9393	option.c	FUNCTION_52
0x4000623	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9369	option.c	FUNCTION_52
0x4000627	     0xf8521ffffff	                           jne 0x400054e	      9369	option.c	FUNCTION_52
0x400062d	    0x480fbf050000	           movsx rax, word [0x04000635] 	      9371	option.c	FUNCTION_52	IF_6
0x4000635	          0x4889c3	                            mov rbx, rax	      9371	option.c	FUNCTION_52	IF_6
0x4000638	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x400063c	    0x488bb0000000	                    mov rsi, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x4000643	          0x4885f6	                           test rsi, rsi	      9374	option.c	FUNCTION_52	FOR_2
0x4000646	            0x74cb	                            je 0x4000613	      9374	option.c	FUNCTION_52	FOR_2
0x4000648	    0x41bd01000000	                             mov r13d, 1	      9369	option.c	FUNCTION_52
0x400064e	      0xe943ffffff	                           jmp 0x4000596	      9369	option.c	FUNCTION_52
briopt_check	WHILE,1:FOR,0:ELSE,2:SWITCH,0:CALL,8:IF,5:functions,0:DO,0	97
0x4000b20	            0x4155	                                push r13	     12642	option.c	FUNCTION_116
0x4000b22	            0x4154	                                push r12	     12642	option.c	FUNCTION_116
0x4000b24	          0x4531ed	                          xor r13d, r13d	     12644	option.c	FUNCTION_116
0x4000b27	              0x55	                                push rbp	     12642	option.c	FUNCTION_116
0x4000b28	              0x53	                                push rbx	     12642	option.c	FUNCTION_116
0x4000b29	          0x4889fd	                            mov rbp, rdi	     12642	option.c	FUNCTION_116
0x4000b2c	            0x31db	                            xor ebx, ebx	     12646	option.c	FUNCTION_116
0x4000b2e	    0x41bc14000000	                          mov r12d, 0x14	     12645	option.c	FUNCTION_116
0x4000b34	        0x4883ec18	                           sub rsp, 0x18	     12642	option.c	FUNCTION_116
0x4000b38	    0x488b97b80100	           mov rdx, qword [rdi + 0x1b8] 	     12648	option.c	FUNCTION_116
0x4000b3f	    0x64488b042528	                mov rax, qword fs:[0x28]	     12642	option.c	FUNCTION_116
0x4000b48	      0x4889442408	                mov qword [rsp + 8], rax	     12642	option.c	FUNCTION_116
0x4000b4d	            0x31c0	                            xor eax, eax	     12642	option.c	FUNCTION_116
0x4000b4f	        0x48891424	                    mov qword [rsp], rdx	     12648	option.c	FUNCTION_116
0x4000b53	        0x440fb602	                   movzx r8d, byte [rdx]	     12648	option.c	FUNCTION_116
0x4000b57	    0x660f1f840000	                    nop word [rax + rax]	     12648	option.c	FUNCTION_116
0x4000b60	          0x4584c0	                           test r8b, r8b	     12649	option.c	FUNCTION_116	WHILE_1
0x4000b63	            0x7473	                            je 0x4000bd8	     12649	option.c	FUNCTION_116	WHILE_1
0x4000b65	      0xbf00000000	                              mov edi, 0	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4000b6a	      0xb906000000	                              mov ecx, 6	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4000b6f	          0x4889d6	                            mov rsi, rdx	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4000b72	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4000b74	     0xf85a6000000	                           jne 0x4000c20	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x4000b7a	         0xfb64a06	               movzx ecx, byte [rdx + 6]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000b7e	          0x80f92d	                            cmp cl, 0x2d	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000b81	     0xf8489000000	                            je 0x4000c10	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000b87	          0x83e930	                           sub ecx, 0x30	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000b8a	          0x83f909	                              cmp ecx, 9	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000b8d	     0xf878d000000	                            ja 0x4000c20	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000b93	        0x4883c206	                              add rdx, 6	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x4000b97	          0x4889e7	                            mov rdi, rsp	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4000b9a	        0x48891424	                    mov qword [rsp], rdx	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x4000b9e	      0xe800000000	                          call 0x4000ba3	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4000ba3	        0x488b1424	                    mov rdx, qword [rsp]	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4000ba7	          0x4189c5	                           mov r13d, eax	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4000baa	        0x440fb602	                   movzx r8d, byte [rdx]	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4000bae	        0x4180f82c	                           cmp r8b, 0x2c	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000bb2	            0x7409	                            je 0x4000bbd	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000bb4	          0x4584c0	                           test r8b, r8b	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000bb7	     0xf85d3000000	                           jne 0x4000c90	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000bbd	        0x4180f82c	                           cmp r8b, 0x2c	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000bc1	            0x759d	                           jne 0x4000b60	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000bc3	        0x488d4201	                      lea rax, [rdx + 1]	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000bc7	        0x48890424	                    mov qword [rsp], rax	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000bcb	      0x440fb64201	               movzx r8d, byte [rdx + 1]	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000bd0	          0x4889c2	                            mov rdx, rax	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000bd3	          0x4584c0	                           test r8b, r8b	     12649	option.c	FUNCTION_116	WHILE_1
0x4000bd6	            0x758d	                           jne 0x4000b65	     12649	option.c	FUNCTION_116	WHILE_1
0x4000bd8	    0x4489ad440500	          mov dword [rbp + 0x544], r13d 	     12673	option.c	FUNCTION_116
0x4000bdf	    0x4489a5400500	          mov dword [rbp + 0x540], r12d 	     12674	option.c	FUNCTION_116
0x4000be6	      0xb801000000	                              mov eax, 1	     12677	option.c	FUNCTION_116
0x4000beb	    0x899d48050000	           mov dword [rbp + 0x548], ebx 	     12675	option.c	FUNCTION_116
0x4000bf1	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     12678	option.c	FUNCTION_116
0x4000bf6	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     12678	option.c	FUNCTION_116
0x4000bff	     0xf8592000000	                           jne 0x4000c97	     12678	option.c	FUNCTION_116
0x4000c05	        0x4883c418	                           add rsp, 0x18	     12678	option.c	FUNCTION_116
0x4000c09	              0x5b	                                 pop rbx	     12678	option.c	FUNCTION_116
0x4000c0a	              0x5d	                                 pop rbp	     12678	option.c	FUNCTION_116
0x4000c0b	            0x415c	                                 pop r12	     12678	option.c	FUNCTION_116
0x4000c0d	            0x415d	                                 pop r13	     12678	option.c	FUNCTION_116
0x4000c0f	              0xc3	                                     ret	     12678	option.c	FUNCTION_116
0x4000c10	         0xfb64207	               movzx eax, byte [rdx + 7]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000c14	          0x83e830	                           sub eax, 0x30	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000c17	          0x83f809	                              cmp eax, 9	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000c1a	     0xf8673ffffff	                           jbe 0x4000b93	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000c20	      0xbf00000000	                              mov edi, 0	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c25	      0xb904000000	                              mov ecx, 4	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c2a	          0x4889d6	                            mov rsi, rdx	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c2d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c2f	            0x750c	                           jne 0x4000c3d	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c31	         0xfb64204	               movzx eax, byte [rdx + 4]	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c35	          0x83e830	                           sub eax, 0x30	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c38	          0x83f809	                              cmp eax, 9	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c3b	            0x7633	                           jbe 0x4000c70	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000c3d	      0xbf00000000	                              mov edi, 0	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4000c42	      0xb903000000	                              mov ecx, 3	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4000c47	          0x4889d6	                            mov rsi, rdx	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4000c4a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4000c4c	     0xf855cffffff	                           jne 0x4000bae	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x4000c52	        0x488d4203	                      lea rax, [rdx + 3]	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4000c56	      0xbb01000000	                              mov ebx, 1	     12665	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4000c5b	        0x48890424	                    mov qword [rsp], rax	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4000c5f	      0x440fb64203	               movzx r8d, byte [rdx + 3]	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4000c64	          0x4889c2	                            mov rdx, rax	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4000c67	      0xe942ffffff	                           jmp 0x4000bae	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4000c6c	         0xf1f4000	                         nop dword [rax]	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x4000c70	        0x4883c204	                              add rdx, 4	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x4000c74	          0x4889e7	                            mov rdi, rsp	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4000c77	        0x48891424	                    mov qword [rsp], rdx	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x4000c7b	      0xe800000000	                          call 0x4000c80	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4000c80	        0x488b1424	                    mov rdx, qword [rsp]	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4000c84	          0x4989c4	                            mov r12, rax	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4000c87	        0x440fb602	                   movzx r8d, byte [rdx]	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4000c8b	      0xe91effffff	                           jmp 0x4000bae	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4000c90	            0x31c0	                            xor eax, eax	     12668	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000c92	      0xe95affffff	                           jmp 0x4000bf1	     12668	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000c97	      0xe800000000	                          call 0x4000c9c	     12678	option.c	FUNCTION_116
makefoldset	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,8:IF,1:functions,0:DO,0	76
0x4005260	    0x488b05000000	            mov rax, qword [0x04005267] 	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x4005267	              0x53	                                push rbx	     10165	option.c	FUNCTION_65
0x4005268	          0x4531c0	                            xor r8d, r8d	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400526b	      0xba00000000	                              mov edx, 0	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x4005270	      0xbe00000000	                              mov esi, 0	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x4005275	          0x4889fb	                            mov rbx, rdi	     10165	option.c	FUNCTION_65
0x4005278	    0x488d88f80100	                  lea rcx, [rax + 0x1f8]	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x400527f	      0xe86cc1ffff	                  call sym.put_setstring	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x4005284	            0x85c0	                           test eax, eax	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x4005286	            0x7508	                           jne 0x4005290	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x4005288	            0x31c0	                            xor eax, eax	     10180	option.c	FUNCTION_65	IF_1
0x400528a	              0x5b	                                 pop rbx	     10183	option.c	FUNCTION_65
0x400528b	              0xc3	                                     ret	     10183	option.c	FUNCTION_65
0x400528c	         0xf1f4000	                         nop dword [rax]	     10183	option.c	FUNCTION_65
0x4005290	    0x488b05000000	            mov rax, qword [0x04005297] 	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x4005297	          0x4531c0	                            xor r8d, r8d	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400529a	      0xba00000000	                              mov edx, 0	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400529f	      0xbe00000000	                              mov esi, 0	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x40052a4	          0x4889df	                            mov rdi, rbx	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x40052a7	    0x488d88180200	                  lea rcx, [rax + 0x218]	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x40052ae	      0xe83dc1ffff	                  call sym.put_setstring	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x40052b3	            0x85c0	                           test eax, eax	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x40052b5	            0x74d1	                            je 0x4005288	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x40052b7	    0x488b05000000	            mov rax, qword [0x040052be] 	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052be	          0x4531c0	                            xor r8d, r8d	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052c1	      0xba00000000	                              mov edx, 0	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052c6	      0xbe00000000	                              mov esi, 0	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052cb	          0x4889df	                            mov rdi, rbx	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052ce	    0x488d88280200	                  lea rcx, [rax + 0x228]	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052d5	      0xe816c1ffff	                  call sym.put_setstring	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052da	            0x85c0	                           test eax, eax	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052dc	            0x74aa	                            je 0x4005288	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40052de	    0x488b05000000	            mov rax, qword [0x040052e5] 	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x40052e5	          0x4531c0	                            xor r8d, r8d	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x40052e8	      0xba00000000	                              mov edx, 0	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x40052ed	      0xbe00000000	                              mov esi, 0	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x40052f2	          0x4889df	                            mov rdi, rbx	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x40052f5	    0x488d88e00100	                  lea rcx, [rax + 0x1e0]	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x40052fc	      0xe8efc0ffff	                  call sym.put_setstring	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4005301	            0x85c0	                           test eax, eax	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4005303	            0x7483	                            je 0x4005288	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4005305	    0x488b05000000	            mov rax, qword [0x0400530c] 	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400530c	      0xba00000000	                              mov edx, 0	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4005311	      0xbe00000000	                              mov esi, 0	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4005316	          0x4889df	                            mov rdi, rbx	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4005319	    0x488d88e80100	                  lea rcx, [rax + 0x1e8]	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4005320	      0xe8ebdcffff	                     call sym.put_setnum	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4005325	            0x85c0	                           test eax, eax	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4005327	     0xf845bffffff	                            je 0x4005288	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400532d	    0x488b05000000	            mov rax, qword [0x04005334] 	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4005334	      0xba00000000	                              mov edx, 0	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4005339	      0xbe00000000	                              mov esi, 0	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400533e	          0x4889df	                            mov rdi, rbx	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4005341	    0x488d88080200	                  lea rcx, [rax + 0x208]	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4005348	      0xe8c3dcffff	                     call sym.put_setnum	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400534d	            0x85c0	                           test eax, eax	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400534f	     0xf8433ffffff	                            je 0x4005288	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4005355	    0x488b05000000	            mov rax, qword [0x0400535c] 	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400535c	      0xba00000000	                              mov edx, 0	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4005361	      0xbe00000000	                              mov esi, 0	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4005366	          0x4889df	                            mov rdi, rbx	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4005369	    0x488d88100200	                  lea rcx, [rax + 0x210]	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4005370	      0xe89bdcffff	                     call sym.put_setnum	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4005375	            0x85c0	                           test eax, eax	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x4005377	     0xf840bffffff	                            je 0x4005288	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x400537d	    0x488b05000000	            mov rax, qword [0x04005384] 	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4005384	          0x4889df	                            mov rdi, rbx	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4005387	      0xba00000000	                              mov edx, 0	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400538c	      0xbe00000000	                              mov esi, 0	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4005391	    0x8b88d4010000	           mov ecx, dword [rax + 0x1d4] 	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x4005397	      0xe814dcffff	                    call sym.put_setbool	     10178	option.c	FUNCTION_65	IF_1	CALL_8
0x400539c	            0x85c0	                           test eax, eax	     10180	option.c	FUNCTION_65	IF_1
0x400539e	           0xf95c0	                                setne al	     10180	option.c	FUNCTION_65	IF_1
0x40053a1	           0xfb6c0	                           movzx eax, al	     10180	option.c	FUNCTION_65	IF_1
0x40053a4	              0x5b	                                 pop rbx	     10183	option.c	FUNCTION_65
0x40053a5	              0xc3	                                     ret	     10183	option.c	FUNCTION_65
check_ff_value	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:IF,0:functions,0:DO,0	4
0x400ef40	            0x31c9	                            xor ecx, ecx	     12339	option.c	FUNCTION_106	CALL_1
0x400ef42	            0x31d2	                            xor edx, edx	     12339	option.c	FUNCTION_106	CALL_1
0x400ef44	      0xbe00000000	                              mov esi, 0	     12339	option.c	FUNCTION_106	CALL_1
0x400ef49	      0xe9d218ffff	               jmp sym.opt_strings_flags	     12339	option.c	FUNCTION_106	CALL_1
check_redraw	WHILE,0:FOR,0:ELSE,1:SWITCH,0:CALL,6:IF,6:functions,0:DO,0	58
0x4001320	            0x4155	                                push r13	      9306	option.c	FUNCTION_51
0x4001322	          0x4889fa	                            mov rdx, rdi	      9309	option.c	FUNCTION_51
0x4001325	            0x4154	                                push r12	      9306	option.c	FUNCTION_51
0x4001327	              0x55	                                push rbp	      9306	option.c	FUNCTION_51
0x4001328	              0x53	                                push rbx	      9306	option.c	FUNCTION_51
0x4001329	          0x4989fc	                            mov r12, rdi	      9308	option.c	FUNCTION_51
0x400132c	    0x81e200600000	                         and edx, 0x6000	      9309	option.c	FUNCTION_51
0x4001332	    0x4181e4007000	                        and r12d, 0x7000	      9308	option.c	FUNCTION_51
0x4001339	          0x4889fd	                            mov rbp, rdi	      9306	option.c	FUNCTION_51
0x400133c	        0x4883ec08	                              sub rsp, 8	      9306	option.c	FUNCTION_51
0x4001340	    0x4881fa006000	                         cmp rdx, 0x6000	      9306	option.c	FUNCTION_51
0x4001347	           0xf94c3	                                 sete bl	      9306	option.c	FUNCTION_51
0x400134a	    0x4981fc007000	                         cmp r12, 0x7000	      9306	option.c	FUNCTION_51
0x4001351	           0xf94c0	                                 sete al	      9306	option.c	FUNCTION_51
0x4001354	             0x8c3	                               or bl, al	      9309	option.c	FUNCTION_51
0x4001356	            0x7548	                           jne 0x40013a0	      9309	option.c	FUNCTION_51
0x4001358	          0x4885d2	                           test rdx, rdx	      9309	option.c	FUNCTION_51
0x400135b	           0xf95c3	                                setne bl	      9309	option.c	FUNCTION_51
0x400135e	          0x4531ed	                          xor r13d, r13d	      9309	option.c	FUNCTION_51
0x4001361	    0xf7c700100000	                        test edi, 0x1000	      9311	option.c	FUNCTION_51	IF_1
0x4001367	            0x753d	                           jne 0x40013a6	      9311	option.c	FUNCTION_51	IF_1
0x4001369	            0x84db	                             test bl, bl	      9314	option.c	FUNCTION_51	IF_2
0x400136b	            0x7405	                            je 0x4001372	      9314	option.c	FUNCTION_51	IF_2
0x400136d	      0xe800000000	                          call 0x4001372	      9315	option.c	FUNCTION_51	CALL_2
0x4001372	    0xf7c500400000	                        test ebp, 0x4000	      9316	option.c	FUNCTION_51	IF_3
0x4001378	            0x755e	                           jne 0x40013d8	      9316	option.c	FUNCTION_51	IF_3
0x400137a	    0xf7c500000010	                    test ebp, 0x10000000	      9318	option.c	FUNCTION_51	IF_4
0x4001380	            0x7546	                           jne 0x40013c8	      9318	option.c	FUNCTION_51	IF_4
0x4001382	    0x4981fc007000	                         cmp r12, 0x7000	      9320	option.c	FUNCTION_51	IF_5
0x4001389	      0xbf32000000	                           mov edi, 0x32	      9321	option.c	FUNCTION_51	CALL_5
0x400138e	            0x7425	                            je 0x40013b5	      9320	option.c	FUNCTION_51	IF_5
0x4001390	          0x4585ed	                         test r13d, r13d	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x4001393	            0x751b	                           jne 0x40013b0	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x4001395	        0x4883c408	                              add rsp, 8	      9324	option.c	FUNCTION_51
0x4001399	              0x5b	                                 pop rbx	      9324	option.c	FUNCTION_51
0x400139a	              0x5d	                                 pop rbp	      9324	option.c	FUNCTION_51
0x400139b	            0x415c	                                 pop r12	      9324	option.c	FUNCTION_51
0x400139d	            0x415d	                                 pop r13	      9324	option.c	FUNCTION_51
0x400139f	              0xc3	                                     ret	      9324	option.c	FUNCTION_51
0x40013a0	    0x41bd01000000	                             mov r13d, 1	      9324	option.c	FUNCTION_51
0x40013a6	      0xe800000000	                          call 0x40013ab	      9312	option.c	FUNCTION_51	CALL_1
0x40013ab	            0xebbc	                           jmp 0x4001369	      9312	option.c	FUNCTION_51	CALL_1
0x40013ad	           0xf1f00	                         nop dword [rax]	      9312	option.c	FUNCTION_51	CALL_1
0x40013b0	      0xbf28000000	                           mov edi, 0x28	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x40013b5	        0x4883c408	                              add rsp, 8	      9324	option.c	FUNCTION_51
0x40013b9	              0x5b	                                 pop rbx	      9324	option.c	FUNCTION_51
0x40013ba	              0x5d	                                 pop rbp	      9324	option.c	FUNCTION_51
0x40013bb	            0x415c	                                 pop r12	      9324	option.c	FUNCTION_51
0x40013bd	            0x415d	                                 pop r13	      9324	option.c	FUNCTION_51
0x40013bf	      0xe900000000	                           jmp 0x40013c4	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x40013c4	         0xf1f4000	                         nop dword [rax]	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x40013c8	      0xbf28000000	                           mov edi, 0x28	      9319	option.c	FUNCTION_51	CALL_4
0x40013cd	      0xe800000000	                          call 0x40013d2	      9319	option.c	FUNCTION_51	CALL_4
0x40013d2	            0xebae	                           jmp 0x4001382	      9319	option.c	FUNCTION_51	CALL_4
0x40013d4	         0xf1f4000	                         nop dword [rax]	      9319	option.c	FUNCTION_51	CALL_4
0x40013d8	      0xbf28000000	                           mov edi, 0x28	      9317	option.c	FUNCTION_51	CALL_3
0x40013dd	      0xe800000000	                          call 0x40013e2	      9317	option.c	FUNCTION_51	CALL_3
0x40013e2	            0xeb96	                           jmp 0x400137a	      9317	option.c	FUNCTION_51	CALL_3
get_encoding_default	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,1:IF,1:functions,0:DO,0	13
0x4004f50	        0x4883ec08	                              sub rsp, 8	      9817	option.c	FUNCTION_59
0x4004f54	      0xbf00000000	                              mov edi, 0	      9820	option.c	FUNCTION_59	CALL_1
0x4004f59	      0xe852b5ffff	                     call sym.findoption	      9820	option.c	FUNCTION_59	CALL_1
0x4004f5e	            0x85c0	                           test eax, eax	      9821	option.c	FUNCTION_59	IF_1
0x4004f60	            0x7816	                            js 0x4004f78	      9821	option.c	FUNCTION_59	IF_1
0x4004f62	            0x4898	                                    cdqe	      9822	option.c	FUNCTION_59	IF_1
0x4004f64	        0x48c1e006	                              shl rax, 6	      9822	option.c	FUNCTION_59	IF_1
0x4004f68	    0x488b80000000	                    mov rax, qword [rax]	      9822	option.c	FUNCTION_59	IF_1
0x4004f6f	        0x4883c408	                              add rsp, 8	      9824	option.c	FUNCTION_59
0x4004f73	              0xc3	                                     ret	      9824	option.c	FUNCTION_59
0x4004f74	         0xf1f4000	                         nop dword [rax]	      9824	option.c	FUNCTION_59
0x4004f78	            0x31c0	                            xor eax, eax	      9823	option.c	FUNCTION_59
0x4004f7a	            0xebf3	                           jmp 0x4004f6f	      9823	option.c	FUNCTION_59
set_init_2	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,11:IF,3:functions,0:DO,0	70
0x4005690	              0x55	                                push rbp	      3949	option.c	FUNCTION_8
0x4005691	              0x53	                                push rbx	      3949	option.c	FUNCTION_8
0x4005692	      0xbf00000000	                              mov edi, 0	      3956	option.c	FUNCTION_8	CALL_1
0x4005697	        0x4883ec08	                              sub rsp, 8	      3949	option.c	FUNCTION_8
0x400569b	      0xe810aeffff	                     call sym.findoption	      3956	option.c	FUNCTION_8	CALL_1
0x40056a0	            0x85c0	                           test eax, eax	      3957	option.c	FUNCTION_8	IF_1
0x40056a2	            0x7814	                            js 0x40056b8	      3957	option.c	FUNCTION_8	IF_1
0x40056a4	          0x4863d0	                         movsxd rdx, eax	      3957	option.c	FUNCTION_8	IF_1
0x40056a7	        0x48c1e206	                              shl rdx, 6	      3957	option.c	FUNCTION_8	IF_1
0x40056ab	    0xf68200000000	                      test byte [rdx], 1	      3957	option.c	FUNCTION_8	IF_1
0x40056b2	     0xf84d8000000	                            je 0x4005790	      3957	option.c	FUNCTION_8	IF_1
0x40056b8	      0xe800000000	                          call 0x40056bd	      3959	option.c	FUNCTION_8	CALL_3
0x40056bd	      0xbf00000000	                              mov edi, 0	     12256	option.c	FUNCTION_102	CALL_1
0x40056c2	      0xe8e9adffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x40056c7	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x40056c9	            0x780f	                            js 0x40056da	     12257	option.c	FUNCTION_102	IF_1
0x40056cb	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x40056cd	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x40056d1	    0xf68000000000	                      test byte [rax], 1	     12259	option.c	FUNCTION_102	IF_2
0x40056d8	            0x7576	                           jne 0x4005750	     12259	option.c	FUNCTION_102	IF_2
0x40056da	    0x488b05000000	            mov rax, qword [0x040056e1] 	      3966	option.c	FUNCTION_8	IF_2
0x40056e1	        0x488d58ff	                      lea rbx, [rax - 1]	      3966	option.c	FUNCTION_8	IF_2
0x40056e5	    0x48891d000000	            mov qword [0x040056ec], rbx 	      3966	option.c	FUNCTION_8	IF_2
0x40056ec	      0xbf00000000	                              mov edi, 0	      3910	option.c	FUNCTION_6	CALL_1
0x40056f1	      0xe8baadffff	                     call sym.findoption	      3910	option.c	FUNCTION_6	CALL_1
0x40056f6	            0x85c0	                           test eax, eax	      3911	option.c	FUNCTION_6	IF_1
0x40056f8	            0x780d	                            js 0x4005707	      3911	option.c	FUNCTION_6	IF_1
0x40056fa	            0x4898	                                    cdqe	      3912	option.c	FUNCTION_6	IF_1
0x40056fc	        0x48c1e006	                              shl rax, 6	      3912	option.c	FUNCTION_6	IF_1
0x4005700	    0x488998000000	                    mov qword [rax], rbx	      3912	option.c	FUNCTION_6	IF_1
0x4005707	      0xbf00000000	                              mov edi, 0	      3976	option.c	FUNCTION_8	CALL_6
0x400570c	      0xe89fadffff	                     call sym.findoption	      3976	option.c	FUNCTION_8	CALL_6
0x4005711	            0x85c0	                           test eax, eax	      3977	option.c	FUNCTION_8	IF_3
0x4005713	            0x89c5	                            mov ebp, eax	      3976	option.c	FUNCTION_8	CALL_6
0x4005715	            0x7814	                            js 0x400572b	      3977	option.c	FUNCTION_8	IF_3
0x4005717	          0x4863d8	                         movsxd rbx, eax	      3977	option.c	FUNCTION_8	IF_3
0x400571a	        0x48c1e306	                              shl rbx, 6	      3977	option.c	FUNCTION_8	IF_3
0x400571e	    0x4881c3000000	                              add rbx, 0	      3977	option.c	FUNCTION_8	IF_3
0x4005725	        0xf6431101	               test byte [rbx + 0x11], 1	      3977	option.c	FUNCTION_8	IF_3
0x4005729	            0x7435	                            je 0x4005760	      3977	option.c	FUNCTION_8	IF_3
0x400572b	      0xbf02000000	                              mov edi, 2	      3988	option.c	FUNCTION_8	CALL_9
0x4005730	      0xe800000000	                          call 0x4005735	      3988	option.c	FUNCTION_8	CALL_9
0x4005735	      0xbf01000000	                              mov edi, 1	      3991	option.c	FUNCTION_8	CALL_10
0x400573a	      0xe800000000	                          call 0x400573f	      3991	option.c	FUNCTION_8	CALL_10
0x400573f	        0x4883c408	                              add rsp, 8	      3996	option.c	FUNCTION_8
0x4005743	              0x5b	                                 pop rbx	      3996	option.c	FUNCTION_8
0x4005744	              0x5d	                                 pop rbp	      3996	option.c	FUNCTION_8
0x4005745	      0xe900000000	                           jmp 0x400574a	      3994	option.c	FUNCTION_8	CALL_11
0x400574a	    0x660f1f440000	                    nop word [rax + rax]	      3994	option.c	FUNCTION_8	CALL_11
0x4005750	    0x488b05000000	            mov rax, qword [0x04005757] 	      3994	option.c	FUNCTION_8	CALL_11
0x4005757	        0x488d58ff	                      lea rbx, [rax - 1]	      3994	option.c	FUNCTION_8	CALL_11
0x400575b	            0xeb8f	                           jmp 0x40056ec	      3994	option.c	FUNCTION_8	CALL_11
0x400575d	           0xf1f00	                         nop dword [rax]	      3994	option.c	FUNCTION_8	CALL_11
0x4005760	      0xe84bd0ffff	                call sym.term_bg_default	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4005765	          0x803864	                    cmp byte [rax], 0x64	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4005768	            0x75c1	                           jne 0x400572b	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x400576a	          0x4531c0	                            xor r8d, r8d	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x400576d	      0xb901000000	                              mov ecx, 1	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4005772	      0xba00000000	                              mov edx, 0	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4005777	            0x89ee	                            mov esi, ebp	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4005779	            0x31ff	                            xor edi, edi	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x400577b	      0xe800000000	                          call 0x4005780	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4005780	    0x48816310fffe	and qword [rbx + 0x10], 0xfffffffffffffeff	      3983	option.c	FUNCTION_8	IF_3
0x4005788	            0xeba1	                           jmp 0x400572b	      3983	option.c	FUNCTION_8	IF_3
0x400578a	    0x660f1f440000	                    nop word [rax + rax]	      3983	option.c	FUNCTION_8	IF_3
0x4005790	    0x8b1500000000	            mov edx, dword [0x04005796] 	      3958	option.c	FUNCTION_8	CALL_2
0x4005796	      0xbe04000000	                              mov esi, 4	      3958	option.c	FUNCTION_8	CALL_2
0x400579b	            0x89c7	                            mov edi, eax	      3958	option.c	FUNCTION_8	CALL_2
0x400579d	      0xe86eeeffff	             call sym.set_option_default	      3958	option.c	FUNCTION_8	CALL_2
0x40057a2	      0xe911ffffff	                           jmp 0x40056b8	      3958	option.c	FUNCTION_8	CALL_2
clear_winopt	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,14:IF,0:functions,0:DO,0	89
0x4009f40	              0x53	                                push rbx	     11000	option.c	FUNCTION_83
0x4009f41	    0x488b05000000	            mov rax, qword [0x04009f48] 	      5763	option.c	FUNCTION_31	IF_1
0x4009f48	          0x4889fb	                            mov rbx, rdi	     11000	option.c	FUNCTION_83
0x4009f4b	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	      5763	option.c	FUNCTION_31	IF_1
0x4009f4f	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009f52	            0x740c	                            je 0x4009f60	      5763	option.c	FUNCTION_31	IF_1
0x4009f54	      0xe800000000	                          call 0x4009f59	      5764	option.c	FUNCTION_31	CALL_1
0x4009f59	    0x488b05000000	            mov rax, qword [0x04009f60] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009f60	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      5763	option.c	FUNCTION_31	IF_1
0x4009f64	        0x48894330	             mov qword [rbx + 0x30], rax	      5765	option.c	FUNCTION_31
0x4009f68	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009f6b	            0x740c	                            je 0x4009f79	      5763	option.c	FUNCTION_31	IF_1
0x4009f6d	      0xe800000000	                          call 0x4009f72	      5764	option.c	FUNCTION_31	CALL_1
0x4009f72	    0x488b05000000	            mov rax, qword [0x04009f79] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009f79	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      5763	option.c	FUNCTION_31	IF_1
0x4009f7d	        0x48894348	             mov qword [rbx + 0x48], rax	      5765	option.c	FUNCTION_31
0x4009f81	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009f84	            0x740c	                            je 0x4009f92	      5763	option.c	FUNCTION_31	IF_1
0x4009f86	      0xe800000000	                          call 0x4009f8b	      5764	option.c	FUNCTION_31	CALL_1
0x4009f8b	    0x488b05000000	            mov rax, qword [0x04009f92] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009f92	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	      5763	option.c	FUNCTION_31	IF_1
0x4009f96	        0x48894350	             mov qword [rbx + 0x50], rax	      5765	option.c	FUNCTION_31
0x4009f9a	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009f9d	            0x740c	                            je 0x4009fab	      5763	option.c	FUNCTION_31	IF_1
0x4009f9f	      0xe800000000	                          call 0x4009fa4	      5764	option.c	FUNCTION_31	CALL_1
0x4009fa4	    0x488b05000000	            mov rax, qword [0x04009fab] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009fab	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      5763	option.c	FUNCTION_31	IF_1
0x4009faf	        0x48894368	             mov qword [rbx + 0x68], rax	      5765	option.c	FUNCTION_31
0x4009fb3	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009fb6	            0x740c	                            je 0x4009fc4	      5763	option.c	FUNCTION_31	IF_1
0x4009fb8	      0xe800000000	                          call 0x4009fbd	      5764	option.c	FUNCTION_31	CALL_1
0x4009fbd	    0x488b05000000	            mov rax, qword [0x04009fc4] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009fc4	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	      5763	option.c	FUNCTION_31	IF_1
0x4009fc8	        0x48894370	             mov qword [rbx + 0x70], rax	      5765	option.c	FUNCTION_31
0x4009fcc	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009fcf	            0x740c	                            je 0x4009fdd	      5763	option.c	FUNCTION_31	IF_1
0x4009fd1	      0xe800000000	                          call 0x4009fd6	      5764	option.c	FUNCTION_31	CALL_1
0x4009fd6	    0x488b05000000	            mov rax, qword [0x04009fdd] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009fdd	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	      5763	option.c	FUNCTION_31	IF_1
0x4009fe4	        0x48894378	             mov qword [rbx + 0x78], rax	      5765	option.c	FUNCTION_31
0x4009fe8	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x4009feb	            0x740c	                            je 0x4009ff9	      5763	option.c	FUNCTION_31	IF_1
0x4009fed	      0xe800000000	                          call 0x4009ff2	      5764	option.c	FUNCTION_31	CALL_1
0x4009ff2	    0x488b05000000	            mov rax, qword [0x04009ff9] 	      5764	option.c	FUNCTION_31	CALL_1
0x4009ff9	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5763	option.c	FUNCTION_31	IF_1
0x4009ffd	    0x488983080100	            mov qword [rbx + 0x108], rax	      5765	option.c	FUNCTION_31
0x400a004	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400a007	            0x740c	                            je 0x400a015	      5763	option.c	FUNCTION_31	IF_1
0x400a009	      0xe800000000	                          call 0x400a00e	      5764	option.c	FUNCTION_31	CALL_1
0x400a00e	    0x488b05000000	            mov rax, qword [0x0400a015] 	      5764	option.c	FUNCTION_31	CALL_1
0x400a015	    0x488bbba80000	            mov rdi, qword [rbx + 0xa8] 	      5763	option.c	FUNCTION_31	IF_1
0x400a01c	        0x48894308	                mov qword [rbx + 8], rax	      5765	option.c	FUNCTION_31
0x400a020	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400a023	            0x740c	                            je 0x400a031	      5763	option.c	FUNCTION_31	IF_1
0x400a025	      0xe800000000	                          call 0x400a02a	      5764	option.c	FUNCTION_31	CALL_1
0x400a02a	    0x488b05000000	            mov rax, qword [0x0400a031] 	      5764	option.c	FUNCTION_31	CALL_1
0x400a031	    0x488bbbd00000	            mov rdi, qword [rbx + 0xd0] 	      5763	option.c	FUNCTION_31	IF_1
0x400a038	    0x488983a80000	             mov qword [rbx + 0xa8], rax	      5765	option.c	FUNCTION_31
0x400a03f	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400a042	            0x740c	                            je 0x400a050	      5763	option.c	FUNCTION_31	IF_1
0x400a044	      0xe800000000	                          call 0x400a049	      5764	option.c	FUNCTION_31	CALL_1
0x400a049	    0x488b05000000	            mov rax, qword [0x0400a050] 	      5764	option.c	FUNCTION_31	CALL_1
0x400a050	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	      5763	option.c	FUNCTION_31	IF_1
0x400a057	    0x488983d00000	             mov qword [rbx + 0xd0], rax	      5765	option.c	FUNCTION_31
0x400a05e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400a061	            0x740c	                            je 0x400a06f	      5763	option.c	FUNCTION_31	IF_1
0x400a063	      0xe800000000	                          call 0x400a068	      5764	option.c	FUNCTION_31	CALL_1
0x400a068	    0x488b05000000	            mov rax, qword [0x0400a06f] 	      5764	option.c	FUNCTION_31	CALL_1
0x400a06f	    0x488bbbf00000	            mov rdi, qword [rbx + 0xf0] 	      5763	option.c	FUNCTION_31	IF_1
0x400a076	    0x488983c80000	             mov qword [rbx + 0xc8], rax	      5765	option.c	FUNCTION_31
0x400a07d	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400a080	            0x740c	                            je 0x400a08e	      5763	option.c	FUNCTION_31	IF_1
0x400a082	      0xe800000000	                          call 0x400a087	      5764	option.c	FUNCTION_31	CALL_1
0x400a087	    0x488b05000000	            mov rax, qword [0x0400a08e] 	      5764	option.c	FUNCTION_31	CALL_1
0x400a08e	    0x488bbb100100	           mov rdi, qword [rbx + 0x110] 	      5763	option.c	FUNCTION_31	IF_1
0x400a095	    0x488983f00000	             mov qword [rbx + 0xf0], rax	      5765	option.c	FUNCTION_31
0x400a09c	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400a09f	            0x740c	                            je 0x400a0ad	      5763	option.c	FUNCTION_31	IF_1
0x400a0a1	      0xe800000000	                          call 0x400a0a6	      5764	option.c	FUNCTION_31	CALL_1
0x400a0a6	    0x488b05000000	            mov rax, qword [0x0400a0ad] 	      5764	option.c	FUNCTION_31	CALL_1
0x400a0ad	    0x488bbb180100	           mov rdi, qword [rbx + 0x118] 	      5763	option.c	FUNCTION_31	IF_1
0x400a0b4	    0x488983100100	            mov qword [rbx + 0x110], rax	      5765	option.c	FUNCTION_31
0x400a0bb	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400a0be	            0x740c	                            je 0x400a0cc	      5763	option.c	FUNCTION_31	IF_1
0x400a0c0	      0xe800000000	                          call 0x400a0c5	      5764	option.c	FUNCTION_31	CALL_1
0x400a0c5	    0x488b05000000	            mov rax, qword [0x0400a0cc] 	      5764	option.c	FUNCTION_31	CALL_1
0x400a0cc	    0x488983180100	            mov qword [rbx + 0x118], rax	      5765	option.c	FUNCTION_31
0x400a0d3	              0x5b	                                 pop rbx	     11033	option.c	FUNCTION_83
0x400a0d4	              0xc3	                                     ret	     11033	option.c	FUNCTION_83
set_chars_option	WHILE,1:FOR,3:ELSE,3:SWITCH,0:CALL,6:IF,15:functions,0:DO,0	148
0x4000d50	            0x4157	                                push r15	      7751	option.c	FUNCTION_43
0x4000d52	            0x4156	                                push r14	      7751	option.c	FUNCTION_43
0x4000d54	      0xb800000000	                              mov eax, 0	      7787	option.c	FUNCTION_43	IF_1
0x4000d59	            0x4155	                                push r13	      7751	option.c	FUNCTION_43
0x4000d5b	            0x4154	                                push r12	      7751	option.c	FUNCTION_43
0x4000d5d	    0x41bd00000000	                             mov r13d, 0	      7787	option.c	FUNCTION_43	IF_1
0x4000d63	              0x55	                                push rbp	      7751	option.c	FUNCTION_43
0x4000d64	              0x53	                                push rbx	      7751	option.c	FUNCTION_43
0x4000d65	    0x41bf00000000	                             mov r15d, 0	      7751	option.c	FUNCTION_43
0x4000d6b	        0x4883ec48	                           sub rsp, 0x48	      7751	option.c	FUNCTION_43
0x4000d6f	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      7751	option.c	FUNCTION_43
0x4000d78	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      7751	option.c	FUNCTION_43
0x4000d7d	            0x31c9	                            xor ecx, ecx	      7751	option.c	FUNCTION_43
0x4000d7f	    0x4881ff000000	                              cmp rdi, 0	      7787	option.c	FUNCTION_43	IF_1
0x4000d86	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      7751	option.c	FUNCTION_43
0x4000d8b	    0xc74424280000	               mov dword [rsp + 0x28], 0	      7797	option.c	FUNCTION_43	FOR_1
0x4000d93	        0x400f94c5	                                sete bpl	      7787	option.c	FUNCTION_43	IF_1
0x4000d97	        0x490f45c5	                         cmovne rax, r13	      7787	option.c	FUNCTION_43	IF_1
0x4000d9b	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      7754	option.c	FUNCTION_43
0x4000da3	        0x400fb6ed	                          movzx ebp, bpl	      7787	option.c	FUNCTION_43	IF_1
0x4000da7	          0x4889c6	                            mov rsi, rax	      7787	option.c	FUNCTION_43	IF_1
0x4000daa	      0x4889442408	                mov qword [rsp + 8], rax	      7787	option.c	FUNCTION_43	IF_1
0x4000daf	        0x8d6c6d05	              lea ebp, [rbp + rbp*2 + 5]	      7787	option.c	FUNCTION_43	IF_1
0x4000db3	      0xb820000000	                           mov eax, 0x20	      7787	option.c	FUNCTION_43	IF_1
0x4000db8	        0x410f44c7	                         cmove eax, r15d	      7787	option.c	FUNCTION_43	IF_1
0x4000dbc	        0x448d75ff	                     lea r14d, [rbp - 1]	      7787	option.c	FUNCTION_43	IF_1
0x4000dc0	        0x8944241c	             mov dword [rsp + 0x1c], eax	      7787	option.c	FUNCTION_43	IF_1
0x4000dc4	        0x4983c601	                              add r14, 1	      7787	option.c	FUNCTION_43	IF_1
0x4000dc8	        0x49c1e604	                              shl r14, 4	      7787	option.c	FUNCTION_43	IF_1
0x4000dcc	          0x4901f6	                            add r14, rsi	      7787	option.c	FUNCTION_43	IF_1
0x4000dcf	      0x4c89742410	             mov qword [rsp + 0x10], r14	      7787	option.c	FUNCTION_43	IF_1
0x4000dd4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      7811	option.c	FUNCTION_43	FOR_1	ELSE_2
0x4000dd9	          0x488b18	                    mov rbx, qword [rax]	      7811	option.c	FUNCTION_43	FOR_1	ELSE_2
0x4000ddc	           0xfb603	                   movzx eax, byte [rbx]	      7811	option.c	FUNCTION_43	FOR_1	ELSE_2
0x4000ddf	            0x84c0	                             test al, al	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000de1	     0xf84d2000000	                            je 0x4000eb9	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000de7	    0x660f1f840000	                    nop word [rax + rax]	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000df0	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000df5	          0x4531f6	                          xor r14d, r14d	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000df8	            0xeb17	                           jmp 0x4000e11	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000dfa	    0x660f1f440000	                    nop word [rax + rax]	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000e00	        0x4183c601	                             add r14d, 1	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4000e04	        0x4983c710	                           add r15, 0x10	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4000e08	          0x4439f5	                           cmp ebp, r14d	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4000e0b	     0xf84bf000000	                            je 0x4000ed0	      7814	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3
0x4000e11	        0x4d8b6f08	                mov r13, qword [r15 + 8]	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x4000e15	          0x4c89ef	                            mov rdi, r13	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x4000e18	      0xe800000000	                          call 0x4000e1d	      7816	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x4000e1d	          0x4c63e0	                         movsxd r12, eax	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4000e20	          0x4c89ee	                            mov rsi, r13	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4000e23	          0x4889df	                            mov rdi, rbx	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4000e26	          0x4c89e2	                            mov rdx, r12	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4000e29	      0xe800000000	                          call 0x4000e2e	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4000e2e	            0x85c0	                           test eax, eax	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4000e30	            0x75ce	                           jne 0x4000e00	      7817	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x4000e32	      0x42803c233a	              cmp byte [rbx + r12], 0x3a	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4000e37	            0x75c7	                           jne 0x4000e00	      7818	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4000e39	      0x4a8d442301	                lea rax, [rbx + r12 + 1]	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4000e3e	          0x803800	                       cmp byte [rax], 0	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4000e41	            0x74bd	                            je 0x4000e00	      7819	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4000e43	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4000e48	      0x4889442430	             mov qword [rsp + 0x30], rax	      7821	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x4000e4d	      0xe800000000	                          call 0x4000e52	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4000e52	          0x4189c4	                           mov r12d, eax	      7823	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x4000e55	            0x89c7	                            mov edi, eax	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4000e57	    0xff1500000000	                 call qword [0x04000e5d]	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4000e5d	          0x83f801	                              cmp eax, 1	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4000e60	            0x7f9e	                            jg 0x4000e00	      7824	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x4000e62	    0x49813f000000	                      cmp qword [r15], 0	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4000e69	     0xf8489000000	                            je 0x4000ef8	      7829	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x4000e6f	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4000e74	           0xfb602	                   movzx eax, byte [rdx]	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4000e77	            0x3c2c	                            cmp al, 0x2c	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4000e79	            0x7404	                            je 0x4000e7f	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4000e7b	            0x84c0	                             test al, al	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4000e7d	            0x7581	                           jne 0x4000e00	      7841	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x4000e7f	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      7843	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x4000e83	            0x85c0	                           test eax, eax	      7843	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x4000e85	            0x7417	                            je 0x4000e9e	      7843	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x4000e87	          0x498b07	                    mov rax, qword [r15]	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000e8a	    0x483d00000000	                              cmp rax, 0	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000e90	     0xf84a7000000	                            je 0x4000f3d	      7845	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000e96	          0x4885c0	                           test rax, rax	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4000e99	            0x7403	                            je 0x4000e9e	      7850	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4000e9b	          0x448920	                   mov dword [rax], r12d	      7851	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x4000e9e	          0x4439f5	                           cmp ebp, r14d	      7860	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4000ea1	            0x742d	                            je 0x4000ed0	      7860	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4000ea3	           0xfb602	                   movzx eax, byte [rdx]	      7862	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4000ea6	            0x3c2c	                            cmp al, 0x2c	      7862	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4000ea8	     0xf8482000000	                            je 0x4000f30	      7862	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4000eae	            0x84c0	                             test al, al	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000eb0	          0x4889d3	                            mov rbx, rdx	      7863	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4000eb3	     0xf8537ffffff	                           jne 0x4000df0	      7812	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1
0x4000eb9	      0x8344242801	               add dword [rsp + 0x28], 1	      7797	option.c	FUNCTION_43	FOR_1
0x4000ebe	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      7797	option.c	FUNCTION_43	FOR_1
0x4000ec2	          0x83f802	                              cmp eax, 2	      7797	option.c	FUNCTION_43	FOR_1
0x4000ec5	     0xf8588000000	                           jne 0x4000f53	      7797	option.c	FUNCTION_43	FOR_1
0x4000ecb	            0x31c0	                            xor eax, eax	      7867	option.c	FUNCTION_43
0x4000ecd	            0xeb06	                           jmp 0x4000ed5	      7867	option.c	FUNCTION_43
0x4000ecf	              0x90	                                     nop	      7867	option.c	FUNCTION_43
0x4000ed0	      0xb800000000	                              mov eax, 0	      7861	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_14
0x4000ed5	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      7868	option.c	FUNCTION_43
0x4000eda	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7868	option.c	FUNCTION_43
0x4000ee3	     0xf85b9000000	                           jne 0x4000fa2	      7868	option.c	FUNCTION_43
0x4000ee9	        0x4883c448	                           add rsp, 0x48	      7868	option.c	FUNCTION_43
0x4000eed	              0x5b	                                 pop rbx	      7868	option.c	FUNCTION_43
0x4000eee	              0x5d	                                 pop rbp	      7868	option.c	FUNCTION_43
0x4000eef	            0x415c	                                 pop r12	      7868	option.c	FUNCTION_43
0x4000ef1	            0x415d	                                 pop r13	      7868	option.c	FUNCTION_43
0x4000ef3	            0x415e	                                 pop r14	      7868	option.c	FUNCTION_43
0x4000ef5	            0x415f	                                 pop r15	      7868	option.c	FUNCTION_43
0x4000ef7	              0xc3	                                     ret	      7868	option.c	FUNCTION_43
0x4000ef8	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4000efd	          0x803800	                       cmp byte [rax], 0	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4000f00	     0xf84fafeffff	                            je 0x4000e00	      7831	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x4000f06	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4000f0b	      0xe800000000	                          call 0x4000f10	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4000f10	        0x8944242c	             mov dword [rsp + 0x2c], eax	      7834	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x4000f14	            0x89c7	                            mov edi, eax	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4000f16	    0xff1500000000	                 call qword [0x04000f1c]	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4000f1c	          0x83f801	                              cmp eax, 1	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4000f1f	     0xf8fdbfeffff	                            jg 0x4000e00	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4000f25	      0xe945ffffff	                           jmp 0x4000e6f	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4000f2a	    0x660f1f440000	                    nop word [rax + rax]	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4000f30	         0xfb64201	               movzx eax, byte [rdx + 1]	      7835	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x4000f34	        0x4883c201	                              add rdx, 1	      7863	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4000f38	      0xe971ffffff	                           jmp 0x4000eae	      7863	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	IF_15
0x4000f3d	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000f41	    0x448925000000	           mov dword [0x04000f48], r12d 	      7847	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000f48	    0x890500000000	            mov dword [0x04000f4e], eax 	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000f4e	      0xe94bffffff	                           jmp 0x4000e9e	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000f53	      0x488b442408	                mov rax, qword [rsp + 8]	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000f58	     0xf1f84000000	                   nop dword [rax + rax]	      7848	option.c	FUNCTION_43	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x4000f60	          0x488b10	                    mov rdx, qword [rax]	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4000f63	          0x4885d2	                           test rdx, rdx	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4000f66	            0x7406	                            je 0x4000f6e	      7804	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4000f68	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4000f6c	            0x890a	                    mov dword [rdx], ecx	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4000f6e	        0x4883c010	                           add rax, 0x10	      7805	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2	IF_3
0x4000f72	      0x4839442410	            cmp qword [rsp + 0x10], rax 	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4000f77	            0x75e7	                           jne 0x4000f60	      7803	option.c	FUNCTION_43	FOR_1	IF_2	FOR_2
0x4000f79	    0x48817c242000	               cmp qword [rsp + 0x20], 0	      7806	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x4000f82	            0x740f	                            je 0x4000f93	      7806	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x4000f84	    0xc70500000000	           mov dword [0x04000f8e], 0x2d 	      7809	option.c	FUNCTION_43	FOR_1	IF_2	ELSE_2
0x4000f8e	      0xe941feffff	                           jmp 0x4000dd4	      7809	option.c	FUNCTION_43	FOR_1	IF_2	ELSE_2
0x4000f93	    0xc70500000000	               mov dword [0x04000f9d], 0	      7807	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x4000f9d	      0xe932feffff	                           jmp 0x4000dd4	      7807	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x4000fa2	      0xe800000000	                          call 0x4000fa7	      7868	option.c	FUNCTION_43
change_compatible	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,2:IF,2:functions,0:DO,0	14
0x400b580	        0x4883ec08	                              sub rsp, 8	     12234	option.c	FUNCTION_101
0x400b584	    0x393d00000000	            cmp dword [0x0400b58a], edi 	     12237	option.c	FUNCTION_101	IF_1
0x400b58a	            0x740b	                            je 0x400b597	     12237	option.c	FUNCTION_101	IF_1
0x400b58c	    0x893d00000000	            mov dword [0x0400b592], edi 	     12239	option.c	FUNCTION_101	IF_1
0x400b592	      0xe81993ffff	                 call sym.compatible_set	     12240	option.c	FUNCTION_101	IF_1	CALL_1
0x400b597	      0xbf00000000	                              mov edi, 0	     12242	option.c	FUNCTION_101	CALL_2
0x400b59c	      0xe80f4fffff	                     call sym.findoption	     12242	option.c	FUNCTION_101	CALL_2
0x400b5a1	            0x85c0	                           test eax, eax	     12243	option.c	FUNCTION_101	IF_2
0x400b5a3	            0x7811	                            js 0x400b5b6	     12243	option.c	FUNCTION_101	IF_2
0x400b5a5	            0x4898	                                    cdqe	     12244	option.c	FUNCTION_101	IF_2
0x400b5a7	        0x48c1e006	                              shl rax, 6	     12244	option.c	FUNCTION_101	IF_2
0x400b5ab	    0x488188000000	                   or qword [rax], 0x100	     12244	option.c	FUNCTION_101	IF_2
0x400b5b6	        0x4883c408	                              add rsp, 8	     12245	option.c	FUNCTION_101
0x400b5ba	              0xc3	                                     ret	     12245	option.c	FUNCTION_101
check_colorcolumn	WHILE,0:FOR,2:ELSE,3:SWITCH,0:CALL,7:IF,12:functions,0:DO,0	122
0x4004920	            0x4154	                                push r12	      7680	option.c	FUNCTION_42
0x4004922	              0x55	                                push rbp	      7680	option.c	FUNCTION_42
0x4004923	              0x53	                                push rbx	      7680	option.c	FUNCTION_42
0x4004924	    0x4881ec200400	                          sub rsp, 0x420	      7680	option.c	FUNCTION_42
0x400492b	    0x64488b042528	                mov rax, qword fs:[0x28]	      7680	option.c	FUNCTION_42
0x4004934	    0x488984241804	            mov qword [rsp + 0x418], rax	      7680	option.c	FUNCTION_42
0x400493c	            0x31c0	                            xor eax, eax	      7680	option.c	FUNCTION_42
0x400493e	      0x48837f0800	                  cmp qword [rdi + 8], 0	      7688	option.c	FUNCTION_42	IF_1
0x4004943	     0xf840e010000	                            je 0x4004a57	      7688	option.c	FUNCTION_42	IF_1
0x4004949	    0x488b8f780200	           mov rcx, qword [rdi + 0x278] 	      7691	option.c	FUNCTION_42	FOR_1
0x4004950	            0x31ed	                            xor ebp, ebp	      7683	option.c	FUNCTION_42
0x4004952	          0x4889fb	                            mov rbx, rdi	      7683	option.c	FUNCTION_42
0x4004955	      0x48894c2408	                mov qword [rsp + 8], rcx	      7691	option.c	FUNCTION_42	FOR_1
0x400495a	           0xfb601	                   movzx eax, byte [rcx]	      7691	option.c	FUNCTION_42	FOR_1
0x400495d	            0x84c0	                             test al, al	      7691	option.c	FUNCTION_42	FOR_1
0x400495f	     0xf8587000000	                           jne 0x40049ec	      7691	option.c	FUNCTION_42	FOR_1
0x4004965	      0xe9f6000000	                           jmp 0x4004a60	      7691	option.c	FUNCTION_42	FOR_1
0x400496a	    0x660f1f440000	                    nop word [rax + rax]	      7691	option.c	FUNCTION_42	FOR_1
0x4004970	          0x4531e4	                          xor r12d, r12d	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x4004973	            0x3c2d	                            cmp al, 0x2d	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x4004975	        0x488d4101	                      lea rax, [rcx + 1]	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x4004979	        0x410f95c4	                              setne r12b	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x400497d	      0x4889442408	                mov qword [rsp + 8], rax	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x4004982	         0xfb64901	               movzx ecx, byte [rcx + 1]	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x4004986	      0x478d6424ff	               lea r12d, [r12 + r12 - 1]	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x400498b	          0x83e930	                           sub ecx, 0x30	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x400498e	          0x83f909	                              cmp ecx, 9	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x4004991	     0xf8789000000	                            ja 0x4004a20	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x4004997	      0x488d7c2408	                      lea rdi, [rsp + 8]	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x400499c	      0xe800000000	                          call 0x40049a1	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x40049a1	        0x488b5308	                mov rdx, qword [rbx + 8]	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x40049a5	    0x488b92b81500	          mov rdx, qword [rdx + 0x15b8] 	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x40049ac	          0x4885d2	                           test rdx, rdx	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x40049af	            0x7415	                            je 0x40049c6	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x40049b1	        0x410fafc4	                          imul eax, r12d	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x40049b5	             0x1d0	                            add eax, edx	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x40049b7	            0x780d	                            js 0x40049c6	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x40049b9	          0x4863d5	                         movsxd rdx, ebp	      7711	option.c	FUNCTION_42	FOR_1
0x40049bc	          0x83e801	                              sub eax, 1	      7711	option.c	FUNCTION_42	FOR_1
0x40049bf	          0x83c501	                              add ebp, 1	      7711	option.c	FUNCTION_42	FOR_1
0x40049c2	        0x89449410	     mov dword [rsp + rdx*4 + 0x10], eax	      7711	option.c	FUNCTION_42	FOR_1
0x40049c6	      0x488b442408	                mov rax, qword [rsp + 8]	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40049cb	           0xfb610	                   movzx edx, byte [rax]	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40049ce	            0x84d2	                             test dl, dl	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40049d0	     0xf848a000000	                            je 0x4004a60	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x40049d6	          0x80fa2c	                            cmp dl, 0x2c	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x40049d9	            0x7545	                           jne 0x4004a20	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x40049db	        0x488d4801	                      lea rcx, [rax + 1]	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40049df	      0x48894c2408	                mov qword [rsp + 8], rcx	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40049e4	         0xfb64001	               movzx eax, byte [rax + 1]	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40049e8	            0x84c0	                             test al, al	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40049ea	            0x7434	                            je 0x4004a20	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x40049ec	    0x81fdfe000000	                           cmp ebp, 0xfe	      7691	option.c	FUNCTION_42	FOR_1
0x40049f2	     0xf8ff0000000	                            jg 0x4004ae8	      7691	option.c	FUNCTION_42	FOR_1
0x40049f8	          0x8d50d5	                   lea edx, [rax - 0x2b]	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x40049fb	    0x81e2fd000000	                           and edx, 0xfd	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4004a01	     0xf8469ffffff	                            je 0x4004970	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4004a07	          0x83e830	                           sub eax, 0x30	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x4004a0a	          0x83f809	                              cmp eax, 9	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x4004a0d	            0x7711	                            ja 0x4004a20	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x4004a0f	      0x488d7c2408	                      lea rdi, [rsp + 8]	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4004a14	      0xe800000000	                          call 0x4004a19	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4004a19	            0xeb9e	                           jmp 0x40049b9	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4004a1b	       0xf1f440000	                   nop dword [rax + rax]	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4004a20	      0xb800000000	                              mov eax, 0	      7699	option.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4004a25	    0x488bb4241804	           mov rsi, qword [rsp + 0x418] 	      7742	option.c	FUNCTION_42
0x4004a2d	    0x644833342528	                xor rsi, qword fs:[0x28]	      7742	option.c	FUNCTION_42
0x4004a36	     0xf85d6000000	                           jne 0x4004b12	      7742	option.c	FUNCTION_42
0x4004a3c	    0x4881c4200400	                          add rsp, 0x420	      7742	option.c	FUNCTION_42
0x4004a43	              0x5b	                                 pop rbx	      7742	option.c	FUNCTION_42
0x4004a44	              0x5d	                                 pop rbp	      7742	option.c	FUNCTION_42
0x4004a45	            0x415c	                                 pop r12	      7742	option.c	FUNCTION_42
0x4004a47	              0xc3	                                     ret	      7742	option.c	FUNCTION_42
0x4004a48	     0xf1f84000000	                   nop dword [rax + rax]	      7742	option.c	FUNCTION_42
0x4004a50	    0xc70407ffffff	      mov dword [rdi + rax], 0xffffffff 	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x4004a57	            0x31c0	                            xor eax, eax	      7741	option.c	FUNCTION_42
0x4004a59	            0xebca	                           jmp 0x4004a25	      7741	option.c	FUNCTION_42
0x4004a5b	       0xf1f440000	                   nop dword [rax + rax]	      7741	option.c	FUNCTION_42
0x4004a60	    0x488bbb380500	           mov rdi, qword [rbx + 0x538] 	      7721	option.c	FUNCTION_42	CALL_5
0x4004a67	      0xe800000000	                          call 0x4004a6c	      7721	option.c	FUNCTION_42	CALL_5
0x4004a6c	            0x85ed	                           test ebp, ebp	      7722	option.c	FUNCTION_42	IF_10
0x4004a6e	     0xf848c000000	                            je 0x4004b00	      7722	option.c	FUNCTION_42	IF_10
0x4004a74	    0x8d3cad040000	                    lea edi, [rbp*4 + 4]	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4004a7b	      0xe800000000	                          call 0x4004a80	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4004a80	          0x4885c0	                           test rax, rax	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x4004a83	    0x488983380500	            mov qword [rbx + 0x538], rax	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x4004a8a	            0x74cb	                            je 0x4004a57	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x4004a8c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004a91	      0xb900000000	                              mov ecx, 0	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004a96	      0xba04000000	                              mov edx, 4	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004a9b	          0x4863f5	                         movsxd rsi, ebp	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004a9e	      0xe800000000	                          call 0x4004aa3	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004aa3	    0x488bbb380500	           mov rdi, qword [rbx + 0x538] 	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004aaa	            0x31c9	                            xor ecx, ecx	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x4004aac	            0x31d2	                            xor edx, edx	      7686	option.c	FUNCTION_42
0x4004aae	            0xeb1b	                           jmp 0x4004acb	      7686	option.c	FUNCTION_42
0x4004ab0	        0x8b748c10	    mov esi, dword [rsp + rcx*4 + 0x10] 	      7686	option.c	FUNCTION_42
0x4004ab4	            0x31c0	                            xor eax, eax	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ab6	          0x83c201	                              add edx, 1	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ab9	          0x893407	              mov dword [rdi + rax], esi	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004abc	          0x4863c2	                         movsxd rax, edx	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004abf	        0x48c1e002	                              shl rax, 2	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ac3	        0x4883c101	                              add rcx, 1	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ac7	            0x39cd	                            cmp ebp, ecx	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x4004ac9	            0x7e85	                           jle 0x4004a50	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x4004acb	            0x85d2	                           test edx, edx	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004acd	            0x74e1	                            je 0x4004ab0	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004acf	          0x4863c2	                         movsxd rax, edx	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ad2	        0x8b748c10	    mov esi, dword [rsp + rcx*4 + 0x10] 	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ad6	        0x48c1e002	                              shl rax, 2	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ada	        0x397407fc	         cmp dword [rdi + rax - 4], esi 	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ade	            0x75d6	                           jne 0x4004ab6	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ae0	            0xebe1	                           jmp 0x4004ac3	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ae2	    0x660f1f440000	                    nop word [rax + rax]	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4004ae8	    0x488bbb380500	           mov rdi, qword [rbx + 0x538] 	      7721	option.c	FUNCTION_42	CALL_5
0x4004aef	      0xe800000000	                          call 0x4004af4	      7721	option.c	FUNCTION_42	CALL_5
0x4004af4	      0xe97bffffff	                           jmp 0x4004a74	      7721	option.c	FUNCTION_42	CALL_5
0x4004af9	     0xf1f80000000	                         nop dword [rax]	      7721	option.c	FUNCTION_42	CALL_5
0x4004b00	    0x48c783380500	              mov qword [rbx + 0x538], 0	      7723	option.c	FUNCTION_42	IF_10
0x4004b0b	            0x31c0	                            xor eax, eax	      7741	option.c	FUNCTION_42
0x4004b0d	      0xe913ffffff	                           jmp 0x4004a25	      7741	option.c	FUNCTION_42
0x4004b12	      0xe800000000	                          call 0x4004b17	      7742	option.c	FUNCTION_42
langmap_adjust_mb	WHILE,1:FOR,0:ELSE,1:SWITCH,0:CALL,0:IF,2:functions,0:DO,0	42
0x400b340	    0x488b05000000	            mov rax, qword [0x0400b347] 	     11895	option.c	FUNCTION_94
0x400b347	    0x448b15000000	           mov r10d, dword [0x0400b34e] 	     11897	option.c	FUNCTION_94
0x400b34e	            0x31f6	                            xor esi, esi	     11896	option.c	FUNCTION_94
0x400b350	          0x4439d6	                           cmp esi, r10d	     11899	option.c	FUNCTION_94	WHILE_1
0x400b353	            0x7449	                            je 0x400b39e	     11899	option.c	FUNCTION_94	WHILE_1
0x400b355	        0x428d1416	                    lea edx, [rsi + r10]	     11901	option.c	FUNCTION_94	WHILE_1
0x400b359	            0x89d1	                            mov ecx, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400b35b	          0xc1e91f	                           shr ecx, 0x1f	     11901	option.c	FUNCTION_94	WHILE_1
0x400b35e	             0x1d1	                            add ecx, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400b360	            0xd1f9	                              sar ecx, 1	     11901	option.c	FUNCTION_94	WHILE_1
0x400b362	          0x4863d1	                         movsxd rdx, ecx	     11902	option.c	FUNCTION_94	WHILE_1
0x400b365	        0x4c8d04d0	                   lea r8, [rax + rdx*8]	     11902	option.c	FUNCTION_94	WHILE_1
0x400b369	          0x413938	                     cmp dword [r8], edi	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x400b36c	            0x743a	                            je 0x400b3a8	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x400b36e	            0x792a	                           jns 0x400b39a	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400b370	            0xeb3b	                           jmp 0x400b3ad	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400b372	    0x660f1f440000	                    nop word [rax + rax]	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400b378	          0x8d140e	                    lea edx, [rsi + rcx]	     11901	option.c	FUNCTION_94	WHILE_1
0x400b37b	          0x4189d0	                            mov r8d, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400b37e	        0x41c1e81f	                           shr r8d, 0x1f	     11901	option.c	FUNCTION_94	WHILE_1
0x400b382	          0x4401c2	                            add edx, r8d	     11901	option.c	FUNCTION_94	WHILE_1
0x400b385	            0xd1fa	                              sar edx, 1	     11901	option.c	FUNCTION_94	WHILE_1
0x400b387	          0x4c63c2	                          movsxd r8, edx	     11902	option.c	FUNCTION_94	WHILE_1
0x400b38a	          0x4189d1	                            mov r9d, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400b38d	        0x4e8d04c0	                    lea r8, [rax + r8*8]	     11902	option.c	FUNCTION_94	WHILE_1
0x400b391	          0x413938	                     cmp dword [r8], edi	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x400b394	            0x7412	                            je 0x400b3a8	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x400b396	            0x7820	                            js 0x400b3b8	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400b398	            0x89d1	                            mov ecx, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400b39a	            0x39ce	                            cmp esi, ecx	     11899	option.c	FUNCTION_94	WHILE_1
0x400b39c	            0x75da	                           jne 0x400b378	     11899	option.c	FUNCTION_94	WHILE_1
0x400b39e	            0x89f8	                            mov eax, edi	     11911	option.c	FUNCTION_94	ELSE_1
0x400b3a0	              0xc3	                                     ret	     11912	option.c	FUNCTION_94	ELSE_1
0x400b3a1	     0xf1f80000000	                         nop dword [rax]	     11912	option.c	FUNCTION_94	ELSE_1
0x400b3a8	        0x418b4004	                 mov eax, dword [r8 + 4]	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x400b3ac	              0xc3	                                     ret	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x400b3ad	          0x4189c9	                            mov r9d, ecx	     11901	option.c	FUNCTION_94	WHILE_1
0x400b3b0	          0x4489d1	                           mov ecx, r10d	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400b3b3	       0xf1f440000	                   nop dword [rax + rax]	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400b3b8	        0x418d7101	                       lea esi, [r9 + 1]	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x400b3bc	          0x4189ca	                           mov r10d, ecx	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x400b3bf	            0xeb8f	                           jmp 0x400b350	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
find_mps_values	WHILE,1:FOR,0:ELSE,5:SWITCH,0:CALL,10:IF,10:functions,0:DO,0	149
0x400efa0	            0x4157	                                push r15	     12549	option.c	FUNCTION_115
0x400efa2	            0x4156	                                push r14	     12549	option.c	FUNCTION_115
0x400efa4	          0x4989d6	                            mov r14, rdx	     12549	option.c	FUNCTION_115
0x400efa7	            0x4155	                                push r13	     12549	option.c	FUNCTION_115
0x400efa9	            0x4154	                                push r12	     12549	option.c	FUNCTION_115
0x400efab	          0x4989f5	                            mov r13, rsi	     12549	option.c	FUNCTION_115
0x400efae	              0x55	                                push rbp	     12549	option.c	FUNCTION_115
0x400efaf	              0x53	                                push rbx	     12549	option.c	FUNCTION_115
0x400efb0	          0x4889fd	                            mov rbp, rdi	     12549	option.c	FUNCTION_115
0x400efb3	          0x4189cc	                           mov r12d, ecx	     12549	option.c	FUNCTION_115
0x400efb6	        0x4883ec08	                              sub rsp, 8	     12549	option.c	FUNCTION_115
0x400efba	    0x488b05000000	            mov rax, qword [0x0400efc1] 	     12552	option.c	FUNCTION_115
0x400efc1	    0x488b98301500	          mov rbx, qword [rax + 0x1530] 	     12552	option.c	FUNCTION_115
0x400efc8	           0xfb603	                   movzx eax, byte [rbx]	     12552	option.c	FUNCTION_115
0x400efcb	       0xf1f440000	                   nop dword [rax + rax]	     12552	option.c	FUNCTION_115
0x400efd0	            0x84c0	                             test al, al	     12553	option.c	FUNCTION_115	WHILE_1
0x400efd2	            0x7438	                            je 0x400f00c	     12553	option.c	FUNCTION_115	WHILE_1
0x400efd4	    0x8b1500000000	            mov edx, dword [0x0400efda] 	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x400efda	            0x85d2	                           test edx, edx	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x400efdc	            0x7542	                           jne 0x400f020	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x400efde	          0x8b5500	                    mov edx, dword [rbp]	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x400efe1	            0x39d0	                            cmp eax, edx	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x400efe3	     0xf8487000000	                            je 0x400f070	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x400efe9	         0xfb64302	               movzx eax, byte [rbx + 2]	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x400efed	            0x39c2	                            cmp edx, eax	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x400efef	     0xf84ab000000	                            je 0x400f0a0	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x400eff5	        0x4883c303	                              add rbx, 3	     12628	option.c	FUNCTION_115	WHILE_1	ELSE_3
0x400eff9	           0xfb603	                   movzx eax, byte [rbx]	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x400effc	            0x3c2c	                            cmp al, 0x2c	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x400effe	            0x75d0	                           jne 0x400efd0	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x400f000	         0xfb64301	               movzx eax, byte [rbx + 1]	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x400f004	        0x4883c301	                              add rbx, 1	     12631	option.c	FUNCTION_115	WHILE_1	IF_10
0x400f008	            0x84c0	                             test al, al	     12553	option.c	FUNCTION_115	WHILE_1
0x400f00a	            0x75c8	                           jne 0x400efd4	     12553	option.c	FUNCTION_115	WHILE_1
0x400f00c	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x400f010	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x400f011	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x400f012	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x400f014	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x400f016	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x400f018	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x400f01a	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x400f01b	       0xf1f440000	                   nop dword [rax + rax]	     12633	option.c	FUNCTION_115
0x400f020	          0x4889df	                            mov rdi, rbx	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400f023	    0xff1500000000	                 call qword [0x0400f029]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400f029	          0x3b4500	                    cmp eax, dword [rbp]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400f02c	     0xf84d1000000	                            je 0x400f103	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x400f032	          0x4889df	                            mov rdi, rbx	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400f035	    0xff1500000000	                 call qword [0x0400f03b]	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400f03b	        0x448d7801	                     lea r15d, [rax + 1]	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400f03f	          0x4d63ff	                        movsxd r15, r15d	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400f042	          0x4901df	                            add r15, rbx	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x400f045	          0x4c89ff	                            mov rdi, r15	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400f048	    0xff1500000000	                 call qword [0x0400f04e]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400f04e	          0x3b4500	                    cmp eax, dword [rbp]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400f051	     0xf84de000000	                            je 0x400f135	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x400f057	          0x4c89ff	                            mov rdi, r15	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400f05a	    0xff1500000000	                 call qword [0x0400f060]	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400f060	          0x4863d8	                         movsxd rbx, eax	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400f063	          0x4c01fb	                            add rbx, r15	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400f066	            0xeb91	                           jmp 0x400eff9	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400f068	     0xf1f84000000	                   nop dword [rax + rax]	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x400f070	          0x4585e4	                         test r12d, r12d	     12599	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400f073	            0x7453	                            je 0x400f0c8	     12599	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400f075	    0x41c706010000	                      mov dword [r14], 1	     12601	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400f07c	          0x8b4500	                    mov eax, dword [rbp]	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400f07f	        0x41894500	                    mov dword [r13], eax	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400f083	         0xfb64302	               movzx eax, byte [rbx + 2]	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400f087	          0x894500	                    mov dword [rbp], eax	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x400f08a	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x400f08e	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x400f08f	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x400f090	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x400f092	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x400f094	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x400f096	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x400f098	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x400f099	     0xf1f80000000	                         nop dword [rax]	     12633	option.c	FUNCTION_115
0x400f0a0	          0x4585e4	                         test r12d, r12d	     12615	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400f0a3	            0x7441	                            je 0x400f0e6	     12615	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400f0a5	    0x41c706000000	                      mov dword [r14], 0	     12617	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400f0ac	          0x8b4500	                    mov eax, dword [rbp]	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400f0af	        0x41894500	                    mov dword [r13], eax	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400f0b3	           0xfb603	                   movzx eax, byte [rbx]	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400f0b6	          0x894500	                    mov dword [rbp], eax	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x400f0b9	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x400f0bd	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x400f0be	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x400f0bf	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x400f0c1	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x400f0c3	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x400f0c5	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x400f0c7	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x400f0c8	    0x41c706000000	                      mov dword [r14], 0	     12607	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x400f0cf	         0xfb64302	               movzx eax, byte [rbx + 2]	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x400f0d3	        0x41894500	                    mov dword [r13], eax	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x400f0d7	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x400f0db	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x400f0dc	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x400f0dd	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x400f0df	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x400f0e1	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x400f0e3	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x400f0e5	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x400f0e6	    0x41c706010000	                      mov dword [r14], 1	     12623	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x400f0ed	           0xfb603	                   movzx eax, byte [rbx]	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x400f0f0	        0x41894500	                    mov dword [r13], eax	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x400f0f4	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x400f0f8	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x400f0f9	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x400f0fa	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x400f0fc	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x400f0fe	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x400f100	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x400f102	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x400f103	          0x4585e4	                         test r12d, r12d	     12562	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400f106	            0x7467	                            je 0x400f16f	     12562	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400f108	    0x4c8b25000000	            mov r12, qword [0x0400f10f] 	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400f10f	          0x4889df	                            mov rdi, rbx	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400f112	        0x41894500	                    mov dword [r13], eax	     12564	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400f116	    0xff1500000000	                 call qword [0x0400f11c]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400f11c	            0x4898	                                    cdqe	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400f11e	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400f123	          0x41ffd4	                                call r12	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400f126	          0x894500	                    mov dword [rbp], eax	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x400f129	    0x41c706010000	                      mov dword [r14], 1	     12566	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400f130	      0xe9d7feffff	                           jmp 0x400f00c	     12566	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x400f135	          0x4585e4	                         test r12d, r12d	     12579	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400f138	            0x741c	                            je 0x400f156	     12579	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400f13a	        0x41894500	                    mov dword [r13], eax	     12581	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400f13e	          0x4889df	                            mov rdi, rbx	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x400f141	    0xff1500000000	                 call qword [0x0400f147]	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x400f147	          0x894500	                    mov dword [rbp], eax	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x400f14a	    0x41c706000000	                      mov dword [r14], 0	     12583	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400f151	      0xe9b6feffff	                           jmp 0x400f00c	     12583	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x400f156	          0x4889df	                            mov rdi, rbx	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x400f159	    0xff1500000000	                 call qword [0x0400f15f]	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x400f15f	        0x41894500	                    mov dword [r13], eax	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x400f163	    0x41c706010000	                      mov dword [r14], 1	     12588	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2
0x400f16a	      0xe99dfeffff	                           jmp 0x400f00c	     12588	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2
0x400f16f	    0x488b2d000000	            mov rbp, qword [0x0400f176] 	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400f176	          0x4889df	                            mov rdi, rbx	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400f179	    0xff1500000000	                 call qword [0x0400f17f]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400f17f	            0x4898	                                    cdqe	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400f181	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400f186	            0xffd5	                                call rbp	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400f188	        0x41894500	                    mov dword [r13], eax	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x400f18c	    0x41c706000000	                      mov dword [r14], 0	     12571	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1
0x400f193	      0xe974feffff	                           jmp 0x400f00c	     12571	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1
get_term_code	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,3:IF,3:functions,0:DO,0	34
0x4004eb0	          0x803f74	                    cmp byte [rdi], 0x74	      9790	option.c	FUNCTION_57	IF_1
0x4004eb3	            0x754b	                           jne 0x4004f00	      9790	option.c	FUNCTION_57	IF_1
0x4004eb5	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9790	option.c	FUNCTION_57	IF_1
0x4004eb9	            0x7545	                           jne 0x4004f00	      9790	option.c	FUNCTION_57	IF_1
0x4004ebb	        0x807f0200	                   cmp byte [rdi + 2], 0	      9790	option.c	FUNCTION_57	IF_1
0x4004ebf	            0x743f	                            je 0x4004f00	      9790	option.c	FUNCTION_57	IF_1
0x4004ec1	        0x807f0300	                   cmp byte [rdi + 3], 0	      9791	option.c	FUNCTION_57	IF_1
0x4004ec5	            0x7439	                            je 0x4004f00	      9791	option.c	FUNCTION_57	IF_1
0x4004ec7	              0x53	                                push rbx	      9786	option.c	FUNCTION_57
0x4004ec8	          0x4889fb	                            mov rbx, rdi	      9786	option.c	FUNCTION_57
0x4004ecb	      0xe8e0b5ffff	                     call sym.findoption	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x4004ed0	            0x85c0	                           test eax, eax	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x4004ed2	            0x7834	                            js 0x4004f08	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x4004ed4	            0x4898	                                    cdqe	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004ed6	        0x48c1e006	                              shl rax, 6	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004eda	    0x488bb8000000	                    mov rdi, qword [rax]	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004ee1	    0x488db0000000	                          lea rsi, [rax]	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004ee8	      0xe843c6ffff	                call sym.get_varp.isra.1	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x4004eed	          0x4885c0	                           test rax, rax	      9796	option.c	FUNCTION_57	IF_2	IF_3
0x4004ef0	            0x7426	                            je 0x4004f18	      9796	option.c	FUNCTION_57	IF_2	IF_3
0x4004ef2	          0x488b00	                    mov rax, qword [rax]	      9797	option.c	FUNCTION_57	IF_2	IF_3
0x4004ef5	              0x5b	                                 pop rbx	      9801	option.c	FUNCTION_57
0x4004ef6	              0xc3	                                     ret	      9801	option.c	FUNCTION_57
0x4004ef7	    0x660f1f840000	                    nop word [rax + rax]	      9801	option.c	FUNCTION_57
0x4004f00	            0x31c0	                            xor eax, eax	      9792	option.c	FUNCTION_57	IF_1
0x4004f02	              0xc3	                                     ret	      9801	option.c	FUNCTION_57
0x4004f03	       0xf1f440000	                   nop dword [rax + rax]	      9801	option.c	FUNCTION_57
0x4004f08	        0x488d7b02	                      lea rdi, [rbx + 2]	      9800	option.c	FUNCTION_57	CALL_3
0x4004f0c	              0x5b	                                 pop rbx	      9801	option.c	FUNCTION_57
0x4004f0d	      0xe900000000	                           jmp 0x4004f12	      9800	option.c	FUNCTION_57	CALL_3
0x4004f12	    0x660f1f440000	                    nop word [rax + rax]	      9800	option.c	FUNCTION_57	CALL_3
0x4004f18	            0x31c0	                            xor eax, eax	      9792	option.c	FUNCTION_57	IF_1
0x4004f1a	              0x5b	                                 pop rbx	      9801	option.c	FUNCTION_57
0x4004f1b	              0xc3	                                     ret	      9801	option.c	FUNCTION_57
init_gui_options	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,6:IF,1:functions,0:DO,0	40
0x400e7d0	              0x55	                                push rbp	      4266	option.c	FUNCTION_13
0x400e7d1	              0x53	                                push rbx	      4266	option.c	FUNCTION_13
0x400e7d2	      0xbf00000000	                              mov edi, 0	     12256	option.c	FUNCTION_102	CALL_1
0x400e7d7	        0x4883ec08	                              sub rsp, 8	      4266	option.c	FUNCTION_13
0x400e7db	      0xe8d01cffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x400e7e0	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x400e7e2	            0x781c	                            js 0x400e800	     12257	option.c	FUNCTION_102	IF_1
0x400e7e4	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x400e7e6	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x400e7ea	    0xf68000000000	                      test byte [rax], 1	     12259	option.c	FUNCTION_102	IF_2
0x400e7f1	            0x740d	                            je 0x400e800	     12259	option.c	FUNCTION_102	IF_2
0x400e7f3	        0x4883c408	                              add rsp, 8	      4274	option.c	FUNCTION_13
0x400e7f7	              0x5b	                                 pop rbx	      4274	option.c	FUNCTION_13
0x400e7f8	              0x5d	                                 pop rbp	      4274	option.c	FUNCTION_13
0x400e7f9	              0xc3	                                     ret	      4274	option.c	FUNCTION_13
0x400e7fa	    0x660f1f440000	                    nop word [rax + rax]	      4274	option.c	FUNCTION_13
0x400e800	    0x488b3d000000	            mov rdi, qword [0x0400e807] 	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x400e807	      0xbd00000000	                              mov ebp, 0	      4258	option.c	FUNCTION_12
0x400e80c	      0xbb00000000	                              mov ebx, 0	      4258	option.c	FUNCTION_12
0x400e811	      0xe800000000	                          call 0x400e816	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x400e816	    0x488b3d000000	            mov rdi, qword [0x0400e81d] 	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400e81d	          0x83f87f	                           cmp eax, 0x7f	      4258	option.c	FUNCTION_12
0x400e820	          0x4889ee	                            mov rsi, rbp	      4258	option.c	FUNCTION_12
0x400e823	        0x480f4cf3	                          cmovl rsi, rbx	      4258	option.c	FUNCTION_12
0x400e827	      0xe800000000	                          call 0x400e82c	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400e82c	            0x85c0	                           test eax, eax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400e82e	            0x74c3	                            je 0x400e7f3	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x400e830	    0x488b3d000000	            mov rdi, qword [0x0400e837] 	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x400e837	      0xe800000000	                          call 0x400e83c	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x400e83c	          0x4889ea	                            mov rdx, rbp	      4258	option.c	FUNCTION_12
0x400e83f	          0x83f87f	                           cmp eax, 0x7f	      4258	option.c	FUNCTION_12
0x400e842	      0xbf00000000	                              mov edi, 0	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400e847	        0x480f4cd3	                          cmovl rdx, rbx	      4258	option.c	FUNCTION_12
0x400e84b	            0x31c9	                            xor ecx, ecx	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400e84d	            0x31f6	                            xor esi, esi	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400e84f	      0xe800000000	                          call 0x400e854	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x400e854	        0x4883c408	                              add rsp, 8	      4274	option.c	FUNCTION_13
0x400e858	              0x5b	                                 pop rbx	      4274	option.c	FUNCTION_13
0x400e859	              0x5d	                                 pop rbp	      4274	option.c	FUNCTION_13
0x400e85a	      0xe900000000	                           jmp 0x400e85f	      4272	option.c	FUNCTION_13	IF_1	CALL_6
find_viminfo_parameter	WHILE,0:FOR,1:ELSE,0:SWITCH,0:CALL,1:IF,3:functions,0:DO,0	33
0x4003990	              0x53	                                push rbx	      5495	option.c	FUNCTION_24
0x4003991	            0x89fb	                            mov ebx, edi	      5495	option.c	FUNCTION_24
0x4003993	    0x488b3d000000	            mov rdi, qword [0x0400399a] 	      5498	option.c	FUNCTION_24	FOR_1
0x400399a	           0xfb607	                   movzx eax, byte [rdi]	      5498	option.c	FUNCTION_24	FOR_1
0x400399d	            0x84c0	                             test al, al	      5498	option.c	FUNCTION_24	FOR_1
0x400399f	            0x7436	                            je 0x40039d7	      5498	option.c	FUNCTION_24	FOR_1
0x40039a1	           0xfb6d0	                           movzx edx, al	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x40039a4	            0x39d3	                            cmp ebx, edx	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x40039a6	            0x7438	                            je 0x40039e0	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x40039a8	            0x3c6e	                            cmp al, 0x6e	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x40039aa	            0x751c	                           jne 0x40039c8	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x40039ac	            0xeb29	                           jmp 0x40039d7	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x40039ae	            0x6690	                                     nop	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x40039b0	         0xfb65001	               movzx edx, byte [rax + 1]	      5498	option.c	FUNCTION_24	FOR_1
0x40039b4	        0x488d7801	                      lea rdi, [rax + 1]	      5498	option.c	FUNCTION_24	FOR_1
0x40039b8	            0x84d2	                             test dl, dl	      5498	option.c	FUNCTION_24	FOR_1
0x40039ba	            0x741b	                            je 0x40039d7	      5498	option.c	FUNCTION_24	FOR_1
0x40039bc	           0xfb6c2	                           movzx eax, dl	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x40039bf	            0x39d8	                            cmp eax, ebx	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x40039c1	            0x741d	                            je 0x40039e0	      5500	option.c	FUNCTION_24	FOR_1	IF_1
0x40039c3	          0x80fa6e	                            cmp dl, 0x6e	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x40039c6	            0x740f	                            je 0x40039d7	      5502	option.c	FUNCTION_24	FOR_1	IF_2
0x40039c8	      0xbe2c000000	                           mov esi, 0x2c	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x40039cd	      0xe800000000	                          call 0x40039d2	      5504	option.c	FUNCTION_24	FOR_1	CALL_1
0x40039d2	          0x4885c0	                           test rax, rax	      5505	option.c	FUNCTION_24	FOR_1	IF_3
0x40039d5	            0x75d9	                           jne 0x40039b0	      5505	option.c	FUNCTION_24	FOR_1	IF_3
0x40039d7	            0x31c0	                            xor eax, eax	      5508	option.c	FUNCTION_24
0x40039d9	              0x5b	                                 pop rbx	      5509	option.c	FUNCTION_24
0x40039da	              0xc3	                                     ret	      5509	option.c	FUNCTION_24
0x40039db	       0xf1f440000	                   nop dword [rax + rax]	      5509	option.c	FUNCTION_24
0x40039e0	        0x488d4701	                      lea rax, [rdi + 1]	      5501	option.c	FUNCTION_24	FOR_1	IF_1
0x40039e4	              0x5b	                                 pop rbx	      5509	option.c	FUNCTION_24
0x40039e5	              0xc3	                                     ret	      5509	option.c	FUNCTION_24
signcolumn_on	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,0:IF,2:functions,0:DO,0	23
0x400f1b0	    0x488b87b80200	           mov rax, qword [rdi + 0x2b8] 	     12697	option.c	FUNCTION_118	IF_1
0x400f1b7	           0xfb600	                   movzx eax, byte [rax]	     12697	option.c	FUNCTION_118	IF_1
0x400f1ba	            0x3c6e	                            cmp al, 0x6e	     12697	option.c	FUNCTION_118	IF_1
0x400f1bc	            0x7432	                            je 0x400f1f0	     12697	option.c	FUNCTION_118	IF_1
0x400f1be	            0x3c79	                            cmp al, 0x79	     12699	option.c	FUNCTION_118	IF_2
0x400f1c0	            0x7436	                            je 0x400f1f8	     12699	option.c	FUNCTION_118	IF_2
0x400f1c2	        0x488b5708	                mov rdx, qword [rdi + 8]	     12701	option.c	FUNCTION_118
0x400f1c6	      0xb801000000	                              mov eax, 1	     12700	option.c	FUNCTION_118	IF_2
0x400f1cb	    0x4883ba201c00	             cmp qword [rdx + 0x1c20], 0	     12703	option.c	FUNCTION_118
0x400f1d3	            0x740b	                            je 0x400f1e0	     12703	option.c	FUNCTION_118
0x400f1d5	            0xf3c3	                                     ret	     12706	option.c	FUNCTION_118
0x400f1d7	    0x660f1f840000	                    nop word [rax + rax]	     12706	option.c	FUNCTION_118
0x400f1e0	    0x8b92281c0000	          mov edx, dword [rdx + 0x1c28] 	     12698	option.c	FUNCTION_118	IF_1
0x400f1e6	            0x31c0	                            xor eax, eax	     12698	option.c	FUNCTION_118	IF_1
0x400f1e8	            0x85d2	                           test edx, edx	     12698	option.c	FUNCTION_118	IF_1
0x400f1ea	           0xf95c0	                                setne al	     12698	option.c	FUNCTION_118	IF_1
0x400f1ed	              0xc3	                                     ret	     12698	option.c	FUNCTION_118	IF_1
0x400f1ee	            0x6690	                                     nop	     12698	option.c	FUNCTION_118	IF_1
0x400f1f0	            0x31c0	                            xor eax, eax	     12698	option.c	FUNCTION_118	IF_1
0x400f1f2	              0xc3	                                     ret	     12698	option.c	FUNCTION_118	IF_1
0x400f1f3	       0xf1f440000	                   nop dword [rax + rax]	     12698	option.c	FUNCTION_118	IF_1
0x400f1f8	      0xb801000000	                              mov eax, 1	     12700	option.c	FUNCTION_118	IF_2
0x400f1fd	              0xc3	                                     ret	     12706	option.c	FUNCTION_118
makeset	WHILE,0:FOR,3:ELSE,3:SWITCH,0:CALL,11:IF,19:functions,0:DO,0	210
0x4004f80	            0x4157	                                push r15	     10047	option.c	FUNCTION_64
0x4004f82	            0x4156	                                push r14	     10047	option.c	FUNCTION_64
0x4004f84	            0x89f0	                            mov eax, esi	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4004f86	            0x4155	                                push r13	     10047	option.c	FUNCTION_64
0x4004f88	            0x4154	                                push r12	     10047	option.c	FUNCTION_64
0x4004f8a	          0x83e004	                              and eax, 4	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4004f8d	              0x55	                                push rbp	     10047	option.c	FUNCTION_64
0x4004f8e	              0x53	                                push rbx	     10047	option.c	FUNCTION_64
0x4004f8f	          0x4889fd	                            mov rbp, rdi	     10047	option.c	FUNCTION_64
0x4004f92	        0x4883ec28	                           sub rsp, 0x28	     10047	option.c	FUNCTION_64
0x4004f96	        0x89442418	             mov dword [rsp + 0x18], eax	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4004f9a	            0x89f0	                            mov eax, esi	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004f9c	        0x89742414	             mov dword [rsp + 0x14], esi	     10047	option.c	FUNCTION_64
0x4004fa0	          0x83e002	                              and eax, 2	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004fa3	        0x8954241c	             mov dword [rsp + 0x1c], edx	     10047	option.c	FUNCTION_64
0x4004fa7	    0xc74424100100	               mov dword [rsp + 0x10], 1	     10062	option.c	FUNCTION_64	FOR_1
0x4004faf	    0x48c704240000	                      mov qword [rsp], 0	     10051	option.c	FUNCTION_64
0x4004fb7	        0x8944240c	              mov dword [rsp + 0xc], eax	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4004fbb	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fc0	    0x41bf00000000	                             mov r15d, 0	     10113	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0x4004fc6	        0x4183f601	                             xor r14d, 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fca	          0x4489f0	                           mov eax, r14d	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fcd	          0x83e001	                              and eax, 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fd0	        0x8844240b	                mov byte [rsp + 0xb], al	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fd4	          0x498b07	                    mov rax, qword [r15]	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fd7	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x4004fda	            0x7460	                            je 0x400503c	     10375	option.c	FUNCTION_73
0x4004fdc	         0xf1f4000	                         nop dword [rax]	     10375	option.c	FUNCTION_73
0x4004fe0	        0x498b4710	            mov rax, qword [r15 + 0x10] 	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fe4	          0xf6c402	                              test ah, 2	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fe7	            0x7547	                           jne 0x4005030	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fe9	          0x4889c2	                            mov rdx, rax	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004fec	        0x48c1ea18	                           shr rdx, 0x18	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004ff0	          0x83e201	                              and edx, 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004ff3	        0x3854240b	                cmp byte [rsp + 0xb], dl	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004ff7	            0x7437	                            je 0x4005030	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4004ff9	        0x458b4720	            mov r8d, dword [r15 + 0x20] 	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4004ffd	          0x4585c0	                           test r8d, r8d	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005000	            0x756e	                           jne 0x4005070	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005002	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005006	            0x85ff	                           test edi, edi	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005008	            0x7426	                            je 0x4005030	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x400500a	      0xa900002000	                      test eax, 0x200000	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x400500f	            0x751f	                           jne 0x4005030	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005011	        0x8b742414	            mov esi, dword [rsp + 0x14] 	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005015	          0x4c89ff	                            mov rdi, r15	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005018	      0xe843d4ffff	                 call sym.get_varp_scope	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400501d	          0x4c89ff	                            mov rdi, r15	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x4005020	          0x4889c6	                            mov rsi, rax	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x4005023	          0x4989c6	                            mov r14, rax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005026	      0xe835b6ffff	                 call sym.optval_default	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400502b	            0x85c0	                           test eax, eax	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400502d	            0x7458	                            je 0x4005087	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x400502f	              0x90	                                     nop	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x4005030	        0x4983c740	                           add r15, 0x40	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x4005034	          0x498b07	                    mov rax, qword [r15]	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x4005037	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400503a	            0x75a4	                           jne 0x4004fe0	     10375	option.c	FUNCTION_73
0x400503c	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4005040	            0x759e	                           jne 0x4004fe0	     10375	option.c	FUNCTION_73
0x4005042	      0x836c241001	               sub dword [rsp + 0x10], 1	     10062	option.c	FUNCTION_64	FOR_1
0x4005047	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     10062	option.c	FUNCTION_64	FOR_1
0x400504b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     10062	option.c	FUNCTION_64	FOR_1
0x400504e	     0xf8567ffffff	                           jne 0x4004fbb	     10062	option.c	FUNCTION_64	FOR_1
0x4005054	        0x4883c428	                           add rsp, 0x28	     10156	option.c	FUNCTION_64
0x4005058	      0xb801000000	                              mov eax, 1	     10155	option.c	FUNCTION_64
0x400505d	              0x5b	                                 pop rbx	     10156	option.c	FUNCTION_64
0x400505e	              0x5d	                                 pop rbp	     10156	option.c	FUNCTION_64
0x400505f	            0x415c	                                 pop r12	     10156	option.c	FUNCTION_64
0x4005061	            0x415d	                                 pop r13	     10156	option.c	FUNCTION_64
0x4005063	            0x415e	                                 pop r14	     10156	option.c	FUNCTION_64
0x4005065	            0x415f	                                 pop r15	     10156	option.c	FUNCTION_64
0x4005067	              0xc3	                                     ret	     10156	option.c	FUNCTION_64
0x4005068	     0xf1f84000000	                   nop dword [rax + rax]	     10156	option.c	FUNCTION_64
0x4005070	        0x8b74240c	              mov esi, dword [rsp + 0xc]	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005074	            0x85f6	                           test esi, esi	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005076	            0x7592	                           jne 0x400500a	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005078	        0x8b742414	            mov esi, dword [rsp + 0x14] 	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400507c	          0x4c89ff	                            mov rdi, r15	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x400507f	      0xe8dcd3ffff	                 call sym.get_varp_scope	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005084	          0x4989c6	                            mov r14, rax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005087	        0x418b4f20	            mov ecx, dword [r15 + 0x20] 	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x400508b	            0x85c9	                           test ecx, ecx	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x400508d	     0xf854d010000	                           jne 0x40051e0	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005093	        0x8b54240c	              mov edx, dword [rsp + 0xc]	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005097	      0xbb02000000	                              mov ebx, 2	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400509c	          0x4d89f4	                            mov r12, r14	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400509f	            0x85d2	                           test edx, edx	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x40050a1	        0x410f95c5	                              setne r13b	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x40050a5	            0xeb5a	                           jmp 0x4005101	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x40050a7	    0x660f1f840000	                    nop word [rax + rax]	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x40050b0	        0x41f6c002	                             test r8b, 2	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x40050b4	     0xf8506010000	                           jne 0x40051c0	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x40050ba	        0x418b4720	            mov eax, dword [r15 + 0x20] 	     10133	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x40050be	      0x3d3f400000	                         cmp eax, 0x403f	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x40050c3	     0xf8487000000	                            je 0x4005150	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x40050c9	      0x3d24400000	                         cmp eax, 0x4024	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x40050ce	     0xf847c000000	                            je 0x4005150	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x40050d4	          0x498b17	                    mov rdx, qword [r15]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050d7	        0x49c1e804	                               shr r8, 4	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050db	          0x4c89e1	                            mov rcx, r12	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050de	        0x4183e001	                              and r8d, 1	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050e2	          0x4c89f6	                            mov rsi, r14	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050e5	          0x4889ef	                            mov rdi, rbp	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050e8	      0xe803c3ffff	                  call sym.put_setstring	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050ed	            0x85c0	                           test eax, eax	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050ef	            0x7440	                            je 0x4005131	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x40050f1	          0x83c301	                              add ebx, 1	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x40050f4	          0x83fb03	                              cmp ebx, 3	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x40050f7	     0xf8433ffffff	                            je 0x4005030	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x40050fd	        0x4c8b2424	                    mov r12, qword [rsp]	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x4005101	          0x83fb01	                              cmp ebx, 1	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005104	            0x7442	                            je 0x4005148	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005106	          0x4584ed	                         test r13b, r13b	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005109	    0x41be00000000	                             mov r14d, 0	     10113	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0x400510f	            0x7537	                           jne 0x4005148	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005111	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x4005115	        0x41f6c001	                             test r8b, 1	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x4005119	            0x7495	                            je 0x40050b0	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x400511b	        0x418b0c24	                    mov ecx, dword [r12]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400511f	          0x498b17	                    mov rdx, qword [r15]	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4005122	          0x4c89f6	                            mov rsi, r14	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4005125	          0x4889ef	                            mov rdi, rbp	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4005128	      0xe883deffff	                    call sym.put_setbool	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400512d	            0x85c0	                           test eax, eax	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x400512f	            0x75c0	                           jne 0x40050f1	     10117	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0x4005131	        0x4883c428	                           add rsp, 0x28	     10156	option.c	FUNCTION_64
0x4005135	            0x31c0	                            xor eax, eax	     10118	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12
0x4005137	              0x5b	                                 pop rbx	     10156	option.c	FUNCTION_64
0x4005138	              0x5d	                                 pop rbp	     10156	option.c	FUNCTION_64
0x4005139	            0x415c	                                 pop r12	     10156	option.c	FUNCTION_64
0x400513b	            0x415d	                                 pop r13	     10156	option.c	FUNCTION_64
0x400513d	            0x415e	                                 pop r14	     10156	option.c	FUNCTION_64
0x400513f	            0x415f	                                 pop r15	     10156	option.c	FUNCTION_64
0x4005141	              0xc3	                                     ret	     10156	option.c	FUNCTION_64
0x4005142	    0x660f1f440000	                    nop word [rax + rax]	     10156	option.c	FUNCTION_64
0x4005148	    0x41be00000000	                             mov r14d, 0	     10111	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x400514e	            0xebc1	                           jmp 0x4005111	     10111	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005150	        0x4d8b0424	                     mov r8, qword [r12]	        97	stdio2.h	CALL_64
0x4005154	          0x498b0f	                    mov rcx, qword [r15]	        97	stdio2.h	CALL_64
0x4005157	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_64
0x4005159	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_64
0x400515e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_64
0x4005163	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_64
0x4005166	      0xe800000000	                          call 0x400516b	        97	stdio2.h	CALL_64
0x400516b	            0x85c0	                           test eax, eax	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x400516d	            0x78c2	                            js 0x4005131	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x400516f	          0x4889ef	                            mov rdi, rbp	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x4005172	      0xe800000000	                          call 0x4005177	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x4005177	            0x85c0	                           test eax, eax	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x4005179	            0x78b6	                            js 0x4005131	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x400517b	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400517f	          0x498b17	                    mov rdx, qword [r15]	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4005182	          0x4c89e1	                            mov rcx, r12	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4005185	          0x4c89f6	                            mov rsi, r14	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4005188	          0x4889ef	                            mov rdi, rbp	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400518b	        0x49c1e804	                               shr r8, 4	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400518f	        0x4183e001	                              and r8d, 1	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4005193	      0xe858c2ffff	                  call sym.put_setstring	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x4005198	            0x85c0	                           test eax, eax	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400519a	            0x7495	                            je 0x4005131	     10143	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_10
0x400519c	      0xbe00000000	                              mov esi, 0	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40051a1	          0x4889ef	                            mov rdi, rbp	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40051a4	      0xe800000000	                          call 0x40051a9	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40051a9	            0x85c0	                           test eax, eax	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40051ab	     0xf8540ffffff	                           jne 0x40050f1	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40051b1	      0xe97bffffff	                           jmp 0x4005131	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40051b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x40051c0	          0x498b17	                    mov rdx, qword [r15]	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051c3	          0x4c89e1	                            mov rcx, r12	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051c6	          0x4c89f6	                            mov rsi, r14	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051c9	          0x4889ef	                            mov rdi, rbp	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051cc	      0xe83fdeffff	                     call sym.put_setnum	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051d1	            0x85c0	                           test eax, eax	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051d3	     0xf8518ffffff	                           jne 0x40050f1	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051d9	      0xe953ffffff	                           jmp 0x4005131	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051de	            0x6690	                                     nop	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x40051e0	      0x49837f18ff	cmp qword [r15 + 0x18], 0xffffffffffffffff	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x40051e5	     0xf85a8feffff	                           jne 0x4005093	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x40051eb	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x40051ef	            0x85c0	                           test eax, eax	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x40051f1	     0xf8439feffff	                            je 0x4005030	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x40051f7	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x40051fb	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x40051ff	             0x9c7	                             or edi, eax	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x4005201	            0x7413	                            je 0x4005216	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x4005203	            0x85c0	                           test eax, eax	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x4005205	      0xbb02000000	                              mov ebx, 2	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400520a	          0x4d89f4	                            mov r12, r14	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400520d	        0x410f95c5	                              setne r13b	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005211	      0xe9ebfeffff	                           jmp 0x4005101	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005216	      0xbe02000000	                              mov esi, 2	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x400521b	          0x4c89ff	                            mov rdi, r15	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x400521e	      0xe83dd2ffff	                 call sym.get_varp_scope	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x4005223	          0x4c89ff	                            mov rdi, r15	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005226	          0x4889c6	                            mov rsi, rax	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005229	          0x4889c3	                            mov rbx, rax	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x400522c	      0xe82fb4ffff	                 call sym.optval_default	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005231	            0x85c0	                           test eax, eax	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005233	            0x7410	                            je 0x4005245	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005235	          0x4531ed	                          xor r13d, r13d	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005238	      0xbb02000000	                              mov ebx, 2	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x400523d	          0x4d89f4	                            mov r12, r14	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005240	      0xe9bcfeffff	                           jmp 0x4005101	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005245	        0x4c893424	                    mov qword [rsp], r14	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005249	          0x4989de	                            mov r14, rbx	     10100	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400524c	          0x4531ed	                          xor r13d, r13d	     10100	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x400524f	      0xbb01000000	                              mov ebx, 1	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4005254	          0x4d89f4	                            mov r12, r14	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4005257	      0xe9a5feffff	                           jmp 0x4005101	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
shortmess	WHILE,0:FOR,0:ELSE,0:SWITCH,0:CALL,3:IF,0:functions,0:DO,0	31
0x400b410	            0x89fe	                            mov esi, edi	     12054	option.c	FUNCTION_98
0x400b412	    0x488b3d000000	            mov rdi, qword [0x0400b419] 	     12055	option.c	FUNCTION_98
0x400b419	          0x4885ff	                           test rdi, rdi	     12055	option.c	FUNCTION_98
0x400b41c	            0x741a	                            je 0x400b438	     12055	option.c	FUNCTION_98
0x400b41e	              0x53	                                push rbx	     12054	option.c	FUNCTION_98
0x400b41f	            0x89f3	                            mov ebx, esi	     12054	option.c	FUNCTION_98
0x400b421	      0xe800000000	                          call 0x400b426	     12056	option.c	FUNCTION_98	CALL_1
0x400b426	          0x4885c0	                           test rax, rax	     12055	option.c	FUNCTION_98
0x400b429	      0xba01000000	                              mov edx, 1	     12055	option.c	FUNCTION_98
0x400b42e	            0x7410	                            je 0x400b440	     12055	option.c	FUNCTION_98
0x400b430	            0x89d0	                            mov eax, edx	     12059	option.c	FUNCTION_98
0x400b432	              0x5b	                                 pop rbx	     12059	option.c	FUNCTION_98
0x400b433	              0xc3	                                     ret	     12059	option.c	FUNCTION_98
0x400b434	         0xf1f4000	                         nop dword [rax]	     12059	option.c	FUNCTION_98
0x400b438	            0x31d2	                            xor edx, edx	     12055	option.c	FUNCTION_98
0x400b43a	            0x89d0	                            mov eax, edx	     12059	option.c	FUNCTION_98
0x400b43c	              0xc3	                                     ret	     12059	option.c	FUNCTION_98
0x400b43d	           0xf1f00	                         nop dword [rax]	     12059	option.c	FUNCTION_98
0x400b440	    0x488b3d000000	            mov rdi, qword [0x0400b447] 	     12057	option.c	FUNCTION_98	CALL_2
0x400b447	      0xbe61000000	                           mov esi, 0x61	     12057	option.c	FUNCTION_98	CALL_2
0x400b44c	      0xe800000000	                          call 0x400b451	     12057	option.c	FUNCTION_98	CALL_2
0x400b451	            0x31d2	                            xor edx, edx	     12055	option.c	FUNCTION_98
0x400b453	          0x4885c0	                           test rax, rax	     12057	option.c	FUNCTION_98	CALL_2
0x400b456	            0x74d8	                            je 0x400b430	     12057	option.c	FUNCTION_98	CALL_2
0x400b458	            0x89de	                            mov esi, ebx	     12058	option.c	FUNCTION_98	CALL_3
0x400b45a	      0xbf00000000	                              mov edi, 0	     12058	option.c	FUNCTION_98	CALL_3
0x400b45f	      0xe800000000	                          call 0x400b464	     12058	option.c	FUNCTION_98	CALL_3
0x400b464	            0x31d2	                            xor edx, edx	     12055	option.c	FUNCTION_98
0x400b466	          0x4885c0	                           test rax, rax	     12055	option.c	FUNCTION_98
0x400b469	           0xf95c2	                                setne dl	     12055	option.c	FUNCTION_98
0x400b46c	            0xebc2	                           jmp 0x400b430	     12055	option.c	FUNCTION_98
