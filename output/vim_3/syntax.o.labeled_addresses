syn_cmd_cluster	SWITCH,0:WHILE,0:DO,0:IF,11:ELSE,4:FOR,1:functions,0:CALL,21	158
0x4007320	            0x4157	                                push r15	      5649	syntax.c	FUNCTION_88
0x4007322	            0x4156	                                push r14	      5649	syntax.c	FUNCTION_88
0x4007324	            0x4155	                                push r13	      5649	syntax.c	FUNCTION_88
0x4007326	            0x4154	                                push r12	      5649	syntax.c	FUNCTION_88
0x4007328	              0x55	                                push rbp	      5649	syntax.c	FUNCTION_88
0x4007329	              0x53	                                push rbx	      5649	syntax.c	FUNCTION_88
0x400732a	          0x4889fd	                            mov rbp, rdi	      5649	syntax.c	FUNCTION_88
0x400732d	        0x4883ec38	                           sub rsp, 0x38	      5649	syntax.c	FUNCTION_88
0x4007331	          0x4c8b2f	                    mov r13, qword [rdi]	      5650	syntax.c	FUNCTION_88
0x4007334	    0x64488b042528	                mov rax, qword fs:[0x28]	      5649	syntax.c	FUNCTION_88
0x400733d	      0x4889442428	             mov qword [rsp + 0x28], rax	      5649	syntax.c	FUNCTION_88
0x4007342	            0x31c0	                            xor eax, eax	      5649	syntax.c	FUNCTION_88
0x4007344	          0x4c89ef	                            mov rdi, r13	      5659	syntax.c	FUNCTION_88	CALL_1
0x4007347	      0xe800000000	                          call 0x400734c	      5659	syntax.c	FUNCTION_88	CALL_1
0x400734c	          0x8b5530	            mov edx, dword [rbp + 0x30] 	      5660	syntax.c	FUNCTION_88	IF_1
0x400734f	        0x48894508	                mov qword [rbp + 8], rax	      5659	syntax.c	FUNCTION_88	CALL_1
0x4007353	            0x85d2	                           test edx, edx	      5660	syntax.c	FUNCTION_88	IF_1
0x4007355	            0x7429	                            je 0x4007380	      5660	syntax.c	FUNCTION_88	IF_1
0x4007357	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5720	syntax.c	FUNCTION_88
0x400735c	    0x644833042528	                xor rax, qword fs:[0x28]	      5720	syntax.c	FUNCTION_88
0x4007365	     0xf8544020000	                           jne 0x40075af	      5720	syntax.c	FUNCTION_88
0x400736b	        0x4883c438	                           add rsp, 0x38	      5720	syntax.c	FUNCTION_88
0x400736f	              0x5b	                                 pop rbx	      5720	syntax.c	FUNCTION_88
0x4007370	              0x5d	                                 pop rbp	      5720	syntax.c	FUNCTION_88
0x4007371	            0x415c	                                 pop r12	      5720	syntax.c	FUNCTION_88
0x4007373	            0x415d	                                 pop r13	      5720	syntax.c	FUNCTION_88
0x4007375	            0x415e	                                 pop r14	      5720	syntax.c	FUNCTION_88
0x4007377	            0x415f	                                 pop r15	      5720	syntax.c	FUNCTION_88
0x4007379	              0xc3	                                     ret	      5720	syntax.c	FUNCTION_88
0x400737a	    0x660f1f440000	                    nop word [rax + rax]	      5720	syntax.c	FUNCTION_88
0x4007380	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5663	syntax.c	FUNCTION_88	CALL_2
0x4007385	          0x4c89ef	                            mov rdi, r13	      5663	syntax.c	FUNCTION_88	CALL_2
0x4007388	      0xe8d395ffff	                 call sym.get_group_name	      5663	syntax.c	FUNCTION_88	CALL_2
0x400738d	          0x4885c0	                           test rax, rax	      5665	syntax.c	FUNCTION_88	IF_2
0x4007390	      0x4889442418	             mov qword [rsp + 0x18], rax	      5663	syntax.c	FUNCTION_88	CALL_2
0x4007395	     0xf8438010000	                            je 0x40074d3	      5665	syntax.c	FUNCTION_88	IF_2
0x400739b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x40073a0	          0x4c89ef	                            mov rdi, r13	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x40073a3	          0x4c29ee	                            sub rsi, r13	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x40073a6	      0xe8d59dffff	              call sym.syn_check_cluster	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x40073ab	            0x85c0	                           test eax, eax	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0x40073ad	            0x74a8	                            je 0x4007357	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0x40073af	      0x2dd8590000	                         sub eax, 0x59d8	      5670	syntax.c	FUNCTION_88	IF_2
0x40073b4	          0x4531ff	                          xor r15d, r15d	      5655	syntax.c	FUNCTION_88
0x40073b7	    0x49be00020000	         movabs r14, 0x2000000100000200 	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x40073c1	        0x89442404	                mov dword [rsp + 4], eax	      5670	syntax.c	FUNCTION_88	IF_2
0x40073c5	            0x4898	                                    cdqe	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x40073c7	        0x488d0440	                  lea rax, [rax + rax*2]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x40073cb	        0x48c1e003	                              shl rax, 3	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x40073cf	      0x4889442408	                mov qword [rsp + 8], rax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x40073d4	      0xe981000000	                           jmp 0x400745a	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x40073d9	     0xf1f80000000	                         nop dword [rax]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x40073e0	         0xfb64303	               movzx eax, byte [rbx + 3]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40073e4	            0x3c3d	                            cmp al, 0x3d	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40073e6	     0xf878d000000	                            ja 0x4007479	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40073ec	        0x490fa3c6	                             bt r14, rax	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40073f0	    0x41bc02000000	                             mov r12d, 2	      5678	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x40073f6	      0xbe03000000	                              mov esi, 3	      5677	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x40073fb	            0x737c	                           jae 0x4007479	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x40073fd	          0x8b4d30	            mov ecx, dword [rbp + 0x30] 	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x4007400	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x4007405	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400740a	    0x48c744242000	               mov qword [rsp + 0x20], 0	      5695	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3
0x4007413	      0xe838f5ffff	                    call sym.get_id_list	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x4007418	            0x85c0	                           test eax, eax	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400741a	     0xf8440010000	                            je 0x4007560	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x4007420	        0x8b442404	                mov eax, dword [rsp + 4]	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x4007424	            0x85c0	                           test eax, eax	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x4007426	     0xf8824010000	                            js 0x4007550	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x400742c	    0x488b05000000	            mov rax, qword [0x04007433] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x4007433	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x4007438	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400743d	          0x4489e2	                           mov edx, r12d	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x4007440	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x4007444	    0x4803b8880200	            add rdi, qword [rax + 0x288]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400744b	        0x4883c710	                           add rdi, 0x10	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400744f	      0xe8cc9effff	               call sym.syn_combine_list	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x4007454	    0x41bf01000000	                             mov r15d, 1	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400745a	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400745f	      0xba03000000	                              mov edx, 3	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x4007464	      0xbe00000000	                              mov esi, 0	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x4007469	          0x4889df	                            mov rdi, rbx	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400746c	      0xe800000000	                          call 0x4007471	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x4007471	            0x85c0	                           test eax, eax	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x4007473	     0xf8467ffffff	                            je 0x40073e0	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x4007479	      0xba06000000	                              mov edx, 6	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400747e	      0xbe00000000	                              mov esi, 0	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x4007483	          0x4889df	                            mov rdi, rbx	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x4007486	      0xe800000000	                          call 0x400748b	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400748b	            0x85c0	                           test eax, eax	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400748d	            0x751d	                           jne 0x40074ac	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400748f	         0xfb64306	               movzx eax, byte [rbx + 6]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x4007493	            0x3c3d	                            cmp al, 0x3d	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x4007495	            0x7715	                            ja 0x40074ac	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x4007497	        0x490fa3c6	                             bt r14, rax	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400749b	    0x41bc03000000	                             mov r12d, 3	      5684	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x40074a1	      0xbe06000000	                              mov esi, 6	      5683	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x40074a6	     0xf8251ffffff	                            jb 0x40073fd	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x40074ac	      0xba08000000	                              mov edx, 8	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x40074b1	      0xbe00000000	                              mov esi, 0	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x40074b6	          0x4889df	                            mov rdi, rbx	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x40074b9	      0xe800000000	                          call 0x40074be	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x40074be	            0x85c0	                           test eax, eax	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x40074c0	            0x7508	                           jne 0x40074ca	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x40074c2	         0xfb64308	               movzx eax, byte [rbx + 8]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x40074c6	            0x3c3d	                            cmp al, 0x3d	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x40074c8	            0x7666	                           jbe 0x4007530	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x40074ca	          0x4585ff	                         test r15d, r15d	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0x40074cd	     0xf85bd000000	                           jne 0x4007590	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0x40074d3	            0x31ff	                            xor edi, edi	      5717	syntax.c	FUNCTION_88	CALL_18
0x40074d5	      0xba05000000	                              mov edx, 5	      5717	syntax.c	FUNCTION_88	CALL_18
0x40074da	      0xbe00000000	                              mov esi, 0	      5717	syntax.c	FUNCTION_88	CALL_18
0x40074df	      0xe800000000	                          call 0x40074e4	      5717	syntax.c	FUNCTION_88	CALL_18
0x40074e4	          0x4889c7	                            mov rdi, rax	      5717	syntax.c	FUNCTION_88	CALL_18
0x40074e7	      0xe800000000	                          call 0x40074ec	      5717	syntax.c	FUNCTION_88	CALL_18
0x40074ec	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x40074f1	          0x4885c0	                           test rax, rax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x40074f4	            0x7410	                            je 0x4007506	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x40074f6	           0xfb638	                   movzx edi, byte [rax]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x40074f9	      0xe800000000	                          call 0x40074fe	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x40074fe	            0x85c0	                           test eax, eax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x4007500	     0xf8551feffff	                           jne 0x4007357	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x4007506	            0x31ff	                            xor edi, edi	      5719	syntax.c	FUNCTION_88	CALL_21
0x4007508	      0xba05000000	                              mov edx, 5	      5719	syntax.c	FUNCTION_88	CALL_21
0x400750d	      0xbe00000000	                              mov esi, 0	      5719	syntax.c	FUNCTION_88	CALL_21
0x4007512	      0xe800000000	                          call 0x4007517	      5719	syntax.c	FUNCTION_88	CALL_21
0x4007517	          0x4c89ee	                            mov rsi, r13	      5719	syntax.c	FUNCTION_88	CALL_21
0x400751a	          0x4889c7	                            mov rdi, rax	      5719	syntax.c	FUNCTION_88	CALL_21
0x400751d	      0xe800000000	                          call 0x4007522	      5719	syntax.c	FUNCTION_88	CALL_21
0x4007522	      0xe930feffff	                           jmp 0x4007357	      5719	syntax.c	FUNCTION_88	CALL_21
0x4007527	    0x660f1f840000	                    nop word [rax + rax]	      5719	syntax.c	FUNCTION_88	CALL_21
0x4007530	        0x490fa3c6	                             bt r14, rax	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x4007534	            0x7394	                           jae 0x40074ca	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x4007536	    0x41bc01000000	                             mov r12d, 1	      5690	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x400753c	      0xbe08000000	                              mov esi, 8	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x4007541	      0xe9b7feffff	                           jmp 0x40073fd	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x4007546	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x4007550	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x4007555	      0xe800000000	                          call 0x400755a	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400755a	      0xe9f5feffff	                           jmp 0x4007454	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400755f	              0x90	                                     nop	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x4007560	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4007565	            0x31ff	                            xor edi, edi	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4007567	      0xba05000000	                              mov edx, 5	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400756c	      0xbe00000000	                              mov esi, 0	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4007571	      0xe800000000	                          call 0x4007576	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4007576	          0x4889de	                            mov rsi, rbx	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4007579	          0x4889c7	                            mov rdi, rax	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400757c	      0xe800000000	                          call 0x4007581	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x4007581	      0xe944ffffff	                           jmp 0x40074ca	      5699	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7
0x4007586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5699	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7
0x4007590	      0xbf23000000	                           mov edi, 0x23	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_15
0x4007595	      0xe800000000	                          call 0x400759a	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_15
0x400759a	    0x488b05000000	            mov rax, qword [0x040075a1] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x40075a1	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x40075a5	      0xe800000000	                          call 0x40075aa	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x40075aa	      0xe93dffffff	                           jmp 0x40074ec	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x40075af	      0xe800000000	                          call 0x40075b4	      5720	syntax.c	FUNCTION_88
syn_cmd_sync	SWITCH,0:WHILE,1:DO,0:IF,27:ELSE,13:FOR,0:functions,0:CALL,41	302
0x400bc60	            0x4156	                                push r14	      5841	syntax.c	FUNCTION_91
0x400bc62	            0x4155	                                push r13	      5841	syntax.c	FUNCTION_91
0x400bc64	          0x4989fd	                            mov r13, rdi	      5841	syntax.c	FUNCTION_91
0x400bc67	            0x4154	                                push r12	      5841	syntax.c	FUNCTION_91
0x400bc69	              0x55	                                push rbp	      5841	syntax.c	FUNCTION_91
0x400bc6a	              0x53	                                push rbx	      5841	syntax.c	FUNCTION_91
0x400bc6b	        0x4883ec10	                           sub rsp, 0x10	      5841	syntax.c	FUNCTION_91
0x400bc6f	          0x488b2f	                    mov rbp, qword [rdi]	      5842	syntax.c	FUNCTION_91
0x400bc72	    0x64488b042528	                mov rax, qword fs:[0x28]	      5841	syntax.c	FUNCTION_91
0x400bc7b	      0x4889442408	                mov qword [rsp + 8], rax	      5841	syntax.c	FUNCTION_91
0x400bc80	            0x31c0	                            xor eax, eax	      5841	syntax.c	FUNCTION_91
0x400bc82	         0xfb67d00	                   movzx edi, byte [rbp]	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400bc86	      0xe800000000	                          call 0x400bc8b	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400bc8b	            0x85c0	                           test eax, eax	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400bc8d	     0xf855d040000	                           jne 0x400c0f0	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400bc93	            0x31db	                            xor ebx, ebx	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400bc95	            0xeb45	                           jmp 0x400bcdc	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400bc97	    0x660f1f840000	                    nop word [rax + rax]	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x400bca0	        0x458b4d30	            mov r9d, dword [r13 + 0x30] 	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400bca4	          0x4585c9	                           test r9d, r9d	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400bca7	            0x7512	                           jne 0x400bcbb	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400bca9	    0x488b05000000	            mov rax, qword [0x0400bcb0] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400bcb0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400bcb4	    0x83889c020000	               or dword [rax + 0x29c], 1	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x400bcbb	      0x410fb63c24	                   movzx edi, byte [r12]	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400bcc0	      0xe800000000	                          call 0x400bcc5	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400bcc5	            0x85c0	                           test eax, eax	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400bcc7	     0xf8493020000	                            je 0x400bf60	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x400bccd	        0x418b7d30	            mov edi, dword [r13 + 0x30] 	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bcd1	            0x85ff	                           test edi, edi	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bcd3	     0xf84ff020000	                            je 0x400bfd8	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bcd9	          0x4c89e5	                            mov rbp, r12	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bcdc	         0xfb67d00	                   movzx edi, byte [rbp]	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400bce0	      0xe800000000	                          call 0x400bce5	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400bce5	            0x85c0	                           test eax, eax	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400bce7	     0xf85ab030000	                           jne 0x400c098	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x400bced	          0x4889ef	                            mov rdi, rbp	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400bcf0	      0xe800000000	                          call 0x400bcf5	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400bcf5	          0x4889c7	                            mov rdi, rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400bcf8	        0x48890424	                    mov qword [rsp], rax	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x400bcfc	      0xe800000000	                          call 0x400bd01	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400bd01	          0x4889df	                            mov rdi, rbx	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x400bd04	          0x4989c4	                            mov r12, rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x400bd07	      0xe800000000	                          call 0x400bd0c	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x400bd0c	        0x488b3424	                    mov rsi, qword [rsp]	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400bd10	          0x4889ef	                            mov rdi, rbp	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400bd13	          0x4829ee	                            sub rsi, rbp	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400bd16	      0xe800000000	                          call 0x400bd1b	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400bd1b	      0xbf00000000	                              mov edi, 0	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400bd20	      0xb909000000	                              mov ecx, 9	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400bd25	          0x4889c6	                            mov rsi, rax	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400bd28	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400bd2a	          0x4889c3	                            mov rbx, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x400bd2d	     0xf846dffffff	                            je 0x400bca0	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x400bd33	      0xbf00000000	                              mov edi, 0	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400bd38	      0xb905000000	                              mov ecx, 5	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400bd3d	          0x4889c6	                            mov rsi, rax	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400bd40	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400bd42	     0xf84a0010000	                            je 0x400bee8	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x400bd48	      0xbf00000000	                              mov edi, 0	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400bd4d	      0xb908000000	                              mov ecx, 8	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400bd52	          0x4889c6	                            mov rsi, rax	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400bd55	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400bd57	     0xf848b010000	                            je 0x400bee8	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x400bd5d	      0xbf00000000	                              mov edi, 0	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400bd62	      0xb908000000	                              mov ecx, 8	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400bd67	          0x4889c6	                            mov rsi, rax	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400bd6a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400bd6c	     0xf8476010000	                            je 0x400bee8	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x400bd72	      0xbf00000000	                              mov edi, 0	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400bd77	      0xb90a000000	                            mov ecx, 0xa	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400bd7c	          0x4889c6	                            mov rsi, rax	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400bd7f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400bd81	     0xf8461010000	                            je 0x400bee8	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x400bd87	      0xbf00000000	                              mov edi, 0	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400bd8c	      0xb90a000000	                            mov ecx, 0xa	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400bd91	          0x4889c6	                            mov rsi, rax	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400bd94	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400bd96	     0xf84c4020000	                            je 0x400c060	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x400bd9c	      0xbf00000000	                              mov edi, 0	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400bda1	      0xb909000000	                              mov ecx, 9	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400bda6	          0x4889c6	                            mov rsi, rax	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400bda9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400bdab	     0xf854e030000	                           jne 0x400c0ff	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x400bdb1	      0x410fb60424	                   movzx eax, byte [r12]	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400bdb6	            0x84c0	                             test al, al	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400bdb8	     0xf84ea010000	                            je 0x400bfa8	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x400bdbe	    0x488b15000000	            mov rdx, qword [0x0400bdc5] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400bdc5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400bdc9	    0x4883bac00200	              cmp qword [rdx + 0x2c0], 0	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400bdd1	     0xf8581030000	                           jne 0x400c158	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400bdd7	      0x4d8d742401	                      lea r14, [r12 + 1]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400bddc	            0x31c9	                            xor ecx, ecx	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400bdde	           0xfb6f0	                           movzx esi, al	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400bde1	      0xba01000000	                              mov edx, 1	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400bde6	          0x4c89f7	                            mov rdi, r14	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400bde9	      0xe800000000	                          call 0x400bdee	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400bdee	        0x48890424	                    mov qword [rsp], rax	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x400bdf2	      0x410fb60c24	                   movzx ecx, byte [r12]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400bdf7	            0x3808	                      cmp byte [rax], cl	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400bdf9	     0xf85a9010000	                           jne 0x400bfa8	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x400bdff	        0x418b5530	            mov edx, dword [r13 + 0x30] 	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be03	            0x85d2	                           test edx, edx	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be05	     0xf85c7000000	                           jne 0x400bed2	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be0b	    0x488b15000000	            mov rdx, qword [0x0400be12] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be12	          0x4c29e0	                            sub rax, r12	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be15	          0x4c89f7	                            mov rdi, r14	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be18	          0x8d70ff	                      lea esi, [rax - 1]	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be1b	        0x488b6a10	            mov rbp, qword [rdx + 0x10] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be1f	      0xe800000000	                          call 0x400be24	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be24	          0x4885c0	                           test rax, rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be27	    0x488985c00200	           mov qword [rbp + 0x2c0], rax 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be2e	     0xf8417030000	                            je 0x400c14b	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x400be34	    0x488b05000000	            mov rax, qword [0x0400be3b] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be3b	      0xbe01000000	                              mov esi, 1	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400be40	    0x4c8b25000000	            mov r12, qword [0x0400be47] 	      5945	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be47	    0x48c705000000	               mov qword [0x0400be52], 0	      5946	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be52	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be56	    0x8b8558020000	           mov eax, dword [rbp + 0x258] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be5c	    0x488bbdc00200	           mov rdi, qword [rbp + 0x2c0] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400be63	    0x898500030000	           mov dword [rbp + 0x300], eax 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be69	      0xe800000000	                          call 0x400be6e	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x400be6e	    0x488985c80200	           mov qword [rbp + 0x2c8], rax 	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be75	    0x488b05000000	            mov rax, qword [0x0400be7c] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400be7c	    0x4c8925000000	            mov qword [0x0400be83], r12 	      5949	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x400be83	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x400be87	    0x488dbdd00200	                  lea rdi, [rbp + 0x2d0]	      6691	syntax.c	FUNCTION_108	CALL_1
0x400be8e	      0xe800000000	                          call 0x400be93	      6691	syntax.c	FUNCTION_108	CALL_1
0x400be93	    0x488dbde00200	                  lea rdi, [rbp + 0x2e0]	      6692	syntax.c	FUNCTION_108	CALL_2
0x400be9a	      0xe800000000	                          call 0x400be9f	      6692	syntax.c	FUNCTION_108	CALL_2
0x400be9f	    0x488b05000000	            mov rax, qword [0x0400bea6] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400bea6	    0x48c785f00200	              mov qword [rbp + 0x2f0], 0	      6693	syntax.c	FUNCTION_108
0x400beb1	    0x48c785f80200	              mov qword [rbp + 0x2f8], 0	      6694	syntax.c	FUNCTION_108
0x400bebc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400bec0	    0x4883b8c80200	              cmp qword [rax + 0x2c8], 0	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400bec8	     0xf84a5020000	                            je 0x400c173	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400bece	        0x488b0424	                    mov rax, qword [rsp]	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x400bed2	        0x488d7801	                      lea rdi, [rax + 1]	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400bed6	      0xe800000000	                          call 0x400bedb	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400bedb	          0x4989c4	                            mov r12, rax	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400bede	      0xe9f6fdffff	                           jmp 0x400bcd9	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400bee3	       0xf1f440000	                   nop dword [rax + rax]	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x400bee8	        0x807b0453	                cmp byte [rbx + 4], 0x53	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400beec	     0xf849e000000	                            je 0x400bf90	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400bef2	          0x803b4c	                    cmp byte [rbx], 0x4c	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400bef5	     0xf8405010000	                            je 0x400c000	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400befb	        0x488d4309	                      lea rax, [rbx + 9]	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x400beff	        0x48890424	                    mov qword [rsp], rax	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x400bf03	        0x8078ff3d	                cmp byte [rax - 1], 0x3d	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bf07	     0xf859b000000	                           jne 0x400bfa8	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bf0d	           0xfb600	                   movzx eax, byte [rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bf10	          0x83e830	                           sub eax, 0x30	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bf13	          0x83f809	                              cmp eax, 9	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bf16	     0xf878c000000	                            ja 0x400bfa8	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bf1c	          0x4889e7	                            mov rdi, rsp	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x400bf1f	      0xe800000000	                          call 0x400bf24	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x400bf24	        0x418b7530	            mov esi, dword [r13 + 0x30] 	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400bf28	            0x85f6	                           test esi, esi	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400bf2a	     0xf85a9fdffff	                           jne 0x400bcd9	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x400bf30	        0x807b0442	                cmp byte [rbx + 4], 0x42	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400bf34	    0x488b15000000	            mov rdx, qword [0x0400bf3b] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400bf3b	     0xf84cf000000	                            je 0x400c010	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400bf41	        0x807b0141	                cmp byte [rbx + 1], 0x41	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400bf45	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400bf49	     0xf84d1000000	                            je 0x400c020	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400bf4f	    0x488982a80200	            mov qword [rdx + 0x2a8], rax	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400bf56	      0xe97efdffff	                           jmp 0x400bcd9	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400bf5b	       0xf1f440000	                   nop dword [rax + rax]	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x400bf60	          0x4c89e7	                            mov rdi, r12	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400bf63	      0xe800000000	                          call 0x400bf68	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400bf68	        0x458b4530	            mov r8d, dword [r13 + 0x30] 	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400bf6c	        0x48890424	                    mov qword [rsp], rax	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x400bf70	          0x4585c0	                           test r8d, r8d	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400bf73	     0xf84b7000000	                            je 0x400c030	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x400bf79	          0x4889c7	                            mov rdi, rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400bf7c	      0xe800000000	                          call 0x400bf81	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400bf81	          0x4989c4	                            mov r12, rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400bf84	      0xe950fdffff	                           jmp 0x400bcd9	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400bf89	     0xf1f80000000	                         nop dword [rax]	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x400bf90	        0x488d4306	                      lea rax, [rbx + 6]	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400bf94	        0x48890424	                    mov qword [rsp], rax	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x400bf98	        0x8078ff3d	                cmp byte [rax - 1], 0x3d	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bf9c	     0xf846bffffff	                            je 0x400bf0d	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bfa2	    0x660f1f440000	                    nop word [rax + rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x400bfa8	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x400bfab	      0xe800000000	                          call 0x400bfb0	      5979	syntax.c	FUNCTION_91	CALL_36
0x400bfb0	            0x31ff	                            xor edi, edi	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfb2	      0xba05000000	                              mov edx, 5	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfb7	      0xbe00000000	                              mov esi, 0	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfbc	      0xe800000000	                          call 0x400bfc1	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfc1	          0x4889ee	                            mov rsi, rbp	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfc4	          0x4889c7	                            mov rdi, rax	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfc7	      0xe800000000	                          call 0x400bfcc	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfcc	      0xe9f5000000	                           jmp 0x400c0c6	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfd1	     0xf1f80000000	                         nop dword [rax]	      5981	syntax.c	FUNCTION_91	CALL_38
0x400bfd8	    0x488b05000000	            mov rax, qword [0x0400bfdf] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bfdf	      0xbf00000000	                              mov edi, 0	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bfe4	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bfe8	      0xe800000000	                          call 0x400bfed	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bfed	    0x668985a00200	              mov word [rbp + 0x2a0], ax	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bff4	      0xe9e0fcffff	                           jmp 0x400bcd9	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400bff9	     0xf1f80000000	                         nop dword [rax]	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x400c000	        0x488d430b	                    lea rax, [rbx + 0xb]	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400c004	        0x48890424	                    mov qword [rsp], rax	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400c008	      0xe9f6feffff	                           jmp 0x400bf03	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400c00d	           0xf1f00	                         nop dword [rax]	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x400c010	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400c014	    0x488982b80200	            mov qword [rdx + 0x2b8], rax	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400c01b	      0xe9b9fcffff	                           jmp 0x400bcd9	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x400c020	    0x488982b00200	            mov qword [rdx + 0x2b0], rax	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400c027	      0xe9adfcffff	                           jmp 0x400bcd9	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400c02c	         0xf1f4000	                         nop dword [rax]	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x400c030	    0x488b15000000	            mov rdx, qword [0x0400c037] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c037	          0x4c29e0	                            sub rax, r12	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c03a	          0x4c89e7	                            mov rdi, r12	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c03d	          0x4889c6	                            mov rsi, rax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c040	        0x488b6a10	            mov rbp, qword [rdx + 0x10] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c044	      0xe800000000	                          call 0x400c049	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c049	    0x668985a00200	              mov word [rbp + 0x2a0], ax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c050	        0x488b0424	                    mov rax, qword [rsp]	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c054	      0xe920ffffff	                           jmp 0x400bf79	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c059	     0xf1f80000000	                         nop dword [rax]	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x400c060	        0x418b4d30	            mov ecx, dword [r13 + 0x30] 	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c064	            0x85c9	                           test ecx, ecx	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c066	     0xf856dfcffff	                           jne 0x400bcd9	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c06c	    0x488b05000000	            mov rax, qword [0x0400c073] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c073	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c077	    0x48c780a80200	    mov qword [rax + 0x2a8], 0x7fffffff 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c082	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c08d	      0xe947fcffff	                           jmp 0x400bcd9	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c092	    0x660f1f440000	                    nop word [rax + rax]	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x400c098	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x400c09b	      0xe800000000	                          call 0x400c0a0	      5979	syntax.c	FUNCTION_91	CALL_36
0x400c0a0	          0x4889ef	                            mov rdi, rbp	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400c0a3	      0xe800000000	                          call 0x400c0a8	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400c0a8	      0xbf23000000	                           mov edi, 0x23	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0x400c0ad	        0x49894508	                mov qword [r13 + 8], rax	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x400c0b1	      0xe800000000	                          call 0x400c0b6	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0x400c0b6	    0x488b05000000	            mov rax, qword [0x0400c0bd] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400c0bd	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400c0c1	      0xe800000000	                          call 0x400c0c6	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x400c0c6	      0x488b442408	                mov rax, qword [rsp + 8]	      5988	syntax.c	FUNCTION_91
0x400c0cb	    0x644833042528	                xor rax, qword fs:[0x28]	      5988	syntax.c	FUNCTION_91
0x400c0d4	     0xf85e0000000	                           jne 0x400c1ba	      5988	syntax.c	FUNCTION_91
0x400c0da	        0x4883c410	                           add rsp, 0x10	      5988	syntax.c	FUNCTION_91
0x400c0de	              0x5b	                                 pop rbx	      5988	syntax.c	FUNCTION_91
0x400c0df	              0x5d	                                 pop rbp	      5988	syntax.c	FUNCTION_91
0x400c0e0	            0x415c	                                 pop r12	      5988	syntax.c	FUNCTION_91
0x400c0e2	            0x415d	                                 pop r13	      5988	syntax.c	FUNCTION_91
0x400c0e4	            0x415e	                                 pop r14	      5988	syntax.c	FUNCTION_91
0x400c0e6	              0xc3	                                     ret	      5988	syntax.c	FUNCTION_91
0x400c0e7	    0x660f1f840000	                    nop word [rax + rax]	      5988	syntax.c	FUNCTION_91
0x400c0f0	      0xbe01000000	                              mov esi, 1	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400c0f5	          0x4c89ef	                            mov rdi, r13	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400c0f8	      0xe873f7ffff	                   call sym.syn_cmd_list	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400c0fd	            0xebc7	                           jmp 0x400c0c6	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x400c0ff	        0x4d896500	                    mov qword [r13], r12	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0x400c103	      0xbf00000000	                              mov edi, 0	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400c108	      0xb906000000	                              mov ecx, 6	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400c10d	          0x4889c6	                            mov rsi, rax	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400c110	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400c112	     0xf8493000000	                            je 0x400c1ab	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x400c118	      0xbf00000000	                              mov edi, 0	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400c11d	      0xb907000000	                              mov ecx, 7	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400c122	          0x4889c6	                            mov rsi, rax	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400c125	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400c127	            0x7473	                            je 0x400c19c	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x400c129	      0xbf00000000	                              mov edi, 0	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400c12e	      0xb906000000	                              mov ecx, 6	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400c133	          0x4889c6	                            mov rsi, rax	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400c136	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400c138	     0xf856afeffff	                           jne 0x400bfa8	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x400c13e	      0xbe01000000	                              mov esi, 1	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400c143	          0x4c89ef	                            mov rdi, r13	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400c146	      0xe895a2ffff	                  call sym.syn_cmd_clear	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x400c14b	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x400c14e	      0xe800000000	                          call 0x400c153	      5979	syntax.c	FUNCTION_91	CALL_36
0x400c153	      0xe96effffff	                           jmp 0x400c0c6	      5979	syntax.c	FUNCTION_91	CALL_36
0x400c158	            0x31ff	                            xor edi, edi	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400c15a	      0xba05000000	                              mov edx, 5	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400c15f	      0xbe00000000	                              mov esi, 0	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400c164	      0xe800000000	                          call 0x400c169	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400c169	          0x4889c7	                            mov rdi, rax	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400c16c	      0xe800000000	                          call 0x400c171	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x400c171	            0xebd8	                           jmp 0x400c14b	      5924	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x400c173	    0x488bb8c00200	           mov rdi, qword [rax + 0x2c0] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400c17a	          0x4885ff	                           test rdi, rdi	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400c17d	            0x74cc	                            je 0x400c14b	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400c17f	      0xe800000000	                          call 0x400c184	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400c184	    0x488b05000000	            mov rax, qword [0x0400c18b] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400c18b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400c18f	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400c19a	            0xebaf	                           jmp 0x400c14b	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x400c19c	      0xbe01000000	                              mov esi, 1	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400c1a1	          0x4c89ef	                            mov rdi, r13	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400c1a4	      0xe817b4ffff	                 call sym.syn_cmd_region	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400c1a9	            0xeba0	                           jmp 0x400c14b	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x400c1ab	      0xbe01000000	                              mov esi, 1	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400c1b0	          0x4c89ef	                            mov rdi, r13	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400c1b3	      0xe898bbffff	                  call sym.syn_cmd_match	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400c1b8	            0xeb91	                           jmp 0x400c14b	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x400c1ba	      0xe800000000	                          call 0x400c1bf	      5988	syntax.c	FUNCTION_91
get_syntax_attr	SWITCH,0:WHILE,1:DO,0:IF,4:ELSE,0:FOR,0:functions,0:CALL,3	78
0x400ae90	          0x4885f6	                           test rsi, rsi	      1852	syntax.c	FUNCTION_27	IF_1
0x400ae93	    0x488b05000000	            mov rax, qword [0x0400ae9a] 	      1855	syntax.c	FUNCTION_27	IF_1
0x400ae9a	            0x741f	                            je 0x400aebb	      1852	syntax.c	FUNCTION_27	IF_1
0x400ae9c	    0x8b885c020000	           mov ecx, dword [rax + 0x25c] 	      1855	syntax.c	FUNCTION_27	IF_1
0x400aea2	            0x85c9	                           test ecx, ecx	      1857	syntax.c	FUNCTION_27	IF_1
0x400aea4	     0xf85a6000000	                           jne 0x400af50	      1857	syntax.c	FUNCTION_27	IF_1
0x400aeaa	    0x448b80900200	           mov r8d, dword [rax + 0x290] 	      1857	syntax.c	FUNCTION_27	IF_1
0x400aeb1	            0x31c9	                            xor ecx, ecx	      1857	syntax.c	FUNCTION_27	IF_1
0x400aeb3	          0x4585c0	                           test r8d, r8d	      1857	syntax.c	FUNCTION_27	IF_1
0x400aeb6	           0xf94c1	                                 sete cl	      1857	syntax.c	FUNCTION_27	IF_1
0x400aeb9	            0x890e	                    mov dword [rsi], ecx	      1855	syntax.c	FUNCTION_27	IF_1
0x400aebb	    0x4883b8100300	              cmp qword [rax + 0x310], 0	      1860	syntax.c	FUNCTION_27	IF_2
0x400aec3	     0xf84f7000000	                            je 0x400afc0	      1860	syntax.c	FUNCTION_27	IF_2
0x400aec9	            0x4155	                                push r13	      1849	syntax.c	FUNCTION_27
0x400aecb	            0x4154	                                push r12	      1849	syntax.c	FUNCTION_27
0x400aecd	          0x4189d4	                           mov r12d, edx	      1849	syntax.c	FUNCTION_27
0x400aed0	              0x55	                                push rbp	      1849	syntax.c	FUNCTION_27
0x400aed1	              0x53	                                push rbx	      1849	syntax.c	FUNCTION_27
0x400aed2	          0x4889f5	                            mov rbp, rsi	      1849	syntax.c	FUNCTION_27
0x400aed5	            0x89fb	                            mov ebx, edi	      1849	syntax.c	FUNCTION_27
0x400aed7	        0x4883ec08	                              sub rsp, 8	      1849	syntax.c	FUNCTION_27
0x400aedb	    0x488b05000000	            mov rax, qword [0x0400aee2] 	      1864	syntax.c	FUNCTION_27	IF_3
0x400aee2	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      1864	syntax.c	FUNCTION_27	IF_3
0x400aee9	          0x4885c0	                           test rax, rax	      1864	syntax.c	FUNCTION_27	IF_3
0x400aeec	            0x7e08	                           jle 0x400aef6	      1864	syntax.c	FUNCTION_27	IF_3
0x400aeee	            0x39c7	                            cmp edi, eax	      1864	syntax.c	FUNCTION_27	IF_3
0x400aef0	     0xf8d8a000000	                           jge 0x400af80	      1864	syntax.c	FUNCTION_27	IF_3
0x400aef6	    0x8b0500000000	            mov eax, dword [0x0400aefc] 	      1879	syntax.c	FUNCTION_27	IF_4
0x400aefc	            0x85c0	                           test eax, eax	      1879	syntax.c	FUNCTION_27	IF_4
0x400aefe	            0x7460	                            je 0x400af60	      1879	syntax.c	FUNCTION_27	IF_4
0x400af00	    0x8b0d00000000	            mov ecx, dword [0x0400af06] 	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400af06	            0x39cb	                            cmp ebx, ecx	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400af08	     0xf8c9f000000	                            jl 0x400afad	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400af0e	          0x4531ed	                          xor r13d, r13d	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af11	     0xf1f80000000	                         nop dword [rax]	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af18	            0x39cb	                            cmp ebx, ecx	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af1a	          0x4489e9	                           mov ecx, r13d	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af1d	          0x4889ea	                            mov rdx, rbp	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af20	        0x410f44cc	                         cmove ecx, r12d	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af24	      0xbe01000000	                              mov esi, 1	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af29	            0x31ff	                            xor edi, edi	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af2b	      0xe8f0dfffff	               call sym.syn_current_attr	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400af30	    0x8b1500000000	            mov edx, dword [0x0400af36] 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x400af36	          0x8d4a01	                      lea ecx, [rdx + 1]	      1889	syntax.c	FUNCTION_27	WHILE_1
0x400af39	            0x39cb	                            cmp ebx, ecx	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400af3b	    0x890d00000000	            mov dword [0x0400af41], ecx 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x400af41	            0x7dd5	                           jge 0x400af18	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400af43	        0x4883c408	                              add rsp, 8	      1893	syntax.c	FUNCTION_27
0x400af47	              0x5b	                                 pop rbx	      1893	syntax.c	FUNCTION_27
0x400af48	              0x5d	                                 pop rbp	      1893	syntax.c	FUNCTION_27
0x400af49	            0x415c	                                 pop r12	      1893	syntax.c	FUNCTION_27
0x400af4b	            0x415d	                                 pop r13	      1893	syntax.c	FUNCTION_27
0x400af4d	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
0x400af4e	            0x6690	                                     nop	      1893	syntax.c	FUNCTION_27
0x400af50	          0x83f901	                              cmp ecx, 1	      1857	syntax.c	FUNCTION_27	IF_1
0x400af53	           0xf94c1	                                 sete cl	      1857	syntax.c	FUNCTION_27	IF_1
0x400af56	           0xfb6c9	                           movzx ecx, cl	      1857	syntax.c	FUNCTION_27	IF_1
0x400af59	            0x890e	                    mov dword [rsi], ecx	      1855	syntax.c	FUNCTION_27	IF_1
0x400af5b	      0xe95bffffff	                           jmp 0x400aebb	      1855	syntax.c	FUNCTION_27	IF_1
0x400af60	    0xc70500000000	           mov dword [0x0400af6a], 0x90 	      1740	syntax.c	FUNCTION_24
0x400af6a	    0xc70500000000	               mov dword [0x0400af74], 3	      1741	syntax.c	FUNCTION_24
0x400af74	            0xeb8a	                           jmp 0x400af00	      1741	syntax.c	FUNCTION_24
0x400af76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1741	syntax.c	FUNCTION_24
0x400af80	      0xe82b53ffff	            call sym.clear_current_state	      1866	syntax.c	FUNCTION_27	IF_3	CALL_1
0x400af85	    0xc70500000000	               mov dword [0x0400af8f], 0	      1868	syntax.c	FUNCTION_27	IF_3
0x400af8f	    0xc70500000000	               mov dword [0x0400af99], 0	      1869	syntax.c	FUNCTION_27	IF_3
0x400af99	    0xc70500000000	               mov dword [0x0400afa3], 0	      1872	syntax.c	FUNCTION_27	IF_3
0x400afa3	    0xc70500000000	               mov dword [0x0400afad], 0	      1873	syntax.c	FUNCTION_27	IF_3
0x400afad	        0x4883c408	                              add rsp, 8	      1893	syntax.c	FUNCTION_27
0x400afb1	            0x31c0	                            xor eax, eax	      1875	syntax.c	FUNCTION_27	IF_3
0x400afb3	              0x5b	                                 pop rbx	      1893	syntax.c	FUNCTION_27
0x400afb4	              0x5d	                                 pop rbp	      1893	syntax.c	FUNCTION_27
0x400afb5	            0x415c	                                 pop r12	      1893	syntax.c	FUNCTION_27
0x400afb7	            0x415d	                                 pop r13	      1893	syntax.c	FUNCTION_27
0x400afb9	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
0x400afba	    0x660f1f440000	                    nop word [rax + rax]	      1893	syntax.c	FUNCTION_27
0x400afc0	            0x31c0	                            xor eax, eax	      1861	syntax.c	FUNCTION_27	IF_2
0x400afc2	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
syn_list_one	SWITCH,0:WHILE,2:DO,0:IF,12:ELSE,3:FOR,1:functions,0:CALL,25	257
0x400b440	            0x4157	                                push r15	      4076	syntax.c	FUNCTION_66
0x400b442	            0x4156	                                push r14	      4076	syntax.c	FUNCTION_66
0x400b444	          0x4189ff	                           mov r15d, edi	      4076	syntax.c	FUNCTION_66
0x400b447	            0x4155	                                push r13	      4076	syntax.c	FUNCTION_66
0x400b449	            0x4154	                                push r12	      4076	syntax.c	FUNCTION_66
0x400b44b	            0x31ff	                            xor edi, edi	      4076	syntax.c	FUNCTION_66
0x400b44d	              0x55	                                push rbp	      4076	syntax.c	FUNCTION_66
0x400b44e	              0x53	                                push rbx	      4076	syntax.c	FUNCTION_66
0x400b44f	          0x4189f5	                           mov r13d, esi	      4076	syntax.c	FUNCTION_66
0x400b452	        0x4883ec18	                           sub rsp, 0x18	      4076	syntax.c	FUNCTION_66
0x400b456	            0x85f6	                           test esi, esi	      4108	syntax.c	FUNCTION_66	IF_1
0x400b458	    0x448b25000000	           mov r12d, dword [0x0400b45f] 	      4105	syntax.c	FUNCTION_66	CALL_1
0x400b45f	        0x8954240c	              mov dword [rsp + 0xc], edx	      4076	syntax.c	FUNCTION_66
0x400b463	     0xf84e7010000	                            je 0x400b650	      4108	syntax.c	FUNCTION_66	IF_1
0x400b469	    0x488b05000000	            mov rax, qword [0x0400b470] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b470	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b474	    0x8b8a60020000	           mov ecx, dword [rdx + 0x260] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b47a	            0x85c9	                           test ecx, ecx	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b47c	     0xf8e8e010000	                           jle 0x400b610	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b482	    0x8b0d00000000	            mov ecx, dword [0x0400b488] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b488	            0x85c9	                           test ecx, ecx	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b48a	     0xf8580010000	                           jne 0x400b610	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b490	            0x31db	                            xor ebx, ebx	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b492	            0xeb25	                           jmp 0x400b4b9	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b494	         0xf1f4000	                         nop dword [rax]	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b498	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b49c	          0x83c301	                              add ebx, 1	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b49f	    0x399a60020000	           cmp dword [rdx + 0x260], ebx 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b4a5	     0xf8e65010000	                           jle 0x400b610	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b4ab	    0x8b0d00000000	            mov ecx, dword [0x0400b4b1] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b4b1	            0x85c9	                           test ecx, ecx	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b4b3	     0xf8557010000	                           jne 0x400b610	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b4b9	          0x4863cb	                         movsxd rcx, ebx	      4118	syntax.c	FUNCTION_66	FOR_1
0x400b4bc	        0x488d2c89	                  lea rbp, [rcx + rcx*4]	      4118	syntax.c	FUNCTION_66	FOR_1
0x400b4c0	        0x48c1e505	                              shl rbp, 5	      4118	syntax.c	FUNCTION_66	FOR_1
0x400b4c4	          0x4989ee	                            mov r14, rbp	      4118	syntax.c	FUNCTION_66	FOR_1
0x400b4c7	    0x4c03b2700200	            add r14, qword [rdx + 0x270]	      4118	syntax.c	FUNCTION_66	FOR_1
0x400b4ce	      0x410fbf5654	           movsx edx, word [r14 + 0x54] 	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400b4d3	          0x4139d7	                           cmp r15d, edx	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400b4d6	            0x75c0	                           jne 0x400b498	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400b4d8	      0x410fbe5601	               movsx edx, byte [r14 + 1]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400b4dd	          0x4139d5	                           cmp r13d, edx	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400b4e0	            0x75b6	                           jne 0x400b498	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x400b4e2	          0x4489fa	                           mov edx, r15d	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400b4e5	      0xbee7030000	                          mov esi, 0x3e7	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400b4ea	      0xe851fbffff	                call sym.syn_list_header	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x400b4ef	        0x410fb606	                   movzx eax, byte [r14]	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x400b4f3	    0xc70500000000	               mov dword [0x0400b4fd], 0	      4124	syntax.c	FUNCTION_66	FOR_1
0x400b4fd	            0x3c01	                               cmp al, 1	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x400b4ff	     0xf840b030000	                            je 0x400b810	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x400b505	            0x3c02	                               cmp al, 2	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x400b507	     0xf840d020000	                            je 0x400b71a	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x400b50d	        0x418b7624	            mov esi, dword [r14 + 0x24] 	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x400b511	          0x4489e2	                           mov edx, r12d	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x400b514	      0xbf00000000	                              mov edi, 0	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x400b519	      0xe84263ffff	                 call sym.syn_list_flags	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x400b51e	        0x498b7640	            mov rsi, qword [r14 + 0x40] 	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x400b522	          0x4885f6	                           test rsi, rsi	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x400b525	            0x740d	                            je 0x400b534	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x400b527	          0x4489e2	                           mov edx, r12d	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x400b52a	      0xbf00000000	                              mov edi, 0	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x400b52f	      0xe8cc61ffff	                    call sym.put_id_list	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x400b534	        0x498b7658	            mov rsi, qword [r14 + 0x58] 	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x400b538	          0x4885f6	                           test rsi, rsi	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x400b53b	            0x740d	                            je 0x400b54a	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x400b53d	          0x4489e2	                           mov edx, r12d	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x400b540	      0xbf00000000	                              mov edi, 0	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x400b545	      0xe8b661ffff	                    call sym.put_id_list	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x400b54a	        0x498b7648	            mov rsi, qword [r14 + 0x48] 	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x400b54e	          0x4885f6	                           test rsi, rsi	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x400b551	            0x741e	                            je 0x400b571	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x400b553	          0x4489e2	                           mov edx, r12d	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x400b556	      0xbf00000000	                              mov edi, 0	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x400b55b	      0xe8a061ffff	                    call sym.put_id_list	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x400b560	        0x418b7624	            mov esi, dword [r14 + 0x24] 	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x400b564	          0x4489e2	                           mov edx, r12d	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x400b567	      0xbf00000000	                              mov edi, 0	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x400b56c	      0xe8ef62ffff	                 call sym.syn_list_flags	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x400b571	        0x418b4624	            mov eax, dword [r14 + 0x24] 	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x400b575	            0xa830	                           test al, 0x30	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x400b577	     0xf8423010000	                            je 0x400b6a0	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x400b57d	            0xa810	                           test al, 0x10	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x400b57f	          0x4489e6	                           mov esi, r12d	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x400b582	     0xf8483010000	                            je 0x400b70b	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x400b588	      0xbf00000000	                              mov edi, 0	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x400b58d	      0xe800000000	                          call 0x400b592	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x400b592	      0xbf20000000	                           mov edi, 0x20	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_18
0x400b597	      0xe800000000	                          call 0x400b59c	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_18
0x400b59c	        0x49634630	         movsxd rax, dword [r14 + 0x30] 	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400b5a0	            0x85c0	                           test eax, eax	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400b5a2	     0xf888c020000	                            js 0x400b834	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400b5a8	    0x488b15000000	            mov rdx, qword [0x0400b5af] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5af	        0x488d0480	                  lea rax, [rax + rax*4]	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400b5b3	        0x48c1e005	                              shl rax, 5	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400b5b7	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5bb	    0x480382700200	            add rax, qword [rdx + 0x270]	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x400b5c2	      0x480fbf4054	           movsx rax, word [rax + 0x54] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5c7	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5cb	        0x488d0450	                  lea rax, [rax + rdx*2]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5cf	    0x488b15000000	            mov rdx, qword [0x0400b5d6] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5d6	        0x488d04c2	                  lea rax, [rdx + rax*8]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5da	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5e1	      0xe800000000	                          call 0x400b5e6	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x400b5e6	      0xbf20000000	                           mov edi, 0x20	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x400b5eb	          0x83c301	                              add ebx, 1	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b5ee	      0xe800000000	                          call 0x400b5f3	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x400b5f3	    0x488b05000000	            mov rax, qword [0x0400b5fa] 	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x400b5fa	      0xbf01000000	                              mov edi, 1	      4123	syntax.c	FUNCTION_66	FOR_1
0x400b5ff	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b603	    0x399a60020000	           cmp dword [rdx + 0x260], ebx 	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b609	     0xf8f9cfeffff	                            jg 0x400b4ab	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b60f	              0x90	                                     nop	      4116	syntax.c	FUNCTION_66	FOR_1
0x400b610	          0x4963c7	                        movsxd rax, r15d	      4173	syntax.c	FUNCTION_66	IF_12
0x400b613	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4173	syntax.c	FUNCTION_66	IF_12
0x400b617	        0x488d1c50	                  lea rbx, [rax + rdx*2]	      4173	syntax.c	FUNCTION_66	IF_12
0x400b61b	    0x488b05000000	            mov rax, qword [0x0400b622] 	      4173	syntax.c	FUNCTION_66	IF_12
0x400b622	        0x48c1e303	                              shl rbx, 3	      4173	syntax.c	FUNCTION_66	IF_12
0x400b626	        0x8b4418f0	       mov eax, dword [rax + rbx - 0x10]	      4173	syntax.c	FUNCTION_66	IF_12
0x400b62a	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12
0x400b62c	            0x7412	                            je 0x400b640	      4173	syntax.c	FUNCTION_66	IF_12
0x400b62e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4173	syntax.c	FUNCTION_66	IF_12
0x400b632	             0x9f8	                             or eax, edi	      4173	syntax.c	FUNCTION_66	IF_12
0x400b634	            0x740a	                            je 0x400b640	      4173	syntax.c	FUNCTION_66	IF_12
0x400b636	    0x8b0500000000	            mov eax, dword [0x0400b63c] 	      4173	syntax.c	FUNCTION_66	IF_12
0x400b63c	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12
0x400b63e	            0x7478	                            je 0x400b6b8	      4173	syntax.c	FUNCTION_66	IF_12
0x400b640	        0x4883c418	                           add rsp, 0x18	      4180	syntax.c	FUNCTION_66
0x400b644	              0x5b	                                 pop rbx	      4180	syntax.c	FUNCTION_66
0x400b645	              0x5d	                                 pop rbp	      4180	syntax.c	FUNCTION_66
0x400b646	            0x415c	                                 pop r12	      4180	syntax.c	FUNCTION_66
0x400b648	            0x415d	                                 pop r13	      4180	syntax.c	FUNCTION_66
0x400b64a	            0x415e	                                 pop r14	      4180	syntax.c	FUNCTION_66
0x400b64c	            0x415f	                                 pop r15	      4180	syntax.c	FUNCTION_66
0x400b64e	              0xc3	                                     ret	      4180	syntax.c	FUNCTION_66
0x400b64f	              0x90	                                     nop	      4180	syntax.c	FUNCTION_66
0x400b650	    0x488b05000000	            mov rax, qword [0x0400b657] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400b657	          0x4589e0	                           mov r8d, r12d	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400b65a	            0x31c9	                            xor ecx, ecx	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400b65c	          0x4489ff	                           mov edi, r15d	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400b65f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400b663	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400b667	        0x488b7008	                mov rsi, qword [rax + 8]	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400b66b	      0xe8f0faffff	      call sym.syn_list_keywords.isra.17	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x400b670	    0x488b15000000	            mov rdx, qword [0x0400b677] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b677	          0x4489ff	                           mov edi, r15d	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b67a	          0x4589e0	                           mov r8d, r12d	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b67d	            0x89c1	                            mov ecx, eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b67f	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b683	    0x488b96480100	           mov rdx, qword [rsi + 0x148] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b68a	    0x488bb6300100	           mov rsi, qword [rsi + 0x130] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b691	      0xe8cafaffff	      call sym.syn_list_keywords.isra.17	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b696	            0x89c7	                            mov edi, eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b698	      0xe9ccfdffff	                           jmp 0x400b469	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b69d	           0xf1f00	                         nop dword [rax]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x400b6a0	      0xbf01000000	                              mov edi, 1	      4123	syntax.c	FUNCTION_66	FOR_1
0x400b6a5	    0x488b05000000	            mov rax, qword [0x0400b6ac] 	      4123	syntax.c	FUNCTION_66	FOR_1
0x400b6ac	      0xe9e7fdffff	                           jmp 0x400b498	      4123	syntax.c	FUNCTION_66	FOR_1
0x400b6b1	     0xf1f80000000	                         nop dword [rax]	      4123	syntax.c	FUNCTION_66	FOR_1
0x400b6b8	          0x4489fa	                           mov edx, r15d	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x400b6bb	      0xbee7030000	                          mov esi, 0x3e7	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x400b6c0	      0xe87bf9ffff	                call sym.syn_list_header	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x400b6c5	          0x4489e6	                           mov esi, r12d	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x400b6c8	      0xbf00000000	                              mov edi, 0	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x400b6cd	      0xe800000000	                          call 0x400b6d2	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x400b6d2	      0xbf20000000	                           mov edi, 0x20	      4177	syntax.c	FUNCTION_66	IF_12	CALL_24
0x400b6d7	      0xe800000000	                          call 0x400b6dc	      4177	syntax.c	FUNCTION_66	IF_12	CALL_24
0x400b6dc	    0x488b15000000	            mov rdx, qword [0x0400b6e3] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x400b6e3	      0x4863441af0	    movsxd rax, dword [rdx + rbx - 0x10]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x400b6e8	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x400b6ec	        0x488d0448	                  lea rax, [rax + rcx*2]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x400b6f0	    0x488bbcc268ff	     mov rdi, qword [rdx + rax*8 - 0x98]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x400b6f8	        0x4883c418	                           add rsp, 0x18	      4180	syntax.c	FUNCTION_66
0x400b6fc	              0x5b	                                 pop rbx	      4180	syntax.c	FUNCTION_66
0x400b6fd	              0x5d	                                 pop rbp	      4180	syntax.c	FUNCTION_66
0x400b6fe	            0x415c	                                 pop r12	      4180	syntax.c	FUNCTION_66
0x400b700	            0x415d	                                 pop r13	      4180	syntax.c	FUNCTION_66
0x400b702	            0x415e	                                 pop r14	      4180	syntax.c	FUNCTION_66
0x400b704	            0x415f	                                 pop r15	      4180	syntax.c	FUNCTION_66
0x400b706	      0xe900000000	                           jmp 0x400b70b	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x400b70b	      0xbf00000000	                              mov edi, 0	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x400b710	      0xe800000000	                          call 0x400b715	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x400b715	      0xe978feffff	                           jmp 0x400b592	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x400b71a	    0x488b05000000	            mov rax, qword [0x0400b721] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b721	          0x4889ee	                            mov rsi, rbp	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b724	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b728	    0x4803b2700200	            add rsi, qword [rdx + 0x270]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b72f	           0xfb60e	                   movzx ecx, byte [rsi]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b732	          0x4889f2	                            mov rdx, rsi	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b735	          0x80f902	                               cmp cl, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b738	            0x754a	                           jne 0x400b784	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b73a	    0x4881c5a00000	                           add rbp, 0xa0	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b741	     0xf1f80000000	                         nop dword [rax]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b748	          0x4489e1	                           mov ecx, r12d	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400b74b	      0xbf00000000	                              mov edi, 0	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400b750	      0xbe3d000000	                           mov esi, 0x3d	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400b755	      0xe85661ffff	                    call sym.put_pattern	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400b75a	    0x488b05000000	            mov rax, qword [0x0400b761] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b761	          0x4889ef	                            mov rdi, rbp	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b764	          0x83c301	                              add ebx, 1	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400b767	    0x4881c5a00000	                           add rbp, 0xa0	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x400b76e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b772	    0x4803ba700200	            add rdi, qword [rdx + 0x270]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b779	           0xfb60f	                   movzx ecx, byte [rdi]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b77c	          0x4889fa	                            mov rdx, rdi	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b77f	          0x80f902	                               cmp cl, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b782	            0x74c4	                            je 0x400b748	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x400b784	          0x80f904	                               cmp cl, 4	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x400b787	     0xf84b6000000	                            je 0x400b843	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x400b78d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b791	    0x3b9860020000	           cmp ebx, dword [rax + 0x260] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b797	            0x7d65	                           jge 0x400b7fe	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b799	          0x4863d3	                         movsxd rdx, ebx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b79c	        0x488d2c92	                  lea rbp, [rdx + rdx*4]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7a0	        0x48c1e505	                              shl rbp, 5	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7a4	          0x4889ea	                            mov rdx, rbp	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7a7	    0x480390700200	            add rdx, qword [rax + 0x270]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7ae	          0x803a03	                       cmp byte [rdx], 3	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7b1	            0x754b	                           jne 0x400b7fe	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7b3	    0x4881c5a00000	                           add rbp, 0xa0	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7ba	            0xeb1a	                           jmp 0x400b7d6	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7bc	         0xf1f4000	                         nop dword [rax]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7c0	          0x4889ea	                            mov rdx, rbp	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7c3	    0x480390700200	            add rdx, qword [rax + 0x270]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7ca	    0x4881c5a00000	                           add rbp, 0xa0	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7d1	          0x803a03	                       cmp byte [rdx], 3	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7d4	            0x7528	                           jne 0x400b7fe	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7d6	          0x4489e1	                           mov ecx, r12d	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x400b7d9	      0xbe3d000000	                           mov esi, 0x3d	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x400b7de	      0xbf00000000	                              mov edi, 0	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x400b7e3	      0xe8c860ffff	                    call sym.put_pattern	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x400b7e8	    0x488b05000000	            mov rax, qword [0x0400b7ef] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7ef	          0x83c301	                              add ebx, 1	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x400b7f2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7f6	    0x399860020000	           cmp dword [rax + 0x260], ebx 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7fc	            0x7fc2	                            jg 0x400b7c0	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x400b7fe	      0xbf20000000	                           mov edi, 0x20	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400b803	          0x83eb01	                              sub ebx, 1	      4139	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x400b806	      0xe800000000	                          call 0x400b80b	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400b80b	      0xe9fdfcffff	                           jmp 0x400b50d	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x400b810	          0x4489e1	                           mov ecx, r12d	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x400b813	          0x4c89f2	                            mov rdx, r14	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x400b816	      0xbe20000000	                           mov esi, 0x20	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x400b81b	      0xbf00000000	                              mov edi, 0	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x400b820	      0xe88b60ffff	                    call sym.put_pattern	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x400b825	      0xbf20000000	                           mov edi, 0x20	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x400b82a	      0xe800000000	                          call 0x400b82f	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x400b82f	      0xe9d9fcffff	                           jmp 0x400b50d	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x400b834	      0xbf00000000	                              mov edi, 0	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_20
0x400b839	      0xe800000000	                          call 0x400b83e	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_20
0x400b83e	      0xe9a3fdffff	                           jmp 0x400b5e6	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_20
0x400b843	          0x4489e1	                           mov ecx, r12d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x400b846	      0xbe3d000000	                           mov esi, 0x3d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x400b84b	      0xbf00000000	                              mov edi, 0	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x400b850	      0xe85b60ffff	                    call sym.put_pattern	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x400b855	          0x83c301	                              add ebx, 1	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x400b858	    0x488b05000000	            mov rax, qword [0x0400b85f] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x400b85f	      0xe929ffffff	                           jmp 0x400b78d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
syn_cmd_match	SWITCH,0:WHILE,0:DO,0:IF,8:ELSE,1:FOR,0:functions,0:CALL,21	183
0x4007d50	            0x4156	                                push r14	      5027	syntax.c	FUNCTION_80
0x4007d52	            0x4155	                                push r13	      5027	syntax.c	FUNCTION_80
0x4007d54	          0x4531f6	                          xor r14d, r14d	      5044	syntax.c	FUNCTION_80
0x4007d57	            0x4154	                                push r12	      5027	syntax.c	FUNCTION_80
0x4007d59	              0x55	                                push rbp	      5027	syntax.c	FUNCTION_80
0x4007d5a	          0x4189f4	                           mov r12d, esi	      5027	syntax.c	FUNCTION_80
0x4007d5d	              0x53	                                push rbx	      5027	syntax.c	FUNCTION_80
0x4007d5e	          0x4889fb	                            mov rbx, rdi	      5027	syntax.c	FUNCTION_80
0x4007d61	    0x4881ec000100	                          sub rsp, 0x100	      5027	syntax.c	FUNCTION_80
0x4007d68	          0x4c8b2f	                    mov r13, qword [rdi]	      5028	syntax.c	FUNCTION_80
0x4007d6b	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5039	syntax.c	FUNCTION_80	CALL_1
0x4007d70	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5035	syntax.c	FUNCTION_80
0x4007d78	    0xc74424140000	               mov dword [rsp + 0x14], 0	      5036	syntax.c	FUNCTION_80
0x4007d80	    0x64488b042528	                mov rax, qword fs:[0x28]	      5027	syntax.c	FUNCTION_80
0x4007d89	    0x48898424f800	             mov qword [rsp + 0xf8], rax	      5027	syntax.c	FUNCTION_80
0x4007d91	            0x31c0	                            xor eax, eax	      5027	syntax.c	FUNCTION_80
0x4007d93	          0x4c89ef	                            mov rdi, r13	      5039	syntax.c	FUNCTION_80	CALL_1
0x4007d96	      0x488d6c2450	                   lea rbp, [rsp + 0x50]	        90	string3.h	FUNCTION_173	CALL_6
0x4007d9b	      0xe8c08bffff	                 call sym.get_group_name	      5039	syntax.c	FUNCTION_80	CALL_1
0x4007da0	      0x488d542410	                   lea rdx, [rsp + 0x10]	      5044	syntax.c	FUNCTION_80
0x4007da5	          0x4585e4	                         test r12d, r12d	      5044	syntax.c	FUNCTION_80
0x4007da8	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007dab	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007db0	          0x4889c7	                            mov rdi, rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007db3	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5042	syntax.c	FUNCTION_80
0x4007dbb	        0x490f44d6	                          cmove rdx, r14	      5044	syntax.c	FUNCTION_80
0x4007dbf	    0xc74424240000	               mov dword [rsp + 0x24], 0	      5043	syntax.c	FUNCTION_80
0x4007dc7	      0xc644243001	                mov byte [rsp + 0x30], 1	      5045	syntax.c	FUNCTION_80
0x4007dcc	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5044	syntax.c	FUNCTION_80
0x4007dd1	      0x488d542414	                   lea rdx, [rsp + 0x14]	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007dd6	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5046	syntax.c	FUNCTION_80
0x4007ddf	    0x48c744244000	               mov qword [rsp + 0x40], 0	      5047	syntax.c	FUNCTION_80
0x4007de8	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5048	syntax.c	FUNCTION_80
0x4007df1	      0xe8daf0ffff	                call sym.get_syn_options	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007df6	          0x4889c2	                            mov rdx, rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x4007df9	    0x488b05000000	            mov rax, qword [0x04007e00] 	      5728	syntax.c	FUNCTION_89
0x4007e00	      0xb914000000	                           mov ecx, 0x14	        90	string3.h	FUNCTION_173	CALL_6
0x4007e05	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_173	CALL_6
0x4007e08	          0x4889ee	                            mov rsi, rbp	      5054	syntax.c	FUNCTION_80	CALL_5
0x4007e0b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5728	syntax.c	FUNCTION_89
0x4007e0f	    0xc78068020000	          mov dword [rax + 0x268], 0xa0 	      5728	syntax.c	FUNCTION_89
0x4007e19	    0xc7806c020000	            mov dword [rax + 0x26c], 0xa	      5729	syntax.c	FUNCTION_89
0x4007e23	          0x4c89f0	                            mov rax, r14	        90	string3.h	FUNCTION_173	CALL_6
0x4007e26	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x4007e29	          0x4889d7	                            mov rdi, rdx	      5054	syntax.c	FUNCTION_80	CALL_5
0x4007e2c	      0xe87f8bffff	                call sym.get_syn_pattern	      5054	syntax.c	FUNCTION_80	CALL_5
0x4007e31	          0x4989c6	                            mov r14, rax	      5054	syntax.c	FUNCTION_80	CALL_5
0x4007e34	      0xe800000000	                          call 0x4007e39	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007e39	            0x85c0	                           test eax, eax	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007e3b	            0x740d	                            je 0x4007e4a	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007e3d	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007e41	          0xf6c408	                              test ah, 8	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007e44	     0xf8426010000	                            je 0x4007f70	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x4007e4a	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007e4d	      0x488d542414	                   lea rdx, [rsp + 0x14]	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007e52	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007e57	          0x4c89f7	                            mov rdi, r14	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007e5a	      0xe871f0ffff	                call sym.get_syn_options	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007e5f	          0x4885c0	                           test rax, rax	      5061	syntax.c	FUNCTION_80	IF_2
0x4007e62	          0x4989c6	                            mov r14, rax	      5059	syntax.c	FUNCTION_80	CALL_7
0x4007e65	            0x741d	                            je 0x4007e84	      5061	syntax.c	FUNCTION_80	IF_2
0x4007e67	          0x4889c7	                            mov rdi, rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x4007e6a	      0xe800000000	                          call 0x4007e6f	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x4007e6f	        0x48894308	                mov qword [rbx + 8], rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x4007e73	        0x410fb63e	                   movzx edi, byte [r14]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4007e77	      0xe800000000	                          call 0x4007e7c	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4007e7c	            0x85c0	                           test eax, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4007e7e	     0xf857c000000	                           jne 0x4007f00	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4007e84	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      5113	syntax.c	FUNCTION_80	CALL_15
0x4007e8c	      0xe800000000	                          call 0x4007e91	      5113	syntax.c	FUNCTION_80	CALL_15
0x4007e91	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      5114	syntax.c	FUNCTION_80	CALL_16
0x4007e99	      0xe800000000	                          call 0x4007e9e	      5114	syntax.c	FUNCTION_80	CALL_16
0x4007e9e	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5115	syntax.c	FUNCTION_80	CALL_17
0x4007ea3	      0xe800000000	                          call 0x4007ea8	      5115	syntax.c	FUNCTION_80	CALL_17
0x4007ea8	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5116	syntax.c	FUNCTION_80	CALL_18
0x4007ead	      0xe800000000	                          call 0x4007eb2	      5116	syntax.c	FUNCTION_80	CALL_18
0x4007eb2	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5117	syntax.c	FUNCTION_80	CALL_19
0x4007eb7	      0xe800000000	                          call 0x4007ebc	      5117	syntax.c	FUNCTION_80	CALL_19
0x4007ebc	      0xbe00000000	                              mov esi, 0	      5120	syntax.c	FUNCTION_80	CALL_21
0x4007ec1	            0x31ff	                            xor edi, edi	      5120	syntax.c	FUNCTION_80	CALL_21
0x4007ec3	      0xba05000000	                              mov edx, 5	      5120	syntax.c	FUNCTION_80	CALL_21
0x4007ec8	      0xe800000000	                          call 0x4007ecd	      5120	syntax.c	FUNCTION_80	CALL_21
0x4007ecd	          0x4c89ee	                            mov rsi, r13	      5120	syntax.c	FUNCTION_80	CALL_21
0x4007ed0	          0x4889c7	                            mov rdi, rax	      5120	syntax.c	FUNCTION_80	CALL_21
0x4007ed3	      0xe800000000	                          call 0x4007ed8	      5120	syntax.c	FUNCTION_80	CALL_21
0x4007ed8	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      5121	syntax.c	FUNCTION_80
0x4007ee0	    0x644833042528	                xor rax, qword fs:[0x28]	      5121	syntax.c	FUNCTION_80
0x4007ee9	     0xf859b010000	                           jne 0x400808a	      5121	syntax.c	FUNCTION_80
0x4007eef	    0x4881c4000100	                          add rsp, 0x100	      5121	syntax.c	FUNCTION_80
0x4007ef6	              0x5b	                                 pop rbx	      5121	syntax.c	FUNCTION_80
0x4007ef7	              0x5d	                                 pop rbp	      5121	syntax.c	FUNCTION_80
0x4007ef8	            0x415c	                                 pop r12	      5121	syntax.c	FUNCTION_80
0x4007efa	            0x415d	                                 pop r13	      5121	syntax.c	FUNCTION_80
0x4007efc	            0x415e	                                 pop r14	      5121	syntax.c	FUNCTION_80
0x4007efe	              0xc3	                                     ret	      5121	syntax.c	FUNCTION_80
0x4007eff	              0x90	                                     nop	      5121	syntax.c	FUNCTION_80
0x4007f00	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4007f03	            0x85c0	                           test eax, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4007f05	     0xf8579ffffff	                           jne 0x4007e84	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x4007f0b	    0x488b05000000	            mov rax, qword [0x04007f12] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x4007f12	      0xbe01000000	                              mov esi, 1	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x4007f17	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x4007f1b	    0x4881c7600200	                          add rdi, 0x260	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x4007f22	      0xe800000000	                          call 0x4007f27	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x4007f27	            0x85c0	                           test eax, eax	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x4007f29	            0x7555	                           jne 0x4007f80	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x4007f2b	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      5113	syntax.c	FUNCTION_80	CALL_15
0x4007f33	      0xe800000000	                          call 0x4007f38	      5113	syntax.c	FUNCTION_80	CALL_15
0x4007f38	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      5114	syntax.c	FUNCTION_80	CALL_16
0x4007f40	      0xe800000000	                          call 0x4007f45	      5114	syntax.c	FUNCTION_80	CALL_16
0x4007f45	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5115	syntax.c	FUNCTION_80	CALL_17
0x4007f4a	      0xe800000000	                          call 0x4007f4f	      5115	syntax.c	FUNCTION_80	CALL_17
0x4007f4f	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5116	syntax.c	FUNCTION_80	CALL_18
0x4007f54	      0xe800000000	                          call 0x4007f59	      5116	syntax.c	FUNCTION_80	CALL_18
0x4007f59	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5117	syntax.c	FUNCTION_80	CALL_19
0x4007f5e	      0xe800000000	                          call 0x4007f63	      5117	syntax.c	FUNCTION_80	CALL_19
0x4007f63	      0xe970ffffff	                           jmp 0x4007ed8	      5117	syntax.c	FUNCTION_80	CALL_19
0x4007f68	     0xf1f84000000	                   nop dword [rax + rax]	      5117	syntax.c	FUNCTION_80	CALL_19
0x4007f70	          0x83c808	                               or eax, 8	      5056	syntax.c	FUNCTION_80	IF_1
0x4007f73	        0x89442420	             mov dword [rsp + 0x20], eax	      5056	syntax.c	FUNCTION_80	IF_1
0x4007f77	      0xe9cefeffff	                           jmp 0x4007e4a	      5056	syntax.c	FUNCTION_80	IF_1
0x4007f7c	         0xf1f4000	                         nop dword [rax]	      5056	syntax.c	FUNCTION_80	IF_1
0x4007f80	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4007f85	          0x4c89ef	                            mov rdi, r13	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4007f88	          0x4c29ee	                            sub rsi, r13	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4007f8b	      0xe800000000	                          call 0x4007f90	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4007f90	            0x85c0	                           test eax, eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4007f92	            0x7497	                            je 0x4007f2b	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x4007f94	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x4007f99	            0x89c7	                            mov edi, eax	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x4007f9b	        0x8944240c	              mov dword [rsp + 0xc], eax	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x4007f9f	      0xe83cabffff	              call sym.syn_incl_toplevel	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x4007fa4	    0x4c8b05000000	              mov r8, qword [0x04007fab]	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fab	          0x4889ee	                            mov rsi, rbp	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fae	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fb2	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fb6	    0x486391600200	        movsxd rdx, dword [rcx + 0x260] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fbd	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fc1	        0x48c1e205	                              shl rdx, 5	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fc5	          0x4889d7	                            mov rdi, rdx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fc8	    0x4803b9700200	            add rdi, qword [rcx + 0x270]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fcf	      0xb914000000	                           mov ecx, 0x14	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fd4	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fd7	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fdb	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fe2	      0x4488641101	          mov byte [rcx + rdx + 1], r12b	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007fe7	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007feb	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007ff2	        0xc6041101	                 mov byte [rcx + rdx], 1	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007ff6	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007ffa	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4007ffe	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008002	    0x480391700200	            add rdx, qword [rcx + 0x270]	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008009	          0x897230	             mov dword [rdx + 0x30], esi	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400800c	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008011	        0x66894254	               mov word [rdx + 0x54], ax	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008015	    0x8b0500000000	            mov eax, dword [0x0400801b] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400801b	          0x897a28	             mov dword [rdx + 0x28], edi	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400801e	        0x48897240	             mov qword [rdx + 0x40], rsi	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008022	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      5087	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008027	          0x894250	             mov dword [rdx + 0x50], eax	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400802a	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400802e	          0x4885f6	                           test rsi, rsi	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4008031	        0x48897258	             mov qword [rdx + 0x58], rsi	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008035	          0x894224	             mov dword [rdx + 0x24], eax	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008038	            0x740a	                            je 0x4008044	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x400803a	    0xc78198020000	              mov dword [rcx + 0x298], 1	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x4008044	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008049	        0x48897248	             mov qword [rdx + 0x48], rsi	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400804d	    0x838160020000	              add dword [rcx + 0x260], 1	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4008054	            0xa830	                           test al, 0x30	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4008056	            0x7407	                            je 0x400805f	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x4008058	    0x83899c020000	               or dword [rcx + 0x29c], 2	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x400805f	          0xf6c420	                           test ah, 0x20	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4008062	            0x7407	                            je 0x400806b	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x4008064	    0x83810c030000	              add dword [rcx + 0x30c], 1	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x400806b	      0xbf23000000	                           mov edi, 0x23	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4008070	      0xe800000000	                          call 0x4008075	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x4008075	    0x488b05000000	            mov rax, qword [0x0400807c] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400807c	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x4008080	      0xe800000000	                          call 0x4008085	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x4008085	      0xe94efeffff	                           jmp 0x4007ed8	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400808a	      0xe800000000	                          call 0x400808f	      5121	syntax.c	FUNCTION_80
get_cterm_attr_idx	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,2	21
0x4005420	        0x4883ec38	                           sub rsp, 0x38	      8924	syntax.c	FUNCTION_132
0x4005424	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400542d	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005435	      0x6689742408	                  mov word [rsp + 8], si	      8933	syntax.c	FUNCTION_132
0x400543a	        0x66893c24	                      mov word [rsp], di	      8932	syntax.c	FUNCTION_132
0x400543e	          0x4889e6	                            mov rsi, rsp	      8935	syntax.c	FUNCTION_132	CALL_2
0x4005441	      0xbf00000000	                              mov edi, 0	      8935	syntax.c	FUNCTION_132	CALL_2
0x4005446	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400544f	    0x48c744241099	mov qword [rsp + 0x10], 0xffffffffffffd499	      8929	syntax.c	FUNCTION_132
0x4005458	    0x64488b042528	                mov rax, qword fs:[0x28]	      8924	syntax.c	FUNCTION_132
0x4005461	      0x4889442428	             mov qword [rsp + 0x28], rax	      8924	syntax.c	FUNCTION_132
0x4005466	            0x31c0	                            xor eax, eax	      8924	syntax.c	FUNCTION_132
0x4005468	    0x48c744241899	mov qword [rsp + 0x18], 0xffffffffffffd499	      8930	syntax.c	FUNCTION_132
0x4005471	      0x668954240a	                mov word [rsp + 0xa], dx	      8934	syntax.c	FUNCTION_132
0x4005476	      0xe8d5f8ffff	                 call sym.get_attr_entry	      8935	syntax.c	FUNCTION_132	CALL_2
0x400547b	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8936	syntax.c	FUNCTION_132
0x4005480	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8936	syntax.c	FUNCTION_132
0x4005489	            0x7505	                           jne 0x4005490	      8936	syntax.c	FUNCTION_132
0x400548b	        0x4883c438	                           add rsp, 0x38	      8936	syntax.c	FUNCTION_132
0x400548f	              0xc3	                                     ret	      8936	syntax.c	FUNCTION_132
0x4005490	      0xe800000000	                          call 0x4005495	      8936	syntax.c	FUNCTION_132
hl_get_font_name	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,0:FOR,0:functions,0:CALL,1	20
0x4006100	        0x4883ec08	                              sub rsp, 8	      8520	syntax.c	FUNCTION_123
0x4006104	      0xbf00000000	                              mov edi, 0	      8524	syntax.c	FUNCTION_123	CALL_1
0x4006109	      0xe800000000	                          call 0x400610e	      8524	syntax.c	FUNCTION_123	CALL_1
0x400610e	            0x85c0	                           test eax, eax	      8525	syntax.c	FUNCTION_123	IF_1
0x4006110	            0x7e2e	                           jle 0x4006140	      8525	syntax.c	FUNCTION_123	IF_1
0x4006112	            0x4898	                                    cdqe	      8527	syntax.c	FUNCTION_123	IF_1
0x4006114	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8527	syntax.c	FUNCTION_123	IF_1
0x4006118	        0x488d0450	                  lea rax, [rax + rdx*2]	      8527	syntax.c	FUNCTION_123	IF_1
0x400611c	    0x488b15000000	            mov rdx, qword [0x04006123] 	      8527	syntax.c	FUNCTION_123	IF_1
0x4006123	        0x488d04c2	                  lea rax, [rdx + rax*8]	      8527	syntax.c	FUNCTION_123	IF_1
0x4006127	      0xba00000000	                              mov edx, 0	      8531	syntax.c	FUNCTION_123
0x400612c	        0x488b40c8	             mov rax, qword [rax - 0x38]	      8527	syntax.c	FUNCTION_123	IF_1
0x4006130	          0x4885c0	                           test rax, rax	      8531	syntax.c	FUNCTION_123
0x4006133	        0x480f44c2	                          cmove rax, rdx	      8531	syntax.c	FUNCTION_123
0x4006137	        0x4883c408	                              add rsp, 8	      8532	syntax.c	FUNCTION_123
0x400613b	              0xc3	                                     ret	      8532	syntax.c	FUNCTION_123
0x400613c	         0xf1f4000	                         nop dword [rax]	      8532	syntax.c	FUNCTION_123
0x4006140	      0xb800000000	                              mov eax, 0	      8531	syntax.c	FUNCTION_123
0x4006145	        0x4883c408	                              add rsp, 8	      8532	syntax.c	FUNCTION_123
0x4006149	              0xc3	                                     ret	      8532	syntax.c	FUNCTION_123
set_context_in_highlight_cmd	SWITCH,0:WHILE,0:DO,0:IF,8:ELSE,0:FOR,0:functions,0:CALL,11	116
0x400e8d0	            0x4156	                                push r14	     10228	syntax.c	FUNCTION_164
0x400e8d2	            0x4155	                                push r13	     10228	syntax.c	FUNCTION_164
0x400e8d4	            0x4154	                                push r12	     10228	syntax.c	FUNCTION_164
0x400e8d6	              0x55	                                push rbp	     10228	syntax.c	FUNCTION_164
0x400e8d7	          0x4889fd	                            mov rbp, rdi	     10228	syntax.c	FUNCTION_164
0x400e8da	              0x53	                                push rbx	     10228	syntax.c	FUNCTION_164
0x400e8db	    0xc7070d000000	                    mov dword [rdi], 0xd	     10232	syntax.c	FUNCTION_164
0x400e8e1	        0x48897708	                mov qword [rdi + 8], rsi	     10233	syntax.c	FUNCTION_164
0x400e8e5	          0x803e00	                       cmp byte [rsi], 0	     10238	syntax.c	FUNCTION_164	IF_1
0x400e8e8	    0xc70500000000	               mov dword [0x0400e8f2], 2	     10234	syntax.c	FUNCTION_164
0x400e8f2	    0xc70500000000	               mov dword [0x0400e8fc], 1	     10235	syntax.c	FUNCTION_164
0x400e8fc	            0x7512	                           jne 0x400e910	     10238	syntax.c	FUNCTION_164	IF_1
0x400e8fe	              0x5b	                                 pop rbx	     10271	syntax.c	FUNCTION_164
0x400e8ff	              0x5d	                                 pop rbp	     10271	syntax.c	FUNCTION_164
0x400e900	            0x415c	                                 pop r12	     10271	syntax.c	FUNCTION_164
0x400e902	            0x415d	                                 pop r13	     10271	syntax.c	FUNCTION_164
0x400e904	            0x415e	                                 pop r14	     10271	syntax.c	FUNCTION_164
0x400e906	              0xc3	                                     ret	     10271	syntax.c	FUNCTION_164
0x400e907	    0x660f1f840000	                    nop word [rax + rax]	     10271	syntax.c	FUNCTION_164
0x400e910	          0x4889f7	                            mov rdi, rsi	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x400e913	          0x4889f3	                            mov rbx, rsi	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x400e916	      0xe800000000	                          call 0x400e91b	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x400e91b	          0x803800	                       cmp byte [rax], 0	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x400e91e	          0x4989c4	                            mov r12, rax	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x400e921	            0x74db	                            je 0x400e8fe	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x400e923	          0x4989c5	                            mov r13, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e926	      0xb908000000	                              mov ecx, 8	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e92b	    0xc70500000000	               mov dword [0x0400e935], 0	     10243	syntax.c	FUNCTION_164	IF_1	IF_2
0x400e935	          0x4929dd	                            sub r13, rbx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e938	      0xbe00000000	                              mov esi, 0	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e93d	          0x4889df	                            mov rdi, rbx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e940	        0x4983fd08	                              cmp r13, 8	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e944	        0x490f4ecd	                         cmovle rcx, r13	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e948	          0x4839c9	                            cmp rcx, rcx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e94b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e94d	            0x7469	                            je 0x400e9b8	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x400e94f	        0x807b0169	                cmp byte [rbx + 1], 0x69	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400e953	    0xc70500000000	               mov dword [0x0400e95d], 0	     10252	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400e95d	     0xf84cd000000	                            je 0x400ea30	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400e963	        0x4983fd05	                              cmp r13, 5	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400e967	      0xb905000000	                              mov ecx, 5	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400e96c	      0xbe00000000	                              mov esi, 0	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400e971	        0x490f4ecd	                         cmovle rcx, r13	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400e975	          0x4889df	                            mov rdi, rbx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400e978	          0x4839c9	                            cmp rcx, rcx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400e97b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400e97d	            0x7471	                            je 0x400e9f0	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x400e97f	        0x4983fd06	                              cmp r13, 6	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400e983	      0xb906000000	                              mov ecx, 6	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400e988	      0xbe00000000	                              mov esi, 0	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400e98d	        0x490f4ecd	                         cmovle rcx, r13	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400e991	          0x4889df	                            mov rdi, rbx	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400e994	          0x4839c9	                            cmp rcx, rcx	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400e997	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400e999	            0x7455	                            je 0x400e9f0	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x400e99b	      0x41803c2400	                       cmp byte [r12], 0	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x400e9a0	     0xf8458ffffff	                            je 0x400e8fe	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x400e9a6	    0xc74500000000	                      mov dword [rbp], 0	     10267	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x400e9ad	      0xe94cffffff	                           jmp 0x400e8fe	     10271	syntax.c	FUNCTION_164
0x400e9b2	    0x660f1f440000	                    nop word [rax + rax]	     10271	syntax.c	FUNCTION_164
0x400e9b8	          0x4889c7	                            mov rdi, rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x400e9bb	      0xe800000000	                          call 0x400e9c0	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x400e9c0	        0x48894508	                mov qword [rbp + 8], rax	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x400e9c4	          0x4889c7	                            mov rdi, rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x400e9c7	          0x4889c3	                            mov rbx, rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x400e9ca	      0xe800000000	                          call 0x400e9cf	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x400e9cf	          0x803800	                       cmp byte [rax], 0	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400e9d2	          0x4989c4	                            mov r12, rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x400e9d5	     0xf8423ffffff	                            je 0x400e8fe	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400e9db	          0x4989c5	                            mov r13, rax	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400e9de	          0x4929dd	                            sub r13, rbx	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400e9e1	      0xe969ffffff	                           jmp 0x400e94f	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400e9e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x400e9f0	          0x4c89e7	                            mov rdi, r12	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x400e9f3	      0xe800000000	                          call 0x400e9f8	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x400e9f8	        0x48894508	                mov qword [rbp + 8], rax	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x400e9fc	          0x4889c7	                            mov rdi, rax	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x400e9ff	      0xe800000000	                          call 0x400ea04	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x400ea04	          0x803800	                       cmp byte [rax], 0	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x400ea07	     0xf84f1feffff	                            je 0x400e8fe	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x400ea0d	          0x4889c7	                            mov rdi, rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x400ea10	      0xe800000000	                          call 0x400ea15	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x400ea15	        0x48894508	                mov qword [rbp + 8], rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x400ea19	          0x4889c7	                            mov rdi, rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x400ea1c	      0xe800000000	                          call 0x400ea21	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x400ea21	          0x4989c4	                            mov r12, rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x400ea24	      0xe972ffffff	                           jmp 0x400e99b	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x400ea29	     0xf1f80000000	                         nop dword [rax]	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x400ea30	          0x803b4e	                    cmp byte [rbx], 0x4e	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400ea33	     0xf852affffff	                           jne 0x400e963	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400ea39	    0x41bec2010000	                         mov r14d, 0x1c2	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400ea3f	              0x90	                                     nop	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x400ea40	    0x8b3500000000	            mov esi, dword [0x0400ea46] 	     10290	syntax.c	FUNCTION_166	CALL_1
0x400ea46	      0xbf00000000	                              mov edi, 0	     10290	syntax.c	FUNCTION_166	CALL_1
0x400ea4b	      0xe800000000	                          call 0x400ea50	     10290	syntax.c	FUNCTION_166	CALL_1
0x400ea50	      0xe800000000	                          call 0x400ea55	     10291	syntax.c	FUNCTION_166	CALL_2
0x400ea55	      0xe800000000	                          call 0x400ea5a	     10292	syntax.c	FUNCTION_166	CALL_3
0x400ea5a	            0x31f6	                            xor esi, esi	     10293	syntax.c	FUNCTION_166	CALL_4
0x400ea5c	          0x4c89f7	                            mov rdi, r14	     10293	syntax.c	FUNCTION_166	CALL_4
0x400ea5f	        0x4983ee32	                           sub r14, 0x32	     10293	syntax.c	FUNCTION_166	CALL_4
0x400ea63	      0xe800000000	                          call 0x400ea68	     10293	syntax.c	FUNCTION_166	CALL_4
0x400ea68	        0x4983fece	             cmp r14, 0xffffffffffffffce	     10281	syntax.c	FUNCTION_165	FOR_1
0x400ea6c	            0x75d2	                           jne 0x400ea40	     10281	syntax.c	FUNCTION_165	FOR_1
0x400ea6e	    0x41be28000000	                          mov r14d, 0x28	     10281	syntax.c	FUNCTION_165	FOR_1
0x400ea74	         0xf1f4000	                         nop dword [rax]	     10281	syntax.c	FUNCTION_165	FOR_1
0x400ea78	            0x31f6	                            xor esi, esi	     10290	syntax.c	FUNCTION_166	CALL_1
0x400ea7a	      0xbf00000000	                              mov edi, 0	     10290	syntax.c	FUNCTION_166	CALL_1
0x400ea7f	      0xe800000000	                          call 0x400ea84	     10290	syntax.c	FUNCTION_166	CALL_1
0x400ea84	      0xe800000000	                          call 0x400ea89	     10291	syntax.c	FUNCTION_166	CALL_2
0x400ea89	      0xe800000000	                          call 0x400ea8e	     10292	syntax.c	FUNCTION_166	CALL_3
0x400ea8e	            0x31f6	                            xor esi, esi	     10293	syntax.c	FUNCTION_166	CALL_4
0x400ea90	      0xbf28000000	                           mov edi, 0x28	     10293	syntax.c	FUNCTION_166	CALL_4
0x400ea95	      0xe800000000	                          call 0x400ea9a	     10293	syntax.c	FUNCTION_166	CALL_4
0x400ea9a	        0x4183ee01	                             sub r14d, 1	     10283	syntax.c	FUNCTION_165	FOR_2
0x400ea9e	            0x75d8	                           jne 0x400ea78	     10283	syntax.c	FUNCTION_165	FOR_2
0x400eaa0	      0xe9befeffff	                           jmp 0x400e963	     10283	syntax.c	FUNCTION_165	FOR_2
syn_check_cluster	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,1:FOR,0:functions,0:CALL,4	96
0x4001180	            0x4155	                                push r13	      5577	syntax.c	FUNCTION_86
0x4001182	            0x4154	                                push r12	      5577	syntax.c	FUNCTION_86
0x4001184	              0x55	                                push rbp	      5577	syntax.c	FUNCTION_86
0x4001185	              0x53	                                push rbx	      5577	syntax.c	FUNCTION_86
0x4001186	            0x31db	                            xor ebx, ebx	      5583	syntax.c	FUNCTION_86	IF_1
0x4001188	        0x4883ec08	                              sub rsp, 8	      5577	syntax.c	FUNCTION_86
0x400118c	      0xe800000000	                          call 0x4001191	      5581	syntax.c	FUNCTION_86	CALL_1
0x4001191	          0x4885c0	                           test rax, rax	      5582	syntax.c	FUNCTION_86	IF_1
0x4001194	            0x7419	                            je 0x40011af	      5582	syntax.c	FUNCTION_86	IF_1
0x4001196	          0x4889c7	                            mov rdi, rax	      5585	syntax.c	FUNCTION_86	CALL_2
0x4001199	          0x4889c5	                            mov rbp, rax	      5585	syntax.c	FUNCTION_86	CALL_2
0x400119c	      0xe83fffffff	                call sym.syn_scl_name2id	      5585	syntax.c	FUNCTION_86	CALL_2
0x40011a1	            0x85c0	                           test eax, eax	      5586	syntax.c	FUNCTION_86	IF_2
0x40011a3	            0x89c3	                            mov ebx, eax	      5585	syntax.c	FUNCTION_86	CALL_2
0x40011a5	            0x7419	                            je 0x40011c0	      5586	syntax.c	FUNCTION_86	IF_2
0x40011a7	          0x4889ef	                            mov rdi, rbp	      5589	syntax.c	FUNCTION_86	CALL_4
0x40011aa	      0xe800000000	                          call 0x40011af	      5589	syntax.c	FUNCTION_86	CALL_4
0x40011af	        0x4883c408	                              add rsp, 8	      5591	syntax.c	FUNCTION_86
0x40011b3	            0x89d8	                            mov eax, ebx	      5591	syntax.c	FUNCTION_86
0x40011b5	              0x5b	                                 pop rbx	      5591	syntax.c	FUNCTION_86
0x40011b6	              0x5d	                                 pop rbp	      5591	syntax.c	FUNCTION_86
0x40011b7	            0x415c	                                 pop r12	      5591	syntax.c	FUNCTION_86
0x40011b9	            0x415d	                                 pop r13	      5591	syntax.c	FUNCTION_86
0x40011bb	              0xc3	                                     ret	      5591	syntax.c	FUNCTION_86
0x40011bc	         0xf1f4000	                         nop dword [rax]	      5591	syntax.c	FUNCTION_86
0x40011c0	    0x488b05000000	            mov rax, qword [0x040011c7] 	      5606	syntax.c	FUNCTION_87	IF_1
0x40011c7	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5606	syntax.c	FUNCTION_87	IF_1
0x40011cb	    0x4883bf880200	              cmp qword [rdi + 0x288], 0	      5606	syntax.c	FUNCTION_87	IF_1
0x40011d3	     0xf8427010000	                            je 0x4001300	      5606	syntax.c	FUNCTION_87	IF_1
0x40011d9	    0x448ba7780200	          mov r12d, dword [rdi + 0x278] 	      5612	syntax.c	FUNCTION_87
0x40011e0	    0x4181fc262600	                        cmp r12d, 0x2626	      5613	syntax.c	FUNCTION_87	IF_2
0x40011e7	     0xf8fdb000000	                            jg 0x40012c8	      5613	syntax.c	FUNCTION_87	IF_2
0x40011ed	    0x4881c7780200	                          add rdi, 0x278	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40011f4	      0xbe01000000	                              mov esi, 1	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40011f9	      0xe800000000	                          call 0x40011fe	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40011fe	            0x85c0	                           test eax, eax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001200	            0x89c3	                            mov ebx, eax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001202	            0x74a3	                            je 0x40011a7	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x4001204	          0x4963c4	                        movsxd rax, r12d	      5629	syntax.c	FUNCTION_87	CALL_6
0x4001207	          0x4889ef	                            mov rdi, rbp	      5631	syntax.c	FUNCTION_87	CALL_7
0x400120a	        0x488d1c40	                  lea rbx, [rax + rax*2]	      5629	syntax.c	FUNCTION_87	CALL_6
0x400120e	    0x488b05000000	            mov rax, qword [0x04001215] 	      5629	syntax.c	FUNCTION_87	CALL_6
0x4001215	        0x48c1e303	                              shl rbx, 3	      5629	syntax.c	FUNCTION_87	CALL_6
0x4001219	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5629	syntax.c	FUNCTION_87	CALL_6
0x400121d	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_173	CALL_6
0x4001220	          0x4989dd	                            mov r13, rbx	      5630	syntax.c	FUNCTION_87
0x4001223	    0x480388880200	            add rcx, qword [rax + 0x288]	        90	string3.h	FUNCTION_173	CALL_6
0x400122a	    0x48c701000000	                      mov qword [rcx], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4001231	    0x488b05000000	            mov rax, qword [0x04001238] 	      5630	syntax.c	FUNCTION_87
0x4001238	    0x48c741080000	                  mov qword [rcx + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4001240	    0x48c741100000	               mov qword [rcx + 0x10], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4001248	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5630	syntax.c	FUNCTION_87
0x400124c	    0x4c03a8880200	            add r13, qword [rax + 0x288]	      5630	syntax.c	FUNCTION_87
0x4001253	        0x49896d00	                    mov qword [r13], rbp	      5630	syntax.c	FUNCTION_87
0x4001257	      0xe800000000	                          call 0x400125c	      5631	syntax.c	FUNCTION_87	CALL_7
0x400125c	        0x49894508	                mov qword [r13 + 8], rax	      5631	syntax.c	FUNCTION_87	CALL_7
0x4001260	    0x488b05000000	            mov rax, qword [0x04001267] 	      5632	syntax.c	FUNCTION_87
0x4001267	      0xbe00000000	                              mov esi, 0	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400126c	          0x4889ef	                            mov rdi, rbp	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400126f	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      5632	syntax.c	FUNCTION_87
0x4001273	    0x498b85880200	           mov rax, qword [r13 + 0x288] 	      5632	syntax.c	FUNCTION_87
0x400127a	    0x48c744181000	         mov qword [rax + rbx + 0x10], 0	      5632	syntax.c	FUNCTION_87
0x4001283	    0x418385780200	              add dword [r13 + 0x278], 1	      5633	syntax.c	FUNCTION_87
0x400128b	    0x418d9c24d859	                 lea ebx, [r12 + 0x59d8]	      5636	syntax.c	FUNCTION_87	IF_4
0x4001293	      0xe800000000	                          call 0x4001298	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x4001298	            0x85c0	                           test eax, eax	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400129a	            0x7507	                           jne 0x40012a3	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400129c	    0x41899d900200	            mov dword [r13 + 0x290], ebx	      5636	syntax.c	FUNCTION_87	IF_4
0x40012a3	      0xbe00000000	                              mov esi, 0	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x40012a8	          0x4889ef	                            mov rdi, rbp	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x40012ab	      0xe800000000	                          call 0x40012b0	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x40012b0	            0x85c0	                           test eax, eax	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x40012b2	     0xf85f7feffff	                           jne 0x40011af	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x40012b8	    0x41899d940200	            mov dword [r13 + 0x294], ebx	      5638	syntax.c	FUNCTION_87	IF_5
0x40012bf	      0xe9ebfeffff	                           jmp 0x40011af	      5638	syntax.c	FUNCTION_87	IF_5
0x40012c4	         0xf1f4000	                         nop dword [rax]	      5638	syntax.c	FUNCTION_87	IF_5
0x40012c8	      0xba05000000	                              mov edx, 5	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40012cd	      0xbe00000000	                              mov esi, 0	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40012d2	            0x31ff	                            xor edi, edi	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40012d4	      0xe800000000	                          call 0x40012d9	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40012d9	          0x4889c7	                            mov rdi, rax	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40012dc	            0x31db	                            xor ebx, ebx	      5617	syntax.c	FUNCTION_87	IF_2
0x40012de	      0xe800000000	                          call 0x40012e3	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40012e3	          0x4889ef	                            mov rdi, rbp	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x40012e6	      0xe800000000	                          call 0x40012eb	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x40012eb	        0x4883c408	                              add rsp, 8	      5591	syntax.c	FUNCTION_86
0x40012ef	            0x89d8	                            mov eax, ebx	      5591	syntax.c	FUNCTION_86
0x40012f1	              0x5b	                                 pop rbx	      5591	syntax.c	FUNCTION_86
0x40012f2	              0x5d	                                 pop rbp	      5591	syntax.c	FUNCTION_86
0x40012f3	            0x415c	                                 pop r12	      5591	syntax.c	FUNCTION_86
0x40012f5	            0x415d	                                 pop r13	      5591	syntax.c	FUNCTION_86
0x40012f7	              0xc3	                                     ret	      5591	syntax.c	FUNCTION_86
0x40012f8	     0xf1f84000000	                   nop dword [rax + rax]	      5591	syntax.c	FUNCTION_86
0x4001300	    0xc78780020000	          mov dword [rdi + 0x280], 0x18 	      5608	syntax.c	FUNCTION_87	IF_1
0x400130a	    0xc78784020000	            mov dword [rdi + 0x284], 0xa	      5609	syntax.c	FUNCTION_87	IF_1
0x4001314	      0xe9c0feffff	                           jmp 0x40011d9	      5609	syntax.c	FUNCTION_87	IF_1
get_highlight_name_ext	SWITCH,0:WHILE,0:DO,0:IF,7:ELSE,0:FOR,0:functions,0:CALL,0	66
0x400eab0	            0x85f6	                           test esi, esi	     10316	syntax.c	FUNCTION_168	IF_1
0x400eab2	     0xf88e8000000	                            js 0x400eba0	     10316	syntax.c	FUNCTION_168	IF_1
0x400eab8	            0x85d2	                           test edx, edx	     10321	syntax.c	FUNCTION_168	IF_2
0x400eaba	    0x8b1500000000	            mov edx, dword [0x0400eac0] 	     10321	syntax.c	FUNCTION_168	IF_2
0x400eac0	            0x746e	                            je 0x400eb30	     10321	syntax.c	FUNCTION_168	IF_2
0x400eac2	            0x39d6	                            cmp esi, edx	     10321	syntax.c	FUNCTION_168	IF_2
0x400eac4	            0x7d6a	                           jge 0x400eb30	     10321	syntax.c	FUNCTION_168	IF_2
0x400eac6	          0x4863c6	                         movsxd rax, esi	     10321	syntax.c	FUNCTION_168	IF_2
0x400eac9	    0x4c8b15000000	            mov r10, qword [0x0400ead0] 	     10321	syntax.c	FUNCTION_168	IF_2
0x400ead0	        0x488d0cc0	                  lea rcx, [rax + rax*8]	     10321	syntax.c	FUNCTION_168	IF_2
0x400ead4	        0x488d0c48	                  lea rcx, [rax + rcx*2]	     10321	syntax.c	FUNCTION_168	IF_2
0x400ead8	      0xb800000000	                              mov eax, 0	     10322	syntax.c	FUNCTION_168	IF_2
0x400eadd	        0x498d0cca	                  lea rcx, [r10 + rcx*8]	     10321	syntax.c	FUNCTION_168	IF_2
0x400eae1	        0x448b5910	           mov r11d, dword [rcx + 0x10] 	     10321	syntax.c	FUNCTION_168	IF_2
0x400eae5	          0x4585db	                         test r11d, r11d	     10321	syntax.c	FUNCTION_168	IF_2
0x400eae8	     0xf858a000000	                           jne 0x400eb78	     10321	syntax.c	FUNCTION_168	IF_2
0x400eaee	    0x8b0500000000	            mov eax, dword [0x0400eaf4] 	     10327	syntax.c	FUNCTION_168	IF_4
0x400eaf4	             0x1d0	                            add eax, edx	     10327	syntax.c	FUNCTION_168	IF_4
0x400eaf6	            0x39c6	                            cmp esi, eax	     10327	syntax.c	FUNCTION_168	IF_4
0x400eaf8	            0x744b	                            je 0x400eb45	     10327	syntax.c	FUNCTION_168	IF_4
0x400eafa	     0x30500000000	             add eax, dword [0x0400eb00]	     10329	syntax.c	FUNCTION_168	IF_5
0x400eb00	            0x39c6	                            cmp esi, eax	     10329	syntax.c	FUNCTION_168	IF_5
0x400eb02	            0x7452	                            je 0x400eb56	     10329	syntax.c	FUNCTION_168	IF_5
0x400eb04	          0x83c001	                              add eax, 1	     10332	syntax.c	FUNCTION_168	IF_6
0x400eb07	            0x39c6	                            cmp esi, eax	     10332	syntax.c	FUNCTION_168	IF_6
0x400eb09	            0x747d	                            je 0x400eb88	     10332	syntax.c	FUNCTION_168	IF_6
0x400eb0b	            0x39d6	                            cmp esi, edx	     10336	syntax.c	FUNCTION_168	IF_7
0x400eb0d	     0xf8d8d000000	                           jge 0x400eba0	     10336	syntax.c	FUNCTION_168	IF_7
0x400eb13	          0x4863f6	                         movsxd rsi, esi	     10338	syntax.c	FUNCTION_168
0x400eb16	    0x488b15000000	            mov rdx, qword [0x0400eb1d] 	     10338	syntax.c	FUNCTION_168
0x400eb1d	        0x488d04f6	                  lea rax, [rsi + rsi*8]	     10338	syntax.c	FUNCTION_168
0x400eb21	        0x488d0446	                  lea rax, [rsi + rax*2]	     10338	syntax.c	FUNCTION_168
0x400eb25	        0x488d04c2	                  lea rax, [rdx + rax*8]	     10338	syntax.c	FUNCTION_168
0x400eb29	          0x488b00	                    mov rax, qword [rax]	     10338	syntax.c	FUNCTION_168
0x400eb2c	              0xc3	                                     ret	     10338	syntax.c	FUNCTION_168
0x400eb2d	           0xf1f00	                         nop dword [rax]	     10338	syntax.c	FUNCTION_168
0x400eb30	            0x39d6	                            cmp esi, edx	     10325	syntax.c	FUNCTION_168	IF_3
0x400eb32	            0x75ba	                           jne 0x400eaee	     10325	syntax.c	FUNCTION_168	IF_3
0x400eb34	    0x448b0d000000	            mov r9d, dword [0x0400eb3b] 	     10325	syntax.c	FUNCTION_168	IF_3
0x400eb3b	      0xb800000000	                              mov eax, 0	     10326	syntax.c	FUNCTION_168	IF_3
0x400eb40	          0x4585c9	                           test r9d, r9d	     10325	syntax.c	FUNCTION_168	IF_3
0x400eb43	            0x752b	                           jne 0x400eb70	     10325	syntax.c	FUNCTION_168	IF_3
0x400eb45	    0x448b05000000	            mov r8d, dword [0x0400eb4c] 	     10327	syntax.c	FUNCTION_168	IF_4
0x400eb4c	      0xb800000000	                              mov eax, 0	     10328	syntax.c	FUNCTION_168	IF_4
0x400eb51	          0x4585c0	                           test r8d, r8d	     10327	syntax.c	FUNCTION_168	IF_4
0x400eb54	            0x752a	                           jne 0x400eb80	     10327	syntax.c	FUNCTION_168	IF_4
0x400eb56	    0x8b3d00000000	            mov edi, dword [0x0400eb5c] 	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb5c	      0xb800000000	                              mov eax, 0	     10331	syntax.c	FUNCTION_168	IF_5
0x400eb61	            0x85ff	                           test edi, edi	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb63	            0x74a6	                            je 0x400eb0b	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb65	            0xf3c3	                                     ret	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb67	    0x660f1f840000	                    nop word [rax + rax]	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb70	            0xf3c3	                                     ret	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb72	    0x660f1f440000	                    nop word [rax + rax]	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb78	            0xf3c3	                                     ret	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb7a	    0x660f1f440000	                    nop word [rax + rax]	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb80	            0xf3c3	                                     ret	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb82	    0x660f1f440000	                    nop word [rax + rax]	     10330	syntax.c	FUNCTION_168	IF_5
0x400eb88	    0x8b0d00000000	            mov ecx, dword [0x0400eb8e] 	     10333	syntax.c	FUNCTION_168	IF_6
0x400eb8e	      0xb800000000	                              mov eax, 0	     10334	syntax.c	FUNCTION_168	IF_6
0x400eb93	            0x85c9	                           test ecx, ecx	     10333	syntax.c	FUNCTION_168	IF_6
0x400eb95	     0xf8470ffffff	                            je 0x400eb0b	     10333	syntax.c	FUNCTION_168	IF_6
0x400eb9b	            0xf3c3	                                     ret	     10339	syntax.c	FUNCTION_168
0x400eb9d	           0xf1f00	                         nop dword [rax]	     10339	syntax.c	FUNCTION_168
0x400eba0	            0x31c0	                            xor eax, eax	     10317	syntax.c	FUNCTION_168	IF_1
0x400eba2	              0xc3	                                     ret	     10339	syntax.c	FUNCTION_168
highlight_exists	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	7
0x4006350	        0x4883ec08	                              sub rsp, 8	      9668	syntax.c	FUNCTION_150
0x4006354	      0xe800000000	                          call 0x4006359	      9669	syntax.c	FUNCTION_150	CALL_1
0x4006359	            0x85c0	                           test eax, eax	      9669	syntax.c	FUNCTION_150	CALL_1
0x400635b	           0xf9fc0	                                 setg al	      9669	syntax.c	FUNCTION_150	CALL_1
0x400635e	        0x4883c408	                              add rsp, 8	      9670	syntax.c	FUNCTION_150
0x4006362	           0xfb6c0	                           movzx eax, al	      9669	syntax.c	FUNCTION_150	CALL_1
0x4006365	              0xc3	                                     ret	      9670	syntax.c	FUNCTION_150
reset_expand_highlight	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	4
0x4004230	    0xc70500000000	               mov dword [0x0400423a], 0	      6468	syntax.c	FUNCTION_98
0x400423a	    0xc70500000000	               mov dword [0x04004244], 0	      6468	syntax.c	FUNCTION_98
0x4004244	    0xc70500000000	               mov dword [0x0400424e], 0	      6468	syntax.c	FUNCTION_98
0x400424e	              0xc3	                                     ret	      6468	syntax.c	FUNCTION_98
get_id_list	SWITCH,0:WHILE,1:DO,0:IF,25:ELSE,9:FOR,3:functions,0:CALL,40	332
0x4006950	            0x4157	                                push r15	      6004	syntax.c	FUNCTION_92
0x4006952	            0x4156	                                push r14	      6004	syntax.c	FUNCTION_92
0x4006954	            0x4155	                                push r13	      6004	syntax.c	FUNCTION_92
0x4006956	            0x4154	                                push r12	      6004	syntax.c	FUNCTION_92
0x4006958	              0x55	                                push rbp	      6004	syntax.c	FUNCTION_92
0x4006959	              0x53	                                push rbx	      6004	syntax.c	FUNCTION_92
0x400695a	    0x48bb01020000	              movabs rbx, 0x100100000201	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006964	    0x4881ec180100	                          sub rsp, 0x118	      6004	syntax.c	FUNCTION_92
0x400696b	    0x64488b042528	                mov rax, qword fs:[0x28]	      6004	syntax.c	FUNCTION_92
0x4006974	    0x488984240801	            mov qword [rsp + 0x108], rax	      6004	syntax.c	FUNCTION_92
0x400697c	            0x31c0	                            xor eax, eax	      6004	syntax.c	FUNCTION_92
0x400697e	          0x4863c6	                         movsxd rax, esi	      6004	syntax.c	FUNCTION_92
0x4006981	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      6004	syntax.c	FUNCTION_92
0x4006986	      0x4889542440	             mov qword [rsp + 0x40], rdx	      6004	syntax.c	FUNCTION_92
0x400698b	        0x894c244c	             mov dword [rsp + 0x4c], ecx	      6004	syntax.c	FUNCTION_92
0x400698f	      0x4889442430	             mov qword [rsp + 0x30], rax	      6004	syntax.c	FUNCTION_92
0x4006994	    0x48c744242800	               mov qword [rsp + 0x28], 0	      6010	syntax.c	FUNCTION_92
0x400699d	    0xc74424480000	               mov dword [rsp + 0x48], 0	      6009	syntax.c	FUNCTION_92
0x40069a5	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      6024	syntax.c	FUNCTION_92	FOR_1
0x40069ad	           0xf1f00	                         nop dword [rax]	      6024	syntax.c	FUNCTION_92	FOR_1
0x40069b0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x40069b5	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x40069ba	          0x480338	                    add rdi, qword [rax]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x40069bd	      0xe800000000	                          call 0x40069c2	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x40069c2	          0x80383d	                    cmp byte [rax], 0x3d	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x40069c5	          0x4889c5	                            mov rbp, rax	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x40069c8	     0xf85d7040000	                           jne 0x4006ea5	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x40069ce	        0x488d7801	                      lea rdi, [rax + 1]	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x40069d2	      0xe800000000	                          call 0x40069d7	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x40069d7	           0xfb638	                   movzx edi, byte [rax]	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x40069da	          0x4889c5	                            mov rbp, rax	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x40069dd	      0xe800000000	                          call 0x40069e2	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x40069e2	            0x85c0	                           test eax, eax	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x40069e4	     0xf8518040000	                           jne 0x4006e02	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x40069ea	         0xfb67d00	                   movzx edi, byte [rbp]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x40069ee	          0x4531e4	                          xor r12d, r12d	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x40069f1	      0xe800000000	                          call 0x40069f6	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x40069f6	            0x85c0	                           test eax, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x40069f8	     0xf8556010000	                           jne 0x4006b54	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x40069fe	            0x6690	                                     nop	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x4006a00	         0xfb64500	                   movzx eax, byte [rbp]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a04	          0x4989ee	                            mov r14, rbp	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a07	            0x3c2c	                            cmp al, 0x2c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a09	            0x770d	                            ja 0x4006a18	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a0b	        0x480fa3c3	                             bt rbx, rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a0f	     0xf8218030000	                            jb 0x4006d2d	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a15	           0xf1f00	                         nop dword [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a18	        0x4983c601	                              add r14, 1	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a1c	        0x410fb606	                   movzx eax, byte [r14]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a20	            0x3c2c	                            cmp al, 0x2c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a22	            0x77f4	                            ja 0x4006a18	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a24	        0x480fa3c3	                             bt rbx, rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a28	            0x73ee	                           jae 0x4006a18	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a2a	          0x4c89f0	                            mov rax, r14	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a2d	          0x4829e8	                            sub rax, rbp	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a30	          0x8d7803	                      lea edi, [rax + 3]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a33	      0x4889442408	                mov qword [rsp + 8], rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a38	        0x89442420	             mov dword [rsp + 0x20], eax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006a3c	      0xe800000000	                          call 0x4006a41	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x4006a41	          0x4885c0	                           test rax, rax	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x4006a44	          0x4989c7	                            mov r15, rax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x4006a47	     0xf8436030000	                            je 0x4006d83	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x4006a4d	        0x4c8d6801	                      lea r13, [rax + 1]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4006a51	      0x488b542408	                mov rdx, qword [rsp + 8]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4006a56	          0x4889ee	                            mov rsi, rbp	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4006a59	          0x4c89ef	                            mov rdi, r13	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4006a5c	      0xe800000000	                          call 0x4006a61	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x4006a61	      0xbf00000000	                              mov edi, 0	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4006a66	      0xb907000000	                              mov ecx, 7	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4006a6b	          0x4c89ee	                            mov rsi, r13	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4006a6e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4006a70	            0x743e	                            je 0x4006ab0	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x4006a72	      0x410fb64701	               movzx eax, byte [r15 + 1]	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006a77	          0x83f841	                           cmp eax, 0x41	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006a7a	            0x89c2	                            mov edx, eax	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006a7c	     0xf8436010000	                            je 0x4006bb8	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006a82	          0x83f854	                           cmp eax, 0x54	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006a85	     0xf8534010000	                           jne 0x4006bbf	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006a8b	      0x41807f024f	                cmp byte [r15 + 2], 0x4f	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006a90	     0xf859a010000	                           jne 0x4006c30	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006a96	      0x41807f0350	                cmp byte [r15 + 3], 0x50	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006a9b	     0xf858f010000	                           jne 0x4006c30	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006aa1	      0x41807f0400	                   cmp byte [r15 + 4], 0	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006aa6	     0xf8584010000	                           jne 0x4006c30	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006aac	         0xf1f4000	                         nop dword [rax]	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x4006ab0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006ab5	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006ab8	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006abb	          0x8d509f	                   lea edx, [rax - 0x61]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006abe	          0x80fa19	                            cmp dl, 0x19	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006ac1	     0xf86d1000000	                           jbe 0x4006b98	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006ac7	            0x3c43	                            cmp al, 0x43	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006ac9	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006acc	            0x84c0	                             test al, al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006ace	     0xf85d1000000	                           jne 0x4006ba5	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006ad4	          0x4585e4	                         test r12d, r12d	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x4006ad7	     0xf8582020000	                           jne 0x4006d5f	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x4006add	      0x410fb64701	               movzx eax, byte [r15 + 1]	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x4006ae2	    0x41bd204e0000	                        mov r13d, 0x4e20	      6078	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x4006ae8	            0x3c41	                            cmp al, 0x41	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x4006aea	            0x7411	                            je 0x4006afd	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x4006aec	            0x3c54	                            cmp al, 0x54	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x4006aee	    0x41bd08520000	                        mov r13d, 0x5208	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x4006af4	      0xb8f0550000	                         mov eax, 0x55f0	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x4006af9	        0x440f45e8	                        cmovne r13d, eax	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x4006afd	    0x44032d000000	            add r13d, dword [0x04006b04]	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x4006b04	          0x4c89ff	                            mov rdi, r15	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x4006b07	      0xe800000000	                          call 0x4006b0c	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x4006b0c	        0x4183fd00	                             cmp r13d, 0	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x4006b10	     0xf84b7020000	                            je 0x4006dcd	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x4006b16	            0x7e0f	                           jle 0x4006b27	      6149	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x4006b18	      0x837c241c02	               cmp dword [rsp + 0x1c], 2	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0x4006b1d	     0xf84d5000000	                            je 0x4006bf8	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0x4006b23	        0x4183c401	                             add r12d, 1	      6162	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x4006b27	          0x4c89f7	                            mov rdi, r14	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x4006b2a	      0xe800000000	                          call 0x4006b2f	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x4006b2f	          0x80382c	                    cmp byte [rax], 0x2c	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x4006b32	          0x4889c5	                            mov rbp, rax	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x4006b35	            0x751d	                           jne 0x4006b54	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x4006b37	        0x488d7801	                      lea rdi, [rax + 1]	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x4006b3b	      0xe800000000	                          call 0x4006b40	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x4006b40	          0x4889c5	                            mov rbp, rax	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x4006b43	         0xfb67d00	                   movzx edi, byte [rbp]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x4006b47	      0xe800000000	                          call 0x4006b4c	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x4006b4c	            0x85c0	                           test eax, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x4006b4e	     0xf84acfeffff	                            je 0x4006a00	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x4006b54	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b59	      0x4489642448	            mov dword [rsp + 0x48], r12d	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b5e	     0xf85c2020000	                           jne 0x4006e26	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b64	      0x438d7c2402	                lea edi, [r12 + r12 + 2]	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x4006b69	      0xe800000000	                          call 0x4006b6e	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x4006b6e	          0x4885c0	                           test rax, rax	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x4006b71	      0x4889442428	             mov qword [rsp + 0x28], rax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x4006b76	     0xf8407020000	                            je 0x4006d83	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x4006b7c	          0x4d63e4	                        movsxd r12, r12d	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b7f	            0x31d2	                            xor edx, edx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b81	    0xc744241c0200	               mov dword [rsp + 0x1c], 2	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b89	      0x6642891460	              mov word [rax + r12*2], dx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b8e	      0xe91dfeffff	                           jmp 0x40069b0	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b93	       0xf1f440000	                   nop dword [rax + rax]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x4006b98	            0x3c63	                            cmp al, 0x63	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006b9a	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006b9d	            0x84c0	                             test al, al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006b9f	     0xf842fffffff	                            je 0x4006ad4	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x4006ba5	      0xba05000000	                              mov edx, 5	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006baa	      0xbe00000000	                              mov esi, 0	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006baf	      0xe9b5010000	                           jmp 0x4006d69	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006bb4	         0xf1f4000	                         nop dword [rax]	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x4006bb8	      0x41807f024c	                cmp byte [r15 + 2], 0x4c	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006bbd	            0x7459	                            je 0x4006c18	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006bbf	      0xbf00000000	                              mov edi, 0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006bc4	      0xb90a000000	                            mov ecx, 0xa	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006bc9	          0x4c89ee	                            mov rsi, r13	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006bcc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006bce	     0xf84dcfeffff	                            je 0x4006ab0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006bd4	          0x80fa40	                            cmp dl, 0x40	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x4006bd7	            0x756c	                           jne 0x4006c45	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x4006bd9	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x4006bdd	            0x85f6	                           test esi, esi	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x4006bdf	     0xf84a8020000	                            je 0x4006e8d	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x4006be5	          0x4c89ff	                            mov rdi, r15	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x4006be8	      0xe800000000	                          call 0x4006bed	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x4006bed	      0xe935ffffff	                           jmp 0x4006b27	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x4006bf2	    0x660f1f440000	                    nop word [rax + rax]	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x4006bf8	      0x443b642448	           cmp r12d, dword [rsp + 0x48] 	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x4006bfd	     0xf8d45010000	                           jge 0x4006d48	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x4006c03	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x4006c08	          0x4963c4	                        movsxd rax, r12d	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x4006c0b	      0x6644892c41	            mov word [rcx + rax*2], r13w	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x4006c10	      0xe90effffff	                           jmp 0x4006b23	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x4006c15	           0xf1f00	                         nop dword [rax]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x4006c18	      0x41807f034c	                cmp byte [r15 + 3], 0x4c	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006c1d	            0x75a0	                           jne 0x4006bbf	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006c1f	      0x41807f0400	                   cmp byte [r15 + 4], 0	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006c24	     0xf8486feffff	                            je 0x4006ab0	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006c2a	            0xeb93	                           jmp 0x4006bbf	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006c2c	         0xf1f4000	                         nop dword [rax]	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x4006c30	      0xbf00000000	                              mov edi, 0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006c35	      0xb90a000000	                            mov ecx, 0xa	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006c3a	          0x4c89ee	                            mov rsi, r13	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006c3d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006c3f	     0xf846bfeffff	                            je 0x4006ab0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x4006c45	      0xbe00000000	                              mov esi, 0	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x4006c4a	          0x4c89ef	                            mov rdi, r13	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x4006c4d	      0xe800000000	                          call 0x4006c52	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x4006c52	          0x4885c0	                           test rax, rax	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x4006c55	     0xf841e020000	                            je 0x4006e79	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x4006c5b	          0x4c89ff	                            mov rdi, r15	       148	string3.h	FUNCTION_180	CALL_3
0x4006c5e	        0x41c6075e	                    mov byte [r15], 0x5e	      6104	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x4006c62	      0xe800000000	                          call 0x4006c67	       148	string3.h	FUNCTION_180	CALL_3
0x4006c67	      0xb924000000	                           mov ecx, 0x24	       148	string3.h	FUNCTION_180	CALL_3
0x4006c6c	      0xbe01000000	                              mov esi, 1	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x4006c71	          0x4c89ff	                            mov rdi, r15	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x4006c74	      0x6641890c07	                mov word [r15 + rax], cx	       148	string3.h	FUNCTION_180	CALL_3
0x4006c79	      0xe800000000	                          call 0x4006c7e	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x4006c7e	          0x4885c0	                           test rax, rax	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x4006c81	      0x4889442450	             mov qword [rsp + 0x50], rax	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x4006c86	     0xf84ef000000	                            je 0x4006d7b	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x4006c8c	    0x486305000000	         movsxd rax, dword [0x04006c93] 	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006c93	      0x48896c2408	                mov qword [rsp + 8], rbp	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006c98	      0x4c89742420	             mov qword [rsp + 0x20], r14	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006c9d	      0x4c897c2438	             mov qword [rsp + 0x38], r15	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006ca2	    0xc78424f80000	               mov dword [rsp + 0xf8], 1	      6114	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x4006cad	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6114	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x4006cb1	          0x4889c1	                            mov rcx, rax	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006cb4	          0x4189cf	                           mov r15d, ecx	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006cb7	        0x488d0450	                  lea rax, [rax + rdx*2]	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006cbb	    0x4c8d2cc568ff	                 lea r13, [rax*8 - 0x98]	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006cc3	            0x31c0	                            xor eax, eax	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x4006cc5	          0x4189c6	                           mov r14d, eax	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x4006cc8	          0x4c89ed	                            mov rbp, r13	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x4006ccb	            0xeb17	                           jmp 0x4006ce4	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006ccd	           0xf1f00	                         nop dword [rax]	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006cd0	        0x4183c401	                             add r12d, 1	      6135	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x4006cd4	    0x41beffffffff	                    mov r14d, 0xffffffff	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x4006cda	          0x4589ef	                          mov r15d, r13d	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x4006cdd	    0x4881ed980000	                           sub rbp, 0x98	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x4006ce4	          0x4589fd	                          mov r13d, r15d	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006ce7	        0x4183ed01	                             sub r13d, 1	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006ceb	     0xf88af000000	                            js 0x4006da0	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x4006cf1	    0x488b05000000	            mov rax, qword [0x04006cf8] 	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x4006cf8	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x4006cfd	            0x31d2	                            xor edx, edx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x4006cff	        0x488b3428	              mov rsi, qword [rax + rbp]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x4006d03	      0xe800000000	                          call 0x4006d08	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x4006d08	            0x85c0	                           test eax, eax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x4006d0a	            0x74ce	                            je 0x4006cda	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x4006d0c	      0x837c241c02	               cmp dword [rsp + 0x1c], 2	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0x4006d11	            0x75bd	                           jne 0x4006cd0	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0x4006d13	      0x443b642448	           cmp r12d, dword [rsp + 0x48] 	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x4006d18	     0xf8dcd000000	                           jge 0x4006deb	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x4006d1e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x4006d23	          0x4963c4	                        movsxd rax, r12d	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x4006d26	      0x6644893c41	            mov word [rcx + rax*2], r15w	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x4006d2b	            0xeba3	                           jmp 0x4006cd0	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x4006d2d	      0xbf03000000	                              mov edi, 3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006d32	    0xc74424200000	               mov dword [rsp + 0x20], 0	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006d3a	    0x48c744240800	                  mov qword [rsp + 8], 0	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006d43	      0xe9f4fcffff	                           jmp 0x4006a3c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x4006d48	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_35
0x4006d4d	      0xe800000000	                          call 0x4006d52	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_35
0x4006d52	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x4006d5a	      0xe9c4fdffff	                           jmp 0x4006b23	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x4006d5f	      0xba05000000	                              mov edx, 5	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006d64	      0xbe00000000	                              mov esi, 0	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006d69	            0x31ff	                            xor edi, edi	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006d6b	      0xe800000000	                          call 0x4006d70	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006d70	          0x4c89ee	                            mov rsi, r13	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006d73	          0x4889c7	                            mov rdi, rax	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006d76	      0xe800000000	                          call 0x4006d7b	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x4006d7b	          0x4c89ff	                            mov rdi, r15	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x4006d7e	      0xe800000000	                          call 0x4006d83	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x4006d83	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6181	syntax.c	FUNCTION_92
0x4006d88	          0x488928	                    mov qword [rax], rbp	      6181	syntax.c	FUNCTION_92
0x4006d8b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6184	syntax.c	FUNCTION_92	IF_24	CALL_39
0x4006d90	      0xe800000000	                          call 0x4006d95	      6184	syntax.c	FUNCTION_92	IF_24	CALL_39
0x4006d95	            0x31c0	                            xor eax, eax	      6185	syntax.c	FUNCTION_92	IF_24
0x4006d97	      0xe9b8000000	                           jmp 0x4006e54	      6185	syntax.c	FUNCTION_92	IF_24
0x4006d9c	         0xf1f4000	                         nop dword [rax]	      6185	syntax.c	FUNCTION_92	IF_24
0x4006da0	      0x4c8b7c2438	            mov r15, qword [rsp + 0x38] 	      6185	syntax.c	FUNCTION_92	IF_24
0x4006da5	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x4006daa	          0x4589f5	                          mov r13d, r14d	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x4006dad	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x4006db2	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x4006db7	      0xe800000000	                          call 0x4006dbc	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x4006dbc	          0x4c89ff	                            mov rdi, r15	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x4006dbf	      0xe800000000	                          call 0x4006dc4	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x4006dc4	          0x4585ed	                         test r13d, r13d	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x4006dc7	     0xf855afdffff	                           jne 0x4006b27	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x4006dcd	            0x31ff	                            xor edi, edi	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x4006dcf	      0xba05000000	                              mov edx, 5	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x4006dd4	      0xbe00000000	                              mov esi, 0	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x4006dd9	      0xe800000000	                          call 0x4006dde	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x4006dde	          0x4889ee	                            mov rsi, rbp	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x4006de1	          0x4889c7	                            mov rdi, rax	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x4006de4	      0xe800000000	                          call 0x4006de9	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x4006de9	            0xeb98	                           jmp 0x4006d83	      6147	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x4006deb	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_30
0x4006df0	      0xe800000000	                          call 0x4006df5	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_30
0x4006df5	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x4006dfd	      0xe9cefeffff	                           jmp 0x4006cd0	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x4006e02	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e07	      0xba05000000	                              mov edx, 5	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e0c	      0xbe00000000	                              mov esi, 0	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e11	          0x488b18	                    mov rbx, qword [rax]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e14	            0x31ff	                            xor edi, edi	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e16	      0xe800000000	                          call 0x4006e1b	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e1b	          0x4889de	                            mov rsi, rbx	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e1e	          0x4889c7	                            mov rdi, rax	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e21	      0xe800000000	                          call 0x4006e26	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x4006e26	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      6182	syntax.c	FUNCTION_92	IF_24
0x4006e2c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6181	syntax.c	FUNCTION_92
0x4006e31	          0x488928	                    mov qword [rax], rbp	      6181	syntax.c	FUNCTION_92
0x4006e34	     0xf8451ffffff	                            je 0x4006d8b	      6182	syntax.c	FUNCTION_92	IF_24
0x4006e3a	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6188	syntax.c	FUNCTION_92	IF_25
0x4006e3f	        0x48833800	                      cmp qword [rax], 0	      6188	syntax.c	FUNCTION_92	IF_25
0x4006e43	            0x7477	                            je 0x4006ebc	      6188	syntax.c	FUNCTION_92	IF_25
0x4006e45	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6191	syntax.c	FUNCTION_92	CALL_40
0x4006e4a	      0xe800000000	                          call 0x4006e4f	      6191	syntax.c	FUNCTION_92	CALL_40
0x4006e4f	      0xb801000000	                              mov eax, 1	      6193	syntax.c	FUNCTION_92
0x4006e54	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      6194	syntax.c	FUNCTION_92
0x4006e5c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6194	syntax.c	FUNCTION_92
0x4006e65	            0x7564	                           jne 0x4006ecb	      6194	syntax.c	FUNCTION_92
0x4006e67	    0x4881c4180100	                          add rsp, 0x118	      6194	syntax.c	FUNCTION_92
0x4006e6e	              0x5b	                                 pop rbx	      6194	syntax.c	FUNCTION_92
0x4006e6f	              0x5d	                                 pop rbp	      6194	syntax.c	FUNCTION_92
0x4006e70	            0x415c	                                 pop r12	      6194	syntax.c	FUNCTION_92
0x4006e72	            0x415d	                                 pop r13	      6194	syntax.c	FUNCTION_92
0x4006e74	            0x415e	                                 pop r14	      6194	syntax.c	FUNCTION_92
0x4006e76	            0x415f	                                 pop r15	      6194	syntax.c	FUNCTION_92
0x4006e78	              0xc3	                                     ret	      6194	syntax.c	FUNCTION_92
0x4006e79	        0x8b742408	                mov esi, dword [rsp + 8]	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x4006e7d	          0x4c89ef	                            mov rdi, r13	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x4006e80	      0xe800000000	                          call 0x4006e85	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x4006e85	          0x4189c5	                           mov r13d, eax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x4006e88	      0xe977fcffff	                           jmp 0x4006b04	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x4006e8d	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x4006e91	        0x498d7f02	                      lea rdi, [r15 + 2]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x4006e95	          0x83ee01	                              sub esi, 1	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x4006e98	      0xe8e3a2ffff	              call sym.syn_check_cluster	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x4006e9d	          0x4189c5	                           mov r13d, eax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x4006ea0	      0xe95ffcffff	                           jmp 0x4006b04	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x4006ea5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4006eaa	      0xba05000000	                              mov edx, 5	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4006eaf	      0xbe00000000	                              mov esi, 0	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4006eb4	          0x488b18	                    mov rbx, qword [rax]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4006eb7	      0xe958ffffff	                           jmp 0x4006e14	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x4006ebc	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      6189	syntax.c	FUNCTION_92	IF_25
0x4006ec1	          0x488908	                    mov qword [rax], rcx	      6189	syntax.c	FUNCTION_92	IF_25
0x4006ec4	      0xb801000000	                              mov eax, 1	      6193	syntax.c	FUNCTION_92
0x4006ec9	            0xeb89	                           jmp 0x4006e54	      6193	syntax.c	FUNCTION_92
0x4006ecb	      0xe800000000	                call sym.get_syn_options	      6194	syntax.c	FUNCTION_92
syn_update_ends	SWITCH,0:WHILE,0:DO,0:IF,7:ELSE,0:FOR,3:functions,0:CALL,2	130
0x4003990	            0x4157	                                push r15	      1087	syntax.c	FUNCTION_10
0x4003992	            0x4156	                                push r14	      1087	syntax.c	FUNCTION_10
0x4003994	            0x4155	                                push r13	      1087	syntax.c	FUNCTION_10
0x4003996	            0x4154	                                push r12	      1087	syntax.c	FUNCTION_10
0x4003998	              0x55	                                push rbp	      1087	syntax.c	FUNCTION_10
0x4003999	              0x53	                                push rbx	      1087	syntax.c	FUNCTION_10
0x400399a	        0x4883ec08	                              sub rsp, 8	      1087	syntax.c	FUNCTION_10
0x400399e	            0x85ff	                           test edi, edi	      1092	syntax.c	FUNCTION_10	IF_1
0x40039a0	    0x8b0500000000	            mov eax, dword [0x040039a6] 	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039a6	     0xf84a4000000	                            je 0x4003a50	      1092	syntax.c	FUNCTION_10	IF_1
0x40039ac	            0x85c0	                           test eax, eax	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039ae	     0xf8e9c000000	                           jle 0x4003a50	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039b4	          0x8d48ff	                      lea ecx, [rax - 1]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039b7	    0x488b35000000	            mov rsi, qword [0x040039be] 	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039be	          0x4989c9	                             mov r9, rcx	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039c1	        0x488d0cc9	                  lea rcx, [rcx + rcx*8]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039c5	        0x488d5618	                   lea rdx, [rsi + 0x18]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039c9	        0x48c1e104	                              shl rcx, 4	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039cd	    0x4c8d840ea800	              lea r8, [rsi + rcx + 0xa8]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039d5	            0xeb15	                           jmp 0x40039ec	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039d7	    0x660f1f840000	                    nop word [rax + rax]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039e0	    0x4881c2900000	                           add rdx, 0x90	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039e7	          0x4c39c2	                             cmp rdx, r8	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039ea	            0x7468	                            je 0x4003a54	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x40039ec	        0x48634ae8	          movsxd rcx, dword [rdx - 0x18]	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x40039f0	            0x85c9	                           test ecx, ecx	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x40039f2	            0x78ec	                            js 0x40039e0	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x40039f4	    0x488b35000000	            mov rsi, qword [0x040039fb] 	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x40039fb	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x40039ff	        0x48c1e105	                              shl rcx, 5	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a03	    0x48038e700200	            add rcx, qword [rsi + 0x270]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a0a	          0x803901	                       cmp byte [rcx], 1	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a0d	            0x75d1	                           jne 0x40039e0	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a0f	    0x488b35000000	            mov rsi, qword [0x04003a16] 	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a16	          0x483932	                    cmp qword [rdx], rsi	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a19	            0x7dc5	                           jge 0x40039e0	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a1b	    0x48c702000000	                      mov qword [rdx], 0	      1105	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a22	    0xc74208000000	                  mov dword [rdx + 8], 0	      1106	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a29	          0x488b0a	                    mov rcx, qword [rdx]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a2c	        0x488b5a08	                mov rbx, qword [rdx + 8]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a30	    0x48814a500080	           or qword [rdx + 0x50], 0x8000	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a38	    0xc74244010000	               mov dword [rdx + 0x44], 1	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a3f	        0x48894a20	             mov qword [rdx + 0x20], rcx	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a43	        0x48895a28	             mov qword [rdx + 0x28], rbx	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a47	            0xeb97	                           jmp 0x40039e0	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a49	     0xf1f80000000	                         nop dword [rax]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a50	        0x448d48ff	                      lea r9d, [rax - 1]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4003a54	    0x8b1d00000000	            mov ebx, dword [0x04003a5a] 	      1123	syntax.c	FUNCTION_10	IF_3
0x4003a5a	          0x4489ca	                            mov edx, r9d	      1122	syntax.c	FUNCTION_10
0x4003a5d	            0x85db	                           test ebx, ebx	      1123	syntax.c	FUNCTION_10	IF_3
0x4003a5f	     0xf8813010000	                            js 0x4003b78	      1123	syntax.c	FUNCTION_10	IF_3
0x4003a65	          0x4139d9	                            cmp r9d, ebx	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4003a68	     0xf8e0a010000	                           jle 0x4003b78	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4003a6e	          0x4963c9	                         movsxd rcx, r9d	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a71	    0x488b35000000	            mov rsi, qword [0x04003a78] 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a78	        0x488d0cc9	                  lea rcx, [rcx + rcx*8]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a7c	        0x48c1e104	                              shl rcx, 4	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a80	      0xf6440e6940	     test byte [rsi + rcx + 0x69], 0x40 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a85	     0xf85ed000000	                           jne 0x4003b78	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a8b	      0x488d4c0ed8	             lea rcx, [rsi + rcx - 0x28]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a90	            0xeb1c	                           jmp 0x4003aae	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a92	    0x660f1f440000	                    nop word [rax + rax]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a98	          0x488b31	                    mov rsi, qword [rcx]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003a9b	    0x4881e9900000	                           sub rcx, 0x90	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003aa2	    0xf7c600400000	                        test esi, 0x4000	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003aa8	     0xf85d2000000	                           jne 0x4003b80	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003aae	          0x83ea01	                              sub edx, 1	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4003ab1	            0x39d3	                            cmp ebx, edx	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4003ab3	            0x75e3	                           jne 0x4003a98	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4003ab5	            0x39d8	                            cmp eax, ebx	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003ab7	     0xf8ea3000000	                           jle 0x4003b60	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003abd	          0x4863d3	                         movsxd rdx, ebx	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003ac0	          0x4189fe	                           mov r14d, edi	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003ac3	          0x4531ff	                          xor r15d, r15d	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003ac6	        0x4c8d24d2	                  lea r12, [rdx + rdx*8]	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003aca	    0x41bd01000000	                             mov r13d, 1	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4003ad0	        0x49c1e404	                              shl r12, 4	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4003ad4	            0xeb2b	                           jmp 0x4003b01	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4003ad6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4003ae0	          0x4585f6	                         test r14d, r14d	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4003ae3	            0x7508	                           jne 0x4003aed	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4003ae5	        0xf6456904	               test byte [rbp + 0x69], 4	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4003ae9	        0x450f45fd	                       cmovne r15d, r13d	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x4003aed	    0x8b0500000000	            mov eax, dword [0x04003af3] 	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003af3	          0x83c301	                              add ebx, 1	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003af6	    0x4981c4900000	                           add r12, 0x90	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003afd	            0x39d8	                            cmp eax, ebx	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003aff	            0x7e5f	                           jle 0x4003b60	      1129	syntax.c	FUNCTION_10	FOR_3
0x4003b01	          0x4c89e5	                            mov rbp, r12	      1131	syntax.c	FUNCTION_10	FOR_3
0x4003b04	    0x48032d000000	             add rbp, qword [0x04003b0b]	      1131	syntax.c	FUNCTION_10	FOR_3
0x4003b0b	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b0f	          0xf6c604	                              test dh, 4	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b12	            0x750b	                           jne 0x4003b1f	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b14	          0x4585f6	                         test r14d, r14d	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b17	            0x7537	                           jne 0x4003b50	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b19	        0x41f6c701	                            test r15b, 1	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b1d	            0x7431	                            je 0x4003b50	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b1f	    0x488b05000000	            mov rax, qword [0x04003b26] 	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b26	          0x80e680	                            and dh, 0x80	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4003b29	    0xc74530000000	               mov dword [rbp + 0x30], 0	      1136	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b30	        0x48894528	            mov qword [rbp + 0x28], rax 	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b34	            0x75aa	                           jne 0x4003ae0	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4003b36	    0x8b3500000000	            mov esi, dword [0x04003b3c] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4003b3c	            0x31d2	                            xor edx, edx	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4003b3e	          0x4585f6	                         test r14d, r14d	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4003b41	           0xf94c2	                                 sete dl	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4003b44	          0x4889ef	                            mov rdi, rbp	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4003b47	      0xe8d4fcffff	                  call sym.update_si_end	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4003b4c	            0xeb92	                           jmp 0x4003ae0	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4003b4e	            0x6690	                                     nop	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4003b50	          0x83e801	                              sub eax, 1	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b53	            0x39d8	                            cmp eax, ebx	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b55	            0x7596	                           jne 0x4003aed	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b57	          0x4585f6	                         test r14d, r14d	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b5a	            0x75c3	                           jne 0x4003b1f	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b5c	            0xeb8f	                           jmp 0x4003aed	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b5e	            0x6690	                                     nop	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4003b60	        0x4883c408	                              add rsp, 8	      1147	syntax.c	FUNCTION_10
0x4003b64	              0x5b	                                 pop rbx	      1147	syntax.c	FUNCTION_10
0x4003b65	              0x5d	                                 pop rbp	      1147	syntax.c	FUNCTION_10
0x4003b66	            0x415c	                                 pop r12	      1147	syntax.c	FUNCTION_10
0x4003b68	            0x415d	                                 pop r13	      1147	syntax.c	FUNCTION_10
0x4003b6a	            0x415e	                                 pop r14	      1147	syntax.c	FUNCTION_10
0x4003b6c	            0x415f	                                 pop r15	      1147	syntax.c	FUNCTION_10
0x4003b6e	      0xe92df5ffff	                   jmp sym.check_keepend	      1146	syntax.c	FUNCTION_10	CALL_2
0x4003b73	       0xf1f440000	                   nop dword [rax + rax]	      1146	syntax.c	FUNCTION_10	CALL_2
0x4003b78	          0x4489cb	                            mov ebx, r9d	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003b7b	      0xe935ffffff	                           jmp 0x4003ab5	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4003b80	            0x89d3	                            mov ebx, edx	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4003b82	      0xe92effffff	                           jmp 0x4003ab5	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
syn_combine_list	SWITCH,0:WHILE,1:DO,0:IF,15:ELSE,1:FOR,5:functions,0:CALL,7	192
0x4001320	          0x488b06	                    mov rax, qword [rsi]	      5423	syntax.c	FUNCTION_83	IF_1
0x4001323	          0x4885c0	                           test rax, rax	      5423	syntax.c	FUNCTION_83	IF_1
0x4001326	     0xf8440010000	                            je 0x400146c	      5423	syntax.c	FUNCTION_83	IF_1
0x400132c	            0x4157	                                push r15	      5411	syntax.c	FUNCTION_83
0x400132e	            0x4156	                                push r14	      5411	syntax.c	FUNCTION_83
0x4001330	          0x4989fe	                            mov r14, rdi	      5411	syntax.c	FUNCTION_83
0x4001333	            0x4155	                                push r13	      5411	syntax.c	FUNCTION_83
0x4001335	            0x4154	                                push r12	      5411	syntax.c	FUNCTION_83
0x4001337	          0x4189d5	                           mov r13d, edx	      5411	syntax.c	FUNCTION_83
0x400133a	              0x55	                                push rbp	      5411	syntax.c	FUNCTION_83
0x400133b	              0x53	                                push rbx	      5411	syntax.c	FUNCTION_83
0x400133c	          0x4889f5	                            mov rbp, rsi	      5411	syntax.c	FUNCTION_83
0x400133f	        0x4883ec18	                           sub rsp, 0x18	      5411	syntax.c	FUNCTION_83
0x4001343	          0x488b3f	                    mov rdi, qword [rdi]	      5425	syntax.c	FUNCTION_83	IF_2
0x4001346	          0x4885ff	                           test rdi, rdi	      5425	syntax.c	FUNCTION_83	IF_2
0x4001349	     0xf8411020000	                            je 0x4001560	      5425	syntax.c	FUNCTION_83	IF_2
0x400134f	          0x83fa01	                              cmp edx, 1	      5425	syntax.c	FUNCTION_83	IF_2
0x4001352	     0xf8448020000	                            je 0x40015a0	      5425	syntax.c	FUNCTION_83	IF_2
0x4001358	            0x31f6	                            xor esi, esi	      5436	syntax.c	FUNCTION_83	FOR_1
0x400135a	        0x66833f00	                       cmp word [rdi], 0	      5436	syntax.c	FUNCTION_83	FOR_1
0x400135e	          0x4889fa	                            mov rdx, rdi	      5436	syntax.c	FUNCTION_83	FOR_1
0x4001361	     0xf8429020000	                            je 0x4001590	      5436	syntax.c	FUNCTION_83	FOR_1
0x4001367	    0x660f1f840000	                    nop word [rax + rax]	      5436	syntax.c	FUNCTION_83	FOR_1
0x4001370	        0x4883c202	                              add rdx, 2	      5436	syntax.c	FUNCTION_83	FOR_1
0x4001374	          0x83c601	                              add esi, 1	      5437	syntax.c	FUNCTION_83	FOR_1
0x4001377	        0x66833a00	                       cmp word [rdx], 0	      5436	syntax.c	FUNCTION_83	FOR_1
0x400137b	            0x75f3	                           jne 0x4001370	      5436	syntax.c	FUNCTION_83	FOR_1
0x400137d	          0x4863f6	                         movsxd rsi, esi	      5436	syntax.c	FUNCTION_83	FOR_1
0x4001380	        0x66833800	                       cmp word [rax], 0	      5438	syntax.c	FUNCTION_83	FOR_2
0x4001384	     0xf840d020000	                            je 0x4001597	      5438	syntax.c	FUNCTION_83	FOR_2
0x400138a	            0x31d2	                            xor edx, edx	      5438	syntax.c	FUNCTION_83	FOR_2
0x400138c	         0xf1f4000	                         nop dword [rax]	      5438	syntax.c	FUNCTION_83	FOR_2
0x4001390	        0x4883c002	                              add rax, 2	      5438	syntax.c	FUNCTION_83	FOR_2
0x4001394	          0x83c201	                              add edx, 1	      5439	syntax.c	FUNCTION_83	FOR_2
0x4001397	        0x66833800	                       cmp word [rax], 0	      5438	syntax.c	FUNCTION_83	FOR_2
0x400139b	            0x75f3	                           jne 0x4001390	      5438	syntax.c	FUNCTION_83	FOR_2
0x400139d	          0x4863da	                         movsxd rbx, edx	      5438	syntax.c	FUNCTION_83	FOR_2
0x40013a0	      0xb900000000	                              mov ecx, 0	      5444	syntax.c	FUNCTION_83	CALL_3
0x40013a5	      0xba02000000	                              mov edx, 2	      5444	syntax.c	FUNCTION_83	CALL_3
0x40013aa	    0x41bc01000000	                             mov r12d, 1	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013b0	      0xe800000000	                          call 0x40013b5	      5444	syntax.c	FUNCTION_83	CALL_3
0x40013b5	        0x488b7d00	                    mov rdi, qword [rbp]	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013b9	      0xb900000000	                              mov ecx, 0	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013be	      0xba02000000	                              mov edx, 2	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013c3	          0x4889de	                            mov rsi, rbx	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013c6	    0x41bf02000000	                             mov r15d, 2	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013cc	      0xe800000000	                          call 0x40013d1	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013d1	        0x4c8b5500	                    mov r10, qword [rbp]	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013d5	          0x498b3e	                    mov rdi, qword [r14]	      5445	syntax.c	FUNCTION_83	CALL_4
0x40013d8	            0x31c0	                            xor eax, eax	      5416	syntax.c	FUNCTION_83
0x40013da	           0xfb70f	                   movzx ecx, word [rdi]	      5416	syntax.c	FUNCTION_83
0x40013dd	          0x4989f9	                             mov r9, rdi	      5455	syntax.c	FUNCTION_83	FOR_3
0x40013e0	          0x4c89d6	                            mov rsi, r10	      5456	syntax.c	FUNCTION_83	FOR_3
0x40013e3	            0x31db	                            xor ebx, ebx	      5457	syntax.c	FUNCTION_83	FOR_3
0x40013e5	           0xf1f00	                         nop dword [rax]	      5457	syntax.c	FUNCTION_83	FOR_3
0x40013e8	          0x6685c9	                             test cx, cx	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40013eb	            0x742f	                            je 0x400141c	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40013ed	        0x440fb706	                   movzx r8d, word [rsi]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40013f1	        0x664585c0	                           test r8w, r8w	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40013f5	     0xf84e5000000	                            je 0x40014e0	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40013fb	        0x664439c1	                             cmp cx, r8w	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x40013ff	            0x7d6f	                           jge 0x4001470	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4001401	        0x4183fc02	                             cmp r12d, 2	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x4001405	     0xf84aa010000	                            je 0x40015b5	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x400140b	      0x410fb74902	                movzx ecx, word [r9 + 2]	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x4001410	          0x83c301	                              add ebx, 1	      5471	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4001413	        0x4983c102	                               add r9, 2	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4001417	          0x6685c9	                             test cx, cx	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400141a	            0x75d1	                           jne 0x40013ed	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x400141c	        0x4183fd02	                             cmp r13d, 2	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x4001420	     0xf84ef000000	                            je 0x4001515	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x4001426	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x4001430	        0x4183fc01	                             cmp r12d, 1	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4001434	            0x7470	                            je 0x40014a6	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4001436	        0x4183ff03	                             cmp r15d, 3	      5453	syntax.c	FUNCTION_83	FOR_3
0x400143a	     0xf8590000000	                           jne 0x40014d0	      5453	syntax.c	FUNCTION_83	FOR_3
0x4001440	          0x498b3e	                    mov rdi, qword [r14]	      5524	syntax.c	FUNCTION_83	CALL_6
0x4001443	      0x4889442408	                mov qword [rsp + 8], rax	      5524	syntax.c	FUNCTION_83	CALL_6
0x4001448	      0xe800000000	                          call 0x400144d	      5524	syntax.c	FUNCTION_83	CALL_6
0x400144d	        0x488b7d00	                    mov rdi, qword [rbp]	      5525	syntax.c	FUNCTION_83	CALL_7
0x4001451	      0xe800000000	                          call 0x4001456	      5525	syntax.c	FUNCTION_83	CALL_7
0x4001456	      0x488b442408	                mov rax, qword [rsp + 8]	      5526	syntax.c	FUNCTION_83
0x400145b	          0x498906	                    mov qword [r14], rax	      5526	syntax.c	FUNCTION_83
0x400145e	        0x4883c418	                           add rsp, 0x18	      5527	syntax.c	FUNCTION_83
0x4001462	              0x5b	                                 pop rbx	      5527	syntax.c	FUNCTION_83
0x4001463	              0x5d	                                 pop rbp	      5527	syntax.c	FUNCTION_83
0x4001464	            0x415c	                                 pop r12	      5527	syntax.c	FUNCTION_83
0x4001466	            0x415d	                                 pop r13	      5527	syntax.c	FUNCTION_83
0x4001468	            0x415e	                                 pop r14	      5527	syntax.c	FUNCTION_83
0x400146a	            0x415f	                                 pop r15	      5527	syntax.c	FUNCTION_83
0x400146c	            0xf3c3	                                     ret	      5527	syntax.c	FUNCTION_83
0x400146e	            0x6690	                                     nop	      5527	syntax.c	FUNCTION_83
0x4001470	        0x4183fd02	                             cmp r13d, 2	      5479	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x4001474	            0x7412	                            je 0x4001488	      5479	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x4001476	        0x664439c1	                             cmp cx, r8w	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400147a	            0x741f	                            je 0x400149b	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400147c	        0x4883c602	                              add rsi, 2	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4001480	      0xe963ffffff	                           jmp 0x40013e8	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4001485	           0xf1f00	                         nop dword [rax]	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4001488	        0x4183fc02	                             cmp r12d, 2	      5481	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x400148c	     0xf8436010000	                            je 0x40015c8	      5481	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x4001492	          0x83c301	                              add ebx, 1	      5483	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0x4001495	        0x664439c1	                             cmp cx, r8w	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4001499	            0x75e1	                           jne 0x400147c	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x400149b	      0x410fb74902	                movzx ecx, word [r9 + 2]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x40014a0	        0x4983c102	                               add r9, 2	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x40014a4	            0xebd6	                           jmp 0x400147c	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x40014a6	            0x85db	                           test ebx, ebx	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x40014a8	     0xf8413010000	                            je 0x40015c1	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x40014ae	        0x8d7c1b02	                lea edi, [rbx + rbx + 2]	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x40014b2	      0xe800000000	                          call 0x40014b7	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x40014b7	          0x4885c0	                           test rax, rax	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x40014ba	     0xf8401010000	                            je 0x40015c1	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x40014c0	        0x4c8b5500	                    mov r10, qword [rbp]	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x40014c4	          0x498b3e	                    mov rdi, qword [r14]	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x40014c7	          0x4863db	                         movsxd rbx, ebx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40014ca	            0x31d2	                            xor edx, edx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40014cc	        0x66891458	              mov word [rax + rbx*2], dx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40014d0	        0x4183c701	                             add r15d, 1	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40014d4	        0x4183c401	                             add r12d, 1	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40014d8	      0xe9fdfeffff	                           jmp 0x40013da	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40014dd	           0xf1f00	                         nop dword [rax]	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40014e0	          0x4863d3	                         movsxd rdx, ebx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x40014e3	          0x4531c0	                            xor r8d, r8d	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40014e6	        0x488d1450	                  lea rdx, [rax + rdx*2]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40014ea	    0x660f1f440000	                    nop word [rax + rax]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x40014f0	        0x4183fc02	                             cmp r12d, 2	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x40014f4	     0xf84b1000000	                            je 0x40015ab	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x40014fa	        0x4983c002	                               add r8, 2	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x40014fe	          0x83c301	                              add ebx, 1	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4001501	      0x430fb70c01	               movzx ecx, word [r9 + r8]	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4001506	          0x6685c9	                             test cx, cx	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4001509	            0x75e5	                           jne 0x40014f0	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x400150b	        0x4183fd02	                             cmp r13d, 2	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x400150f	     0xf851bffffff	                           jne 0x4001430	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x4001515	           0xfb70e	                   movzx ecx, word [rsi]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4001518	          0x6685c9	                             test cx, cx	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400151b	     0xf840fffffff	                            je 0x4001430	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4001521	          0x4863d3	                         movsxd rdx, ebx	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4001524	        0x4c8d0450	                   lea r8, [rax + rdx*2]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4001528	            0x31d2	                            xor edx, edx	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400152a	    0x660f1f440000	                    nop word [rax + rax]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4001530	        0x4183fc02	                             cmp r12d, 2	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x4001534	     0xf84a3000000	                            je 0x40015dd	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400153a	        0x4883c202	                              add rdx, 2	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x400153e	          0x83c301	                              add ebx, 1	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4001541	         0xfb70c16	             movzx ecx, word [rsi + rdx]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4001545	          0x6685c9	                             test cx, cx	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4001548	            0x75e6	                           jne 0x4001530	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x400154a	        0x4183fc01	                             cmp r12d, 1	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x400154e	     0xf85e2feffff	                           jne 0x4001436	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4001554	      0xe955ffffff	                           jmp 0x40014ae	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4001559	     0xf1f80000000	                         nop dword [rax]	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4001560	          0x83fa01	                              cmp edx, 1	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x4001563	            0x743b	                            je 0x40015a0	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x4001565	          0x4889c7	                            mov rdi, rax	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x4001568	        0x4183ed01	                             sub r13d, 1	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x400156c	        0x4183fd01	                             cmp r13d, 1	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x4001570	            0x7616	                           jbe 0x4001588	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x4001572	        0x4883c418	                           add rsp, 0x18	      5527	syntax.c	FUNCTION_83
0x4001576	              0x5b	                                 pop rbx	      5527	syntax.c	FUNCTION_83
0x4001577	              0x5d	                                 pop rbp	      5527	syntax.c	FUNCTION_83
0x4001578	            0x415c	                                 pop r12	      5527	syntax.c	FUNCTION_83
0x400157a	            0x415d	                                 pop r13	      5527	syntax.c	FUNCTION_83
0x400157c	            0x415e	                                 pop r14	      5527	syntax.c	FUNCTION_83
0x400157e	            0x415f	                                 pop r15	      5527	syntax.c	FUNCTION_83
0x4001580	      0xe900000000	                           jmp 0x4001585	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x4001585	           0xf1f00	                         nop dword [rax]	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x4001588	          0x49893e	                    mov qword [r14], rdi	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x400158b	      0xe9cefeffff	                           jmp 0x400145e	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x4001590	            0x31f6	                            xor esi, esi	      5436	syntax.c	FUNCTION_83	FOR_1
0x4001592	      0xe9e9fdffff	                           jmp 0x4001380	      5436	syntax.c	FUNCTION_83	FOR_1
0x4001597	            0x31db	                            xor ebx, ebx	      5438	syntax.c	FUNCTION_83	FOR_2
0x4001599	      0xe902feffff	                           jmp 0x40013a0	      5438	syntax.c	FUNCTION_83	FOR_2
0x400159e	            0x6690	                                     nop	      5438	syntax.c	FUNCTION_83	FOR_2
0x40015a0	      0xe800000000	                          call 0x40015a5	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x40015a5	        0x488b7d00	                    mov rdi, qword [rbp]	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x40015a9	            0xebbd	                           jmp 0x4001568	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x40015ab	      0x6642890c02	                 mov word [rdx + r8], cx	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x40015b0	      0xe945ffffff	                           jmp 0x40014fa	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x40015b5	          0x4863d3	                         movsxd rdx, ebx	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x40015b8	        0x66890c50	              mov word [rax + rdx*2], cx	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x40015bc	      0xe94afeffff	                           jmp 0x400140b	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x40015c1	            0x31c0	                            xor eax, eax	      5511	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x40015c3	      0xe978feffff	                           jmp 0x4001440	      5511	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x40015c8	          0x4863d3	                         movsxd rdx, ebx	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40015cb	      0x6644890450	             mov word [rax + rdx*2], r8w	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40015d0	        0x410fb709	                    movzx ecx, word [r9]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40015d4	        0x440fb706	                   movzx r8d, word [rsi]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40015d8	      0xe9b5feffff	                           jmp 0x4001492	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x40015dd	      0x6641890c10	                 mov word [r8 + rdx], cx	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x40015e2	      0xe953ffffff	                           jmp 0x400153a	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
put_id_list	SWITCH,0:WHILE,0:DO,0:IF,6:ELSE,5:FOR,1:functions,0:CALL,11	74
0x4001700	              0x55	                                push rbp	      4227	syntax.c	FUNCTION_69
0x4001701	              0x53	                                push rbx	      4227	syntax.c	FUNCTION_69
0x4001702	          0x4889f5	                            mov rbp, rsi	      4227	syntax.c	FUNCTION_69
0x4001705	            0x89d6	                            mov esi, edx	      4230	syntax.c	FUNCTION_69	CALL_1
0x4001707	        0x4883ec08	                              sub rsp, 8	      4227	syntax.c	FUNCTION_69
0x400170b	      0xe800000000	                          call 0x4001710	      4230	syntax.c	FUNCTION_69	CALL_1
0x4001710	      0xbf3d000000	                           mov edi, 0x3d	      4231	syntax.c	FUNCTION_69	CALL_2
0x4001715	      0xe800000000	                          call 0x400171a	      4231	syntax.c	FUNCTION_69	CALL_2
0x400171a	      0x480fbf5d00	                   movsx rbx, word [rbp]	      4232	syntax.c	FUNCTION_69	FOR_1
0x400171f	          0x6685db	                             test bx, bx	      4232	syntax.c	FUNCTION_69	FOR_1
0x4001722	            0x742c	                            je 0x4001750	      4232	syntax.c	FUNCTION_69	FOR_1
0x4001724	    0x8d83e0b1ffff	                 lea eax, [rbx - 0x4e20]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x400172a	        0x663de703	                           cmp ax, 0x3e7	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x400172e	            0x7730	                            ja 0x4001760	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4001730	      0x66837d0200	                   cmp word [rbp + 2], 0	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4001735	     0xf84bd000000	                            je 0x40017f8	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x400173b	      0xbf00000000	                              mov edi, 0	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x4001740	      0xe800000000	                          call 0x4001745	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x4001745	      0x66837d0200	                   cmp word [rbp + 2], 0	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x400174a	     0xf8580000000	                           jne 0x40017d0	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x4001750	        0x4883c408	                              add rsp, 8	      4262	syntax.c	FUNCTION_69
0x4001754	      0xbf20000000	                           mov edi, 0x20	      4261	syntax.c	FUNCTION_69	CALL_11
0x4001759	              0x5b	                                 pop rbx	      4262	syntax.c	FUNCTION_69
0x400175a	              0x5d	                                 pop rbp	      4262	syntax.c	FUNCTION_69
0x400175b	      0xe900000000	                           jmp 0x4001760	      4261	syntax.c	FUNCTION_69	CALL_11
0x4001760	    0x8d83f8adffff	                 lea eax, [rbx - 0x5208]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4001766	        0x663de703	                           cmp ax, 0x3e7	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x400176a	     0xf86a0000000	                           jbe 0x4001810	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4001770	    0x8d8310aaffff	                 lea eax, [rbx - 0x55f0]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4001776	        0x663de703	                           cmp ax, 0x3e7	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x400177a	     0xf86c8000000	                           jbe 0x4001848	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4001780	      0x6681fbd759	                          cmp bx, 0x59d7	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4001785	     0xf8e95000000	                           jle 0x4001820	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x400178b	      0xbf40000000	                           mov edi, 0x40	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x4001790	      0x6681ebd859	                          sub bx, 0x59d8	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4001795	      0xe800000000	                          call 0x400179a	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x400179a	    0x488b05000000	            mov rax, qword [0x040017a1] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40017a1	        0x480fbfdb	                           movsx rbx, bx	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40017a5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40017a9	        0x488d045b	                  lea rax, [rbx + rbx*2]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40017ad	    0x488b8a880200	           mov rcx, qword [rdx + 0x288] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40017b4	        0x488d04c1	                  lea rax, [rcx + rax*8]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40017b8	          0x488b38	                    mov rdi, qword [rax]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40017bb	      0xe800000000	                          call 0x40017c0	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40017c0	      0x66837d0200	                   cmp word [rbp + 2], 0	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x40017c5	            0x7489	                            je 0x4001750	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x40017c7	    0x660f1f840000	                    nop word [rax + rax]	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x40017d0	      0xbf2c000000	                           mov edi, 0x2c	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_10
0x40017d5	        0x4883c502	                              add rbp, 2	      4232	syntax.c	FUNCTION_69	FOR_1
0x40017d9	      0xe800000000	                          call 0x40017de	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_10
0x40017de	      0x480fbf5d00	                   movsx rbx, word [rbp]	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_10
0x40017e3	          0x6685db	                             test bx, bx	      4232	syntax.c	FUNCTION_69	FOR_1
0x40017e6	     0xf8538ffffff	                           jne 0x4001724	      4232	syntax.c	FUNCTION_69	FOR_1
0x40017ec	      0xe95fffffff	                           jmp 0x4001750	      4232	syntax.c	FUNCTION_69	FOR_1
0x40017f1	     0xf1f80000000	                         nop dword [rax]	      4232	syntax.c	FUNCTION_69	FOR_1
0x40017f8	      0xbf00000000	                              mov edi, 0	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x40017fd	      0xe800000000	                          call 0x4001802	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x4001802	      0xe93effffff	                           jmp 0x4001745	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x4001807	    0x660f1f840000	                    nop word [rax + rax]	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x4001810	      0xbf00000000	                              mov edi, 0	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x4001815	      0xe800000000	                          call 0x400181a	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x400181a	      0xe926ffffff	                           jmp 0x4001745	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x400181f	              0x90	                                     nop	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x4001820	        0x488d04db	                  lea rax, [rbx + rbx*8]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4001824	    0x488b15000000	            mov rdx, qword [0x0400182b] 	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x400182b	        0x488d0443	                  lea rax, [rbx + rax*2]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x400182f	        0x488d04c2	                  lea rax, [rdx + rax*8]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4001833	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x400183a	      0xe800000000	                          call 0x400183f	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x400183f	      0xe901ffffff	                           jmp 0x4001745	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4001844	         0xf1f4000	                         nop dword [rax]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4001848	      0xbf00000000	                              mov edi, 0	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x400184d	      0xe800000000	                          call 0x4001852	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x4001852	      0xe9eefeffff	                           jmp 0x4001745	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
syn_add_end_off	SWITCH,0:WHILE,2:DO,0:IF,5:ELSE,3:FOR,0:functions,0:CALL,3	103
0x4000610	            0x4155	                                push r13	      3204	syntax.c	FUNCTION_40
0x4000612	            0x4154	                                push r12	      3204	syntax.c	FUNCTION_40
0x4000614	          0x4989fd	                            mov r13, rdi	      3204	syntax.c	FUNCTION_40
0x4000617	              0x55	                                push rbp	      3204	syntax.c	FUNCTION_40
0x4000618	              0x53	                                push rbx	      3204	syntax.c	FUNCTION_40
0x4000619	        0x4883ec08	                              sub rsp, 8	      3204	syntax.c	FUNCTION_40
0x400061d	         0xfbf4204	               movsx eax, word [rdx + 4]	      3210	syntax.c	FUNCTION_40	IF_1
0x4000621	           0xfa3c8	                             bt eax, ecx	      3210	syntax.c	FUNCTION_40	IF_1
0x4000624	            0x733a	                           jae 0x4000660	      3210	syntax.c	FUNCTION_40	IF_1
0x4000626	        0x488b4608	                mov rax, qword [rsi + 8]	      3212	syntax.c	FUNCTION_40	IF_1
0x400062a	          0x4863c9	                         movsxd rcx, ecx	      3214	syntax.c	FUNCTION_40	IF_1
0x400062d	        0x48635e10	         movsxd rbx, dword [rsi + 0x10] 	      3213	syntax.c	FUNCTION_40	IF_1
0x4000631	      0x4403448a08	        add r8d, dword [rdx + rcx*4 + 8]	      3214	syntax.c	FUNCTION_40	IF_1
0x4000636	          0x488907	                    mov qword [rdi], rax	      3212	syntax.c	FUNCTION_40	IF_1
0x4000639	    0x488b3d000000	            mov rdi, qword [0x04000640] 	      3224	syntax.c	FUNCTION_40	IF_2
0x4000640	          0x4489c5	                            mov ebp, r8d	      3214	syntax.c	FUNCTION_40	IF_1
0x4000643	          0x483907	                    cmp qword [rdi], rax	      3224	syntax.c	FUNCTION_40	IF_2
0x4000646	            0x7c3c	                            jl 0x4000684	      3224	syntax.c	FUNCTION_40	IF_2
0x4000648	            0x85ed	                           test ebp, ebp	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x400064a	            0x754c	                           jne 0x4000698	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x400064c	        0x41895d08	                mov dword [r13 + 8], ebx	      3242	syntax.c	FUNCTION_40
0x4000650	        0x4883c408	                              add rsp, 8	      3243	syntax.c	FUNCTION_40
0x4000654	              0x5b	                                 pop rbx	      3243	syntax.c	FUNCTION_40
0x4000655	              0x5d	                                 pop rbp	      3243	syntax.c	FUNCTION_40
0x4000656	            0x415c	                                 pop r12	      3243	syntax.c	FUNCTION_40
0x4000658	            0x415d	                                 pop r13	      3243	syntax.c	FUNCTION_40
0x400065a	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
0x400065b	       0xf1f440000	                   nop dword [rax + rax]	      3243	syntax.c	FUNCTION_40
0x4000660	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      3218	syntax.c	FUNCTION_40	ELSE_1
0x4000667	          0x4863c9	                         movsxd rcx, ecx	      3220	syntax.c	FUNCTION_40	ELSE_1
0x400066a	    0x48639eb00000	         movsxd rbx, dword [rsi + 0xb0] 	      3219	syntax.c	FUNCTION_40	ELSE_1
0x4000671	        0x8b6c8a08	       mov ebp, dword [rdx + rcx*4 + 8] 	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4000675	          0x488907	                    mov qword [rdi], rax	      3218	syntax.c	FUNCTION_40	ELSE_1
0x4000678	    0x488b3d000000	            mov rdi, qword [0x0400067f] 	      3224	syntax.c	FUNCTION_40	IF_2
0x400067f	          0x483907	                    cmp qword [rdi], rax	      3224	syntax.c	FUNCTION_40	IF_2
0x4000682	            0x7dc4	                           jge 0x4000648	      3224	syntax.c	FUNCTION_40	IF_2
0x4000684	            0x31db	                            xor ebx, ebx	      3225	syntax.c	FUNCTION_40	IF_2
0x4000686	        0x41895d08	                mov dword [r13 + 8], ebx	      3242	syntax.c	FUNCTION_40
0x400068a	        0x4883c408	                              add rsp, 8	      3243	syntax.c	FUNCTION_40
0x400068e	              0x5b	                                 pop rbx	      3243	syntax.c	FUNCTION_40
0x400068f	              0x5d	                                 pop rbp	      3243	syntax.c	FUNCTION_40
0x4000690	            0x415c	                                 pop r12	      3243	syntax.c	FUNCTION_40
0x4000692	            0x415d	                                 pop r13	      3243	syntax.c	FUNCTION_40
0x4000694	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
0x4000695	           0xf1f00	                         nop dword [rax]	      3243	syntax.c	FUNCTION_40
0x4000698	            0x31d2	                            xor edx, edx	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x400069a	          0x4889c6	                            mov rsi, rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x400069d	      0xe800000000	                          call 0x40006a2	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x40006a2	          0x4801c3	                            add rbx, rax	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x40006a5	            0x85ed	                           test ebp, ebp	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x40006a7	          0x4989c4	                            mov r12, rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x40006aa	            0x7e3c	                           jle 0x40006e8	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x40006ac	          0x83ed01	                              sub ebp, 1	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40006af	            0xeb12	                           jmp 0x40006c3	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40006b1	     0xf1f80000000	                         nop dword [rax]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40006b8	          0x83ed01	                              sub ebp, 1	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40006bb	          0x4801c3	                            add rbx, rax	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006be	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40006c1	            0x7475	                            je 0x4000738	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40006c3	          0x803b00	                       cmp byte [rbx], 0	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40006c6	            0x7470	                            je 0x4000738	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40006c8	    0x8b0d00000000	            mov ecx, dword [0x040006ce] 	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006ce	      0xb801000000	                              mov eax, 1	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006d3	            0x85c9	                           test ecx, ecx	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006d5	            0x74e1	                            je 0x40006b8	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006d7	          0x4889df	                            mov rdi, rbx	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006da	    0xff1500000000	                 call qword [0x040006e0]	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006e0	            0x4898	                                    cdqe	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006e2	            0xebd4	                           jmp 0x40006b8	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006e4	         0xf1f4000	                         nop dword [rax]	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006e8	          0x83c501	                              add ebp, 1	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40006eb	          0x4839d8	                            cmp rax, rbx	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40006ee	            0x721d	                            jb 0x400070d	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40006f0	            0xeb46	                           jmp 0x4000738	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40006f2	    0x660f1f440000	                    nop word [rax + rax]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40006f8	          0x4801c3	                            add rbx, rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x40006fb	            0x89e8	                            mov eax, ebp	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40006fd	          0x4939dc	                            cmp r12, rbx	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000700	           0xf92c2	                                 setb dl	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000703	          0xc1e81f	                           shr eax, 0x1f	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000706	          0x83c501	                              add ebp, 1	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000709	            0x84c2	                             test dl, al	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x400070b	            0x742b	                            je 0x4000738	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x400070d	    0x8b1500000000	            mov edx, dword [0x04000713] 	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000713	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400071a	            0x85d2	                           test edx, edx	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400071c	            0x74da	                            je 0x40006f8	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400071e	        0x488d3403	                    lea rsi, [rbx + rax]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000722	          0x4c89e7	                            mov rdi, r12	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000725	    0xff1500000000	                 call qword [0x0400072b]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400072b	          0x83c001	                              add eax, 1	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400072e	            0x4898	                                    cdqe	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000730	          0x48f7d8	                                 neg rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000733	            0xebc3	                           jmp 0x40006f8	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000735	           0xf1f00	                         nop dword [rax]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000738	          0x4429e3	                           sub ebx, r12d	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x400073b	        0x41895d08	                mov dword [r13 + 8], ebx	      3242	syntax.c	FUNCTION_40
0x400073f	        0x4883c408	                              add rsp, 8	      3243	syntax.c	FUNCTION_40
0x4000743	              0x5b	                                 pop rbx	      3243	syntax.c	FUNCTION_40
0x4000744	              0x5d	                                 pop rbp	      3243	syntax.c	FUNCTION_40
0x4000745	            0x415c	                                 pop r12	      3243	syntax.c	FUNCTION_40
0x4000747	            0x415d	                                 pop r13	      3243	syntax.c	FUNCTION_40
0x4000749	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
syn_start_line	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,2	14
0x4008a40	        0x4883ec08	                              sub rsp, 8	      1059	syntax.c	FUNCTION_9
0x4008a44	    0x8b0500000000	            mov eax, dword [0x04008a4a] 	      1067	syntax.c	FUNCTION_9	IF_1
0x4008a4a	    0xc70500000000	               mov dword [0x04008a54], 0	      1060	syntax.c	FUNCTION_9
0x4008a54	    0xc70500000000	               mov dword [0x04008a5e], 0	      1061	syntax.c	FUNCTION_9
0x4008a5e	            0x85c0	                           test eax, eax	      1067	syntax.c	FUNCTION_9	IF_1
0x4008a60	            0x7e0f	                           jle 0x4008a71	      1067	syntax.c	FUNCTION_9	IF_1
0x4008a62	      0xbf01000000	                              mov edi, 1	      1069	syntax.c	FUNCTION_9	IF_1	CALL_1
0x4008a67	      0xe824afffff	                call sym.syn_update_ends	      1069	syntax.c	FUNCTION_9	IF_1	CALL_1
0x4008a6c	      0xe80ffdffff	               call sym.check_state_ends	      1070	syntax.c	FUNCTION_9	IF_1	CALL_2
0x4008a71	    0xc70500000000	     mov dword [0x04008a7b], 0xffffffff 	      1073	syntax.c	FUNCTION_9
0x4008a7b	    0x830500000000	               add dword [0x04008a82], 1	      1074	syntax.c	FUNCTION_9
0x4008a82	    0xc70500000000	               mov dword [0x04008a8c], 1	      1076	syntax.c	FUNCTION_9
0x4008a8c	        0x4883c408	                              add rsp, 8	      1078	syntax.c	FUNCTION_9
0x4008a90	              0xc3	                                     ret	      1078	syntax.c	FUNCTION_9
check_keepend	SWITCH,0:WHILE,0:DO,0:IF,6:ELSE,0:FOR,2:functions,0:CALL,3	104
0x40030a0	        0x4883ec38	                           sub rsp, 0x38	      2771	syntax.c	FUNCTION_33
0x40030a4	    0x8b0d00000000	            mov ecx, dword [0x040030aa] 	      2781	syntax.c	FUNCTION_33	IF_1
0x40030aa	    0x64488b042528	                mov rax, qword fs:[0x28]	      2771	syntax.c	FUNCTION_33
0x40030b3	      0x4889442428	             mov qword [rsp + 0x28], rax	      2771	syntax.c	FUNCTION_33
0x40030b8	            0x31c0	                            xor eax, eax	      2771	syntax.c	FUNCTION_33
0x40030ba	            0x85c9	                           test ecx, ecx	      2781	syntax.c	FUNCTION_33	IF_1
0x40030bc	     0xf8846010000	                            js 0x4003208	      2781	syntax.c	FUNCTION_33	IF_1
0x40030c2	    0x8b3d00000000	            mov edi, dword [0x040030c8] 	      2789	syntax.c	FUNCTION_33	FOR_1
0x40030c8	          0x8d47ff	                      lea eax, [rdi - 1]	      2789	syntax.c	FUNCTION_33	FOR_1
0x40030cb	            0x39c1	                            cmp ecx, eax	      2789	syntax.c	FUNCTION_33	FOR_1
0x40030cd	     0xf8d85010000	                           jge 0x4003258	      2789	syntax.c	FUNCTION_33	FOR_1
0x40030d3	          0x4863d0	                         movsxd rdx, eax	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40030d6	    0x488b35000000	            mov rsi, qword [0x040030dd] 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40030dd	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40030e1	        0x48c1e204	                              shl rdx, 4	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40030e5	      0xf644166940	     test byte [rsi + rdx + 0x69], 0x40 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40030ea	     0xf8568010000	                           jne 0x4003258	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40030f0	      0x488d5416d8	             lea rdx, [rsi + rdx - 0x28]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40030f5	            0xeb1f	                           jmp 0x4003116	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40030f7	    0x660f1f840000	                    nop word [rax + rax]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x4003100	          0x488b32	                    mov rsi, qword [rdx]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x4003103	    0x4881ea900000	                           sub rdx, 0x90	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x400310a	    0xf7c600400000	                        test esi, 0x4000	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x4003110	     0xf8542010000	                           jne 0x4003258	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x4003116	          0x83e801	                              sub eax, 1	      2789	syntax.c	FUNCTION_33	FOR_1
0x4003119	            0x39c1	                            cmp ecx, eax	      2789	syntax.c	FUNCTION_33	FOR_1
0x400311b	            0x75e3	                           jne 0x4003100	      2789	syntax.c	FUNCTION_33	FOR_1
0x400311d	            0x39cf	                            cmp edi, ecx	      2797	syntax.c	FUNCTION_33	FOR_2
0x400311f	    0x48c704240000	                      mov qword [rsp], 0	      2793	syntax.c	FUNCTION_33
0x4003127	    0xc74424080000	                  mov dword [rsp + 8], 0	      2794	syntax.c	FUNCTION_33
0x400312f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2795	syntax.c	FUNCTION_33
0x4003138	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2796	syntax.c	FUNCTION_33
0x4003140	     0xf8ec2000000	                           jle 0x4003208	      2797	syntax.c	FUNCTION_33	FOR_2
0x4003146	          0x4863c1	                         movsxd rax, ecx	      2797	syntax.c	FUNCTION_33	FOR_2
0x4003149	        0x4c8d0cc0	                   lea r9, [rax + rax*8]	      2797	syntax.c	FUNCTION_33	FOR_2
0x400314d	            0x31c0	                            xor eax, eax	      2797	syntax.c	FUNCTION_33	FOR_2
0x400314f	        0x49c1e104	                               shl r9, 4	      2797	syntax.c	FUNCTION_33	FOR_2
0x4003153	            0xeb25	                           jmp 0x400317a	      2797	syntax.c	FUNCTION_33	FOR_2
0x4003155	           0xf1f00	                         nop dword [rax]	      2797	syntax.c	FUNCTION_33	FOR_2
0x4003158	        0x418b405c	              mov eax, dword [r8 + 0x5c]	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400315c	            0x85c0	                           test eax, eax	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400315e	            0x7557	                           jne 0x40031b7	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4003160	          0x83c101	                              add ecx, 1	      2797	syntax.c	FUNCTION_33	FOR_2
0x4003163	    0x4981c1900000	                            add r9, 0x90	      2797	syntax.c	FUNCTION_33	FOR_2
0x400316a	    0x390d00000000	            cmp dword [0x04003170], ecx 	      2797	syntax.c	FUNCTION_33	FOR_2
0x4003170	     0xf8e92000000	                           jle 0x4003208	      2797	syntax.c	FUNCTION_33	FOR_2
0x4003176	        0x488b0424	                    mov rax, qword [rsp]	      2797	syntax.c	FUNCTION_33	FOR_2
0x400317a	          0x4d89c8	                              mov r8, r9	      2799	syntax.c	FUNCTION_33	FOR_2
0x400317d	    0x4c0305000000	              add r8, qword [0x04003184]	      2799	syntax.c	FUNCTION_33	FOR_2
0x4003184	          0x4885c0	                           test rax, rax	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4003187	            0x74cf	                            je 0x4003158	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4003189	        0x498d7818	                    lea rdi, [r8 + 0x18]	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x400318d	          0x4889e6	                            mov rsi, rsp	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x4003190	      0xe8cbfeffff	                 call sym.limit_pos_zero	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_1
0x4003195	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x400319a	        0x498d7838	                    lea rdi, [r8 + 0x38]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x400319e	      0xe8bdfeffff	                 call sym.limit_pos_zero	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_2
0x40031a3	        0x498d7848	                    lea rdi, [r8 + 0x48]	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x40031a7	          0x4889e6	                            mov rsi, rsp	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x40031aa	      0xe8b1feffff	                 call sym.limit_pos_zero	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x40031af	    0x41c7405c0100	                mov dword [r8 + 0x5c], 1	      2805	syntax.c	FUNCTION_33	FOR_2	IF_3
0x40031b7	      0x41f6406904	                test byte [r8 + 0x69], 4	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40031bc	            0x74a2	                            je 0x4003160	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40031be	        0x488b0424	                    mov rax, qword [rsp]	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031c2	          0x4885c0	                           test rax, rax	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031c5	            0x7406	                            je 0x40031cd	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031c7	        0x493b4018	              cmp rax, qword [r8 + 0x18]	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031cb	            0x7e73	                           jle 0x4003240	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031cd	        0x498b4018	              mov rax, qword [r8 + 0x18]	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031d1	        0x498b5020	              mov rdx, qword [r8 + 0x20]	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031d5	        0x48890424	                    mov qword [rsp], rax	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031d9	      0x4889542408	                mov qword [rsp + 8], rdx	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40031de	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40031e3	          0x4885c0	                           test rax, rax	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40031e6	            0x7406	                            je 0x40031ee	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40031e8	        0x493b4038	              cmp rax, qword [r8 + 0x38]	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40031ec	            0x7e32	                           jle 0x4003220	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40031ee	        0x498b4038	              mov rax, qword [r8 + 0x38]	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40031f2	        0x498b5040	              mov rdx, qword [r8 + 0x40]	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40031f6	      0x4889442410	             mov qword [rsp + 0x10], rax	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40031fb	      0x4889542418	             mov qword [rsp + 0x18], rdx	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4003200	      0xe95bffffff	                           jmp 0x4003160	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4003205	           0xf1f00	                         nop dword [rax]	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4003208	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2821	syntax.c	FUNCTION_33
0x400320d	    0x644833042528	                xor rax, qword fs:[0x28]	      2821	syntax.c	FUNCTION_33
0x4003216	            0x7547	                           jne 0x400325f	      2821	syntax.c	FUNCTION_33
0x4003218	        0x4883c438	                           add rsp, 0x38	      2821	syntax.c	FUNCTION_33
0x400321c	              0xc3	                                     ret	      2821	syntax.c	FUNCTION_33
0x400321d	           0xf1f00	                         nop dword [rax]	      2821	syntax.c	FUNCTION_33
0x4003220	     0xf853affffff	                           jne 0x4003160	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4003226	        0x418b4040	              mov eax, dword [r8 + 0x40]	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400322a	        0x39442418	            cmp dword [rsp + 0x18], eax 	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400322e	     0xf8e2cffffff	                           jle 0x4003160	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4003234	            0xebb8	                           jmp 0x40031ee	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4003236	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4003240	            0x759c	                           jne 0x40031de	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4003242	        0x418b4020	              mov eax, dword [r8 + 0x20]	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4003246	        0x39442408	                cmp dword [rsp + 8], eax	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x400324a	            0x7e92	                           jle 0x40031de	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x400324c	      0xe97cffffff	                           jmp 0x40031cd	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4003251	     0xf1f80000000	                         nop dword [rax]	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4003258	            0x89c1	                            mov ecx, eax	      2789	syntax.c	FUNCTION_33	FOR_1
0x400325a	      0xe9befeffff	                           jmp 0x400311d	      2789	syntax.c	FUNCTION_33	FOR_1
0x400325f	      0xe800000000	                          call 0x4003264	      2821	syntax.c	FUNCTION_33
push_next_match	SWITCH,0:WHILE,0:DO,0:IF,6:ELSE,1:FOR,0:functions,0:CALL,9	152
0x4008aa0	            0x4155	                                push r13	      2518	syntax.c	FUNCTION_30
0x4008aa2	            0x4154	                                push r12	      2518	syntax.c	FUNCTION_30
0x4008aa4	              0x55	                                push rbp	      2518	syntax.c	FUNCTION_30
0x4008aa5	              0x53	                                push rbx	      2518	syntax.c	FUNCTION_30
0x4008aa6	          0x4889fb	                            mov rbx, rdi	      2518	syntax.c	FUNCTION_30
0x4008aa9	        0x4883ec08	                              sub rsp, 8	      2518	syntax.c	FUNCTION_30
0x4008aad	    0x4c6325000000	         movsxd r12, dword [0x04008ab4] 	      2524	syntax.c	FUNCTION_30
0x4008ab4	    0x488b05000000	            mov rax, qword [0x04008abb] 	      2524	syntax.c	FUNCTION_30
0x4008abb	    0x4c8ba8700200	           mov r13, qword [rax + 0x270] 	      2524	syntax.c	FUNCTION_30
0x4008ac2	          0x4489e7	                           mov edi, r12d	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4008ac5	      0xe8469effff	             call sym.push_current_state	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4008aca	          0x83f801	                              cmp eax, 1	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4008acd	            0x7421	                            je 0x4008af0	      2529	syntax.c	FUNCTION_30	IF_1	CALL_1
0x4008acf	    0xc70500000000	     mov dword [0x04008ad9], 0xffffffff 	      2601	syntax.c	FUNCTION_30
0x4008ad9	        0x4883c408	                              add rsp, 8	      2604	syntax.c	FUNCTION_30
0x4008add	          0x4889d8	                            mov rax, rbx	      2604	syntax.c	FUNCTION_30
0x4008ae0	              0x5b	                                 pop rbx	      2604	syntax.c	FUNCTION_30
0x4008ae1	              0x5d	                                 pop rbp	      2604	syntax.c	FUNCTION_30
0x4008ae2	            0x415c	                                 pop r12	      2604	syntax.c	FUNCTION_30
0x4008ae4	            0x415d	                                 pop r13	      2604	syntax.c	FUNCTION_30
0x4008ae6	              0xc3	                                     ret	      2604	syntax.c	FUNCTION_30
0x4008ae7	    0x660f1f840000	                    nop word [rax + rax]	      2604	syntax.c	FUNCTION_30
0x4008af0	    0x486305000000	         movsxd rax, dword [0x04008af7] 	      2535	syntax.c	FUNCTION_30	IF_1
0x4008af7	    0x488b3d000000	            mov rdi, qword [0x04008afe] 	      2535	syntax.c	FUNCTION_30	IF_1
0x4008afe	        0x4b8d2ca4	                  lea rbp, [r12 + r12*4]	      2524	syntax.c	FUNCTION_30
0x4008b02	    0x8b1500000000	            mov edx, dword [0x04008b08] 	      2537	syntax.c	FUNCTION_30	IF_1
0x4008b08	    0x8b3500000000	            mov esi, dword [0x04008b0e] 	      2541	syntax.c	FUNCTION_30	IF_1
0x4008b0e	        0x48c1e505	                              shl rbp, 5	      2524	syntax.c	FUNCTION_30
0x4008b12	    0x4c8b0d000000	              mov r9, qword [0x04008b19]	      2536	syntax.c	FUNCTION_30	IF_1
0x4008b19	    0x4c8b15000000	            mov r10, qword [0x04008b20] 	      2536	syntax.c	FUNCTION_30	IF_1
0x4008b20	          0x4c01ed	                            add rbp, r13	      2524	syntax.c	FUNCTION_30
0x4008b23	          0x4889c1	                            mov rcx, rax	      2535	syntax.c	FUNCTION_30	IF_1
0x4008b26	        0x488d04c0	                  lea rax, [rax + rax*8]	      2535	syntax.c	FUNCTION_30	IF_1
0x4008b2a	        0x448d4601	                      lea r8d, [rsi + 1]	      2541	syntax.c	FUNCTION_30	IF_1
0x4008b2e	        0x48c1e004	                              shl rax, 4	      2535	syntax.c	FUNCTION_30	IF_1
0x4008b32	          0x83f901	                              cmp ecx, 1	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008b35	    0x448905000000	            mov dword [0x04008b3c], r8d 	      2541	syntax.c	FUNCTION_30	IF_1
0x4008b3c	    0x488d9c0770ff	             lea rbx, [rdi + rax - 0x90]	      2535	syntax.c	FUNCTION_30	IF_1
0x4008b44	          0x895310	             mov dword [rbx + 0x10], edx	      2537	syntax.c	FUNCTION_30	IF_1
0x4008b47	    0x488b15000000	            mov rdx, qword [0x04008b4e] 	      2538	syntax.c	FUNCTION_30	IF_1
0x4008b4e	        0x4c894b28	              mov qword [rbx + 0x28], r9	      2536	syntax.c	FUNCTION_30	IF_1
0x4008b52	        0x4c895330	             mov qword [rbx + 0x30], r10	      2536	syntax.c	FUNCTION_30	IF_1
0x4008b56	          0x89530c	              mov dword [rbx + 0xc], edx	      2538	syntax.c	FUNCTION_30	IF_1
0x4008b59	        0x48635524	         movsxd rdx, dword [rbp + 0x24] 	      2539	syntax.c	FUNCTION_30	IF_1
0x4008b5d	          0x897370	             mov dword [rbx + 0x70], esi	      2541	syntax.c	FUNCTION_30	IF_1
0x4008b60	          0x8b7528	            mov esi, dword [rbp + 0x28] 	      2542	syntax.c	FUNCTION_30	IF_1
0x4008b63	        0x48895368	             mov qword [rbx + 0x68], rdx	      2539	syntax.c	FUNCTION_30	IF_1
0x4008b67	          0x897374	             mov dword [rbx + 0x74], esi	      2542	syntax.c	FUNCTION_30	IF_1
0x4008b6a	            0x7e14	                           jle 0x4008b80	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008b6c	    0x488b840748ff	       mov rax, qword [rdi + rax - 0xb8]	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008b74	      0x2500000200	                        and eax, 0x20000	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008b79	          0x4809c2	                             or rdx, rax	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008b7c	        0x48895368	             mov qword [rbx + 0x68], rdx	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4008b80	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      2547	syntax.c	FUNCTION_30	IF_1
0x4008b84	    0x488b3d000000	            mov rdi, qword [0x04008b8b] 	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4008b8b	    0x488983800000	             mov qword [rbx + 0x80], rax	      2547	syntax.c	FUNCTION_30	IF_1
0x4008b92	      0xe800000000	                          call 0x4008b97	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4008b97	    0x488983880000	             mov qword [rbx + 0x88], rax	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4008b9e	        0x807d0002	                       cmp byte [rbp], 2	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4008ba2	     0xf8470010000	                            je 0x4008d18	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4008ba8	    0x488b05000000	            mov rax, qword [0x04008baf] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008baf	    0x488b15000000	            mov rdx, qword [0x04008bb6] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bb6	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2559	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bbd	        0x48894318	             mov qword [rbx + 0x18], rax	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bc1	    0x488b05000000	            mov rax, qword [0x04008bc8] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bc8	        0x48895320	             mov qword [rbx + 0x20], rdx	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bcc	    0x488b15000000	            mov rdx, qword [0x04008bd3] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bd3	        0x48894338	             mov qword [rbx + 0x38], rax	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bd7	    0x488b05000000	            mov rax, qword [0x04008bde] 	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bde	        0x48094368	              or qword [rbx + 0x68], rax	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008be2	    0x488b05000000	            mov rax, qword [0x04008be9] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008be9	        0x48895340	             mov qword [rbx + 0x40], rdx	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bed	    0x488b15000000	            mov rdx, qword [0x04008bf4] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bf4	        0x48894348	             mov qword [rbx + 0x48], rax	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bf8	    0x8b0500000000	            mov eax, dword [0x04008bfe] 	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008bfe	        0x48895350	             mov qword [rbx + 0x50], rdx	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008c02	          0x894358	             mov dword [rbx + 0x58], eax	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4008c05	    0x8b0500000000	            mov eax, dword [0x04008c0b] 	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008c0b	            0x85c0	                           test eax, eax	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008c0d	     0xf882d010000	                            js 0x4008d40	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008c13	      0xe888a4ffff	                  call sym.check_keepend	      2566	syntax.c	FUNCTION_30	IF_1	CALL_5
0x4008c18	    0x8b0500000000	            mov eax, dword [0x04008c1e] 	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x4008c1e	          0x8d78ff	                      lea edi, [rax - 1]	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x4008c21	      0xe82afaffff	                 call sym.update_si_attr	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x4008c26	        0x807d0002	                       cmp byte [rbp], 2	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c2a	     0xf859ffeffff	                           jne 0x4008acf	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c30	      0x66837d0200	                   cmp word [rbp + 2], 0	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c35	     0xf8494feffff	                            je 0x4008acf	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c3b	    0x8b3d00000000	            mov edi, dword [0x04008c41] 	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x4008c41	        0x488b6b68	            mov rbp, qword [rbx + 0x68] 	      2570	syntax.c	FUNCTION_30	IF_1
0x4008c45	      0xe8c69cffff	             call sym.push_current_state	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x4008c4a	          0x83f801	                              cmp eax, 1	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x4008c4d	     0xf857cfeffff	                           jne 0x4008acf	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x4008c53	    0x486315000000	         movsxd rdx, dword [0x04008c5a] 	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c5a	    0x488b0d000000	            mov rcx, qword [0x04008c61] 	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c61	            0x89e8	                            mov eax, ebp	      2570	syntax.c	FUNCTION_30	IF_1
0x4008c63	    0x488b35000000	            mov rsi, qword [0x04008c6a] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c6a	    0x488b3d000000	            mov rdi, qword [0x04008c71] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c71	      0x2500000600	                        and eax, 0x60000	      2570	syntax.c	FUNCTION_30	IF_1
0x4008c76	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c7a	        0x48c1e204	                              shl rdx, 4	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c7e	    0xf7c500000400	                       test ebp, 0x40000	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4008c84	    0x488d9c1170ff	             lea rbx, [rcx + rdx - 0x90]	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c8c	    0x8b1500000000	            mov edx, dword [0x04008c92] 	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c92	        0x48897328	             mov qword [rbx + 0x28], rsi	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c96	        0x48897b30	             mov qword [rbx + 0x30], rdi	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c9a	          0x895310	             mov dword [rbx + 0x10], edx	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008c9d	    0x488b15000000	            mov rdx, qword [0x04008ca4] 	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008ca4	    0x488b35000000	            mov rsi, qword [0x04008cab] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cab	    0x488b3d000000	            mov rdi, qword [0x04008cb2] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cb2	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2586	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cb9	    0xc74358000000	               mov dword [rbx + 0x58], 0	      2587	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cc0	          0x89530c	              mov dword [rbx + 0xc], edx	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cc3	    0x8b1500000000	            mov edx, dword [0x04008cc9] 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cc9	        0x48897318	             mov qword [rbx + 0x18], rsi	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008ccd	        0x48897b20	             mov qword [rbx + 0x20], rdi	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cd1	        0x48897338	             mov qword [rbx + 0x38], rsi	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cd5	        0x48897b40	             mov qword [rbx + 0x40], rdi	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cd9	          0x8d4a01	                      lea ecx, [rdx + 1]	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cdc	          0x895370	             mov dword [rbx + 0x70], edx	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cdf	    0x890d00000000	            mov dword [0x04008ce5], ecx 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008ce5	            0x7579	                           jne 0x4008d60	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4008ce7	          0x83c840	                            or eax, 0x40	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cea	            0x4898	                                    cdqe	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cec	        0x48894368	             mov qword [rbx + 0x68], rax	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cf0	    0x48c783800000	               mov qword [rbx + 0x80], 0	      2595	syntax.c	FUNCTION_30	IF_1	IF_5
0x4008cfb	      0xe8a0a3ffff	                  call sym.check_keepend	      2596	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_8
0x4008d00	    0x8b0500000000	            mov eax, dword [0x04008d06] 	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x4008d06	          0x8d78ff	                      lea edi, [rax - 1]	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x4008d09	      0xe842f9ffff	                 call sym.update_si_attr	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x4008d0e	      0xe9bcfdffff	                           jmp 0x4008acf	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x4008d13	       0xf1f440000	                   nop dword [rax + rax]	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x4008d18	        0xf6452404	               test byte [rbp + 0x24], 4	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4008d1c	     0xf8586feffff	                           jne 0x4008ba8	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4008d22	    0x8b3500000000	            mov esi, dword [0x04008d28] 	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4008d28	      0xba01000000	                              mov edx, 1	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4008d2d	          0x4889df	                            mov rdi, rbx	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4008d30	      0xe8ebaaffff	                  call sym.update_si_end	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4008d35	      0xe866a3ffff	                  call sym.check_keepend	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_4
0x4008d3a	      0xe9c6feffff	                           jmp 0x4008c05	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_4
0x4008d3f	              0x90	                                     nop	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_4
0x4008d40	        0xf6436904	               test byte [rbx + 0x69], 4	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008d44	     0xf84c9feffff	                            je 0x4008c13	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008d4a	    0x8b0500000000	            mov eax, dword [0x04008d50] 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008d50	          0x83e801	                              sub eax, 1	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008d53	    0x890500000000	            mov dword [0x04008d59], eax 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008d59	      0xe9b5feffff	                           jmp 0x4008c13	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008d5e	            0x6690	                                     nop	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x4008d60	       0xd40000200	                         or eax, 0x20040	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4008d65	            0x4898	                                    cdqe	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4008d67	        0x48894368	             mov qword [rbx + 0x68], rax	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4008d6b	      0xe980ffffff	                           jmp 0x4008cf0	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
get_attr_entry	SWITCH,0:WHILE,0:DO,0:IF,9:ELSE,3:FOR,2:functions,0:CALL,10	197
0x4004d50	            0x4157	                                push r15	      8789	syntax.c	FUNCTION_131
0x4004d52	            0x4156	                                push r14	      8789	syntax.c	FUNCTION_131
0x4004d54	          0x4989ff	                            mov r15, rdi	      8789	syntax.c	FUNCTION_131
0x4004d57	            0x4155	                                push r13	      8789	syntax.c	FUNCTION_131
0x4004d59	            0x4154	                                push r12	      8789	syntax.c	FUNCTION_131
0x4004d5b	          0x4989f6	                            mov r14, rsi	      8789	syntax.c	FUNCTION_131
0x4004d5e	              0x55	                                push rbp	      8789	syntax.c	FUNCTION_131
0x4004d5f	              0x53	                                push rbx	      8789	syntax.c	FUNCTION_131
0x4004d60	        0x4883ec08	                              sub rsp, 8	      8789	syntax.c	FUNCTION_131
0x4004d64	          0x448b27	                   mov r12d, dword [rdi]	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d67	    0xc74708280000	               mov dword [rdi + 8], 0x28	      8797	syntax.c	FUNCTION_131
0x4004d6e	    0xc7470c070000	                mov dword [rdi + 0xc], 7	      8798	syntax.c	FUNCTION_131
0x4004d75	          0x4585e4	                         test r12d, r12d	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d78	     0xf8ed6000000	                           jle 0x4004e54	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d7e	        0x440fb72e	                  movzx r13d, word [rsi]	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d82	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d86	            0x31ed	                            xor ebp, ebp	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d88	            0xeb12	                           jmp 0x4004d9c	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d8a	    0x660f1f440000	                    nop word [rax + rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d90	          0x83c501	                              add ebp, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d93	        0x4883c328	                           add rbx, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d97	          0x4439e5	                           cmp ebp, r12d	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d9a	            0x745c	                            je 0x4004df8	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004d9c	        0x6644392b	                    cmp word [rbx], r13w	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004da0	            0x75ee	                           jne 0x4004d90	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004da2	    0x4981ff000000	                              cmp r15, 0	      8807	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004da9	     0xf8431010000	                            je 0x4004ee0	      8807	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004daf	    0x4981ff000000	                              cmp r15, 0	      8820	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004db6	     0xf84c4000000	                            je 0x4004e80	      8820	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dbc	    0x4981ff000000	                              cmp r15, 0	      8833	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dc3	            0x75cb	                           jne 0x4004d90	      8833	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dc5	          0x8b4308	                mov eax, dword [rbx + 8]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dc8	        0x41394608	                cmp dword [r14 + 8], eax	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dcc	            0x75c2	                           jne 0x4004d90	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dce	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dd2	        0x49394610	            cmp qword [r14 + 0x10], rax 	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dd6	            0x75b8	                           jne 0x4004d90	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004dd8	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ddc	        0x49394618	            cmp qword [r14 + 0x18], rax 	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004de0	     0xf8432010000	                            je 0x4004f18	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004de6	          0x83c501	                              add ebp, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004de9	        0x4883c328	                           add rbx, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004ded	          0x4439e5	                           cmp ebp, r12d	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004df0	            0x75aa	                           jne 0x4004d9c	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004df2	    0x660f1f440000	                    nop word [rax + rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x4004df8	    0x81fdfffe0000	                         cmp ebp, 0xfeff	      8849	syntax.c	FUNCTION_131	IF_2
0x4004dfe	            0x7e54	                           jle 0x4004e54	      8849	syntax.c	FUNCTION_131	IF_2
0x4004e00	    0x8b1500000000	            mov edx, dword [0x04004e06] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x4004e06	            0x85d2	                           test edx, edx	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x4004e08	     0xf8592010000	                           jne 0x4004fa0	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x4004e0e	    0xc70500000000	               mov dword [0x04004e18], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x4004e18	            0x31db	                            xor ebx, ebx	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4004e1a	      0xe800000000	                          call 0x4004e1f	      8863	syntax.c	FUNCTION_131	IF_2	CALL_5
0x4004e1f	    0x8b0500000000	            mov eax, dword [0x04004e25] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4004e25	    0xc70500000000	           mov dword [0x04004e2f], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x4004e2f	            0x85c0	                           test eax, eax	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4004e31	            0x7e17	                           jle 0x4004e4a	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4004e33	       0xf1f440000	                   nop dword [rax + rax]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4004e38	            0x89df	                            mov edi, ebx	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x4004e3a	          0x83c301	                              add ebx, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4004e3d	      0xe81e020000	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x4004e42	    0x391d00000000	            cmp dword [0x04004e48], ebx 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4004e48	            0x7fee	                            jg 0x4004e38	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4004e4a	    0xc70500000000	               mov dword [0x04004e54], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x4004e54	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4004e59	          0x4c89ff	                            mov rdi, r15	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4004e5c	      0xe800000000	                          call 0x4004e61	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4004e61	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4004e63	     0xf85ba000000	                           jne 0x4004f23	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4004e69	        0x4883c408	                              add rsp, 8	      8916	syntax.c	FUNCTION_131
0x4004e6d	              0x5b	                                 pop rbx	      8916	syntax.c	FUNCTION_131
0x4004e6e	              0x5d	                                 pop rbp	      8916	syntax.c	FUNCTION_131
0x4004e6f	            0x415c	                                 pop r12	      8916	syntax.c	FUNCTION_131
0x4004e71	            0x415d	                                 pop r13	      8916	syntax.c	FUNCTION_131
0x4004e73	            0x415e	                                 pop r14	      8916	syntax.c	FUNCTION_131
0x4004e75	            0x415f	                                 pop r15	      8916	syntax.c	FUNCTION_131
0x4004e77	              0xc3	                                     ret	      8916	syntax.c	FUNCTION_131
0x4004e78	     0xf1f84000000	                   nop dword [rax + rax]	      8916	syntax.c	FUNCTION_131
0x4004e80	        0x498b7e08	                mov rdi, qword [r14 + 8]	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e84	        0x488b7308	                mov rsi, qword [rbx + 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e88	          0x4885ff	                           test rdi, rdi	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e8b	           0xf95c2	                                setne dl	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e8e	          0x4885f6	                           test rsi, rsi	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e91	           0xf94c0	                                 sete al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e94	            0x38c2	                              cmp dl, al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e96	     0xf84f4feffff	                            je 0x4004d90	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e9c	          0x4885ff	                           test rdi, rdi	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004e9f	            0x740d	                            je 0x4004eae	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ea1	      0xe800000000	                          call 0x4004ea6	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x4004ea6	            0x85c0	                           test eax, eax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x4004ea8	     0xf85e2feffff	                           jne 0x4004d90	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x4004eae	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004eb2	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004eb6	          0x4885ff	                           test rdi, rdi	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004eb9	           0xf95c2	                                setne dl	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ebc	          0x4885f6	                           test rsi, rsi	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ebf	           0xf94c0	                                 sete al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ec2	            0x38c2	                              cmp dl, al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ec4	     0xf84c6feffff	                            je 0x4004d90	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004eca	          0x4885ff	                           test rdi, rdi	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ecd	            0x7449	                            je 0x4004f18	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ecf	      0xe800000000	                          call 0x4004ed4	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4004ed4	            0x85c0	                           test eax, eax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4004ed6	     0xf85b4feffff	                           jne 0x4004d90	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4004edc	            0xeb3a	                           jmp 0x4004f18	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4004ede	            0x6690	                                     nop	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4004ee0	        0x488b4308	                mov rax, qword [rbx + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ee4	        0x49394608	                cmp qword [r14 + 8], rax	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ee8	     0xf85a2feffff	                           jne 0x4004d90	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004eee	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ef2	        0x49394610	            cmp qword [r14 + 0x10], rax 	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004ef6	     0xf8594feffff	                           jne 0x4004d90	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004efc	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004f00	        0x49394618	            cmp qword [r14 + 0x18], rax 	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004f04	     0xf8586feffff	                           jne 0x4004d90	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004f0a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004f0e	        0x49394620	            cmp qword [r14 + 0x20], rax 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004f12	     0xf8578feffff	                           jne 0x4004d90	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004f18	    0x8d8500010000	                  lea eax, [rbp + 0x100]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004f1e	      0xe946ffffff	                           jmp 0x4004e69	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4004f23	          0x496307	                 movsxd rax, dword [r15]	      8879	syntax.c	FUNCTION_131
0x4004f26	    0x4981ff000000	                              cmp r15, 0	      8883	syntax.c	FUNCTION_131	IF_5
0x4004f2d	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x4004f31	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      8879	syntax.c	FUNCTION_131
0x4004f35	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x4004f39	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4004f40	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4004f48	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4004f50	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4004f58	    0x48c743200000	               mov qword [rbx + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4004f60	        0x410fb706	                   movzx eax, word [r14]	      8881	syntax.c	FUNCTION_131
0x4004f64	          0x668903	                      mov word [rbx], ax	      8881	syntax.c	FUNCTION_131
0x4004f67	     0xf8483000000	                            je 0x4004ff0	      8883	syntax.c	FUNCTION_131	IF_5
0x4004f6d	    0x4981ff000000	                              cmp r15, 0	      8894	syntax.c	FUNCTION_131	IF_6
0x4004f74	            0x7454	                            je 0x4004fca	      8894	syntax.c	FUNCTION_131	IF_6
0x4004f76	    0x4981ff000000	                              cmp r15, 0	      8905	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4004f7d	     0xf8492000000	                            je 0x4005015	      8905	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4004f83	          0x418b07	                    mov eax, dword [r15]	      8914	syntax.c	FUNCTION_131
0x4004f86	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x4004f89	       0x500010000	                          add eax, 0x100	      8915	syntax.c	FUNCTION_131
0x4004f8e	          0x418917	                    mov dword [r15], edx	      8914	syntax.c	FUNCTION_131
0x4004f91	        0x4883c408	                              add rsp, 8	      8916	syntax.c	FUNCTION_131
0x4004f95	              0x5b	                                 pop rbx	      8916	syntax.c	FUNCTION_131
0x4004f96	              0x5d	                                 pop rbp	      8916	syntax.c	FUNCTION_131
0x4004f97	            0x415c	                                 pop r12	      8916	syntax.c	FUNCTION_131
0x4004f99	            0x415d	                                 pop r13	      8916	syntax.c	FUNCTION_131
0x4004f9b	            0x415e	                                 pop r14	      8916	syntax.c	FUNCTION_131
0x4004f9d	            0x415f	                                 pop r15	      8916	syntax.c	FUNCTION_131
0x4004f9f	              0xc3	                                     ret	      8916	syntax.c	FUNCTION_131
0x4004fa0	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004fa5	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004faa	            0x31ff	                            xor edi, edi	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004fac	      0xe800000000	                          call 0x4004fb1	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004fb1	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004fb4	      0xe800000000	                          call 0x4004fb9	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4004fb9	        0x4883c408	                              add rsp, 8	      8916	syntax.c	FUNCTION_131
0x4004fbd	            0x31c0	                            xor eax, eax	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x4004fbf	              0x5b	                                 pop rbx	      8916	syntax.c	FUNCTION_131
0x4004fc0	              0x5d	                                 pop rbp	      8916	syntax.c	FUNCTION_131
0x4004fc1	            0x415c	                                 pop r12	      8916	syntax.c	FUNCTION_131
0x4004fc3	            0x415d	                                 pop r13	      8916	syntax.c	FUNCTION_131
0x4004fc5	            0x415e	                                 pop r14	      8916	syntax.c	FUNCTION_131
0x4004fc7	            0x415f	                                 pop r15	      8916	syntax.c	FUNCTION_131
0x4004fc9	              0xc3	                                     ret	      8916	syntax.c	FUNCTION_131
0x4004fca	        0x498b7e08	                mov rdi, qword [r14 + 8]	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x4004fce	          0x4885ff	                           test rdi, rdi	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x4004fd1	            0x7476	                            je 0x4005049	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x4004fd3	      0xe800000000	                          call 0x4004fd8	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4004fd8	        0x48894308	                mov qword [rbx + 8], rax	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4004fdc	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x4004fe0	          0x4885ff	                           test rdi, rdi	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x4004fe3	            0x7457	                            je 0x400503c	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x4004fe5	      0xe800000000	                          call 0x4004fea	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4004fea	        0x48894310	             mov qword [rbx + 0x10], rax	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4004fee	            0xeb93	                           jmp 0x4004f83	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x4004ff0	        0x498b4608	                mov rax, qword [r14 + 8]	      8885	syntax.c	FUNCTION_131	IF_5
0x4004ff4	        0x48894308	                mov qword [rbx + 8], rax	      8885	syntax.c	FUNCTION_131	IF_5
0x4004ff8	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      8886	syntax.c	FUNCTION_131	IF_5
0x4004ffc	        0x48894310	             mov qword [rbx + 0x10], rax	      8886	syntax.c	FUNCTION_131	IF_5
0x4005000	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      8887	syntax.c	FUNCTION_131	IF_5
0x4005004	        0x48894318	             mov qword [rbx + 0x18], rax	      8887	syntax.c	FUNCTION_131	IF_5
0x4005008	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      8888	syntax.c	FUNCTION_131	IF_5
0x400500c	        0x48894320	             mov qword [rbx + 0x20], rax	      8888	syntax.c	FUNCTION_131	IF_5
0x4005010	      0xe96effffff	                           jmp 0x4004f83	      8888	syntax.c	FUNCTION_131	IF_5
0x4005015	      0x410fb74608	               movzx eax, word [r14 + 8]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400501a	        0x66894308	                  mov word [rbx + 8], ax	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400501e	      0x410fb7460a	            movzx eax, word [r14 + 0xa] 	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4005023	        0x6689430a	                mov word [rbx + 0xa], ax	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4005027	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400502b	        0x48894310	             mov qword [rbx + 0x10], rax	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400502f	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4005033	        0x48894318	             mov qword [rbx + 0x18], rax	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x4005037	      0xe947ffffff	                           jmp 0x4004f83	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400503c	    0x48c743100000	               mov qword [rbx + 0x10], 0	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x4005044	      0xe93affffff	                           jmp 0x4004f83	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x4005049	    0x48c743080000	                  mov qword [rbx + 8], 0	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x4005051	            0xeb89	                           jmp 0x4004fdc	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
hl_set_bg_color_name	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,0:FOR,0:functions,0:CALL,2	23
0x40061b0	          0x4885ff	                           test rdi, rdi	      8561	syntax.c	FUNCTION_125	IF_1
0x40061b3	            0x7448	                            je 0x40061fd	      8561	syntax.c	FUNCTION_125	IF_1
0x40061b5	              0x55	                                push rbp	      8558	syntax.c	FUNCTION_125
0x40061b6	              0x53	                                push rbx	      8558	syntax.c	FUNCTION_125
0x40061b7	          0x4889fb	                            mov rbx, rdi	      8558	syntax.c	FUNCTION_125
0x40061ba	      0xbf00000000	                              mov edi, 0	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x40061bf	        0x4883ec08	                              sub rsp, 8	      8558	syntax.c	FUNCTION_125
0x40061c3	      0xe800000000	                          call 0x40061c8	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x40061c8	            0x85c0	                           test eax, eax	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x40061ca	            0x7e2b	                           jle 0x40061f7	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x40061cc	            0x4898	                                    cdqe	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x40061ce	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x40061d2	        0x488d2c50	                  lea rbp, [rax + rdx*2]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x40061d6	    0x488b05000000	            mov rax, qword [0x040061dd] 	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x40061dd	        0x48c1e503	                              shl rbp, 3	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x40061e1	      0x488b7c28e0	       mov rdi, qword [rax + rbp - 0x20]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x40061e6	      0xe800000000	                          call 0x40061eb	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x40061eb	    0x488b05000000	            mov rax, qword [0x040061f2] 	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x40061f2	      0x48895c28e0	       mov qword [rax + rbp - 0x20], rbx	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x40061f7	        0x4883c408	                              add rsp, 8	      8570	syntax.c	FUNCTION_125
0x40061fb	              0x5b	                                 pop rbx	      8570	syntax.c	FUNCTION_125
0x40061fc	              0x5d	                                 pop rbp	      8570	syntax.c	FUNCTION_125
0x40061fd	            0xf3c3	                                     ret	      8570	syntax.c	FUNCTION_125
syn_cmd_on	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	2
0x4002c30	      0xbe00000000	                              mov esi, 0	      3866	syntax.c	FUNCTION_57	CALL_1
0x4002c35	      0xe966ffffff	                   jmp sym.syn_cmd_onoff	      3866	syntax.c	FUNCTION_57	CALL_1
color_name2handle	SWITCH,0:WHILE,0:DO,0:IF,7:ELSE,0:FOR,0:functions,0:CALL,8	72
0x4004bb0	          0x4889f8	                            mov rax, rdi	      8723	syntax.c	FUNCTION_130
0x4004bb3	      0xb905000000	                              mov ecx, 5	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4004bb8	      0xbf00000000	                              mov edi, 0	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4004bbd	          0x4889c6	                            mov rsi, rax	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4004bc0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4004bc2	     0xf8408010000	                            je 0x4004cd0	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x4004bc8	              0x53	                                push rbx	      8723	syntax.c	FUNCTION_130
0x4004bc9	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bce	          0x4889c7	                            mov rdi, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bd1	          0x4889c3	                            mov rbx, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bd4	      0xe800000000	                          call 0x4004bd9	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bd9	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bdb	            0x744b	                            je 0x4004c28	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bdd	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004be2	          0x4889df	                            mov rdi, rbx	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004be5	      0xe800000000	                          call 0x4004bea	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bea	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bec	            0x743a	                            je 0x4004c28	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x4004bee	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004bf3	          0x4889df	                            mov rdi, rbx	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004bf6	      0xe800000000	                          call 0x4004bfb	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004bfb	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004bfd	            0x7571	                           jne 0x4004c70	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004bff	    0x8b1500000000	            mov edx, dword [0x04004c05] 	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x4004c05	    0x488b05000000	            mov rax, qword [0x04004c0c] 	      8748	syntax.c	FUNCTION_130	IF_5	IF_6
0x4004c0c	            0x85d2	                           test edx, edx	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x4004c0e	            0x7513	                           jne 0x4004c23	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x4004c10	    0x488b05000000	            mov rax, qword [0x04004c17] 	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x4004c17	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x4004c1d	     0xf8485000000	                            je 0x4004ca8	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x4004c23	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x4004c24	              0xc3	                                     ret	      8759	syntax.c	FUNCTION_130
0x4004c25	           0xf1f00	                         nop dword [rax]	      8759	syntax.c	FUNCTION_130
0x4004c28	    0x8b0d00000000	            mov ecx, dword [0x04004c2e] 	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x4004c2e	    0x488b05000000	            mov rax, qword [0x04004c35] 	      8733	syntax.c	FUNCTION_130	IF_2	IF_3
0x4004c35	            0x85c9	                           test ecx, ecx	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x4004c37	            0x75ea	                           jne 0x4004c23	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x4004c39	    0x488b05000000	            mov rax, qword [0x04004c40] 	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x4004c40	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x4004c46	            0x75db	                           jne 0x4004c23	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x4004c48	    0x488b05000000	            mov rax, qword [0x04004c4f] 	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004c4f	      0xbf00000000	                              mov edi, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004c54	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x4004c55	          0x80386c	                    cmp byte [rax], 0x6c	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004c58	      0xb800000000	                              mov eax, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004c5d	        0x480f44f8	                          cmove rdi, rax	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004c61	      0xe900000000	                           jmp 0x4004c66	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004c66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x4004c70	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004c75	          0x4889df	                            mov rdi, rbx	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004c78	      0xe800000000	                          call 0x4004c7d	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004c7d	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004c7f	     0xf847affffff	                            je 0x4004bff	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x4004c85	    0x8b0500000000	            mov eax, dword [0x04004c8b] 	      8758	syntax.c	FUNCTION_130	CALL_8
0x4004c8b	      0xba00000000	                              mov edx, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x4004c90	          0x4889df	                            mov rdi, rbx	      8758	syntax.c	FUNCTION_130	CALL_8
0x4004c93	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x4004c94	            0x85c0	                           test eax, eax	      8758	syntax.c	FUNCTION_130	CALL_8
0x4004c96	      0xb800000000	                              mov eax, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x4004c9b	        0x480f44c2	                          cmove rax, rdx	      8758	syntax.c	FUNCTION_130	CALL_8
0x4004c9f	            0xffe0	                                 jmp rax	      8758	syntax.c	FUNCTION_130	CALL_8
0x4004ca1	     0xf1f80000000	                         nop dword [rax]	      8758	syntax.c	FUNCTION_130	CALL_8
0x4004ca8	    0x488b05000000	            mov rax, qword [0x04004caf] 	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004caf	      0xbf00000000	                              mov edi, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004cb4	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x4004cb5	          0x80386c	                    cmp byte [rax], 0x6c	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004cb8	      0xb800000000	                              mov eax, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004cbd	        0x480f44f8	                          cmove rdi, rax	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004cc1	      0xe900000000	                           jmp 0x4004cc6	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004cc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x4004cd0	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      8725	syntax.c	FUNCTION_130	IF_1
0x4004cd7	              0xc3	                                     ret	      8725	syntax.c	FUNCTION_130	IF_1
syntax_clear	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,2:functions,0:CALL,11	79
0x4003d10	            0x4154	                                push r12	      3609	syntax.c	FUNCTION_49
0x4003d12	              0x55	                                push rbp	      3609	syntax.c	FUNCTION_49
0x4003d13	          0x4889fd	                            mov rbp, rdi	      3609	syntax.c	FUNCTION_49
0x4003d16	              0x53	                                push rbx	      3609	syntax.c	FUNCTION_49
0x4003d17	    0xc78750020000	              mov dword [rdi + 0x250], 0	      3612	syntax.c	FUNCTION_49
0x4003d21	    0x4c8da5700200	                  lea r12, [rbp + 0x270]	      3612	syntax.c	FUNCTION_49
0x4003d28	    0xc78754020000	              mov dword [rdi + 0x254], 0	      3614	syntax.c	FUNCTION_49
0x4003d32	    0xc78758020000	              mov dword [rdi + 0x258], 0	      3616	syntax.c	FUNCTION_49
0x4003d3c	    0xc7875c020000	              mov dword [rdi + 0x25c], 0	      3617	syntax.c	FUNCTION_49
0x4003d46	    0xc78798020000	              mov dword [rdi + 0x298], 0	      3618	syntax.c	FUNCTION_49
0x4003d50	    0xc78708030000	              mov dword [rdi + 0x308], 0	      3620	syntax.c	FUNCTION_49
0x4003d5a	      0xe861cbffff	                  call sym.clear_keywtab	      3624	syntax.c	FUNCTION_49	CALL_1
0x4003d5f	    0x488dbd280100	                  lea rdi, [rbp + 0x128]	      3625	syntax.c	FUNCTION_49	CALL_2
0x4003d66	      0xe855cbffff	                  call sym.clear_keywtab	      3625	syntax.c	FUNCTION_49	CALL_2
0x4003d6b	    0x8b9d60020000	           mov ebx, dword [rbp + 0x260] 	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003d71	          0x83eb01	                              sub ebx, 1	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003d74	            0x781c	                            js 0x4003d92	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003d76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003d80	            0x89de	                            mov esi, ebx	      3629	syntax.c	FUNCTION_49	CALL_3
0x4003d82	          0x4c89e7	                            mov rdi, r12	      3629	syntax.c	FUNCTION_49	CALL_3
0x4003d85	          0x83eb01	                              sub ebx, 1	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003d88	      0xe813ecffff	       call sym.syn_clear_pattern.isra.6	      3629	syntax.c	FUNCTION_49	CALL_3
0x4003d8d	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003d90	            0x75ee	                           jne 0x4003d80	      3628	syntax.c	FUNCTION_49	FOR_1
0x4003d92	    0x488dbd600200	                  lea rdi, [rbp + 0x260]	      3630	syntax.c	FUNCTION_49	CALL_4
0x4003d99	      0xe800000000	                          call 0x4003d9e	      3630	syntax.c	FUNCTION_49	CALL_4
0x4003d9e	    0x8b8578020000	           mov eax, dword [rbp + 0x278] 	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003da4	          0x83e801	                              sub eax, 1	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003da7	            0x785a	                            js 0x4003e03	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003da9	          0x4863d0	                         movsxd rdx, eax	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003dac	            0x89c0	                            mov eax, eax	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003dae	        0x488d1c52	                  lea rbx, [rdx + rdx*2]	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003db2	          0x4829c2	                            sub rdx, rax	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003db5	        0x488d0452	                  lea rax, [rdx + rdx*2]	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003db9	        0x48c1e303	                              shl rbx, 3	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003dbd	    0x4c8d24c5e8ff	                 lea r12, [rax*8 - 0x18]	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003dc5	           0xf1f00	                         nop dword [rax]	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003dc8	    0x488b85880200	           mov rax, qword [rbp + 0x288] 	      3745	syntax.c	FUNCTION_54	CALL_1
0x4003dcf	        0x488b3c18	              mov rdi, qword [rax + rbx]	      3745	syntax.c	FUNCTION_54	CALL_1
0x4003dd3	      0xe800000000	                          call 0x4003dd8	      3745	syntax.c	FUNCTION_54	CALL_1
0x4003dd8	    0x488b85880200	           mov rax, qword [rbp + 0x288] 	      3746	syntax.c	FUNCTION_54	CALL_2
0x4003ddf	      0x488b7c1808	         mov rdi, qword [rax + rbx + 8] 	      3746	syntax.c	FUNCTION_54	CALL_2
0x4003de4	      0xe800000000	                          call 0x4003de9	      3746	syntax.c	FUNCTION_54	CALL_2
0x4003de9	    0x488b85880200	           mov rax, qword [rbp + 0x288] 	      3747	syntax.c	FUNCTION_54	CALL_3
0x4003df0	      0x488b7c1810	      mov rdi, qword [rax + rbx + 0x10] 	      3747	syntax.c	FUNCTION_54	CALL_3
0x4003df5	        0x4883eb18	                           sub rbx, 0x18	      3747	syntax.c	FUNCTION_54	CALL_3
0x4003df9	      0xe800000000	                          call 0x4003dfe	      3747	syntax.c	FUNCTION_54	CALL_3
0x4003dfe	          0x4c39e3	                            cmp rbx, r12	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003e01	            0x75c5	                           jne 0x4003dc8	      3633	syntax.c	FUNCTION_49	FOR_2
0x4003e03	    0x488dbd780200	                  lea rdi, [rbp + 0x278]	      3635	syntax.c	FUNCTION_49	CALL_6
0x4003e0a	      0xe800000000	                          call 0x4003e0f	      3635	syntax.c	FUNCTION_49	CALL_6
0x4003e0f	    0x488bbdc80200	           mov rdi, qword [rbp + 0x2c8] 	      3644	syntax.c	FUNCTION_49	CALL_7
0x4003e16	    0xc78590020000	              mov dword [rbp + 0x290], 0	      3636	syntax.c	FUNCTION_49
0x4003e20	    0xc78594020000	              mov dword [rbp + 0x294], 0	      3637	syntax.c	FUNCTION_49
0x4003e2a	    0xc7859c020000	              mov dword [rbp + 0x29c], 0	      3639	syntax.c	FUNCTION_49
0x4003e34	    0x48c785a80200	              mov qword [rbp + 0x2a8], 0	      3640	syntax.c	FUNCTION_49
0x4003e3f	    0x48c785b00200	              mov qword [rbp + 0x2b0], 0	      3641	syntax.c	FUNCTION_49
0x4003e4a	    0x48c785b80200	              mov qword [rbp + 0x2b8], 0	      3642	syntax.c	FUNCTION_49
0x4003e55	      0xe800000000	                          call 0x4003e5a	      3644	syntax.c	FUNCTION_49	CALL_7
0x4003e5a	    0x488bbdc00200	           mov rdi, qword [rbp + 0x2c0] 	      3646	syntax.c	FUNCTION_49	CALL_8
0x4003e61	    0x48c785c80200	              mov qword [rbp + 0x2c8], 0	      3645	syntax.c	FUNCTION_49
0x4003e6c	          0x4885ff	                           test rdi, rdi	      3646	syntax.c	FUNCTION_49	CALL_8
0x4003e6f	            0x7410	                            je 0x4003e81	      3646	syntax.c	FUNCTION_49	CALL_8
0x4003e71	      0xe800000000	                          call 0x4003e76	      3646	syntax.c	FUNCTION_49	CALL_8
0x4003e76	    0x48c785c00200	              mov qword [rbp + 0x2c0], 0	      3646	syntax.c	FUNCTION_49	CALL_8
0x4003e81	    0x488dbdb00400	                  lea rdi, [rbp + 0x4b0]	      3650	syntax.c	FUNCTION_49	CALL_9
0x4003e88	    0xc7850c030000	              mov dword [rbp + 0x30c], 0	      3648	syntax.c	FUNCTION_49
0x4003e92	      0xe800000000	                          call 0x4003e97	      3650	syntax.c	FUNCTION_49	CALL_9
0x4003e97	          0x4889ef	                            mov rdi, rbp	      3653	syntax.c	FUNCTION_49	CALL_10
0x4003e9a	      0xe800000000	                          call 0x4003e9f	      3653	syntax.c	FUNCTION_49	CALL_10
0x4003e9f	      0xe80cc4ffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x4003ea4	              0x5b	                                 pop rbx	      3658	syntax.c	FUNCTION_49
0x4003ea5	    0xc70500000000	               mov dword [0x04003eaf], 0	      1732	syntax.c	FUNCTION_23
0x4003eaf	    0x48c705000000	               mov qword [0x04003eba], 0	      1733	syntax.c	FUNCTION_23
0x4003eba	              0x5d	                                 pop rbp	      3658	syntax.c	FUNCTION_49
0x4003ebb	    0xc70500000000	     mov dword [0x04003ec5], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x4003ec5	    0xc70500000000	               mov dword [0x04003ecf], 0	      3657	syntax.c	FUNCTION_49
0x4003ecf	            0x415c	                                 pop r12	      3658	syntax.c	FUNCTION_49
0x4003ed1	              0xc3	                                     ret	      3658	syntax.c	FUNCTION_49
syn_cmd_keyword	SWITCH,0:WHILE,1:DO,0:IF,14:ELSE,3:FOR,3:functions,0:CALL,26	301
0x4008090	            0x4157	                                push r15	      4894	syntax.c	FUNCTION_79
0x4008092	            0x4156	                                push r14	      4894	syntax.c	FUNCTION_79
0x4008094	          0x4989fe	                            mov r14, rdi	      4894	syntax.c	FUNCTION_79
0x4008097	            0x4155	                                push r13	      4894	syntax.c	FUNCTION_79
0x4008099	            0x4154	                                push r12	      4894	syntax.c	FUNCTION_79
0x400809b	              0x55	                                push rbp	      4894	syntax.c	FUNCTION_79
0x400809c	              0x53	                                push rbx	      4894	syntax.c	FUNCTION_79
0x400809d	    0x4881ece80000	                           sub rsp, 0xe8	      4894	syntax.c	FUNCTION_79
0x40080a4	    0x64488b042528	                mov rax, qword fs:[0x28]	      4894	syntax.c	FUNCTION_79
0x40080ad	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      4894	syntax.c	FUNCTION_79
0x40080b5	            0x31c0	                            xor eax, eax	      4894	syntax.c	FUNCTION_79
0x40080b7	          0x488b07	                    mov rax, qword [rdi]	      4895	syntax.c	FUNCTION_79
0x40080ba	      0x488d742448	                   lea rsi, [rsp + 0x48]	      4906	syntax.c	FUNCTION_79	CALL_1
0x40080bf	    0xc74424440000	               mov dword [rsp + 0x44], 0	      4904	syntax.c	FUNCTION_79
0x40080c7	          0x4889c7	                            mov rdi, rax	      4906	syntax.c	FUNCTION_79	CALL_1
0x40080ca	      0x4889442418	             mov qword [rsp + 0x18], rax	      4895	syntax.c	FUNCTION_79
0x40080cf	      0xe88c88ffff	                 call sym.get_group_name	      4906	syntax.c	FUNCTION_79	CALL_1
0x40080d4	          0x4885c0	                           test rax, rax	      4908	syntax.c	FUNCTION_79	IF_1
0x40080d7	     0xf84c3010000	                            je 0x40082a0	      4908	syntax.c	FUNCTION_79	IF_1
0x40080dd	        0x458b4e30	            mov r9d, dword [r14 + 0x30] 	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x40080e1	          0x4989c7	                            mov r15, rax	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x40080e4	    0xc7442420ffff	     mov dword [rsp + 0x20], 0xffffffff 	      4911	syntax.c	FUNCTION_79	IF_1	IF_2
0x40080ec	          0x4585c9	                           test r9d, r9d	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x40080ef	     0xf8480010000	                            je 0x4008275	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x40080f5	          0x4c89ff	                            mov rdi, r15	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40080f8	      0xe800000000	                          call 0x40080fd	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x40080fd	          0x8d7801	                      lea edi, [rax + 1]	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4008100	      0xe800000000	                          call 0x4008105	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4008105	          0x4885c0	                           test rax, rax	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x4008108	          0x4889c5	                            mov rbp, rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400810b	      0x4889442428	             mov qword [rsp + 0x28], rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x4008110	     0xf8410010000	                            je 0x4008226	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x4008116	    0xc74424500000	               mov dword [rsp + 0x50], 0	      4919	syntax.c	FUNCTION_79	IF_1	IF_4
0x400811e	    0xc74424540100	               mov dword [rsp + 0x54], 1	      4920	syntax.c	FUNCTION_79	IF_1	IF_4
0x4008126	            0x31db	                            xor ebx, ebx	      4931	syntax.c	FUNCTION_79	IF_1	IF_4
0x4008128	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4921	syntax.c	FUNCTION_79	IF_1	IF_4
0x4008131	      0xc644246000	                mov byte [rsp + 0x60], 0	      4922	syntax.c	FUNCTION_79	IF_1	IF_4
0x4008136	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4923	syntax.c	FUNCTION_79	IF_1	IF_4
0x400813f	    0x48c744247800	               mov qword [rsp + 0x78], 0	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x4008148	     0xf1f84000000	                   nop dword [rax + rax]	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x4008150	        0x410fb63f	                   movzx edi, byte [r15]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4008154	      0xe800000000	                          call 0x4008159	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4008159	            0x85c0	                           test eax, eax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400815b	     0xf8595000000	                           jne 0x40081f6	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x4008161	        0x418b4e30	            mov ecx, dword [r14 + 0x30] 	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x4008165	      0x488d542444	                   lea rdx, [rsp + 0x44]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400816a	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400816f	          0x4c89ff	                            mov rdi, r15	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x4008172	      0xe859edffff	                call sym.get_syn_options	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x4008177	          0x4885c0	                           test rax, rax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400817a	          0x4989c7	                            mov r15, rax	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400817d	            0x7477	                            je 0x40081f6	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400817f	           0xfb638	                   movzx edi, byte [rax]	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x4008182	      0xe800000000	                          call 0x4008187	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x4008187	            0x85c0	                           test eax, eax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x4008189	            0x756b	                           jne 0x40081f6	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400818b	        0x410fb607	                   movzx eax, byte [r15]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400818f	          0x4889ea	                            mov rdx, rbp	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4008192	            0xa8df	                           test al, 0xdf	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4008194	            0x7524	                           jne 0x40081ba	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4008196	            0xeb40	                           jmp 0x40081d8	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x4008198	     0xf1f84000000	                   nop dword [rax + rax]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x40081a0	        0x410fb60f	                   movzx ecx, byte [r15]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x40081a4	          0x4c89f8	                            mov rax, r15	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081a7	        0x4883c201	                              add rdx, 1	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x40081ab	        0x4c8d7801	                      lea r15, [rax + 1]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x40081af	          0x884aff	                  mov byte [rdx - 1], cl	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x40081b2	         0xfb64001	               movzx eax, byte [rax + 1]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x40081b6	            0xa8df	                           test al, 0xdf	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x40081b8	            0x741e	                            je 0x40081d8	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x40081ba	            0x3c09	                               cmp al, 9	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x40081bc	            0x741a	                            je 0x40081d8	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x40081be	            0x3c5c	                            cmp al, 0x5c	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081c0	            0x75de	                           jne 0x40081a0	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081c2	      0x410fb64f01	               movzx ecx, byte [r15 + 1]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081c7	        0x498d4701	                      lea rax, [r15 + 1]	      4943	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081cb	            0x84c9	                             test cl, cl	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081cd	            0x75d8	                           jne 0x40081a7	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081cf	            0xebcf	                           jmp 0x40081a0	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081d1	     0xf1f80000000	                         nop dword [rax]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x40081d8	          0x4c89ff	                            mov rdi, r15	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x40081db	          0xc60200	                       mov byte [rdx], 0	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x40081de	        0x488d6a01	                      lea rbp, [rdx + 1]	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x40081e2	          0x83c301	                              add ebx, 1	      4947	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x40081e5	      0xe800000000	                          call 0x40081ea	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x40081ea	          0x4885c0	                           test rax, rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x40081ed	          0x4989c7	                            mov r15, rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x40081f0	     0xf855affffff	                           jne 0x4008150	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x40081f6	        0x458b4630	            mov r8d, dword [r14 + 0x30] 	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x40081fa	          0x4585c0	                           test r8d, r8d	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x40081fd	     0xf84c0000000	                            je 0x40082c3	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x4008203	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x4008208	      0xe800000000	                          call 0x400820d	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x400820d	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x4008212	      0xe800000000	                          call 0x4008217	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x4008217	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x400821c	      0xe800000000	                          call 0x4008221	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x4008221	          0x4d85ff	                           test r15, r15	      5009	syntax.c	FUNCTION_79	IF_14
0x4008224	            0x747a	                            je 0x40082a0	      5009	syntax.c	FUNCTION_79	IF_14
0x4008226	          0x4c89ff	                            mov rdi, r15	      5010	syntax.c	FUNCTION_79	CALL_22
0x4008229	      0xe800000000	                          call 0x400822e	      5010	syntax.c	FUNCTION_79	CALL_22
0x400822e	        0x49894608	                mov qword [r14 + 8], rax	      5010	syntax.c	FUNCTION_79	CALL_22
0x4008232	      0xbf23000000	                           mov edi, 0x23	      5014	syntax.c	FUNCTION_79	CALL_25
0x4008237	      0xe800000000	                          call 0x400823c	      5014	syntax.c	FUNCTION_79	CALL_25
0x400823c	    0x488b05000000	            mov rax, qword [0x04008243] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x4008243	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x4008247	      0xe800000000	                          call 0x400824c	      5015	syntax.c	FUNCTION_79	CALL_26
0x400824c	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      5016	syntax.c	FUNCTION_79
0x4008254	    0x644833042528	                xor rax, qword fs:[0x28]	      5016	syntax.c	FUNCTION_79
0x400825d	     0xf8523030000	                           jne 0x4008586	      5016	syntax.c	FUNCTION_79
0x4008263	    0x4881c4e80000	                           add rsp, 0xe8	      5016	syntax.c	FUNCTION_79
0x400826a	              0x5b	                                 pop rbx	      5016	syntax.c	FUNCTION_79
0x400826b	              0x5d	                                 pop rbp	      5016	syntax.c	FUNCTION_79
0x400826c	            0x415c	                                 pop r12	      5016	syntax.c	FUNCTION_79
0x400826e	            0x415d	                                 pop r13	      5016	syntax.c	FUNCTION_79
0x4008270	            0x415e	                                 pop r14	      5016	syntax.c	FUNCTION_79
0x4008272	            0x415f	                                 pop r15	      5016	syntax.c	FUNCTION_79
0x4008274	              0xc3	                                     ret	      5016	syntax.c	FUNCTION_79
0x4008275	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400827a	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400827f	          0x4889c7	                            mov rdi, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4008282	          0x4829c6	                            sub rsi, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4008285	      0xe800000000	                          call 0x400828a	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400828a	            0x85c0	                           test eax, eax	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x400828c	        0x89442420	             mov dword [rsp + 0x20], eax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x4008290	            0x7494	                            je 0x4008226	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x4008292	      0xe95efeffff	                           jmp 0x40080f5	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x4008297	    0x660f1f840000	                    nop word [rax + rax]	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x40082a0	            0x31ff	                            xor edi, edi	      5012	syntax.c	FUNCTION_79	CALL_24
0x40082a2	      0xba05000000	                              mov edx, 5	      5012	syntax.c	FUNCTION_79	CALL_24
0x40082a7	      0xbe00000000	                              mov esi, 0	      5012	syntax.c	FUNCTION_79	CALL_24
0x40082ac	      0xe800000000	                          call 0x40082b1	      5012	syntax.c	FUNCTION_79	CALL_24
0x40082b1	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5012	syntax.c	FUNCTION_79	CALL_24
0x40082b6	          0x4889c7	                            mov rdi, rax	      5012	syntax.c	FUNCTION_79	CALL_24
0x40082b9	      0xe800000000	                          call 0x40082be	      5012	syntax.c	FUNCTION_79	CALL_24
0x40082be	      0xe96fffffff	                           jmp 0x4008232	      5012	syntax.c	FUNCTION_79	CALL_24
0x40082c3	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x40082c7	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x40082cc	      0xe80fa8ffff	              call sym.syn_incl_toplevel	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x40082d1	          0x8d43ff	                      lea eax, [rbx - 1]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40082d4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40082d7	        0x89442424	             mov dword [rsp + 0x24], eax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40082db	     0xf8422ffffff	                            je 0x4008203	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40082e1	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40082e6	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x40082eb	      0x4c89742438	             mov qword [rsp + 0x38], r14	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x40082f0	      0x4889442410	             mov qword [rsp + 0x10], rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40082f5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40082fa	      0xbe5b000000	                           mov esi, 0x5b	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x40082ff	      0xe800000000	                          call 0x4008304	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x4008304	          0x4989c6	                            mov r14, rax	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x4008307	          0x4d85f6	                           test r14, r14	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x400830a	            0x7404	                            je 0x4008310	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x400830c	        0x41c60600	                       mov byte [r14], 0	      4963	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x4008310	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x4008315	      0x448b6c2444	           mov r13d, dword [rsp + 0x44] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x400831a	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x400831f	      0x448b7c2450	           mov r15d, dword [rsp + 0x50] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x4008324	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4531	syntax.c	FUNCTION_74	IF_1
0x4008329	        0x48890424	                    mov qword [rsp], rax	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x400832d	    0x488b05000000	            mov rax, qword [0x04008334] 	      4531	syntax.c	FUNCTION_74	IF_1
0x4008334	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4531	syntax.c	FUNCTION_74	IF_1
0x4008338	    0x8bb858020000	           mov edi, dword [rax + 0x258] 	      4531	syntax.c	FUNCTION_74	IF_1
0x400833e	            0x85ff	                           test edi, edi	      4531	syntax.c	FUNCTION_74	IF_1
0x4008340	     0xf851a010000	                           jne 0x4008460	      4531	syntax.c	FUNCTION_74	IF_1
0x4008346	          0x4889f7	                            mov rdi, rsi	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008349	      0x4889742408	                mov qword [rsp + 8], rsi	      4536	syntax.c	FUNCTION_74	CALL_4
0x400834e	      0xe800000000	                          call 0x4008353	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008353	          0x8d7830	                   lea edi, [rax + 0x30]	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008356	      0xe800000000	                          call 0x400835b	      4536	syntax.c	FUNCTION_74	CALL_4
0x400835b	          0x4885c0	                           test rax, rax	      4537	syntax.c	FUNCTION_74	IF_2
0x400835e	          0x4889c3	                            mov rbx, rax	      4536	syntax.c	FUNCTION_74	CALL_4
0x4008361	     0xf84ba000000	                            je 0x4008421	      4537	syntax.c	FUNCTION_74	IF_2
0x4008367	        0x488d6828	                   lea rbp, [rax + 0x28]	      4539	syntax.c	FUNCTION_74	CALL_5
0x400836b	      0x488b742408	                mov rsi, qword [rsp + 8]	       110	string3.h	FUNCTION_176	CALL_3
0x4008370	          0x4889ef	                            mov rdi, rbp	       110	string3.h	FUNCTION_176	CALL_3
0x4008373	      0xe800000000	                          call 0x4008378	       110	string3.h	FUNCTION_176	CALL_3
0x4008378	       0xfb7442420	           movzx eax, word [rsp + 0x20] 	      4540	syntax.c	FUNCTION_74
0x400837d	        0x44897b20	            mov dword [rbx + 0x20], r15d	      4542	syntax.c	FUNCTION_74
0x4008381	          0x4c89e7	                            mov rdi, r12	      4544	syntax.c	FUNCTION_74	CALL_6
0x4008384	        0x44896b24	            mov dword [rbx + 0x24], r13d	      4543	syntax.c	FUNCTION_74
0x4008388	        0x6689430c	                mov word [rbx + 0xc], ax	      4540	syntax.c	FUNCTION_74
0x400838c	    0x8b0500000000	            mov eax, dword [0x04008392] 	      4541	syntax.c	FUNCTION_74
0x4008392	          0x894308	                mov dword [rbx + 8], eax	      4541	syntax.c	FUNCTION_74
0x4008395	      0xe8d68cffff	                   call sym.copy_id_list	      4544	syntax.c	FUNCTION_74	CALL_6
0x400839a	          0x4d85e4	                           test r12, r12	      4545	syntax.c	FUNCTION_74	IF_3
0x400839d	        0x48894310	             mov qword [rbx + 0x10], rax	      4544	syntax.c	FUNCTION_74	CALL_6
0x40083a1	            0x7415	                            je 0x40083b8	      4545	syntax.c	FUNCTION_74	IF_3
0x40083a3	    0x488b05000000	            mov rax, qword [0x040083aa] 	      4546	syntax.c	FUNCTION_74	IF_3
0x40083aa	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4546	syntax.c	FUNCTION_74	IF_3
0x40083ae	    0xc78098020000	              mov dword [rax + 0x298], 1	      4546	syntax.c	FUNCTION_74	IF_3
0x40083b8	        0x488b3c24	                    mov rdi, qword [rsp]	      4547	syntax.c	FUNCTION_74	CALL_7
0x40083bc	      0xe8af8cffff	                   call sym.copy_id_list	      4547	syntax.c	FUNCTION_74	CALL_7
0x40083c1	        0x48894318	             mov qword [rbx + 0x18], rax	      4547	syntax.c	FUNCTION_74	CALL_7
0x40083c5	    0x488b05000000	            mov rax, qword [0x040083cc] 	      4549	syntax.c	FUNCTION_74	IF_4
0x40083cc	          0x4889ef	                            mov rdi, rbp	      4554	syntax.c	FUNCTION_74	CALL_8
0x40083cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4549	syntax.c	FUNCTION_74	IF_4
0x40083d3	    0x8b8858020000	           mov ecx, dword [rax + 0x258] 	      4550	syntax.c	FUNCTION_74	IF_4
0x40083d9	    0x4c8da0280100	                  lea r12, [rax + 0x128]	      4550	syntax.c	FUNCTION_74	IF_4
0x40083e0	            0x85c9	                           test ecx, ecx	      4550	syntax.c	FUNCTION_74	IF_4
0x40083e2	        0x4c0f44e0	                          cmove r12, rax	      4550	syntax.c	FUNCTION_74	IF_4
0x40083e6	      0xe800000000	                          call 0x40083eb	      4554	syntax.c	FUNCTION_74	CALL_8
0x40083eb	          0x4889ee	                            mov rsi, rbp	      4555	syntax.c	FUNCTION_74	CALL_9
0x40083ee	          0x4889c2	                            mov rdx, rax	      4555	syntax.c	FUNCTION_74	CALL_9
0x40083f1	          0x4c89e7	                            mov rdi, r12	      4555	syntax.c	FUNCTION_74	CALL_9
0x40083f4	          0x4989c5	                            mov r13, rax	      4554	syntax.c	FUNCTION_74	CALL_8
0x40083f7	      0xe800000000	                          call 0x40083fc	      4555	syntax.c	FUNCTION_74	CALL_9
0x40083fc	        0x488b5008	                mov rdx, qword [rax + 8]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4008400	          0x4885d2	                           test rdx, rdx	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4008403	     0xf84ad000000	                            je 0x40084b6	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4008409	    0x4881fa000000	                              cmp rdx, 0	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4008410	     0xf84a0000000	                            je 0x40084b6	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4008416	        0x4883ea28	                           sub rdx, 0x28	      4565	syntax.c	FUNCTION_74	ELSE_3
0x400841a	          0x488913	                    mov qword [rbx], rdx	      4565	syntax.c	FUNCTION_74	ELSE_3
0x400841d	        0x48896808	                mov qword [rax + 8], rbp	      4566	syntax.c	FUNCTION_74	ELSE_3
0x4008421	          0x4d85f6	                           test r14, r14	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x4008424	     0xf84ad000000	                            je 0x40084d7	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x400842a	      0x410fb64601	               movzx eax, byte [r14 + 1]	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x400842f	            0x84c0	                             test al, al	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4008431	     0xf84d9000000	                            je 0x4008510	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4008437	            0x3c5d	                            cmp al, 0x5d	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4008439	     0xf84fe000000	                            je 0x400853d	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x400843f	    0x8b1500000000	            mov edx, dword [0x04008445] 	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x4008445	            0x85d2	                           test edx, edx	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x4008447	            0x7547	                           jne 0x4008490	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x4008449	          0x418806	                      mov byte [r14], al	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x400844c	        0x4983c601	                              add r14, 1	      4997	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x4008450	          0x4d85f6	                           test r14, r14	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x4008453	     0xf85b3feffff	                           jne 0x400830c	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x4008459	      0xe9b2feffff	                           jmp 0x4008310	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x400845e	            0x6690	                                     nop	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x4008460	          0x4889f7	                            mov rdi, rsi	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008463	          0x4889f3	                            mov rbx, rsi	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008466	      0xe800000000	                          call 0x400846b	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400846b	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008473	            0x89c6	                            mov esi, eax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008475	      0xb951000000	                           mov ecx, 0x51	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400847a	          0x4889df	                            mov rdi, rbx	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400847d	      0xe800000000	                          call 0x4008482	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008482	          0x4889c6	                            mov rsi, rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008485	      0xe9bcfeffff	                           jmp 0x4008346	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400848a	    0x660f1f440000	                    nop word [rax + rax]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4008490	        0x498d6e01	                      lea rbp, [r14 + 1]	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x4008494	          0x4889ef	                            mov rdi, rbp	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x4008497	    0xff1500000000	                 call qword [0x0400849d]	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x400849d	          0x4863d8	                         movsxd rbx, eax	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40084a0	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_171	CALL_3
0x40084a3	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_171	CALL_3
0x40084a6	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_171	CALL_3
0x40084a9	          0x4901de	                            add r14, rbx	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40084ac	      0xe800000000	                          call 0x40084b1	        59	string3.h	FUNCTION_171	CALL_3
0x40084b1	      0xe951feffff	                           jmp 0x4008307	        59	string3.h	FUNCTION_171	CALL_3
0x40084b6	    0x48c703000000	                      mov qword [rbx], 0	      4559	syntax.c	FUNCTION_74	IF_5
0x40084bd	          0x4c89e9	                            mov rcx, r13	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40084c0	          0x4889ea	                            mov rdx, rbp	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40084c3	          0x4889c6	                            mov rsi, rax	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40084c6	          0x4c89e7	                            mov rdi, r12	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40084c9	      0xe800000000	                          call 0x40084ce	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40084ce	          0x4d85f6	                           test r14, r14	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x40084d1	     0xf8553ffffff	                           jne 0x400842a	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x40084d7	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40084dc	          0x4889df	                            mov rdi, rbx	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40084df	      0xe800000000	                          call 0x40084e4	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40084e4	      0x488d440301	                lea rax, [rbx + rax + 1]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40084e9	      0x836c242401	               sub dword [rsp + 0x24], 1	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40084ee	      0x4889442410	             mov qword [rsp + 0x10], rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40084f3	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40084f7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x40084fa	     0xf85f5fdffff	                           jne 0x40082f5	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4008500	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4008505	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400850a	      0xe9f4fcffff	                           jmp 0x4008203	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400850f	              0x90	                                     nop	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4008510	            0x31ff	                            xor edi, edi	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4008512	      0xba05000000	                              mov edx, 5	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4008517	      0xbe00000000	                              mov esi, 0	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x400851c	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4008521	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4008526	      0xe800000000	                          call 0x400852b	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x400852b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4008530	          0x4889c7	                            mov rdi, rax	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4008533	      0xe800000000	                          call 0x4008538	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4008538	      0xe9c6fcffff	                           jmp 0x4008203	      4972	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x400853d	      0x41807e0200	                   cmp byte [r14 + 2], 0	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4008542	          0x4c89f3	                            mov rbx, r14	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4008545	            0x750e	                           jne 0x4008555	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4008547	        0x498d4601	                      lea rax, [r14 + 1]	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x400854b	      0x4889442410	             mov qword [rsp + 0x10], rax	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4008550	      0xe982ffffff	                           jmp 0x40084d7	      4983	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4008555	            0x31ff	                            xor edi, edi	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4008557	      0xba05000000	                              mov edx, 5	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400855c	      0xbe00000000	                              mov esi, 0	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4008561	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4008566	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400856b	      0xe800000000	                          call 0x4008570	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4008570	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4008575	        0x488d5302	                      lea rdx, [rbx + 2]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4008579	          0x4889c7	                            mov rdi, rax	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x400857c	      0xe800000000	                          call 0x4008581	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4008581	      0xe97dfcffff	                           jmp 0x4008203	      4980	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4008586	      0xe800000000	                          call 0x400858b	      5016	syntax.c	FUNCTION_79
highlight_gui_color_rgb	SWITCH,0:WHILE,0:DO,0:IF,3:ELSE,1:FOR,0:functions,0:CALL,1	26
0x4005ff0	            0x85ff	                           test edi, edi	      9454	syntax.c	FUNCTION_145	IF_1
0x4005ff2	            0x7e4c	                           jle 0x4006040	      9454	syntax.c	FUNCTION_145	IF_1
0x4005ff4	    0x3b3d00000000	            cmp edi, dword [0x04005ffa] 	      9454	syntax.c	FUNCTION_145	IF_1
0x4005ffa	            0x7f44	                            jg 0x4006040	      9454	syntax.c	FUNCTION_145	IF_1
0x4005ffc	          0x4863ff	                         movsxd rdi, edi	      9458	syntax.c	FUNCTION_145	IF_2
0x4005fff	    0x488b15000000	            mov rdx, qword [0x04006006] 	      9458	syntax.c	FUNCTION_145	IF_2
0x4006006	            0x85f6	                           test esi, esi	      9457	syntax.c	FUNCTION_145	IF_2
0x4006008	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9458	syntax.c	FUNCTION_145	IF_2
0x400600c	        0x488d0447	                  lea rax, [rdi + rax*2]	      9458	syntax.c	FUNCTION_145	IF_2
0x4006010	        0x488d04c2	                  lea rax, [rdx + rax*8]	      9458	syntax.c	FUNCTION_145	IF_2
0x4006014	            0x7432	                            je 0x4006048	      9457	syntax.c	FUNCTION_145	IF_2
0x4006016	        0x488b78a8	             mov rdi, qword [rax - 0x58]	      9458	syntax.c	FUNCTION_145	IF_2
0x400601a	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9462	syntax.c	FUNCTION_145	IF_3
0x4006021	            0x741d	                            je 0x4006040	      9462	syntax.c	FUNCTION_145	IF_3
0x4006023	    0x8b0500000000	            mov eax, dword [0x04006029] 	      9465	syntax.c	FUNCTION_145	CALL_1
0x4006029	      0xba00000000	                              mov edx, 0	      9465	syntax.c	FUNCTION_145	CALL_1
0x400602e	            0x85c0	                           test eax, eax	      9465	syntax.c	FUNCTION_145	CALL_1
0x4006030	      0xb800000000	                              mov eax, 0	      9465	syntax.c	FUNCTION_145	CALL_1
0x4006035	        0x480f44c2	                          cmove rax, rdx	      9465	syntax.c	FUNCTION_145	CALL_1
0x4006039	            0xffe0	                                 jmp rax	      9465	syntax.c	FUNCTION_145	CALL_1
0x400603b	       0xf1f440000	                   nop dword [rax + rax]	      9465	syntax.c	FUNCTION_145	CALL_1
0x4006040	            0x31c0	                            xor eax, eax	      9466	syntax.c	FUNCTION_145
0x4006042	              0xc3	                                     ret	      9466	syntax.c	FUNCTION_145
0x4006043	       0xf1f440000	                   nop dword [rax + rax]	      9466	syntax.c	FUNCTION_145
0x4006048	        0x488b78b0	             mov rdi, qword [rax - 0x50]	      9460	syntax.c	FUNCTION_145	ELSE_1
0x400604c	            0xebcc	                           jmp 0x400601a	      9460	syntax.c	FUNCTION_145	ELSE_1
set_context_in_syntax_cmd	SWITCH,0:WHILE,0:DO,0:IF,7:ELSE,5:FOR,0:functions,0:CALL,10	89
0x4004270	    0xc7070c000000	                    mov dword [rdi], 0xc	      6492	syntax.c	FUNCTION_100
0x4004276	        0x48897708	                mov qword [rdi + 8], rsi	      6494	syntax.c	FUNCTION_100
0x400427a	          0x803e00	                       cmp byte [rsi], 0	      6499	syntax.c	FUNCTION_100	IF_1
0x400427d	    0xc70500000000	               mov dword [0x04004287], 0	      6493	syntax.c	FUNCTION_100
0x4004287	    0xc70500000000	               mov dword [0x04004291], 0	      6495	syntax.c	FUNCTION_100
0x4004291	    0xc70500000000	               mov dword [0x0400429b], 0	      6496	syntax.c	FUNCTION_100
0x400429b	            0x7503	                           jne 0x40042a0	      6499	syntax.c	FUNCTION_100	IF_1
0x400429d	              0xc3	                                     ret	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400429e	            0x6690	                                     nop	      6522	syntax.c	FUNCTION_100	ELSE_5
0x40042a0	            0x4154	                                push r12	      6488	syntax.c	FUNCTION_100
0x40042a2	              0x55	                                push rbp	      6488	syntax.c	FUNCTION_100
0x40042a3	          0x4889f5	                            mov rbp, rsi	      6488	syntax.c	FUNCTION_100
0x40042a6	              0x53	                                push rbx	      6488	syntax.c	FUNCTION_100
0x40042a7	          0x4889fb	                            mov rbx, rdi	      6488	syntax.c	FUNCTION_100
0x40042aa	          0x4889f7	                            mov rdi, rsi	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x40042ad	      0xe800000000	                          call 0x40042b2	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x40042b2	          0x803800	                       cmp byte [rax], 0	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x40042b5	          0x4989c4	                            mov r12, rax	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x40042b8	            0x7506	                           jne 0x40042c0	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x40042ba	              0x5b	                                 pop rbx	      6522	syntax.c	FUNCTION_100	ELSE_5
0x40042bb	              0x5d	                                 pop rbp	      6522	syntax.c	FUNCTION_100	ELSE_5
0x40042bc	            0x415c	                                 pop r12	      6522	syntax.c	FUNCTION_100	ELSE_5
0x40042be	              0xc3	                                     ret	      6522	syntax.c	FUNCTION_100	ELSE_5
0x40042bf	              0x90	                                     nop	      6522	syntax.c	FUNCTION_100	ELSE_5
0x40042c0	          0x4889c7	                            mov rdi, rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x40042c3	      0xe800000000	                          call 0x40042c8	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x40042c8	        0x48894308	                mov qword [rbx + 8], rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x40042cc	          0x4889c7	                            mov rdi, rax	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x40042cf	      0xe800000000	                          call 0x40042d4	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x40042d4	          0x803800	                       cmp byte [rax], 0	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x40042d7	     0xf85b3000000	                           jne 0x4004390	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x40042dd	          0x4929ec	                            sub r12, rbp	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40042e0	      0xbe00000000	                              mov esi, 0	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40042e5	          0x4889ef	                            mov rdi, rbp	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40042e8	          0x4c89e2	                            mov rdx, r12	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40042eb	      0xe800000000	                          call 0x40042f0	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40042f0	            0x85c0	                           test eax, eax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40042f2	     0xf84b8000000	                            je 0x40043b0	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40042f8	          0x4c89e2	                            mov rdx, r12	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x40042fb	      0xbe00000000	                              mov esi, 0	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4004300	          0x4889ef	                            mov rdi, rbp	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4004303	      0xe800000000	                          call 0x4004308	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4004308	            0x85c0	                           test eax, eax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400430a	     0xf8490000000	                            je 0x40043a0	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x4004310	          0x4c89e2	                            mov rdx, r12	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4004313	      0xbe00000000	                              mov esi, 0	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4004318	          0x4889ef	                            mov rdi, rbp	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400431b	      0xe800000000	                          call 0x4004320	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4004320	            0x85c0	                           test eax, eax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4004322	     0xf8498000000	                            je 0x40043c0	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x4004328	          0x4c89e2	                            mov rdx, r12	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400432b	      0xbe00000000	                              mov esi, 0	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4004330	          0x4889ef	                            mov rdi, rbp	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4004333	      0xe800000000	                          call 0x4004338	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x4004338	            0x85c0	                           test eax, eax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400433a	            0x7444	                            je 0x4004380	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400433c	          0x4c89e2	                            mov rdx, r12	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400433f	      0xbe00000000	                              mov esi, 0	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4004344	          0x4889ef	                            mov rdi, rbp	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4004347	      0xe800000000	                          call 0x400434c	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400434c	            0x85c0	                           test eax, eax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400434e	            0x7430	                            je 0x4004380	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x4004350	          0x4c89e2	                            mov rdx, r12	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4004353	      0xbe00000000	                              mov esi, 0	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4004358	          0x4889ef	                            mov rdi, rbp	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400435b	      0xe800000000	                          call 0x4004360	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4004360	            0x85c0	                           test eax, eax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4004362	            0x741c	                            je 0x4004380	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x4004364	          0x4c89e2	                            mov rdx, r12	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4004367	      0xbe00000000	                              mov esi, 0	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400436c	          0x4889ef	                            mov rdi, rbp	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400436f	      0xe800000000	                          call 0x4004374	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4004374	            0x85c0	                           test eax, eax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4004376	            0x7518	                           jne 0x4004390	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4004378	     0xf1f84000000	                   nop dword [rax + rax]	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x4004380	    0xc7030d000000	                    mov dword [rbx], 0xd	      6517	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7
0x4004386	      0xe92fffffff	                           jmp 0x40042ba	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400438b	       0xf1f440000	                   nop dword [rax + rax]	      6522	syntax.c	FUNCTION_100	ELSE_5
0x4004390	    0xc70300000000	                      mov dword [rbx], 0	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x4004396	      0xe91fffffff	                           jmp 0x40042ba	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x400439b	       0xf1f440000	                   nop dword [rax + rax]	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x40043a0	    0xc70500000000	               mov dword [0x040043aa], 2	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x40043aa	      0xe90bffffff	                           jmp 0x40042ba	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x40043af	              0x90	                                     nop	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x40043b0	    0xc70500000000	               mov dword [0x040043ba], 1	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x40043ba	      0xe9fbfeffff	                           jmp 0x40042ba	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x40043bf	              0x90	                                     nop	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x40043c0	    0xc70500000000	               mov dword [0x040043ca], 3	      6512	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6
0x40043ca	      0xe9ebfeffff	                           jmp 0x40042ba	      6512	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6
set_hl_attr	SWITCH,0:WHILE,0:DO,0:IF,8:ELSE,3:FOR,0:functions,0:CALL,8	160
0x4005060	              0x53	                                push rbx	      9526	syntax.c	FUNCTION_147
0x4005061	          0x4863ff	                         movsxd rdi, edi	      9528	syntax.c	FUNCTION_147
0x4005064	        0x4883ec30	                           sub rsp, 0x30	      9526	syntax.c	FUNCTION_147
0x4005068	    0x64488b042528	                mov rax, qword fs:[0x28]	      9526	syntax.c	FUNCTION_147
0x4005071	      0x4889442428	             mov qword [rsp + 0x28], rax	      9526	syntax.c	FUNCTION_147
0x4005076	            0x31c0	                            xor eax, eax	      9526	syntax.c	FUNCTION_147
0x4005078	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9528	syntax.c	FUNCTION_147
0x400507c	        0x488d1447	                  lea rdx, [rdi + rax*2]	      9528	syntax.c	FUNCTION_147
0x4005080	    0x488b05000000	            mov rax, qword [0x04005087] 	      9528	syntax.c	FUNCTION_147
0x4005087	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      9528	syntax.c	FUNCTION_147
0x400508b	        0x488b7308	                mov rsi, qword [rbx + 8]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x400508f	          0x4885f6	                           test rsi, rsi	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4005092	            0x742c	                            je 0x40050c0	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4005094	      0xbf00000000	                              mov edi, 0	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4005099	      0xb907000000	                              mov ecx, 7	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x400509e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x40050a0	            0x751e	                           jne 0x40050c0	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x40050a2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9624	syntax.c	FUNCTION_147
0x40050a7	    0x644833042528	                xor rax, qword fs:[0x28]	      9624	syntax.c	FUNCTION_147
0x40050b0	     0xf8575020000	                           jne 0x400532b	      9624	syntax.c	FUNCTION_147
0x40050b6	        0x4883c430	                           add rsp, 0x30	      9624	syntax.c	FUNCTION_147
0x40050ba	              0x5b	                                 pop rbx	      9624	syntax.c	FUNCTION_147
0x40050bb	              0xc3	                                     ret	      9624	syntax.c	FUNCTION_147
0x40050bc	         0xf1f4000	                         nop dword [rax]	      9624	syntax.c	FUNCTION_147
0x40050c0	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      9539	syntax.c	FUNCTION_147	IF_2
0x40050c4	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      9540	syntax.c	FUNCTION_147	IF_2
0x40050c8	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	      9541	syntax.c	FUNCTION_147	IF_2
0x40050cc	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9539	syntax.c	FUNCTION_147	IF_2
0x40050d2	     0xf8408010000	                            je 0x40051e0	      9539	syntax.c	FUNCTION_147	IF_2
0x40050d8	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      9539	syntax.c	FUNCTION_147	IF_2
0x40050dc	          0x8b7b6c	            mov edi, dword [rbx + 0x6c] 	      9552	syntax.c	FUNCTION_147	ELSE_1
0x40050df	      0x4889742420	             mov qword [rsp + 0x20], rsi	      9556	syntax.c	FUNCTION_147	ELSE_1
0x40050e4	          0x4889e6	                            mov rsi, rsp	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x40050e7	      0x4889442408	                mov qword [rsp + 8], rax	      9553	syntax.c	FUNCTION_147	ELSE_1
0x40050ec	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9554	syntax.c	FUNCTION_147	ELSE_1
0x40050f1	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      9555	syntax.c	FUNCTION_147	ELSE_1
0x40050f6	        0x66893c24	                      mov word [rsp], di	      9552	syntax.c	FUNCTION_147	ELSE_1
0x40050fa	      0xbf00000000	                              mov edi, 0	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x40050ff	      0xe84cfcffff	                 call sym.get_attr_entry	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4005104	          0x894368	             mov dword [rbx + 0x68], eax	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x4005107	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      9567	syntax.c	FUNCTION_147	IF_3
0x400510b	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      9567	syntax.c	FUNCTION_147	IF_3
0x400510f	          0x4885c0	                           test rax, rax	      9567	syntax.c	FUNCTION_147	IF_3
0x4005112	     0xf84b8010000	                            je 0x40052d0	      9567	syntax.c	FUNCTION_147	IF_3
0x4005118	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	      9571	syntax.c	FUNCTION_147	ELSE_2
0x400511b	          0x4889e6	                            mov rsi, rsp	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x400511e	      0xbf00000000	                              mov edi, 0	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4005123	      0x4889442408	                mov qword [rsp + 8], rax	      9572	syntax.c	FUNCTION_147	ELSE_2
0x4005128	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9573	syntax.c	FUNCTION_147	ELSE_2
0x400512d	        0x66890c24	                      mov word [rsp], cx	      9571	syntax.c	FUNCTION_147	ELSE_2
0x4005131	      0xe81afcffff	                 call sym.get_attr_entry	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4005136	          0x894328	             mov dword [rbx + 0x28], eax	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4005139	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      9581	syntax.c	FUNCTION_147	IF_4
0x400513c	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      9581	syntax.c	FUNCTION_147	IF_4
0x400513f	            0x85c0	                           test eax, eax	      9581	syntax.c	FUNCTION_147	IF_4
0x4005141	     0xf85d1000000	                           jne 0x4005218	      9581	syntax.c	FUNCTION_147	IF_4
0x4005147	            0x85d2	                           test edx, edx	      9581	syntax.c	FUNCTION_147	IF_4
0x4005149	     0xf85c9000000	                           jne 0x4005218	      9581	syntax.c	FUNCTION_147	IF_4
0x400514f	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      9583	syntax.c	FUNCTION_147	IF_4
0x4005153	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9583	syntax.c	FUNCTION_147	IF_4
0x4005159	     0xf8489010000	                            je 0x40052e8	      9583	syntax.c	FUNCTION_147	IF_4
0x400515f	    0x448b0d000000	            mov r9d, dword [0x04005166] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005166	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4005169	            0x31ff	                            xor edi, edi	      9591	syntax.c	FUNCTION_147	ELSE_3
0x400516b	          0x4531c0	                            xor r8d, r8d	      9592	syntax.c	FUNCTION_147	ELSE_3
0x400516e	      0x66897c2408	                  mov word [rsp + 8], di	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4005173	    0x66448944240a	               mov word [rsp + 0xa], r8w	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4005179	          0x4585c9	                           test r9d, r9d	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400517c	        0x66891424	                      mov word [rsp], dx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4005180	     0xf841a010000	                            je 0x40052a0	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005186	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005189	      0xe800000000	                          call 0x400518e	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400518e	    0x8b1500000000	            mov edx, dword [0x04005194] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005194	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005198	      0x4889442410	             mov qword [rsp + 0x10], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400519d	            0x85d2	                           test edx, edx	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400519f	     0xf841a010000	                            je 0x40052bf	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40051a5	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40051ac	     0xf85a5000000	                           jne 0x4005257	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40051b2	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40051b8	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40051bd	     0xf84bd000000	                            je 0x4005280	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40051c3	          0x4889e6	                            mov rsi, rsp	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40051c6	      0xbf00000000	                              mov edi, 0	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40051cb	      0xe880fbffff	                 call sym.get_attr_entry	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40051d0	          0x89433c	             mov dword [rbx + 0x3c], eax	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40051d3	      0xe9cafeffff	                           jmp 0x40050a2	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40051d8	     0xf1f84000000	                   nop dword [rax + rax]	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40051e0	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9540	syntax.c	FUNCTION_147	IF_2
0x40051e7	     0xf85ebfeffff	                           jne 0x40050d8	      9540	syntax.c	FUNCTION_147	IF_2
0x40051ed	    0x4881f999d4ff	             cmp rcx, 0xffffffffffffd499	      9541	syntax.c	FUNCTION_147	IF_2
0x40051f4	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      9542	syntax.c	FUNCTION_147	IF_2
0x40051f8	     0xf85defeffff	                           jne 0x40050dc	      9541	syntax.c	FUNCTION_147	IF_2
0x40051fe	          0x4885f6	                           test rsi, rsi	      9542	syntax.c	FUNCTION_147	IF_2
0x4005201	          0x4889ca	                            mov rdx, rcx	      9542	syntax.c	FUNCTION_147	IF_2
0x4005204	     0xf85d2feffff	                           jne 0x40050dc	      9542	syntax.c	FUNCTION_147	IF_2
0x400520a	          0x8b436c	            mov eax, dword [rbx + 0x6c] 	      9548	syntax.c	FUNCTION_147	IF_2
0x400520d	          0x894368	             mov dword [rbx + 0x68], eax	      9548	syntax.c	FUNCTION_147	IF_2
0x4005210	      0xe9f2feffff	                           jmp 0x4005107	      9548	syntax.c	FUNCTION_147	IF_2
0x4005215	           0xf1f00	                         nop dword [rax]	      9548	syntax.c	FUNCTION_147	IF_2
0x4005218	    0x448b15000000	           mov r10d, dword [0x0400521f] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400521f	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4005222	      0x6689442408	                  mov word [rsp + 8], ax	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4005227	      0x668954240a	                mov word [rsp + 0xa], dx	      9592	syntax.c	FUNCTION_147	ELSE_3
0x400522c	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005230	          0x4585d2	                         test r10d, r10d	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005233	        0x66890c24	                      mov word [rsp], cx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4005237	            0x7467	                            je 0x40052a0	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005239	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400523f	     0xf8541ffffff	                           jne 0x4005186	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005245	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005249	      0x4889442410	             mov qword [rsp + 0x10], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400524e	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4005255	            0x7429	                            je 0x4005280	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4005257	      0xe800000000	                          call 0x400525c	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400525c	    0x48817c241099	cmp qword [rsp + 0x10], 0xffffffffffffd499	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4005265	      0x4889442418	             mov qword [rsp + 0x18], rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400526a	     0xf8553ffffff	                           jne 0x40051c3	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4005270	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4005276	     0xf8547ffffff	                           jne 0x40051c3	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x400527c	         0xf1f4000	                         nop dword [rax]	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4005280	    0x48c74424109a	mov qword [rsp + 0x10], 0xffffffffffffd49a	      9618	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4005289	    0x48c74424189a	mov qword [rsp + 0x18], 0xffffffffffffd49a	      9619	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4005292	      0xe92cffffff	                           jmp 0x40051c3	      9619	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4005297	    0x660f1f840000	                    nop word [rax + rax]	      9619	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40052a0	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40052a3	      0xe800000000	                          call 0x40052a8	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40052a8	    0x8b1500000000	            mov edx, dword [0x040052ae] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40052ae	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40052b2	      0x4889442410	             mov qword [rsp + 0x10], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40052b7	            0x85d2	                           test edx, edx	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40052b9	     0xf85e6feffff	                           jne 0x40051a5	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40052bf	      0xe800000000	                          call 0x40052c4	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40052c4	            0xeb96	                           jmp 0x400525c	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40052c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40052d0	          0x4885d2	                           test rdx, rdx	      9567	syntax.c	FUNCTION_147	IF_3
0x40052d3	     0xf853ffeffff	                           jne 0x4005118	      9567	syntax.c	FUNCTION_147	IF_3
0x40052d9	          0x8b4314	            mov eax, dword [rbx + 0x14] 	      9568	syntax.c	FUNCTION_147	IF_3
0x40052dc	          0x894328	             mov dword [rbx + 0x28], eax	      9568	syntax.c	FUNCTION_147	IF_3
0x40052df	      0xe955feffff	                           jmp 0x4005139	      9568	syntax.c	FUNCTION_147	IF_3
0x40052e4	         0xf1f4000	                         nop dword [rax]	      9568	syntax.c	FUNCTION_147	IF_3
0x40052e8	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      9584	syntax.c	FUNCTION_147	IF_4
0x40052ec	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9584	syntax.c	FUNCTION_147	IF_4
0x40052f3	            0x742b	                            je 0x4005320	      9584	syntax.c	FUNCTION_147	IF_4
0x40052f5	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x40052f8	    0x8b3500000000	            mov esi, dword [0x040052fe] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40052fe	            0x31c9	                            xor ecx, ecx	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4005300	      0x66894c240a	                mov word [rsp + 0xa], cx	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4005305	        0x66891424	                      mov word [rsp], dx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4005309	            0x31d2	                            xor edx, edx	      9591	syntax.c	FUNCTION_147	ELSE_3
0x400530b	            0x85f6	                           test esi, esi	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400530d	      0x6689542408	                  mov word [rsp + 8], dx	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4005312	            0x748c	                            je 0x40052a0	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005314	      0x4889442410	             mov qword [rsp + 0x10], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005319	      0xe939ffffff	                           jmp 0x4005257	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400531e	            0x6690	                                     nop	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4005320	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      9587	syntax.c	FUNCTION_147	IF_4
0x4005323	          0x89433c	             mov dword [rbx + 0x3c], eax	      9587	syntax.c	FUNCTION_147	IF_4
0x4005326	      0xe977fdffff	                           jmp 0x40050a2	      9587	syntax.c	FUNCTION_147	IF_4
0x400532b	      0xe800000000	       call sym.gui_do_one_color.isra.14	      9624	syntax.c	FUNCTION_147
syn_name2id	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,1:functions,0:CALL,3	43
0x4006050	            0x4154	                                push r12	      9632	syntax.c	FUNCTION_148
0x4006052	              0x55	                                push rbp	      9632	syntax.c	FUNCTION_148
0x4006053	          0x4889fe	                            mov rsi, rdi	      9632	syntax.c	FUNCTION_148
0x4006056	              0x53	                                push rbx	      9632	syntax.c	FUNCTION_148
0x4006057	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400605c	    0x4881ecd00000	                           sub rsp, 0xd0	      9632	syntax.c	FUNCTION_148
0x4006063	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x4006066	    0x64488b042528	                mov rax, qword fs:[0x28]	      9632	syntax.c	FUNCTION_148
0x400606f	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      9632	syntax.c	FUNCTION_148
0x4006077	            0x31c0	                            xor eax, eax	      9632	syntax.c	FUNCTION_148
0x4006079	      0xe800000000	                          call 0x400607e	      9639	syntax.c	FUNCTION_148	CALL_1
0x400607e	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x4006081	      0xe800000000	                          call 0x4006086	      9640	syntax.c	FUNCTION_148	CALL_2
0x4006086	    0x486305000000	         movsxd rax, dword [0x0400608d] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400608d	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006091	          0x4889c3	                            mov rbx, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006094	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006098	    0x488b05000000	            mov rax, qword [0x0400609f] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400609f	    0x488dacd070ff	           lea rbp, [rax + rdx*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x40060a7	            0xeb26	                           jmp 0x40060cf	      9641	syntax.c	FUNCTION_148	FOR_1
0x40060a9	     0xf1f80000000	                         nop dword [rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x40060b0	        0x488b7500	                    mov rsi, qword [rbp]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x40060b4	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x40060b7	            0x740c	                            je 0x40060c5	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x40060b9	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40060bc	      0xe800000000	                          call 0x40060c1	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40060c1	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40060c3	            0x7413	                            je 0x40060d8	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40060c5	    0x4881ed980000	                           sub rbp, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40060cc	          0x4489e3	                           mov ebx, r12d	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x40060cf	          0x4189dc	                           mov r12d, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x40060d2	        0x4183ec01	                             sub r12d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x40060d6	            0x79d8	                           jns 0x40060b0	      9641	syntax.c	FUNCTION_148	FOR_1
0x40060d8	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	      9646	syntax.c	FUNCTION_148
0x40060e0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9646	syntax.c	FUNCTION_148
0x40060e9	            0x89d8	                            mov eax, ebx	      9646	syntax.c	FUNCTION_148
0x40060eb	            0x750c	                           jne 0x40060f9	      9646	syntax.c	FUNCTION_148
0x40060ed	    0x4881c4d00000	                           add rsp, 0xd0	      9646	syntax.c	FUNCTION_148
0x40060f4	              0x5b	                                 pop rbx	      9646	syntax.c	FUNCTION_148
0x40060f5	              0x5d	                                 pop rbp	      9646	syntax.c	FUNCTION_148
0x40060f6	            0x415c	                                 pop r12	      9646	syntax.c	FUNCTION_148
0x40060f8	              0xc3	                                     ret	      9646	syntax.c	FUNCTION_148
0x40060f9	      0xe800000000	                          call 0x40060fe	      9646	syntax.c	FUNCTION_148
ex_ownsyntax	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,1:FOR,0:functions,0:CALL,16	97
0x4004030	              0x55	                                push rbp	      6398	syntax.c	FUNCTION_96
0x4004031	              0x53	                                push rbx	      6398	syntax.c	FUNCTION_96
0x4004032	          0x4889fd	                            mov rbp, rdi	      6398	syntax.c	FUNCTION_96
0x4004035	        0x4883ec08	                              sub rsp, 8	      6398	syntax.c	FUNCTION_96
0x4004039	    0x488b1d000000	            mov rbx, qword [0x04004040] 	      6402	syntax.c	FUNCTION_96	IF_1
0x4004040	        0x488b4308	                mov rax, qword [rbx + 8]	      6402	syntax.c	FUNCTION_96	IF_1
0x4004044	    0x480568170000	                         add rax, 0x1768	      6402	syntax.c	FUNCTION_96	IF_1
0x400404a	        0x48394310	            cmp qword [rbx + 0x10], rax 	      6402	syntax.c	FUNCTION_96	IF_1
0x400404e	     0xf84c4000000	                            je 0x4004118	      6402	syntax.c	FUNCTION_96	IF_1
0x4004054	      0xbf00000000	                              mov edi, 0	      6419	syntax.c	FUNCTION_96	CALL_9
0x4004059	      0xe800000000	                          call 0x400405e	      6419	syntax.c	FUNCTION_96	CALL_9
0x400405e	          0x4885c0	                           test rax, rax	      6420	syntax.c	FUNCTION_96	IF_2
0x4004061	          0x4889c3	                            mov rbx, rax	      6419	syntax.c	FUNCTION_96	CALL_9
0x4004064	            0x746a	                            je 0x40040d0	      6420	syntax.c	FUNCTION_96	IF_2
0x4004066	          0x4889c7	                            mov rdi, rax	      6421	syntax.c	FUNCTION_96	CALL_10
0x4004069	      0xe800000000	                          call 0x400406e	      6421	syntax.c	FUNCTION_96	CALL_10
0x400406e	    0x4c8b05000000	              mov r8, qword [0x04004075]	      6425	syntax.c	FUNCTION_96	CALL_11
0x4004075	        0x488b7500	                    mov rsi, qword [rbp]	      6425	syntax.c	FUNCTION_96	CALL_11
0x4004079	      0xb901000000	                              mov ecx, 1	      6425	syntax.c	FUNCTION_96	CALL_11
0x400407e	      0xbf4c000000	                           mov edi, 0x4c	      6425	syntax.c	FUNCTION_96	CALL_11
0x4004083	          0x4889c3	                            mov rbx, rax	      6421	syntax.c	FUNCTION_96	CALL_10
0x4004086	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400408d	      0xe800000000	                          call 0x4004092	      6425	syntax.c	FUNCTION_96	CALL_11
0x4004092	      0xbf00000000	                              mov edi, 0	      6428	syntax.c	FUNCTION_96	CALL_12
0x4004097	      0xe800000000	                          call 0x400409c	      6428	syntax.c	FUNCTION_96	CALL_12
0x400409c	          0x4885c0	                           test rax, rax	      6429	syntax.c	FUNCTION_96	IF_3
0x400409f	            0x740d	                            je 0x40040ae	      6429	syntax.c	FUNCTION_96	IF_3
0x40040a1	          0x4889c6	                            mov rsi, rax	      6430	syntax.c	FUNCTION_96	CALL_13
0x40040a4	      0xbf00000000	                              mov edi, 0	      6430	syntax.c	FUNCTION_96	CALL_13
0x40040a9	      0xe800000000	                          call 0x40040ae	      6430	syntax.c	FUNCTION_96	CALL_13
0x40040ae	          0x4885db	                           test rbx, rbx	      6433	syntax.c	FUNCTION_96	IF_4
0x40040b1	            0x744d	                            je 0x4004100	      6433	syntax.c	FUNCTION_96	IF_4
0x40040b3	          0x4889de	                            mov rsi, rbx	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x40040b6	      0xbf00000000	                              mov edi, 0	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x40040bb	      0xe800000000	                          call 0x40040c0	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x40040c0	        0x4883c408	                              add rsp, 8	      6440	syntax.c	FUNCTION_96
0x40040c4	          0x4889df	                            mov rdi, rbx	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x40040c7	              0x5b	                                 pop rbx	      6440	syntax.c	FUNCTION_96
0x40040c8	              0x5d	                                 pop rbp	      6440	syntax.c	FUNCTION_96
0x40040c9	      0xe900000000	                           jmp 0x40040ce	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x40040ce	            0x6690	                                     nop	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x40040d0	    0x4c8b05000000	              mov r8, qword [0x040040d7]	      6425	syntax.c	FUNCTION_96	CALL_11
0x40040d7	        0x488b7500	                    mov rsi, qword [rbp]	      6425	syntax.c	FUNCTION_96	CALL_11
0x40040db	      0xb901000000	                              mov ecx, 1	      6425	syntax.c	FUNCTION_96	CALL_11
0x40040e0	      0xbf4c000000	                           mov edi, 0x4c	      6425	syntax.c	FUNCTION_96	CALL_11
0x40040e5	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6425	syntax.c	FUNCTION_96	CALL_11
0x40040ec	      0xe800000000	                          call 0x40040f1	      6425	syntax.c	FUNCTION_96	CALL_11
0x40040f1	      0xbf00000000	                              mov edi, 0	      6428	syntax.c	FUNCTION_96	CALL_12
0x40040f6	      0xe800000000	                          call 0x40040fb	      6428	syntax.c	FUNCTION_96	CALL_12
0x40040fb	          0x4885c0	                           test rax, rax	      6429	syntax.c	FUNCTION_96	IF_3
0x40040fe	            0x75a1	                           jne 0x40040a1	      6429	syntax.c	FUNCTION_96	IF_3
0x4004100	        0x4883c408	                              add rsp, 8	      6440	syntax.c	FUNCTION_96
0x4004104	      0xbe01000000	                              mov esi, 1	      6434	syntax.c	FUNCTION_96	CALL_14
0x4004109	      0xbf00000000	                              mov edi, 0	      6434	syntax.c	FUNCTION_96	CALL_14
0x400410e	              0x5b	                                 pop rbx	      6440	syntax.c	FUNCTION_96
0x400410f	              0x5d	                                 pop rbp	      6440	syntax.c	FUNCTION_96
0x4004110	      0xe900000000	                           jmp 0x4004115	      6434	syntax.c	FUNCTION_96	CALL_14
0x4004115	           0xf1f00	                         nop dword [rax]	      6434	syntax.c	FUNCTION_96	CALL_14
0x4004118	      0xbfb8040000	                          mov edi, 0x4b8	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x400411d	      0xe800000000	                          call 0x4004122	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x4004122	        0x48894310	             mov qword [rbx + 0x10], rax	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x4004126	    0x488b05000000	            mov rax, qword [0x0400412d] 	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x400412d	        0x488b4010	            mov rax, qword [rax + 0x10] 	        90	string3.h	FUNCTION_173	CALL_6
0x4004131	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x4004135	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400413c	    0x48c780b00400	              mov qword [rax + 0x4b0], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4004147	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x400414b	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x400414e	    0x8d88b8040000	                  lea ecx, [rax + 0x4b8]	        90	string3.h	FUNCTION_173	CALL_6
0x4004154	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x4004156	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x4004159	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x400415c	    0x488b05000000	            mov rax, qword [0x04004163] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x4004163	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x4004167	      0xe800000000	                          call 0x400416c	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x400416c	    0x488b05000000	            mov rax, qword [0x04004173] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x4004173	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x4004177	    0x4881c7280100	                          add rdi, 0x128	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400417e	      0xe800000000	                          call 0x4004183	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x4004183	    0x488b05000000	            mov rax, qword [0x0400418a] 	      6410	syntax.c	FUNCTION_96	IF_1
0x400418a	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400418e	    0xc78068020000	              mov dword [rax + 0x268], 0	      6410	syntax.c	FUNCTION_96	IF_1
0x4004198	    0x4881c7680400	                          add rdi, 0x468	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400419f	      0xe800000000	                          call 0x40041a4	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x40041a4	    0x488b05000000	            mov rax, qword [0x040041ab] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x40041ab	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x40041af	    0x4881c7780400	                          add rdi, 0x478	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x40041b6	      0xe800000000	                          call 0x40041bb	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x40041bb	    0x488b05000000	            mov rax, qword [0x040041c2] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x40041c2	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x40041c6	    0x4881c7800400	                          add rdi, 0x480	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x40041cd	      0xe800000000	                          call 0x40041d2	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x40041d2	    0x488b05000000	            mov rax, qword [0x040041d9] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x40041d9	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x40041dd	    0x4881c7b00400	                          add rdi, 0x4b0	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x40041e4	      0xe800000000	                          call 0x40041e9	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x40041e9	      0xe966feffff	                           jmp 0x4004054	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
syn_compare_stub	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	8
0x4000040	           0xfb716	                   movzx edx, word [rsi]	      5402	syntax.c	FUNCTION_82
0x4000043	      0xb801000000	                              mov eax, 1	      5402	syntax.c	FUNCTION_82
0x4000048	          0x663917	                      cmp word [rdi], dx	      5402	syntax.c	FUNCTION_82
0x400004b	            0x7f08	                            jg 0x4000055	      5402	syntax.c	FUNCTION_82
0x400004d	           0xf9cc0	                                 setl al	      5402	syntax.c	FUNCTION_82
0x4000050	           0xfb6c0	                           movzx eax, al	      5402	syntax.c	FUNCTION_82
0x4000053	            0xf7d8	                                 neg eax	      5402	syntax.c	FUNCTION_82
0x4000055	            0xf3c3	                                     ret	      5403	syntax.c	FUNCTION_82
get_syn_options	SWITCH,0:WHILE,0:DO,0:IF,25:ELSE,7:FOR,4:functions,0:CALL,28	273
0x4006ed0	            0x4157	                                push r15	      4608	syntax.c	FUNCTION_76
0x4006ed2	            0x4156	                                push r14	      4608	syntax.c	FUNCTION_76
0x4006ed4	            0x4155	                                push r13	      4608	syntax.c	FUNCTION_76
0x4006ed6	            0x4154	                                push r12	      4608	syntax.c	FUNCTION_76
0x4006ed8	              0x55	                                push rbp	      4608	syntax.c	FUNCTION_76
0x4006ed9	              0x53	                                push rbx	      4608	syntax.c	FUNCTION_76
0x4006eda	        0x4883ec38	                           sub rsp, 0x38	      4608	syntax.c	FUNCTION_76
0x4006ede	          0x4885ff	                           test rdi, rdi	      4642	syntax.c	FUNCTION_76	IF_1
0x4006ee1	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      4608	syntax.c	FUNCTION_76
0x4006ee6	     0xf84b4020000	                            je 0x40071a0	      4642	syntax.c	FUNCTION_76	IF_1
0x4006eec	    0x488b05000000	            mov rax, qword [0x04006ef3] 	      4646	syntax.c	FUNCTION_76	IF_2
0x4006ef3	          0x4889fd	                            mov rbp, rdi	      4646	syntax.c	FUNCTION_76	IF_2
0x4006ef6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4646	syntax.c	FUNCTION_76	IF_2
0x4006efa	    0x8bb808030000	           mov edi, dword [rax + 0x308] 	      4646	syntax.c	FUNCTION_76	IF_2
0x4006f00	            0x85ff	                           test edi, edi	      4646	syntax.c	FUNCTION_76	IF_2
0x4006f02	            0x7406	                            je 0x4006f0a	      4646	syntax.c	FUNCTION_76	IF_2
0x4006f04	    0x810e00000200	                 or dword [rsi], 0x20000	      4647	syntax.c	FUNCTION_76	IF_2
0x4006f0a	        0x488d4628	                   lea rax, [rsi + 0x28]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006f0e	        0x894c240c	              mov dword [rsp + 0xc], ecx	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006f12	          0x4989d4	                            mov r12, rdx	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006f15	          0x4889f3	                            mov rbx, rsi	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006f18	      0x4889442410	             mov qword [rsp + 0x10], rax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x4006f1d	        0x488d4620	                   lea rax, [rsi + 0x20]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4006f21	      0x4889442418	             mov qword [rsp + 0x18], rax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4006f26	        0x488d4618	                   lea rax, [rsi + 0x18]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4006f2a	      0x4889442420	             mov qword [rsp + 0x20], rax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4006f2f	         0xfb67500	                   movzx esi, byte [rbp]	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006f33	      0xbf00000000	                              mov edi, 0	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006f38	      0xe800000000	                          call 0x4006f3d	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006f3d	          0x4885c0	                           test rax, rax	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006f40	     0xf84c9010000	                            je 0x400710f	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006f46	    0x41b900000000	                              mov r9d, 0	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006f4c	    0x41bd00000000	                             mov r13d, 0	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006f52	    0x41bf12000000	                          mov r15d, 0x12	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x4006f58	        0x410fbe01	                    movsx eax, byte [r9]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f5c	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f5e	            0x746a	                            je 0x4006fca	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f60	            0x31d2	                            xor edx, edx	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f62	            0x31ff	                            xor edi, edi	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f64	         0xf1f4000	                         nop dword [rax]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f68	       0xfb64c1500	             movzx ecx, byte [rbp + rdx]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006f6d	            0x39c1	                            cmp ecx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006f6f	            0x740a	                            je 0x4006f7b	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006f71	    0x410fbe445101	       movsx eax, byte [r9 + rdx*2 + 1] 	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006f77	            0x39c1	                            cmp ecx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006f79	            0x7531	                           jne 0x4006fac	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006f7b	        0x4883c201	                              add rdx, 1	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x4006f7f	          0x83c701	                              add edi, 1	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f82	      0x410fbe0451	            movsx eax, byte [r9 + rdx*2]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f87	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f89	            0x75dd	                           jne 0x4006f68	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f8b	          0x4c63f7	                         movsxd r14, edi	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006f8e	    0x420fb6443500	             movzx eax, byte [rbp + r14]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006f94	            0x3c20	                            cmp al, 0x20	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006f96	            0x743f	                            je 0x4006fd7	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006f98	            0x3c09	                               cmp al, 9	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006f9a	            0x743b	                            je 0x4006fd7	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006f9c	        0x418b7518	            mov esi, dword [r13 + 0x18] 	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006fa0	            0x85f6	                           test esi, esi	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006fa2	     0xf8e44010000	                           jle 0x40070ec	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006fa8	            0x3c3d	                            cmp al, 0x3d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4006faa	            0x742b	                            je 0x4006fd7	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x4006fac	        0x4183ef01	                             sub r15d, 1	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4006fb0	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4006fb4	     0xf8455010000	                            je 0x400710f	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4006fba	        0x4d8b4d00	                     mov r9, qword [r13]	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4006fbe	        0x4983ed10	                           sub r13, 0x10	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4006fc2	        0x410fbe01	                    movsx eax, byte [r9]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006fc6	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006fc8	            0x7596	                           jne 0x4006f60	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006fca	          0x4531f6	                          xor r14d, r14d	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x4006fcd	    0x420fb6443500	             movzx eax, byte [rbp + r14]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006fd3	            0x3c20	                            cmp al, 0x20	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006fd5	            0x75c1	                           jne 0x4006f98	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x4006fd7	          0x8b4b04	                mov ecx, dword [rbx + 4]	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006fda	          0x4d63c7	                         movsxd r8, r15d	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006fdd	            0x85c9	                           test ecx, ecx	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006fdf	            0x742a	                            je 0x400700b	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006fe1	          0x4c89c0	                             mov rax, r8	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006fe4	        0x48c1e004	                              shl rax, 4	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006fe8	    0x8b8000000000	                    mov eax, dword [rax]	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006fee	    0x8d8800f0ffff	                 lea ecx, [rax - 0x1000]	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006ff4	    0x81e1ffefffff	                     and ecx, 0xffffefff	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4006ffa	     0xf84a1020000	                            je 0x40072a1	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4007000	      0x3d00400000	                         cmp eax, 0x4000	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x4007005	     0xf8496020000	                            je 0x40072a1	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400700b	          0x4c89c0	                             mov rax, r8	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x400700e	        0x48c1e004	                              shl rax, 4	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x4007012	    0x8b8000000000	                    mov eax, dword [rax]	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x4007018	          0x83f801	                              cmp eax, 1	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x400701b	     0xf8400010000	                            je 0x4007121	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x4007021	          0x83f802	                              cmp eax, 2	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x4007024	     0xf845a010000	                            je 0x4007184	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400702a	          0x83f803	                              cmp eax, 3	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x400702d	     0xf847d010000	                            je 0x40071b0	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x4007033	          0x83f80b	                            cmp eax, 0xb	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x4007036	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400703b	            0x750a	                           jne 0x4007047	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400703d	        0x8078053d	                cmp byte [rax + 5], 0x3d	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x4007041	     0xf84f5010000	                            je 0x400723c	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x4007047	        0x49c1e004	                               shl r8, 4	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x400704b	        0x4a8d3c30	                    lea rdi, [rax + r14]	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x400704f	    0x458bb8000000	                    mov r15d, dword [r8]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4007056	          0x44093b	                    or dword [rbx], r15d	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x4007059	      0xe800000000	                          call 0x400705e	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x400705e	          0x4889c5	                            mov rbp, rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4007061	      0x4889442428	             mov qword [rsp + 0x28], rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x4007066	        0x418d47f0	                   lea eax, [r15 - 0x10]	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x400706a	          0x83e0ef	                     and eax, 0xffffffef	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x400706d	     0xf85de000000	                           jne 0x4007151	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x4007073	      0x48837b0800	                  cmp qword [rbx + 8], 0	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4007078	     0xf8491020000	                            je 0x400730f	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x400707e	          0x4889ef	                            mov rdi, rbp	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x4007081	      0xe800000000	                          call 0x4007086	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x4007086	          0x4839c5	                            cmp rbp, rax	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4007089	      0x4889442428	             mov qword [rsp + 0x28], rax	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x400708e	     0xf840c010000	                            je 0x40071a0	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x4007094	          0x4829e8	                            sub rax, rbp	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x4007097	          0x4889ef	                            mov rdi, rbp	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x400709a	          0x4889c6	                            mov rsi, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x400709d	      0xe800000000	                          call 0x40070a2	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x40070a2	          0x4885c0	                           test rax, rax	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x40070a5	          0x4889c5	                            mov rbp, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x40070a8	     0xf84f2000000	                            je 0x40071a0	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x40070ae	      0xbf00000000	                              mov edi, 0	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40070b3	      0xb905000000	                              mov ecx, 5	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40070b8	          0x4889c6	                            mov rsi, rax	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40070bb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40070bd	     0xf851d010000	                           jne 0x40071e0	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x40070c3	        0x488b4308	                mov rax, qword [rbx + 8]	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x40070c7	    0xc700feffffff	            mov dword [rax], 0xfffffffe 	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x40070cd	          0x4889ef	                            mov rdi, rbp	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_25
0x40070d0	      0xe800000000	                          call 0x40070d5	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_25
0x40070d5	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x40070da	      0xe800000000	                          call 0x40070df	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x40070df	          0x4889c5	                            mov rbp, rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x40070e2	      0x4889442428	             mov qword [rsp + 0x28], rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x40070e7	      0xe943feffff	                           jmp 0x4006f2f	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x40070ec	           0xfb6f8	                           movzx edi, al	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x40070ef	      0xe800000000	                          call 0x40070f4	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x40070f4	            0x85c0	                           test eax, eax	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x40070f6	     0xf85dbfeffff	                           jne 0x4006fd7	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x40070fc	        0x4183ef01	                             sub r15d, 1	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4007100	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4007105	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x4007109	     0xf85abfeffff	                           jne 0x4006fba	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400710f	        0x4883c438	                           add rsp, 0x38	      4785	syntax.c	FUNCTION_76
0x4007113	          0x4889e8	                            mov rax, rbp	      4785	syntax.c	FUNCTION_76
0x4007116	              0x5b	                                 pop rbx	      4785	syntax.c	FUNCTION_76
0x4007117	              0x5d	                                 pop rbp	      4785	syntax.c	FUNCTION_76
0x4007118	            0x415c	                                 pop r12	      4785	syntax.c	FUNCTION_76
0x400711a	            0x415d	                                 pop r13	      4785	syntax.c	FUNCTION_76
0x400711c	            0x415e	                                 pop r14	      4785	syntax.c	FUNCTION_76
0x400711e	            0x415f	                                 pop r15	      4785	syntax.c	FUNCTION_76
0x4007120	              0xc3	                                     ret	      4785	syntax.c	FUNCTION_76
0x4007121	        0x807b1000	                cmp byte [rbx + 0x10], 0	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x4007125	     0xf84d8010000	                            je 0x4007303	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x400712b	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400712f	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4007134	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4007139	      0xbe08000000	                              mov esi, 8	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400713e	      0xe80df8ffff	                    call sym.get_id_list	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4007143	            0x85c0	                           test eax, eax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4007145	            0x7459	                            je 0x40071a0	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4007147	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400714c	      0xe9defdffff	                           jmp 0x4006f2f	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x4007151	    0x4181ff002000	                        cmp r15d, 0x2000	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4007158	     0xf85d1fdffff	                           jne 0x4006f2f	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400715e	    0x488b3d000000	            mov rdi, qword [0x04007165] 	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x4007165	      0xe800000000	                          call 0x400716a	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x400716a	            0x85c0	                           test eax, eax	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x400716c	            0x74d9	                            je 0x4007147	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x400716e	    0x488b3d000000	            mov rdi, qword [0x04007175] 	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4007175	      0xe800000000	                          call 0x400717a	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400717a	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400717f	      0xe9abfdffff	                           jmp 0x4006f2f	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x4007184	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4007188	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400718d	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4007192	      0xbe0b000000	                            mov esi, 0xb	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x4007197	      0xe8b4f7ffff	                    call sym.get_id_list	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400719c	            0x85c0	                           test eax, eax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400719e	            0x75a7	                           jne 0x4007147	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x40071a0	            0x31ed	                            xor ebp, ebp	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x40071a2	      0xe968ffffff	                           jmp 0x400710f	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x40071a7	    0x660f1f840000	                    nop word [rax + rax]	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x40071b0	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40071b4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40071b9	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40071be	      0xbe09000000	                              mov esi, 9	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40071c3	      0xe888f7ffff	                    call sym.get_id_list	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40071c8	            0x85c0	                           test eax, eax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40071ca	     0xf8577ffffff	                           jne 0x4007147	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x40071d0	            0x31ed	                            xor ebp, ebp	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x40071d2	      0xe938ffffff	                           jmp 0x400710f	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x40071d7	    0x660f1f840000	                    nop word [rax + rax]	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x40071e0	          0x4889c7	                            mov rdi, rax	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x40071e3	      0xe800000000	                          call 0x40071e8	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x40071e8	    0x488b15000000	            mov rdx, qword [0x040071ef] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x40071ef	        0x4c8b4210	              mov r8, qword [rdx + 0x10]	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x40071f3	    0x496388600200	         movsxd rcx, dword [r8 + 0x260] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x40071fa	          0x4889ca	                            mov rdx, rcx	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x40071fd	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4007201	        0x48c1e105	                              shl rcx, 5	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4007205	    0x4881e9a00000	                           sub rcx, 0xa0	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400720c	            0xeb07	                           jmp 0x4007215	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400720e	    0x4881e9a00000	                           sub rcx, 0xa0	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4007215	          0x83ea01	                              sub edx, 1	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x4007218	            0x785c	                            js 0x4007276	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400721a	          0x4889ce	                            mov rsi, rcx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400721d	    0x4903b0700200	             add rsi, qword [r8 + 0x270]	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4007224	         0xfbf7e54	           movsx edi, word [rsi + 0x54] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4007228	            0x39f8	                            cmp eax, edi	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400722a	            0x75e2	                           jne 0x400720e	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400722c	          0x803e02	                       cmp byte [rsi], 2	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400722f	            0x75dd	                           jne 0x400720e	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4007231	        0x488b4308	                mov rax, qword [rbx + 8]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4007235	            0x8910	                    mov dword [rax], edx	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x4007237	      0xe991feffff	                           jmp 0x40070cd	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400723c	    0x8b1500000000	            mov edx, dword [0x04007242] 	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x4007242	            0x85d2	                           test edx, edx	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x4007244	            0x7565	                           jne 0x40072ab	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x4007246	         0xfb67806	               movzx edi, byte [rax + 6]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x400724a	        0x41893c24	                    mov dword [r12], edi	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x400724e	      0xe800000000	                          call 0x4007253	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x4007253	            0x85c0	                           test eax, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x4007255	     0xf8488000000	                            je 0x40072e3	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x400725b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4007260	        0x488d7807	                      lea rdi, [rax + 7]	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4007264	      0xe800000000	                          call 0x4007269	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4007269	          0x4889c5	                            mov rbp, rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x400726c	      0x4889442428	             mov qword [rsp + 0x28], rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4007271	      0xe9b9fcffff	                           jmp 0x4006f2f	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x4007276	      0xba05000000	                              mov edx, 5	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400727b	      0xbe00000000	                              mov esi, 0	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4007280	            0x31ff	                            xor edi, edi	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4007282	      0xe800000000	                          call 0x4007287	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4007287	          0x4889ee	                            mov rsi, rbp	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400728a	          0x4889c7	                            mov rdi, rax	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400728d	      0xe800000000	                          call 0x4007292	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x4007292	          0x4889ef	                            mov rdi, rbp	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x4007295	            0x31ed	                            xor ebp, ebp	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x4007297	      0xe800000000	                          call 0x400729c	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x400729c	      0xe96efeffff	                           jmp 0x400710f	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x40072a1	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x40072a6	      0xe964feffff	                           jmp 0x400710f	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x40072ab	        0x488d7806	                      lea rdi, [rax + 6]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40072af	    0xff1500000000	                 call qword [0x040072b5]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40072b5	        0x41890424	                    mov dword [r12], eax	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x40072b9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40072be	        0x488d7806	                      lea rdi, [rax + 6]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40072c2	    0xff1500000000	                 call qword [0x040072c8]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40072c8	        0x418b3c24	                    mov edi, dword [r12]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40072cc	          0x83e801	                              sub eax, 1	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40072cf	            0x4898	                                    cdqe	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40072d1	      0x4801442428	            add qword [rsp + 0x28], rax 	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x40072d6	      0xe800000000	                          call 0x40072db	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x40072db	            0x85c0	                           test eax, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x40072dd	     0xf8578ffffff	                           jne 0x400725b	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x40072e3	      0xba05000000	                              mov edx, 5	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x40072e8	      0xbe00000000	                              mov esi, 0	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x40072ed	            0x31ff	                            xor edi, edi	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x40072ef	            0x31ed	                            xor ebp, ebp	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x40072f1	      0xe800000000	                          call 0x40072f6	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x40072f6	          0x4889c7	                            mov rdi, rax	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x40072f9	      0xe800000000	                          call 0x40072fe	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x40072fe	      0xe90cfeffff	                           jmp 0x400710f	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x4007303	      0xba05000000	                              mov edx, 5	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x4007308	      0xbe00000000	                              mov esi, 0	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x400730d	            0xebde	                           jmp 0x40072ed	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x400730f	      0xba05000000	                              mov edx, 5	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4007314	      0xbe00000000	                              mov esi, 0	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x4007319	            0xebd2	                           jmp 0x40072ed	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
highlight_clear	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,8	73
0x4001fd0	          0x4863ff	                         movsxd rdi, edi	      8360	syntax.c	FUNCTION_120
0x4001fd3	              0x53	                                push rbx	      8359	syntax.c	FUNCTION_120
0x4001fd4	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      8360	syntax.c	FUNCTION_120
0x4001fd8	        0x488d1c47	                  lea rbx, [rdi + rax*2]	      8360	syntax.c	FUNCTION_120
0x4001fdc	        0x48c1e303	                              shl rbx, 3	      8360	syntax.c	FUNCTION_120
0x4001fe0	          0x4889d8	                            mov rax, rbx	      8360	syntax.c	FUNCTION_120
0x4001fe3	    0x480305000000	             add rax, qword [0x04001fea]	      8360	syntax.c	FUNCTION_120
0x4001fea	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      8363	syntax.c	FUNCTION_120	CALL_1
0x4001fee	    0xc74010010000	               mov dword [rax + 0x10], 1	      8360	syntax.c	FUNCTION_120
0x4001ff5	    0xc74014000000	               mov dword [rax + 0x14], 0	      8362	syntax.c	FUNCTION_120
0x4001ffc	          0x4885ff	                           test rdi, rdi	      8363	syntax.c	FUNCTION_120	CALL_1
0x4001fff	            0x7417	                            je 0x4002018	      8363	syntax.c	FUNCTION_120	CALL_1
0x4002001	      0xe800000000	                          call 0x4002006	      8363	syntax.c	FUNCTION_120	CALL_1
0x4002006	          0x4889d8	                            mov rax, rbx	      8363	syntax.c	FUNCTION_120	CALL_1
0x4002009	    0x480305000000	             add rax, qword [0x04002010]	      8363	syntax.c	FUNCTION_120	CALL_1
0x4002010	    0x48c740180000	               mov qword [rax + 0x18], 0	      8363	syntax.c	FUNCTION_120	CALL_1
0x4002018	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      8364	syntax.c	FUNCTION_120	CALL_2
0x400201c	          0x4885ff	                           test rdi, rdi	      8364	syntax.c	FUNCTION_120	CALL_2
0x400201f	            0x7417	                            je 0x4002038	      8364	syntax.c	FUNCTION_120	CALL_2
0x4002021	      0xe800000000	                          call 0x4002026	      8364	syntax.c	FUNCTION_120	CALL_2
0x4002026	          0x4889d8	                            mov rax, rbx	      8364	syntax.c	FUNCTION_120	CALL_2
0x4002029	    0x480305000000	             add rax, qword [0x04002030]	      8364	syntax.c	FUNCTION_120	CALL_2
0x4002030	    0x48c740200000	               mov qword [rax + 0x20], 0	      8364	syntax.c	FUNCTION_120	CALL_2
0x4002038	        0x488b7870	            mov rdi, qword [rax + 0x70] 	      8373	syntax.c	FUNCTION_120	CALL_3
0x400203c	    0xc74028000000	               mov dword [rax + 0x28], 0	      8365	syntax.c	FUNCTION_120
0x4002043	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      8366	syntax.c	FUNCTION_120
0x400204a	    0xc74030000000	               mov dword [rax + 0x30], 0	      8367	syntax.c	FUNCTION_120
0x4002051	    0xc74034000000	               mov dword [rax + 0x34], 0	      8368	syntax.c	FUNCTION_120
0x4002058	    0xc74038000000	               mov dword [rax + 0x38], 0	      8369	syntax.c	FUNCTION_120
0x400205f	          0x4885ff	                           test rdi, rdi	      8373	syntax.c	FUNCTION_120	CALL_3
0x4002062	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      8370	syntax.c	FUNCTION_120
0x4002069	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      8372	syntax.c	FUNCTION_120
0x4002070	            0x7417	                            je 0x4002089	      8373	syntax.c	FUNCTION_120	CALL_3
0x4002072	      0xe800000000	                          call 0x4002077	      8373	syntax.c	FUNCTION_120	CALL_3
0x4002077	          0x4889d8	                            mov rax, rbx	      8373	syntax.c	FUNCTION_120	CALL_3
0x400207a	    0x480305000000	             add rax, qword [0x04002081]	      8373	syntax.c	FUNCTION_120	CALL_3
0x4002081	    0x48c740700000	               mov qword [rax + 0x70], 0	      8373	syntax.c	FUNCTION_120	CALL_3
0x4002089	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      8374	syntax.c	FUNCTION_120	CALL_4
0x400208d	          0x4885ff	                           test rdi, rdi	      8374	syntax.c	FUNCTION_120	CALL_4
0x4002090	            0x7417	                            je 0x40020a9	      8374	syntax.c	FUNCTION_120	CALL_4
0x4002092	      0xe800000000	                          call 0x4002097	      8374	syntax.c	FUNCTION_120	CALL_4
0x4002097	          0x4889d8	                            mov rax, rbx	      8374	syntax.c	FUNCTION_120	CALL_4
0x400209a	    0x480305000000	             add rax, qword [0x040020a1]	      8374	syntax.c	FUNCTION_120	CALL_4
0x40020a1	    0x48c740780000	               mov qword [rax + 0x78], 0	      8374	syntax.c	FUNCTION_120	CALL_4
0x40020a9	    0x488bb8800000	            mov rdi, qword [rax + 0x80] 	      8375	syntax.c	FUNCTION_120	CALL_5
0x40020b0	          0x4885ff	                           test rdi, rdi	      8375	syntax.c	FUNCTION_120	CALL_5
0x40020b3	            0x741a	                            je 0x40020cf	      8375	syntax.c	FUNCTION_120	CALL_5
0x40020b5	      0xe800000000	                          call 0x40020ba	      8375	syntax.c	FUNCTION_120	CALL_5
0x40020ba	          0x4889d8	                            mov rax, rbx	      8375	syntax.c	FUNCTION_120	CALL_5
0x40020bd	    0x480305000000	             add rax, qword [0x040020c4]	      8375	syntax.c	FUNCTION_120	CALL_5
0x40020c4	    0x48c780800000	               mov qword [rax + 0x80], 0	      8375	syntax.c	FUNCTION_120	CALL_5
0x40020cf	        0x488b7858	            mov rdi, qword [rax + 0x58] 	      8383	syntax.c	FUNCTION_120	CALL_6
0x40020d3	    0x48c7404099d4	mov qword [rax + 0x40], 0xffffffffffffd499	      8378	syntax.c	FUNCTION_120
0x40020db	    0x48c7404899d4	mov qword [rax + 0x48], 0xffffffffffffd499	      8379	syntax.c	FUNCTION_120
0x40020e3	    0x48c7405099d4	mov qword [rax + 0x50], 0xffffffffffffd499	      8382	syntax.c	FUNCTION_120
0x40020eb	      0xe800000000	                          call 0x40020f0	      8383	syntax.c	FUNCTION_120	CALL_6
0x40020f0	          0x4889d8	                            mov rax, rbx	      8384	syntax.c	FUNCTION_120
0x40020f3	    0x480305000000	             add rax, qword [0x040020fa]	      8384	syntax.c	FUNCTION_120
0x40020fa	        0x488b7860	            mov rdi, qword [rax + 0x60] 	      8389	syntax.c	FUNCTION_120	CALL_8
0x40020fe	    0x48c740580000	               mov qword [rax + 0x58], 0	      8384	syntax.c	FUNCTION_120
0x4002106	          0x4885ff	                           test rdi, rdi	      8389	syntax.c	FUNCTION_120	CALL_8
0x4002109	            0x7417	                            je 0x4002122	      8389	syntax.c	FUNCTION_120	CALL_8
0x400210b	      0xe800000000	                          call 0x4002110	      8389	syntax.c	FUNCTION_120	CALL_8
0x4002110	          0x4889d8	                            mov rax, rbx	      8389	syntax.c	FUNCTION_120	CALL_8
0x4002113	    0x480305000000	             add rax, qword [0x0400211a]	      8389	syntax.c	FUNCTION_120	CALL_8
0x400211a	    0x48c740600000	               mov qword [rax + 0x60], 0	      8389	syntax.c	FUNCTION_120	CALL_8
0x4002122	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	      8395	syntax.c	FUNCTION_120	IF_1
0x4002128	    0xc74068000000	               mov dword [rax + 0x68], 0	      8390	syntax.c	FUNCTION_120
0x400212f	            0x85d2	                           test edx, edx	      8395	syntax.c	FUNCTION_120	IF_1
0x4002131	            0x750a	                           jne 0x400213d	      8395	syntax.c	FUNCTION_120	IF_1
0x4002133	    0xc78090000000	               mov dword [rax + 0x90], 0	      8396	syntax.c	FUNCTION_120	IF_1
0x400213d	              0x5b	                                 pop rbx	      8398	syntax.c	FUNCTION_120
0x400213e	              0xc3	                                     ret	      8398	syntax.c	FUNCTION_120
syn_compare_syntime	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	1
0x4000600	      0xe900000000	                           jmp 0x4000605	      6757	syntax.c	FUNCTION_111	CALL_1
ex_syntax	SWITCH,0:WHILE,0:DO,0:IF,5:ELSE,0:FOR,2:functions,0:CALL,7	79
0x4003f20	            0x4156	                                push r14	      6360	syntax.c	FUNCTION_95
0x4003f22	            0x4155	                                push r13	      6360	syntax.c	FUNCTION_95
0x4003f24	            0x4154	                                push r12	      6360	syntax.c	FUNCTION_95
0x4003f26	          0x4989fc	                            mov r12, rdi	      6360	syntax.c	FUNCTION_95
0x4003f29	              0x55	                                push rbp	      6360	syntax.c	FUNCTION_95
0x4003f2a	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      6366	syntax.c	FUNCTION_95
0x4003f2f	              0x53	                                push rbx	      6360	syntax.c	FUNCTION_95
0x4003f30	          0x488b3f	                    mov rdi, qword [rdi]	      6361	syntax.c	FUNCTION_95
0x4003f33	    0x488905000000	            mov qword [0x04003f3a], rax 	      6366	syntax.c	FUNCTION_95
0x4003f3a	           0xfb607	                   movzx eax, byte [rdi]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f3d	          0x4889fb	                            mov rbx, rdi	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f40	          0x83e0df	                     and eax, 0xffffffdf	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f43	          0x83e841	                           sub eax, 0x41	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f46	            0x3c19	                            cmp al, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f48	     0xf87d0000000	                            ja 0x400401e	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f4e	            0x6690	                                     nop	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f50	        0x4883c301	                              add rbx, 1	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f54	           0xfb603	                   movzx eax, byte [rbx]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f57	          0x83e0df	                     and eax, 0xffffffdf	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f5a	          0x83e841	                           sub eax, 0x41	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f5d	            0x3c19	                            cmp al, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f5f	            0x76ef	                           jbe 0x4003f50	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f61	            0x89de	                            mov esi, ebx	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f63	            0x29fe	                            sub esi, edi	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f65	      0xe800000000	                          call 0x4003f6a	      6371	syntax.c	FUNCTION_95	CALL_2
0x4003f6a	          0x4885c0	                           test rax, rax	      6372	syntax.c	FUNCTION_95	IF_1
0x4003f6d	          0x4989c6	                            mov r14, rax	      6371	syntax.c	FUNCTION_95	CALL_2
0x4003f70	            0x7472	                            je 0x4003fe4	      6372	syntax.c	FUNCTION_95	IF_1
0x4003f72	      0x418b542430	            mov edx, dword [r12 + 0x30] 	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x4003f77	            0x85d2	                           test edx, edx	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x4003f79	            0x7575	                           jne 0x4003ff0	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x4003f7b	      0xbd00000000	                              mov ebp, 0	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x4003f80	      0xbe00000000	                              mov esi, 0	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f85	          0x4531ed	                          xor r13d, r13d	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f88	            0xeb17	                           jmp 0x4003fa1	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f8a	    0x660f1f440000	                    nop word [rax + rax]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f90	        0x4883c510	                           add rbp, 0x10	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4003f94	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x4003f98	        0x4183c501	                             add r13d, 1	      6376	syntax.c	FUNCTION_95	IF_1	FOR_2
0x4003f9c	          0x4885f6	                           test rsi, rsi	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x4003f9f	            0x745f	                            je 0x4004000	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x4003fa1	          0x4c89f7	                            mov rdi, r14	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x4003fa4	      0xe800000000	                          call 0x4003fa9	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x4003fa9	            0x85c0	                           test eax, eax	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x4003fab	            0x75e3	                           jne 0x4003f90	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x4003fad	          0x4d63ed	                        movsxd r13, r13d	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003fb0	          0x4889df	                            mov rdi, rbx	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x4003fb3	        0x49c1e504	                              shl r13, 4	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003fb7	      0xe800000000	                          call 0x4003fbc	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x4003fbc	            0x31f6	                            xor esi, esi	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003fbe	        0x49890424	                    mov qword [r12], rax	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x4003fc2	          0x4c89e7	                            mov rdi, r12	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003fc5	    0x41ff95000000	                        call qword [r13]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x4003fcc	          0x4c89f7	                            mov rdi, r14	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x4003fcf	      0xe800000000	                          call 0x4003fd4	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x4003fd4	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x4003fd9	            0x85c0	                           test eax, eax	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x4003fdb	            0x7407	                            je 0x4003fe4	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x4003fdd	    0x832d00000000	               sub dword [0x04003fe4], 1	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0x4003fe4	              0x5b	                                 pop rbx	      6394	syntax.c	FUNCTION_95
0x4003fe5	              0x5d	                                 pop rbp	      6394	syntax.c	FUNCTION_95
0x4003fe6	            0x415c	                                 pop r12	      6394	syntax.c	FUNCTION_95
0x4003fe8	            0x415d	                                 pop r13	      6394	syntax.c	FUNCTION_95
0x4003fea	            0x415e	                                 pop r14	      6394	syntax.c	FUNCTION_95
0x4003fec	              0xc3	                                     ret	      6394	syntax.c	FUNCTION_95
0x4003fed	           0xf1f00	                         nop dword [rax]	      6394	syntax.c	FUNCTION_95
0x4003ff0	    0x830500000000	               add dword [0x04003ff7], 1	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x4003ff7	            0xeb82	                           jmp 0x4003f7b	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x4003ff9	     0xf1f80000000	                         nop dword [rax]	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x4004000	            0x31ff	                            xor edi, edi	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x4004002	      0xba05000000	                              mov edx, 5	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x4004007	      0xbe00000000	                              mov esi, 0	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400400c	      0xe800000000	                          call 0x4004011	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x4004011	          0x4c89f6	                            mov rsi, r14	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x4004014	          0x4889c7	                            mov rdi, rax	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x4004017	      0xe800000000	                          call 0x400401c	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400401c	            0xebae	                           jmp 0x4003fcc	      6381	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400401e	            0x31f6	                            xor esi, esi	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x4004020	      0xe940ffffff	                           jmp 0x4003f65	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
syn_cmd_conceal	SWITCH,0:WHILE,0:DO,0:IF,5:ELSE,4:FOR,0:functions,0:CALL,10	76
0x4000c80	              0x55	                                push rbp	      3461	syntax.c	FUNCTION_45
0x4000c81	              0x53	                                push rbx	      3461	syntax.c	FUNCTION_45
0x4000c82	          0x4889fb	                            mov rbx, rdi	      3461	syntax.c	FUNCTION_45
0x4000c85	        0x4883ec08	                              sub rsp, 8	      3461	syntax.c	FUNCTION_45
0x4000c89	          0x488b2f	                    mov rbp, qword [rdi]	      3463	syntax.c	FUNCTION_45
0x4000c8c	          0x4889ef	                            mov rdi, rbp	      3466	syntax.c	FUNCTION_45	CALL_1
0x4000c8f	      0xe800000000	                          call 0x4000c94	      3466	syntax.c	FUNCTION_45	CALL_1
0x4000c94	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      3467	syntax.c	FUNCTION_45	IF_1
0x4000c97	        0x48894308	                mov qword [rbx + 8], rax	      3466	syntax.c	FUNCTION_45	CALL_1
0x4000c9b	            0x85d2	                           test edx, edx	      3467	syntax.c	FUNCTION_45	IF_1
0x4000c9d	            0x7411	                            je 0x4000cb0	      3467	syntax.c	FUNCTION_45	IF_1
0x4000c9f	        0x4883c408	                              add rsp, 8	      3485	syntax.c	FUNCTION_45
0x4000ca3	              0x5b	                                 pop rbx	      3485	syntax.c	FUNCTION_45
0x4000ca4	              0x5d	                                 pop rbp	      3485	syntax.c	FUNCTION_45
0x4000ca5	              0xc3	                                     ret	      3485	syntax.c	FUNCTION_45
0x4000ca6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3485	syntax.c	FUNCTION_45
0x4000cb0	          0x4889ef	                            mov rdi, rbp	      3470	syntax.c	FUNCTION_45	CALL_2
0x4000cb3	      0xe800000000	                          call 0x4000cb8	      3470	syntax.c	FUNCTION_45	CALL_2
0x4000cb8	        0x807d0000	                       cmp byte [rbp], 0	      3471	syntax.c	FUNCTION_45	IF_2
0x4000cbc	          0x4889c3	                            mov rbx, rax	      3470	syntax.c	FUNCTION_45	CALL_2
0x4000cbf	            0x746f	                            je 0x4000d30	      3471	syntax.c	FUNCTION_45	IF_2
0x4000cc1	      0xba02000000	                              mov edx, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000cc6	      0xbe00000000	                              mov esi, 0	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000ccb	          0x4889ef	                            mov rdi, rbp	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000cce	      0xe800000000	                          call 0x4000cd3	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000cd3	            0x85c0	                           test eax, eax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000cd5	            0x7510	                           jne 0x4000ce7	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000cd7	          0x4889d8	                            mov rax, rbx	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000cda	          0x4829e8	                            sub rax, rbp	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000cdd	        0x4883f802	                              cmp rax, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000ce1	     0xf84a9000000	                            je 0x4000d90	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000ce7	      0xba03000000	                              mov edx, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000cec	      0xbe00000000	                              mov esi, 0	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000cf1	          0x4889ef	                            mov rdi, rbp	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000cf4	      0xe800000000	                          call 0x4000cf9	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000cf9	            0x85c0	                           test eax, eax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000cfb	            0x7509	                           jne 0x4000d06	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000cfd	          0x4829eb	                            sub rbx, rbp	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000d00	        0x4883fb03	                              cmp rbx, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000d04	            0x746a	                            je 0x4000d70	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x4000d06	      0xbe00000000	                              mov esi, 0	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000d0b	            0x31ff	                            xor edi, edi	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000d0d	      0xba05000000	                              mov edx, 5	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000d12	      0xe800000000	                          call 0x4000d17	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000d17	        0x4883c408	                              add rsp, 8	      3485	syntax.c	FUNCTION_45
0x4000d1b	          0x4889ee	                            mov rsi, rbp	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000d1e	          0x4889c7	                            mov rdi, rax	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000d21	              0x5b	                                 pop rbx	      3485	syntax.c	FUNCTION_45
0x4000d22	              0x5d	                                 pop rbp	      3485	syntax.c	FUNCTION_45
0x4000d23	      0xe900000000	                           jmp 0x4000d28	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000d28	     0xf1f84000000	                   nop dword [rax + rax]	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000d30	    0x488b05000000	            mov rax, qword [0x04000d37] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4000d37	      0xba05000000	                              mov edx, 5	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4000d3c	      0xbe00000000	                              mov esi, 0	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4000d41	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4000d45	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4000d4b	            0x85c0	                           test eax, eax	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4000d4d	            0x7505	                           jne 0x4000d54	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4000d4f	      0xbe00000000	                              mov esi, 0	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000d54	            0x31ff	                            xor edi, edi	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000d56	      0xe800000000	                          call 0x4000d5b	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000d5b	        0x4883c408	                              add rsp, 8	      3485	syntax.c	FUNCTION_45
0x4000d5f	          0x4889c7	                            mov rdi, rax	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000d62	              0x5b	                                 pop rbx	      3485	syntax.c	FUNCTION_45
0x4000d63	              0x5d	                                 pop rbp	      3485	syntax.c	FUNCTION_45
0x4000d64	      0xe900000000	                           jmp 0x4000d69	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000d69	     0xf1f80000000	                         nop dword [rax]	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000d70	    0x488b05000000	            mov rax, qword [0x04000d77] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4000d77	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4000d7b	    0xc78008030000	              mov dword [rax + 0x308], 0	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4000d85	      0xe915ffffff	                           jmp 0x4000c9f	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4000d8a	    0x660f1f440000	                    nop word [rax + rax]	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4000d90	    0x488b05000000	            mov rax, qword [0x04000d97] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4000d97	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4000d9b	    0xc78008030000	              mov dword [rax + 0x308], 1	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4000da5	      0xe9f5feffff	                           jmp 0x4000c9f	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
syn_cmd_region	SWITCH,0:WHILE,2:DO,0:IF,29:ELSE,9:FOR,4:functions,0:CALL,43	436
0x40075c0	            0x4157	                                push r15	      5131	syntax.c	FUNCTION_81
0x40075c2	            0x4156	                                push r14	      5131	syntax.c	FUNCTION_81
0x40075c4	          0x4989fe	                            mov r14, rdi	      5131	syntax.c	FUNCTION_81
0x40075c7	            0x4155	                                push r13	      5131	syntax.c	FUNCTION_81
0x40075c9	            0x4154	                                push r12	      5131	syntax.c	FUNCTION_81
0x40075cb	              0x55	                                push rbp	      5131	syntax.c	FUNCTION_81
0x40075cc	              0x53	                                push rbx	      5131	syntax.c	FUNCTION_81
0x40075cd	    0x4881ec880000	                           sub rsp, 0x88	      5131	syntax.c	FUNCTION_81
0x40075d4	    0x64488b042528	                mov rax, qword fs:[0x28]	      5131	syntax.c	FUNCTION_81
0x40075dd	      0x4889442478	             mov qword [rsp + 0x78], rax	      5131	syntax.c	FUNCTION_81
0x40075e2	            0x31c0	                            xor eax, eax	      5131	syntax.c	FUNCTION_81
0x40075e4	          0x488b07	                    mov rax, qword [rdi]	      5132	syntax.c	FUNCTION_81
0x40075e7	        0x8974241c	             mov dword [rsp + 0x1c], esi	      5131	syntax.c	FUNCTION_81
0x40075eb	      0x488d742428	                   lea rsi, [rsp + 0x28]	      5163	syntax.c	FUNCTION_81	CALL_1
0x40075f0	    0xc74424240000	               mov dword [rsp + 0x24], 0	      5160	syntax.c	FUNCTION_81
0x40075f8	          0x4889c7	                            mov rdi, rax	      5163	syntax.c	FUNCTION_81	CALL_1
0x40075fb	      0x4889442410	             mov qword [rsp + 0x10], rax	      5132	syntax.c	FUNCTION_81
0x4007600	      0xe85b93ffff	                 call sym.get_group_name	      5163	syntax.c	FUNCTION_81	CALL_1
0x4007605	          0x4989c5	                            mov r13, rax	      5163	syntax.c	FUNCTION_81	CALL_1
0x4007608	    0x488b05000000	            mov rax, qword [0x0400760f] 	      5728	syntax.c	FUNCTION_89
0x400760f	    0x48c744246000	               mov qword [rsp + 0x60], 0	      5165	syntax.c	FUNCTION_81
0x4007618	          0x4d85ed	                           test r13, r13	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400761b	    0x48c744246800	               mov qword [rsp + 0x68], 0	      5166	syntax.c	FUNCTION_81
0x4007624	    0x48c744247000	               mov qword [rsp + 0x70], 0	      5167	syntax.c	FUNCTION_81
0x400762d	    0xc74424300000	               mov dword [rsp + 0x30], 0	      5171	syntax.c	FUNCTION_81
0x4007635	    0xc74424340000	               mov dword [rsp + 0x34], 0	      5172	syntax.c	FUNCTION_81
0x400763d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5728	syntax.c	FUNCTION_89
0x4007641	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5173	syntax.c	FUNCTION_81
0x400764a	      0xc644244001	                mov byte [rsp + 0x40], 1	      5174	syntax.c	FUNCTION_81
0x400764f	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5175	syntax.c	FUNCTION_81
0x4007658	    0x48c744245000	               mov qword [rsp + 0x50], 0	      5176	syntax.c	FUNCTION_81
0x4007661	    0x48c744245800	               mov qword [rsp + 0x58], 0	      5177	syntax.c	FUNCTION_81
0x400766a	    0xc78068020000	          mov dword [rax + 0x268], 0xa0 	      5728	syntax.c	FUNCTION_89
0x4007674	    0xc7806c020000	            mov dword [rax + 0x26c], 0xa	      5729	syntax.c	FUNCTION_89
0x400767e	     0xf843f060000	                            je 0x4007cc3	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4007684	    0xc74424080000	                  mov dword [rsp + 8], 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400768c	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4007694	            0x31ed	                            xor ebp, ebp	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4007696	    0x48bb01020000	         movabs rbx, 0x2000000100000201 	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x40076a0	          0x4d89ef	                            mov r15, r13	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x40076a3	        0x4c893424	                    mov qword [rsp], r14	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x40076a7	    0x660f1f840000	                    nop word [rax + rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x40076b0	        0x410fb63f	                   movzx edi, byte [r15]	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x40076b4	      0xe800000000	                          call 0x40076b9	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x40076b9	            0x85c0	                           test eax, eax	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x40076bb	     0xf85f3030000	                           jne 0x4007ab4	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x40076c1	        0x488b0424	                    mov rax, qword [rsp]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x40076c5	      0x488d542424	                   lea rdx, [rsp + 0x24]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x40076ca	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x40076cf	          0x4c89ff	                            mov rdi, r15	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x40076d2	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x40076d5	      0xe8f6f7ffff	                call sym.get_syn_options	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x40076da	          0x4885c0	                           test rax, rax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x40076dd	          0x4989c7	                            mov r15, rax	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x40076e0	     0xf8468010000	                            je 0x400784e	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x40076e6	           0xfb638	                   movzx edi, byte [rax]	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x40076e9	      0xe800000000	                          call 0x40076ee	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x40076ee	            0x85c0	                           test eax, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x40076f0	          0x4189c4	                           mov r12d, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x40076f3	     0xf85bb030000	                           jne 0x4007ab4	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x40076f9	        0x410fb607	                   movzx eax, byte [r15]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x40076fd	          0x4d89fd	                            mov r13, r15	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007700	            0x3c3d	                            cmp al, 0x3d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007702	            0x770c	                            ja 0x4007710	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007704	        0x480fa3c3	                             bt rbx, rax	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007708	            0x721f	                            jb 0x4007729	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400770a	    0x660f1f440000	                    nop word [rax + rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007710	        0x4983c501	                              add r13, 1	      5192	syntax.c	FUNCTION_81	WHILE_1	WHILE_2
0x4007714	      0x410fb64500	                   movzx eax, byte [r13]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007719	            0x3c3d	                            cmp al, 0x3d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400771b	            0x77f3	                            ja 0x4007710	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400771d	        0x480fa3c3	                             bt rbx, rax	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007721	            0x73ed	                           jae 0x4007710	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007723	          0x4589ec	                          mov r12d, r13d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007726	          0x4529fc	                          sub r12d, r15d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x4007729	          0x4889ef	                            mov rdi, rbp	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x400772c	      0xe800000000	                          call 0x4007731	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x4007731	          0x4489e6	                           mov esi, r12d	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4007734	          0x4c89ff	                            mov rdi, r15	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4007737	      0xe800000000	                          call 0x400773c	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x400773c	          0x4885c0	                           test rax, rax	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x400773f	          0x4889c5	                            mov rbp, rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x4007742	     0xf8406010000	                            je 0x400784e	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x4007748	      0xbf00000000	                              mov edi, 0	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x400774d	      0xb90b000000	                            mov ecx, 0xb	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4007752	          0x4889c6	                            mov rsi, rax	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4007755	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x4007757	     0xf8403020000	                            je 0x4007960	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x400775d	      0xbf00000000	                              mov edi, 0	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4007762	      0xb906000000	                              mov ecx, 6	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4007767	          0x4889c6	                            mov rsi, rax	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x400776a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x400776c	     0xf845e010000	                            je 0x40078d0	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x4007772	          0x803845	                    cmp byte [rax], 0x45	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4007775	            0x750a	                           jne 0x4007781	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4007777	        0x8078014e	                cmp byte [rax + 1], 0x4e	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400777b	     0xf842e020000	                            je 0x40079af	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x4007781	      0xbf00000000	                              mov edi, 0	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4007786	      0xb905000000	                              mov ecx, 5	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x400778b	          0x4889ee	                            mov rsi, rbp	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x400778e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4007790	     0xf851e030000	                           jne 0x4007ab4	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x4007796	    0x48837c246800	               cmp qword [rsp + 0x68], 0	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x400779c	     0xf8501030000	                           jne 0x4007aa3	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x40077a2	    0x41bc01000000	                             mov r12d, 1	      5213	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6
0x40077a8	          0x4c89ef	                            mov rdi, r13	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x40077ab	      0xe800000000	                          call 0x40077b0	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x40077b0	          0x80383d	                    cmp byte [rax], 0x3d	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x40077b3	     0xf852b010000	                           jne 0x40078e4	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x40077b9	        0x488d7801	                      lea rdi, [rax + 1]	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x40077bd	      0xe800000000	                          call 0x40077c2	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x40077c2	          0x803800	                       cmp byte [rax], 0	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x40077c5	          0x4989c5	                            mov r13, rax	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x40077c8	     0xf8450030000	                            je 0x4007b1e	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x40077ce	        0x4183fc03	                             cmp r12d, 3	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x40077d2	     0xf8498010000	                            je 0x4007970	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x40077d8	      0xbf18000000	                           mov edi, 0x18	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x40077dd	      0xe800000000	                          call 0x40077e2	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x40077e2	          0x4885c0	                           test rax, rax	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x40077e5	          0x4989c6	                            mov r14, rax	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x40077e8	            0x7464	                            je 0x400784e	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x40077ea	          0x4963c4	                        movsxd rax, r12d	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x40077ed	      0xbfa0000000	                           mov edi, 0xa0	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x40077f2	      0x488b4cc460	    mov rcx, qword [rsp + rax*8 + 0x60] 	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x40077f7	      0x4c8974c460	     mov qword [rsp + rax*8 + 0x60], r14	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x40077fc	        0x49894e10	             mov qword [r14 + 0x10], rcx	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4007800	      0xe800000000	                          call 0x4007805	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x4007805	          0x4885c0	                           test rax, rax	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x4007808	          0x498906	                    mov qword [r14], rax	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x400780b	            0x7441	                            je 0x400784e	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x400780d	          0x4585e4	                         test r12d, r12d	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4007810	     0xf85fa000000	                           jne 0x4007910	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4007816	          0x4889c6	                            mov rsi, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4007819	          0x4c89ef	                            mov rdi, r13	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400781c	    0xc70500000000	               mov dword [0x04007826], 1	      5274	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x4007826	      0xe88591ffff	                call sym.get_syn_pattern	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400782b	    0xc70500000000	               mov dword [0x04007835], 0	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4007835	          0x4989c7	                            mov r15, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4007838	        0x8b442408	                mov eax, dword [rsp + 8]	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400783c	      0x8344241801	               add dword [rsp + 0x18], 1	      5283	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4007841	        0x41894608	                mov dword [r14 + 8], eax	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4007845	          0x4d85ff	                           test r15, r15	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4007848	     0xf8562feffff	                           jne 0x40076b0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400784e	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4007853	          0x4889ef	                            mov rdi, rbp	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007856	      0xe800000000	                          call 0x400785b	      5286	syntax.c	FUNCTION_81	CALL_25
0x400785b	    0xc74424080000	                  mov dword [rsp + 8], 0	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007863	    0xc70424000000	                      mov dword [rsp], 0	      5286	syntax.c	FUNCTION_81	CALL_25
0x400786a	      0x488d6c2460	                   lea rbp, [rsp + 0x60]	      5286	syntax.c	FUNCTION_81	CALL_25
0x400786f	            0x31db	                            xor ebx, ebx	      5157	syntax.c	FUNCTION_81
0x4007871	          0x4531ed	                          xor r13d, r13d	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x4007874	        0x4c8d7d18	                   lea r15, [rbp + 0x18]	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x4007878	          0x4d85e4	                           test r12, r12	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400787b	            0x752d	                           jne 0x40078aa	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400787d	      0xe94e010000	                           jmp 0x40079d0	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x4007882	    0x660f1f440000	                    nop word [rax + rax]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x4007888	        0x498b3c24	                    mov rdi, qword [r12]	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400788c	      0xe800000000	                          call 0x4007891	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x4007891	      0x4d8b742410	            mov r14, qword [r12 + 0x10] 	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x4007896	          0x4c89e7	                            mov rdi, r12	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x4007899	      0xe800000000	                          call 0x400789e	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x400789e	          0x4d85f6	                           test r14, r14	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40078a1	     0xf8429010000	                            je 0x40079d0	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40078a7	          0x4d89f4	                            mov r12, r14	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x40078aa	            0x85db	                           test ebx, ebx	      5368	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26
0x40078ac	            0x75da	                           jne 0x4007888	      5368	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26
0x40078ae	        0x498b0424	                    mov rax, qword [r12]	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x40078b2	        0x488b7868	            mov rdi, qword [rax + 0x68] 	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x40078b6	      0xe800000000	                          call 0x40078bb	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x40078bb	        0x498b0424	                    mov rax, qword [r12]	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x40078bf	        0x488b7860	            mov rdi, qword [rax + 0x60] 	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x40078c3	      0xe800000000	                          call 0x40078c8	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x40078c8	            0xebbe	                           jmp 0x4007888	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x40078ca	    0x660f1f440000	                    nop word [rax + rax]	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x40078d0	          0x4c89ef	                            mov rdi, r13	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x40078d3	          0x4531e4	                          xor r12d, r12d	      5203	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4
0x40078d6	      0xe800000000	                          call 0x40078db	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x40078db	          0x80383d	                    cmp byte [rax], 0x3d	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x40078de	     0xf84d5feffff	                            je 0x40077b9	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x40078e4	      0xba05000000	                              mov edx, 5	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x40078e9	      0xbe00000000	                              mov esi, 0	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x40078ee	            0x31ff	                            xor edi, edi	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x40078f0	      0xe800000000	                          call 0x40078f5	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x40078f5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x40078fa	          0x4889c7	                            mov rdi, rax	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x40078fd	      0xe800000000	                          call 0x4007902	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4007902	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x4007907	      0xe947ffffff	                           jmp 0x4007853	      5222	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x400790c	         0xf1f4000	                         nop dword [rax]	      5222	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x4007910	          0x4889c6	                            mov rsi, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4007913	          0x4c89ef	                            mov rdi, r13	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4007916	    0xc70500000000	               mov dword [0x04007920], 2	      5276	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x4007920	      0xe88b90ffff	                call sym.get_syn_pattern	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x4007925	        0x4183fc02	                             cmp r12d, 2	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4007929	          0x4989c7	                            mov r15, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400792c	    0xc70500000000	               mov dword [0x04007936], 0	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x4007936	     0xf85fcfeffff	                           jne 0x4007838	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x400793c	      0xe800000000	                          call 0x4007941	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4007941	            0x85c0	                           test eax, eax	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4007943	     0xf84effeffff	                            je 0x4007838	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x4007949	      0xf644243108	               test byte [rsp + 0x31], 8	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x400794e	     0xf85e4feffff	                           jne 0x4007838	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4007954	          0x498b06	                    mov rax, qword [r14]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4007957	        0x83482408	                or dword [rax + 0x24], 8	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x400795b	      0xe9d8feffff	                           jmp 0x4007838	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x4007960	    0x41bc03000000	                             mov r12d, 3	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x4007966	      0xe93dfeffff	                           jmp 0x40077a8	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x400796b	       0xf1f440000	                   nop dword [rax + rax]	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x4007970	          0x4889c7	                            mov rdi, rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4007973	      0xe800000000	                          call 0x4007978	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x4007978	          0x4989c4	                            mov r12, rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x400797b	          0x4c29e8	                            sub rax, r13	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400797e	        0x4883f804	                              cmp rax, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007982	     0xf848a000000	                            je 0x4007a12	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007988	        0x488b1424	                    mov rdx, qword [rsp]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400798c	    0xc74424080000	                  mov dword [rsp + 8], 0	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x4007994	          0x8b7230	            mov esi, dword [rdx + 0x30] 	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007997	            0x85f6	                           test esi, esi	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007999	     0xf84ee000000	                            je 0x4007a8d	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400799f	          0x4c89e7	                            mov rdi, r12	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x40079a2	      0xe800000000	                          call 0x40079a7	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x40079a7	          0x4989c7	                            mov r15, rax	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x40079aa	      0xe996feffff	                           jmp 0x4007845	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x40079af	        0x80780244	                cmp byte [rax + 2], 0x44	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x40079b3	     0xf85c8fdffff	                           jne 0x4007781	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x40079b9	        0x80780300	                   cmp byte [rax + 3], 0	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x40079bd	     0xf85befdffff	                           jne 0x4007781	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x40079c3	    0x41bc02000000	                             mov r12d, 2	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x40079c9	      0xe9dafdffff	                           jmp 0x40077a8	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x40079ce	            0x6690	                                     nop	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x40079d0	        0x4883c508	                              add rbp, 8	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x40079d4	          0x4c39fd	                            cmp rbp, r15	      5365	syntax.c	FUNCTION_81	FOR_3
0x40079d7	            0x740f	                            je 0x40079e8	      5365	syntax.c	FUNCTION_81	FOR_3
0x40079d9	        0x4c8b6500	                    mov r12, qword [rbp]	      5365	syntax.c	FUNCTION_81	FOR_3
0x40079dd	      0xe996feffff	                           jmp 0x4007878	      5365	syntax.c	FUNCTION_81	FOR_3
0x40079e2	    0x660f1f440000	                    nop word [rax + rax]	      5365	syntax.c	FUNCTION_81	FOR_3
0x40079e8	            0x85db	                           test ebx, ebx	      5378	syntax.c	FUNCTION_81	IF_27
0x40079ea	            0x7448	                            je 0x4007a34	      5378	syntax.c	FUNCTION_81	IF_27
0x40079ec	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5388	syntax.c	FUNCTION_81
0x40079f1	    0x644833042528	                xor rax, qword fs:[0x28]	      5388	syntax.c	FUNCTION_81
0x40079fa	     0xf850c030000	                           jne 0x4007d0c	      5388	syntax.c	FUNCTION_81
0x4007a00	    0x4881c4880000	                           add rsp, 0x88	      5388	syntax.c	FUNCTION_81
0x4007a07	              0x5b	                                 pop rbx	      5388	syntax.c	FUNCTION_81
0x4007a08	              0x5d	                                 pop rbp	      5388	syntax.c	FUNCTION_81
0x4007a09	            0x415c	                                 pop r12	      5388	syntax.c	FUNCTION_81
0x4007a0b	            0x415d	                                 pop r13	      5388	syntax.c	FUNCTION_81
0x4007a0d	            0x415e	                                 pop r14	      5388	syntax.c	FUNCTION_81
0x4007a0f	            0x415f	                                 pop r15	      5388	syntax.c	FUNCTION_81
0x4007a11	              0xc3	                                     ret	      5388	syntax.c	FUNCTION_81
0x4007a12	      0xbf00000000	                              mov edi, 0	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007a17	      0xb904000000	                              mov ecx, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007a1c	          0x4c89ee	                            mov rsi, r13	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007a1f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007a21	     0xf8561ffffff	                           jne 0x4007988	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x4007a27	    0xc74424080000	                  mov dword [rsp + 8], 0	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x4007a2f	      0xe96bffffff	                           jmp 0x400799f	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x4007a34	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5380	syntax.c	FUNCTION_81	IF_27	CALL_37
0x4007a39	      0xe800000000	                          call 0x4007a3e	      5380	syntax.c	FUNCTION_81	IF_27	CALL_37
0x4007a3e	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      5381	syntax.c	FUNCTION_81	IF_27	CALL_38
0x4007a43	      0xe800000000	                          call 0x4007a48	      5381	syntax.c	FUNCTION_81	IF_27	CALL_38
0x4007a48	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5382	syntax.c	FUNCTION_81	IF_27	CALL_39
0x4007a4d	      0xe800000000	                          call 0x4007a52	      5382	syntax.c	FUNCTION_81	IF_27	CALL_39
0x4007a52	          0x8b1424	                    mov edx, dword [rsp]	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x4007a55	            0x85d2	                           test edx, edx	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x4007a57	     0xf851c010000	                           jne 0x4007b79	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x4007a5d	          0x4d85ed	                           test r13, r13	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a60	            0x7408	                            je 0x4007a6a	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a62	        0x8b442408	                mov eax, dword [rsp + 8]	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a66	            0x85c0	                           test eax, eax	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a68	            0x7482	                            je 0x40079ec	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a6a	      0xba05000000	                              mov edx, 5	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a6f	      0xbe00000000	                              mov esi, 0	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a74	            0x31ff	                            xor edi, edi	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a76	      0xe800000000	                          call 0x4007a7b	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a7b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a80	          0x4889c7	                            mov rdi, rax	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a83	      0xe800000000	                          call 0x4007a88	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x4007a88	      0xe95fffffff	                           jmp 0x40079ec	      5388	syntax.c	FUNCTION_81
0x4007a8d	            0x89c6	                            mov esi, eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4007a8f	          0x4c89ef	                            mov rdi, r13	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4007a92	      0xe800000000	                          call 0x4007a97	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4007a97	            0x85c0	                           test eax, eax	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4007a99	        0x89442408	                mov dword [rsp + 8], eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x4007a9d	     0xf85fcfeffff	                           jne 0x400799f	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x4007aa3	    0xc74424080100	                  mov dword [rsp + 8], 1	      5210	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x4007aab	    0xc70424000000	                      mov dword [rsp], 0	      5155	syntax.c	FUNCTION_81
0x4007ab2	            0xeb79	                           jmp 0x4007b2d	      5155	syntax.c	FUNCTION_81
0x4007ab4	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      5155	syntax.c	FUNCTION_81
0x4007ab9	          0x4889ef	                            mov rdi, rbp	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007abc	        0x4c8b3424	                    mov r14, qword [rsp]	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007ac0	      0xe800000000	                          call 0x4007ac5	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007ac5	          0x4d89fd	                            mov r13, r15	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007ac8	          0x4d85e4	                           test r12, r12	      5293	syntax.c	FUNCTION_81	IF_19
0x4007acb	            0x743d	                            je 0x4007b0a	      5293	syntax.c	FUNCTION_81	IF_19
0x4007acd	    0x48837c247000	               cmp qword [rsp + 0x70], 0	      5293	syntax.c	FUNCTION_81	IF_19
0x4007ad3	            0x7435	                            je 0x4007b0a	      5293	syntax.c	FUNCTION_81	IF_19
0x4007ad5	          0x4c89ff	                            mov rdi, r15	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x4007ad8	      0xe800000000	                          call 0x4007add	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x4007add	        0x49894608	                mov qword [r14 + 8], rax	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x4007ae1	        0x410fb63f	                   movzx edi, byte [r15]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007ae5	      0xe800000000	                          call 0x4007aea	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007aea	            0x85c0	                           test eax, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007aec	            0x7408	                            je 0x4007af6	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007aee	        0x418b4e30	            mov ecx, dword [r14 + 0x30] 	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007af2	            0x85c9	                           test ecx, ecx	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007af4	            0x7449	                            je 0x4007b3f	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007af6	    0xc74424080000	                  mov dword [rsp + 8], 0	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007afe	    0xc70424000000	                      mov dword [rsp], 0	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007b05	      0xe960fdffff	                           jmp 0x400786a	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007b0a	    0xc74424080000	                  mov dword [rsp + 8], 0	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x4007b12	    0xc70424010000	                      mov dword [rsp], 1	      5296	syntax.c	FUNCTION_81	IF_19
0x4007b19	      0xe94cfdffff	                           jmp 0x400786a	      5296	syntax.c	FUNCTION_81	IF_19
0x4007b1e	    0xc74424080000	                  mov dword [rsp + 8], 0	      5156	syntax.c	FUNCTION_81
0x4007b26	    0xc70424010000	                      mov dword [rsp], 1	      5227	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x4007b2d	          0x4889ef	                            mov rdi, rbp	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007b30	      0xe800000000	                          call 0x4007b35	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007b35	      0x4c8b642460	            mov r12, qword [rsp + 0x60] 	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007b3a	      0xe92bfdffff	                           jmp 0x400786a	      5286	syntax.c	FUNCTION_81	CALL_25
0x4007b3f	    0x488b05000000	            mov rax, qword [0x04007b46] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b46	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b4a	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b4e	    0x4881c7600200	                          add rdi, 0x260	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b55	      0xe800000000	                          call 0x4007b5a	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b5a	            0x85c0	                           test eax, eax	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b5c	            0x752a	                           jne 0x4007b88	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b5e	    0xc74424080000	                  mov dword [rsp + 8], 0	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b66	    0xc70424000000	                      mov dword [rsp], 0	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x4007b6d	            0x31db	                            xor ebx, ebx	      5157	syntax.c	FUNCTION_81
0x4007b6f	      0x488d6c2460	                   lea rbp, [rsp + 0x60]	      5157	syntax.c	FUNCTION_81
0x4007b74	      0xe9fbfcffff	                           jmp 0x4007874	      5157	syntax.c	FUNCTION_81
0x4007b79	      0xba05000000	                              mov edx, 5	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x4007b7e	      0xbe00000000	                              mov esi, 0	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x4007b83	      0xe9ecfeffff	                           jmp 0x4007a74	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x4007b88	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4007b8d	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4007b92	          0x4889c7	                            mov rdi, rax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4007b95	          0x4829c6	                            sub rsi, rax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4007b98	      0xe800000000	                          call 0x4007b9d	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4007b9d	            0x85c0	                           test eax, eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4007b9f	            0x89c3	                            mov ebx, eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4007ba1	            0x74bb	                            je 0x4007b5e	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x4007ba3	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x4007ba8	            0x89c7	                            mov edi, eax	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x4007baa	      0x488d6c2460	                   lea rbp, [rsp + 0x60]	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x4007baf	      0xe82cafffff	              call sym.syn_incl_toplevel	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0x4007bb4	    0x4c8b0d000000	              mov r9, qword [0x04007bbb]	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bbb	    0x440fb67c241c	          movzx r15d, byte [rsp + 0x1c] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bc1	          0x4c89e2	                            mov rdx, r12	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bc4	        0x4c892424	                    mov qword [rsp], r12	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bc8	          0x4531c0	                            xor r8d, r8d	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bcb	          0x4189db	                           mov r11d, ebx	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bce	      0x4c896c2408	                mov qword [rsp + 8], r13	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bd3	          0x4989ec	                            mov r12, rbp	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bd6	        0x498b7910	              mov rdi, qword [r9 + 0x10]	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007bda	    0x448bb7600200	          mov r14d, dword [rdi + 0x260] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007be1	          0x4885d2	                           test rdx, rdx	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007be4	     0xf84c6000000	                            je 0x4007cb0	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007bea	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007bef	          0x4963c6	                        movsxd rax, r14d	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007bf2	    0x8b2d00000000	            mov ebp, dword [0x04007bf8] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007bf8	        0x488d0480	                  lea rax, [rax + rax*4]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007bfc	        0x8b5c2424	            mov ebx, dword [rsp + 0x24] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c00	          0x4589d5	                          mov r13d, r10d	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c03	        0x48c1e005	                              shl rax, 5	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c07	    0x4181e5002000	                        and r13d, 0x2000	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c0e	          0x4889c1	                            mov rcx, rax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c11	    0x48038f700200	            add rcx, qword [rdi + 0x270]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c18	          0x488b32	                    mov rsi, qword [rdx]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c1b	          0x4889cf	                            mov rdi, rcx	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c1e	      0xb914000000	                           mov ecx, 0x14	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c23	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c26	          0x4889c6	                            mov rsi, rax	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c29	        0x498b4910	              mov rcx, qword [r9 + 0x10]	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c2d	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c34	      0x44887c0101	          mov byte [rcx + rax + 1], r15b	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c39	        0x498b4910	              mov rcx, qword [r9 + 0x10]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c3d	    0x4803b1700200	            add rsi, qword [rcx + 0x270]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c44	          0x4d85c0	                             test r8, r8	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c47	     0xf84f3000000	                            je 0x4007d40	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c4d	        0x4183f801	                              cmp r8d, 1	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c51	           0xf94c1	                                 sete cl	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c54	          0x83c103	                              add ecx, 3	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c57	            0x880e	                      mov byte [rsi], cl	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c59	        0x498b7910	              mov rdi, qword [r9 + 0x10]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c5d	          0x4889c1	                            mov rcx, rax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c60	          0x8b7208	                mov esi, dword [rdx + 8]	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c63	    0x48038f700200	            add rcx, qword [rdi + 0x270]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c6a	        0x44095124	             or dword [rcx + 0x24], r10d	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c6e	          0x4d85c0	                             test r8, r8	      5336	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007c71	      0x6644895954	             mov word [rcx + 0x54], r11w	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c76	          0x896950	             mov dword [rcx + 0x50], ebp	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c79	        0x66897102	                  mov word [rcx + 2], si	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c7d	          0x895928	             mov dword [rcx + 0x28], ebx	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c80	     0xf848b000000	                            je 0x4007d11	      5336	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007c86	    0x838760020000	              add dword [rdi + 0x260], 1	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c8d	        0x4183c601	                             add r14d, 1	      5348	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007c91	          0x4585ed	                         test r13d, r13d	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x4007c94	            0x7407	                            je 0x4007c9d	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x4007c96	    0x83870c030000	              add dword [rdi + 0x30c], 1	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x4007c9d	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007ca1	    0x4805a0000000	                           add rax, 0xa0	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007ca7	          0x4885d2	                           test rdx, rdx	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007caa	     0xf855effffff	                           jne 0x4007c0e	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007cb0	        0x4983c001	                               add r8, 1	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007cb4	        0x4983f803	                               cmp r8, 3	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x4007cb8	            0x7413	                            je 0x4007ccd	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x4007cba	        0x4b8b14c4	             mov rdx, qword [r12 + r8*8]	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x4007cbe	      0xe91effffff	                           jmp 0x4007be1	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x4007cc3	          0x4531e4	                          xor r12d, r12d	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x4007cc6	            0x31ed	                            xor ebp, ebp	      5136	syntax.c	FUNCTION_81
0x4007cc8	      0xe986fbffff	                           jmp 0x4007853	      5136	syntax.c	FUNCTION_81
0x4007ccd	      0xbf23000000	                           mov edi, 0x23	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x4007cd2	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x4007cd7	          0x4c89e5	                            mov rbp, r12	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x4007cda	        0x4c8b2424	                    mov r12, qword [rsp]	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x4007cde	      0xbb01000000	                              mov ebx, 1	      5358	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x4007ce3	      0xe800000000	                          call 0x4007ce8	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x4007ce8	    0x488b05000000	            mov rax, qword [0x04007cef] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x4007cef	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x4007cf3	      0xe800000000	                          call 0x4007cf8	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x4007cf8	    0xc74424080000	                  mov dword [rsp + 8], 0	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x4007d00	    0xc70424000000	                      mov dword [rsp], 0	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x4007d07	      0xe968fbffff	                           jmp 0x4007874	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x4007d0c	      0xe800000000	                          call 0x4007d11	      5388	syntax.c	FUNCTION_81
0x4007d11	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007d16	        0x48897140	             mov qword [rcx + 0x40], rsi	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007d1a	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      5341	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007d1f	          0x4885f6	                           test rsi, rsi	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x4007d22	        0x48897158	             mov qword [rcx + 0x58], rsi	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007d26	            0x740a	                            je 0x4007d32	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x4007d28	    0xc78798020000	              mov dword [rdi + 0x298], 1	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x4007d32	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007d37	        0x48897148	             mov qword [rcx + 0x48], rsi	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007d3b	      0xe946ffffff	                           jmp 0x4007c86	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x4007d40	      0xb902000000	                              mov ecx, 2	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x4007d45	      0xe90dffffff	                           jmp 0x4007c57	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
hl_set_font_name	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,3	24
0x4006150	              0x55	                                push rbp	      8540	syntax.c	FUNCTION_124
0x4006151	              0x53	                                push rbx	      8540	syntax.c	FUNCTION_124
0x4006152	          0x4889fd	                            mov rbp, rdi	      8540	syntax.c	FUNCTION_124
0x4006155	      0xbf00000000	                              mov edi, 0	      8543	syntax.c	FUNCTION_124	CALL_1
0x400615a	        0x4883ec08	                              sub rsp, 8	      8540	syntax.c	FUNCTION_124
0x400615e	      0xe800000000	                          call 0x4006163	      8543	syntax.c	FUNCTION_124	CALL_1
0x4006163	            0x85c0	                           test eax, eax	      8544	syntax.c	FUNCTION_124	IF_1
0x4006165	            0x7e39	                           jle 0x40061a0	      8544	syntax.c	FUNCTION_124	IF_1
0x4006167	            0x4898	                                    cdqe	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4006169	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400616d	        0x488d0450	                  lea rax, [rax + rdx*2]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4006171	    0x488b15000000	            mov rdx, qword [0x04006178] 	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4006178	        0x48c1e003	                              shl rax, 3	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400617c	      0x488b7c02c8	       mov rdi, qword [rdx + rax - 0x38]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4006181	    0x488d9868ffff	                   lea rbx, [rax - 0x98]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x4006188	      0xe800000000	                          call 0x400618d	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400618d	    0x48031d000000	             add rbx, qword [0x04006194]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4006194	          0x4889ef	                            mov rdi, rbp	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x4006197	      0xe800000000	                          call 0x400619c	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x400619c	        0x48894360	             mov qword [rbx + 0x60], rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x40061a0	        0x4883c408	                              add rsp, 8	      8549	syntax.c	FUNCTION_124
0x40061a4	              0x5b	                                 pop rbx	      8549	syntax.c	FUNCTION_124
0x40061a5	              0x5d	                                 pop rbp	      8549	syntax.c	FUNCTION_124
0x40061a6	              0xc3	                                     ret	      8549	syntax.c	FUNCTION_124
syn_scl_name2id	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,0:FOR,1:functions,0:CALL,3	48
0x40010e0	            0x4156	                                push r14	      5535	syntax.c	FUNCTION_84
0x40010e2	            0x4155	                                push r13	      5535	syntax.c	FUNCTION_84
0x40010e4	            0x4154	                                push r12	      5535	syntax.c	FUNCTION_84
0x40010e6	              0x55	                                push rbp	      5535	syntax.c	FUNCTION_84
0x40010e7	              0x53	                                push rbx	      5535	syntax.c	FUNCTION_84
0x40010e8	      0xe800000000	                          call 0x40010ed	      5540	syntax.c	FUNCTION_84	CALL_1
0x40010ed	          0x4885c0	                           test rax, rax	      5541	syntax.c	FUNCTION_84	IF_1
0x40010f0	            0x7463	                            je 0x4001155	      5541	syntax.c	FUNCTION_84	IF_1
0x40010f2	          0x4989c5	                            mov r13, rax	      5541	syntax.c	FUNCTION_84	IF_1
0x40010f5	    0x488b05000000	            mov rax, qword [0x040010fc] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x40010fc	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001100	    0x496386780200	        movsxd rax, dword [r14 + 0x278] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001107	          0x4889c3	                            mov rbx, rax	      5543	syntax.c	FUNCTION_84	FOR_1
0x400110a	        0x488d0440	                  lea rax, [rax + rax*2]	      5543	syntax.c	FUNCTION_84	FOR_1
0x400110e	    0x488d2cc5e8ff	                 lea rbp, [rax*8 - 0x18]	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001116	            0xeb2c	                           jmp 0x4001144	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001118	     0xf1f84000000	                   nop dword [rax + rax]	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001120	    0x498b86880200	           mov rax, qword [r14 + 0x288] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x4001127	      0x488b742808	         mov rsi, qword [rax + rbp + 8] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400112c	          0x4885f6	                           test rsi, rsi	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400112f	            0x740c	                            je 0x400113d	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x4001131	          0x4c89ef	                            mov rdi, r13	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001134	      0xe800000000	                          call 0x4001139	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001139	            0x85c0	                           test eax, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400113b	            0x7423	                            je 0x4001160	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400113d	        0x4883ed18	                           sub rbp, 0x18	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001141	          0x4489e3	                           mov ebx, r12d	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4001144	          0x4189dc	                           mov r12d, ebx	      5543	syntax.c	FUNCTION_84	FOR_1
0x4001147	        0x4183ec01	                             sub r12d, 1	      5543	syntax.c	FUNCTION_84	FOR_1
0x400114b	            0x79d3	                           jns 0x4001120	      5543	syntax.c	FUNCTION_84	FOR_1
0x400114d	          0x4c89ef	                            mov rdi, r13	      5547	syntax.c	FUNCTION_84	CALL_3
0x4001150	      0xe800000000	                          call 0x4001155	      5547	syntax.c	FUNCTION_84	CALL_3
0x4001155	              0x5b	                                 pop rbx	      5549	syntax.c	FUNCTION_84
0x4001156	            0x31c0	                            xor eax, eax	      5548	syntax.c	FUNCTION_84
0x4001158	              0x5d	                                 pop rbp	      5549	syntax.c	FUNCTION_84
0x4001159	            0x415c	                                 pop r12	      5549	syntax.c	FUNCTION_84
0x400115b	            0x415d	                                 pop r13	      5549	syntax.c	FUNCTION_84
0x400115d	            0x415e	                                 pop r14	      5549	syntax.c	FUNCTION_84
0x400115f	              0xc3	                                     ret	      5549	syntax.c	FUNCTION_84
0x4001160	          0x4c89ef	                            mov rdi, r13	      5547	syntax.c	FUNCTION_84	CALL_3
0x4001163	      0xe800000000	                          call 0x4001168	      5547	syntax.c	FUNCTION_84	CALL_3
0x4001168	    0x8d83d7590000	                 lea eax, [rbx + 0x59d7]	      5548	syntax.c	FUNCTION_84
0x400116e	              0x5b	                                 pop rbx	      5549	syntax.c	FUNCTION_84
0x400116f	              0x5d	                                 pop rbp	      5549	syntax.c	FUNCTION_84
0x4001170	            0x415c	                                 pop r12	      5549	syntax.c	FUNCTION_84
0x4001172	            0x415d	                                 pop r13	      5549	syntax.c	FUNCTION_84
0x4001174	            0x415e	                                 pop r14	      5549	syntax.c	FUNCTION_84
0x4001176	              0xc3	                                     ret	      5549	syntax.c	FUNCTION_84
copy_id_list	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,0:FOR,1:functions,0:CALL,2	38
0x4001070	              0x55	                                push rbp	      6201	syntax.c	FUNCTION_93
0x4001071	              0x53	                                push rbx	      6201	syntax.c	FUNCTION_93
0x4001072	        0x4883ec08	                              sub rsp, 8	      6201	syntax.c	FUNCTION_93
0x4001076	          0x4885ff	                           test rdi, rdi	      6206	syntax.c	FUNCTION_93	IF_1
0x4001079	            0x745e	                            je 0x40010d9	      6206	syntax.c	FUNCTION_93	IF_1
0x400107b	        0x66833f00	                       cmp word [rdi], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x400107f	          0x4889fe	                            mov rsi, rdi	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001082	            0x7449	                            je 0x40010cd	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001084	        0x488d4702	                      lea rax, [rdi + 2]	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001088	            0x31d2	                            xor edx, edx	      6209	syntax.c	FUNCTION_93	FOR_1
0x400108a	            0xeb06	                           jmp 0x4001092	      6209	syntax.c	FUNCTION_93	FOR_1
0x400108c	         0xf1f4000	                         nop dword [rax]	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001090	            0x89ca	                            mov edx, ecx	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001092	        0x4883c002	                              add rax, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001096	          0x8d4a01	                      lea ecx, [rdx + 1]	      6209	syntax.c	FUNCTION_93	FOR_1
0x4001099	      0x668378fe00	                   cmp word [rax - 2], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x400109e	            0x75f0	                           jne 0x4001090	      6209	syntax.c	FUNCTION_93	FOR_1
0x40010a0	        0x8d7c1204	                lea edi, [rdx + rdx + 4]	      6209	syntax.c	FUNCTION_93	FOR_1
0x40010a4	            0x89fd	                            mov ebp, edi	      6209	syntax.c	FUNCTION_93	FOR_1
0x40010a6	          0x4889f3	                            mov rbx, rsi	      6209	syntax.c	FUNCTION_93	FOR_1
0x40010a9	      0xe800000000	                          call 0x40010ae	      6212	syntax.c	FUNCTION_93	CALL_1
0x40010ae	          0x4889c1	                            mov rcx, rax	      6212	syntax.c	FUNCTION_93	CALL_1
0x40010b1	            0x31c0	                            xor eax, eax	      6212	syntax.c	FUNCTION_93	CALL_1
0x40010b3	          0x4885c9	                           test rcx, rcx	      6213	syntax.c	FUNCTION_93	IF_2
0x40010b6	            0x740e	                            je 0x40010c6	      6213	syntax.c	FUNCTION_93	IF_2
0x40010b8	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_171	CALL_3
0x40010bb	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_171	CALL_3
0x40010be	          0x4889cf	                            mov rdi, rcx	        59	string3.h	FUNCTION_171	CALL_3
0x40010c1	      0xe800000000	                          call 0x40010c6	        59	string3.h	FUNCTION_171	CALL_3
0x40010c6	        0x4883c408	                              add rsp, 8	      6217	syntax.c	FUNCTION_93
0x40010ca	              0x5b	                                 pop rbx	      6217	syntax.c	FUNCTION_93
0x40010cb	              0x5d	                                 pop rbp	      6217	syntax.c	FUNCTION_93
0x40010cc	              0xc3	                                     ret	      6217	syntax.c	FUNCTION_93
0x40010cd	      0xbd02000000	                              mov ebp, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x40010d2	      0xbf02000000	                              mov edi, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x40010d7	            0xebcd	                           jmp 0x40010a6	      6209	syntax.c	FUNCTION_93	FOR_1
0x40010d9	            0x31c0	                            xor eax, eax	      6207	syntax.c	FUNCTION_93	IF_1
0x40010db	            0xebe9	                           jmp 0x40010c6	      6207	syntax.c	FUNCTION_93	IF_1
syn_stack_free_all	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,1:CALL,1	43
0x4003ba0	              0x55	                                push rbp	      1204	syntax.c	FUNCTION_12
0x4003ba1	              0x53	                                push rbx	      1204	syntax.c	FUNCTION_12
0x4003ba2	          0x4889fd	                            mov rbp, rdi	      1204	syntax.c	FUNCTION_12
0x4003ba5	        0x4883ec08	                              sub rsp, 8	      1204	syntax.c	FUNCTION_12
0x4003ba9	    0x488bbf100300	           mov rdi, qword [rdi + 0x310] 	      1190	syntax.c	FUNCTION_11	IF_1
0x4003bb0	          0x4885ff	                           test rdi, rdi	      1190	syntax.c	FUNCTION_11	IF_1
0x4003bb3	            0x7449	                            je 0x4003bfe	      1190	syntax.c	FUNCTION_11	IF_1
0x4003bb5	    0x488b9d200300	           mov rbx, qword [rbp + 0x320] 	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4003bbc	          0x4885db	                           test rbx, rbx	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4003bbf	            0x7423	                            je 0x4003be4	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4003bc1	     0xf1f80000000	                         nop dword [rax]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4003bc8	          0x4889df	                            mov rdi, rbx	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x4003bcb	      0xe870e5ffff	                call sym.clear_syn_state	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x4003bd0	          0x488b1b	                    mov rbx, qword [rbx]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4003bd3	          0x4885db	                           test rbx, rbx	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4003bd6	            0x75f0	                           jne 0x4003bc8	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4003bd8	    0x488bbd100300	           mov rdi, qword [rbp + 0x310] 	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4003bdf	          0x4885ff	                           test rdi, rdi	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4003be2	            0x7410	                            je 0x4003bf4	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4003be4	      0xe800000000	                          call 0x4003be9	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4003be9	    0x48c785100300	              mov qword [rbp + 0x310], 0	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4003bf4	    0xc78518030000	              mov dword [rbp + 0x318], 0	      1195	syntax.c	FUNCTION_11	IF_1
0x4003bfe	    0x488b1d000000	            mov rbx, qword [0x04003c05] 	      1213	syntax.c	FUNCTION_12
0x4003c05	          0x4885db	                           test rbx, rbx	      1213	syntax.c	FUNCTION_12
0x4003c08	            0x7415	                            je 0x4003c1f	      1213	syntax.c	FUNCTION_12
0x4003c0a	    0x660f1f440000	                    nop word [rax + rax]	      1213	syntax.c	FUNCTION_12
0x4003c10	        0x483b6b10	            cmp rbp, qword [rbx + 0x10] 	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003c14	            0x741a	                            je 0x4003c30	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003c16	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1213	syntax.c	FUNCTION_12
0x4003c1a	          0x4885db	                           test rbx, rbx	      1213	syntax.c	FUNCTION_12
0x4003c1d	            0x75f1	                           jne 0x4003c10	      1213	syntax.c	FUNCTION_12
0x4003c1f	        0x4883c408	                              add rsp, 8	      1219	syntax.c	FUNCTION_12
0x4003c23	              0x5b	                                 pop rbx	      1219	syntax.c	FUNCTION_12
0x4003c24	              0x5d	                                 pop rbp	      1219	syntax.c	FUNCTION_12
0x4003c25	              0xc3	                                     ret	      1219	syntax.c	FUNCTION_12
0x4003c26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1219	syntax.c	FUNCTION_12
0x4003c30	          0x4889df	                            mov rdi, rbx	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003c33	      0xe800000000	                          call 0x4003c38	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003c38	            0x85c0	                           test eax, eax	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003c3a	            0x74da	                            je 0x4003c16	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x4003c3c	          0x4889df	                            mov rdi, rbx	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x4003c3f	      0xe800000000	                          call 0x4003c44	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x4003c44	            0xebd0	                           jmp 0x4003c16	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
highlight_list_one	SWITCH,0:WHILE,0:DO,0:IF,3:ELSE,0:FOR,0:functions,0:CALL,18	236
0x400c330	          0x4863c7	                         movsxd rax, edi	      9216	syntax.c	FUNCTION_141
0x400c333	            0x4154	                                push r12	      9216	syntax.c	FUNCTION_141
0x400c335	              0x55	                                push rbp	      9216	syntax.c	FUNCTION_141
0x400c336	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9220	syntax.c	FUNCTION_141
0x400c33a	          0x4889c5	                            mov rbp, rax	      9216	syntax.c	FUNCTION_141
0x400c33d	              0x53	                                push rbx	      9216	syntax.c	FUNCTION_141
0x400c33e	        0x4c8d2450	                  lea r12, [rax + rdx*2]	      9220	syntax.c	FUNCTION_141
0x400c342	    0x488b05000000	            mov rax, qword [0x0400c349] 	      9220	syntax.c	FUNCTION_141
0x400c349	        0x49c1e403	                              shl r12, 3	      9220	syntax.c	FUNCTION_141
0x400c34d	    0x4a8d9c2068ff	             lea rbx, [rax + r12 - 0x98]	      9220	syntax.c	FUNCTION_141
0x400c355	    0x8b0500000000	            mov eax, dword [0x0400c35b] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c35b	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	      9222	syntax.c	FUNCTION_141	CALL_1
0x400c35e	            0x85c0	                           test eax, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x400c360	            0x7508	                           jne 0x400c36a	      9283	syntax.c	FUNCTION_142	IF_2
0x400c362	            0x85c9	                           test ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c364	     0xf857e020000	                           jne 0x400c5e8	      9283	syntax.c	FUNCTION_142	IF_2
0x400c36a	            0x31f6	                            xor esi, esi	      9283	syntax.c	FUNCTION_142	IF_2
0x400c36c	    0x8b0500000000	            mov eax, dword [0x0400c372] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c372	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400c374	     0xf8546020000	                           jne 0x400c5c0	      9281	syntax.c	FUNCTION_142	IF_1
0x400c37a	        0x4c8b4318	              mov r8, qword [rbx + 0x18]	      9224	syntax.c	FUNCTION_141	CALL_2
0x400c37e	          0x4d85c0	                             test r8, r8	      9283	syntax.c	FUNCTION_142	IF_2
0x400c381	            0x7416	                            je 0x400c399	      9283	syntax.c	FUNCTION_142	IF_2
0x400c383	    0x41b900000000	                              mov r9d, 0	      9283	syntax.c	FUNCTION_142	IF_2
0x400c389	            0x31c9	                            xor ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c38b	      0xba02000000	                              mov edx, 2	      9283	syntax.c	FUNCTION_142	IF_2
0x400c390	            0x89ef	                            mov edi, ebp	      9283	syntax.c	FUNCTION_142	IF_2
0x400c392	      0xe829feffff	     call sym.highlight_list_arg.part.18	      9283	syntax.c	FUNCTION_142	IF_2
0x400c397	            0x89c6	                            mov esi, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x400c399	    0x8b0500000000	            mov eax, dword [0x0400c39f] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c39f	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3a1	     0xf8509020000	                           jne 0x400c5b0	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3a7	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9226	syntax.c	FUNCTION_141	CALL_3
0x400c3ab	          0x4d85c0	                             test r8, r8	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3ae	            0x7416	                            je 0x400c3c6	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3b0	    0x41b900000000	                              mov r9d, 0	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3b6	            0x31c9	                            xor ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3b8	      0xba02000000	                              mov edx, 2	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3bd	            0x89ef	                            mov edi, ebp	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3bf	      0xe8fcfdffff	     call sym.highlight_list_arg.part.18	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3c4	            0x89c6	                            mov esi, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3c6	    0x8b0500000000	            mov eax, dword [0x0400c3cc] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3cc	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3ce	     0xf85cc010000	                           jne 0x400c5a0	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3d4	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      9229	syntax.c	FUNCTION_141	CALL_4
0x400c3d7	            0x85c9	                           test ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3d9	     0xf8531020000	                           jne 0x400c610	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3df	    0x8b0500000000	            mov eax, dword [0x0400c3e5] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3e5	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3e7	     0xf85a3010000	                           jne 0x400c590	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3ed	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      9231	syntax.c	FUNCTION_141	CALL_5
0x400c3f0	            0x85c9	                           test ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3f2	     0xf8558020000	                           jne 0x400c650	      9283	syntax.c	FUNCTION_142	IF_2
0x400c3f8	    0x8b0500000000	            mov eax, dword [0x0400c3fe] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c3fe	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400c400	     0xf857a010000	                           jne 0x400c580	      9281	syntax.c	FUNCTION_142	IF_1
0x400c406	          0x8b4b38	            mov ecx, dword [rbx + 0x38] 	      9233	syntax.c	FUNCTION_141	CALL_6
0x400c409	            0x85c9	                           test ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c40b	     0xf855f020000	                           jne 0x400c670	      9283	syntax.c	FUNCTION_142	IF_2
0x400c411	    0x8b0500000000	            mov eax, dword [0x0400c417] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c417	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400c419	     0xf8551010000	                           jne 0x400c570	      9281	syntax.c	FUNCTION_142	IF_1
0x400c41f	          0x8b4b6c	            mov ecx, dword [rbx + 0x6c] 	      9237	syntax.c	FUNCTION_141	CALL_7
0x400c422	            0x85c9	                           test ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c424	     0xf8506020000	                           jne 0x400c630	      9283	syntax.c	FUNCTION_142	IF_2
0x400c42a	    0x8b0500000000	            mov eax, dword [0x0400c430] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c430	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400c432	     0xf8528010000	                           jne 0x400c560	      9281	syntax.c	FUNCTION_142	IF_1
0x400c438	        0x4c8b4370	              mov r8, qword [rbx + 0x70]	      9239	syntax.c	FUNCTION_141	CALL_8
0x400c43c	          0x4d85c0	                             test r8, r8	      9283	syntax.c	FUNCTION_142	IF_2
0x400c43f	            0x7416	                            je 0x400c457	      9283	syntax.c	FUNCTION_142	IF_2
0x400c441	    0x41b900000000	                              mov r9d, 0	      9283	syntax.c	FUNCTION_142	IF_2
0x400c447	            0x31c9	                            xor ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c449	      0xba02000000	                              mov edx, 2	      9283	syntax.c	FUNCTION_142	IF_2
0x400c44e	            0x89ef	                            mov edi, ebp	      9283	syntax.c	FUNCTION_142	IF_2
0x400c450	      0xe86bfdffff	     call sym.highlight_list_arg.part.18	      9283	syntax.c	FUNCTION_142	IF_2
0x400c455	            0x89c6	                            mov esi, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x400c457	    0x8b1500000000	            mov edx, dword [0x0400c45d] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c45d	            0x31c0	                            xor eax, eax	      9282	syntax.c	FUNCTION_142	IF_1
0x400c45f	            0x85d2	                           test edx, edx	      9281	syntax.c	FUNCTION_142	IF_1
0x400c461	            0x751f	                           jne 0x400c482	      9281	syntax.c	FUNCTION_142	IF_1
0x400c463	        0x4c8b4378	              mov r8, qword [rbx + 0x78]	      9241	syntax.c	FUNCTION_141	CALL_9
0x400c467	            0x89f0	                            mov eax, esi	      9283	syntax.c	FUNCTION_142	IF_2
0x400c469	          0x4d85c0	                             test r8, r8	      9283	syntax.c	FUNCTION_142	IF_2
0x400c46c	            0x7414	                            je 0x400c482	      9283	syntax.c	FUNCTION_142	IF_2
0x400c46e	    0x41b900000000	                              mov r9d, 0	      9283	syntax.c	FUNCTION_142	IF_2
0x400c474	            0x31c9	                            xor ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c476	      0xba02000000	                              mov edx, 2	      9283	syntax.c	FUNCTION_142	IF_2
0x400c47b	            0x89ef	                            mov edi, ebp	      9283	syntax.c	FUNCTION_142	IF_2
0x400c47d	      0xe83efdffff	     call sym.highlight_list_arg.part.18	      9283	syntax.c	FUNCTION_142	IF_2
0x400c482	    0x8b1500000000	            mov edx, dword [0x0400c488] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c488	            0x85d2	                           test edx, edx	      9281	syntax.c	FUNCTION_142	IF_1
0x400c48a	     0xf85c8000000	                           jne 0x400c558	      9281	syntax.c	FUNCTION_142	IF_1
0x400c490	    0x4c8b83800000	              mov r8, qword [rbx + 0x80]	      9243	syntax.c	FUNCTION_141	CALL_10
0x400c497	          0x4d85c0	                             test r8, r8	      9283	syntax.c	FUNCTION_142	IF_2
0x400c49a	            0x7416	                            je 0x400c4b2	      9283	syntax.c	FUNCTION_142	IF_2
0x400c49c	    0x41b900000000	                              mov r9d, 0	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4a2	            0x31c9	                            xor ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4a4	      0xba02000000	                              mov edx, 2	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4a9	            0x89c6	                            mov esi, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4ab	            0x89ef	                            mov edi, ebp	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4ad	      0xe80efdffff	     call sym.highlight_list_arg.part.18	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4b2	    0x8b1500000000	            mov edx, dword [0x0400c4b8] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c4b8	            0x85d2	                           test edx, edx	      9281	syntax.c	FUNCTION_142	IF_1
0x400c4ba	            0x7554	                           jne 0x400c510	      9281	syntax.c	FUNCTION_142	IF_1
0x400c4bc	        0x4c8b4360	              mov r8, qword [rbx + 0x60]	      9247	syntax.c	FUNCTION_141	CALL_11
0x400c4c0	          0x4d85c0	                             test r8, r8	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4c3	            0x7416	                            je 0x400c4db	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4c5	    0x41b900000000	                              mov r9d, 0	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4cb	            0x31c9	                            xor ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4cd	      0xba02000000	                              mov edx, 2	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4d2	            0x89c6	                            mov esi, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4d4	            0x89ef	                            mov edi, ebp	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4d6	      0xe8e5fcffff	     call sym.highlight_list_arg.part.18	      9283	syntax.c	FUNCTION_142	IF_2
0x400c4db	    0x8b9388000000	            mov edx, dword [rbx + 0x88] 	      9251	syntax.c	FUNCTION_141	IF_1
0x400c4e1	            0x85d2	                           test edx, edx	      9251	syntax.c	FUNCTION_141	IF_1
0x400c4e3	            0x740e	                            je 0x400c4f3	      9251	syntax.c	FUNCTION_141	IF_1
0x400c4e5	    0x8b1500000000	            mov edx, dword [0x0400c4eb] 	      9251	syntax.c	FUNCTION_141	IF_1
0x400c4eb	            0x85d2	                           test edx, edx	      9251	syntax.c	FUNCTION_141	IF_1
0x400c4ed	     0xf849d010000	                            je 0x400c690	      9251	syntax.c	FUNCTION_141	IF_1
0x400c4f3	            0x85c0	                           test eax, eax	      9260	syntax.c	FUNCTION_141	IF_2
0x400c4f5	            0x7427	                            je 0x400c51e	      9260	syntax.c	FUNCTION_141	IF_2
0x400c4f7	    0x48833d000000	               cmp qword [0x0400c4ff], 0	      9263	syntax.c	FUNCTION_141	IF_3
0x400c4ff	            0x7e4d	                           jle 0x400c54e	      9263	syntax.c	FUNCTION_141	IF_3
0x400c501	    0x8bbb90000000	            mov edi, dword [rbx + 0x90] 	      9264	syntax.c	FUNCTION_141	CALL_18
0x400c507	              0x5b	                                 pop rbx	      9266	syntax.c	FUNCTION_141
0x400c508	              0x5d	                                 pop rbp	      9266	syntax.c	FUNCTION_141
0x400c509	            0x415c	                                 pop r12	      9266	syntax.c	FUNCTION_141
0x400c50b	      0xe900000000	                           jmp 0x400c510	      9264	syntax.c	FUNCTION_141	CALL_18
0x400c510	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	      9251	syntax.c	FUNCTION_141	IF_1
0x400c516	            0x85c0	                           test eax, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x400c518	     0xf85b2000000	                           jne 0x400c5d0	      9251	syntax.c	FUNCTION_141	IF_1
0x400c51e	    0x8b0500000000	            mov eax, dword [0x0400c524] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400c524	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400c526	            0x75cf	                           jne 0x400c4f7	      9281	syntax.c	FUNCTION_142	IF_1
0x400c528	            0x31c9	                            xor ecx, ecx	      9281	syntax.c	FUNCTION_142	IF_1
0x400c52a	            0x31f6	                            xor esi, esi	      9281	syntax.c	FUNCTION_142	IF_1
0x400c52c	    0x41b900000000	                              mov r9d, 0	      9281	syntax.c	FUNCTION_142	IF_1
0x400c532	    0x41b800000000	                              mov r8d, 0	      9281	syntax.c	FUNCTION_142	IF_1
0x400c538	      0xba02000000	                              mov edx, 2	      9281	syntax.c	FUNCTION_142	IF_1
0x400c53d	            0x89ef	                            mov edi, ebp	      9281	syntax.c	FUNCTION_142	IF_1
0x400c53f	      0xe87cfcffff	     call sym.highlight_list_arg.part.18	      9281	syntax.c	FUNCTION_142	IF_1
0x400c544	    0x48833d000000	               cmp qword [0x0400c54c], 0	      9263	syntax.c	FUNCTION_141	IF_3
0x400c54c	            0x7fb3	                            jg 0x400c501	      9263	syntax.c	FUNCTION_141	IF_3
0x400c54e	              0x5b	                                 pop rbx	      9266	syntax.c	FUNCTION_141
0x400c54f	              0x5d	                                 pop rbp	      9266	syntax.c	FUNCTION_141
0x400c550	            0x415c	                                 pop r12	      9266	syntax.c	FUNCTION_141
0x400c552	              0xc3	                                     ret	      9266	syntax.c	FUNCTION_141
0x400c553	       0xf1f440000	                   nop dword [rax + rax]	      9266	syntax.c	FUNCTION_141
0x400c558	            0x31c0	                            xor eax, eax	      9282	syntax.c	FUNCTION_142	IF_1
0x400c55a	      0xe953ffffff	                           jmp 0x400c4b2	      9282	syntax.c	FUNCTION_142	IF_1
0x400c55f	              0x90	                                     nop	      9282	syntax.c	FUNCTION_142	IF_1
0x400c560	            0x31f6	                            xor esi, esi	      9282	syntax.c	FUNCTION_142	IF_1
0x400c562	      0xe9f0feffff	                           jmp 0x400c457	      9282	syntax.c	FUNCTION_142	IF_1
0x400c567	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x400c570	            0x31f6	                            xor esi, esi	      9282	syntax.c	FUNCTION_142	IF_1
0x400c572	      0xe9b3feffff	                           jmp 0x400c42a	      9282	syntax.c	FUNCTION_142	IF_1
0x400c577	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x400c580	            0x31f6	                            xor esi, esi	      9282	syntax.c	FUNCTION_142	IF_1
0x400c582	      0xe98afeffff	                           jmp 0x400c411	      9282	syntax.c	FUNCTION_142	IF_1
0x400c587	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x400c590	            0x31f6	                            xor esi, esi	      9282	syntax.c	FUNCTION_142	IF_1
0x400c592	      0xe961feffff	                           jmp 0x400c3f8	      9282	syntax.c	FUNCTION_142	IF_1
0x400c597	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5a0	            0x31f6	                            xor esi, esi	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5a2	      0xe938feffff	                           jmp 0x400c3df	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5a7	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5b0	            0x31f6	                            xor esi, esi	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5b2	      0xe90ffeffff	                           jmp 0x400c3c6	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5b7	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5c0	            0x31f6	                            xor esi, esi	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5c2	      0xe9d2fdffff	                           jmp 0x400c399	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5c7	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5d0	    0x8b1500000000	            mov edx, dword [0x0400c5d6] 	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5d6	            0x31c0	                            xor eax, eax	      9282	syntax.c	FUNCTION_142	IF_1
0x400c5d8	            0x85d2	                           test edx, edx	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5da	     0xf8513ffffff	                           jne 0x400c4f3	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5e0	      0xe9ab000000	                           jmp 0x400c690	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5e5	           0xf1f00	                         nop dword [rax]	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5e8	            0x31f6	                            xor esi, esi	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5ea	    0x41b900000000	                              mov r9d, 0	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5f0	          0x4531c0	                            xor r8d, r8d	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5f3	      0xba01000000	                              mov edx, 1	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5f8	            0x89ef	                            mov edi, ebp	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5fa	      0xe8c1fbffff	     call sym.highlight_list_arg.part.18	      9251	syntax.c	FUNCTION_141	IF_1
0x400c5ff	            0x89c6	                            mov esi, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x400c601	      0xe966fdffff	                           jmp 0x400c36c	      9251	syntax.c	FUNCTION_141	IF_1
0x400c606	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9251	syntax.c	FUNCTION_141	IF_1
0x400c610	    0x41b900000000	                              mov r9d, 0	      9251	syntax.c	FUNCTION_141	IF_1
0x400c616	          0x4531c0	                            xor r8d, r8d	      9251	syntax.c	FUNCTION_141	IF_1
0x400c619	      0xba01000000	                              mov edx, 1	      9251	syntax.c	FUNCTION_141	IF_1
0x400c61e	            0x89ef	                            mov edi, ebp	      9251	syntax.c	FUNCTION_141	IF_1
0x400c620	      0xe89bfbffff	     call sym.highlight_list_arg.part.18	      9251	syntax.c	FUNCTION_141	IF_1
0x400c625	            0x89c6	                            mov esi, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x400c627	      0xe9b3fdffff	                           jmp 0x400c3df	      9251	syntax.c	FUNCTION_141	IF_1
0x400c62c	         0xf1f4000	                         nop dword [rax]	      9251	syntax.c	FUNCTION_141	IF_1
0x400c630	    0x41b900000000	                              mov r9d, 0	      9251	syntax.c	FUNCTION_141	IF_1
0x400c636	          0x4531c0	                            xor r8d, r8d	      9251	syntax.c	FUNCTION_141	IF_1
0x400c639	      0xba01000000	                              mov edx, 1	      9251	syntax.c	FUNCTION_141	IF_1
0x400c63e	            0x89ef	                            mov edi, ebp	      9251	syntax.c	FUNCTION_141	IF_1
0x400c640	      0xe87bfbffff	     call sym.highlight_list_arg.part.18	      9251	syntax.c	FUNCTION_141	IF_1
0x400c645	            0x89c6	                            mov esi, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x400c647	      0xe9defdffff	                           jmp 0x400c42a	      9251	syntax.c	FUNCTION_141	IF_1
0x400c64c	         0xf1f4000	                         nop dword [rax]	      9251	syntax.c	FUNCTION_141	IF_1
0x400c650	    0x41b900000000	                              mov r9d, 0	      9251	syntax.c	FUNCTION_141	IF_1
0x400c656	          0x4531c0	                            xor r8d, r8d	      9251	syntax.c	FUNCTION_141	IF_1
0x400c659	      0xba03000000	                              mov edx, 3	      9251	syntax.c	FUNCTION_141	IF_1
0x400c65e	            0x89ef	                            mov edi, ebp	      9251	syntax.c	FUNCTION_141	IF_1
0x400c660	      0xe85bfbffff	     call sym.highlight_list_arg.part.18	      9251	syntax.c	FUNCTION_141	IF_1
0x400c665	            0x89c6	                            mov esi, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x400c667	      0xe98cfdffff	                           jmp 0x400c3f8	      9251	syntax.c	FUNCTION_141	IF_1
0x400c66c	         0xf1f4000	                         nop dword [rax]	      9251	syntax.c	FUNCTION_141	IF_1
0x400c670	    0x41b900000000	                              mov r9d, 0	      9251	syntax.c	FUNCTION_141	IF_1
0x400c676	          0x4531c0	                            xor r8d, r8d	      9251	syntax.c	FUNCTION_141	IF_1
0x400c679	      0xba03000000	                              mov edx, 3	      9251	syntax.c	FUNCTION_141	IF_1
0x400c67e	            0x89ef	                            mov edi, ebp	      9251	syntax.c	FUNCTION_141	IF_1
0x400c680	      0xe83bfbffff	     call sym.highlight_list_arg.part.18	      9251	syntax.c	FUNCTION_141	IF_1
0x400c685	            0x89c6	                            mov esi, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x400c687	      0xe985fdffff	                           jmp 0x400c411	      9251	syntax.c	FUNCTION_141	IF_1
0x400c68c	         0xf1f4000	                         nop dword [rax]	      9251	syntax.c	FUNCTION_141	IF_1
0x400c690	            0x89ea	                            mov edx, ebp	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x400c692	      0xbe0f270000	                         mov esi, 0x270f	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x400c697	            0x89c7	                            mov edi, eax	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x400c699	      0xe8a2e9ffff	                call sym.syn_list_header	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x400c69e	    0x8b3500000000	            mov esi, dword [0x0400c6a4] 	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x400c6a4	      0xbf00000000	                              mov edi, 0	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x400c6a9	      0xe800000000	                          call 0x400c6ae	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x400c6ae	      0xbf20000000	                           mov edi, 0x20	      9256	syntax.c	FUNCTION_141	IF_1	CALL_15
0x400c6b3	      0xe800000000	                          call 0x400c6b8	      9256	syntax.c	FUNCTION_141	IF_1	CALL_15
0x400c6b8	    0x488b15000000	            mov rdx, qword [0x0400c6bf] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x400c6bf	      0x4a634422f0	    movsxd rax, dword [rdx + r12 - 0x10]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x400c6c4	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x400c6c8	        0x488d0448	                  lea rax, [rax + rcx*2]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x400c6cc	    0x488bbcc268ff	     mov rdi, qword [rdx + rax*8 - 0x98]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x400c6d4	      0xe800000000	                          call 0x400c6d9	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x400c6d9	      0xe919feffff	                           jmp 0x400c4f7	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
get_gui_attr_idx	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,2	19
0x4005540	        0x4883ec38	                           sub rsp, 0x38	      8973	syntax.c	FUNCTION_134
0x4005544	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400554c	      0x4889742408	                mov qword [rsp + 8], rsi	      8978	syntax.c	FUNCTION_134
0x4005551	          0x4889e6	                            mov rsi, rsp	      8980	syntax.c	FUNCTION_134	CALL_2
0x4005554	        0x66893c24	                      mov word [rsp], di	      8977	syntax.c	FUNCTION_134
0x4005558	      0xbf00000000	                              mov edi, 0	      8980	syntax.c	FUNCTION_134	CALL_2
0x400555d	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005566	    0x64488b042528	                mov rax, qword fs:[0x28]	      8973	syntax.c	FUNCTION_134
0x400556f	      0x4889442428	             mov qword [rsp + 0x28], rax	      8973	syntax.c	FUNCTION_134
0x4005574	            0x31c0	                            xor eax, eax	      8973	syntax.c	FUNCTION_134
0x4005576	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400557f	      0x4889542410	             mov qword [rsp + 0x10], rdx	      8979	syntax.c	FUNCTION_134
0x4005584	      0xe8c7f7ffff	                 call sym.get_attr_entry	      8980	syntax.c	FUNCTION_134	CALL_2
0x4005589	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8981	syntax.c	FUNCTION_134
0x400558e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8981	syntax.c	FUNCTION_134
0x4005597	            0x7505	                           jne 0x400559e	      8981	syntax.c	FUNCTION_134
0x4005599	        0x4883c438	                           add rsp, 0x38	      8981	syntax.c	FUNCTION_134
0x400559d	              0xc3	                                     ret	      8981	syntax.c	FUNCTION_134
0x400559e	      0xe800000000	                          call 0x40055a3	      8981	syntax.c	FUNCTION_134
syn_clear_keyword	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,3:FOR,2:functions,0:CALL,7	73
0x4001ed0	            0x4157	                                push r15	      4437	syntax.c	FUNCTION_72
0x4001ed2	            0x4156	                                push r14	      4437	syntax.c	FUNCTION_72
0x4001ed4	          0x4189ff	                           mov r15d, edi	      4437	syntax.c	FUNCTION_72
0x4001ed7	            0x4155	                                push r13	      4437	syntax.c	FUNCTION_72
0x4001ed9	            0x4154	                                push r12	      4437	syntax.c	FUNCTION_72
0x4001edb	          0x4889f7	                            mov rdi, rsi	      4444	syntax.c	FUNCTION_72	CALL_1
0x4001ede	              0x55	                                push rbp	      4437	syntax.c	FUNCTION_72
0x4001edf	              0x53	                                push rbx	      4437	syntax.c	FUNCTION_72
0x4001ee0	          0x4889f3	                            mov rbx, rsi	      4437	syntax.c	FUNCTION_72
0x4001ee3	        0x4883ec18	                           sub rsp, 0x18	      4437	syntax.c	FUNCTION_72
0x4001ee7	      0x4889742408	                mov qword [rsp + 8], rsi	      4437	syntax.c	FUNCTION_72
0x4001eec	      0xe800000000	                          call 0x4001ef1	      4444	syntax.c	FUNCTION_72	CALL_1
0x4001ef1	        0x488b4308	                mov rax, qword [rbx + 8]	      4445	syntax.c	FUNCTION_72
0x4001ef5	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      4446	syntax.c	FUNCTION_72	FOR_1
0x4001ef9	            0x85c0	                           test eax, eax	      4446	syntax.c	FUNCTION_72	FOR_1
0x4001efb	          0x4189c4	                           mov r12d, eax	      4445	syntax.c	FUNCTION_72
0x4001efe	            0x7e7a	                           jle 0x4001f7a	      4446	syntax.c	FUNCTION_72	FOR_1
0x4001f00	        0x488b5d08	                mov rbx, qword [rbp + 8]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4001f04	    0x4881fb000000	                              cmp rbx, 0	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4001f0b	     0xf849f000000	                            je 0x4001fb0	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4001f11	          0x4885db	                           test rbx, rbx	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4001f14	     0xf8496000000	                            je 0x4001fb0	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x4001f1a	        0x4183ec01	                             sub r12d, 1	      4450	syntax.c	FUNCTION_72	FOR_1	IF_1
0x4001f1e	        0x4883eb28	                           sub rbx, 0x28	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f22	            0x744d	                            je 0x4001f71	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f24	          0x4531f6	                          xor r14d, r14d	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f27	            0xeb12	                           jmp 0x4001f3b	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f29	     0xf1f80000000	                         nop dword [rax]	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f30	          0x4989de	                            mov r14, rbx	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x4001f33	          0x488b1b	                    mov rbx, qword [rbx]	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x4001f36	          0x4885db	                           test rbx, rbx	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f39	            0x7436	                            je 0x4001f71	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f3b	         0xfbf430c	            movsx eax, word [rbx + 0xc] 	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4001f3f	          0x4439f8	                           cmp eax, r15d	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4001f42	            0x75ec	                           jne 0x4001f30	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4001f44	          0x4d85f6	                           test r14, r14	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4001f47	          0x4c8b2b	                    mov r13, qword [rbx]	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4001f4a	            0x744c	                            je 0x4001f98	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x4001f4c	          0x4d892e	                    mov qword [r14], r13	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x4001f4f	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x4001f53	      0xe800000000	                          call 0x4001f58	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x4001f58	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x4001f5c	      0xe800000000	                          call 0x4001f61	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x4001f61	          0x4889df	                            mov rdi, rbx	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x4001f64	          0x4c89eb	                            mov rbx, r13	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x4001f67	      0xe800000000	                          call 0x4001f6c	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x4001f6c	          0x4885db	                           test rbx, rbx	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f6f	            0x75ca	                           jne 0x4001f3b	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x4001f71	        0x4883c510	                           add rbp, 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x4001f75	          0x4585e4	                         test r12d, r12d	      4446	syntax.c	FUNCTION_72	FOR_1
0x4001f78	            0x7586	                           jne 0x4001f00	      4446	syntax.c	FUNCTION_72	FOR_1
0x4001f7a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4479	syntax.c	FUNCTION_72	CALL_7
0x4001f7f	        0x4883c418	                           add rsp, 0x18	      4480	syntax.c	FUNCTION_72
0x4001f83	              0x5b	                                 pop rbx	      4480	syntax.c	FUNCTION_72
0x4001f84	              0x5d	                                 pop rbp	      4480	syntax.c	FUNCTION_72
0x4001f85	            0x415c	                                 pop r12	      4480	syntax.c	FUNCTION_72
0x4001f87	            0x415d	                                 pop r13	      4480	syntax.c	FUNCTION_72
0x4001f89	            0x415e	                                 pop r14	      4480	syntax.c	FUNCTION_72
0x4001f8b	            0x415f	                                 pop r15	      4480	syntax.c	FUNCTION_72
0x4001f8d	      0xe900000000	                           jmp 0x4001f92	      4479	syntax.c	FUNCTION_72	CALL_7
0x4001f92	    0x660f1f440000	                    nop word [rax + rax]	      4479	syntax.c	FUNCTION_72	CALL_7
0x4001f98	          0x4d85ed	                           test r13, r13	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x4001f9b	            0x741c	                            je 0x4001fb9	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x4001f9d	        0x498d5528	                   lea rdx, [r13 + 0x28]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x4001fa1	        0x48895508	                mov qword [rbp + 8], rdx	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x4001fa5	            0xeba8	                           jmp 0x4001f4f	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x4001fa7	    0x660f1f840000	                    nop word [rax + rax]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x4001fb0	        0x4883c510	                           add rbp, 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x4001fb4	      0xe947ffffff	                           jmp 0x4001f00	      4446	syntax.c	FUNCTION_72	FOR_1
0x4001fb9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x4001fbe	          0x4889ee	                            mov rsi, rbp	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x4001fc1	      0xe800000000	                          call 0x4001fc6	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x4001fc6	            0xeb87	                           jmp 0x4001f4f	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
syn_check_group	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,1:FOR,0:functions,0:CALL,4	128
0x4006740	            0x4154	                                push r12	      9713	syntax.c	FUNCTION_153
0x4006742	              0x55	                                push rbp	      9713	syntax.c	FUNCTION_153
0x4006743	          0x4531e4	                          xor r12d, r12d	      9719	syntax.c	FUNCTION_153	IF_1
0x4006746	              0x53	                                push rbx	      9713	syntax.c	FUNCTION_153
0x4006747	      0xe800000000	                          call 0x400674c	      9717	syntax.c	FUNCTION_153	CALL_1
0x400674c	          0x4885c0	                           test rax, rax	      9718	syntax.c	FUNCTION_153	IF_1
0x400674f	            0x741a	                            je 0x400676b	      9718	syntax.c	FUNCTION_153	IF_1
0x4006751	          0x4889c7	                            mov rdi, rax	      9721	syntax.c	FUNCTION_153	CALL_2
0x4006754	          0x4889c5	                            mov rbp, rax	      9721	syntax.c	FUNCTION_153	CALL_2
0x4006757	      0xe800000000	                          call 0x400675c	      9721	syntax.c	FUNCTION_153	CALL_2
0x400675c	            0x85c0	                           test eax, eax	      9722	syntax.c	FUNCTION_153	IF_2
0x400675e	          0x4189c4	                           mov r12d, eax	      9721	syntax.c	FUNCTION_153	CALL_2
0x4006761	            0x7415	                            je 0x4006778	      9722	syntax.c	FUNCTION_153	IF_2
0x4006763	          0x4889ef	                            mov rdi, rbp	      9725	syntax.c	FUNCTION_153	CALL_4
0x4006766	      0xe800000000	                          call 0x400676b	      9725	syntax.c	FUNCTION_153	CALL_4
0x400676b	          0x4489e0	                           mov eax, r12d	      9727	syntax.c	FUNCTION_153
0x400676e	              0x5b	                                 pop rbx	      9727	syntax.c	FUNCTION_153
0x400676f	              0x5d	                                 pop rbp	      9727	syntax.c	FUNCTION_153
0x4006770	            0x415c	                                 pop r12	      9727	syntax.c	FUNCTION_153
0x4006772	              0xc3	                                     ret	      9727	syntax.c	FUNCTION_153
0x4006773	       0xf1f440000	                   nop dword [rax + rax]	      9727	syntax.c	FUNCTION_153
0x4006778	         0xfb67d00	                   movzx edi, byte [rbp]	      9740	syntax.c	FUNCTION_154	FOR_1
0x400677c	          0x4889eb	                            mov rbx, rbp	      9740	syntax.c	FUNCTION_154	FOR_1
0x400677f	          0x4084ff	                           test dil, dil	      9740	syntax.c	FUNCTION_154	FOR_1
0x4006782	            0x7537	                           jne 0x40067bb	      9740	syntax.c	FUNCTION_154	FOR_1
0x4006784	      0xe98f000000	                           jmp 0x4006818	      9740	syntax.c	FUNCTION_154	FOR_1
0x4006789	     0xf1f80000000	                         nop dword [rax]	      9740	syntax.c	FUNCTION_154	FOR_1
0x4006790	           0xfb613	                   movzx edx, byte [rbx]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4006793	            0x89d0	                            mov eax, edx	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4006795	          0x83e0df	                     and eax, 0xffffffdf	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x4006798	          0x83e841	                           sub eax, 0x41	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400679b	            0x3c19	                            cmp al, 0x19	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400679d	            0x7610	                           jbe 0x40067af	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400679f	           0xfb6c2	                           movzx eax, dl	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x40067a2	          0x83e830	                           sub eax, 0x30	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x40067a5	          0x83f809	                              cmp eax, 9	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x40067a8	            0x7605	                           jbe 0x40067af	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x40067aa	          0x80fa5f	                            cmp dl, 0x5f	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x40067ad	            0x7541	                           jne 0x40067f0	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x40067af	        0x4883c301	                              add rbx, 1	      9740	syntax.c	FUNCTION_154	FOR_1
0x40067b3	           0xfb63b	                   movzx edi, byte [rbx]	      9740	syntax.c	FUNCTION_154	FOR_1
0x40067b6	          0x4084ff	                           test dil, dil	      9740	syntax.c	FUNCTION_154	FOR_1
0x40067b9	            0x745d	                            je 0x4006818	      9740	syntax.c	FUNCTION_154	FOR_1
0x40067bb	      0xe800000000	                          call 0x40067c0	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x40067c0	            0x85c0	                           test eax, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x40067c2	          0x4189c4	                           mov r12d, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x40067c5	            0x75c9	                           jne 0x4006790	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x40067c7	      0xba05000000	                              mov edx, 5	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x40067cc	      0xbe00000000	                              mov esi, 0	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x40067d1	            0x31ff	                            xor edi, edi	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x40067d3	      0xe800000000	                          call 0x40067d8	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x40067d8	          0x4889c7	                            mov rdi, rax	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x40067db	      0xe800000000	                          call 0x40067e0	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x40067e0	          0x4889ef	                            mov rdi, rbp	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x40067e3	      0xe800000000	                          call 0x40067e8	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x40067e8	          0x4489e0	                           mov eax, r12d	      9727	syntax.c	FUNCTION_153
0x40067eb	              0x5b	                                 pop rbx	      9727	syntax.c	FUNCTION_153
0x40067ec	              0x5d	                                 pop rbp	      9727	syntax.c	FUNCTION_153
0x40067ed	            0x415c	                                 pop r12	      9727	syntax.c	FUNCTION_153
0x40067ef	              0xc3	                                     ret	      9727	syntax.c	FUNCTION_153
0x40067f0	    0x8b3d00000000	            mov edi, dword [0x040067f6] 	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x40067f6	      0xe800000000	                          call 0x40067fb	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x40067fb	            0x31ff	                            xor edi, edi	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x40067fd	      0xba05000000	                              mov edx, 5	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4006802	      0xbe00000000	                              mov esi, 0	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4006807	      0xe800000000	                          call 0x400680c	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400680c	          0x4889c7	                            mov rdi, rax	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400680f	      0xe800000000	                          call 0x4006814	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4006814	         0xf1f4000	                         nop dword [rax]	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x4006818	    0x48833d000000	               cmp qword [0x04006820], 0	      9761	syntax.c	FUNCTION_154	IF_3
0x4006820	     0xf840b010000	                            je 0x4006931	      9761	syntax.c	FUNCTION_154	IF_3
0x4006826	    0x813d00000000	         cmp dword [0x04006830], 0x4e1f 	      9767	syntax.c	FUNCTION_154	IF_4
0x4006830	     0xf8fd2000000	                            jg 0x4006908	      9767	syntax.c	FUNCTION_154	IF_4
0x4006836	      0xbe01000000	                              mov esi, 1	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x400683b	      0xbf00000000	                              mov edi, 0	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4006840	      0xe800000000	                          call 0x4006845	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4006845	            0x85c0	                           test eax, eax	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4006847	          0x4189c4	                           mov r12d, eax	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x400684a	     0xf8413ffffff	                            je 0x4006763	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x4006850	    0x486305000000	         movsxd rax, dword [0x04006857] 	        90	string3.h	FUNCTION_173	CALL_6
0x4006857	        0x488d14c0	                  lea rdx, [rax + rax*8]	        90	string3.h	FUNCTION_173	CALL_6
0x400685b	        0x488d1450	                  lea rdx, [rax + rdx*2]	        90	string3.h	FUNCTION_173	CALL_6
0x400685f	    0x488b05000000	            mov rax, qword [0x04006866] 	        90	string3.h	FUNCTION_173	CALL_6
0x4006866	        0x488d04d0	                  lea rax, [rax + rdx*8]	        90	string3.h	FUNCTION_173	CALL_6
0x400686a	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x400686e	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4006875	    0x48c780900000	               mov qword [rax + 0x90], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4006880	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x4006884	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x4006887	    0x8d8898000000	                   lea ecx, [rax + 0x98]	        90	string3.h	FUNCTION_173	CALL_6
0x400688d	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x400688f	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x4006892	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x4006895	          0x4889ef	                            mov rdi, rbp	      9785	syntax.c	FUNCTION_154	CALL_16
0x4006898	    0x486305000000	         movsxd rax, dword [0x0400689f] 	      9784	syntax.c	FUNCTION_154
0x400689f	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9784	syntax.c	FUNCTION_154
0x40068a3	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9784	syntax.c	FUNCTION_154
0x40068a7	    0x488b05000000	            mov rax, qword [0x040068ae] 	      9784	syntax.c	FUNCTION_154
0x40068ae	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      9784	syntax.c	FUNCTION_154
0x40068b2	          0x48892b	                    mov qword [rbx], rbp	      9784	syntax.c	FUNCTION_154
0x40068b5	      0xe800000000	                          call 0x40068ba	      9785	syntax.c	FUNCTION_154	CALL_16
0x40068ba	        0x48894308	                mov qword [rbx + 8], rax	      9785	syntax.c	FUNCTION_154	CALL_16
0x40068be	    0x486305000000	         movsxd rax, dword [0x040068c5] 	      9787	syntax.c	FUNCTION_154
0x40068c5	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9787	syntax.c	FUNCTION_154
0x40068c9	          0x4989c4	                            mov r12, rax	      9787	syntax.c	FUNCTION_154
0x40068cc	        0x4183c401	                             add r12d, 1	      9793	syntax.c	FUNCTION_154
0x40068d0	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9787	syntax.c	FUNCTION_154
0x40068d4	    0x488b05000000	            mov rax, qword [0x040068db] 	      9787	syntax.c	FUNCTION_154
0x40068db	    0x448925000000	           mov dword [0x040068e2], r12d 	      9793	syntax.c	FUNCTION_154
0x40068e2	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9787	syntax.c	FUNCTION_154
0x40068e6	    0x48c7404899d4	mov qword [rax + 0x48], 0xffffffffffffd499	      9787	syntax.c	FUNCTION_154
0x40068ee	    0x48c7404099d4	mov qword [rax + 0x40], 0xffffffffffffd499	      9788	syntax.c	FUNCTION_154
0x40068f6	    0x48c7405099d4	mov qword [rax + 0x50], 0xffffffffffffd499	      9790	syntax.c	FUNCTION_154
0x40068fe	      0xe968feffff	                           jmp 0x400676b	      9790	syntax.c	FUNCTION_154
0x4006903	       0xf1f440000	                   nop dword [rax + rax]	      9790	syntax.c	FUNCTION_154
0x4006908	      0xba05000000	                              mov edx, 5	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x400690d	      0xbe00000000	                              mov esi, 0	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4006912	            0x31ff	                            xor edi, edi	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4006914	      0xe800000000	                          call 0x4006919	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4006919	          0x4889c7	                            mov rdi, rax	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x400691c	          0x4531e4	                          xor r12d, r12d	      9771	syntax.c	FUNCTION_154	IF_4
0x400691f	      0xe800000000	                          call 0x4006924	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x4006924	          0x4889ef	                            mov rdi, rbp	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x4006927	      0xe800000000	                          call 0x400692c	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x400692c	      0xe93afeffff	                           jmp 0x400676b	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x4006931	    0xc70500000000	           mov dword [0x0400693b], 0x98 	      9763	syntax.c	FUNCTION_154	IF_3
0x400693b	    0xc70500000000	            mov dword [0x04006945], 0xa 	      9764	syntax.c	FUNCTION_154	IF_3
0x4006945	      0xe9dcfeffff	                           jmp 0x4006826	      9764	syntax.c	FUNCTION_154	IF_3
free_highlight_fonts	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,1:functions,0:CALL,7	25
0x400ebc0	    0x8b1500000000	            mov edx, dword [0x0400ebc6] 	     10352	syntax.c	FUNCTION_169	FOR_1
0x400ebc6	    0x488b05000000	            mov rax, qword [0x0400ebcd] 	     10352	syntax.c	FUNCTION_169	FOR_1
0x400ebcd	            0x85d2	                           test edx, edx	     10352	syntax.c	FUNCTION_169	FOR_1
0x400ebcf	            0x7e4d	                           jle 0x400ec1e	     10352	syntax.c	FUNCTION_169	FOR_1
0x400ebd1	              0x55	                                push rbp	     10349	syntax.c	FUNCTION_169
0x400ebd2	              0x53	                                push rbx	     10349	syntax.c	FUNCTION_169
0x400ebd3	            0x31ed	                            xor ebp, ebp	     10349	syntax.c	FUNCTION_169
0x400ebd5	            0x31db	                            xor ebx, ebx	     10349	syntax.c	FUNCTION_169
0x400ebd7	        0x4883ec08	                              sub rsp, 8	     10349	syntax.c	FUNCTION_169
0x400ebdb	       0xf1f440000	                   nop dword [rax + rax]	     10349	syntax.c	FUNCTION_169
0x400ebe0	      0x488b7c1858	      mov rdi, qword [rax + rbx + 0x58] 	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x400ebe5	          0x83c501	                              add ebp, 1	     10352	syntax.c	FUNCTION_169	FOR_1
0x400ebe8	      0xe800000000	                          call 0x400ebed	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x400ebed	    0x488b05000000	            mov rax, qword [0x0400ebf4] 	     10355	syntax.c	FUNCTION_169	FOR_1
0x400ebf4	    0x48c744185800	         mov qword [rax + rbx + 0x58], 0	     10355	syntax.c	FUNCTION_169	FOR_1
0x400ebfd	    0x4881c3980000	                           add rbx, 0x98	     10355	syntax.c	FUNCTION_169	FOR_1
0x400ec04	    0x392d00000000	            cmp dword [0x0400ec0a], ebp 	     10352	syntax.c	FUNCTION_169	FOR_1
0x400ec0a	            0x7fd4	                            jg 0x400ebe0	     10352	syntax.c	FUNCTION_169	FOR_1
0x400ec0c	    0x488b3d000000	            mov rdi, qword [0x0400ec13] 	     10362	syntax.c	FUNCTION_169	CALL_3
0x400ec13	        0x4883c408	                              add rsp, 8	     10371	syntax.c	FUNCTION_169
0x400ec17	              0x5b	                                 pop rbx	     10371	syntax.c	FUNCTION_169
0x400ec18	              0x5d	                                 pop rbp	     10371	syntax.c	FUNCTION_169
0x400ec19	      0xe900000000	                           jmp 0x400ec1e	     10362	syntax.c	FUNCTION_169	CALL_3
0x400ec1e	    0x488b3d000000	            mov rdi, qword [0x0400ec25] 	     10362	syntax.c	FUNCTION_169	CALL_3
0x400ec25	      0xe900000000	                   jmp section_end..text	     10362	syntax.c	FUNCTION_169	CALL_3
limit_pos_zero	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,1:FOR,0:functions,0:CALL,1	19
0x4003060	          0x488b07	                    mov rax, qword [rdi]	      3188	syntax.c	FUNCTION_39	IF_1
0x4003063	          0x4885c0	                           test rax, rax	      3188	syntax.c	FUNCTION_39	IF_1
0x4003066	            0x7410	                            je 0x4003078	      3188	syntax.c	FUNCTION_39	IF_1
0x4003068	          0x483b06	                    cmp rax, qword [rsi]	      3174	syntax.c	FUNCTION_38	IF_1
0x400306b	            0x7f0b	                            jg 0x4003078	      3174	syntax.c	FUNCTION_38	IF_1
0x400306d	            0x7421	                            je 0x4003090	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400306f	            0xf3c3	                                     ret	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003071	     0xf1f80000000	                         nop dword [rax]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003078	          0x488b06	                    mov rax, qword [rsi]	      3189	syntax.c	FUNCTION_39	IF_1
0x400307b	        0x488b5608	                mov rdx, qword [rsi + 8]	      3189	syntax.c	FUNCTION_39	IF_1
0x400307f	          0x488907	                    mov qword [rdi], rax	      3189	syntax.c	FUNCTION_39	IF_1
0x4003082	        0x48895708	                mov qword [rdi + 8], rdx	      3189	syntax.c	FUNCTION_39	IF_1
0x4003086	              0xc3	                                     ret	      3189	syntax.c	FUNCTION_39	IF_1
0x4003087	    0x660f1f840000	                    nop word [rax + rax]	      3189	syntax.c	FUNCTION_39	IF_1
0x4003090	          0x8b4608	                mov eax, dword [rsi + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003093	          0x394708	                cmp dword [rdi + 8], eax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003096	            0x7ed7	                           jle 0x400306f	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003098	          0x894708	                mov dword [rdi + 8], eax	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400309b	              0xc3	                                     ret	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
syn_set_timeout	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	2
0x4003b90	    0x48893d000000	            mov qword [0x04003b97], rdi 	       502	syntax.c	FUNCTION_1
0x4003b97	              0xc3	                                     ret	       502	syntax.c	FUNCTION_1
syn_get_foldlevel	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,0:FOR,1:functions,0:CALL,1	41
0x400ad50	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      6646	syntax.c	FUNCTION_106	IF_1
0x400ad54	              0x53	                                push rbx	      6641	syntax.c	FUNCTION_106
0x400ad55	          0x4889fb	                            mov rbx, rdi	      6641	syntax.c	FUNCTION_106
0x400ad58	    0x8b900c030000	           mov edx, dword [rax + 0x30c] 	      6646	syntax.c	FUNCTION_106	IF_1
0x400ad5e	            0x85d2	                           test edx, edx	      6646	syntax.c	FUNCTION_106	IF_1
0x400ad60	            0x740a	                            je 0x400ad6c	      6646	syntax.c	FUNCTION_106	IF_1
0x400ad62	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      6647	syntax.c	FUNCTION_106	IF_1
0x400ad68	            0x85c0	                           test eax, eax	      6647	syntax.c	FUNCTION_106	IF_1
0x400ad6a	            0x7424	                            je 0x400ad90	      6647	syntax.c	FUNCTION_106	IF_1
0x400ad6c	            0x31c9	                            xor ecx, ecx	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400ad6e	            0x31c0	                            xor eax, eax	      6642	syntax.c	FUNCTION_106
0x400ad70	    0x488b93100200	           mov rdx, qword [rbx + 0x210] 	      6659	syntax.c	FUNCTION_106	IF_3
0x400ad77	          0x4839ca	                            cmp rdx, rcx	      6659	syntax.c	FUNCTION_106	IF_3
0x400ad7a	            0x7d0a	                           jge 0x400ad86	      6659	syntax.c	FUNCTION_106	IF_3
0x400ad7c	            0x85d2	                           test edx, edx	      6659	syntax.c	FUNCTION_106	IF_3
0x400ad7e	      0xb800000000	                              mov eax, 0	      6659	syntax.c	FUNCTION_106	IF_3
0x400ad83	           0xf49c2	                         cmovns eax, edx	      6659	syntax.c	FUNCTION_106	IF_3
0x400ad86	              0x5b	                                 pop rbx	      6666	syntax.c	FUNCTION_106
0x400ad87	              0xc3	                                     ret	      6666	syntax.c	FUNCTION_106
0x400ad88	     0xf1f84000000	                   nop dword [rax + rax]	      6666	syntax.c	FUNCTION_106
0x400ad90	      0xe800000000	                          call 0x400ad95	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0x400ad95	    0x8b0500000000	            mov eax, dword [0x0400ad9b] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400ad9b	            0x85c0	                           test eax, eax	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400ad9d	            0x7ecd	                           jle 0x400ad6c	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400ad9f	    0x488b0d000000	            mov rcx, qword [0x0400ada6] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400ada6	          0x83e801	                              sub eax, 1	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400ada9	        0x488d04c0	                  lea rax, [rax + rax*8]	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400adad	        0x488d5168	                   lea rdx, [rcx + 0x68]	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400adb1	        0x48c1e004	                              shl rax, 4	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400adb5	    0x488db401f800	            lea rsi, [rcx + rax + 0xf8] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400adbd	            0x31c0	                            xor eax, eax	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400adbf	              0x90	                                     nop	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400adc0	          0x488b0a	                    mov rcx, qword [rdx]	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400adc3	    0x81e100200000	                         and ecx, 0x2000	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400adc9	        0x4883f901	                              cmp rcx, 1	      6657	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400adcd	          0x83d8ff	             sbb eax, 0xffffffffffffffff	      6657	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400add0	    0x4881c2900000	                           add rdx, 0x90	      6657	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0x400add7	          0x4839f2	                            cmp rdx, rsi	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400adda	            0x75e4	                           jne 0x400adc0	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400addc	          0x4863c8	                         movsxd rcx, eax	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400addf	            0xeb8f	                           jmp 0x400ad70	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
hl_has_settings	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	37
0x4000230	          0x4863ff	                         movsxd rdi, edi	      8340	syntax.c	FUNCTION_119
0x4000233	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      8340	syntax.c	FUNCTION_119
0x4000237	        0x488d1447	                  lea rdx, [rdi + rax*2]	      8340	syntax.c	FUNCTION_119
0x400023b	    0x488b05000000	            mov rax, qword [0x04000242] 	      8340	syntax.c	FUNCTION_119
0x4000242	        0x488d14d0	                  lea rdx, [rax + rdx*8]	      8340	syntax.c	FUNCTION_119
0x4000246	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119
0x400024b	        0x448b4a28	            mov r9d, dword [rdx + 0x28] 	      8351	syntax.c	FUNCTION_119
0x400024f	          0x4585c9	                           test r9d, r9d	      8351	syntax.c	FUNCTION_119
0x4000252	            0x752a	                           jne 0x400027e	      8351	syntax.c	FUNCTION_119
0x4000254	        0x448b423c	            mov r8d, dword [rdx + 0x3c] 	      8341	syntax.c	FUNCTION_119
0x4000258	          0x4585c0	                           test r8d, r8d	      8341	syntax.c	FUNCTION_119
0x400025b	            0x7521	                           jne 0x400027e	      8341	syntax.c	FUNCTION_119
0x400025d	          0x8b7a34	            mov edi, dword [rdx + 0x34] 	      8342	syntax.c	FUNCTION_119
0x4000260	            0x85ff	                           test edi, edi	      8342	syntax.c	FUNCTION_119
0x4000262	            0x751a	                           jne 0x400027e	      8342	syntax.c	FUNCTION_119
0x4000264	          0x8b4a38	            mov ecx, dword [rdx + 0x38] 	      8343	syntax.c	FUNCTION_119
0x4000267	            0x85c9	                           test ecx, ecx	      8343	syntax.c	FUNCTION_119
0x4000269	            0x7513	                           jne 0x400027e	      8343	syntax.c	FUNCTION_119
0x400026b	          0x8b4268	            mov eax, dword [rdx + 0x68] 	      8345	syntax.c	FUNCTION_119
0x400026e	            0x85c0	                           test eax, eax	      8345	syntax.c	FUNCTION_119
0x4000270	            0x7507	                           jne 0x4000279	      8345	syntax.c	FUNCTION_119
0x4000272	      0x48837a7000	               cmp qword [rdx + 0x70], 0	      8346	syntax.c	FUNCTION_119
0x4000277	            0x7407	                            je 0x4000280	      8346	syntax.c	FUNCTION_119
0x4000279	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119
0x400027e	            0xf3c3	                                     ret	      8352	syntax.c	FUNCTION_119
0x4000280	      0x48837a7800	               cmp qword [rdx + 0x78], 0	      8347	syntax.c	FUNCTION_119
0x4000285	            0x75f2	                           jne 0x4000279	      8347	syntax.c	FUNCTION_119
0x4000287	    0x4883ba800000	               cmp qword [rdx + 0x80], 0	      8348	syntax.c	FUNCTION_119
0x400028f	            0x75e8	                           jne 0x4000279	      8348	syntax.c	FUNCTION_119
0x4000291	      0x48837a6000	               cmp qword [rdx + 0x60], 0	      8349	syntax.c	FUNCTION_119
0x4000296	            0x75e1	                           jne 0x4000279	      8349	syntax.c	FUNCTION_119
0x4000298	            0x85f6	                           test esi, esi	      8351	syntax.c	FUNCTION_119
0x400029a	            0x74e2	                            je 0x400027e	      8351	syntax.c	FUNCTION_119
0x400029c	    0x8b828c000000	            mov eax, dword [rdx + 0x8c] 	      8351	syntax.c	FUNCTION_119
0x40002a2	          0xc1e803	                              shr eax, 3	      8351	syntax.c	FUNCTION_119
0x40002a5	          0x83e001	                              and eax, 1	      8351	syntax.c	FUNCTION_119
0x40002a8	              0xc3	                                     ret	      8351	syntax.c	FUNCTION_119
ex_syntime	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,4:FOR,0:functions,0:CALL,8	289
0x40044b0	            0x4157	                                push r15	      6675	syntax.c	FUNCTION_107
0x40044b2	            0x4156	                                push r14	      6675	syntax.c	FUNCTION_107
0x40044b4	            0x4155	                                push r13	      6675	syntax.c	FUNCTION_107
0x40044b6	            0x4154	                                push r12	      6675	syntax.c	FUNCTION_107
0x40044b8	              0x55	                                push rbp	      6675	syntax.c	FUNCTION_107
0x40044b9	              0x53	                                push rbx	      6675	syntax.c	FUNCTION_107
0x40044ba	        0x4883ec48	                           sub rsp, 0x48	      6675	syntax.c	FUNCTION_107
0x40044be	          0x488b1f	                    mov rbx, qword [rdi]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x40044c1	    0x64488b042528	                mov rax, qword fs:[0x28]	      6675	syntax.c	FUNCTION_107
0x40044ca	      0x4889442438	             mov qword [rsp + 0x38], rax	      6675	syntax.c	FUNCTION_107
0x40044cf	            0x31c0	                            xor eax, eax	      6675	syntax.c	FUNCTION_107
0x40044d1	          0x803b6f	                    cmp byte [rbx], 0x6f	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x40044d4	            0x744a	                            je 0x4004520	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x40044d6	      0xbf00000000	                              mov edi, 0	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x40044db	      0xb906000000	                              mov ecx, 6	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x40044e0	          0x4889de	                            mov rsi, rbx	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x40044e3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x40044e5	     0xf8405040000	                            je 0x40048f0	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x40044eb	      0xbf00000000	                              mov edi, 0	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x40044f0	      0xb907000000	                              mov ecx, 7	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x40044f5	          0x4889de	                            mov rsi, rbx	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x40044f8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x40044fa	     0xf8490000000	                            je 0x4004590	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x4004500	            0x31ff	                            xor edi, edi	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004502	      0xba05000000	                              mov edx, 5	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004507	      0xbe00000000	                              mov esi, 0	      6685	syntax.c	FUNCTION_107	CALL_8
0x400450c	      0xe800000000	                          call 0x4004511	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004511	          0x4889de	                            mov rsi, rbx	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004514	          0x4889c7	                            mov rdi, rax	      6685	syntax.c	FUNCTION_107	CALL_8
0x4004517	      0xe800000000	                          call 0x400451c	      6685	syntax.c	FUNCTION_107	CALL_8
0x400451c	            0xeb1a	                           jmp 0x4004538	      6686	syntax.c	FUNCTION_107
0x400451e	            0x6690	                                     nop	      6686	syntax.c	FUNCTION_107
0x4004520	         0xfb64301	               movzx eax, byte [rbx + 1]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4004524	            0x3c6e	                            cmp al, 0x6e	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4004526	            0x7538	                           jne 0x4004560	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x4004528	        0x807b0200	                   cmp byte [rbx + 2], 0	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400452c	            0x75a8	                           jne 0x40044d6	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400452e	    0xc70500000000	               mov dword [0x04004538], 1	      6677	syntax.c	FUNCTION_107	IF_1
0x4004538	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6686	syntax.c	FUNCTION_107
0x400453d	    0x644833042528	                xor rax, qword fs:[0x28]	      6686	syntax.c	FUNCTION_107
0x4004546	     0xf8592040000	                           jne 0x40049de	      6686	syntax.c	FUNCTION_107
0x400454c	        0x4883c448	                           add rsp, 0x48	      6686	syntax.c	FUNCTION_107
0x4004550	              0x5b	                                 pop rbx	      6686	syntax.c	FUNCTION_107
0x4004551	              0x5d	                                 pop rbp	      6686	syntax.c	FUNCTION_107
0x4004552	            0x415c	                                 pop r12	      6686	syntax.c	FUNCTION_107
0x4004554	            0x415d	                                 pop r13	      6686	syntax.c	FUNCTION_107
0x4004556	            0x415e	                                 pop r14	      6686	syntax.c	FUNCTION_107
0x4004558	            0x415f	                                 pop r15	      6686	syntax.c	FUNCTION_107
0x400455a	              0xc3	                                     ret	      6686	syntax.c	FUNCTION_107
0x400455b	       0xf1f440000	                   nop dword [rax + rax]	      6686	syntax.c	FUNCTION_107
0x4004560	            0x3c66	                            cmp al, 0x66	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4004562	     0xf856effffff	                           jne 0x40044d6	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4004568	        0x807b0266	                cmp byte [rbx + 2], 0x66	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400456c	     0xf8564ffffff	                           jne 0x40044d6	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4004572	        0x807b0300	                   cmp byte [rbx + 3], 0	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x4004576	     0xf855affffff	                           jne 0x40044d6	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400457c	    0xc70500000000	               mov dword [0x04004586], 0	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x4004586	            0xebb0	                           jmp 0x4004538	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x4004588	     0xf1f84000000	                   nop dword [rax + rax]	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x4004590	    0x488b05000000	            mov rax, qword [0x04004597] 	      6445	syntax.c	FUNCTION_97
0x4004597	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6445	syntax.c	FUNCTION_97
0x400459b	    0x448b88600200	           mov r9d, dword [rax + 0x260] 	      6448	syntax.c	FUNCTION_97
0x40045a2	          0x4585c9	                           test r9d, r9d	      6448	syntax.c	FUNCTION_97
0x40045a5	            0x7510	                           jne 0x40045b7	      6448	syntax.c	FUNCTION_97
0x40045a7	    0x448b80780200	           mov r8d, dword [rax + 0x278] 	      6446	syntax.c	FUNCTION_97
0x40045ae	          0x4585c0	                           test r8d, r8d	      6446	syntax.c	FUNCTION_97
0x40045b1	     0xf8409040000	                            je 0x40049c0	      6446	syntax.c	FUNCTION_97
0x40045b7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6783	syntax.c	FUNCTION_112	CALL_4
0x40045bc	      0xba32000000	                           mov edx, 0x32	      6783	syntax.c	FUNCTION_112	CALL_4
0x40045c1	      0xbe48000000	                           mov esi, 0x48	      6783	syntax.c	FUNCTION_112	CALL_4
0x40045c6	          0x4531f6	                          xor r14d, r14d	      6785	syntax.c	FUNCTION_112	FOR_1
0x40045c9	            0x31ed	                            xor ebp, ebp	      6785	syntax.c	FUNCTION_112	FOR_1
0x40045cb	          0x4531ed	                          xor r13d, r13d	      6785	syntax.c	FUNCTION_112	FOR_1
0x40045ce	      0xe800000000	                          call 0x40045d3	      6783	syntax.c	FUNCTION_112	CALL_4
0x40045d3	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6784	syntax.c	FUNCTION_112	CALL_5
0x40045d8	      0xe800000000	                          call 0x40045dd	      6784	syntax.c	FUNCTION_112	CALL_5
0x40045dd	    0x488b15000000	            mov rdx, qword [0x040045e4] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x40045e4	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x40045e8	    0x8b8860020000	           mov ecx, dword [rax + 0x260] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x40045ee	            0x85c9	                           test ecx, ecx	      6785	syntax.c	FUNCTION_112	FOR_1
0x40045f0	     0xf8eef000000	                           jle 0x40046e5	      6785	syntax.c	FUNCTION_112	FOR_1
0x40045f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6785	syntax.c	FUNCTION_112	FOR_1
0x4004600	          0x4c89f3	                            mov rbx, r14	      6787	syntax.c	FUNCTION_112	FOR_1
0x4004603	    0x480398700200	            add rbx, qword [rax + 0x270]	      6787	syntax.c	FUNCTION_112	FOR_1
0x400460a	    0x4883bb900000	               cmp qword [rbx + 0x90], 0	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004612	     0xf8eb1000000	                           jle 0x40046c9	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004618	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400461d	      0xbe01000000	                              mov esi, 1	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x4004622	        0x4c8d7b70	                   lea r15, [rbx + 0x70]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x4004626	      0xe800000000	                          call 0x400462b	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400462b	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004630	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x4004635	          0x4c89fe	                            mov rsi, r15	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x4004638	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400463c	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004641	        0x4c8d24d0	                  lea r12, [rax + rdx*8]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004645	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004649	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400464d	        0x49890424	                    mov qword [r12], rax	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004651	      0x4989542408	                mov qword [r12 + 8], rdx	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004656	      0xe800000000	                          call 0x400465b	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400465b	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004662	    0x488bb3900000	            mov rsi, qword [rbx + 0x90] 	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004669	          0x4c89ff	                            mov rdi, r15	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400466c	    0x488b93880000	            mov rdx, qword [rbx + 0x88] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004673	      0x4189442414	             mov dword [r12 + 0x14], eax	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004678	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400467f	             0x1f5	                            add ebp, esi	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004681	      0x4989542420	             mov qword [r12 + 0x20], rdx	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004686	      0x4189742410	             mov dword [r12 + 0x10], esi	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400468b	          0x4889e2	                            mov rdx, rsp	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400468e	      0x4989442418	             mov qword [r12 + 0x18], rax	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x4004693	      0xe800000000	                          call 0x4004698	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x4004698	        0x488b0424	                    mov rax, qword [rsp]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400469c	      0x488b542408	                mov rdx, qword [rsp + 8]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046a1	      0x8344242001	               add dword [rsp + 0x20], 1	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046a6	      0x4989442428	             mov qword [r12 + 0x28], rax	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046ab	         0xfbf4354	           movsx eax, word [rbx + 0x54] 	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046af	      0x4989542430	             mov qword [r12 + 0x30], rdx	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046b4	    0x488b15000000	            mov rdx, qword [0x040046bb] 	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046bb	      0x4189442438	             mov dword [r12 + 0x38], eax	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046c0	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046c4	      0x4989442440	             mov qword [r12 + 0x40], rax	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x40046c9	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x40046cd	        0x4183c501	                             add r13d, 1	      6785	syntax.c	FUNCTION_112	FOR_1
0x40046d1	    0x4981c6a00000	                           add r14, 0xa0	      6785	syntax.c	FUNCTION_112	FOR_1
0x40046d8	    0x443ba8600200	          cmp r13d, dword [rax + 0x260] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x40046df	     0xf8c1bffffff	                            jl 0x4004600	      6785	syntax.c	FUNCTION_112	FOR_1
0x40046e5	      0x4863742420	         movsxd rsi, dword [rsp + 0x20] 	      6810	syntax.c	FUNCTION_112	IF_3
0x40046ea	          0x83fe01	                              cmp esi, 1	      6810	syntax.c	FUNCTION_112	IF_3
0x40046ed	            0x7e14	                           jle 0x4004703	      6810	syntax.c	FUNCTION_112	IF_3
0x40046ef	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x40046f4	      0xb900000000	                              mov ecx, 0	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x40046f9	      0xba48000000	                           mov edx, 0x48	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x40046fe	      0xe800000000	                          call 0x4004703	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x4004703	      0xba05000000	                              mov edx, 5	      6814	syntax.c	FUNCTION_112	CALL_11
0x4004708	      0xbe00000000	                              mov esi, 0	      6814	syntax.c	FUNCTION_112	CALL_11
0x400470d	            0x31ff	                            xor edi, edi	      6814	syntax.c	FUNCTION_112	CALL_11
0x400470f	      0xe800000000	                          call 0x4004714	      6814	syntax.c	FUNCTION_112	CALL_11
0x4004714	          0x4889c7	                            mov rdi, rax	      6814	syntax.c	FUNCTION_112	CALL_11
0x4004717	      0xe800000000	                          call 0x400471c	      6814	syntax.c	FUNCTION_112	CALL_11
0x400471c	      0xbf00000000	                              mov edi, 0	      6815	syntax.c	FUNCTION_112	CALL_12
0x4004721	      0xe800000000	                          call 0x4004726	      6815	syntax.c	FUNCTION_112	CALL_12
0x4004726	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x400472a	            0x85ff	                           test edi, edi	      6816	syntax.c	FUNCTION_112	FOR_2
0x400472c	     0xf8e66010000	                           jle 0x4004898	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004732	    0x8b0500000000	            mov eax, dword [0x04004738] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004738	            0x85c0	                           test eax, eax	      6816	syntax.c	FUNCTION_112	FOR_2
0x400473a	     0xf8558010000	                           jne 0x4004898	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004740	          0x4531f6	                          xor r14d, r14d	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004743	          0x4531ed	                          xor r13d, r13d	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004746	            0xeb1a	                           jmp 0x4004762	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004748	     0xf1f84000000	                   nop dword [rax + rax]	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004750	    0x8b0500000000	            mov eax, dword [0x04004756] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004756	        0x4983c648	                           add r14, 0x48	      6816	syntax.c	FUNCTION_112	FOR_2
0x400475a	            0x85c0	                           test eax, eax	      6816	syntax.c	FUNCTION_112	FOR_2
0x400475c	     0xf8536010000	                           jne 0x4004898	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004762	          0x4c89f3	                            mov rbx, r14	      6818	syntax.c	FUNCTION_112	FOR_2
0x4004765	      0x48035c2430	             add rbx, qword [rsp + 0x30]	      6818	syntax.c	FUNCTION_112	FOR_2
0x400476a	          0x4889df	                            mov rdi, rbx	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400476d	      0xe800000000	                          call 0x4004772	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x4004772	          0x4889c7	                            mov rdi, rax	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x4004775	      0xe800000000	                          call 0x400477a	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400477a	      0xbf00000000	                              mov edi, 0	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x400477f	      0xe800000000	                          call 0x4004784	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x4004784	      0xbf0d000000	                            mov edi, 0xd	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_16
0x4004789	      0xe800000000	                          call 0x400478e	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_16
0x400478e	        0x48637b10	         movsxd rdi, dword [rbx + 0x10] 	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x4004792	      0xe800000000	                          call 0x4004797	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x4004797	      0xbf00000000	                              mov edi, 0	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_18
0x400479c	      0xe800000000	                          call 0x40047a1	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_18
0x40047a1	      0xbf14000000	                           mov edi, 0x14	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_19
0x40047a6	      0xe800000000	                          call 0x40047ab	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_19
0x40047ab	        0x48637b14	         movsxd rdi, dword [rbx + 0x14] 	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x40047af	      0xe800000000	                          call 0x40047b4	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x40047b4	      0xbf00000000	                              mov edi, 0	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_21
0x40047b9	      0xe800000000	                          call 0x40047be	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_21
0x40047be	      0xbf1a000000	                           mov edi, 0x1a	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_22
0x40047c3	      0xe800000000	                          call 0x40047c8	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_22
0x40047c8	        0x488d7b18	                   lea rdi, [rbx + 0x18]	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x40047cc	      0xe800000000	                          call 0x40047d1	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x40047d1	          0x4889c7	                            mov rdi, rax	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x40047d4	      0xe800000000	                          call 0x40047d9	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x40047d9	      0xbf00000000	                              mov edi, 0	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x40047de	      0xe800000000	                          call 0x40047e3	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x40047e3	      0xbf26000000	                           mov edi, 0x26	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_26
0x40047e8	      0xe800000000	                          call 0x40047ed	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_26
0x40047ed	        0x488d7b28	                   lea rdi, [rbx + 0x28]	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x40047f1	      0xe800000000	                          call 0x40047f6	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x40047f6	          0x4889c7	                            mov rdi, rax	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x40047f9	      0xe800000000	                          call 0x40047fe	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x40047fe	      0xbf00000000	                              mov edi, 0	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x4004803	      0xe800000000	                          call 0x4004808	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x4004808	      0xbf32000000	                           mov edi, 0x32	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_30
0x400480d	      0xe800000000	                          call 0x4004812	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_30
0x4004812	        0x48634338	         movsxd rax, dword [rbx + 0x38] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x4004816	    0x488b35000000	            mov rsi, qword [0x0400481d] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400481d	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x4004821	        0x488d0450	                  lea rax, [rax + rdx*2]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x4004825	        0x488d04c6	                  lea rax, [rsi + rax*8]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x4004829	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x4004830	      0xe800000000	                          call 0x4004835	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x4004835	      0xbf00000000	                              mov edi, 0	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_32
0x400483a	      0xe800000000	                          call 0x400483f	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_32
0x400483f	      0xbf45000000	                           mov edi, 0x45	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x4004844	      0xe800000000	                          call 0x4004849	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x4004849	    0x488b15000000	            mov rdx, qword [0x04004850] 	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0x4004850	        0x488b5b40	            mov rbx, qword [rbx + 0x40] 	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x4004854	      0xbe14000000	                           mov esi, 0x14	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x4004859	          0x8d42ba	                   lea eax, [rdx - 0x46]	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400485c	        0x4883fa50	                           cmp rdx, 0x50	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x4004860	          0x4889df	                            mov rdi, rbx	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x4004863	           0xf4df0	                         cmovge esi, eax	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x4004866	          0x4189f4	                           mov r12d, esi	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x4004869	      0xe800000000	                          call 0x400486e	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400486e	          0x4489e6	                           mov esi, r12d	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x4004871	          0x4439e0	                           cmp eax, r12d	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x4004874	          0x4889df	                            mov rdi, rbx	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x4004877	           0xf4ef0	                         cmovle esi, eax	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400487a	        0x4183c501	                             add r13d, 1	      6816	syntax.c	FUNCTION_112	FOR_2
0x400487e	      0xe800000000	                          call 0x4004883	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x4004883	      0xbf00000000	                              mov edi, 0	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_37
0x4004888	      0xe800000000	                          call 0x400488d	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_37
0x400488d	      0x443b6c2420	           cmp r13d, dword [rsp + 0x20] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004892	     0xf8cb8feffff	                            jl 0x4004750	      6816	syntax.c	FUNCTION_112	FOR_2
0x4004898	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6850	syntax.c	FUNCTION_112	CALL_38
0x400489d	      0xe800000000	                          call 0x40048a2	      6850	syntax.c	FUNCTION_112	CALL_38
0x40048a2	    0x8b0500000000	            mov eax, dword [0x040048a8] 	      6851	syntax.c	FUNCTION_112	IF_6
0x40048a8	            0x85c0	                           test eax, eax	      6851	syntax.c	FUNCTION_112	IF_6
0x40048aa	     0xf8588fcffff	                           jne 0x4004538	      6851	syntax.c	FUNCTION_112	IF_6
0x40048b0	      0xbf00000000	                              mov edi, 0	      6853	syntax.c	FUNCTION_112	IF_6	CALL_39
0x40048b5	      0xe800000000	                          call 0x40048ba	      6853	syntax.c	FUNCTION_112	IF_6	CALL_39
0x40048ba	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x40048bf	      0xe800000000	                          call 0x40048c4	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x40048c4	          0x4889c7	                            mov rdi, rax	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x40048c7	      0xe800000000	                          call 0x40048cc	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x40048cc	      0xbf0d000000	                            mov edi, 0xd	      6855	syntax.c	FUNCTION_112	IF_6	CALL_42
0x40048d1	      0xe800000000	                          call 0x40048d6	      6855	syntax.c	FUNCTION_112	IF_6	CALL_42
0x40048d6	          0x4863fd	                         movsxd rdi, ebp	      6856	syntax.c	FUNCTION_112	IF_6	CALL_43
0x40048d9	      0xe800000000	                          call 0x40048de	      6856	syntax.c	FUNCTION_112	IF_6	CALL_43
0x40048de	      0xbf00000000	                              mov edi, 0	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x40048e3	      0xe800000000	                          call 0x40048e8	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x40048e8	      0xe94bfcffff	                           jmp 0x4004538	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x40048ed	           0xf1f00	                         nop dword [rax]	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x40048f0	    0x488b05000000	            mov rax, qword [0x040048f7] 	      6445	syntax.c	FUNCTION_97
0x40048f7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6445	syntax.c	FUNCTION_97
0x40048fb	    0x83b860020000	              cmp dword [rax + 0x260], 0	      6448	syntax.c	FUNCTION_97
0x4004902	            0x754c	                           jne 0x4004950	      6448	syntax.c	FUNCTION_97
0x4004904	    0x448b90780200	          mov r10d, dword [rax + 0x278] 	      6446	syntax.c	FUNCTION_97
0x400490b	          0x4585d2	                         test r10d, r10d	      6446	syntax.c	FUNCTION_97
0x400490e	     0xf8524fcffff	                           jne 0x4004538	      6446	syntax.c	FUNCTION_97
0x4004914	      0x4883780800	                  cmp qword [rax + 8], 0	      6447	syntax.c	FUNCTION_97
0x4004919	     0xf8519fcffff	                           jne 0x4004538	      6447	syntax.c	FUNCTION_97
0x400491f	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      6448	syntax.c	FUNCTION_97
0x4004927	     0xf850bfcffff	                           jne 0x4004538	      6448	syntax.c	FUNCTION_97
0x400492d	            0x31ff	                            xor edi, edi	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400492f	      0xba05000000	                              mov edx, 5	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4004934	      0xbe00000000	                              mov esi, 0	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4004939	      0xe800000000	                          call 0x400493e	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400493e	          0x4889c7	                            mov rdi, rax	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4004941	      0xe800000000	                          call 0x4004946	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4004946	      0xe9edfbffff	                           jmp 0x4004538	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400494b	       0xf1f440000	                   nop dword [rax + rax]	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x4004950	     0xf8ee2fbffff	                           jle 0x4004538	      6711	syntax.c	FUNCTION_109	FOR_1
0x4004956	          0x4531e4	                          xor r12d, r12d	      6711	syntax.c	FUNCTION_109	FOR_1
0x4004959	            0x31ed	                            xor ebp, ebp	      6711	syntax.c	FUNCTION_109	FOR_1
0x400495b	       0xf1f440000	                   nop dword [rax + rax]	      6711	syntax.c	FUNCTION_109	FOR_1
0x4004960	          0x4c89e3	                            mov rbx, r12	      6713	syntax.c	FUNCTION_109	FOR_1
0x4004963	    0x480398700200	            add rbx, qword [rax + 0x270]	      6713	syntax.c	FUNCTION_109	FOR_1
0x400496a	          0x83c501	                              add ebp, 1	      6711	syntax.c	FUNCTION_109	FOR_1
0x400496d	    0x4981c4a00000	                           add r12, 0xa0	      6711	syntax.c	FUNCTION_109	FOR_1
0x4004974	        0x488d7b70	                   lea rdi, [rbx + 0x70]	      6691	syntax.c	FUNCTION_108	CALL_1
0x4004978	      0xe800000000	                          call 0x400497d	      6691	syntax.c	FUNCTION_108	CALL_1
0x400497d	    0x488dbb800000	                   lea rdi, [rbx + 0x80]	      6692	syntax.c	FUNCTION_108	CALL_2
0x4004984	      0xe800000000	                          call 0x4004989	      6692	syntax.c	FUNCTION_108	CALL_2
0x4004989	    0x488b05000000	            mov rax, qword [0x04004990] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x4004990	    0x48c783900000	               mov qword [rbx + 0x90], 0	      6693	syntax.c	FUNCTION_108
0x400499b	    0x48c783980000	               mov qword [rbx + 0x98], 0	      6694	syntax.c	FUNCTION_108
0x40049a6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x40049aa	    0x3ba860020000	           cmp ebp, dword [rax + 0x260] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x40049b0	            0x7cae	                            jl 0x4004960	      6711	syntax.c	FUNCTION_109	FOR_1
0x40049b2	      0xe981fbffff	                           jmp 0x4004538	      6711	syntax.c	FUNCTION_109	FOR_1
0x40049b7	    0x660f1f840000	                    nop word [rax + rax]	      6711	syntax.c	FUNCTION_109	FOR_1
0x40049c0	      0x4883780800	                  cmp qword [rax + 8], 0	      6447	syntax.c	FUNCTION_97
0x40049c5	     0xf85ecfbffff	                           jne 0x40045b7	      6447	syntax.c	FUNCTION_97
0x40049cb	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      6448	syntax.c	FUNCTION_97
0x40049d3	     0xf85defbffff	                           jne 0x40045b7	      6448	syntax.c	FUNCTION_97
0x40049d9	      0xe94fffffff	                           jmp 0x400492d	      6448	syntax.c	FUNCTION_97
0x40049de	      0xe800000000	                          call 0x40049e3	      6686	syntax.c	FUNCTION_107
lookup_color	SWITCH,0:WHILE,0:DO,0:IF,10:ELSE,5:FOR,0:functions,0:CALL,1	93
0x4004a30	            0x4156	                                push r14	      7295	syntax.c	FUNCTION_115
0x4004a32	            0x4155	                                push r13	      7295	syntax.c	FUNCTION_115
0x4004a34	            0x4154	                                push r12	      7295	syntax.c	FUNCTION_115
0x4004a36	              0x55	                                push rbp	      7295	syntax.c	FUNCTION_115
0x4004a37	          0x4863ef	                         movsxd rbp, edi	      7296	syntax.c	FUNCTION_115
0x4004a3a	    0x448b24ad0000	                 mov r12d, dword [rbp*4]	      7296	syntax.c	FUNCTION_115
0x4004a42	              0x53	                                push rbx	      7295	syntax.c	FUNCTION_115
0x4004a43	          0x4585e4	                         test r12d, r12d	      7300	syntax.c	FUNCTION_115	IF_1
0x4004a46	     0xf880c010000	                            js 0x4004b58	      7300	syntax.c	FUNCTION_115	IF_1
0x4004a4c	    0x8b1d00000000	            mov ebx, dword [0x04004a52] 	      7303	syntax.c	FUNCTION_115	IF_2
0x4004a52	          0x83fb08	                              cmp ebx, 8	      7303	syntax.c	FUNCTION_115	IF_2
0x4004a55	     0xf84a5000000	                            je 0x4004b00	      7303	syntax.c	FUNCTION_115	IF_2
0x4004a5b	    0x81fbff000000	                           cmp ebx, 0xff	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a61	        0x410f9fc6	                               setg r14b	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a65	          0x83fb10	                           cmp ebx, 0x10	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a68	           0xf94c2	                                 sete dl	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a6b	          0x83fb58	                           cmp ebx, 0x58	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a6e	           0xf94c0	                                 sete al	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a71	             0x8c2	                               or dl, al	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a73	            0x751b	                           jne 0x4004a90	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a75	          0x4584f6	                         test r14b, r14b	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a78	          0x4489e0	                           mov eax, r12d	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a7b	            0x7513	                           jne 0x4004a90	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x4004a7d	              0x5b	                                 pop rbx	      7352	syntax.c	FUNCTION_115
0x4004a7e	              0x5d	                                 pop rbp	      7352	syntax.c	FUNCTION_115
0x4004a7f	            0x415c	                                 pop r12	      7352	syntax.c	FUNCTION_115
0x4004a81	            0x415d	                                 pop r13	      7352	syntax.c	FUNCTION_115
0x4004a83	            0x415e	                                 pop r14	      7352	syntax.c	FUNCTION_115
0x4004a85	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
0x4004a86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7352	syntax.c	FUNCTION_115
0x4004a90	    0x4c8b2d000000	            mov r13, qword [0x04004a97] 	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x4004a97	      0x41807d0000	                       cmp byte [r13], 0	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x4004a9c	            0x7532	                           jne 0x4004ad0	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x4004a9e	    0x4c8b2d000000	            mov r13, qword [0x04004aa5] 	      7333	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3
0x4004aa5	      0x41807d0000	                       cmp byte [r13], 0	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4004aaa	            0x7524	                           jne 0x4004ad0	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4004aac	        0x4183fc0f	                           cmp r12d, 0xf	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004ab0	            0x753e	                           jne 0x4004af0	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004ab2	          0x4584f6	                         test r14b, r14b	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004ab5	            0x7439	                            je 0x4004af0	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004ab7	    0x833d00000000	               cmp dword [0x04004abe], 1	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004abe	              0x5b	                                 pop rbx	      7352	syntax.c	FUNCTION_115
0x4004abf	              0x5d	                                 pop rbp	      7352	syntax.c	FUNCTION_115
0x4004ac0	            0x415c	                                 pop r12	      7352	syntax.c	FUNCTION_115
0x4004ac2	            0x19c0	                            sbb eax, eax	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004ac4	            0x2428	                            and al, 0x28	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004ac6	       0x5e7000000	                           add eax, 0xe7	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x4004acb	            0x415d	                                 pop r13	      7352	syntax.c	FUNCTION_115
0x4004acd	            0x415e	                                 pop r14	      7352	syntax.c	FUNCTION_115
0x4004acf	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
0x4004ad0	    0x81fb00010000	                          cmp ebx, 0x100	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4004ad6	            0x7e48	                           jle 0x4004b20	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4004ad8	    0x81fbff000000	                           cmp ebx, 0xff	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004ade	            0x7e68	                           jle 0x4004b48	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004ae0	    0x448b24ad0000	                 mov r12d, dword [rbp*4]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004ae8	            0xebc2	                           jmp 0x4004aac	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004aea	    0x660f1f440000	                    nop word [rax + rax]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x4004af0	              0x5b	                                 pop rbx	      7352	syntax.c	FUNCTION_115
0x4004af1	          0x4489e0	                           mov eax, r12d	      7352	syntax.c	FUNCTION_115
0x4004af4	              0x5d	                                 pop rbp	      7352	syntax.c	FUNCTION_115
0x4004af5	            0x415c	                                 pop r12	      7352	syntax.c	FUNCTION_115
0x4004af7	            0x415d	                                 pop r13	      7352	syntax.c	FUNCTION_115
0x4004af9	            0x415e	                                 pop r14	      7352	syntax.c	FUNCTION_115
0x4004afb	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
0x4004afc	         0xf1f4000	                         nop dword [rax]	      7352	syntax.c	FUNCTION_115
0x4004b00	            0x85f6	                           test esi, esi	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0x4004b02	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      7309	syntax.c	FUNCTION_115	IF_2
0x4004b09	            0x7409	                            je 0x4004b14	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0x4004b0b	            0x31c9	                            xor ecx, ecx	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x4004b0d	            0xa808	                              test al, 8	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x4004b0f	           0xf95c1	                                setne cl	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x4004b12	            0x890a	                    mov dword [rdx], ecx	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x4004b14	              0x5b	                                 pop rbx	      7352	syntax.c	FUNCTION_115
0x4004b15	          0x83e007	                              and eax, 7	      7320	syntax.c	FUNCTION_115	IF_2	ELSE_1
0x4004b18	              0x5d	                                 pop rbp	      7352	syntax.c	FUNCTION_115
0x4004b19	            0x415c	                                 pop r12	      7352	syntax.c	FUNCTION_115
0x4004b1b	            0x415d	                                 pop r13	      7352	syntax.c	FUNCTION_115
0x4004b1d	            0x415e	                                 pop r14	      7352	syntax.c	FUNCTION_115
0x4004b1f	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
0x4004b20	          0x4c89ef	                            mov rdi, r13	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x4004b23	      0xe800000000	                          call 0x4004b28	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x4004b28	    0x41807c05ff6d	         cmp byte [r13 + rax - 1], 0x6d 	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x4004b2e	     0xf8578ffffff	                           jne 0x4004aac	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x4004b34	          0x83fb58	                           cmp ebx, 0x58	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x4004b37	            0x759f	                           jne 0x4004ad8	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x4004b39	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x4004b40	      0xe938ffffff	                           jmp 0x4004a7d	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x4004b45	           0xf1f00	                         nop dword [rax]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x4004b48	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x4004b4f	      0xe929ffffff	                           jmp 0x4004a7d	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x4004b54	         0xf1f4000	                         nop dword [rax]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x4004b58	      0xb8ffffffff	                     mov eax, 0xffffffff	      7301	syntax.c	FUNCTION_115	IF_1
0x4004b5d	      0xe91bffffff	                           jmp 0x4004a7d	      7301	syntax.c	FUNCTION_115	IF_1
get_group_name	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,3	27
0x4000960	              0x55	                                push rbp	      4579	syntax.c	FUNCTION_75
0x4000961	              0x53	                                push rbx	      4579	syntax.c	FUNCTION_75
0x4000962	          0x4889f3	                            mov rbx, rsi	      4579	syntax.c	FUNCTION_75
0x4000965	          0x4889fd	                            mov rbp, rdi	      4579	syntax.c	FUNCTION_75
0x4000968	        0x4883ec08	                              sub rsp, 8	      4579	syntax.c	FUNCTION_75
0x400096c	      0xe800000000	                          call 0x4000971	      4582	syntax.c	FUNCTION_75	CALL_1
0x4000971	          0x488903	                    mov qword [rbx], rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x4000974	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x4000977	      0xe800000000	                          call 0x400097c	      4583	syntax.c	FUNCTION_75	CALL_2
0x400097c	         0xfb67d00	                   movzx edi, byte [rbp]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4000980	          0x4889c3	                            mov rbx, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x4000983	      0xe800000000	                          call 0x4000988	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4000988	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400098a	            0x7514	                           jne 0x40009a0	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400098c	          0x803b00	                       cmp byte [rbx], 0	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400098f	      0xb800000000	                              mov eax, 0	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4000994	        0x480f45c3	                         cmovne rax, rbx	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x4000998	        0x4883c408	                              add rsp, 8	      4592	syntax.c	FUNCTION_75
0x400099c	              0x5b	                                 pop rbx	      4592	syntax.c	FUNCTION_75
0x400099d	              0x5d	                                 pop rbp	      4592	syntax.c	FUNCTION_75
0x400099e	              0xc3	                                     ret	      4592	syntax.c	FUNCTION_75
0x400099f	              0x90	                                     nop	      4592	syntax.c	FUNCTION_75
0x40009a0	        0x4883c408	                              add rsp, 8	      4592	syntax.c	FUNCTION_75
0x40009a4	            0x31c0	                            xor eax, eax	      4590	syntax.c	FUNCTION_75	IF_1
0x40009a6	              0x5b	                                 pop rbx	      4592	syntax.c	FUNCTION_75
0x40009a7	              0x5d	                                 pop rbp	      4592	syntax.c	FUNCTION_75
0x40009a8	              0xc3	                                     ret	      4592	syntax.c	FUNCTION_75
syn_stack_equal	SWITCH,0:WHILE,0:DO,0:IF,10:ELSE,1:FOR,2:functions,0:CALL,2	89
0x4000750	            0x4157	                                push r15	      1641	syntax.c	FUNCTION_21
0x4000752	            0x4156	                                push r14	      1641	syntax.c	FUNCTION_21
0x4000754	            0x4155	                                push r13	      1641	syntax.c	FUNCTION_21
0x4000756	            0x4154	                                push r12	      1641	syntax.c	FUNCTION_21
0x4000758	              0x55	                                push rbp	      1641	syntax.c	FUNCTION_21
0x4000759	              0x53	                                push rbx	      1641	syntax.c	FUNCTION_21
0x400075a	        0x4883ec08	                              sub rsp, 8	      1641	syntax.c	FUNCTION_21
0x400075e	    0x448bb7bc0000	           mov r14d, dword [rdi + 0xbc] 	      1647	syntax.c	FUNCTION_21	IF_1
0x4000765	    0x443b35000000	           cmp r14d, dword [0x0400076c] 	      1647	syntax.c	FUNCTION_21	IF_1
0x400076c	            0x7412	                            je 0x4000780	      1647	syntax.c	FUNCTION_21	IF_1
0x400076e	            0x31c0	                            xor eax, eax	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x4000770	        0x4883c408	                              add rsp, 8	      1699	syntax.c	FUNCTION_21
0x4000774	              0x5b	                                 pop rbx	      1699	syntax.c	FUNCTION_21
0x4000775	              0x5d	                                 pop rbp	      1699	syntax.c	FUNCTION_21
0x4000776	            0x415c	                                 pop r12	      1699	syntax.c	FUNCTION_21
0x4000778	            0x415d	                                 pop r13	      1699	syntax.c	FUNCTION_21
0x400077a	            0x415e	                                 pop r14	      1699	syntax.c	FUNCTION_21
0x400077c	            0x415f	                                 pop r15	      1699	syntax.c	FUNCTION_21
0x400077e	              0xc3	                                     ret	      1699	syntax.c	FUNCTION_21
0x400077f	              0x90	                                     nop	      1699	syntax.c	FUNCTION_21
0x4000780	    0x488b05000000	            mov rax, qword [0x04000787] 	      1648	syntax.c	FUNCTION_21	IF_1
0x4000787	    0x483987c00000	            cmp qword [rdi + 0xc0], rax 	      1648	syntax.c	FUNCTION_21	IF_1
0x400078e	            0x75de	                           jne 0x400076e	      1648	syntax.c	FUNCTION_21	IF_1
0x4000790	        0x4183fe07	                             cmp r14d, 7	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x4000794	        0x488d5710	                   lea rdx, [rdi + 0x10]	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x4000798	     0xf8f02010000	                            jg 0x40008a0	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x400079e	          0x4963c6	                        movsxd rax, r14d	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40007a1	        0x488d0c40	                  lea rcx, [rax + rax*2]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40007a5	        0x4c8d2cc0	                  lea r13, [rax + rax*8]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40007a9	        0x4c8d3cca	                  lea r15, [rdx + rcx*8]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40007ad	        0x49c1e504	                              shl r13, 4	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40007b1	    0x4981ed900000	                           sub r13, 0x90	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40007b8	     0xf1f84000000	                   nop dword [rax + rax]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40007c0	        0x4183ee01	                             sub r14d, 1	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x40007c4	     0xf88df000000	                            js 0x40008a9	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x40007ca	          0x4c89e8	                            mov rax, r13	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40007cd	    0x480305000000	             add rax, qword [0x040007d4]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40007d4	            0x8b08	                    mov ecx, dword [rax]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40007d6	        0x41394fe8	            cmp dword [r15 - 0x18], ecx 	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40007da	            0x7592	                           jne 0x400076e	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40007dc	        0x498b6ff8	                mov rbp, qword [r15 - 8]	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40007e0	    0x4c8ba0880000	            mov r12, qword [rax + 0x88] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40007e7	          0x4c39e5	                            cmp rbp, r12	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40007ea	     0xf84a0000000	                            je 0x4000890	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40007f0	          0x4885ed	                           test rbp, rbp	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40007f3	     0xf8475ffffff	                            je 0x400076e	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40007f9	          0x4d85e4	                           test r12, r12	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40007fc	     0xf846cffffff	                            je 0x400076e	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4000802	            0x31db	                            xor ebx, ebx	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4000804	            0xeb26	                           jmp 0x400082c	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4000806	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4000810	      0xe800000000	                          call 0x4000815	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4000815	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000817	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400081a	            0x84c0	                             test al, al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400081c	     0xf854cffffff	                           jne 0x400076e	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000822	        0x4883c308	                              add rbx, 8	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000826	        0x4883fb50	                           cmp rbx, 0x50	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400082a	            0x7464	                            je 0x4000890	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400082c	      0x488b7c1d08	         mov rdi, qword [rbp + rbx + 8] 	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4000831	      0x498b741c08	         mov rsi, qword [r12 + rbx + 8] 	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4000836	          0x4839f7	                            cmp rdi, rsi	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4000839	            0x74e7	                            je 0x4000822	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x400083b	          0x4885f6	                           test rsi, rsi	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400083e	     0xf842affffff	                            je 0x400076e	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4000844	          0x4885ff	                           test rdi, rdi	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4000847	     0xf8421ffffff	                            je 0x400076e	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400084d	    0x488b05000000	            mov rax, qword [0x04000854] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000854	    0x488b15000000	            mov rdx, qword [0x0400085b] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400085b	        0x4a630428	           movsxd rax, dword [rax + r13]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400085f	        0x488d0480	                  lea rax, [rax + rax*4]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000863	        0x48c1e005	                              shl rax, 5	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000867	    0x480382700200	            add rax, qword [rdx + 0x270]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400086e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000871	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000873	            0x749b	                            je 0x4000810	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000875	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x400087a	      0xe800000000	                          call 0x400087f	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x400087f	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000881	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000884	            0xeb94	                           jmp 0x400081a	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000886	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000890	        0x4983ef18	                           sub r15, 0x18	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000894	    0x4981ed900000	                           sub r13, 0x90	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400089b	      0xe920ffffff	                           jmp 0x40007c0	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40008a0	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      1652	syntax.c	FUNCTION_21	IF_1	IF_2
0x40008a4	      0xe9f5feffff	                           jmp 0x400079e	      1652	syntax.c	FUNCTION_21	IF_1	IF_2
0x40008a9	      0xb801000000	                              mov eax, 1	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x40008ae	      0xe9bdfeffff	                           jmp 0x4000770	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
syn_list_flags	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,1:functions,0:CALL,2	30
0x4001860	            0x8b07	                    mov eax, dword [rdi]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4001862	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4001864	            0x7446	                            je 0x40018ac	      4187	syntax.c	FUNCTION_67	FOR_1
0x4001866	            0x4154	                                push r12	      4184	syntax.c	FUNCTION_67
0x4001868	          0x4189d4	                           mov r12d, edx	      4184	syntax.c	FUNCTION_67
0x400186b	              0x55	                                push rbp	      4184	syntax.c	FUNCTION_67
0x400186c	            0x89f5	                            mov ebp, esi	      4184	syntax.c	FUNCTION_67
0x400186e	              0x53	                                push rbx	      4184	syntax.c	FUNCTION_67
0x400186f	        0x488d5f10	                   lea rbx, [rdi + 0x10]	      4184	syntax.c	FUNCTION_67
0x4001873	            0xeb0e	                           jmp 0x4001883	      4184	syntax.c	FUNCTION_67
0x4001875	           0xf1f00	                         nop dword [rax]	      4184	syntax.c	FUNCTION_67
0x4001878	        0x4883c310	                           add rbx, 0x10	      4184	syntax.c	FUNCTION_67
0x400187c	          0x8b43f0	             mov eax, dword [rbx - 0x10]	      4187	syntax.c	FUNCTION_67	FOR_1
0x400187f	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4001881	            0x7425	                            je 0x40018a8	      4187	syntax.c	FUNCTION_67	FOR_1
0x4001883	            0x85c5	                           test ebp, eax	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4001885	            0x74f1	                            je 0x4001878	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4001887	        0x488b7bf8	                mov rdi, qword [rbx - 8]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x400188b	          0x4489e6	                           mov esi, r12d	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x400188e	        0x4883c310	                           add rbx, 0x10	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4001892	      0xe800000000	                          call 0x4001897	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4001897	      0xbf20000000	                           mov edi, 0x20	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x400189c	      0xe800000000	                          call 0x40018a1	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x40018a1	          0x8b43f0	             mov eax, dword [rbx - 0x10]	      4187	syntax.c	FUNCTION_67	FOR_1
0x40018a4	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x40018a6	            0x75db	                           jne 0x4001883	      4187	syntax.c	FUNCTION_67	FOR_1
0x40018a8	              0x5b	                                 pop rbx	      4193	syntax.c	FUNCTION_67
0x40018a9	              0x5d	                                 pop rbp	      4193	syntax.c	FUNCTION_67
0x40018aa	            0x415c	                                 pop r12	      4193	syntax.c	FUNCTION_67
0x40018ac	            0xf3c3	                                     ret	      4193	syntax.c	FUNCTION_67
syn_cmd_spell	SWITCH,0:WHILE,0:DO,0:IF,7:ELSE,6:FOR,0:functions,0:CALL,14	97
0x4000ee0	              0x55	                                push rbp	      3521	syntax.c	FUNCTION_47
0x4000ee1	              0x53	                                push rbx	      3521	syntax.c	FUNCTION_47
0x4000ee2	          0x4889fb	                            mov rbx, rdi	      3521	syntax.c	FUNCTION_47
0x4000ee5	        0x4883ec08	                              sub rsp, 8	      3521	syntax.c	FUNCTION_47
0x4000ee9	          0x488b2f	                    mov rbp, qword [rdi]	      3522	syntax.c	FUNCTION_47
0x4000eec	          0x4889ef	                            mov rdi, rbp	      3525	syntax.c	FUNCTION_47	CALL_1
0x4000eef	      0xe800000000	                          call 0x4000ef4	      3525	syntax.c	FUNCTION_47	CALL_1
0x4000ef4	        0x48894308	                mov qword [rbx + 8], rax	      3525	syntax.c	FUNCTION_47	CALL_1
0x4000ef8	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      3526	syntax.c	FUNCTION_47	IF_1
0x4000efb	            0x85c0	                           test eax, eax	      3526	syntax.c	FUNCTION_47	IF_1
0x4000efd	            0x7411	                            je 0x4000f10	      3526	syntax.c	FUNCTION_47	IF_1
0x4000eff	        0x4883c408	                              add rsp, 8	      3553	syntax.c	FUNCTION_47
0x4000f03	              0x5b	                                 pop rbx	      3553	syntax.c	FUNCTION_47
0x4000f04	              0x5d	                                 pop rbp	      3553	syntax.c	FUNCTION_47
0x4000f05	              0xc3	                                     ret	      3553	syntax.c	FUNCTION_47
0x4000f06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3553	syntax.c	FUNCTION_47
0x4000f10	          0x4889ef	                            mov rdi, rbp	      3529	syntax.c	FUNCTION_47	CALL_2
0x4000f13	      0xe800000000	                          call 0x4000f18	      3529	syntax.c	FUNCTION_47	CALL_2
0x4000f18	        0x807d0000	                       cmp byte [rbp], 0	      3530	syntax.c	FUNCTION_47	IF_2
0x4000f1c	          0x4889c3	                            mov rbx, rax	      3529	syntax.c	FUNCTION_47	CALL_2
0x4000f1f	     0xf849b000000	                            je 0x4000fc0	      3530	syntax.c	FUNCTION_47	IF_2
0x4000f25	      0xba08000000	                              mov edx, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f2a	      0xbe00000000	                              mov esi, 0	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f2f	          0x4889ef	                            mov rdi, rbp	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f32	      0xe800000000	                          call 0x4000f37	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f37	            0x85c0	                           test eax, eax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f39	            0x7510	                           jne 0x4000f4b	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f3b	          0x4889d8	                            mov rax, rbx	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f3e	          0x4829e8	                            sub rax, rbp	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f41	        0x4883f808	                              cmp rax, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f45	     0xf84e5000000	                            je 0x4001030	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000f4b	      0xba0a000000	                            mov edx, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f50	      0xbe00000000	                              mov esi, 0	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f55	          0x4889ef	                            mov rdi, rbp	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f58	      0xe800000000	                          call 0x4000f5d	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f5d	            0x85c0	                           test eax, eax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f5f	            0x7510	                           jne 0x4000f71	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f61	          0x4889d8	                            mov rax, rbx	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f64	          0x4829e8	                            sub rax, rbp	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f67	        0x4883f80a	                            cmp rax, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f6b	     0xf84df000000	                            je 0x4001050	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000f71	      0xba07000000	                              mov edx, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f76	      0xbe00000000	                              mov esi, 0	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f7b	          0x4889ef	                            mov rdi, rbp	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f7e	      0xe800000000	                          call 0x4000f83	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f83	            0x85c0	                           test eax, eax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f85	            0x750d	                           jne 0x4000f94	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f87	          0x4829eb	                            sub rbx, rbp	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f8a	        0x4883fb07	                              cmp rbx, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f8e	     0xf8484000000	                            je 0x4001018	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000f94	      0xbe00000000	                              mov esi, 0	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000f99	            0x31ff	                            xor edi, edi	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000f9b	      0xba05000000	                              mov edx, 5	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000fa0	      0xe800000000	                          call 0x4000fa5	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000fa5	        0x4883c408	                              add rsp, 8	      3553	syntax.c	FUNCTION_47
0x4000fa9	          0x4889ee	                            mov rsi, rbp	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000fac	          0x4889c7	                            mov rdi, rax	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000faf	              0x5b	                                 pop rbx	      3553	syntax.c	FUNCTION_47
0x4000fb0	              0x5d	                                 pop rbp	      3553	syntax.c	FUNCTION_47
0x4000fb1	      0xe900000000	                           jmp 0x4000fb6	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000fb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000fc0	    0x488b05000000	            mov rax, qword [0x04000fc7] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000fc7	      0xba05000000	                              mov edx, 5	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4000fcc	      0xbe00000000	                              mov esi, 0	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4000fd1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000fd5	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000fdb	          0x83f801	                              cmp eax, 1	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000fde	            0x740f	                            je 0x4000fef	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000fe0	          0x83f802	                              cmp eax, 2	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4000fe3	      0xbe00000000	                              mov esi, 0	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4000fe8	            0x7405	                            je 0x4000fef	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4000fea	      0xbe00000000	                              mov esi, 0	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000fef	            0x31ff	                            xor edi, edi	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000ff1	      0xe800000000	                          call 0x4000ff6	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000ff6	          0x4889c7	                            mov rdi, rax	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000ff9	      0xe800000000	                          call 0x4000ffe	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000ffe	    0x488b3d000000	            mov rdi, qword [0x04001005] 	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4001005	        0x4883c408	                              add rsp, 8	      3553	syntax.c	FUNCTION_47
0x4001009	      0xbe28000000	                           mov esi, 0x28	      3552	syntax.c	FUNCTION_47	CALL_14
0x400100e	              0x5b	                                 pop rbx	      3553	syntax.c	FUNCTION_47
0x400100f	              0x5d	                                 pop rbp	      3553	syntax.c	FUNCTION_47
0x4001010	      0xe900000000	                           jmp 0x4001015	      3552	syntax.c	FUNCTION_47	CALL_14
0x4001015	           0xf1f00	                         nop dword [rax]	      3552	syntax.c	FUNCTION_47	CALL_14
0x4001018	    0x488b3d000000	            mov rdi, qword [0x0400101f] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x400101f	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4001023	    0xc7805c020000	              mov dword [rax + 0x25c], 0	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x400102d	            0xebd6	                           jmp 0x4001005	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x400102f	              0x90	                                     nop	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4001030	    0x488b3d000000	            mov rdi, qword [0x04001037] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4001037	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x400103b	    0xc7805c020000	              mov dword [rax + 0x25c], 1	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4001045	            0xebbe	                           jmp 0x4001005	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4001047	    0x660f1f840000	                    nop word [rax + rax]	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4001050	    0x488b3d000000	            mov rdi, qword [0x04001057] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4001057	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x400105b	    0xc7805c020000	              mov dword [rax + 0x25c], 2	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4001065	            0xeb9e	                           jmp 0x4001005	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
get_syn_pattern	SWITCH,1:WHILE,0:DO,1:IF,14:ELSE,2:FOR,1:functions,0:CALL,15	175
0x40009b0	            0x4156	                                push r14	      5739	syntax.c	FUNCTION_90
0x40009b2	            0x4155	                                push r13	      5739	syntax.c	FUNCTION_90
0x40009b4	            0x4154	                                push r12	      5739	syntax.c	FUNCTION_90
0x40009b6	              0x55	                                push rbp	      5739	syntax.c	FUNCTION_90
0x40009b7	              0x53	                                push rbx	      5739	syntax.c	FUNCTION_90
0x40009b8	        0x4883ec10	                           sub rsp, 0x10	      5739	syntax.c	FUNCTION_90
0x40009bc	    0x64488b042528	                mov rax, qword fs:[0x28]	      5739	syntax.c	FUNCTION_90
0x40009c5	      0x4889442408	                mov qword [rsp + 8], rax	      5739	syntax.c	FUNCTION_90
0x40009ca	            0x31c0	                            xor eax, eax	      5739	syntax.c	FUNCTION_90
0x40009cc	          0x4885ff	                           test rdi, rdi	      5746	syntax.c	FUNCTION_90	IF_1
0x40009cf	     0xf846f010000	                            je 0x4000b44	      5746	syntax.c	FUNCTION_90	IF_1
0x40009d5	           0xfb607	                   movzx eax, byte [rdi]	      5746	syntax.c	FUNCTION_90	IF_1
0x40009d8	          0x4989fe	                            mov r14, rdi	      5746	syntax.c	FUNCTION_90	IF_1
0x40009db	            0x84c0	                             test al, al	      5746	syntax.c	FUNCTION_90	IF_1
0x40009dd	     0xf8461010000	                            je 0x4000b44	      5746	syntax.c	FUNCTION_90	IF_1
0x40009e3	        0x807f0100	                   cmp byte [rdi + 1], 0	      5746	syntax.c	FUNCTION_90	IF_1
0x40009e7	     0xf8457010000	                            je 0x4000b44	      5746	syntax.c	FUNCTION_90	IF_1
0x40009ed	        0x807f0200	                   cmp byte [rdi + 2], 0	      5746	syntax.c	FUNCTION_90	IF_1
0x40009f1	     0xf844d010000	                            je 0x4000b44	      5746	syntax.c	FUNCTION_90	IF_1
0x40009f7	        0x488d5f01	                      lea rbx, [rdi + 1]	      5749	syntax.c	FUNCTION_90	CALL_1
0x40009fb	            0x31c9	                            xor ecx, ecx	      5749	syntax.c	FUNCTION_90	CALL_1
0x40009fd	      0xba01000000	                              mov edx, 1	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000a02	          0x4989f5	                            mov r13, rsi	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000a05	           0xfb6f0	                           movzx esi, al	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000a08	          0x4889df	                            mov rdi, rbx	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000a0b	      0xe800000000	                          call 0x4000a10	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000a10	        0x410fb60e	                   movzx ecx, byte [r14]	      5750	syntax.c	FUNCTION_90	IF_2
0x4000a14	        0x48890424	                    mov qword [rsp], rax	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000a18	      0xba05000000	                              mov edx, 5	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x4000a1d	            0x3808	                      cmp byte [rax], cl	      5750	syntax.c	FUNCTION_90	IF_2
0x4000a1f	      0xbe00000000	                              mov esi, 0	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x4000a24	     0xf8508010000	                           jne 0x4000b32	      5750	syntax.c	FUNCTION_90	IF_2
0x4000a2a	          0x4c29f0	                            sub rax, r14	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000a2d	          0x4889df	                            mov rdi, rbx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000a30	          0x8d70ff	                      lea esi, [rax - 1]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000a33	      0xe800000000	                          call 0x4000a38	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000a38	          0x4885c0	                           test rax, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000a3b	        0x49894560	             mov qword [r13 + 0x60], rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000a3f	     0xf84ff000000	                            je 0x4000b44	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000a45	    0x488b1d000000	            mov rbx, qword [0x04000a4c] 	      5760	syntax.c	FUNCTION_90
0x4000a4c	      0xbe01000000	                              mov esi, 1	      5762	syntax.c	FUNCTION_90	CALL_5
0x4000a51	          0x4889c7	                            mov rdi, rax	      5762	syntax.c	FUNCTION_90	CALL_5
0x4000a54	    0x48c705000000	               mov qword [0x04000a5f], 0	      5761	syntax.c	FUNCTION_90
0x4000a5f	      0xe800000000	                          call 0x4000a64	      5762	syntax.c	FUNCTION_90	CALL_5
0x4000a64	          0x4885c0	                           test rax, rax	      5765	syntax.c	FUNCTION_90	IF_4
0x4000a67	        0x49894568	             mov qword [r13 + 0x68], rax	      5762	syntax.c	FUNCTION_90	CALL_5
0x4000a6b	    0x48891d000000	            mov qword [0x04000a72], rbx 	      5763	syntax.c	FUNCTION_90
0x4000a72	     0xf84cc000000	                            je 0x4000b44	      5765	syntax.c	FUNCTION_90	IF_4
0x4000a78	    0x488b05000000	            mov rax, qword [0x04000a7f] 	      5767	syntax.c	FUNCTION_90
0x4000a7f	        0x498d7d70	                   lea rdi, [r13 + 0x70]	      6691	syntax.c	FUNCTION_108	CALL_1
0x4000a83	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5767	syntax.c	FUNCTION_90
0x4000a87	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      5767	syntax.c	FUNCTION_90
0x4000a8d	        0x4189452c	             mov dword [r13 + 0x2c], eax	      5767	syntax.c	FUNCTION_90
0x4000a91	      0xe800000000	                          call 0x4000a96	      6691	syntax.c	FUNCTION_108	CALL_1
0x4000a96	    0x498dbd800000	                   lea rdi, [r13 + 0x80]	      6692	syntax.c	FUNCTION_108	CALL_2
0x4000a9d	      0xe800000000	                          call 0x4000aa2	      6692	syntax.c	FUNCTION_108	CALL_2
0x4000aa2	        0x488b0424	                    mov rax, qword [rsp]	      5775	syntax.c	FUNCTION_90
0x4000aa6	    0x49c785900000	               mov qword [r13 + 0x90], 0	      6693	syntax.c	FUNCTION_108
0x4000ab1	    0x49c785980000	               mov qword [r13 + 0x98], 0	      6694	syntax.c	FUNCTION_108
0x4000abc	        0x4c8d6001	                      lea r12, [rax + 1]	      5775	syntax.c	FUNCTION_90
0x4000ac0	        0x4c892424	                    mov qword [rsp], r12	      5775	syntax.c	FUNCTION_90
0x4000ac4	         0xf1f4000	                         nop dword [rax]	      5775	syntax.c	FUNCTION_90
0x4000ac8	      0xbd00000000	                              mov ebp, 0	      5775	syntax.c	FUNCTION_90
0x4000acd	      0xbe00000000	                              mov esi, 0	      5739	syntax.c	FUNCTION_90
0x4000ad2	      0xbb06000000	                              mov ebx, 6	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000ad7	            0xeb0f	                           jmp 0x4000ae8	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000ad9	     0xf1f80000000	                         nop dword [rax]	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000ae0	        0x488b7500	                    mov rsi, qword [rbp]	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000ae4	        0x4883ed08	                              sub rbp, 8	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000ae8	      0xba03000000	                              mov edx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000aed	          0x4c89e7	                            mov rdi, r12	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000af0	      0xe800000000	                          call 0x4000af5	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000af5	            0x85c0	                           test eax, eax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000af7	            0x7477	                            je 0x4000b70	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000af9	          0x83eb01	                              sub ebx, 1	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000afc	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000aff	            0x75df	                           jne 0x4000ae0	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000b01	      0x410fb60424	                   movzx eax, byte [r12]	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000b06	           0xfb6f8	                           movzx edi, al	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b09	      0xe800000000	                          call 0x4000b0e	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b0e	            0x85c0	                           test eax, eax	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b10	        0x488b3c24	                    mov rdi, qword [rsp]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b14	            0x750b	                           jne 0x4000b21	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b16	           0xfb607	                   movzx eax, byte [rdi]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b19	            0x3c20	                            cmp al, 0x20	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b1b	            0x7404	                            je 0x4000b21	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b1d	            0x3c09	                               cmp al, 9	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b1f	            0x7507	                           jne 0x4000b28	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000b21	      0xe800000000	                          call 0x4000b26	      5833	syntax.c	FUNCTION_90	CALL_15
0x4000b26	            0xeb1e	                           jmp 0x4000b46	      5833	syntax.c	FUNCTION_90	CALL_15
0x4000b28	      0xba05000000	                              mov edx, 5	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000b2d	      0xbe00000000	                              mov esi, 0	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000b32	            0x31ff	                            xor edi, edi	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000b34	      0xe800000000	                          call 0x4000b39	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000b39	          0x4c89f6	                            mov rsi, r14	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000b3c	          0x4889c7	                            mov rdi, rax	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000b3f	      0xe800000000	                          call 0x4000b44	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000b44	            0x31c0	                            xor eax, eax	      5831	syntax.c	FUNCTION_90	IF_14
0x4000b46	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5834	syntax.c	FUNCTION_90
0x4000b4b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5834	syntax.c	FUNCTION_90
0x4000b54	     0xf851a010000	                           jne 0x4000c74	      5834	syntax.c	FUNCTION_90
0x4000b5a	        0x4883c410	                           add rsp, 0x10	      5834	syntax.c	FUNCTION_90
0x4000b5e	              0x5b	                                 pop rbx	      5834	syntax.c	FUNCTION_90
0x4000b5f	              0x5d	                                 pop rbp	      5834	syntax.c	FUNCTION_90
0x4000b60	            0x415c	                                 pop r12	      5834	syntax.c	FUNCTION_90
0x4000b62	            0x415d	                                 pop r13	      5834	syntax.c	FUNCTION_90
0x4000b64	            0x415e	                                 pop r14	      5834	syntax.c	FUNCTION_90
0x4000b66	              0xc3	                                     ret	      5834	syntax.c	FUNCTION_90
0x4000b67	    0x660f1f840000	                    nop word [rax + rax]	      5834	syntax.c	FUNCTION_90
0x4000b70	          0x83fb06	                              cmp ebx, 6	      5784	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7
0x4000b73	            0x745b	                            je 0x4000bd0	      5784	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7
0x4000b75	    0x410fb6442403	               movzx eax, byte [r12 + 3]	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000b7b	            0x3c65	                            cmp al, 0x65	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000b7d	     0xf848d000000	                            je 0x4000c10	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000b83	            0x3c73	                            cmp al, 0x73	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000b85	            0x7408	                            je 0x4000b8f	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000b87	            0x3c62	                            cmp al, 0x62	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000b89	     0xf8572ffffff	                           jne 0x4000b01	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000b8f	            0x89d9	                            mov ecx, ebx	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000b91	      0xb801000000	                              mov eax, 1	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000b96	      0x498d542404	                      lea rdx, [r12 + 4]	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x4000b9b	            0xd3e0	                             shl eax, cl	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000b9d	      0x6641094504	                   or word [r13 + 4], ax	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000ba2	        0x48891424	                    mov qword [rsp], rdx	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x4000ba6	    0x410fb6442404	               movzx eax, byte [r12 + 4]	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4000bac	            0x3c2b	                            cmp al, 0x2b	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4000bae	     0xf849c000000	                            je 0x4000c50	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4000bb4	            0x3c2d	                            cmp al, 0x2d	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x4000bb6	            0x7468	                            je 0x4000c20	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x4000bb8	            0x3c2c	                            cmp al, 0x2c	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x4000bba	     0xf8546ffffff	                           jne 0x4000b06	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x4000bc0	        0x4c8d6201	                      lea r12, [rdx + 1]	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000bc4	        0x4c892424	                    mov qword [rsp], r12	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000bc8	      0xe9fbfeffff	                           jmp 0x4000ac8	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000bcd	           0xf1f00	                         nop dword [rax]	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000bd0	    0x6641834d0440	                 or word [r13 + 4], 0x40	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000bd6	        0x4983c403	                              add r12, 3	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x4000bda	          0x4889e7	                            mov rdi, rsp	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x4000bdd	        0x4c892424	                    mov qword [rsp], r12	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x4000be1	      0xe800000000	                          call 0x4000be6	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x4000be6	      0x410fb75504	               movzx edx, word [r13 + 4]	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000beb	        0x41894520	             mov dword [r13 + 0x20], eax	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x4000bef	          0xf6c201	                              test dl, 1	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000bf2	            0x7546	                           jne 0x4000c3a	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000bf4	          0x83ca01	                               or edx, 1	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000bf7	        0x41894508	                mov dword [r13 + 8], eax	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000bfb	      0x6641895504	                  mov word [r13 + 4], dx	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000c00	        0x488b1424	                    mov rdx, qword [rsp]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000c04	           0xfb602	                   movzx eax, byte [rdx]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000c07	            0xebaf	                           jmp 0x4000bb8	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000c09	     0xf1f80000000	                         nop dword [rax]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000c10	          0x8d4b07	                      lea ecx, [rbx + 7]	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000c13	      0xe979ffffff	                           jmp 0x4000b91	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000c18	     0xf1f84000000	                   nop dword [rax + rax]	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000c20	        0x4983c405	                              add r12, 5	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x4000c24	          0x4889e7	                            mov rdi, rsp	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c27	          0x4863db	                         movsxd rbx, ebx	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c2a	        0x4c892424	                    mov qword [rsp], r12	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x4000c2e	      0xe800000000	                          call 0x4000c33	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c33	            0xf7d8	                                 neg eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c35	      0x4189449d08	        mov dword [r13 + rbx*4 + 8], eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c3a	        0x488b1424	                    mov rdx, qword [rsp]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c3e	           0xfb602	                   movzx eax, byte [rdx]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c41	      0xe972ffffff	                           jmp 0x4000bb8	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000c50	        0x4983c405	                              add r12, 5	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4000c54	          0x4889e7	                            mov rdi, rsp	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4000c57	          0x4863db	                         movsxd rbx, ebx	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4000c5a	        0x4c892424	                    mov qword [rsp], r12	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4000c5e	      0xe800000000	                          call 0x4000c63	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4000c63	        0x488b1424	                    mov rdx, qword [rsp]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4000c67	      0x4189449d08	        mov dword [r13 + rbx*4 + 8], eax	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4000c6c	           0xfb602	                   movzx eax, byte [rdx]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4000c6f	      0xe944ffffff	                           jmp 0x4000bb8	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x4000c74	      0xe800000000	                          call 0x4000c79	      5834	syntax.c	FUNCTION_90
put_pattern	SWITCH,0:WHILE,0:DO,0:IF,9:ELSE,2:FOR,2:functions,0:CALL,18	117
0x40018b0	            0x4156	                                push r14	      4270	syntax.c	FUNCTION_70
0x40018b2	            0x4155	                                push r13	      4270	syntax.c	FUNCTION_70
0x40018b4	          0x4989fd	                            mov r13, rdi	      4270	syntax.c	FUNCTION_70
0x40018b7	            0x4154	                                push r12	      4270	syntax.c	FUNCTION_70
0x40018b9	              0x55	                                push rbp	      4270	syntax.c	FUNCTION_70
0x40018ba	          0x4989d4	                            mov r12, rdx	      4270	syntax.c	FUNCTION_70
0x40018bd	              0x53	                                push rbx	      4270	syntax.c	FUNCTION_70
0x40018be	         0xfbf4202	               movsx eax, word [rdx + 2]	      4278	syntax.c	FUNCTION_70	IF_1
0x40018c2	            0x89f5	                            mov ebp, esi	      4270	syntax.c	FUNCTION_70
0x40018c4	    0x3b0500000000	            cmp eax, dword [0x040018ca] 	      4278	syntax.c	FUNCTION_70	IF_1
0x40018ca	            0x89cb	                            mov ebx, ecx	      4270	syntax.c	FUNCTION_70
0x40018cc	            0x7454	                            je 0x4001922	      4278	syntax.c	FUNCTION_70	IF_1
0x40018ce	            0x89ce	                            mov esi, ecx	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x40018d0	      0xbf00000000	                              mov edi, 0	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x40018d5	    0x890500000000	            mov dword [0x040018db], eax 	      4280	syntax.c	FUNCTION_70	IF_1
0x40018db	      0xe800000000	                          call 0x40018e0	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x40018e0	      0xbf3d000000	                           mov edi, 0x3d	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x40018e5	      0xe800000000	                          call 0x40018ea	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x40018ea	    0x486305000000	         movsxd rax, dword [0x040018f1] 	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x40018f1	            0x85c0	                           test eax, eax	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x40018f3	     0xf8447010000	                            je 0x4001a40	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x40018f9	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x40018fd	        0x488d0450	                  lea rax, [rax + rdx*2]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4001901	    0x488b15000000	            mov rdx, qword [0x04001908] 	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4001908	        0x488d04c2	                  lea rax, [rdx + rax*8]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x400190c	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4001913	      0xe800000000	                          call 0x4001918	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4001918	      0xbf20000000	                           mov edi, 0x20	      4287	syntax.c	FUNCTION_70	IF_1	CALL_5
0x400191d	      0xe800000000	                          call 0x4001922	      4287	syntax.c	FUNCTION_70	IF_1	CALL_5
0x4001922	            0x89de	                            mov esi, ebx	      4291	syntax.c	FUNCTION_70	CALL_6
0x4001924	          0x4c89ef	                            mov rdi, r13	      4291	syntax.c	FUNCTION_70	CALL_6
0x4001927	      0xe800000000	                          call 0x400192c	      4291	syntax.c	FUNCTION_70	CALL_6
0x400192c	            0x89ef	                            mov edi, ebp	      4292	syntax.c	FUNCTION_70	CALL_7
0x400192e	      0xbd00000000	                              mov ebp, 0	      4292	syntax.c	FUNCTION_70	CALL_7
0x4001933	      0xe800000000	                          call 0x4001938	      4292	syntax.c	FUNCTION_70	CALL_7
0x4001938	      0xbf2f000000	                           mov edi, 0x2f	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x400193d	            0xeb12	                           jmp 0x4001951	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x400193f	              0x90	                                     nop	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4001940	        0x4883c501	                              add rbp, 1	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4001944	         0xfb67d00	                   movzx edi, byte [rbp]	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4001948	          0x4084ff	                           test dil, dil	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x400194b	     0xf84ff000000	                            je 0x4001a50	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x4001951	        0x400fbedf	                          movsx ebx, dil	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4001955	      0x498b7c2460	            mov rdi, qword [r12 + 0x60] 	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x400195a	            0x89de	                            mov esi, ebx	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x400195c	      0xe800000000	                          call 0x4001961	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4001961	          0x4885c0	                           test rax, rax	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4001964	            0x75da	                           jne 0x4001940	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x4001966	            0x89df	                            mov edi, ebx	      4301	syntax.c	FUNCTION_70	CALL_9
0x4001968	    0x41bd01000000	                             mov r13d, 1	      4309	syntax.c	FUNCTION_70	FOR_2
0x400196e	      0xe800000000	                          call 0x4001973	      4301	syntax.c	FUNCTION_70	CALL_9
0x4001973	      0x498b7c2460	            mov rdi, qword [r12 + 0x60] 	      4302	syntax.c	FUNCTION_70	CALL_10
0x4001978	      0xe800000000	                          call 0x400197d	      4302	syntax.c	FUNCTION_70	CALL_10
0x400197d	            0x89df	                            mov edi, ebx	      4303	syntax.c	FUNCTION_70	CALL_11
0x400197f	            0x31db	                            xor ebx, ebx	      4303	syntax.c	FUNCTION_70	CALL_11
0x4001981	      0xe800000000	                          call 0x4001986	      4303	syntax.c	FUNCTION_70	CALL_11
0x4001986	      0xbe01000000	                              mov esi, 1	      4306	syntax.c	FUNCTION_70
0x400198b	            0xeb31	                           jmp 0x40019be	      4306	syntax.c	FUNCTION_70
0x400198d	           0xf1f00	                         nop dword [rax]	      4306	syntax.c	FUNCTION_70
0x4001990	      0xbf73000000	                           mov edi, 0x73	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_14
0x4001995	      0xe800000000	                          call 0x400199a	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_14
0x400199a	        0x4983fe00	                              cmp r14, 0	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x400199e	            0x7e6c	                           jle 0x4001a0c	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x40019a0	      0xbf2b000000	                           mov edi, 0x2b	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x40019a5	      0xe800000000	                          call 0x40019aa	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x40019aa	          0x4c89f7	                            mov rdi, r14	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_17
0x40019ad	      0xe800000000	                          call 0x40019b2	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_17
0x40019b2	            0x31f6	                            xor esi, esi	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019b4	        0x4883c301	                              add rbx, 1	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019b8	        0x4883fb07	                              cmp rbx, 7	      4307	syntax.c	FUNCTION_70	FOR_2
0x40019bc	            0x745c	                            je 0x4001a1a	      4307	syntax.c	FUNCTION_70	FOR_2
0x40019be	          0x4489ed	                           mov ebp, r13d	      4309	syntax.c	FUNCTION_70	FOR_2
0x40019c1	            0x89d9	                            mov ecx, ebx	      4309	syntax.c	FUNCTION_70	FOR_2
0x40019c3	    0x410fbf542404	               movsx edx, word [r12 + 4]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019c9	            0xd3e5	                             shl ebp, cl	      4309	syntax.c	FUNCTION_70	FOR_2
0x40019cb	            0x89e8	                            mov eax, ebp	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019cd	          0xc1e007	                              shl eax, 7	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019d0	             0x1e8	                            add eax, ebp	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019d2	            0x85d0	                           test eax, edx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019d4	            0x74de	                            je 0x40019b4	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019d6	            0x85f6	                           test esi, esi	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x40019d8	            0x7456	                            je 0x4001a30	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x40019da	    0x488b3cdd0000	                  mov rdi, qword [rbx*8]	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x40019e2	      0xe800000000	                          call 0x40019e7	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x40019e7	        0x4883fb06	                              cmp rbx, 6	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x40019eb	      0x4d63749c08	    movsxd r14, dword [r12 + rbx*4 + 8] 	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40019f0	            0x74b8	                            je 0x40019aa	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x40019f2	    0x410fbf442404	               movsx eax, word [r12 + 4]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x40019f8	            0x85e8	                           test eax, ebp	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x40019fa	            0x7594	                           jne 0x4001990	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x40019fc	      0xbf65000000	                           mov edi, 0x65	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x4001a01	      0xe800000000	                          call 0x4001a06	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x4001a06	        0x4983fe00	                              cmp r14, 0	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x4001a0a	            0x7f94	                            jg 0x40019a0	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x4001a0c	            0x759c	                           jne 0x40019aa	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x4001a0e	        0x4883c301	                              add rbx, 1	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x4001a12	            0x31f6	                            xor esi, esi	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001a14	        0x4883fb07	                              cmp rbx, 7	      4307	syntax.c	FUNCTION_70	FOR_2
0x4001a18	            0x75a4	                           jne 0x40019be	      4307	syntax.c	FUNCTION_70	FOR_2
0x4001a1a	              0x5b	                                 pop rbx	      4331	syntax.c	FUNCTION_70
0x4001a1b	              0x5d	                                 pop rbp	      4331	syntax.c	FUNCTION_70
0x4001a1c	            0x415c	                                 pop r12	      4331	syntax.c	FUNCTION_70
0x4001a1e	            0x415d	                                 pop r13	      4331	syntax.c	FUNCTION_70
0x4001a20	            0x415e	                                 pop r14	      4331	syntax.c	FUNCTION_70
0x4001a22	      0xbf20000000	                           mov edi, 0x20	      4330	syntax.c	FUNCTION_70	CALL_18
0x4001a27	      0xe900000000	                           jmp 0x4001a2c	      4330	syntax.c	FUNCTION_70	CALL_18
0x4001a2c	         0xf1f4000	                         nop dword [rax]	      4330	syntax.c	FUNCTION_70	CALL_18
0x4001a30	      0xbf2c000000	                           mov edi, 0x2c	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x4001a35	      0xe800000000	                          call 0x4001a3a	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x4001a3a	            0xeb9e	                           jmp 0x40019da	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x4001a3c	         0xf1f4000	                         nop dword [rax]	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x4001a40	      0xbf00000000	                              mov edi, 0	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4001a45	      0xe800000000	                          call 0x4001a4a	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4001a4a	      0xe9c9feffff	                           jmp 0x4001918	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4001a4f	              0x90	                                     nop	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4001a50	      0xbb2f000000	                           mov ebx, 0x2f	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x4001a55	      0xe90cffffff	                           jmp 0x4001966	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
syn_current_attr	SWITCH,0:WHILE,0:DO,1:IF,48:ELSE,10:FOR,2:functions,0:CALL,40	863
0x4008f20	            0x4157	                                push r15	      1904	syntax.c	FUNCTION_28
0x4008f22	            0x4156	                                push r14	      1904	syntax.c	FUNCTION_28
0x4008f24	          0x4189fe	                           mov r14d, edi	      1904	syntax.c	FUNCTION_28
0x4008f27	            0x4155	                                push r13	      1904	syntax.c	FUNCTION_28
0x4008f29	            0x4154	                                push r12	      1904	syntax.c	FUNCTION_28
0x4008f2b	              0x55	                                push rbp	      1904	syntax.c	FUNCTION_28
0x4008f2c	              0x53	                                push rbx	      1904	syntax.c	FUNCTION_28
0x4008f2d	    0x4881ecb80200	                          sub rsp, 0x2b8	      1904	syntax.c	FUNCTION_28
0x4008f34	    0x488b3d000000	            mov rdi, qword [0x04008f3b] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4008f3b	        0x89742420	             mov dword [rsp + 0x20], esi	      1904	syntax.c	FUNCTION_28
0x4008f3f	    0x488b35000000	            mov rsi, qword [0x04008f46] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4008f46	      0x4889542428	             mov qword [rsp + 0x28], rdx	      1904	syntax.c	FUNCTION_28
0x4008f4b	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4008f4d	        0x894c2438	             mov dword [rsp + 0x38], ecx	      1904	syntax.c	FUNCTION_28
0x4008f51	    0x64488b042528	                mov rax, qword fs:[0x28]	      1904	syntax.c	FUNCTION_28
0x4008f5a	    0x48898424a802	            mov qword [rsp + 0x2a8], rax	      1904	syntax.c	FUNCTION_28
0x4008f62	            0x31c0	                            xor eax, eax	      1904	syntax.c	FUNCTION_28
0x4008f64	      0xe800000000	                          call 0x4008f69	      3305	syntax.c	FUNCTION_42	CALL_1
0x4008f69	    0x48630d000000	         movsxd rcx, dword [0x04008f70] 	      1941	syntax.c	FUNCTION_28	IF_1
0x4008f70	        0x803c0800	                 cmp byte [rax + rcx], 0	      1941	syntax.c	FUNCTION_28	IF_1
0x4008f74	     0xf84ae080000	                            je 0x4009828	      1941	syntax.c	FUNCTION_28	IF_1
0x4008f7a	      0x807c080100	             cmp byte [rax + rcx + 1], 0	      1956	syntax.c	FUNCTION_28	IF_3
0x4008f7f	            0x7514	                           jne 0x4008f95	      1956	syntax.c	FUNCTION_28	IF_3
0x4008f81	    0xc70500000000	               mov dword [0x04008f8b], 1	      1958	syntax.c	FUNCTION_28	IF_3
0x4008f8b	    0xc70500000000	               mov dword [0x04008f95], 0	      1959	syntax.c	FUNCTION_28	IF_3
0x4008f95	    0x8b0500000000	            mov eax, dword [0x04008f9b] 	      1967	syntax.c	FUNCTION_28	IF_4
0x4008f9b	            0x85c0	                           test eax, eax	      1967	syntax.c	FUNCTION_28	IF_4
0x4008f9d	            0x7414	                            je 0x4008fb3	      1967	syntax.c	FUNCTION_28	IF_4
0x4008f9f	    0xc70500000000	     mov dword [0x04008fa9], 0xffffffff 	      1969	syntax.c	FUNCTION_28	IF_4
0x4008fa9	    0xc70500000000	               mov dword [0x04008fb3], 0	      1970	syntax.c	FUNCTION_28	IF_4
0x4008fb3	          0x4585f6	                         test r14d, r14d	      1975	syntax.c	FUNCTION_28
0x4008fb6	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1975	syntax.c	FUNCTION_28
0x4008fbe	     0xf84ac080000	                            je 0x4009870	      1975	syntax.c	FUNCTION_28
0x4008fc4	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      1980	syntax.c	FUNCTION_28	CALL_3
0x4008fcc	      0xba0a000000	                            mov edx, 0xa	      1980	syntax.c	FUNCTION_28	CALL_3
0x4008fd1	      0xbe04000000	                              mov esi, 4	      1980	syntax.c	FUNCTION_28	CALL_3
0x4008fd6	      0xe800000000	                          call 0x4008fdb	      1980	syntax.c	FUNCTION_28	CALL_3
0x4008fdb	    0x488dbc243002	                  lea rdi, [rsp + 0x230]	      1983	syntax.c	FUNCTION_28	CALL_4
0x4008fe3	      0xe82873ffff	                   call sym.save_chartab	      1983	syntax.c	FUNCTION_28	CALL_4
0x4008fe8	    0xc74424240000	               mov dword [rsp + 0x24], 0	      1933	syntax.c	FUNCTION_28
0x4008ff0	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1926	syntax.c	FUNCTION_28
0x4008ff9	     0xf1f80000000	                         nop dword [rax]	      1926	syntax.c	FUNCTION_28
0x4009000	    0x486305000000	         movsxd rax, dword [0x04009007] 	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x4009007	            0x85c0	                           test eax, eax	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x4009009	     0xf84b1040000	                            je 0x40094c0	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x400900f	        0x488d04c0	                  lea rax, [rax + rax*8]	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4009013	    0x488b15000000	            mov rdx, qword [0x0400901a] 	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x400901a	        0x48c1e004	                              shl rax, 4	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x400901e	    0x4c8da40270ff	             lea r12, [rdx + rax - 0x90]	      2005	syntax.c	FUNCTION_28	DO_1	IF_5
0x4009026	    0x488b05000000	            mov rax, qword [0x0400902d] 	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x400902d	    0x8b8098020000	           mov eax, dword [rax + 0x298] 	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4009033	            0x85c0	                           test eax, eax	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4009035	            0x7511	                           jne 0x4009048	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4009037	          0x4d85e4	                           test r12, r12	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x400903a	            0x740c	                            je 0x4009048	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x400903c	    0x49837c247800	               cmp qword [r12 + 0x78], 0	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4009042	     0xf8470020000	                            je 0x40092b8	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x4009048	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x400904c	            0x85c0	                           test eax, eax	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x400904e	     0xf857b040000	                           jne 0x40094cf	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x4009054	    0x488b05000000	            mov rax, qword [0x0400905b] 	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x400905b	    0x8b9860020000	           mov ebx, dword [rax + 0x260] 	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4009061	            0x85db	                           test ebx, ebx	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4009063	     0xf844f020000	                            je 0x40092b8	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x4009069	    0x486305000000	         movsxd rax, dword [0x04009070] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4009070	            0x85c0	                           test eax, eax	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4009072	            0x7814	                            js 0x4009088	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4009074	    0x8b0d00000000	            mov ecx, dword [0x0400907a] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x400907a	    0x8b1500000000	            mov edx, dword [0x04009080] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4009080	            0x39d1	                            cmp ecx, edx	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4009082	     0xf8d33050000	                           jge 0x40095bb	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4009088	          0x4863c3	                         movsxd rax, ebx	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x400908b	    0xc70500000000	               mov dword [0x04009095], 0	      2101	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x4009095	    0xc70500000000	     mov dword [0x0400909f], 0x7fffffff 	      2102	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x400909f	        0x488d2c80	                  lea rbp, [rax + rax*4]	      2102	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40090a3	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	      2102	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40090a8	        0x48c1e505	                              shl rbp, 5	      2102	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40090ac	    0x4881eda00000	                           sub rbp, 0xa0	      2102	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x40090b3	            0xeb0a	                           jmp 0x40090bf	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40090b5	           0xf1f00	                         nop dword [rax]	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40090b8	    0x4881eda00000	                           sub rbp, 0xa0	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40090bf	          0x83eb01	                              sub ebx, 1	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40090c2	     0xf88d8040000	                            js 0x40095a0	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40090c8	    0x488b05000000	            mov rax, qword [0x040090cf] 	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40090cf	          0x4989ed	                            mov r13, rbp	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40090d2	    0x4c03a8700200	            add r13, qword [rax + 0x270]	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x40090d9	      0x410fbe4501	               movsx eax, byte [r13 + 1]	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090de	          0x4139c6	                           cmp r14d, eax	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090e1	            0x75d5	                           jne 0x40090b8	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090e3	          0x4585ff	                         test r15d, r15d	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090e6	            0x7507	                           jne 0x40090ef	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090e8	      0x41f6452510	           test byte [r13 + 0x25], 0x10 	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090ed	            0x75c9	                           jne 0x40090b8	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090ef	      0x410fb64500	                   movzx eax, byte [r13]	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090f4	          0x83e801	                              sub eax, 1	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090f7	            0x3c01	                               cmp al, 1	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090f9	            0x77bd	                            ja 0x40090b8	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40090fb	    0x488b35000000	            mov rsi, qword [0x04009102] 	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009102	          0x4885f6	                           test rsi, rsi	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009105	     0xf84ed060000	                            je 0x40097f8	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400910b	        0x498d5550	                   lea rdx, [r13 + 0x50]	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x400910f	            0x31c9	                            xor ecx, ecx	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x4009111	            0x31ff	                            xor edi, edi	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x4009113	      0xe8486fffff	                     call sym.in_id_list	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_13
0x4009118	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400911a	           0xf95c0	                                setne al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400911d	            0x84c0	                             test al, al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400911f	            0x7497	                            je 0x40090b8	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009121	    0x8b0500000000	            mov eax, dword [0x04009127] 	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4009127	        0x41394534	            cmp dword [r13 + 0x34], eax 	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400912b	     0xf840c080000	                            je 0x400993d	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4009131	        0x418b552c	            mov edx, dword [r13 + 0x2c] 	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009135	        0x41894534	             mov dword [r13 + 0x34], eax	      2127	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009139	        0x498d4d70	                   lea rcx, [r13 + 0x70]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x400913d	    0x8b0500000000	            mov eax, dword [0x04009143] 	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009143	        0x412b4520	             sub eax, dword [r13 + 0x20]	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009147	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x400914f	    0x488b35000000	            mov rsi, qword [0x04009156] 	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x4009156	    0x899424280200	            mov dword [rsp + 0x228], edx	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400915d	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009161	            0x85c0	                           test eax, eax	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x4009163	    0x48899424e000	             mov qword [rsp + 0xe0], rdx	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400916b	      0xba00000000	                              mov edx, 0	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x4009170	           0xf49d0	                         cmovns edx, eax	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x4009173	      0xe84872ffff	                    call sym.syn_regexec	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_15
0x4009178	    0x488b9424e000	            mov rdx, qword [rsp + 0xe0] 	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009180	            0x85c0	                           test eax, eax	      2140	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x4009182	        0x49895568	             mov qword [r13 + 0x68], rdx	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009186	     0xf85c6070000	                           jne 0x4009952	      2140	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x400918c	    0x41c74538ffff	     mov dword [r13 + 0x38], 0x7fffffff 	      2156	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4009194	      0xe91fffffff	                           jmp 0x40090b8	      2157	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4009199	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      2157	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x400919e	          0x4401eb	                           add ebx, r13d	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40091a1	      0x410fbf680c	              movsx ebp, word [r8 + 0xc]	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40091a6	        0x49634020	          movsxd rax, dword [r8 + 0x20] 	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40091aa	        0x4d8b6818	              mov r13, qword [r8 + 0x18]	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40091ae	        0x458b7824	            mov r15d, dword [r8 + 0x24] 	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40091b2	            0x85ed	                           test ebp, ebp	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x40091b4	      0x4889442448	             mov qword [rsp + 0x48], rax	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40091b9	     0xf8495feffff	                            je 0x4009054	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x40091bf	      0xbfffffffff	                     mov edi, 0xffffffff	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_9
0x40091c4	      0xe84797ffff	             call sym.push_current_state	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_9
0x40091c9	          0x83f801	                              cmp eax, 1	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_9
0x40091cc	     0xf8521080000	                           jne 0x40099f3	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_9
0x40091d2	    0x486305000000	         movsxd rax, dword [0x040091d9] 	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40091d9	    0x488b3d000000	            mov rdi, qword [0x040091e0] 	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40091e0	    0x8b1500000000	            mov edx, dword [0x040091e6] 	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40091e6	    0x8b3500000000	            mov esi, dword [0x040091ec] 	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40091ec	          0x4889c1	                            mov rcx, rax	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40091ef	        0x488d04c0	                  lea rax, [rax + rax*8]	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40091f3	        0x448d4601	                      lea r8d, [rsi + 1]	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40091f7	        0x48c1e004	                              shl rax, 4	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40091fb	          0x83f901	                              cmp ecx, 1	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x40091fe	    0x448905000000	            mov dword [0x04009205], r8d 	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009205	    0x4c8da40770ff	             lea r12, [rdi + rax - 0x90]	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x400920d	      0x4189542410	             mov dword [r12 + 0x10], edx	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009212	    0x488b15000000	            mov rdx, qword [0x04009219] 	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009219	    0x41c744243000	               mov dword [r12 + 0x30], 0	      2039	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009222	      0x41895c2420	             mov dword [r12 + 0x20], ebx	      2041	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009227	      0x41895c2440	             mov dword [r12 + 0x40], ebx	      2043	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x400922c	    0x41c744245c01	               mov dword [r12 + 0x5c], 1	      2044	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009235	      0x4989542428	             mov qword [r12 + 0x28], rdx	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x400923a	      0x4989542418	             mov qword [r12 + 0x18], rdx	      2040	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x400923f	      0x4989542438	             mov qword [r12 + 0x38], rdx	      2042	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009244	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009249	    0x41c744245800	               mov dword [r12 + 0x58], 0	      2045	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009252	      0x4189742470	             mov dword [r12 + 0x70], esi	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009257	      0x45897c2474	            mov dword [r12 + 0x74], r15d	      2049	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x400925c	      0x4989542468	             mov qword [r12 + 0x68], rdx	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009261	     0xf8e5b090000	                           jle 0x4009bc2	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4009267	    0x488d8c07e0fe	            lea rcx, [rdi + rax - 0x120]	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x400926f	        0x488b4168	            mov rax, qword [rcx + 0x68] 	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4009273	      0x41896c2404	                mov dword [r12 + 4], ebp	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009278	      0x41896c2408	                mov dword [r12 + 8], ebp	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x400927d	      0x2500000200	                        and eax, 0x20000	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4009282	          0x4809d0	                             or rax, rdx	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x4009285	          0x83e202	                              and edx, 2	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4009288	      0x4989442468	             mov qword [r12 + 0x68], rax	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x400928d	     0xf855d080000	                           jne 0x4009af0	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4009293	            0x89ef	                            mov edi, ebp	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x4009295	      0xe800000000	                          call 0x400929a	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x400929a	      0x4189442460	             mov dword [r12 + 0x60], eax	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x400929f	    0x49c744247800	               mov qword [r12 + 0x78], 0	      2074	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40092a8	    0x4d89ac248000	             mov qword [r12 + 0x80], r13	      2075	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x40092b0	      0xe8eb9dffff	                  call sym.check_keepend	      2076	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x40092b5	           0xf1f00	                         nop dword [rax]	      2076	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x40092b8	    0x48833d000000	               cmp qword [0x040092c0], 0	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x40092c0	     0xf854a030000	                           jne 0x4009610	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x40092c6	    0x488dbc243002	                  lea rdi, [rsp + 0x230]	      2350	syntax.c	FUNCTION_28	CALL_30
0x40092ce	      0xe89d70ffff	                call sym.restore_chartab	      2350	syntax.c	FUNCTION_28	CALL_30
0x40092d3	          0x4d85e4	                           test r12, r12	      2365	syntax.c	FUNCTION_28	IF_36
0x40092d6	    0xc70500000000	               mov dword [0x040092e0], 0	      2356	syntax.c	FUNCTION_28
0x40092e0	    0xc70500000000	               mov dword [0x040092ea], 0	      2358	syntax.c	FUNCTION_28
0x40092ea	    0xc70500000000	               mov dword [0x040092f4], 0	      2359	syntax.c	FUNCTION_28
0x40092f4	    0xc70500000000	               mov dword [0x040092fe], 0	      2362	syntax.c	FUNCTION_28
0x40092fe	    0xc70500000000	               mov dword [0x04009308], 0	      2363	syntax.c	FUNCTION_28
0x4009308	     0xf847a080000	                            je 0x4009b88	      2365	syntax.c	FUNCTION_28	IF_36
0x400930e	    0x8b1500000000	            mov edx, dword [0x04009314] 	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4009314	          0x83ea01	                              sub edx, 1	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4009317	     0xf88f30a0000	                            js 0x4009e10	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x400931d	          0x4863f2	                         movsxd rsi, edx	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4009320	            0x89d2	                            mov edx, edx	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4009322	    0x4c8b05000000	              mov r8, qword [0x04009329]	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4009329	        0x488d04f6	                  lea rax, [rsi + rsi*8]	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x400932d	          0x4829d6	                            sub rsi, rdx	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4009330	    0x488b0d000000	            mov rcx, qword [0x04009337] 	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4009337	        0x488d14f6	                  lea rdx, [rsi + rsi*8]	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x400933b	    0x8b3d00000000	            mov edi, dword [0x04009341] 	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009341	        0x48c1e004	                              shl rax, 4	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009345	        0x48c1e204	                              shl rdx, 4	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009349	          0x4c01c0	                             add rax, r8	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400934c	    0x498db41070ff	              lea rsi, [r8 + rdx - 0x90]	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009354	            0xeb1f	                           jmp 0x4009375	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009360	     0xf843a040000	                            je 0x40097a0	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009366	    0x482d90000000	                           sub rax, 0x90	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400936c	          0x4839f0	                            cmp rax, rsi	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x400936f	     0xf8443040000	                            je 0x40097b8	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x4009375	        0x48394828	            cmp qword [rax + 0x28], rcx 	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009379	          0x4989c0	                             mov r8, rax	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2
0x400937c	            0x7de2	                           jge 0x4009360	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400937e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009382	          0x4885d2	                           test rdx, rdx	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009385	            0x740f	                            je 0x4009396	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009387	          0x4839ca	                            cmp rdx, rcx	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400938a	            0x7f0a	                            jg 0x4009396	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400938c	          0x4839ca	                            cmp rdx, rcx	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400938f	            0x75d5	                           jne 0x4009366	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009391	          0x3b7840	            cmp edi, dword [rax + 0x40] 	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009394	            0x7dd0	                           jge 0x4009366	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009396	          0x8b5060	            mov edx, dword [rax + 0x60] 	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x4009399	          0x4d89c7	                             mov r15, r8	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x400939c	    0x891500000000	            mov dword [0x040093a2], edx 	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093a2	          0x8b5004	                mov edx, dword [rax + 4]	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093a5	    0x891500000000	            mov dword [0x040093ab], edx 	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093ab	          0x8b5008	                mov edx, dword [rax + 8]	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093ae	    0x891500000000	            mov dword [0x040093b4], edx 	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093b4	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093b8	    0x891500000000	            mov dword [0x040093be], edx 	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093be	          0x8b5070	            mov edx, dword [rax + 0x70] 	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093c1	          0x8b4074	            mov eax, dword [rax + 0x74] 	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093c4	    0x891500000000	            mov dword [0x040093ca], edx 	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093ca	    0x890500000000	            mov dword [0x040093d0], eax 	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40093d0	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      2395	syntax.c	FUNCTION_28	IF_36	IF_38
0x40093d6	            0x7436	                            je 0x400940e	      2395	syntax.c	FUNCTION_28	IF_36	IF_38
0x40093d8	    0x488b1d000000	            mov rbx, qword [0x040093df] 	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x40093df	    0x8b8390020000	           mov eax, dword [rbx + 0x290] 	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x40093e5	            0x85c0	                           test eax, eax	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x40093e7	     0xf85cc040000	                           jne 0x40098b9	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x40093ed	    0x8b8394020000	           mov eax, dword [rbx + 0x294] 	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x40093f3	            0x85c0	                           test eax, eax	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x40093f5	     0xf857c060000	                           jne 0x4009a77	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x40093fb	            0x31c0	                            xor eax, eax	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x40093fd	    0x83bb5c020000	              cmp dword [rbx + 0x25c], 2	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4009404	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4009409	           0xf95c0	                                setne al	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x400940c	            0x8901	                    mov dword [rcx], eax	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x400940e	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4009412	          0x4409f0	                            or eax, r14d	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x4009415	     0xf84cc040000	                            je 0x40098e7	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x400941b	    0x48833d000000	               cmp qword [0x04009423], 0	      2472	syntax.c	FUNCTION_28	IF_47
0x4009423	            0x7433	                            je 0x4009458	      2472	syntax.c	FUNCTION_28	IF_47
0x4009425	    0x488b35000000	            mov rsi, qword [0x0400942c] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400942c	    0x488b3d000000	            mov rdi, qword [0x04009433] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009433	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009435	      0xe800000000	                          call 0x400943a	      3305	syntax.c	FUNCTION_42	CALL_1
0x400943a	    0x486315000000	         movsxd rdx, dword [0x04009441] 	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4009441	        0x803c1000	                 cmp byte [rax + rdx], 0	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4009445	            0x7411	                            je 0x4009458	      2473	syntax.c	FUNCTION_28	IF_47	CALL_37
0x4009447	      0x807c100100	             cmp byte [rax + rdx + 1], 0	      2474	syntax.c	FUNCTION_28	IF_47
0x400944c	     0xf847e060000	                            je 0x4009ad0	      2474	syntax.c	FUNCTION_28	IF_47
0x4009452	    0x660f1f440000	                    nop word [rax + rax]	      2474	syntax.c	FUNCTION_28	IF_47
0x4009458	    0x8b9424c00000	            mov edx, dword [rsp + 0xc0] 	      2478	syntax.c	FUNCTION_28	IF_48
0x400945f	            0x85d2	                           test edx, edx	      2478	syntax.c	FUNCTION_28	IF_48
0x4009461	            0x7e0d	                           jle 0x4009470	      2478	syntax.c	FUNCTION_28	IF_48
0x4009463	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      2479	syntax.c	FUNCTION_28	CALL_38
0x400946b	      0xe800000000	                          call 0x4009470	      2479	syntax.c	FUNCTION_28	CALL_38
0x4009470	    0x488b3d000000	            mov rdi, qword [0x04009477] 	      2482	syntax.c	FUNCTION_28	CALL_39
0x4009477	      0xe800000000	                          call 0x400947c	      2482	syntax.c	FUNCTION_28	CALL_39
0x400947c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2484	syntax.c	FUNCTION_28	CALL_40
0x4009481	    0x48c705000000	               mov qword [0x0400948c], 0	      2483	syntax.c	FUNCTION_28
0x400948c	      0xe800000000	                          call 0x4009491	      2484	syntax.c	FUNCTION_28	CALL_40
0x4009491	    0x8b0500000000	            mov eax, dword [0x04009497] 	      2486	syntax.c	FUNCTION_28
0x4009497	    0x488b8c24a802	           mov rcx, qword [rsp + 0x2a8] 	      2487	syntax.c	FUNCTION_28
0x400949f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2487	syntax.c	FUNCTION_28
0x40094a8	     0xf858f0a0000	                           jne 0x4009f3d	      2487	syntax.c	FUNCTION_28
0x40094ae	    0x4881c4b80200	                          add rsp, 0x2b8	      2487	syntax.c	FUNCTION_28
0x40094b5	              0x5b	                                 pop rbx	      2487	syntax.c	FUNCTION_28
0x40094b6	              0x5d	                                 pop rbp	      2487	syntax.c	FUNCTION_28
0x40094b7	            0x415c	                                 pop r12	      2487	syntax.c	FUNCTION_28
0x40094b9	            0x415d	                                 pop r13	      2487	syntax.c	FUNCTION_28
0x40094bb	            0x415e	                                 pop r14	      2487	syntax.c	FUNCTION_28
0x40094bd	            0x415f	                                 pop r15	      2487	syntax.c	FUNCTION_28
0x40094bf	              0xc3	                                     ret	      2487	syntax.c	FUNCTION_28
0x40094c0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x40094c4	          0x4531e4	                          xor r12d, r12d	      2007	syntax.c	FUNCTION_28	DO_1	ELSE_1
0x40094c7	            0x85c0	                           test eax, eax	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x40094c9	     0xf8485fbffff	                            je 0x4009054	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x40094cf	    0x488b35000000	            mov rsi, qword [0x040094d6] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x40094d6	    0x488b3d000000	            mov rdi, qword [0x040094dd] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x40094dd	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x40094df	      0xe800000000	                          call 0x40094e4	      3305	syntax.c	FUNCTION_42	CALL_1
0x40094e4	    0x48633d000000	         movsxd rdi, dword [0x040094eb] 	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x40094eb	    0x488b35000000	            mov rsi, qword [0x040094f2] 	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x40094f2	          0x4889c3	                            mov rbx, rax	      3305	syntax.c	FUNCTION_42	CALL_1
0x40094f5	          0x4801c7	                            add rdi, rax	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x40094f8	      0xe800000000	                          call 0x40094fd	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x40094fd	            0x85c0	                           test eax, eax	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x40094ff	     0xf844ffbffff	                            je 0x4009054	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_6
0x4009505	    0x4c632d000000	         movsxd r13, dword [0x0400950c] 	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400950c	          0x4585ed	                         test r13d, r13d	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400950f	            0x743b	                            je 0x400954c	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4009511	    0x448b3d000000	           mov r15d, dword [0x04009518] 	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4009518	        0x4983ed01	                              sub r13, 1	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400951c	            0x31c0	                            xor eax, eax	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400951e	    0x488b2d000000	            mov rbp, qword [0x04009525] 	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4009525	          0x4585ff	                         test r15d, r15d	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x4009528	     0xf85b2020000	                           jne 0x40097e0	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x400952e	          0x4929c5	                            sub r13, rax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4009531	          0x4889ee	                            mov rsi, rbp	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4009534	        0x4a8d3c2b	                    lea rdi, [rbx + r13]	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4009538	      0xe800000000	                          call 0x400953d	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x400953d	            0x85c0	                           test eax, eax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x400953f	     0xf850ffbffff	                           jne 0x4009054	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x4009545	    0x448b2d000000	           mov r13d, dword [0x0400954c] 	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x400954c	          0x4963ed	                        movsxd rbp, r13d	      3390	syntax.c	FUNCTION_44
0x400954f	          0x4801dd	                            add rbp, rbx	      3390	syntax.c	FUNCTION_44
0x4009552	            0x31db	                            xor ebx, ebx	      3391	syntax.c	FUNCTION_44
0x4009554	            0xeb29	                           jmp 0x400957f	      3391	syntax.c	FUNCTION_44
0x4009556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3391	syntax.c	FUNCTION_44
0x4009560	          0x83c301	                              add ebx, 1	      3399	syntax.c	FUNCTION_44	DO_1	ELSE_1
0x4009563	          0x4c63fb	                         movsxd r15, ebx	      3401	syntax.c	FUNCTION_44	CALL_1
0x4009566	    0x488b35000000	            mov rsi, qword [0x0400956d] 	      3401	syntax.c	FUNCTION_44	CALL_1
0x400956d	      0x4a8d7c3d00	                    lea rdi, [rbp + r15]	      3401	syntax.c	FUNCTION_44	CALL_1
0x4009572	      0xe800000000	                          call 0x4009577	      3401	syntax.c	FUNCTION_44	CALL_1
0x4009577	            0x85c0	                           test eax, eax	      3401	syntax.c	FUNCTION_44	CALL_1
0x4009579	     0xf8409010000	                            je 0x4009688	      3401	syntax.c	FUNCTION_44	CALL_1
0x400957f	    0x448b1d000000	           mov r11d, dword [0x04009586] 	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x4009586	          0x4585db	                         test r11d, r11d	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x4009589	            0x74d5	                            je 0x4009560	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x400958b	          0x4863fb	                         movsxd rdi, ebx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x400958e	          0x4801ef	                            add rdi, rbp	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4009591	    0xff1500000000	                 call qword [0x04009597]	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4009597	             0x1c3	                            add ebx, eax	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4009599	            0xebc8	                           jmp 0x4009563	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x400959b	       0xf1f440000	                   nop dword [rax + rax]	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x40095a0	    0x486305000000	         movsxd rax, dword [0x040095a7] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x40095a7	            0x85c0	                           test eax, eax	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x40095a9	     0xf8809fdffff	                            js 0x40092b8	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x40095af	    0x8b0d00000000	            mov ecx, dword [0x040095b5] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x40095b5	    0x8b1500000000	            mov edx, dword [0x040095bb] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x40095bb	            0x39ca	                            cmp edx, ecx	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x40095bd	     0xf85f5fcffff	                           jne 0x40092b8	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x40095c3	    0x488b0d000000	            mov rcx, qword [0x040095ca] 	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40095ca	    0x48390d000000	            cmp qword [0x040095d1], rcx 	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40095d1	            0x750c	                           jne 0x40095df	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40095d3	    0x391500000000	            cmp dword [0x040095d9], edx 	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40095d9	     0xf8433040000	                            je 0x4009a12	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x40095df	          0x4c89e7	                            mov rdi, r12	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_27
0x40095e2	      0xe8b9f4ffff	                call sym.push_next_match	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_27
0x40095e7	    0x48833d000000	               cmp qword [0x040095ef], 0	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x40095ef	     0xf840bfaffff	                            je 0x4009000	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x40095f5	    0x48c705000000	               mov qword [0x04009600], 0	      2342	syntax.c	FUNCTION_28	DO_1	IF_32
0x4009600	    0xc70500000000	     mov dword [0x0400960a], 0xffffffff 	      2343	syntax.c	FUNCTION_28	DO_1	IF_32
0x400960a	      0xe9f1f9ffff	                           jmp 0x4009000	      2343	syntax.c	FUNCTION_28	DO_1	IF_32
0x400960f	              0x90	                                     nop	      2343	syntax.c	FUNCTION_28	DO_1	IF_32
0x4009610	    0x488b35000000	            mov rsi, qword [0x04009617] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009617	    0x488b3d000000	            mov rdi, qword [0x0400961e] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400961e	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009620	      0xe800000000	                          call 0x4009625	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009625	    0x8b1500000000	            mov edx, dword [0x0400962b] 	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x400962b	          0xf6c601	                              test dh, 1	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x400962e	            0x741d	                            je 0x400964d	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4009630	    0x48630d000000	         movsxd rcx, dword [0x04009637] 	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x4009637	         0xfb60c08	             movzx ecx, byte [rax + rcx]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x400963b	          0x80f920	                            cmp cl, 0x20	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x400963e	     0xf8482fcffff	                            je 0x40092c6	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x4009644	          0x80f909	                               cmp cl, 9	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x4009647	     0xf8479fcffff	                            je 0x40092c6	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_29
0x400964d	          0x80e602	                               and dh, 2	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4009650	            0x7409	                            je 0x400965b	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4009652	          0x803800	                       cmp byte [rax], 0	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x4009655	     0xf846bfcffff	                            je 0x40092c6	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x400965b	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x400965f	    0x48c705000000	               mov qword [0x0400966a], 0	      2342	syntax.c	FUNCTION_28	DO_1	IF_32
0x400966a	    0xc70500000000	     mov dword [0x04009674], 0xffffffff 	      2343	syntax.c	FUNCTION_28	DO_1	IF_32
0x4009674	            0x85c0	                           test eax, eax	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4009676	     0xf8484f9ffff	                            je 0x4009000	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x400967c	      0xe945fcffff	                           jmp 0x40092c6	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4009681	     0xf1f80000000	                         nop dword [rax]	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x4009688	          0x83fb50	                           cmp ebx, 0x50	      3403	syntax.c	FUNCTION_44	IF_2
0x400968b	    0x488b05000000	            mov rax, qword [0x04009692] 	      3403	syntax.c	FUNCTION_44	IF_2
0x4009692	     0xf8fc3f9ffff	                            jg 0x400905b	      3403	syntax.c	FUNCTION_44	IF_2
0x4009698	    0x488dbc245002	                  lea rdi, [rsp + 0x250]	      3410	syntax.c	FUNCTION_44	CALL_2
0x40096a0	          0x4c89fa	                            mov rdx, r15	      3410	syntax.c	FUNCTION_44	CALL_2
0x40096a3	          0x4889ee	                            mov rsi, rbp	      3410	syntax.c	FUNCTION_44	CALL_2
0x40096a6	    0x41bf02000000	                             mov r15d, 2	      3410	syntax.c	FUNCTION_44	CALL_2
0x40096ac	      0xe800000000	                          call 0x40096b1	      3410	syntax.c	FUNCTION_44	CALL_2
0x40096b1	    0x488b05000000	            mov rax, qword [0x040096b8] 	      3410	syntax.c	FUNCTION_44	CALL_2
0x40096b8	        0x418d57ff	                      lea edx, [r15 - 1]	      3410	syntax.c	FUNCTION_44	CALL_2
0x40096bc	          0x83fa01	                              cmp edx, 1	      3419	syntax.c	FUNCTION_44	FOR_1
0x40096bf	     0xf84cd080000	                            je 0x4009f92	      3419	syntax.c	FUNCTION_44	FOR_1
0x40096c5	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x40096cd	     0xf84f4000000	                            je 0x40097c7	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x40096d3	          0x83fa02	                              cmp edx, 2	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x40096d6	    0x4c8d80280100	                   lea r8, [rax + 0x128]	      3419	syntax.c	FUNCTION_44	FOR_1
0x40096dd	     0xf845f080000	                            je 0x4009f42	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x40096e3	    0x488db4245002	                  lea rsi, [rsp + 0x250]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x40096eb	          0x4c89c7	                             mov rdi, r8	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x40096ee	      0xe800000000	                          call 0x40096f3	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x40096f3	        0x4c8b4008	                 mov r8, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x40096f7	          0x4d85c0	                             test r8, r8	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x40096fa	     0xf84c0000000	                            je 0x40097c0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4009700	    0x4981f8000000	                               cmp r8, 0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4009707	     0xf84b3000000	                            je 0x40097c0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x400970d	        0x4983e828	                            sub r8, 0x28	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4009711	    0x4c8b0d000000	              mov r9, qword [0x04009718]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4009718	     0xf84a2000000	                            je 0x40097c0	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x400971e	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4009723	      0x4c89442410	              mov qword [rsp + 0x10], r8	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4009728	            0xeb3a	                           jmp 0x4009764	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x400972a	    0x660f1f440000	                    nop word [rax + rax]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4009730	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4009735	            0x31ff	                            xor edi, edi	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4009737	          0x4889c6	                            mov rsi, rax	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x400973a	        0x488d5108	                      lea rdx, [rcx + 8]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x400973e	            0x31c9	                            xor ecx, ecx	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4009740	      0xe81b69ffff	                     call sym.in_id_list	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4009745	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4009747	           0xf95c0	                                setne al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400974a	            0x84c0	                             test al, al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400974c	     0xf8547faffff	                           jne 0x4009199	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4009752	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4009757	          0x488b00	                    mov rax, qword [rax]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x400975a	          0x4885c0	                           test rax, rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x400975d	      0x4889442410	             mov qword [rsp + 0x10], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4009762	            0x745c	                            je 0x40097c0	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4009764	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4009769	          0x4885c0	                           test rax, rax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400976c	            0x75c2	                           jne 0x4009730	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400976e	          0x4d85e4	                           test r12, r12	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4009771	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4009776	     0xf842c010000	                            je 0x40098a8	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400977c	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x400977f	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4009784	        0x488d5008	                      lea rdx, [rax + 8]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4009788	          0x4c89e7	                            mov rdi, r12	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x400978b	          0x83e101	                              and ecx, 1	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x400978e	      0xe8cd68ffff	                     call sym.in_id_list	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4009793	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4009795	           0xf95c0	                                setne al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4009798	            0xebb0	                           jmp 0x400974a	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x400979a	    0x660f1f440000	                    nop word [rax + rax]	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40097a0	          0x397830	            cmp dword [rax + 0x30], edi 	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40097a3	     0xf8ed5fbffff	                           jle 0x400937e	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40097a9	    0x482d90000000	                           sub rax, 0x90	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x40097af	          0x4839f0	                            cmp rax, rsi	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40097b2	     0xf85bdfbffff	                           jne 0x4009375	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40097b8	          0x4d89c7	                             mov r15, r8	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40097bb	      0xe910fcffff	                           jmp 0x40093d0	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40097c0	    0x488b05000000	            mov rax, qword [0x040097c7] 	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x40097c7	        0x4183ff03	                             cmp r15d, 3	      3417	syntax.c	FUNCTION_44	FOR_1
0x40097cb	     0xf848af8ffff	                            je 0x400905b	      3417	syntax.c	FUNCTION_44	FOR_1
0x40097d1	        0x4183c701	                             add r15d, 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x40097d5	      0xe9defeffff	                           jmp 0x40096b8	      3417	syntax.c	FUNCTION_44	FOR_1
0x40097da	    0x660f1f440000	                    nop word [rax + rax]	      3417	syntax.c	FUNCTION_44	FOR_1
0x40097e0	        0x4a8d342b	                    lea rsi, [rbx + r13]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x40097e4	          0x4889df	                            mov rdi, rbx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x40097e7	    0xff1500000000	                 call qword [0x040097ed]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x40097ed	            0x4898	                                    cdqe	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x40097ef	      0xe93afdffff	                           jmp 0x400952e	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x40097f4	         0xf1f4000	                         nop dword [rax]	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x40097f8	          0x4d85e4	                           test r12, r12	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x40097fb	     0xf84ff010000	                            je 0x4009a00	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009801	        0x418b4d24	            mov ecx, dword [r13 + 0x24] 	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x4009805	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x400980a	        0x498d5550	                   lea rdx, [r13 + 0x50]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x400980e	          0x4c89e7	                            mov rdi, r12	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x4009811	          0x83e101	                              and ecx, 1	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x4009814	      0xe84768ffff	                     call sym.in_id_list	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_14
0x4009819	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400981b	           0xf95c0	                                setne al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x400981e	      0xe9faf8ffff	                           jmp 0x400911d	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009823	       0xf1f440000	                   nop dword [rax + rax]	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009828	            0x85c9	                           test ecx, ecx	      1941	syntax.c	FUNCTION_28	IF_1
0x400982a	     0xf8451f7ffff	                            je 0x4008f81	      1941	syntax.c	FUNCTION_28	IF_1
0x4009830	    0x8b0500000000	            mov eax, dword [0x04009836] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4009836	            0x85c0	                           test eax, eax	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4009838	            0x7818	                            js 0x4009852	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x400983a	    0x8b0500000000	            mov eax, dword [0x04009840] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x4009840	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x4009845	            0x740b	                            je 0x4009852	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x4009847	            0x39c1	                            cmp ecx, eax	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x4009849	            0x7f07	                            jg 0x4009852	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x400984b	            0x31ff	                            xor edi, edi	      1948	syntax.c	FUNCTION_28	IF_1	CALL_2
0x400984d	      0xe84ef2ffff	                call sym.push_next_match	      1948	syntax.c	FUNCTION_28	IF_1	CALL_2
0x4009852	    0xc70500000000	               mov dword [0x0400985c], 1	      1950	syntax.c	FUNCTION_28	IF_1
0x400985c	    0xc70500000000	               mov dword [0x04009866], 0	      1951	syntax.c	FUNCTION_28	IF_1
0x4009866	            0x31c0	                            xor eax, eax	      1952	syntax.c	FUNCTION_28	IF_1
0x4009868	      0xe92afcffff	                           jmp 0x4009497	      1952	syntax.c	FUNCTION_28	IF_1
0x400986d	           0xf1f00	                         nop dword [rax]	      1952	syntax.c	FUNCTION_28	IF_1
0x4009870	    0x488b05000000	            mov rax, qword [0x04009877] 	      1975	syntax.c	FUNCTION_28
0x4009877	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1975	syntax.c	FUNCTION_28
0x400987f	      0x4883780800	                  cmp qword [rax + 8], 0	      1975	syntax.c	FUNCTION_28
0x4009884	     0xf853af7ffff	                           jne 0x4008fc4	      1975	syntax.c	FUNCTION_28
0x400988a	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      1975	syntax.c	FUNCTION_28
0x4009892	           0xf95c0	                                setne al	      1975	syntax.c	FUNCTION_28
0x4009895	           0xfb6c0	                           movzx eax, al	      1975	syntax.c	FUNCTION_28
0x4009898	        0x8944240c	              mov dword [rsp + 0xc], eax	      1975	syntax.c	FUNCTION_28
0x400989c	      0xe923f7ffff	                           jmp 0x4008fc4	      1975	syntax.c	FUNCTION_28
0x40098a1	     0xf1f80000000	                         nop dword [rax]	      1975	syntax.c	FUNCTION_28
0x40098a8	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40098ab	          0x83e001	                              and eax, 1	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40098ae	          0x83f001	                              xor eax, 1	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40098b1	          0x83e001	                              and eax, 1	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40098b4	      0xe991feffff	                           jmp 0x400974a	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x40098b9	    0x8b3d00000000	            mov edi, dword [0x040098bf] 	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x40098bf	            0x85ff	                           test edi, edi	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x40098c1	     0xf853e020000	                           jne 0x4009b05	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x40098c7	            0x31c0	                            xor eax, eax	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x40098c9	    0x83bb5c020000	              cmp dword [rbx + 0x25c], 1	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x40098d0	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x40098d5	           0xf94c0	                                 sete al	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x40098d8	            0x8901	                    mov dword [rcx], eax	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x40098da	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x40098de	          0x4409f0	                            or eax, r14d	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x40098e1	     0xf8534fbffff	                           jne 0x400941b	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x40098e7	      0xe894eeffff	               call sym.check_state_ends	      2454	syntax.c	FUNCTION_28	IF_36	IF_44	CALL_34
0x40098ec	    0x8b3500000000	            mov esi, dword [0x040098f2] 	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x40098f2	            0x85f6	                           test esi, esi	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x40098f4	     0xf8e21fbffff	                           jle 0x400941b	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x40098fa	    0x488b35000000	            mov rsi, qword [0x04009901] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009901	    0x488b3d000000	            mov rdi, qword [0x04009908] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009908	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x400990a	      0xe800000000	                          call 0x400990f	      3305	syntax.c	FUNCTION_42	CALL_1
0x400990f	    0x48630d000000	         movsxd rcx, dword [0x04009916] 	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4009916	        0x803c0800	                 cmp byte [rax + rcx], 0	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x400991a	          0x4889ca	                            mov rdx, rcx	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x400991d	     0xf84f8faffff	                            je 0x400941b	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_35
0x4009923	          0x83c201	                              add edx, 1	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4009926	    0x891500000000	            mov dword [0x0400992c], edx 	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x400992c	      0xe84feeffff	               call sym.check_state_ends	      2459	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_36
0x4009931	    0x832d00000000	               sub dword [0x04009938], 1	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x4009938	      0xe9defaffff	                           jmp 0x400941b	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x400993d	    0x8b0d00000000	            mov ecx, dword [0x04009943] 	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4009943	        0x41394d38	            cmp dword [r13 + 0x38], ecx 	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4009947	     0xf8d6bf7ffff	                           jge 0x40090b8	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x400994d	      0xe9dff7ffff	                           jmp 0x4009131	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x4009952	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x400995a	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x4009962	            0x31c9	                            xor ecx, ecx	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x4009964	          0x4c89ea	                            mov rdx, r13	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x4009967	      0xe89495ffff	 call sym.syn_add_start_off.constprop.19	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_16
0x400996c	    0x488b35000000	            mov rsi, qword [0x04009973] 	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4009973	    0x4839b424a000	            cmp qword [rsp + 0xa0], rsi 	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x400997b	     0xf8f0bf8ffff	                            jg 0x400918c	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x4009981	    0x448b9424a800	           mov r10d, dword [rsp + 0xa8] 	      2159	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009989	    0x443b15000000	           cmp r10d, dword [0x04009990] 	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x4009990	        0x45895538	            mov dword [r13 + 0x38], r10d	      2163	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009994	     0xf8d1ef7ffff	                           jge 0x40090b8	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x400999a	    0x486305000000	         movsxd rax, dword [0x040099a1] 	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099a1	    0x8b0d00000000	            mov ecx, dword [0x040099a7] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x40099a7	          0x4889c2	                            mov rdx, rax	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099aa	        0x488d04c0	                  lea rax, [rax + rax*8]	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099ae	        0x48c1e004	                              shl rax, 4	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099b2	    0x480305000000	             add rax, qword [0x040099b9]	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099b9	            0xeb0b	                           jmp 0x40099c6	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099bb	       0xf1f440000	                   nop dword [rax + rax]	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099c0	    0x482d90000000	                           sub rax, 0x90	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099c6	          0x83ea01	                              sub edx, 1	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099c9	     0xf881d020000	                            js 0x4009bec	      2498	syntax.c	FUNCTION_29	FOR_1
0x40099cf	          0x394880	            cmp dword [rax - 0x80], ecx 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x40099d2	            0x75ec	                           jne 0x40099c0	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1
0x40099d4	    0x39b07cffffff	            cmp dword [rax - 0x84], esi 	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x40099da	            0x75e4	                           jne 0x40099c0	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1
0x40099dc	    0x3b9870ffffff	             cmp ebx, dword [rax - 0x90]	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x40099e2	            0x75dc	                           jne 0x40099c0	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1
0x40099e4	    0xc70500000000	               mov dword [0x040099ee], 1	      2179	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22
0x40099ee	      0xe9c5f6ffff	                           jmp 0x40090b8	      2180	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22
0x40099f3	          0x4c89ef	                            mov rdi, r13	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_12
0x40099f6	      0xe800000000	                          call 0x40099fb	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_12
0x40099fb	      0xe9b8f8ffff	                           jmp 0x40092b8	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_12
0x4009a00	        0x418b4524	            mov eax, dword [r13 + 0x24] 	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009a04	          0x83e001	                              and eax, 1	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009a07	          0x83f001	                              xor eax, 1	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009a0a	          0x83e001	                              and eax, 1	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009a0d	      0xe90bf7ffff	                           jmp 0x400911d	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009a12	    0x488b15000000	            mov rdx, qword [0x04009a19] 	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4009a19	        0x488d0480	                  lea rax, [rax + rax*4]	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4009a1d	        0x48c1e005	                              shl rax, 5	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4009a21	    0x480382700200	            add rax, qword [rdx + 0x270]	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x4009a28	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a2c	          0x4885d2	                           test rdx, rdx	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a2f	     0xf84aafbffff	                            je 0x40095df	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a35	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a38	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4009a40	      0xbe01000000	                              mov esi, 1	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4009a45	    0x488915000000	            mov qword [0x04009a4c], rdx 	      2292	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a4c	    0x890500000000	            mov dword [0x04009a52], eax 	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a52	      0xe800000000	                          call 0x4009a57	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4009a57	          0x83f801	                              cmp eax, 1	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4009a5a	     0xf8488030000	                            je 0x4009de8	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_26
0x4009a60	    0xc70500000000	     mov dword [0x04009a6a], 0xffffffff 	      2305	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a6a	    0xc74424240100	               mov dword [rsp + 0x24], 1	      2295	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a72	      0xe989f5ffff	                           jmp 0x4009000	      2295	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x4009a77	    0x448b05000000	            mov r8d, dword [0x04009a7e] 	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4009a7e	          0x4585c0	                           test r8d, r8d	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4009a81	     0xf8474f9ffff	                            je 0x40093fb	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x4009a87	        0x498b7778	            mov rsi, qword [r15 + 0x78] 	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009a8b	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009a93	            0x31c9	                            xor ecx, ecx	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009a95	          0x4c89ff	                            mov rdi, r15	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009a98	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      2412	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4009aa3	    0x66898424b400	               mov word [rsp + 0xb4], ax	      2413	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4009aab	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      2414	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x4009ab7	      0xe8a465ffff	                     call sym.in_id_list	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009abc	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009ac1	            0x85c0	                           test eax, eax	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009ac3	           0xf94c0	                                 sete al	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009ac6	           0xfb6c0	                           movzx eax, al	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009ac9	            0x8901	                    mov dword [rcx], eax	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009acb	      0xe93ef9ffff	                           jmp 0x400940e	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_31
0x4009ad0	    0xf70500000000	         test dword [0x04009ada], 0x280 	      2475	syntax.c	FUNCTION_28	IF_47
0x4009ada	     0xf8578f9ffff	                           jne 0x4009458	      2475	syntax.c	FUNCTION_28	IF_47
0x4009ae0	    0x48c705000000	               mov qword [0x04009aeb], 0	      2476	syntax.c	FUNCTION_28	IF_47
0x4009aeb	      0xe968f9ffff	                           jmp 0x4009458	      2476	syntax.c	FUNCTION_28	IF_47
0x4009af0	          0x8b4160	            mov eax, dword [rcx + 0x60] 	      2067	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4009af3	      0x4189442460	             mov dword [r12 + 0x60], eax	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4009af8	          0x8b4108	                mov eax, dword [rcx + 8]	      2069	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4009afb	      0x4189442408	                mov dword [r12 + 8], eax	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4009b00	      0xe99af7ffff	                           jmp 0x400929f	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x4009b05	        0x498b7778	            mov rsi, qword [r15 + 0x78] 	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4009b09	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4009b11	            0x31c9	                            xor ecx, ecx	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4009b13	          0x4c89ff	                            mov rdi, r15	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4009b16	    0xc78424b00000	               mov dword [rsp + 0xb0], 0	      2428	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4009b21	    0x66898424b400	               mov word [rsp + 0xb4], ax	      2429	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4009b29	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      2430	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x4009b35	      0xe82665ffff	                     call sym.in_id_list	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4009b3a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4009b3f	            0x8901	                    mov dword [rcx], eax	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_32
0x4009b41	    0x8b8394020000	           mov eax, dword [rbx + 0x294] 	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4009b47	            0x85c0	                           test eax, eax	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4009b49	     0xf84bff8ffff	                            je 0x400940e	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4009b4f	        0x498b7778	            mov rsi, qword [r15 + 0x78] 	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4009b53	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4009b5b	            0x31c9	                            xor ecx, ecx	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4009b5d	          0x4c89ff	                            mov rdi, r15	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4009b60	    0x66898424b400	               mov word [rsp + 0xb4], ax	      2435	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x4009b68	      0xe8f364ffff	                     call sym.in_id_list	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4009b6d	            0x85c0	                           test eax, eax	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4009b6f	     0xf8499f8ffff	                            je 0x400940e	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_33
0x4009b75	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x4009b7a	    0xc70000000000	                      mov dword [rax], 0	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x4009b80	      0xe989f8ffff	                           jmp 0x400940e	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x4009b85	           0xf1f00	                         nop dword [rax]	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x4009b88	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      2464	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009b8e	     0xf8487f8ffff	                            je 0x400941b	      2464	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009b94	    0x488b15000000	            mov rdx, qword [0x04009b9b] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009b9b	    0x8b825c020000	           mov eax, dword [rdx + 0x25c] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009ba1	            0x85c0	                           test eax, eax	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009ba3	     0xf8531020000	                           jne 0x4009dda	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009ba9	    0x8b8a90020000	           mov ecx, dword [rdx + 0x290] 	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009baf	            0x31c0	                            xor eax, eax	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009bb1	            0x85c9	                           test ecx, ecx	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009bb3	           0xf94c0	                                 sete al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009bb6	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009bbb	            0x8901	                    mov dword [rcx], eax	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009bbd	      0xe959f8ffff	                           jmp 0x400941b	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009bc2	          0x83e202	                              and edx, 2	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4009bc5	      0x41896c2404	                mov dword [r12 + 4], ebp	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009bca	      0x41896c2408	                mov dword [r12 + 8], ebp	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x4009bcf	     0xf84bef6ffff	                            je 0x4009293	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x4009bd5	    0x41c744246000	               mov dword [r12 + 0x60], 0	      2061	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4009bde	    0x41c744240800	                  mov dword [r12 + 8], 0	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4009be7	      0xe9b3f6ffff	                           jmp 0x400929f	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x4009bec	    0x48638c24c000	         movsxd rcx, dword [rsp + 0xc0] 	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009bf4	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009bfc	          0x4889c8	                            mov rax, rcx	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009bff	        0x488d148a	                  lea rdx, [rdx + rcx*4]	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009c03	            0xeb0f	                           jmp 0x4009c14	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009c05	           0xf1f00	                         nop dword [rax]	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009c08	        0x4883ea04	                              sub rdx, 4	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009c0c	            0x3b1a	                    cmp ebx, dword [rdx]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4009c0e	     0xf84d0fdffff	                            je 0x40099e4	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x4009c14	          0x83e801	                              sub eax, 1	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009c17	            0x79ef	                           jns 0x4009c08	      2506	syntax.c	FUNCTION_29	FOR_2
0x4009c19	    0x488b84248801	           mov rax, qword [rsp + 0x188] 	      2183	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009c21	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4009c29	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4009c2e	      0xb902000000	                              mov ecx, 2	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4009c33	          0x4c89ea	                            mov rdx, r13	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4009c36	      0x4489542410	            mov dword [rsp + 0x10], r10d	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4009c3b	      0x4889442450	             mov qword [rsp + 0x50], rax	      2183	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009c40	    0x8b8424900100	           mov eax, dword [rsp + 0x190] 	      2184	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009c47	        0x89442458	             mov dword [rsp + 0x58], eax	      2184	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009c4b	      0xe8b092ffff	 call sym.syn_add_start_off.constprop.19	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_18
0x4009c50	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4009c58	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4009c60	          0x4531c0	                            xor r8d, r8d	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4009c63	      0xb904000000	                              mov ecx, 4	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4009c68	          0x4c89ea	                            mov rdx, r13	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4009c6b	      0xe8a069ffff	                call sym.syn_add_end_off	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x4009c70	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x4009c75	      0xe800000000	                          call 0x4009c7a	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x4009c7a	    0x488b05000000	            mov rax, qword [0x04009c81] 	      2200	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009c81	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2203	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009c8a	    0x48c705000000	               mov qword [0x04009c95], 0	      2201	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009c95	    0x48c784249000	               mov qword [rsp + 0x90], 0	      2204	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009ca1	    0xc78424980000	               mov dword [rsp + 0x98], 0	      2205	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009cac	    0xc74424440000	               mov dword [rsp + 0x44], 0	      2206	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009cb4	      0x4889442430	             mov qword [rsp + 0x30], rax	      2200	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009cb9	    0x48c744247000	               mov qword [rsp + 0x70], 0	      2207	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009cc2	      0x410fb64500	                   movzx eax, byte [r13]	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009cc7	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009ccc	            0x3c02	                               cmp al, 2	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009cce	     0xf84d4010000	                            je 0x4009ea8	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009cd4	            0x3c01	                               cmp al, 1	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4009cd6	     0xf8451010000	                            je 0x4009e2d	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4009cdc	    0x488b15000000	            mov rdx, qword [0x04009ce3] 	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4009ce3	      0x488d442470	                   lea rax, [rsp + 0x70]	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4009ce8	      0x4c8d5c2450	                   lea r11, [rsp + 0x50]	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x4009ced	      0x483b542460	            cmp rdx, qword [rsp + 0x60] 	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4009cf2	     0xf8420010000	                            je 0x4009e18	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4009cf8	          0x4889c7	                            mov rdi, rax	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x4009cfb	          0x4c89de	                            mov rsi, r11	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x4009cfe	      0x4489542410	            mov dword [rsp + 0x10], r10d	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x4009d03	      0xe85893ffff	                 call sym.limit_pos_zero	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_24
0x4009d08	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d0d	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d12	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      2263	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d17	    0x488b3d000000	            mov rdi, qword [0x04009d1e] 	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4009d1e	    0x891d00000000	            mov dword [0x04009d24], ebx 	      2262	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d24	    0x488905000000	            mov qword [0x04009d2b], rax 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d2b	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d30	    0x488915000000	            mov qword [0x04009d37], rdx 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d37	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d3c	    0x448915000000	           mov dword [0x04009d43], r10d 	      2263	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d43	    0x488905000000	            mov qword [0x04009d4a], rax 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d4a	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d4f	    0x488915000000	            mov qword [0x04009d56], rdx 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d56	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d5b	    0x488905000000	            mov qword [0x04009d62], rax 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d62	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2267	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d67	    0x488915000000	            mov qword [0x04009d6e], rdx 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d6e	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d76	    0x488905000000	            mov qword [0x04009d7d], rax 	      2267	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d7d	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d85	    0x488915000000	            mov qword [0x04009d8c], rdx 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d8c	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d94	    0x488905000000	            mov qword [0x04009d9b], rax 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009d9b	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009da3	    0x488915000000	            mov qword [0x04009daa], rdx 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009daa	    0x488905000000	            mov qword [0x04009db1], rax 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009db1	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2270	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009db5	    0x890500000000	            mov dword [0x04009dbb], eax 	      2270	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009dbb	      0xe800000000	                          call 0x4009dc0	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x4009dc0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009dc5	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2273	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009dce	    0x488905000000	            mov qword [0x04009dd5], rax 	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009dd5	      0xe9def2ffff	                           jmp 0x40090b8	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x4009dda	          0x83f801	                              cmp eax, 1	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009ddd	           0xf94c0	                                 sete al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009de0	           0xfb6c0	                           movzx eax, al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009de3	      0xe9cefdffff	                           jmp 0x4009bb6	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x4009de8	    0x48638424c000	         movsxd rax, dword [rsp + 0xc0] 	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4009df0	    0x8b0d00000000	            mov ecx, dword [0x04009df6] 	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4009df6	          0x8d5001	                      lea edx, [rax + 1]	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4009df9	    0x899424c00000	             mov dword [rsp + 0xc0], edx	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4009e00	    0x488b9424d000	            mov rdx, qword [rsp + 0xd0] 	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4009e08	          0x890c82	            mov dword [rdx + rax*4], ecx	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4009e0b	      0xe950fcffff	                           jmp 0x4009a60	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x4009e10	          0x4531ff	                          xor r15d, r15d	      1914	syntax.c	FUNCTION_28
0x4009e13	      0xe9b8f5ffff	                           jmp 0x40093d0	      1914	syntax.c	FUNCTION_28
0x4009e18	      0x443b542468	           cmp r10d, dword [rsp + 0x68] 	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4009e1d	     0xf8ed5feffff	                           jle 0x4009cf8	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4009e23	      0x4489542468	            mov dword [rsp + 0x68], r10d	      2259	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4009e28	      0xe9cbfeffff	                           jmp 0x4009cf8	      2259	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x4009e2d	      0x488d442470	                   lea rax, [rsp + 0x70]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e32	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e3a	          0x4531c0	                            xor r8d, r8d	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e3d	      0xb903000000	                              mov ecx, 3	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e42	          0x4c89ea	                            mov rdx, r13	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e45	      0x448954243c	            mov dword [rsp + 0x3c], r10d	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e4a	          0x4889c7	                            mov rdi, rax	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e4d	      0x4889442418	             mov qword [rsp + 0x18], rax	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e52	      0xe8b967ffff	                call sym.syn_add_end_off	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_22
0x4009e57	      0x4c8d5c2450	                   lea r11, [rsp + 0x50]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4009e5c	    0x488db424e000	                   lea rsi, [rsp + 0xe0]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4009e64	          0x4531c0	                            xor r8d, r8d	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4009e67	      0xb901000000	                              mov ecx, 1	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4009e6c	          0x4c89ea	                            mov rdx, r13	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4009e6f	          0x4c89df	                            mov rdi, r11	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4009e72	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4009e77	      0xe89467ffff	                call sym.syn_add_end_off	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_23
0x4009e7c	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009e81	    0x488b0d000000	            mov rcx, qword [0x04009e88] 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009e88	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009e8d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009e92	      0x448b54243c	           mov r10d, dword [rsp + 0x3c] 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009e97	          0x4839ca	                            cmp rdx, rcx	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009e9a	     0xf8405010000	                            je 0x4009fa5	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009ea0	          0x4889ca	                            mov rdx, rcx	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009ea3	      0xe945feffff	                           jmp 0x4009ced	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009ea8	      0x41f6452404	               test byte [r13 + 0x24], 4	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009ead	     0xf8429feffff	                            je 0x4009cdc	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009eb3	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009eb8	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009ebd	      0x4c8d5c2450	                   lea r11, [rsp + 0x50]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009ec2	      0x448954243c	            mov dword [rsp + 0x3c], r10d	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009ec7	            0x89df	                            mov edi, ebx	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009ec9	    0x48898424b000	             mov qword [rsp + 0xb0], rax	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009ed1	    0x48899424b800	             mov qword [rsp + 0xb8], rdx	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009ed9	      0x488d442470	                   lea rax, [rsp + 0x70]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009ede	        0xff742430	                 push qword [rsp + 0x30]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009ee2	          0x4889c1	                            mov rcx, rax	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009ee5	      0x488d54244c	                   lea rdx, [rsp + 0x4c]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009eea	              0x52	                                push rdx	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009eeb	          0x4c89da	                            mov rdx, r11	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009eee	    0x4c8d8c24a000	                    lea r9, [rsp + 0xa0]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009ef6	      0x4c8d442458	                    lea r8, [rsp + 0x58]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009efb	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009f03	      0x4889442428	             mov qword [rsp + 0x28], rax	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009f08	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009f0d	      0xe85e93ffff	                    call sym.find_endpos	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_21
0x4009f12	            0x4159	                                  pop r9	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4009f14	            0x415a	                                 pop r10	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4009f16	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4009f1c	     0xf8496f1ffff	                            je 0x40090b8	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4009f22	    0x488b15000000	            mov rdx, qword [0x04009f29] 	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x4009f29	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      2217	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009f2e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2217	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009f33	      0x448b54243c	           mov r10d, dword [rsp + 0x3c] 	      2217	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009f38	      0xe9b0fdffff	                           jmp 0x4009ced	      2217	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x4009f3d	      0xe800000000	                          call 0x4009f42	      2487	syntax.c	FUNCTION_28
0x4009f42	    0x488d94245002	                  lea rdx, [rsp + 0x250]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4009f4a	      0xb951000000	                           mov ecx, 0x51	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4009f4f	            0x89de	                            mov esi, ebx	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4009f51	          0x4889ef	                            mov rdi, rbp	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4009f54	      0x4c89442410	              mov qword [rsp + 0x10], r8	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4009f59	      0xe800000000	                          call 0x4009f5e	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4009f5e	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4009f63	    0x488db4245002	                  lea rsi, [rsp + 0x250]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4009f6b	          0x4c89c7	                             mov rdi, r8	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4009f6e	      0xe800000000	                          call 0x4009f73	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4009f73	        0x4c8b4008	                 mov r8, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4009f77	    0x4981f8000000	                               cmp r8, 0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4009f7e	     0xf84d0f0ffff	                            je 0x4009054	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4009f84	          0x4d85c0	                             test r8, r8	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4009f87	     0xf8580f7ffff	                           jne 0x400970d	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4009f8d	      0xe9c2f0ffff	                           jmp 0x4009054	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4009f92	      0x4883780800	                  cmp qword [rax + 8], 0	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4009f97	          0x4989c0	                             mov r8, rax	      3419	syntax.c	FUNCTION_44	FOR_1
0x4009f9a	     0xf8431f8ffff	                            je 0x40097d1	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4009fa0	      0xe93ef7ffff	                           jmp 0x40096e3	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4009fa5	        0x8b4c2458	            mov ecx, dword [rsp + 0x58] 	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009fa9	          0x4401f1	                           add ecx, r14d	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009fac	          0x4139ca	                           cmp r10d, ecx	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009faf	     0xf8e38fdffff	                           jle 0x4009ced	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x4009fb5	    0x8b8424900100	           mov eax, dword [rsp + 0x190] 	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x4009fbc	    0x398424f00000	            cmp dword [rsp + 0xf0], eax 	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x4009fc3	     0xf85eff0ffff	                           jne 0x40090b8	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x4009fc9	      0xe916faffff	                           jmp 0x40099e4	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
restore_chartab	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,1	13
0x4000370	    0x488b05000000	            mov rax, qword [0x04000377] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000377	    0x488b0d000000	            mov rcx, qword [0x0400037e] 	      1025	syntax.c	FUNCTION_7	IF_1
0x400037e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000382	    0x483988b00400	           cmp qword [rax + 0x4b0], rcx 	      1025	syntax.c	FUNCTION_7	IF_1
0x4000389	            0x7425	                            je 0x40003b0	      1025	syntax.c	FUNCTION_7	IF_1
0x400038b	    0x488b05000000	            mov rax, qword [0x04000392] 	        59	string3.h	FUNCTION_171	CALL_3
0x4000392	          0x4889fe	                            mov rsi, rdi	        59	string3.h	FUNCTION_171	CALL_3
0x4000395	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x400039a	    0x4805a0090000	                          add rax, 0x9a0	        59	string3.h	FUNCTION_171	CALL_3
0x40003a0	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_171	CALL_3
0x40003a3	      0xe900000000	                           jmp 0x40003a8	        59	string3.h	FUNCTION_171	CALL_3
0x40003a8	     0xf1f84000000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_171	CALL_3
0x40003b0	            0xf3c3	                                     ret	        59	string3.h	FUNCTION_171	CALL_3
check_state_ends	SWITCH,0:WHILE,0:DO,0:IF,9:ELSE,2:FOR,1:functions,0:CALL,7	142
0x4008780	    0x486305000000	         movsxd rax, dword [0x04008787] 	      2615	syntax.c	FUNCTION_31
0x4008787	    0x488b15000000	            mov rdx, qword [0x0400878e] 	      2615	syntax.c	FUNCTION_31
0x400878e	              0x53	                                push rbx	      2611	syntax.c	FUNCTION_31
0x400878f	        0x488d04c0	                  lea rax, [rax + rax*8]	      2615	syntax.c	FUNCTION_31
0x4008793	        0x48c1e004	                              shl rax, 4	      2615	syntax.c	FUNCTION_31
0x4008797	    0x488d9c0270ff	             lea rbx, [rdx + rax - 0x90]	      2615	syntax.c	FUNCTION_31
0x400879f	              0x90	                                     nop	      2615	syntax.c	FUNCTION_31
0x40087a0	          0x8b7b5c	            mov edi, dword [rbx + 0x5c] 	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087a3	            0x85ff	                           test edi, edi	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087a5	     0xf846c010000	                            je 0x4008917	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087ab	    0x488b35000000	            mov rsi, qword [0x040087b2] 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087b2	        0x48397318	            cmp qword [rbx + 0x18], rsi 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087b6	            0x7c15	                            jl 0x40087cd	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087b8	     0xf8559010000	                           jne 0x4008917	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087be	    0x8b0500000000	            mov eax, dword [0x040087c4] 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087c4	          0x394320	            cmp dword [rbx + 0x20], eax 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087c7	     0xf8f4a010000	                            jg 0x4008917	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40087cd	          0x8b4358	            mov eax, dword [rbx + 0x58] 	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40087d0	            0x85c0	                           test eax, eax	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40087d2	            0x7410	                            je 0x40087e4	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40087d4	        0x483b7348	            cmp rsi, qword [rbx + 0x48] 	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40087d8	     0xf8cd1010000	                            jl 0x40089af	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40087de	     0xf84bc010000	                            je 0x40089a0	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40087e4	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40087e8	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40087ef	    0xf7c280020000	                         test edx, 0x280	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x40087f5	    0x488905000000	            mov qword [0x040087fc], rax 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40087fc	    0x891500000000	            mov dword [0x04008802], edx 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4008802	            0x89d0	                            mov eax, edx	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4008804	     0xf845e010000	                            je 0x4008968	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x400880a	      0x2500400000	                         and eax, 0x4000	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400880f	            0x89c3	                            mov ebx, eax	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4008811	    0x486305000000	         movsxd rax, dword [0x04008818] 	      2912	syntax.c	FUNCTION_36	IF_1
0x4008818	            0x85c0	                           test eax, eax	      2912	syntax.c	FUNCTION_36	IF_1
0x400881a	     0xf8500010000	                           jne 0x4008920	      2912	syntax.c	FUNCTION_36	IF_1
0x4008820	    0x8b1500000000	            mov edx, dword [0x04008826] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4008826	    0xc70500000000	     mov dword [0x04008830], 0xffffffff 	      2918	syntax.c	FUNCTION_36
0x4008830	            0x85d2	                           test edx, edx	      2921	syntax.c	FUNCTION_36	IF_2
0x4008832	     0xf88df000000	                            js 0x4008917	      2921	syntax.c	FUNCTION_36	IF_2
0x4008838	    0xc70500000000	     mov dword [0x04008842], 0xffffffff 	      2922	syntax.c	FUNCTION_36	IF_2
0x4008842	            0x85c0	                           test eax, eax	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x4008844	     0xf84cd000000	                            je 0x4008917	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x400884a	            0x85db	                           test ebx, ebx	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x400884c	            0x741f	                            je 0x400886d	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x400884e	    0x8b3500000000	            mov esi, dword [0x04008854] 	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4008854	            0x85f6	                           test esi, esi	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4008856	            0x7815	                            js 0x400886d	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4008858	            0x31ff	                            xor edi, edi	      2675	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	CALL_4
0x400885a	      0xe831b1ffff	                call sym.syn_update_ends	      2675	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	CALL_4
0x400885f	    0x8b0500000000	            mov eax, dword [0x04008865] 	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4008865	            0x85c0	                           test eax, eax	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4008867	     0xf84aa000000	                            je 0x4008917	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x400886d	            0x4898	                                    cdqe	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400886f	    0x488b15000000	            mov rdx, qword [0x04008876] 	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4008876	        0x488d04c0	                  lea rax, [rax + rax*8]	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400887a	        0x48c1e004	                              shl rax, 4	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400887e	    0x488d9c0270ff	             lea rbx, [rdx + rax - 0x90]	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4008886	          0x486303	                 movsxd rax, dword [rbx]	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4008889	            0x85c0	                           test eax, eax	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400888b	     0xf880fffffff	                            js 0x40087a0	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4008891	    0x488b15000000	            mov rdx, qword [0x04008898] 	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4008898	        0x488d0480	                  lea rax, [rax + rax*4]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x400889c	        0x48c1e005	                              shl rax, 5	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x40088a0	    0x480382700200	            add rax, qword [rdx + 0x270]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x40088a7	          0x803802	                       cmp byte [rax], 2	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x40088aa	     0xf85f0feffff	                           jne 0x40087a0	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x40088b0	    0x48f743684004	         test qword [rbx + 0x68], 0x440 	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x40088b8	     0xf85e2feffff	                           jne 0x40087a0	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x40088be	    0x8b3500000000	            mov esi, dword [0x040088c4] 	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40088c4	      0xba01000000	                              mov edx, 1	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40088c9	          0x4889df	                            mov rdi, rbx	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40088cc	      0xe84fafffff	                  call sym.update_si_end	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x40088d1	      0xe8caa7ffff	                  call sym.check_keepend	      2697	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_6
0x40088d6	    0xf60500000000	               test byte [0x040088dd], 8	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40088dd	     0xf84bdfeffff	                            je 0x40087a0	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40088e3	    0x8b0d00000000	            mov ecx, dword [0x040088e9] 	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40088e9	            0x85c9	                           test ecx, ecx	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40088eb	     0xf89affeffff	                           jns 0x40087a0	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x40088f1	    0x488b35000000	            mov rsi, qword [0x040088f8] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x40088f8	    0x488b3d000000	            mov rdi, qword [0x040088ff] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x40088ff	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4008901	      0xe800000000	                          call 0x4008906	      3305	syntax.c	FUNCTION_42	CALL_1
0x4008906	    0x486315000000	         movsxd rdx, dword [0x0400890d] 	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x400890d	        0x803c1000	                 cmp byte [rax + rdx], 0	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x4008911	     0xf8589feffff	                           jne 0x40087a0	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x4008917	              0x5b	                                 pop rbx	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4008918	              0xc3	                                     ret	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4008919	     0xf1f80000000	                         nop dword [rax]	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4008920	        0x488d04c0	                  lea rax, [rax + rax*8]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4008924	        0x48c1e004	                              shl rax, 4	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4008928	    0x480305000000	             add rax, qword [0x0400892f]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x400892f	        0x488b78f8	                mov rdi, qword [rax - 8]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4008933	      0xe800000000	                          call 0x4008938	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4008938	    0x8b0500000000	            mov eax, dword [0x0400893e] 	      2915	syntax.c	FUNCTION_36	IF_1
0x400893e	    0xc70500000000	     mov dword [0x04008948], 0xffffffff 	      2918	syntax.c	FUNCTION_36
0x4008948	          0x83e801	                              sub eax, 1	      2915	syntax.c	FUNCTION_36	IF_1
0x400894b	    0x3b0500000000	            cmp eax, dword [0x04008951] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4008951	    0x890500000000	            mov dword [0x04008957], eax 	      2915	syntax.c	FUNCTION_36	IF_1
0x4008957	     0xf8fe5feffff	                            jg 0x4008842	      2921	syntax.c	FUNCTION_36	IF_2
0x400895d	      0xe9d6feffff	                           jmp 0x4008838	      2921	syntax.c	FUNCTION_36	IF_2
0x4008962	    0x660f1f440000	                    nop word [rax + rax]	      2921	syntax.c	FUNCTION_36	IF_2
0x4008968	    0x488b3d000000	            mov rdi, qword [0x0400896f] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400896f	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4008971	      0xe800000000	                          call 0x4008976	      3305	syntax.c	FUNCTION_42	CALL_1
0x4008976	    0x486315000000	         movsxd rdx, dword [0x0400897d] 	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x400897d	        0x803c1000	                 cmp byte [rax + rdx], 0	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x4008981	            0x750b	                           jne 0x400898e	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x4008983	    0x48c705000000	               mov qword [0x0400898e], 0	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x400898e	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4008991	      0xe974feffff	                           jmp 0x400880a	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4008996	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x40089a0	    0x8b0d00000000	            mov ecx, dword [0x040089a6] 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089a6	          0x394b50	            cmp dword [rbx + 0x50], ecx 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089a9	     0xf8e35feffff	                           jle 0x40087e4	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089af	            0x8903	                    mov dword [rbx], eax	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089b1	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089b5	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089b9	    0xc74358000000	               mov dword [rbx + 0x58], 0	      2635	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089c0	        0x48894318	             mov qword [rbx + 0x18], rax	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089c4	        0x48894338	             mov qword [rbx + 0x38], rax	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089c8	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089cc	        0x48895320	             mov qword [rbx + 0x20], rdx	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089d0	        0x48895340	             mov qword [rbx + 0x40], rdx	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089d4	          0x4889c2	                            mov rdx, rax	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089d7	        0x4883ca40	                            or rdx, 0x40	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089db	      0xa900000400	                       test eax, 0x40000	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x40089e0	        0x48895368	             mov qword [rbx + 0x68], rdx	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089e4	    0x8b1500000000	            mov edx, dword [0x040089ea] 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089ea	          0x8d4a01	                      lea ecx, [rdx + 1]	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089ed	          0x895370	             mov dword [rbx + 0x70], edx	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089f0	    0x890d00000000	            mov dword [0x040089f6], ecx 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40089f6	            0x740a	                            je 0x4008a02	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x40089f8	    0x480d40000200	                         or rax, 0x20040	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x40089fe	        0x48894368	             mov qword [rbx + 0x68], rax	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4008a02	    0x8b0500000000	            mov eax, dword [0x04008a08] 	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4008a08	          0x8d78ff	                      lea edi, [rax - 1]	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4008a0b	      0xe840fcffff	                 call sym.update_si_attr	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4008a10	    0x48c705000000	               mov qword [0x04008a1b], 0	      2647	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4008a1b	    0xc70500000000	               mov dword [0x04008a25], 0	      2650	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4008a25	    0xc70500000000	     mov dword [0x04008a2f], 0x7fffffff 	      2651	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4008a2f	              0x5b	                                 pop rbx	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4008a30	              0xc3	                                     ret	      2708	syntax.c	FUNCTION_31	ELSE_2
get_tgc_attr_idx	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,1:FOR,0:functions,0:CALL,2	27
0x40054a0	        0x4883ec38	                           sub rsp, 0x38	      8945	syntax.c	FUNCTION_133
0x40054a4	    0x64488b042528	                mov rax, qword fs:[0x28]	      8945	syntax.c	FUNCTION_133
0x40054ad	      0x4889442428	             mov qword [rsp + 0x28], rax	      8945	syntax.c	FUNCTION_133
0x40054b2	            0x31c0	                            xor eax, eax	      8945	syntax.c	FUNCTION_133
0x40054b4	    0x4881fe99d4ff	             cmp rsi, 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x40054bb	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x40054c3	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x40054cc	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x40054d5	        0x66893c24	                      mov word [rsp], di	      8949	syntax.c	FUNCTION_133
0x40054d9	            0x7525	                           jne 0x4005500	      8950	syntax.c	FUNCTION_133	IF_1
0x40054db	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x40054e2	            0x751c	                           jne 0x4005500	      8950	syntax.c	FUNCTION_133	IF_1
0x40054e4	    0x48c74424109a	mov qword [rsp + 0x10], 0xffffffffffffd49a	      8954	syntax.c	FUNCTION_133	IF_1
0x40054ed	    0x48c74424189a	mov qword [rsp + 0x18], 0xffffffffffffd49a	      8955	syntax.c	FUNCTION_133	IF_1
0x40054f6	            0xeb12	                           jmp 0x400550a	      8955	syntax.c	FUNCTION_133	IF_1
0x40054f8	     0xf1f84000000	                   nop dword [rax + rax]	      8955	syntax.c	FUNCTION_133	IF_1
0x4005500	      0x4889742410	             mov qword [rsp + 0x10], rsi	      8959	syntax.c	FUNCTION_133	ELSE_1
0x4005505	      0x4889542418	             mov qword [rsp + 0x18], rdx	      8960	syntax.c	FUNCTION_133	ELSE_1
0x400550a	          0x4889e6	                            mov rsi, rsp	      8962	syntax.c	FUNCTION_133	CALL_2
0x400550d	      0xbf00000000	                              mov edi, 0	      8962	syntax.c	FUNCTION_133	CALL_2
0x4005512	      0xe839f8ffff	                 call sym.get_attr_entry	      8962	syntax.c	FUNCTION_133	CALL_2
0x4005517	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      8963	syntax.c	FUNCTION_133
0x400551c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8963	syntax.c	FUNCTION_133
0x4005525	            0x7505	                           jne 0x400552c	      8963	syntax.c	FUNCTION_133
0x4005527	        0x4883c438	                           add rsp, 0x38	      8963	syntax.c	FUNCTION_133
0x400552b	              0xc3	                                     ret	      8963	syntax.c	FUNCTION_133
0x400552c	      0xe800000000	                          call 0x4005531	      8963	syntax.c	FUNCTION_133
reset_synblock	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,2	16
0x4003ee0	          0x4889f8	                            mov rax, rdi	      3665	syntax.c	FUNCTION_50
0x4003ee3	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      3666	syntax.c	FUNCTION_50	IF_1
0x4003ee7	        0x488b4808	                mov rcx, qword [rax + 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x4003eeb	    0x488d91681700	                 lea rdx, [rcx + 0x1768]	      3666	syntax.c	FUNCTION_50	IF_1
0x4003ef2	          0x4839d7	                            cmp rdi, rdx	      3666	syntax.c	FUNCTION_50	IF_1
0x4003ef5	            0x7421	                            je 0x4003f18	      3666	syntax.c	FUNCTION_50	IF_1
0x4003ef7	              0x53	                                push rbx	      3665	syntax.c	FUNCTION_50
0x4003ef8	          0x4889c3	                            mov rbx, rax	      3665	syntax.c	FUNCTION_50
0x4003efb	      0xe800000000	                          call 0x4003f00	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x4003f00	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x4003f04	      0xe800000000	                          call 0x4003f09	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x4003f09	        0x488b4308	                mov rax, qword [rbx + 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x4003f0d	    0x480568170000	                         add rax, 0x1768	      3670	syntax.c	FUNCTION_50	IF_1
0x4003f13	        0x48894310	             mov qword [rbx + 0x10], rax	      3670	syntax.c	FUNCTION_50	IF_1
0x4003f17	              0x5b	                                 pop rbx	      3672	syntax.c	FUNCTION_50
0x4003f18	            0xf3c3	                                     ret	      3672	syntax.c	FUNCTION_50
get_syntax_name	SWITCH,1:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	27
0x40043d0	    0x8b0500000000	            mov eax, dword [0x040043d6] 	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043d6	          0x83f801	                              cmp eax, 1	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043d9	            0x7445	                            je 0x4004420	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043db	            0x7233	                            jb 0x4004410	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043dd	          0x83f802	                              cmp eax, 2	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043e0	            0x7416	                            je 0x40043f8	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043e2	          0x83f803	                              cmp eax, 3	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043e5	            0x7521	                           jne 0x4004408	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043e7	          0x4863f6	                         movsxd rsi, esi	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043ea	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043f2	              0xc3	                                     ret	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043f3	       0xf1f440000	                   nop dword [rax + rax]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043f8	          0x4863f6	                         movsxd rsi, esi	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x40043fb	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4004403	              0xc3	                                     ret	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4004404	         0xf1f4000	                         nop dword [rax]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4004408	            0x31c0	                            xor eax, eax	      6555	syntax.c	ELSE_5	FUNCTION_101
0x400440a	              0xc3	                                     ret	      6556	syntax.c	ELSE_5	FUNCTION_101
0x400440b	       0xf1f440000	                   nop dword [rax + rax]	      6556	syntax.c	ELSE_5	FUNCTION_101
0x4004410	          0x4863f6	                         movsxd rsi, esi	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4004413	        0x48c1e604	                              shl rsi, 4	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4004417	    0x488b86000000	                    mov rax, qword [rsi]	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400441e	              0xc3	                                     ret	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400441f	              0x90	                                     nop	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4004420	          0x4863f6	                         movsxd rsi, esi	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x4004423	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400442b	              0xc3	                                     ret	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
syn_cmd_iskeyword	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,3:FOR,0:functions,0:CALL,16	113
0x4001a60	            0x4154	                                push r12	      3560	syntax.c	FUNCTION_48
0x4001a62	              0x55	                                push rbp	      3560	syntax.c	FUNCTION_48
0x4001a63	              0x53	                                push rbx	      3560	syntax.c	FUNCTION_48
0x4001a64	        0x4883ec30	                           sub rsp, 0x30	      3560	syntax.c	FUNCTION_48
0x4001a68	    0x64488b042528	                mov rax, qword fs:[0x28]	      3560	syntax.c	FUNCTION_48
0x4001a71	      0x4889442428	             mov qword [rsp + 0x28], rax	      3560	syntax.c	FUNCTION_48
0x4001a76	            0x31c0	                            xor eax, eax	      3560	syntax.c	FUNCTION_48
0x4001a78	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      3565	syntax.c	FUNCTION_48	IF_1
0x4001a7b	            0x85c0	                           test eax, eax	      3565	syntax.c	FUNCTION_48	IF_1
0x4001a7d	            0x7421	                            je 0x4001aa0	      3565	syntax.c	FUNCTION_48	IF_1
0x4001a7f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3602	syntax.c	FUNCTION_48
0x4001a84	    0x644833042528	                xor rax, qword fs:[0x28]	      3602	syntax.c	FUNCTION_48
0x4001a8d	     0xf85f4010000	                           jne 0x4001c87	      3602	syntax.c	FUNCTION_48
0x4001a93	        0x4883c430	                           add rsp, 0x30	      3602	syntax.c	FUNCTION_48
0x4001a97	              0x5b	                                 pop rbx	      3602	syntax.c	FUNCTION_48
0x4001a98	              0x5d	                                 pop rbp	      3602	syntax.c	FUNCTION_48
0x4001a99	            0x415c	                                 pop r12	      3602	syntax.c	FUNCTION_48
0x4001a9b	              0xc3	                                     ret	      3602	syntax.c	FUNCTION_48
0x4001a9c	         0xf1f4000	                         nop dword [rax]	      3602	syntax.c	FUNCTION_48
0x4001aa0	          0x488b3f	                    mov rdi, qword [rdi]	      3561	syntax.c	FUNCTION_48
0x4001aa3	      0xe800000000	                          call 0x4001aa8	      3568	syntax.c	FUNCTION_48	CALL_1
0x4001aa8	          0x803800	                       cmp byte [rax], 0	      3569	syntax.c	FUNCTION_48	IF_2
0x4001aab	          0x4889c3	                            mov rbx, rax	      3568	syntax.c	FUNCTION_48	CALL_1
0x4001aae	     0xf8474010000	                            je 0x4001c28	      3569	syntax.c	FUNCTION_48	IF_2
0x4001ab4	      0xba05000000	                              mov edx, 5	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001ab9	      0xbe00000000	                              mov esi, 0	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001abe	          0x4889c7	                            mov rdi, rax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001ac1	      0xe800000000	                          call 0x4001ac6	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001ac6	            0x85c0	                           test eax, eax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001ac8	     0xf8412010000	                            je 0x4001be0	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001ace	    0x488b2d000000	            mov rbp, qword [0x04001ad5] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x4001ad5	          0x4889df	                            mov rdi, rbx	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x4001ad8	    0x488b85a00900	           mov rax, qword [rbp + 0x9a0] 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x4001adf	    0x4c8ba5b81400	          mov r12, qword [rbp + 0x14b8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001ae6	        0x48890424	                    mov qword [rsp], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001aea	    0x488b85a80900	           mov rax, qword [rbp + 0x9a8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001af1	      0x4889442408	                mov qword [rsp + 8], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001af6	    0x488b85b00900	           mov rax, qword [rbp + 0x9b0] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001afd	      0x4889442410	             mov qword [rsp + 0x10], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001b02	    0x488b85b80900	           mov rax, qword [rbp + 0x9b8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001b09	      0x4889442418	             mov qword [rsp + 0x18], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001b0e	      0xe800000000	                          call 0x4001b13	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x4001b13	    0x488b3d000000	            mov rdi, qword [0x04001b1a] 	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x4001b1a	    0x488985b81400	          mov qword [rbp + 0x14b8], rax 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x4001b21	            0x31f6	                            xor esi, esi	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x4001b23	      0xe800000000	                          call 0x4001b28	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x4001b28	    0x488b2d000000	            mov rbp, qword [0x04001b2f] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x4001b2f	    0x488b1d000000	            mov rbx, qword [0x04001b36] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x4001b36	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x4001b3b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x4001b3f	    0x488db3a00900	                  lea rsi, [rbx + 0x9a0]	        59	string3.h	FUNCTION_171	CALL_3
0x4001b46	    0x488db88c0400	                  lea rdi, [rax + 0x48c]	        59	string3.h	FUNCTION_171	CALL_3
0x4001b4d	      0xe800000000	                          call 0x4001b52	        59	string3.h	FUNCTION_171	CALL_3
0x4001b52	        0x488b0424	                    mov rax, qword [rsp]	        59	string3.h	FUNCTION_171	CALL_3
0x4001b56	    0x488983a00900	            mov qword [rbx + 0x9a0], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4001b5d	      0x488b442408	                mov rax, qword [rsp + 8]	        59	string3.h	FUNCTION_171	CALL_3
0x4001b62	    0x488983a80900	            mov qword [rbx + 0x9a8], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4001b69	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x4001b6e	    0x488983b00900	            mov qword [rbx + 0x9b0], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4001b75	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_171	CALL_3
0x4001b7a	    0x488983b80900	            mov qword [rbx + 0x9b8], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4001b81	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4001b85	    0x4881c7b00400	                          add rdi, 0x4b0	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4001b8c	      0xe800000000	                          call 0x4001b91	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4001b91	    0x488b05000000	            mov rax, qword [0x04001b98] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001b98	    0x488b3d000000	            mov rdi, qword [0x04001b9f] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001b9f	    0x488b88b81400	          mov rcx, qword [rax + 0x14b8] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001ba6	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001baa	    0x48898ab00400	            mov qword [rdx + 0x4b0], rcx	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001bb1	    0x4c89a0b81400	          mov qword [rax + 0x14b8], r12 	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001bb8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001bbd	    0x644833042528	                xor rax, qword fs:[0x28]	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001bc6	     0xf85bb000000	                           jne 0x4001c87	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001bcc	        0x4883c430	                           add rsp, 0x30	      3602	syntax.c	FUNCTION_48
0x4001bd0	      0xbe28000000	                           mov esi, 0x28	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001bd5	              0x5b	                                 pop rbx	      3602	syntax.c	FUNCTION_48
0x4001bd6	              0x5d	                                 pop rbp	      3602	syntax.c	FUNCTION_48
0x4001bd7	            0x415c	                                 pop r12	      3602	syntax.c	FUNCTION_48
0x4001bd9	      0xe900000000	                           jmp 0x4001bde	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001bde	            0x6690	                                     nop	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001be0	    0x488b1d000000	            mov rbx, qword [0x04001be7] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4001be7	    0x488b05000000	            mov rax, qword [0x04001bee] 	        59	string3.h	FUNCTION_171	CALL_3
0x4001bee	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x4001bf3	    0x488db0a00900	                  lea rsi, [rax + 0x9a0]	        59	string3.h	FUNCTION_171	CALL_3
0x4001bfa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x4001bfe	    0x488db88c0400	                  lea rdi, [rax + 0x48c]	        59	string3.h	FUNCTION_171	CALL_3
0x4001c05	      0xe800000000	                          call 0x4001c0a	        59	string3.h	FUNCTION_171	CALL_3
0x4001c0a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4001c0e	    0x4881c7b00400	                          add rdi, 0x4b0	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4001c15	      0xe800000000	                          call 0x4001c1a	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4001c1a	    0x488b3d000000	            mov rdi, qword [0x04001c21] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4001c21	            0xeb95	                           jmp 0x4001bb8	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4001c23	       0xf1f440000	                   nop dword [rax + rax]	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x4001c28	      0xbf00000000	                              mov edi, 0	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x4001c2d	      0xe800000000	                          call 0x4001c32	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x4001c32	            0x31ff	                            xor edi, edi	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4001c34	      0xba05000000	                              mov edx, 5	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4001c39	      0xbe00000000	                              mov esi, 0	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4001c3e	      0xe800000000	                          call 0x4001c43	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4001c43	          0x4889c7	                            mov rdi, rax	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4001c46	      0xe800000000	                          call 0x4001c4b	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x4001c4b	    0x488b05000000	            mov rax, qword [0x04001c52] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x4001c52	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x4001c56	    0x488bb8b00400	           mov rdi, qword [rax + 0x4b0] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x4001c5d	    0x483b3d000000	            cmp rdi, qword [0x04001c64] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x4001c64	            0x741a	                            je 0x4001c80	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x4001c66	      0xe800000000	                          call 0x4001c6b	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001c6b	    0x488b3d000000	            mov rdi, qword [0x04001c72] 	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001c72	      0xe941ffffff	                           jmp 0x4001bb8	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001c77	    0x660f1f840000	                    nop word [rax + rax]	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001c80	      0xbf00000000	                              mov edi, 0	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001c85	            0xebdf	                           jmp 0x4001c66	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001c87	      0xe800000000	                          call 0x4001c8c	      3602	syntax.c	FUNCTION_48
find_endpos	SWITCH,0:WHILE,0:DO,0:IF,22:ELSE,5:FOR,4:functions,0:CALL,14	321
0x4003270	            0x4157	                                push r15	      2944	syntax.c	FUNCTION_37
0x4003272	            0x4156	                                push r14	      2944	syntax.c	FUNCTION_37
0x4003274	            0x4155	                                push r13	      2944	syntax.c	FUNCTION_37
0x4003276	            0x4154	                                push r12	      2944	syntax.c	FUNCTION_37
0x4003278	              0x55	                                push rbp	      2944	syntax.c	FUNCTION_37
0x4003279	              0x53	                                push rbx	      2944	syntax.c	FUNCTION_37
0x400327a	    0x4881ec380300	                          sub rsp, 0x338	      2944	syntax.c	FUNCTION_37
0x4003281	    0x488b84247003	           mov rax, qword [rsp + 0x370] 	      2944	syntax.c	FUNCTION_37
0x4003289	        0x48891424	                    mov qword [rsp], rdx	      2944	syntax.c	FUNCTION_37
0x400328d	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      2944	syntax.c	FUNCTION_37
0x4003292	      0x4c89442418	              mov qword [rsp + 0x18], r8	      2944	syntax.c	FUNCTION_37
0x4003297	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2944	syntax.c	FUNCTION_37
0x400329c	    0x4c8ba4247803	           mov r12, qword [rsp + 0x378] 	      2944	syntax.c	FUNCTION_37
0x40032a4	      0x4889442420	             mov qword [rsp + 0x20], rax	      2944	syntax.c	FUNCTION_37
0x40032a9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2944	syntax.c	FUNCTION_37
0x40032b2	    0x488984242803	            mov qword [rsp + 0x328], rax	      2944	syntax.c	FUNCTION_37
0x40032ba	            0x31c0	                            xor eax, eax	      2944	syntax.c	FUNCTION_37
0x40032bc	            0x85ff	                           test edi, edi	      2957	syntax.c	FUNCTION_37	IF_1
0x40032be	            0x7830	                            js 0x40032f0	      2957	syntax.c	FUNCTION_37	IF_1
0x40032c0	    0x488b05000000	            mov rax, qword [0x040032c7] 	      2965	syntax.c	FUNCTION_37
0x40032c7	          0x4889f5	                            mov rbp, rsi	      2965	syntax.c	FUNCTION_37
0x40032ca	    0x488b90700200	           mov rdx, qword [rax + 0x270] 	      2965	syntax.c	FUNCTION_37
0x40032d1	          0x4863c7	                         movsxd rax, edi	      2965	syntax.c	FUNCTION_37
0x40032d4	        0x488d0480	                  lea rax, [rax + rax*4]	      2965	syntax.c	FUNCTION_37
0x40032d8	        0x48c1e005	                              shl rax, 5	      2965	syntax.c	FUNCTION_37
0x40032dc	        0x803c0202	                 cmp byte [rdx + rax], 2	      2966	syntax.c	FUNCTION_37	IF_2
0x40032e0	            0x743e	                            je 0x4003320	      2966	syntax.c	FUNCTION_37	IF_2
0x40032e2	          0x488b06	                    mov rax, qword [rsi]	      2968	syntax.c	FUNCTION_37	IF_2
0x40032e5	        0x488b5608	                mov rdx, qword [rsi + 8]	      2968	syntax.c	FUNCTION_37	IF_2
0x40032e9	          0x488901	                    mov qword [rcx], rax	      2968	syntax.c	FUNCTION_37	IF_2
0x40032ec	        0x48895108	                mov qword [rcx + 8], rdx	      2968	syntax.c	FUNCTION_37	IF_2
0x40032f0	    0x488b84242803	           mov rax, qword [rsp + 0x328] 	      3166	syntax.c	FUNCTION_37
0x40032f8	    0x644833042528	                xor rax, qword fs:[0x28]	      3166	syntax.c	FUNCTION_37
0x4003301	     0xf8501050000	                           jne 0x4003808	      3166	syntax.c	FUNCTION_37
0x4003307	    0x4881c4380300	                          add rsp, 0x338	      3166	syntax.c	FUNCTION_37
0x400330e	              0x5b	                                 pop rbx	      3166	syntax.c	FUNCTION_37
0x400330f	              0x5d	                                 pop rbp	      3166	syntax.c	FUNCTION_37
0x4003310	            0x415c	                                 pop r12	      3166	syntax.c	FUNCTION_37
0x4003312	            0x415d	                                 pop r13	      3166	syntax.c	FUNCTION_37
0x4003314	            0x415e	                                 pop r14	      3166	syntax.c	FUNCTION_37
0x4003316	            0x415f	                                 pop r15	      3166	syntax.c	FUNCTION_37
0x4003318	              0xc3	                                     ret	      3166	syntax.c	FUNCTION_37
0x4003319	     0xf1f80000000	                         nop dword [rax]	      3166	syntax.c	FUNCTION_37
0x4003320	    0x488d8402a000	            lea rax, [rdx + rax + 0xa0] 	      3166	syntax.c	FUNCTION_37
0x4003328	            0xeb08	                           jmp 0x4003332	      3166	syntax.c	FUNCTION_37
0x400332a	    0x660f1f440000	                    nop word [rax + rax]	      3166	syntax.c	FUNCTION_37
0x4003330	            0x89cf	                            mov edi, ecx	      2980	syntax.c	FUNCTION_37	FOR_1
0x4003332	          0x4889c3	                            mov rbx, rax	      2977	syntax.c	FUNCTION_37	FOR_1
0x4003335	    0x488d80a00000	                   lea rax, [rax + 0xa0]	      2977	syntax.c	FUNCTION_37	FOR_1
0x400333c	     0xfb69060ffff	            movzx edx, byte [rax - 0xa0]	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4003343	          0x8d4f01	                      lea ecx, [rdi + 1]	      2980	syntax.c	FUNCTION_37	FOR_1
0x4003346	          0x80fa02	                               cmp dl, 2	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4003349	            0x74e5	                            je 0x4003330	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x400334b	          0x80fa04	                               cmp dl, 4	      2986	syntax.c	FUNCTION_37	IF_4
0x400334e	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      2986	syntax.c	FUNCTION_37	IF_4
0x4003352	     0xf85b5040000	                           jne 0x400380d	      2986	syntax.c	FUNCTION_37	IF_4
0x4003358	          0x8d4702	                      lea eax, [rdi + 2]	      2989	syntax.c	FUNCTION_37	IF_4
0x400335b	        0x8944242c	             mov dword [rsp + 0x2c], eax	      2989	syntax.c	FUNCTION_37	IF_4
0x400335f	    0x488b3d000000	            mov rdi, qword [0x04003366] 	      2995	syntax.c	FUNCTION_37	CALL_1
0x4003366	      0xe800000000	                          call 0x400336b	      2995	syntax.c	FUNCTION_37	CALL_1
0x400336b	          0x4c89e7	                            mov rdi, r12	      2996	syntax.c	FUNCTION_37	CALL_2
0x400336e	      0xe800000000	                          call 0x4003373	      2996	syntax.c	FUNCTION_37	CALL_2
0x4003373	    0x488dbc240003	                  lea rdi, [rsp + 0x300]	      3003	syntax.c	FUNCTION_37	CALL_3
0x400337b	    0x488905000000	            mov qword [0x04003382], rax 	      2996	syntax.c	FUNCTION_37	CALL_2
0x4003382	        0x448b6508	               mov r12d, dword [rbp + 8]	      2998	syntax.c	FUNCTION_37
0x4003386	    0xc78424c00100	              mov dword [rsp + 0x1c0], 0	      3000	syntax.c	FUNCTION_37
0x4003391	      0xe87acfffff	                   call sym.save_chartab	      3003	syntax.c	FUNCTION_37	CALL_3
0x4003396	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x400339b	      0x48895c2430	             mov qword [rsp + 0x30], rbx	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x40033a0	        0x488d0480	                  lea rax, [rax + rax*4]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033a4	        0x48c1e005	                              shl rax, 5	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033a8	      0x4889442438	             mov qword [rsp + 0x38], rax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033ad	    0x4805a0000000	                           add rax, 0xa0	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033b3	      0x4889442448	             mov qword [rsp + 0x48], rax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033b8	        0x488d4370	                   lea rax, [rbx + 0x70]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x40033bc	      0x4889442440	             mov qword [rsp + 0x40], rax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x40033c1	    0x488b05000000	            mov rax, qword [0x040033c8] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033c8	      0x448b7c242c	           mov r15d, dword [rsp + 0x2c] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033cd	    0x443bb8600200	          cmp r15d, dword [rax + 0x260] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033d4	     0xf8db6010000	                           jge 0x4003590	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033da	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033df	    0x4c03a8700200	            add r13, qword [rax + 0x270]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40033e6	      0x41807d0003	                       cmp byte [r13], 3	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x40033eb	     0xf859f010000	                           jne 0x4003590	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x40033f1	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x40033f6	    0x41beffffffff	                    mov r14d, 0xffffffff	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x40033fc	            0xeb1e	                           jmp 0x400341c	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x40033fe	            0x6690	                                     nop	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003400	          0x4989dd	                            mov r13, rbx	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003403	    0x4c03a8700200	            add r13, qword [rax + 0x270]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x400340a	    0x4881c3a00000	                           add rbx, 0xa0	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003411	      0x41807d0003	                       cmp byte [r13], 3	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003416	     0xf85ac000000	                           jne 0x40034c8	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x400341c	        0x418b452c	            mov eax, dword [r13 + 0x2c] 	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003420	          0x4489e2	                           mov edx, r12d	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003423	        0x412b5520	             sub edx, dword [r13 + 0x20]	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003427	        0x488b7500	                    mov rsi, qword [rbp]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x400342b	        0x498d4d70	                   lea rcx, [r13 + 0x70]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x400342f	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4003434	    0x898424a80100	            mov dword [rsp + 0x1a8], eax	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x400343b	        0x498b4568	            mov rax, qword [r13 + 0x68] 	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x400343f	            0x85d2	                           test edx, edx	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4003441	      0x4889442460	             mov qword [rsp + 0x60], rax	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003446	      0xb800000000	                              mov eax, 0	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x400344b	           0xf48d0	                          cmovs edx, eax	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x400344e	      0xe86dcfffff	                    call sym.syn_regexec	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4003453	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003458	            0x85c0	                           test eax, eax	      3028	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7
0x400345a	        0x49895568	             mov qword [r13 + 0x68], rdx	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x400345e	            0x7450	                            je 0x40034b0	      3028	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7
0x4003460	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003464	            0x740d	                            je 0x4003473	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003466	    0x8b8424c00100	           mov eax, dword [rsp + 0x1c0] 	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x400346d	        0x39442470	            cmp dword [rsp + 0x70], eax 	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003471	            0x7d3d	                           jge 0x40034b0	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003473	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003478	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x400347d	          0x4589fe	                          mov r14d, r15d	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003480	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003488	    0x48899424c001	            mov qword [rsp + 0x1c0], rdx	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003490	    0x488b84240801	           mov rax, qword [rsp + 0x108] 	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003498	    0x488b94241001	           mov rdx, qword [rsp + 0x110] 	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x40034a0	    0x488984245802	            mov qword [rsp + 0x258], rax	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x40034a8	    0x488994246002	            mov qword [rsp + 0x260], rdx	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x40034b0	    0x488b05000000	            mov rax, qword [0x040034b7] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40034b7	        0x4183c701	                             add r15d, 1	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40034bb	    0x4439b8600200	          cmp dword [rax + 0x260], r15d 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40034c2	     0xf8f38ffffff	                            jg 0x4003400	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x40034c8	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x40034cc	     0xf84be000000	                            je 0x4003590	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x40034d2	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x40034d7	          0x4885db	                           test rbx, rbx	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x40034da	     0xf849d020000	                            je 0x400377d	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x40034e0	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x40034e3	          0x4489e2	                           mov edx, r12d	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x40034e6	          0x2b5320	             sub edx, dword [rbx + 0x20]	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x40034e9	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x40034ee	        0x488b7500	                    mov rsi, qword [rbp]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x40034f2	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x40034f7	    0x898424a80100	            mov dword [rsp + 0x1a8], eax	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x40034fe	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003502	            0x85d2	                           test edx, edx	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003504	      0x4889442460	             mov qword [rsp + 0x60], rax	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003509	      0xb800000000	                              mov eax, 0	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x400350e	           0xf48d0	                          cmovs edx, eax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003511	      0xe8aaceffff	                    call sym.syn_regexec	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003516	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x400351b	            0x85c0	                           test eax, eax	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x400351d	        0x48895368	             mov qword [rbx + 0x68], rdx	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003521	     0xf84d6000000	                            je 0x40035fd	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4003527	    0x8b8424c00100	           mov eax, dword [rsp + 0x1c0] 	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x400352e	        0x39442470	            cmp dword [rsp + 0x70], eax 	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4003532	     0xf8fc5000000	                            jg 0x40035fd	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4003538	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x400353d	      0x488d742460	                   lea rsi, [rsp + 0x60]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003542	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003547	    0x41b801000000	                              mov r8d, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x400354d	      0xb901000000	                              mov ecx, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003552	      0xe8b9d0ffff	                call sym.syn_add_end_off	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003557	        0x488b7500	                    mov rsi, qword [rbp]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x400355b	      0x4839742450	            cmp qword [rsp + 0x50], rsi 	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4003560	            0x7f2e	                            jg 0x4003590	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4003562	    0x488b3d000000	            mov rdi, qword [0x04003569] 	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4003569	            0x31d2	                            xor edx, edx	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x400356b	      0xe800000000	                          call 0x4003570	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4003570	          0x4889c7	                            mov rdi, rax	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x4003573	      0xe800000000	                          call 0x4003578	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x4003578	        0x8b4c2458	            mov ecx, dword [rsp + 0x58] 	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x400357c	            0x89c6	                            mov esi, eax	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x400357e	          0x4139cc	                           cmp r12d, ecx	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4003581	            0x7c45	                            jl 0x40035c8	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4003583	        0x4183c401	                             add r12d, 1	      3081	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4003587	          0x4139c4	                           cmp r12d, eax	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x400358a	     0xf8c31feffff	                            jl 0x40033c1	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4003590	        0x488b0424	                    mov rax, qword [rsp]	      3159	syntax.c	FUNCTION_37	IF_22
0x4003594	    0x48c700000000	                      mov qword [rax], 0	      3159	syntax.c	FUNCTION_37	IF_22
0x400359b	    0x488dbc240003	                  lea rdi, [rsp + 0x300]	      3161	syntax.c	FUNCTION_37	CALL_13
0x40035a3	      0xe8c8cdffff	                call sym.restore_chartab	      3161	syntax.c	FUNCTION_37	CALL_13
0x40035a8	    0x488b3d000000	            mov rdi, qword [0x040035af] 	      3164	syntax.c	FUNCTION_37	CALL_14
0x40035af	      0xe800000000	                          call 0x40035b4	      3164	syntax.c	FUNCTION_37	CALL_14
0x40035b4	    0x48c705000000	               mov qword [0x040035bf], 0	      3165	syntax.c	FUNCTION_37
0x40035bf	      0xe92cfdffff	                           jmp 0x40032f0	      3165	syntax.c	FUNCTION_37
0x40035c4	         0xf1f4000	                         nop dword [rax]	      3165	syntax.c	FUNCTION_37
0x40035c8	    0x8b9424100100	           mov edx, dword [rsp + 0x110] 	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40035cf	            0x39d1	                            cmp ecx, edx	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40035d1	            0x7e25	                           jle 0x40035f8	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x40035d3	            0x39d0	                            cmp eax, edx	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035d5	            0x7eb9	                           jle 0x4003590	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035d7	    0x660f1f840000	                    nop word [rax + rax]	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035e0	          0x83c201	                              add edx, 1	      3088	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035e3	            0x39d6	                            cmp esi, edx	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035e5	            0x74a9	                            je 0x4003590	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035e7	            0x39d1	                            cmp ecx, edx	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035e9	            0x75f5	                           jne 0x40035e0	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035eb	          0x4189cc	                           mov r12d, ecx	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035ee	      0xe9cefdffff	                           jmp 0x40033c1	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035f3	       0xf1f440000	                   nop dword [rax + rax]	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035f8	          0x4189cc	                           mov r12d, ecx	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035fb	            0xeb8a	                           jmp 0x4003587	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x40035fd	    0x488b05000000	            mov rax, qword [0x04003604] 	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4003604	          0x4589f7	                          mov r15d, r14d	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4003607	          0x4963d7	                        movsxd rdx, r15d	      3103	syntax.c	FUNCTION_37	FOR_2
0x400360a	        0x4c8b3424	                    mov r14, qword [rsp]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x400360e	    0x488db424b001	                  lea rsi, [rsp + 0x1b0]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4003616	        0x488d1c92	                  lea rbx, [rdx + rdx*4]	      3103	syntax.c	FUNCTION_37	FOR_2
0x400361a	    0x41b801000000	                              mov r8d, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4003620	      0xb901000000	                              mov ecx, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4003625	        0x48c1e305	                              shl rbx, 5	      3103	syntax.c	FUNCTION_37	FOR_2
0x4003629	    0x480398700200	            add rbx, qword [rax + 0x270]	      3103	syntax.c	FUNCTION_37	FOR_2
0x4003630	          0x4c89f7	                            mov rdi, r14	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4003633	          0x4889da	                            mov rdx, rbx	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4003636	      0xe8d5cfffff	                call sym.syn_add_end_off	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x400363b	        0x488b7500	                    mov rsi, qword [rbp]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x400363f	          0x493936	                    cmp qword [r14], rsi	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4003642	     0xf8456010000	                            je 0x400379e	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4003648	      0x4c8b742408	                mov r14, qword [rsp + 8]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x400364d	    0x488db424b001	                  lea rsi, [rsp + 0x1b0]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x4003655	    0x41b801000000	                              mov r8d, 1	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x400365b	      0xb903000000	                              mov ecx, 3	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x4003660	          0x4889da	                            mov rdx, rbx	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x4003663	          0x4c89f7	                            mov rdi, r14	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x4003666	      0xe8a5cfffff	                call sym.syn_add_end_off	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x400366b	          0x498b06	                    mov rax, qword [r14]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400366e	        0x483b4500	                    cmp rax, qword [rbp]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4003672	     0xf840d010000	                            je 0x4003785	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4003678	        0x488b3424	                    mov rsi, qword [rsp]	      3174	syntax.c	FUNCTION_38	IF_1
0x400367c	          0x483b06	                    cmp rax, qword [rsi]	      3174	syntax.c	FUNCTION_38	IF_1
0x400367f	     0xf8ed5000000	                           jle 0x400375a	      3174	syntax.c	FUNCTION_38	IF_1
0x4003685	          0x488b06	                    mov rax, qword [rsi]	      3175	syntax.c	FUNCTION_38	IF_1
0x4003688	        0x488b5608	                mov rdx, qword [rsi + 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x400368c	      0x488b742408	                mov rsi, qword [rsp + 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x4003691	          0x488906	                    mov qword [rsi], rax	      3175	syntax.c	FUNCTION_38	IF_1
0x4003694	        0x48895608	                mov qword [rsi + 8], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x4003698	         0xfb74302	               movzx eax, word [rbx + 2]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400369c	        0x66394354	               cmp word [rbx + 0x54], ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036a0	     0xf848f000000	                            je 0x4003735	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036a6	          0x6685c0	                             test ax, ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036a9	     0xf8486000000	                            je 0x4003735	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036af	        0xf6430510	               test byte [rbx + 5], 0x10	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40036b3	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036b8	          0x448938	                   mov dword [rax], r15d	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036bb	     0xf8418010000	                            je 0x40037d9	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40036c1	    0x488b84245802	           mov rax, qword [rsp + 0x258] 	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40036c9	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40036ce	    0x8b9424600200	           mov edx, dword [rsp + 0x260] 	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40036d5	          0x488906	                    mov qword [rsi], rax	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40036d8	           0x3531c	             add edx, dword [rbx + 0x1c]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036db	        0x48394500	                    cmp qword [rbp], rax	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40036df	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036e4	          0x895608	                mov dword [rsi + 8], edx	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40036e7	     0xf8408010000	                            je 0x40037f5	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40036ed	        0x488b3424	                    mov rsi, qword [rsp]	      3174	syntax.c	FUNCTION_38	IF_1
0x40036f1	          0x483906	                    cmp qword [rsi], rax	      3174	syntax.c	FUNCTION_38	IF_1
0x40036f4	     0xf8dbc000000	                           jge 0x40037b6	      3174	syntax.c	FUNCTION_38	IF_1
0x40036fa	          0x488b06	                    mov rax, qword [rsi]	      3175	syntax.c	FUNCTION_38	IF_1
0x40036fd	        0x488b5608	                mov rdx, qword [rsi + 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x4003701	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3175	syntax.c	FUNCTION_38	IF_1
0x4003706	          0x488906	                    mov qword [rsi], rax	      3175	syntax.c	FUNCTION_38	IF_1
0x4003709	        0x48895608	                mov qword [rsi + 8], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x400370d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4003712	        0x488b3424	                    mov rsi, qword [rsp]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4003716	        0x488b5008	                mov rdx, qword [rax + 8]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400371a	          0x488b00	                    mov rax, qword [rax]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400371d	        0x48895608	                mov qword [rsi + 8], rdx	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4003721	          0x488906	                    mov qword [rsi], rax	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4003724	        0x48634324	         movsxd rax, dword [rbx + 0x24] 	      3151	syntax.c	FUNCTION_37	FOR_2
0x4003728	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      3151	syntax.c	FUNCTION_37	FOR_2
0x400372d	          0x488903	                    mov qword [rbx], rax	      3151	syntax.c	FUNCTION_37	FOR_2
0x4003730	      0xe966feffff	                           jmp 0x400359b	      3151	syntax.c	FUNCTION_37	FOR_2
0x4003735	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400373a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400373f	    0xc70000000000	                      mov dword [rax], 0	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4003745	      0x488b442408	                mov rax, qword [rsp + 8]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400374a	        0x488b5008	                mov rdx, qword [rax + 8]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400374e	          0x488b00	                    mov rax, qword [rax]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4003751	        0x48895608	                mov qword [rsi + 8], rdx	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4003755	          0x488906	                    mov qword [rsi], rax	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4003758	            0xebca	                           jmp 0x4003724	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400375a	     0xf8538ffffff	                           jne 0x4003698	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003760	        0x488b0424	                    mov rax, qword [rsp]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003764	      0x488b742408	                mov rsi, qword [rsp + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003769	          0x8b4008	                mov eax, dword [rax + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400376c	          0x394608	                cmp dword [rsi + 8], eax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400376f	     0xf8e23ffffff	                           jle 0x4003698	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003775	          0x894608	                mov dword [rsi + 8], eax	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003778	      0xe91bffffff	                           jmp 0x4003698	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400377d	          0x4589f7	                          mov r15d, r14d	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003780	      0xe982feffff	                           jmp 0x4003607	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4003785	      0x488b742408	                mov rsi, qword [rsp + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400378a	          0x8b5508	                mov edx, dword [rbp + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400378d	          0x395608	                cmp dword [rsi + 8], edx	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4003790	     0xf8de2feffff	                           jge 0x4003678	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4003796	          0x895608	                mov dword [rsi + 8], edx	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x4003799	      0xe9dafeffff	                           jmp 0x4003678	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x400379e	        0x488b3424	                    mov rsi, qword [rsp]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40037a2	          0x8b4508	                mov eax, dword [rbp + 8]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40037a5	          0x394608	                cmp dword [rsi + 8], eax	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40037a8	     0xf8d9afeffff	                           jge 0x4003648	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40037ae	          0x894608	                mov dword [rsi + 8], eax	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40037b1	      0xe992feffff	                           jmp 0x4003648	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40037b6	     0xf8551ffffff	                           jne 0x400370d	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40037bc	        0x488b0424	                    mov rax, qword [rsp]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40037c0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40037c5	          0x8b4008	                mov eax, dword [rax + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40037c8	          0x394608	                cmp dword [rsi + 8], eax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40037cb	     0xf8e3cffffff	                           jle 0x400370d	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40037d1	          0x894608	                mov dword [rsi + 8], eax	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40037d4	      0xe934ffffff	                           jmp 0x400370d	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40037d9	    0x488b8424b801	           mov rax, qword [rsp + 0x1b8] 	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40037e1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40037e6	    0x8b9424c00100	           mov edx, dword [rsp + 0x1c0] 	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40037ed	          0x488906	                    mov qword [rsi], rax	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40037f0	      0xe9e3feffff	                           jmp 0x40036d8	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x40037f5	          0x8b4d08	                mov ecx, dword [rbp + 8]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40037f8	            0x39ca	                            cmp edx, ecx	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x40037fa	     0xf8dedfeffff	                           jge 0x40036ed	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4003800	          0x894e08	                mov dword [rsi + 8], ecx	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4003803	      0xe9e5feffff	                           jmp 0x40036ed	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4003808	      0xe800000000	                          call 0x400380d	      3166	syntax.c	FUNCTION_37
0x400380d	            0x31db	                            xor ebx, ebx	      2992	syntax.c	FUNCTION_37	ELSE_1
0x400380f	      0xe94bfbffff	                           jmp 0x400335f	      2992	syntax.c	FUNCTION_37	ELSE_1
clear_current_state	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,1:functions,0:CALL,2	22
0x40002b0	    0x8b1500000000	            mov edx, dword [0x040002b6] 	       722	syntax.c	FUNCTION_4	FOR_1
0x40002b6	    0x488b05000000	            mov rax, qword [0x040002bd] 	       722	syntax.c	FUNCTION_4	FOR_1
0x40002bd	            0x85d2	                           test edx, edx	       722	syntax.c	FUNCTION_4	FOR_1
0x40002bf	            0x7e39	                           jle 0x40002fa	       722	syntax.c	FUNCTION_4	FOR_1
0x40002c1	              0x55	                                push rbp	       717	syntax.c	FUNCTION_4
0x40002c2	              0x53	                                push rbx	       717	syntax.c	FUNCTION_4
0x40002c3	    0x488d98880000	                   lea rbx, [rax + 0x88]	       717	syntax.c	FUNCTION_4
0x40002ca	            0x31ed	                            xor ebp, ebp	       717	syntax.c	FUNCTION_4
0x40002cc	        0x4883ec08	                              sub rsp, 8	       717	syntax.c	FUNCTION_4
0x40002d0	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x40002d3	          0x83c501	                              add ebp, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x40002d6	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x40002dd	      0xe800000000	                          call 0x40002e2	       723	syntax.c	FUNCTION_4	CALL_1
0x40002e2	    0x392d00000000	            cmp dword [0x040002e8], ebp 	       722	syntax.c	FUNCTION_4	FOR_1
0x40002e8	            0x7fe6	                            jg 0x40002d0	       722	syntax.c	FUNCTION_4	FOR_1
0x40002ea	        0x4883c408	                              add rsp, 8	       725	syntax.c	FUNCTION_4
0x40002ee	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x40002f3	              0x5b	                                 pop rbx	       725	syntax.c	FUNCTION_4
0x40002f4	              0x5d	                                 pop rbp	       725	syntax.c	FUNCTION_4
0x40002f5	      0xe900000000	                           jmp 0x40002fa	       724	syntax.c	FUNCTION_4	CALL_2
0x40002fa	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x40002ff	      0xe900000000	                           jmp 0x4000304	       724	syntax.c	FUNCTION_4	CALL_2
syn_cmd_clear	SWITCH,0:WHILE,1:DO,0:IF,8:ELSE,5:FOR,0:functions,0:CALL,19	195
0x40063e0	            0x4156	                                push r14	      3755	syntax.c	FUNCTION_55
0x40063e2	            0x4155	                                push r13	      3755	syntax.c	FUNCTION_55
0x40063e4	            0x4154	                                push r12	      3755	syntax.c	FUNCTION_55
0x40063e6	              0x55	                                push rbp	      3755	syntax.c	FUNCTION_55
0x40063e7	          0x4889fd	                            mov rbp, rdi	      3755	syntax.c	FUNCTION_55
0x40063ea	              0x53	                                push rbx	      3755	syntax.c	FUNCTION_55
0x40063eb	          0x488b1f	                    mov rbx, qword [rdi]	      3756	syntax.c	FUNCTION_55
0x40063ee	          0x4189f4	                           mov r12d, esi	      3755	syntax.c	FUNCTION_55
0x40063f1	          0x4889df	                            mov rdi, rbx	      3760	syntax.c	FUNCTION_55	CALL_1
0x40063f4	      0xe800000000	                          call 0x40063f9	      3760	syntax.c	FUNCTION_55	CALL_1
0x40063f9	          0x8b5530	            mov edx, dword [rbp + 0x30] 	      3761	syntax.c	FUNCTION_55	IF_1
0x40063fc	        0x48894508	                mov qword [rbp + 8], rax	      3760	syntax.c	FUNCTION_55	CALL_1
0x4006400	            0x85d2	                           test edx, edx	      3761	syntax.c	FUNCTION_55	IF_1
0x4006402	            0x7515	                           jne 0x4006419	      3761	syntax.c	FUNCTION_55	IF_1
0x4006404	    0x488b05000000	            mov rax, qword [0x0400640b] 	      3770	syntax.c	FUNCTION_55	IF_2
0x400640b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3770	syntax.c	FUNCTION_55	IF_2
0x400640f	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      3770	syntax.c	FUNCTION_55	IF_2
0x4006415	            0x85c0	                           test eax, eax	      3770	syntax.c	FUNCTION_55	IF_2
0x4006417	            0x740f	                            je 0x4006428	      3770	syntax.c	FUNCTION_55	IF_2
0x4006419	              0x5b	                                 pop rbx	      3832	syntax.c	FUNCTION_55
0x400641a	              0x5d	                                 pop rbp	      3832	syntax.c	FUNCTION_55
0x400641b	            0x415c	                                 pop r12	      3832	syntax.c	FUNCTION_55
0x400641d	            0x415d	                                 pop r13	      3832	syntax.c	FUNCTION_55
0x400641f	            0x415e	                                 pop r14	      3832	syntax.c	FUNCTION_55
0x4006421	              0xc3	                                     ret	      3832	syntax.c	FUNCTION_55
0x4006422	    0x660f1f440000	                    nop word [rax + rax]	      3832	syntax.c	FUNCTION_55
0x4006428	           0xfb63b	                   movzx edi, byte [rbx]	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x400642b	      0xe800000000	                          call 0x4006430	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006430	            0x85c0	                           test eax, eax	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006432	     0xf85cb010000	                           jne 0x4006603	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006438	     0xf1f84000000	                   nop dword [rax + rax]	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x4006440	           0xfb63b	                   movzx edi, byte [rbx]	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006443	      0xe800000000	                          call 0x4006448	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006448	            0x85c0	                           test eax, eax	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x400644a	     0xf8591010000	                           jne 0x40065e1	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x4006450	          0x4889df	                            mov rdi, rbx	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4006453	      0xe800000000	                          call 0x4006458	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x4006458	          0x4889c6	                            mov rsi, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400645b	          0x4989c5	                            mov r13, rax	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x400645e	          0x4829de	                            sub rsi, rbx	      5560	syntax.c	FUNCTION_85	CALL_1
0x4006461	          0x803b40	                    cmp byte [rbx], 0x40	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x4006464	     0xf8486000000	                            je 0x40064f0	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x400646a	          0x4889df	                            mov rdi, rbx	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x400646d	      0xe800000000	                          call 0x4006472	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006472	            0x85c0	                           test eax, eax	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x4006474	          0x4189c6	                           mov r14d, eax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_13
0x4006477	     0xf849b020000	                            je 0x4006718	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x400647d	          0x4585e4	                         test r12d, r12d	      3844	syntax.c	FUNCTION_56	IF_1
0x4006480	     0xf84fa000000	                            je 0x4006580	      3844	syntax.c	FUNCTION_56	IF_1
0x4006486	    0x488b05000000	            mov rax, qword [0x0400648d] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x400648d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006491	    0x486380600200	        movsxd rax, dword [rax + 0x260] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x4006498	        0x488d2c80	                  lea rbp, [rax + rax*4]	      3851	syntax.c	FUNCTION_56	FOR_1
0x400649c	          0x4889c3	                            mov rbx, rax	      3851	syntax.c	FUNCTION_56	FOR_1
0x400649f	        0x48c1e505	                              shl rbp, 5	      3851	syntax.c	FUNCTION_56	FOR_1
0x40064a3	    0x4881eda00000	                           sub rbp, 0xa0	      3851	syntax.c	FUNCTION_56	FOR_1
0x40064aa	            0xeb0b	                           jmp 0x40064b7	      3851	syntax.c	FUNCTION_56	FOR_1
0x40064ac	         0xf1f4000	                         nop dword [rax]	      3851	syntax.c	FUNCTION_56	FOR_1
0x40064b0	    0x4881eda00000	                           sub rbp, 0xa0	      3851	syntax.c	FUNCTION_56	FOR_1
0x40064b7	          0x83eb01	                              sub ebx, 1	      3851	syntax.c	FUNCTION_56	FOR_1
0x40064ba	     0xf88b0000000	                            js 0x4006570	      3851	syntax.c	FUNCTION_56	FOR_1
0x40064c0	    0x488b15000000	            mov rdx, qword [0x040064c7] 	      3853	syntax.c	FUNCTION_56	FOR_1
0x40064c7	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      3853	syntax.c	FUNCTION_56	FOR_1
0x40064cb	          0x4889ea	                            mov rdx, rbp	      3853	syntax.c	FUNCTION_56	FOR_1
0x40064ce	    0x480397700200	            add rdx, qword [rdi + 0x270]	      3853	syntax.c	FUNCTION_56	FOR_1
0x40064d5	         0xfbf4a54	           movsx ecx, word [rdx + 0x54] 	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x40064d9	          0x4139ce	                           cmp r14d, ecx	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x40064dc	            0x75d2	                           jne 0x40064b0	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x40064de	         0xfbe4201	               movsx eax, byte [rdx + 1]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x40064e2	          0x4139c4	                           cmp r12d, eax	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x40064e5	            0x75c9	                           jne 0x40064b0	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x40064e7	            0x89de	                            mov esi, ebx	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x40064e9	      0xe832c5ffff	             call sym.syn_remove_pattern	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x40064ee	            0xebc0	                           jmp 0x40064b0	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x40064f0	        0x488d7b01	                      lea rdi, [rbx + 1]	      5560	syntax.c	FUNCTION_85	CALL_1
0x40064f4	          0x83ee01	                              sub esi, 1	      5560	syntax.c	FUNCTION_85	CALL_1
0x40064f7	      0xe800000000	                          call 0x40064fc	      5560	syntax.c	FUNCTION_85	CALL_1
0x40064fc	          0x4885c0	                           test rax, rax	      5561	syntax.c	FUNCTION_85	IF_1
0x40064ff	          0x4989c6	                            mov r14, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x4006502	     0xf8456010000	                            je 0x400665e	      5561	syntax.c	FUNCTION_85	IF_1
0x4006508	          0x4889c7	                            mov rdi, rax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400650b	      0xe8d0abffff	                call sym.syn_scl_name2id	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x4006510	          0x4c89f7	                            mov rdi, r14	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x4006513	            0x89c5	                            mov ebp, eax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x4006515	      0xe800000000	                          call 0x400651a	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400651a	            0x85ed	                           test ebp, ebp	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x400651c	     0xf843c010000	                            je 0x400665e	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x4006522	    0x8d8528a6ffff	                 lea eax, [rbp - 0x59d8]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006528	        0x480fbfc0	                           movsx rax, ax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400652c	        0x488d1c40	                  lea rbx, [rax + rax*2]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006530	    0x488b05000000	            mov rax, qword [0x04006537] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006537	        0x48c1e303	                              shl rbx, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400653b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400653f	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006546	      0x488b7c1810	      mov rdi, qword [rax + rbx + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400654b	          0x4885ff	                           test rdi, rdi	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400654e	            0x7420	                            je 0x4006570	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006550	      0xe800000000	                          call 0x4006555	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006555	    0x488b05000000	            mov rax, qword [0x0400655c] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400655c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006560	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006567	    0x48c744181000	         mov qword [rax + rbx + 0x10], 0	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x4006570	          0x4c89ef	                            mov rdi, r13	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x4006573	      0xe800000000	                          call 0x4006578	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x4006578	          0x4889c3	                            mov rbx, rax	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x400657b	      0xe9c0feffff	                           jmp 0x4006440	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x4006580	    0x488b05000000	            mov rax, qword [0x04006587] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006587	          0x4489f7	                           mov edi, r14d	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x400658a	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x400658e	      0xe83db9ffff	              call sym.syn_clear_keyword	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x4006593	    0x488b05000000	            mov rax, qword [0x0400659a] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x400659a	          0x4489f7	                           mov edi, r14d	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x400659d	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x40065a1	    0x4881c6280100	                          add rsi, 0x128	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x40065a8	      0xe823b9ffff	              call sym.syn_clear_keyword	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x40065ad	      0xe9d4feffff	                           jmp 0x4006486	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x40065b2	      0xe800000000	                          call 0x40065b7	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x40065b7	    0x488b15000000	            mov rdx, qword [0x040065be] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x40065be	        0x488b4208	                mov rax, qword [rdx + 8]	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x40065c2	    0x480568170000	                         add rax, 0x1768	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x40065c8	        0x48394210	            cmp qword [rdx + 0x10], rax 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x40065cc	     0xf8455010000	                            je 0x4006727	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x40065d2	      0xbe01000000	                              mov esi, 1	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x40065d7	      0xbf00000000	                              mov edi, 0	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x40065dc	      0xe800000000	                          call 0x40065e1	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x40065e1	      0xbf23000000	                           mov edi, 0x23	      3830	syntax.c	FUNCTION_55	CALL_18
0x40065e6	      0xe800000000	                          call 0x40065eb	      3830	syntax.c	FUNCTION_55	CALL_18
0x40065eb	    0x488b05000000	            mov rax, qword [0x040065f2] 	      3831	syntax.c	FUNCTION_55	CALL_19
0x40065f2	              0x5b	                                 pop rbx	      3832	syntax.c	FUNCTION_55
0x40065f3	              0x5d	                                 pop rbp	      3832	syntax.c	FUNCTION_55
0x40065f4	            0x415c	                                 pop r12	      3832	syntax.c	FUNCTION_55
0x40065f6	            0x415d	                                 pop r13	      3832	syntax.c	FUNCTION_55
0x40065f8	            0x415e	                                 pop r14	      3832	syntax.c	FUNCTION_55
0x40065fa	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3831	syntax.c	FUNCTION_55	CALL_19
0x40065fe	      0xe99dd5ffff	              jmp sym.syn_stack_free_all	      3831	syntax.c	FUNCTION_55	CALL_19
0x4006603	    0x488b05000000	            mov rax, qword [0x0400660a] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x400660a	          0x4585e4	                         test r12d, r12d	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x400660d	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006611	            0x749f	                            je 0x40065b2	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x4006613	    0x486387600200	        movsxd rax, dword [rdi + 0x260] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x400661a	        0x488d2c80	                  lea rbp, [rax + rax*4]	      3683	syntax.c	FUNCTION_51	FOR_1
0x400661e	          0x4889c3	                            mov rbx, rax	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006621	        0x48c1e505	                              shl rbp, 5	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006625	    0x4881eda00000	                           sub rbp, 0xa0	      3683	syntax.c	FUNCTION_51	FOR_1
0x400662c	            0xeb09	                           jmp 0x4006637	      3683	syntax.c	FUNCTION_51	FOR_1
0x400662e	            0x6690	                                     nop	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006630	    0x4881eda00000	                           sub rbp, 0xa0	      3683	syntax.c	FUNCTION_51	FOR_1
0x4006637	          0x83eb01	                              sub ebx, 1	      3683	syntax.c	FUNCTION_51	FOR_1
0x400663a	            0x7843	                            js 0x400667f	      3683	syntax.c	FUNCTION_51	FOR_1
0x400663c	    0x488b87700200	           mov rax, qword [rdi + 0x270] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006643	      0x807c280100	             cmp byte [rax + rbp + 1], 0	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006648	            0x74e6	                            je 0x4006630	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400664a	            0x89de	                            mov esi, ebx	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400664c	      0xe8cfc3ffff	             call sym.syn_remove_pattern	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006651	    0x488b05000000	            mov rax, qword [0x04006658] 	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x4006658	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400665c	            0xebd2	                           jmp 0x4006630	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400665e	      0xba05000000	                              mov edx, 5	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006663	      0xbe00000000	                              mov esi, 0	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x4006668	            0x31ff	                            xor edi, edi	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400666a	      0xe800000000	                          call 0x400666f	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400666f	          0x4889de	                            mov rsi, rbx	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006672	          0x4889c7	                            mov rdi, rax	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006675	      0xe800000000	                          call 0x400667a	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400667a	      0xe962ffffff	                           jmp 0x40065e1	      3822	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x400667f	    0xc7879c020000	              mov dword [rdi + 0x29c], 0	      3687	syntax.c	FUNCTION_51
0x4006689	    0x48c787a80200	              mov qword [rdi + 0x2a8], 0	      3688	syntax.c	FUNCTION_51
0x4006694	    0x48c787b00200	              mov qword [rdi + 0x2b0], 0	      3689	syntax.c	FUNCTION_51
0x400669f	    0x48c787b80200	              mov qword [rdi + 0x2b8], 0	      3690	syntax.c	FUNCTION_51
0x40066aa	    0x488bbfc80200	           mov rdi, qword [rdi + 0x2c8] 	      3692	syntax.c	FUNCTION_51	CALL_2
0x40066b1	      0xe800000000	                          call 0x40066b6	      3692	syntax.c	FUNCTION_51	CALL_2
0x40066b6	    0x488b05000000	            mov rax, qword [0x040066bd] 	      3693	syntax.c	FUNCTION_51
0x40066bd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3693	syntax.c	FUNCTION_51
0x40066c1	    0x488bbac00200	           mov rdi, qword [rdx + 0x2c0] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066c8	    0x48c782c80200	              mov qword [rdx + 0x2c8], 0	      3693	syntax.c	FUNCTION_51
0x40066d3	          0x4885ff	                           test rdi, rdi	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066d6	            0x741b	                            je 0x40066f3	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066d8	      0xe800000000	                          call 0x40066dd	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066dd	    0x488b05000000	            mov rax, qword [0x040066e4] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066e4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066e8	    0x48c782c00200	              mov qword [rdx + 0x2c0], 0	      3694	syntax.c	FUNCTION_51	CALL_3
0x40066f3	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3695	syntax.c	FUNCTION_51	CALL_4
0x40066f7	    0x4881c7b00400	                          add rdi, 0x4b0	      3695	syntax.c	FUNCTION_51	CALL_4
0x40066fe	      0xe800000000	                          call 0x4006703	      3695	syntax.c	FUNCTION_51	CALL_4
0x4006703	    0x488b05000000	            mov rax, qword [0x0400670a] 	      3697	syntax.c	FUNCTION_51	CALL_5
0x400670a	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3697	syntax.c	FUNCTION_51	CALL_5
0x400670e	      0xe800000000	                          call 0x4006713	      3697	syntax.c	FUNCTION_51	CALL_5
0x4006713	      0xe9c9feffff	                           jmp 0x40065e1	      3697	syntax.c	FUNCTION_51	CALL_5
0x4006718	      0xba05000000	                              mov edx, 5	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400671d	      0xbe00000000	                              mov esi, 0	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006722	      0xe941ffffff	                           jmp 0x4006668	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x4006727	      0xbe01000000	                              mov esi, 1	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x400672c	      0xbf00000000	                              mov edi, 0	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x4006731	      0xe800000000	                          call 0x4006736	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x4006736	      0xe997feffff	                           jmp 0x40065d2	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
init_highlight	SWITCH,0:WHILE,0:DO,0:IF,10:ELSE,4:FOR,2:functions,0:CALL,13	124
0x400e6f0	            0x4155	                                push r13	      7116	syntax.c	FUNCTION_113
0x400e6f2	            0x4154	                                push r12	      7116	syntax.c	FUNCTION_113
0x400e6f4	          0x4189fc	                           mov r12d, edi	      7116	syntax.c	FUNCTION_113
0x400e6f7	              0x55	                                push rbp	      7116	syntax.c	FUNCTION_113
0x400e6f8	              0x53	                                push rbx	      7116	syntax.c	FUNCTION_113
0x400e6f9	      0xbf00000000	                              mov edi, 0	      7127	syntax.c	FUNCTION_113	CALL_1
0x400e6fe	            0x89f5	                            mov ebp, esi	      7116	syntax.c	FUNCTION_113
0x400e700	        0x4883ec08	                              sub rsp, 8	      7116	syntax.c	FUNCTION_113
0x400e704	      0xe800000000	                          call 0x400e709	      7127	syntax.c	FUNCTION_113	CALL_1
0x400e709	          0x4885c0	                           test rax, rax	      7128	syntax.c	FUNCTION_113	IF_1
0x400e70c	            0x744c	                            je 0x400e75a	      7128	syntax.c	FUNCTION_113	IF_1
0x400e70e	          0x4889c7	                            mov rdi, rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400e711	      0xe800000000	                          call 0x400e716	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400e716	          0x4885c0	                           test rax, rax	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0x400e719	          0x4889c3	                            mov rbx, rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x400e71c	            0x743c	                            je 0x400e75a	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0x400e71e	    0x8b1500000000	            mov edx, dword [0x0400e724] 	      7220	syntax.c	FUNCTION_114	IF_1
0x400e724	          0x4889c7	                            mov rdi, rax	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400e727	            0x85d2	                           test edx, edx	      7220	syntax.c	FUNCTION_114	IF_1
0x400e729	            0x7415	                            je 0x400e740	      7220	syntax.c	FUNCTION_114	IF_1
0x400e72b	        0x4883c408	                              add rsp, 8	      7204	syntax.c	FUNCTION_113
0x400e72f	              0x5b	                                 pop rbx	      7204	syntax.c	FUNCTION_113
0x400e730	              0x5d	                                 pop rbp	      7204	syntax.c	FUNCTION_113
0x400e731	            0x415c	                                 pop r12	      7204	syntax.c	FUNCTION_113
0x400e733	            0x415d	                                 pop r13	      7204	syntax.c	FUNCTION_113
0x400e735	      0xe900000000	                           jmp 0x400e73a	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400e73a	    0x660f1f440000	                    nop word [rax + rax]	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400e740	      0xe80b47ffff	            call sym.load_colors.part.13	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400e745	          0x4889df	                            mov rdi, rbx	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400e748	          0x4189c5	                           mov r13d, eax	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400e74b	      0xe800000000	                          call 0x400e750	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x400e750	        0x4183fd01	                             cmp r13d, 1	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x400e754	     0xf84c1000000	                            je 0x400e81b	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x400e75a	          0x4585e4	                         test r12d, r12d	      7149	syntax.c	FUNCTION_113	IF_4
0x400e75d	     0xf85cd000000	                           jne 0x400e830	      7149	syntax.c	FUNCTION_113	IF_4
0x400e763	    0x8b0500000000	            mov eax, dword [0x0400e769] 	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400e769	            0x85c0	                           test eax, eax	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400e76b	     0xf84aa000000	                            je 0x400e81b	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x400e771	    0x488b05000000	            mov rax, qword [0x0400e778] 	      7162	syntax.c	FUNCTION_113	IF_6
0x400e778	      0xbb00000000	                              mov ebx, 0	      7165	syntax.c	FUNCTION_113	ELSE_2
0x400e77d	          0x80386c	                    cmp byte [rax], 0x6c	      7165	syntax.c	FUNCTION_113	ELSE_2
0x400e780	      0xb800000000	                              mov eax, 0	      7165	syntax.c	FUNCTION_113	ELSE_2
0x400e785	        0x480f44d8	                          cmove rbx, rax	      7165	syntax.c	FUNCTION_113	ELSE_2
0x400e789	          0x488b3b	                    mov rdi, qword [rbx]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e78c	        0x4883c308	                              add rbx, 8	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e790	          0x4885ff	                           test rdi, rdi	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e793	            0x741c	                            je 0x400e7b1	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e795	           0xf1f00	                         nop dword [rax]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e798	        0x4883c308	                              add rbx, 8	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e79c	      0xba01000000	                              mov edx, 1	      7167	syntax.c	FUNCTION_113	CALL_6
0x400e7a1	            0x89ee	                            mov esi, ebp	      7167	syntax.c	FUNCTION_113	CALL_6
0x400e7a3	      0xe800000000	                          call 0x400e7a8	      7167	syntax.c	FUNCTION_113	CALL_6
0x400e7a8	        0x488b7bf8	                mov rdi, qword [rbx - 8]	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e7ac	          0x4885ff	                           test rdi, rdi	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e7af	            0x75e7	                           jne 0x400e798	      7166	syntax.c	FUNCTION_113	FOR_2
0x400e7b1	    0x833d00000000	               cmp dword [0x0400e7b8], 8	      7174	syntax.c	FUNCTION_113	IF_7
0x400e7b8	     0xf8eda000000	                           jle 0x400e898	      7174	syntax.c	FUNCTION_113	IF_7
0x400e7be	    0x488b05000000	            mov rax, qword [0x0400e7c5] 	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400e7c5	      0xbf00000000	                              mov edi, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400e7ca	      0xba01000000	                              mov edx, 1	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400e7cf	          0x80386c	                    cmp byte [rax], 0x6c	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400e7d2	      0xb800000000	                              mov eax, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400e7d7	        0x480f44f8	                          cmove rdi, rax	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400e7db	            0x31f6	                            xor esi, esi	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400e7dd	      0xe800000000	                          call 0x400e7e2	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x400e7e2	      0xbf00000000	                              mov edi, 0	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400e7e7	      0xe800000000	                          call 0x400e7ec	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400e7ec	          0x4885c0	                           test rax, rax	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400e7ef	            0x742a	                            je 0x400e81b	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x400e7f1	    0x8b0500000000	            mov eax, dword [0x0400e7f7] 	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400e7f7	          0x83f804	                              cmp eax, 4	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400e7fa	            0x7f74	                            jg 0x400e870	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x400e7fc	          0x83c001	                              add eax, 1	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400e7ff	      0xbe01000000	                              mov esi, 1	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400e804	      0xbf00000000	                              mov edi, 0	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400e809	    0x890500000000	            mov dword [0x0400e80f], eax 	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400e80f	      0xe800000000	                          call 0x400e814	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x400e814	    0x832d00000000	               sub dword [0x0400e81b], 1	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x400e81b	        0x4883c408	                              add rsp, 8	      7204	syntax.c	FUNCTION_113
0x400e81f	              0x5b	                                 pop rbx	      7204	syntax.c	FUNCTION_113
0x400e820	              0x5d	                                 pop rbp	      7204	syntax.c	FUNCTION_113
0x400e821	            0x415c	                                 pop r12	      7204	syntax.c	FUNCTION_113
0x400e823	            0x415d	                                 pop r13	      7204	syntax.c	FUNCTION_113
0x400e825	              0xc3	                                     ret	      7204	syntax.c	FUNCTION_113
0x400e826	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7204	syntax.c	FUNCTION_113
0x400e830	    0x488b3d000000	            mov rdi, qword [0x0400e837] 	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e837	    0xc70500000000	               mov dword [0x0400e841], 1	      7151	syntax.c	FUNCTION_113	IF_4
0x400e841	      0xbb00000000	                              mov ebx, 0	      7151	syntax.c	FUNCTION_113	IF_4
0x400e846	          0x4885ff	                           test rdi, rdi	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e849	     0xf8422ffffff	                            je 0x400e771	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e84f	              0x90	                                     nop	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e850	        0x4883c308	                              add rbx, 8	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e854	      0xba01000000	                              mov edx, 1	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400e859	            0x89ee	                            mov esi, ebp	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400e85b	      0xe800000000	                          call 0x400e860	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x400e860	          0x488b3b	                    mov rdi, qword [rbx]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e863	          0x4885ff	                           test rdi, rdi	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e866	            0x75e8	                           jne 0x400e850	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e868	      0xe904ffffff	                           jmp 0x400e771	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e86d	           0xf1f00	                         nop dword [rax]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x400e870	            0x31ff	                            xor edi, edi	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400e872	      0xba05000000	                              mov edx, 5	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400e877	      0xbe00000000	                              mov esi, 0	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400e87c	      0xe800000000	                          call 0x400e881	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400e881	        0x4883c408	                              add rsp, 8	      7204	syntax.c	FUNCTION_113
0x400e885	          0x4889c7	                            mov rdi, rax	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400e888	              0x5b	                                 pop rbx	      7204	syntax.c	FUNCTION_113
0x400e889	              0x5d	                                 pop rbp	      7204	syntax.c	FUNCTION_113
0x400e88a	            0x415c	                                 pop r12	      7204	syntax.c	FUNCTION_113
0x400e88c	            0x415d	                                 pop r13	      7204	syntax.c	FUNCTION_113
0x400e88e	      0xe900000000	                           jmp 0x400e893	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400e893	       0xf1f440000	                   nop dword [rax + rax]	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x400e898	            0x31f6	                            xor esi, esi	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400e89a	      0xba01000000	                              mov edx, 1	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400e89f	      0xbf00000000	                              mov edi, 0	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400e8a4	      0xe800000000	                          call 0x400e8a9	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x400e8a9	    0x488b05000000	            mov rax, qword [0x0400e8b0] 	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400e8b0	          0x80386c	                    cmp byte [rax], 0x6c	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400e8b3	     0xf8529ffffff	                           jne 0x400e7e2	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x400e8b9	      0xba01000000	                              mov edx, 1	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400e8be	            0x31f6	                            xor esi, esi	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400e8c0	      0xbf00000000	                              mov edi, 0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400e8c5	      0xe800000000	                          call 0x400e8ca	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x400e8ca	      0xe913ffffff	                           jmp 0x400e7e2	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
syn_id2colors	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	34
0x400c8d0	    0x448b05000000	            mov r8d, dword [0x0400c8d7] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8d7	          0x4439c7	                            cmp edi, r8d	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8da	            0x7f54	                            jg 0x400c930	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8dc	            0x85ff	                           test edi, edi	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8de	    0x4c8b0d000000	              mov r9, qword [0x0400c8e5]	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8e5	      0xb864000000	                           mov eax, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8ea	            0x7f0d	                            jg 0x400c8f9	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8ec	            0xeb42	                           jmp 0x400c930	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8ee	            0x6690	                                     nop	      9879	syntax.c	FUNCTION_159	IF_1
0x400c8f0	            0x85ff	                           test edi, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c8f2	            0x7424	                            je 0x400c918	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c8f4	          0x83e801	                              sub eax, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x400c8f7	            0x7447	                            je 0x400c940	      9886	syntax.c	FUNCTION_159	FOR_1
0x400c8f9	          0x4863ff	                         movsxd rdi, edi	      9888	syntax.c	FUNCTION_159	FOR_1
0x400c8fc	        0x488d0cff	                  lea rcx, [rdi + rdi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400c900	        0x488d0c4f	                  lea rcx, [rdi + rcx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400c904	    0x498d8cc968ff	            lea rcx, [r9 + rcx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400c90c	    0x4863b9880000	         movsxd rdi, dword [rcx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c913	          0x4139f8	                            cmp r8d, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c916	            0x7dd8	                           jge 0x400c8f0	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c918	        0x488b4140	            mov rax, qword [rcx + 0x40] 	      9851	syntax.c	ELSE_2	FUNCTION_157
0x400c91c	          0x488906	                    mov qword [rsi], rax	      9851	syntax.c	ELSE_2	FUNCTION_157
0x400c91f	        0x488b4148	            mov rax, qword [rcx + 0x48] 	      9852	syntax.c	ELSE_2	FUNCTION_157
0x400c923	          0x488902	                    mov qword [rdx], rax	      9852	syntax.c	ELSE_2	FUNCTION_157
0x400c926	          0x8b416c	            mov eax, dword [rcx + 0x6c] 	      9853	syntax.c	ELSE_2	FUNCTION_157
0x400c929	              0xc3	                                     ret	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400c92a	    0x660f1f440000	                    nop word [rax + rax]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400c930	    0x488b05000000	            mov rax, qword [0x0400c937] 	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400c937	    0x488d8868ffff	                   lea rcx, [rax - 0x98]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400c93e	            0xebd8	                           jmp 0x400c918	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400c940	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400c944	        0x488d0447	                  lea rax, [rdi + rax*2]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400c948	    0x498d8cc168ff	            lea rcx, [r9 + rax*8 - 0x98]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x400c950	            0xebc6	                           jmp 0x400c918	      9854	syntax.c	ELSE_2	FUNCTION_157
syn_finish_line	SWITCH,0:WHILE,1:DO,0:IF,3:ELSE,0:FOR,0:functions,0:CALL,3	63
0x4009fd0	    0x8b1500000000	            mov edx, dword [0x04009fd6] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009fd6	            0x85d2	                           test edx, edx	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009fd8	     0xf85d7000000	                           jne 0x400a0b5	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009fde	              0x55	                                push rbp	      1800	syntax.c	FUNCTION_26
0x4009fdf	              0x53	                                push rbx	      1800	syntax.c	FUNCTION_26
0x4009fe0	            0x89fd	                            mov ebp, edi	      1800	syntax.c	FUNCTION_26
0x4009fe2	        0x4883ec08	                              sub rsp, 8	      1800	syntax.c	FUNCTION_26
0x4009fe6	      0xe998000000	                           jmp 0x400a083	      1800	syntax.c	FUNCTION_26
0x4009feb	       0xf1f440000	                   nop dword [rax + rax]	      1800	syntax.c	FUNCTION_26
0x4009ff0	    0x486305000000	         movsxd rax, dword [0x04009ff7] 	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009ff7	            0x85c0	                           test eax, eax	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009ff9	     0xf8499000000	                            je 0x400a098	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009fff	        0x488d04c0	                  lea rax, [rax + rax*8]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a003	        0x48c1e004	                              shl rax, 4	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a007	    0x480305000000	             add rax, qword [0x0400a00e]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a00e	    0x48638070ffff	          movsxd rax, dword [rax - 0x90]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a015	            0x85c0	                           test eax, eax	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a017	            0x781c	                            js 0x400a035	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a019	    0x488b15000000	            mov rdx, qword [0x0400a020] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a020	        0x488d0480	                  lea rax, [rax + rax*4]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a024	        0x48c1e005	                              shl rax, 5	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a028	    0x480382700200	            add rax, qword [rdx + 0x270]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a02f	        0xf6402430	           test byte [rax + 0x24], 0x30 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a033	            0x7574	                           jne 0x400a0a9	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a035	    0x488b35000000	            mov rsi, qword [0x0400a03c] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400a03c	    0x488b3d000000	            mov rdi, qword [0x0400a043] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400a043	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x400a045	    0x8b1d00000000	            mov ebx, dword [0x0400a04b] 	      1824	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400a04b	      0xe800000000	                          call 0x400a050	      3305	syntax.c	FUNCTION_42	CALL_1
0x400a050	    0x48630d000000	         movsxd rcx, dword [0x0400a057] 	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x400a057	        0x803c0800	                 cmp byte [rax + rcx], 0	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x400a05b	          0x4889ca	                            mov rdx, rcx	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x400a05e	            0x7409	                            je 0x400a069	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x400a060	          0x83c201	                              add edx, 1	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x400a063	    0x891500000000	            mov dword [0x0400a069], edx 	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x400a069	      0xe812e7ffff	               call sym.check_state_ends	      1827	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_3
0x400a06e	            0x89d8	                            mov eax, ebx	      1827	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_3
0x400a070	          0x83c001	                              add eax, 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x400a073	    0x890500000000	            mov dword [0x0400a079], eax 	      1830	syntax.c	FUNCTION_26	WHILE_1
0x400a079	    0x8b0500000000	            mov eax, dword [0x0400a07f] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400a07f	            0x85c0	                           test eax, eax	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400a081	            0x751d	                           jne 0x400a0a0	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400a083	            0x31c9	                            xor ecx, ecx	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400a085	            0x31d2	                            xor edx, edx	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400a087	            0x31f6	                            xor esi, esi	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400a089	            0x89ef	                            mov edi, ebp	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400a08b	      0xe890eeffff	               call sym.syn_current_attr	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400a090	            0x85ed	                           test ebp, ebp	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400a092	     0xf8558ffffff	                           jne 0x4009ff0	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400a098	    0x8b0500000000	            mov eax, dword [0x0400a09e] 	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400a09e	            0xebd0	                           jmp 0x400a070	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400a0a0	        0x4883c408	                              add rsp, 8	      1833	syntax.c	FUNCTION_26
0x400a0a4	            0x31c0	                            xor eax, eax	      1832	syntax.c	FUNCTION_26
0x400a0a6	              0x5b	                                 pop rbx	      1833	syntax.c	FUNCTION_26
0x400a0a7	              0x5d	                                 pop rbp	      1833	syntax.c	FUNCTION_26
0x400a0a8	              0xc3	                                     ret	      1833	syntax.c	FUNCTION_26
0x400a0a9	        0x4883c408	                              add rsp, 8	      1833	syntax.c	FUNCTION_26
0x400a0ad	      0xb801000000	                              mov eax, 1	      1819	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400a0b2	              0x5b	                                 pop rbx	      1833	syntax.c	FUNCTION_26
0x400a0b3	              0x5d	                                 pop rbp	      1833	syntax.c	FUNCTION_26
0x400a0b4	              0xc3	                                     ret	      1833	syntax.c	FUNCTION_26
0x400a0b5	            0x31c0	                            xor eax, eax	      1832	syntax.c	FUNCTION_26
0x400a0b7	              0xc3	                                     ret	      1833	syntax.c	FUNCTION_26
syn_get_sub_char	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	2
0x4004440	    0x8b0500000000	            mov eax, dword [0x04004446] 	      6611	syntax.c	FUNCTION_104
0x4004446	              0xc3	                                     ret	      6611	syntax.c	FUNCTION_104
update_si_attr	SWITCH,0:WHILE,0:DO,0:IF,7:ELSE,3:FOR,0:functions,0:CALL,1	75
0x4008650	          0x4863c7	                         movsxd rax, edi	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4008653	            0x4154	                                push r12	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4008655	              0x55	                                push rbp	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4008656	        0x4c8d14c0	                  lea r10, [rax + rax*8]	      2717	syntax.c	ELSE_2	FUNCTION_32
0x400865a	              0x53	                                push rbx	      2716	syntax.c	ELSE_2	FUNCTION_32
0x400865b	    0x488b1d000000	            mov rbx, qword [0x04008662] 	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4008662	        0x49c1e204	                              shl r10, 4	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4008666	        0x4e8d0413	                     lea r8, [rbx + r10]	      2717	syntax.c	ELSE_2	FUNCTION_32
0x400866a	          0x496300	                  movsxd rax, dword [r8]	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x400866d	            0x85c0	                           test eax, eax	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x400866f	            0x7869	                            js 0x40086da	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4008671	        0x4c8d0c80	                   lea r9, [rax + rax*4]	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4008675	        0x498b6868	              mov rbp, qword [r8 + 0x68]	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4008679	    0x488b05000000	            mov rax, qword [0x04008680] 	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4008680	          0x4189fb	                           mov r11d, edi	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4008683	        0x49c1e105	                               shl r9, 5	      2724	syntax.c	ELSE_2	FUNCTION_32
0x4008687	    0x4c0388700200	             add r9, qword [rax + 0x270]	      2724	syntax.c	ELSE_2	FUNCTION_32
0x400868e	        0x40f6c540	                          test bpl, 0x40	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4008692	            0x754c	                           jne 0x40086e0	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4008694	      0x450fbf6154	           movsx r12d, word [r9 + 0x54] 	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4008699	        0x45896004	                mov dword [r8 + 4], r12d	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x400869d	          0x4489e7	                           mov edi, r12d	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40086a0	      0xe800000000	                          call 0x40086a5	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40086a5	      0x41f6412402	                test byte [r9 + 0x24], 2	      2741	syntax.c	FUNCTION_32	IF_4
0x40086aa	        0x41894060	              mov dword [r8 + 0x60], eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40086ae	        0x498b4140	              mov rax, qword [r9 + 0x40]	      2734	syntax.c	FUNCTION_32
0x40086b2	        0x45896008	                mov dword [r8 + 8], r12d	      2730	syntax.c	ELSE_2	FUNCTION_32
0x40086b6	        0x49894078	              mov qword [r8 + 0x78], rax	      2734	syntax.c	FUNCTION_32
0x40086ba	            0x741e	                            je 0x40086da	      2741	syntax.c	FUNCTION_32	IF_4
0x40086bc	          0x4585db	                         test r11d, r11d	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x40086bf	            0x754f	                           jne 0x4008710	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x40086c1	          0x4885c0	                           test rax, rax	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40086c4	    0x41c740600000	                mov dword [r8 + 0x60], 0	      2745	syntax.c	FUNCTION_32	IF_4	IF_5
0x40086cc	    0x41c740080000	                   mov dword [r8 + 8], 0	      2746	syntax.c	FUNCTION_32	IF_4	IF_5
0x40086d4	     0xf848e000000	                            je 0x4008768	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x40086da	              0x5b	                                 pop rbx	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40086db	              0x5d	                                 pop rbp	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40086dc	            0x415c	                                 pop r12	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40086de	              0xc3	                                     ret	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40086df	              0x90	                                     nop	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40086e0	      0x450fbf4902	                movsx r9d, word [r9 + 2]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40086e5	        0x45894804	                 mov dword [r8 + 4], r9d	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40086e9	          0x4489cf	                            mov edi, r9d	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40086ec	      0xe800000000	                          call 0x40086f1	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40086f1	        0x41894060	              mov dword [r8 + 0x60], eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x40086f5	        0x45894808	                 mov dword [r8 + 8], r9d	      2730	syntax.c	ELSE_2	FUNCTION_32
0x40086f9	    0x49c740780000	                mov qword [r8 + 0x78], 0	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x4008701	              0x5b	                                 pop rbx	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4008702	              0x5d	                                 pop rbp	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4008703	            0x415c	                                 pop r12	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4008705	              0xc3	                                     ret	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4008706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4008710	    0x4a8d941370ff	             lea rdx, [rbx + r10 - 0x90]	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008718	          0x4885c0	                           test rax, rax	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400871b	          0x8b4a60	            mov ecx, dword [rdx + 0x60] 	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400871e	        0x488b5a30	            mov rbx, qword [rdx + 0x30] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008722	        0x41894860	              mov dword [r8 + 0x60], ecx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008726	          0x8b4a08	                mov ecx, dword [rdx + 8]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008729	        0x41894808	                 mov dword [r8 + 8], ecx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400872d	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008731	        0x49895830	              mov qword [r8 + 0x30], rbx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008735	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008739	        0x49894828	              mov qword [r8 + 0x28], rcx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400873d	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008741	        0x49895840	              mov qword [r8 + 0x40], rbx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008745	        0x49894838	              mov qword [r8 + 0x38], rcx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4008749	            0x758f	                           jne 0x40086da	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400874b	        0x488b4278	            mov rax, qword [rdx + 0x78] 	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400874f	    0x4881cd000001	                         or rbp, 0x10000	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4008756	        0x49896868	              mov qword [r8 + 0x68], rbp	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400875a	        0x49894078	              mov qword [r8 + 0x78], rax	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400875e	      0xe977ffffff	                           jmp 0x40086da	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4008763	       0xf1f440000	                   nop dword [rax + rax]	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4008768	    0x49c74078ffff	mov qword [r8 + 0x78], 0xffffffffffffffff	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4008770	      0xe965ffffff	                           jmp 0x40086da	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
syn_cmd_include	SWITCH,0:WHILE,0:DO,0:IF,9:ELSE,0:FOR,0:functions,0:CALL,15	135
0x4001c90	            0x4155	                                push r13	      4819	syntax.c	FUNCTION_78
0x4001c92	            0x4154	                                push r12	      4819	syntax.c	FUNCTION_78
0x4001c94	              0x55	                                push rbp	      4819	syntax.c	FUNCTION_78
0x4001c95	              0x53	                                push rbx	      4819	syntax.c	FUNCTION_78
0x4001c96	          0x4889fb	                            mov rbx, rdi	      4819	syntax.c	FUNCTION_78
0x4001c99	        0x4883ec28	                           sub rsp, 0x28	      4819	syntax.c	FUNCTION_78
0x4001c9d	          0x488b2f	                    mov rbp, qword [rdi]	      4820	syntax.c	FUNCTION_78
0x4001ca0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4819	syntax.c	FUNCTION_78
0x4001ca9	      0x4889442418	             mov qword [rsp + 0x18], rax	      4819	syntax.c	FUNCTION_78
0x4001cae	            0x31c0	                            xor eax, eax	      4819	syntax.c	FUNCTION_78
0x4001cb0	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4824	syntax.c	FUNCTION_78
0x4001cb9	          0x4889ef	                            mov rdi, rbp	      4829	syntax.c	FUNCTION_78	CALL_1
0x4001cbc	      0xe800000000	                          call 0x4001cc1	      4829	syntax.c	FUNCTION_78	CALL_1
0x4001cc1	        0x48894308	                mov qword [rbx + 8], rax	      4829	syntax.c	FUNCTION_78	CALL_1
0x4001cc5	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      4830	syntax.c	FUNCTION_78	IF_1
0x4001cc8	            0x85c0	                           test eax, eax	      4830	syntax.c	FUNCTION_78	IF_1
0x4001cca	     0xf8540010000	                           jne 0x4001e10	      4830	syntax.c	FUNCTION_78	IF_1
0x4001cd0	        0x807d0040	                    cmp byte [rbp], 0x40	      4833	syntax.c	FUNCTION_78	IF_2
0x4001cd4	    0x41bc01000000	                             mov r12d, 1	      4821	syntax.c	FUNCTION_78
0x4001cda	     0xf8468010000	                            je 0x4001e48	      4833	syntax.c	FUNCTION_78	IF_2
0x4001ce0	      0x48834b2818	             or qword [rbx + 0x28], 0x18	      4853	syntax.c	FUNCTION_78
0x4001ce5	          0x4889df	                            mov rdi, rbx	      4854	syntax.c	FUNCTION_78	CALL_6
0x4001ce8	      0xe800000000	                          call 0x4001ced	      4854	syntax.c	FUNCTION_78	CALL_6
0x4001ced	          0x488b3b	                    mov rdi, qword [rbx]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001cf0	           0xfb607	                   movzx eax, byte [rdi]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001cf3	            0x3c3c	                            cmp al, 0x3c	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001cf5	            0x7469	                            je 0x4001d60	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001cf7	            0x3c24	                            cmp al, 0x24	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001cf9	            0x7465	                            je 0x4001d60	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001cfb	      0xe800000000	                          call 0x4001d00	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001d00	            0x85c0	                           test eax, eax	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001d02	            0x755c	                           jne 0x4001d60	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4001d04	    0x8b0500000000	            mov eax, dword [0x04001d0a] 	      4873	syntax.c	FUNCTION_78	IF_8
0x4001d0a	      0x3de6030000	                          cmp eax, 0x3e6	      4873	syntax.c	FUNCTION_78	IF_8
0x4001d0f	     0xf8f6b010000	                            jg 0x4001e80	      4873	syntax.c	FUNCTION_78	IF_8
0x4001d15	          0x83c001	                              add eax, 1	      4879	syntax.c	FUNCTION_78
0x4001d18	    0x8b2d00000000	            mov ebp, dword [0x04001d1e] 	      4878	syntax.c	FUNCTION_78
0x4001d1e	          0x488b3b	                    mov rdi, qword [rbx]	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4001d21	    0x890500000000	            mov dword [0x04001d27], eax 	      4879	syntax.c	FUNCTION_78
0x4001d27	    0x890500000000	            mov dword [0x04001d2d], eax 	      4879	syntax.c	FUNCTION_78
0x4001d2d	      0xbe01000000	                              mov esi, 1	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4001d32	    0x488b05000000	            mov rax, qword [0x04001d39] 	      4880	syntax.c	FUNCTION_78
0x4001d39	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4880	syntax.c	FUNCTION_78
0x4001d3d	    0x448ba8040300	          mov r13d, dword [rax + 0x304] 	      4880	syntax.c	FUNCTION_78
0x4001d44	    0x4489a0040300	           mov dword [rax + 0x304], r12d	      4881	syntax.c	FUNCTION_78
0x4001d4b	      0xe800000000	                          call 0x4001d50	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x4001d50	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001d52	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001d55	            0xeb75	                           jmp 0x4001dcc	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001d57	    0x660f1f840000	                    nop word [rax + rax]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001d60	    0x488b35000000	            mov rsi, qword [0x04001d67] 	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4001d67	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4001d6c	          0x4889df	                            mov rdi, rbx	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4001d6f	      0xe800000000	                          call 0x4001d74	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4001d74	            0x85c0	                           test eax, eax	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4001d76	     0xf84b4000000	                            je 0x4001e30	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x4001d7c	    0x8b0500000000	            mov eax, dword [0x04001d82] 	      4873	syntax.c	FUNCTION_78	IF_8
0x4001d82	      0x3de6030000	                          cmp eax, 0x3e6	      4873	syntax.c	FUNCTION_78	IF_8
0x4001d87	     0xf8ff3000000	                            jg 0x4001e80	      4873	syntax.c	FUNCTION_78	IF_8
0x4001d8d	          0x83c001	                              add eax, 1	      4879	syntax.c	FUNCTION_78
0x4001d90	    0x8b2d00000000	            mov ebp, dword [0x04001d96] 	      4878	syntax.c	FUNCTION_78
0x4001d96	          0x488b3b	                    mov rdi, qword [rbx]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001d99	    0x890500000000	            mov dword [0x04001d9f], eax 	      4879	syntax.c	FUNCTION_78
0x4001d9f	    0x890500000000	            mov dword [0x04001da5], eax 	      4879	syntax.c	FUNCTION_78
0x4001da5	            0x31d2	                            xor edx, edx	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001da7	    0x488b05000000	            mov rax, qword [0x04001dae] 	      4880	syntax.c	FUNCTION_78
0x4001dae	            0x31f6	                            xor esi, esi	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001db0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4880	syntax.c	FUNCTION_78
0x4001db4	    0x448ba8040300	          mov r13d, dword [rax + 0x304] 	      4880	syntax.c	FUNCTION_78
0x4001dbb	    0x4489a0040300	           mov dword [rax + 0x304], r12d	      4881	syntax.c	FUNCTION_78
0x4001dc2	      0xe800000000	                          call 0x4001dc7	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001dc7	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001dc9	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001dcc	            0x84c0	                             test al, al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001dce	            0x741f	                            je 0x4001def	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4001dd0	          0x488b1b	                    mov rbx, qword [rbx]	      4884	syntax.c	FUNCTION_78	CALL_15
0x4001dd3	      0xbe00000000	                              mov esi, 0	      4884	syntax.c	FUNCTION_78	CALL_15
0x4001dd8	            0x31ff	                            xor edi, edi	      4884	syntax.c	FUNCTION_78	CALL_15
0x4001dda	      0xba05000000	                              mov edx, 5	      4884	syntax.c	FUNCTION_78	CALL_15
0x4001ddf	      0xe800000000	                          call 0x4001de4	      4884	syntax.c	FUNCTION_78	CALL_15
0x4001de4	          0x4889de	                            mov rsi, rbx	      4884	syntax.c	FUNCTION_78	CALL_15
0x4001de7	          0x4889c7	                            mov rdi, rax	      4884	syntax.c	FUNCTION_78	CALL_15
0x4001dea	      0xe800000000	                          call 0x4001def	      4884	syntax.c	FUNCTION_78	CALL_15
0x4001def	    0x488b05000000	            mov rax, qword [0x04001df6] 	      4885	syntax.c	FUNCTION_78
0x4001df6	    0x892d00000000	            mov dword [0x04001dfc], ebp 	      4886	syntax.c	FUNCTION_78
0x4001dfc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4885	syntax.c	FUNCTION_78
0x4001e00	    0x4489a8040300	           mov dword [rax + 0x304], r13d	      4885	syntax.c	FUNCTION_78
0x4001e07	    0x660f1f840000	                    nop word [rax + rax]	      4885	syntax.c	FUNCTION_78
0x4001e10	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4887	syntax.c	FUNCTION_78
0x4001e15	    0x644833042528	                xor rax, qword fs:[0x28]	      4887	syntax.c	FUNCTION_78
0x4001e1e	     0xf859a000000	                           jne 0x4001ebe	      4887	syntax.c	FUNCTION_78
0x4001e24	        0x4883c428	                           add rsp, 0x28	      4887	syntax.c	FUNCTION_78
0x4001e28	              0x5b	                                 pop rbx	      4887	syntax.c	FUNCTION_78
0x4001e29	              0x5d	                                 pop rbp	      4887	syntax.c	FUNCTION_78
0x4001e2a	            0x415c	                                 pop r12	      4887	syntax.c	FUNCTION_78
0x4001e2c	            0x415d	                                 pop r13	      4887	syntax.c	FUNCTION_78
0x4001e2e	              0xc3	                                     ret	      4887	syntax.c	FUNCTION_78
0x4001e2f	              0x90	                                     nop	      4887	syntax.c	FUNCTION_78
0x4001e30	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4001e35	          0x4885ff	                           test rdi, rdi	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4001e38	            0x74d6	                            je 0x4001e10	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x4001e3a	      0xe800000000	                          call 0x4001e3f	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4001e3f	            0xebcf	                           jmp 0x4001e10	      4876	syntax.c	FUNCTION_78	IF_8
0x4001e41	     0xf1f80000000	                         nop dword [rax]	      4876	syntax.c	FUNCTION_78	IF_8
0x4001e48	        0x4883c501	                              add rbp, 1	      4835	syntax.c	FUNCTION_78	IF_2
0x4001e4c	      0x488d742408	                      lea rsi, [rsp + 8]	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4001e51	          0x4889ef	                            mov rdi, rbp	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4001e54	      0xe807ebffff	                 call sym.get_group_name	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4001e59	          0x4885c0	                           test rax, rax	      4837	syntax.c	FUNCTION_78	IF_2	IF_3
0x4001e5c	          0x4989c5	                            mov r13, rax	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x4001e5f	            0x743f	                            je 0x4001ea0	      4837	syntax.c	FUNCTION_78	IF_2	IF_3
0x4001e61	      0x488b742408	                mov rsi, qword [rsp + 8]	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4001e66	          0x4889ef	                            mov rdi, rbp	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4001e69	          0x4829ee	                            sub rsi, rbp	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4001e6c	      0xe80ff3ffff	              call sym.syn_check_cluster	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4001e71	            0x85c0	                           test eax, eax	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x4001e73	          0x4189c4	                           mov r12d, eax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4001e76	            0x7498	                            je 0x4001e10	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x4001e78	          0x4c892b	                    mov qword [rbx], r13	      4846	syntax.c	FUNCTION_78	IF_2
0x4001e7b	      0xe960feffff	                           jmp 0x4001ce0	      4846	syntax.c	FUNCTION_78	IF_2
0x4001e80	            0x31ff	                            xor edi, edi	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4001e82	      0xba05000000	                              mov edx, 5	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4001e87	      0xbe00000000	                              mov esi, 0	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4001e8c	      0xe800000000	                          call 0x4001e91	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4001e91	          0x4889c7	                            mov rdi, rax	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4001e94	            0xeba4	                           jmp 0x4001e3a	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4001e96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4001ea0	            0x31ff	                            xor edi, edi	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4001ea2	      0xba05000000	                              mov edx, 5	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4001ea7	      0xbe00000000	                              mov esi, 0	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4001eac	      0xe800000000	                          call 0x4001eb1	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4001eb1	          0x4889c7	                            mov rdi, rax	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4001eb4	      0xe800000000	                          call 0x4001eb9	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4001eb9	      0xe952ffffff	                           jmp 0x4001e10	      4840	syntax.c	FUNCTION_78	IF_2	IF_3
0x4001ebe	      0xe800000000	                          call 0x4001ec3	      4887	syntax.c	FUNCTION_78
syn_stack_cleanup	SWITCH,0:WHILE,0:DO,0:IF,7:ELSE,2:FOR,2:functions,0:CALL,1	109
0x40021d0	    0x488b0d000000	            mov rcx, qword [0x040021d7] 	      1381	syntax.c	FUNCTION_16	IF_1
0x40021d7	    0x4883b9100300	              cmp qword [rcx + 0x310], 0	      1381	syntax.c	FUNCTION_16	IF_1
0x40021df	     0xf848b010000	                            je 0x4002370	      1381	syntax.c	FUNCTION_16	IF_1
0x40021e5	            0x4156	                                push r14	      1374	syntax.c	FUNCTION_16
0x40021e7	            0x4155	                                push r13	      1374	syntax.c	FUNCTION_16
0x40021e9	            0x4154	                                push r12	      1374	syntax.c	FUNCTION_16
0x40021eb	              0x55	                                push rbp	      1374	syntax.c	FUNCTION_16
0x40021ec	              0x53	                                push rbx	      1374	syntax.c	FUNCTION_16
0x40021ed	    0x488ba9200300	           mov rbp, qword [rcx + 0x320] 	      1381	syntax.c	FUNCTION_16	IF_1
0x40021f4	          0x4885ed	                           test rbp, rbp	      1381	syntax.c	FUNCTION_16	IF_1
0x40021f7	     0xf8463010000	                            je 0x4002360	      1381	syntax.c	FUNCTION_16	IF_1
0x40021fd	    0x486381180300	        movsxd rax, dword [rcx + 0x318] 	      1385	syntax.c	FUNCTION_16	IF_2
0x4002204	    0x488b15000000	            mov rdx, qword [0x0400220b] 	      1385	syntax.c	FUNCTION_16	IF_2
0x400220b	    0x41bc3f420f00	                       mov r12d, 0xf423f	      1386	syntax.c	FUNCTION_16	IF_2
0x4002211	          0x4839d0	                            cmp rax, rdx	      1385	syntax.c	FUNCTION_16	IF_2
0x4002214	     0xf8f1e010000	                            jg 0x4002338	      1385	syntax.c	FUNCTION_16	IF_2
0x400221a	        0x488b5d00	                    mov rbx, qword [rbp]	      1398	syntax.c	FUNCTION_16	FOR_1
0x400221e	    0x440fb7814003	          movzx r8d, word [rcx + 0x340] 	      1395	syntax.c	FUNCTION_16
0x4002226	          0x4885db	                           test rbx, rbx	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002229	     0xf8431010000	                            je 0x4002360	      1398	syntax.c	FUNCTION_16	FOR_1
0x400222f	        0x488b4d08	                mov rcx, qword [rbp + 8]	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002233	          0x4d63e4	                        movsxd r12, r12d	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002236	          0x4589c5	                           mov r13d, r8d	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002239	          0x4889da	                            mov rdx, rbx	      1398	syntax.c	FUNCTION_16	FOR_1
0x400223c	            0x31ff	                            xor edi, edi	      1398	syntax.c	FUNCTION_16	FOR_1
0x400223e	            0xeb28	                           jmp 0x4002268	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002240	            0x85ff	                           test edi, edi	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4002242	     0xf84e0000000	                            je 0x4002328	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4002248	        0x664439e8	                            cmp ax, r13w	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x400224c	      0xbf01000000	                              mov edi, 1	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002251	     0xf82d1000000	                            jb 0x4002328	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4002257	    0x660f1f840000	                    nop word [rax + rax]	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4002260	          0x488b12	                    mov rdx, qword [rdx]	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002263	          0x4885d2	                           test rdx, rdx	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002266	            0x7438	                            je 0x40022a0	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002268	        0x4a8d3421	                    lea rsi, [rcx + r12]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x400226c	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4002270	          0x4839ce	                            cmp rsi, rcx	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4002273	            0x7eeb	                           jle 0x4002260	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4002275	     0xfb782c80000	           movzx eax, word [rdx + 0xc8] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x400227c	        0x664139c0	                             cmp r8w, ax	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002280	            0x72be	                            jb 0x4002240	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002282	            0x85ff	                           test edi, edi	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4002284	     0xf858e000000	                           jne 0x4002318	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x400228a	          0x488b12	                    mov rdx, qword [rdx]	      1398	syntax.c	FUNCTION_16	FOR_1
0x400228d	        0x664139c5	                            cmp r13w, ax	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002291	        0x440f47e8	                         cmova r13d, eax	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002295	          0x4885d2	                           test rdx, rdx	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002298	            0x75ce	                           jne 0x4002268	      1398	syntax.c	FUNCTION_16	FOR_1
0x400229a	    0x660f1f440000	                    nop word [rax + rax]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40022a0	            0x31c0	                            xor eax, eax	      1398	syntax.c	FUNCTION_16	FOR_1
0x40022a2	            0xeb10	                           jmp 0x40022b4	      1398	syntax.c	FUNCTION_16	FOR_1
0x40022a4	         0xf1f4000	                         nop dword [rax]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40022a8	          0x4889dd	                            mov rbp, rbx	      1398	syntax.c	FUNCTION_16	FOR_1
0x40022ab	        0x488b5d00	                    mov rbx, qword [rbp]	      1418	syntax.c	FUNCTION_16	FOR_2
0x40022af	          0x4885db	                           test rbx, rbx	      1418	syntax.c	FUNCTION_16	FOR_2
0x40022b2	            0x7454	                            je 0x4002308	      1418	syntax.c	FUNCTION_16	FOR_2
0x40022b4	    0x66443babc800	            cmp r13w, word [rbx + 0xc8] 	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022bc	            0x75ea	                           jne 0x40022a8	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022be	          0x4c89e2	                            mov rdx, r12	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022c1	        0x48035508	                add rdx, qword [rbp + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022c5	        0x483b5308	                cmp rdx, qword [rbx + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022c9	            0x7edd	                           jle 0x40022a8	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022cb	          0x488b03	                    mov rax, qword [rbx]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022ce	    0x4c8b35000000	            mov r14, qword [0x040022d5] 	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x40022d5	          0x4889df	                            mov rdi, rbx	      1439	syntax.c	FUNCTION_17	CALL_1
0x40022d8	        0x48894500	                    mov qword [rbp], rax	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022dc	      0xe85ffeffff	                call sym.clear_syn_state	      1439	syntax.c	FUNCTION_17	CALL_1
0x40022e1	    0x498b86280300	           mov rax, qword [r14 + 0x328] 	      1440	syntax.c	FUNCTION_17
0x40022e8	          0x488903	                    mov qword [rbx], rax	      1440	syntax.c	FUNCTION_17
0x40022eb	    0x49899e280300	            mov qword [r14 + 0x328], rbx	      1441	syntax.c	FUNCTION_17
0x40022f2	      0xb801000000	                              mov eax, 1	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x40022f7	        0x488b5d00	                    mov rbx, qword [rbp]	      1418	syntax.c	FUNCTION_16	FOR_2
0x40022fb	    0x418386300300	              add dword [r14 + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x4002303	          0x4885db	                           test rbx, rbx	      1418	syntax.c	FUNCTION_16	FOR_2
0x4002306	            0x75ac	                           jne 0x40022b4	      1418	syntax.c	FUNCTION_16	FOR_2
0x4002308	              0x5b	                                 pop rbx	      1430	syntax.c	FUNCTION_16
0x4002309	              0x5d	                                 pop rbp	      1430	syntax.c	FUNCTION_16
0x400230a	            0x415c	                                 pop r12	      1430	syntax.c	FUNCTION_16
0x400230c	            0x415d	                                 pop r13	      1430	syntax.c	FUNCTION_16
0x400230e	            0x415e	                                 pop r14	      1430	syntax.c	FUNCTION_16
0x4002310	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
0x4002311	     0xf1f80000000	                         nop dword [rax]	      1430	syntax.c	FUNCTION_16
0x4002318	      0xbf01000000	                              mov edi, 1	      1430	syntax.c	FUNCTION_16
0x400231d	      0xe93effffff	                           jmp 0x4002260	      1430	syntax.c	FUNCTION_16
0x4002322	    0x660f1f440000	                    nop word [rax + rax]	      1430	syntax.c	FUNCTION_16
0x4002328	          0x4189c5	                           mov r13d, eax	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x400232b	      0xbf01000000	                              mov edi, 1	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002330	      0xe92bffffff	                           jmp 0x4002260	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002335	           0xf1f00	                         nop dword [rax]	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002338	          0x4829d0	                            sub rax, rdx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x400233b	          0x4889c6	                            mov rsi, rax	      1388	syntax.c	FUNCTION_16	ELSE_1
0x400233e	    0x488b05000000	            mov rax, qword [0x04002345] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002345	          0x488b00	                    mov rax, qword [rax]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002348	            0x4899	                                     cqo	      1388	syntax.c	FUNCTION_16	ELSE_1
0x400234a	          0x48f7fe	                                idiv rsi	      1388	syntax.c	FUNCTION_16	ELSE_1
0x400234d	        0x448d6001	                     lea r12d, [rax + 1]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002351	      0xe9c4feffff	                           jmp 0x400221a	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002360	              0x5b	                                 pop rbx	      1430	syntax.c	FUNCTION_16
0x4002361	            0x31c0	                            xor eax, eax	      1382	syntax.c	FUNCTION_16	IF_1
0x4002363	              0x5d	                                 pop rbp	      1430	syntax.c	FUNCTION_16
0x4002364	            0x415c	                                 pop r12	      1430	syntax.c	FUNCTION_16
0x4002366	            0x415d	                                 pop r13	      1430	syntax.c	FUNCTION_16
0x4002368	            0x415e	                                 pop r14	      1430	syntax.c	FUNCTION_16
0x400236a	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
0x400236b	       0xf1f440000	                   nop dword [rax + rax]	      1430	syntax.c	FUNCTION_16
0x4002370	            0x31c0	                            xor eax, eax	      1382	syntax.c	FUNCTION_16	IF_1
0x4002372	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
update_si_end	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,2:FOR,0:functions,0:CALL,3	80
0x4003820	              0x53	                                push rbx	      2834	syntax.c	FUNCTION_34
0x4003821	          0x4889fb	                            mov rbx, rdi	      2834	syntax.c	FUNCTION_34
0x4003824	        0x4883ec60	                           sub rsp, 0x60	      2834	syntax.c	FUNCTION_34
0x4003828	            0x8b3f	                    mov edi, dword [rdi]	      2842	syntax.c	FUNCTION_34	IF_1
0x400382a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2834	syntax.c	FUNCTION_34
0x4003833	      0x4889442458	             mov qword [rsp + 0x58], rax	      2834	syntax.c	FUNCTION_34
0x4003838	            0x31c0	                            xor eax, eax	      2834	syntax.c	FUNCTION_34
0x400383a	            0x85ff	                           test edi, edi	      2842	syntax.c	FUNCTION_34	IF_1
0x400383c	            0x7811	                            js 0x400384f	      2842	syntax.c	FUNCTION_34	IF_1
0x400383e	            0x85d2	                           test edx, edx	      2848	syntax.c	FUNCTION_34	IF_2
0x4003840	    0x488b05000000	            mov rax, qword [0x04003847] 	      2848	syntax.c	FUNCTION_34	IF_2
0x4003847	            0x7527	                           jne 0x4003870	      2848	syntax.c	FUNCTION_34	IF_2
0x4003849	        0x48394318	            cmp qword [rbx + 0x18], rax 	      2848	syntax.c	FUNCTION_34	IF_2
0x400384d	            0x7c21	                            jl 0x4003870	      2848	syntax.c	FUNCTION_34	IF_2
0x400384f	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2888	syntax.c	FUNCTION_34
0x4003854	    0x644833042528	                xor rax, qword fs:[0x28]	      2888	syntax.c	FUNCTION_34
0x400385d	     0xf851d010000	                           jne 0x4003980	      2888	syntax.c	FUNCTION_34
0x4003863	        0x4883c460	                           add rsp, 0x60	      2888	syntax.c	FUNCTION_34
0x4003867	              0x5b	                                 pop rbx	      2888	syntax.c	FUNCTION_34
0x4003868	              0xc3	                                     ret	      2888	syntax.c	FUNCTION_34
0x4003869	     0xf1f80000000	                         nop dword [rax]	      2888	syntax.c	FUNCTION_34
0x4003870	      0x4889442410	             mov qword [rsp + 0x10], rax	      2856	syntax.c	FUNCTION_34
0x4003875	        0x89742418	             mov dword [rsp + 0x18], esi	      2857	syntax.c	FUNCTION_34
0x4003879	        0x4c8d4368	                    lea r8, [rbx + 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x400387d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2855	syntax.c	FUNCTION_34
0x4003885	    0xffb388000000	                 push qword [rbx + 0x88]	      2858	syntax.c	FUNCTION_34	CALL_1
0x400388b	      0x488d442414	                   lea rax, [rsp + 0x14]	      2858	syntax.c	FUNCTION_34	CALL_1
0x4003890	              0x50	                                push rax	      2858	syntax.c	FUNCTION_34	CALL_1
0x4003891	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2858	syntax.c	FUNCTION_34	CALL_1
0x4003896	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      2858	syntax.c	FUNCTION_34	CALL_1
0x400389b	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40038a0	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40038a5	      0xe8c6f9ffff	                    call sym.find_endpos	      2858	syntax.c	FUNCTION_34	CALL_1
0x40038aa	              0x58	                                 pop rax	      2861	syntax.c	FUNCTION_34	IF_3
0x40038ab	              0x5a	                                 pop rdx	      2861	syntax.c	FUNCTION_34	IF_3
0x40038ac	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      2861	syntax.c	FUNCTION_34	IF_3
0x40038b2	            0x754c	                           jne 0x4003900	      2861	syntax.c	FUNCTION_34	IF_3
0x40038b4	          0x486303	                 movsxd rax, dword [rbx]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40038b7	    0x488b15000000	            mov rdx, qword [0x040038be] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40038be	        0x488d0480	                  lea rax, [rax + rax*4]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40038c2	        0x48c1e005	                              shl rax, 5	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40038c6	    0x480382700200	            add rax, qword [rdx + 0x270]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40038cd	        0xf6402404	               test byte [rax + 0x24], 4	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40038d1	            0x757d	                           jne 0x4003950	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40038d3	    0xc7435c000000	               mov dword [rbx + 0x5c], 0	      2874	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x40038da	    0x48c743180000	               mov qword [rbx + 0x18], 0	      2875	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x40038e2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2877	syntax.c	FUNCTION_34	IF_3
0x40038e6	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2877	syntax.c	FUNCTION_34	IF_3
0x40038ea	        0x48894338	             mov qword [rbx + 0x38], rax	      2877	syntax.c	FUNCTION_34	IF_3
0x40038ee	        0x48895340	             mov qword [rbx + 0x40], rdx	      2877	syntax.c	FUNCTION_34	IF_3
0x40038f2	      0xe958ffffff	                           jmp 0x400384f	      2877	syntax.c	FUNCTION_34	IF_3
0x40038f7	    0x660f1f840000	                    nop word [rax + rax]	      2877	syntax.c	FUNCTION_34	IF_3
0x4003900	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4003905	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2882	syntax.c	FUNCTION_34	ELSE_2
0x400390a	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2885	syntax.c	FUNCTION_34	ELSE_2
0x4003911	        0x48894318	             mov qword [rbx + 0x18], rax	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4003915	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2883	syntax.c	FUNCTION_34	ELSE_2
0x400391a	        0x48895320	             mov qword [rbx + 0x20], rdx	      2882	syntax.c	FUNCTION_34	ELSE_2
0x400391e	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4003923	        0x48894338	             mov qword [rbx + 0x38], rax	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4003927	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2884	syntax.c	FUNCTION_34	ELSE_2
0x400392c	        0x48895340	             mov qword [rbx + 0x40], rdx	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4003930	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4003935	        0x48894348	             mov qword [rbx + 0x48], rax	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4003939	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x400393d	        0x48895350	             mov qword [rbx + 0x50], rdx	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4003941	          0x894358	             mov dword [rbx + 0x58], eax	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4003944	      0xe906ffffff	                           jmp 0x400384f	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4003949	     0xf1f80000000	                         nop dword [rax]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4003950	    0x488b35000000	            mov rsi, qword [0x04003957] 	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4003957	    0x488b3d000000	            mov rdi, qword [0x0400395e] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400395e	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4003960	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2867	syntax.c	FUNCTION_34	IF_3	IF_4
0x4003967	        0x48897318	             mov qword [rbx + 0x18], rsi	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x400396b	      0xe800000000	                          call 0x4003970	      3305	syntax.c	FUNCTION_42	CALL_1
0x4003970	          0x4889c7	                            mov rdi, rax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4003973	      0xe800000000	                          call 0x4003978	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4003978	          0x894320	             mov dword [rbx + 0x20], eax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x400397b	      0xe962ffffff	                           jmp 0x40038e2	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4003980	      0xe800000000	                          call 0x4003985	      2888	syntax.c	FUNCTION_34
clear_hl_tables	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,1:functions,0:CALL,5	28
0x4004ce0	            0x4154	                                push r12	      8989	syntax.c	FUNCTION_135
0x4004ce2	              0x55	                                push rbp	      8989	syntax.c	FUNCTION_135
0x4004ce3	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x4004ce8	              0x53	                                push rbx	      8989	syntax.c	FUNCTION_135
0x4004ce9	            0x31ed	                            xor ebp, ebp	      8989	syntax.c	FUNCTION_135
0x4004ceb	            0x31db	                            xor ebx, ebx	      8989	syntax.c	FUNCTION_135
0x4004ced	      0xe800000000	                          call 0x4004cf2	      8994	syntax.c	FUNCTION_135	CALL_1
0x4004cf2	    0x8b0500000000	            mov eax, dword [0x04004cf8] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004cf8	            0x85c0	                           test eax, eax	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004cfa	            0x7e31	                           jle 0x4004d2d	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004cfc	         0xf1f4000	                         nop dword [rax]	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004d00	          0x4989ec	                            mov r12, rbp	      8998	syntax.c	FUNCTION_135	FOR_1
0x4004d03	    0x4c0325000000	             add r12, qword [0x04004d0a]	      8998	syntax.c	FUNCTION_135	FOR_1
0x4004d0a	          0x83c301	                              add ebx, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004d0d	        0x4883c528	                           add rbp, 0x28	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004d11	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x4004d16	      0xe800000000	                          call 0x4004d1b	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x4004d1b	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x4004d20	      0xe800000000	                          call 0x4004d25	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x4004d25	    0x391d00000000	            cmp dword [0x04004d2b], ebx 	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004d2b	            0x7fd3	                            jg 0x4004d00	      8996	syntax.c	FUNCTION_135	FOR_1
0x4004d2d	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x4004d32	      0xe800000000	                          call 0x4004d37	      9002	syntax.c	FUNCTION_135	CALL_4
0x4004d37	              0x5b	                                 pop rbx	      9004	syntax.c	FUNCTION_135
0x4004d38	              0x5d	                                 pop rbp	      9004	syntax.c	FUNCTION_135
0x4004d39	            0x415c	                                 pop r12	      9004	syntax.c	FUNCTION_135
0x4004d3b	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x4004d40	      0xe900000000	                           jmp 0x4004d45	      9003	syntax.c	FUNCTION_135	CALL_5
syn_id2attr	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,2:FOR,0:functions,0:CALL,1	46
0x4008590	    0x8b0d00000000	            mov ecx, dword [0x04008596] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4008596	            0x39cf	                            cmp edi, ecx	      9879	syntax.c	FUNCTION_159	IF_1
0x4008598	            0x7f7e	                            jg 0x4008618	      9879	syntax.c	FUNCTION_159	IF_1
0x400859a	            0x85ff	                           test edi, edi	      9879	syntax.c	FUNCTION_159	IF_1
0x400859c	    0x488b35000000	            mov rsi, qword [0x040085a3] 	      9879	syntax.c	FUNCTION_159	IF_1
0x40085a3	      0xb864000000	                           mov eax, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x40085a8	            0x7f0f	                            jg 0x40085b9	      9879	syntax.c	FUNCTION_159	IF_1
0x40085aa	            0xeb6c	                           jmp 0x4008618	      9879	syntax.c	FUNCTION_159	IF_1
0x40085ac	         0xf1f4000	                         nop dword [rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x40085b0	            0x85ff	                           test edi, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40085b2	            0x742c	                            je 0x40085e0	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40085b4	          0x83e801	                              sub eax, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x40085b7	            0x7477	                            je 0x4008630	      9886	syntax.c	FUNCTION_159	FOR_1
0x40085b9	          0x4863ff	                         movsxd rdi, edi	      9888	syntax.c	FUNCTION_159	FOR_1
0x40085bc	        0x488d14ff	                  lea rdx, [rdi + rdi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x40085c0	        0x488d1457	                  lea rdx, [rdi + rdx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x40085c4	    0x488d94d668ff	           lea rdx, [rsi + rdx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x40085cc	    0x4863ba880000	         movsxd rdi, dword [rdx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40085d3	            0x39f9	                            cmp ecx, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40085d5	            0x7dd9	                           jge 0x40085b0	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40085d7	    0x660f1f840000	                    nop word [rax + rax]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40085e0	    0x8b0d00000000	            mov ecx, dword [0x040085e6] 	      9826	syntax.c	FUNCTION_156	IF_1
0x40085e6	            0x85c9	                           test ecx, ecx	      9826	syntax.c	FUNCTION_156	IF_1
0x40085e8	            0x7526	                           jne 0x4008610	      9826	syntax.c	FUNCTION_156	IF_1
0x40085ea	    0x833d00000000	               cmp dword [0x040085f1], 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x40085f1	            0x7e0d	                           jle 0x4008600	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x40085f3	          0x8b423c	            mov eax, dword [rdx + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x40085f6	              0xc3	                                     ret	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x40085f7	    0x660f1f840000	                    nop word [rax + rax]	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4008600	    0x8b0500000000	            mov eax, dword [0x04008606] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4008606	            0x85c0	                           test eax, eax	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4008608	            0x75e9	                           jne 0x40085f3	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400860a	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x400860d	              0xc3	                                     ret	      9836	syntax.c	FUNCTION_156	ELSE_2
0x400860e	            0x6690	                                     nop	      9836	syntax.c	FUNCTION_156	ELSE_2
0x4008610	          0x8b4268	            mov eax, dword [rdx + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x4008613	              0xc3	                                     ret	      9827	syntax.c	FUNCTION_156	IF_1
0x4008614	         0xf1f4000	                         nop dword [rax]	      9827	syntax.c	FUNCTION_156	IF_1
0x4008618	    0x488b05000000	            mov rax, qword [0x0400861f] 	      9827	syntax.c	FUNCTION_156	IF_1
0x400861f	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9827	syntax.c	FUNCTION_156	IF_1
0x4008626	            0xebb8	                           jmp 0x40085e0	      9827	syntax.c	FUNCTION_156	IF_1
0x4008628	     0xf1f84000000	                   nop dword [rax + rax]	      9827	syntax.c	FUNCTION_156	IF_1
0x4008630	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9827	syntax.c	FUNCTION_156	IF_1
0x4008634	        0x488d0447	                  lea rax, [rdi + rax*2]	      9827	syntax.c	FUNCTION_156	IF_1
0x4008638	    0x488d94c668ff	           lea rdx, [rsi + rax*8 - 0x98]	      9827	syntax.c	FUNCTION_156	IF_1
0x4008640	            0xeb9e	                           jmp 0x40085e0	      9827	syntax.c	FUNCTION_156	IF_1
set_context_in_echohl_cmd	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	4
0x4004250	    0xc7070d000000	                    mov dword [rdi], 0xd	      6478	syntax.c	FUNCTION_99
0x4004256	        0x48897708	                mov qword [rdi + 8], rsi	      6479	syntax.c	FUNCTION_99
0x400425a	    0xc70500000000	               mov dword [0x04004264], 1	      6480	syntax.c	FUNCTION_99
0x4004264	              0xc3	                                     ret	      6480	syntax.c	FUNCTION_99
get_syntax_info	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	4
0x4004430	    0x8b0500000000	            mov eax, dword [0x04004436] 	      6600	syntax.c	FUNCTION_103
0x4004436	            0x8907	                    mov dword [rdi], eax	      6600	syntax.c	FUNCTION_103
0x4004438	    0x8b0500000000	            mov eax, dword [0x0400443e] 	      6602	syntax.c	FUNCTION_103
0x400443e	              0xc3	                                     ret	      6602	syntax.c	FUNCTION_103
highlight_color	SWITCH,0:WHILE,0:DO,0:IF,17:ELSE,6:FOR,0:functions,0:CALL,11	220
0x4005c70	        0x4883ec08	                              sub rsp, 8	      9362	syntax.c	FUNCTION_144
0x4005c74	            0x85ff	                           test edi, edi	      9369	syntax.c	FUNCTION_144	IF_1
0x4005c76	     0xf8e0a010000	                           jle 0x4005d86	      9369	syntax.c	FUNCTION_144	IF_1
0x4005c7c	    0x3b3d00000000	            cmp edi, dword [0x04005c82] 	      9369	syntax.c	FUNCTION_144	IF_1
0x4005c82	     0xf8ffe000000	                            jg 0x4005d86	      9369	syntax.c	FUNCTION_144	IF_1
0x4005c88	           0xfb60e	                   movzx ecx, byte [rsi]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005c8b	          0x8d41bf	                   lea eax, [rcx - 0x41]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005c8e	            0x3c19	                            cmp al, 0x19	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005c90	     0xf879a000000	                            ja 0x4005d30	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005c96	          0x80f946	                            cmp cl, 0x46	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005c99	     0xf84f1000000	                            je 0x4005d90	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005c9f	          0x80f953	                            cmp cl, 0x53	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005ca2	     0xf84b8000000	                            je 0x4005d60	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005ca8	            0x31c0	                            xor eax, eax	      9370	syntax.c	FUNCTION_144	IF_1
0x4005caa	          0x80f942	                            cmp cl, 0x42	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005cad	            0x757a	                           jne 0x4005d29	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005caf	         0xfb64e01	               movzx ecx, byte [rsi + 1]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005cb3	          0x8d41bf	                   lea eax, [rcx - 0x41]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005cb6	            0x3c19	                            cmp al, 0x19	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005cb8	      0xb800000000	                              mov eax, 0	      9370	syntax.c	FUNCTION_144	IF_1
0x4005cbd	     0xf8692000000	                           jbe 0x4005d55	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005cc3	          0x80f967	                            cmp cl, 0x67	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005cc6	            0x7561	                           jne 0x4005d29	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005cc8	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x4005ccb	     0xf84bf010000	                            je 0x4005e90	      9381	syntax.c	FUNCTION_144	IF_6
0x4005cd1	          0x83fa63	                           cmp edx, 0x63	      9425	syntax.c	FUNCTION_144	IF_15
0x4005cd4	     0xf85ac000000	                           jne 0x4005d86	      9425	syntax.c	FUNCTION_144	IF_15
0x4005cda	          0x4863ff	                         movsxd rdi, edi	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005cdd	            0x85c0	                           test eax, eax	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005cdf	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005ce3	        0x488d0447	                  lea rax, [rdi + rax*2]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005ce7	     0xf85e3000000	                           jne 0x4005dd0	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005ced	    0x488b15000000	            mov rdx, qword [0x04005cf4] 	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4005cf4	        0x488d04c2	                  lea rax, [rdx + rax*8]	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4005cf8	        0x448b40a0	             mov r8d, dword [rax - 0x60]	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4005cfc	        0x4183e801	                              sub r8d, 1	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x4005d00	          0x4585c0	                           test r8d, r8d	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x4005d03	     0xf887d000000	                            js 0x4005d86	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x4005d09	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005d0e	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005d13	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005d18	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005d1d	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005d1f	      0xe800000000	                          call 0x4005d24	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005d24	      0xb800000000	                              mov eax, 0	      9434	syntax.c	FUNCTION_144	IF_15
0x4005d29	        0x4883c408	                              add rsp, 8	      9438	syntax.c	FUNCTION_144
0x4005d2d	              0xc3	                                     ret	      9438	syntax.c	FUNCTION_144
0x4005d2e	            0x6690	                                     nop	      9438	syntax.c	FUNCTION_144
0x4005d30	          0x80f966	                            cmp cl, 0x66	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005d33	            0x745b	                            je 0x4005d90	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005d35	          0x80f973	                            cmp cl, 0x73	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005d38	            0x7426	                            je 0x4005d60	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005d3a	            0x31c0	                            xor eax, eax	      9370	syntax.c	FUNCTION_144	IF_1
0x4005d3c	          0x80f962	                            cmp cl, 0x62	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d3f	            0x75e8	                           jne 0x4005d29	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d41	         0xfb64e01	               movzx ecx, byte [rsi + 1]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d45	          0x8d41bf	                   lea eax, [rcx - 0x41]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d48	            0x3c19	                            cmp al, 0x19	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d4a	      0xb800000000	                              mov eax, 0	      9370	syntax.c	FUNCTION_144	IF_1
0x4005d4f	     0xf876effffff	                            ja 0x4005cc3	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d55	          0x80f947	                            cmp cl, 0x47	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d58	     0xf846affffff	                            je 0x4005cc8	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d5e	            0xebc9	                           jmp 0x4005d29	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005d60	      0x440fb64601	               movzx r8d, byte [rsi + 1]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005d65	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005d69	        0x4180f919	                           cmp r9b, 0x19	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005d6d	     0xf868d000000	                           jbe 0x4005e00	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005d73	        0x4180f870	                           cmp r8b, 0x70	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005d77	     0xf858d000000	                           jne 0x4005e0a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005d7d	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x4005d80	     0xf8492010000	                            je 0x4005f18	      9381	syntax.c	FUNCTION_144	IF_6
0x4005d86	            0x31c0	                            xor eax, eax	      9370	syntax.c	FUNCTION_144	IF_1
0x4005d88	        0x4883c408	                              add rsp, 8	      9438	syntax.c	FUNCTION_144
0x4005d8c	              0xc3	                                     ret	      9438	syntax.c	FUNCTION_144
0x4005d8d	           0xf1f00	                         nop dword [rax]	      9438	syntax.c	FUNCTION_144
0x4005d90	      0x440fb64601	               movzx r8d, byte [rsi + 1]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005d95	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005d99	        0x4180f919	                           cmp r9b, 0x19	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005d9d	            0x7751	                            ja 0x4005df0	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005d9f	        0x4180f847	                           cmp r8b, 0x47	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005da3	            0x7451	                            je 0x4005df6	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005da5	            0x3c19	                            cmp al, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005da7	     0xf8623010000	                           jbe 0x4005ed0	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005dad	          0x80f966	                            cmp cl, 0x66	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005db0	            0x7583	                           jne 0x4005d35	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005db2	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005db6	            0x7668	                           jbe 0x4005e20	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005db8	        0x4180f86f	                           cmp r8b, 0x6f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005dbc	            0x7468	                            je 0x4005e26	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005dbe	            0x3c19	                            cmp al, 0x19	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005dc0	     0xf876fffffff	                            ja 0x4005d35	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005dc6	      0xe9d4feffff	                           jmp 0x4005c9f	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005dcb	       0xf1f440000	                   nop dword [rax + rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005dd0	    0x488b0d000000	            mov rcx, qword [0x04005dd7] 	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005dd7	        0x488d04c1	                  lea rax, [rcx + rax*8]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005ddb	        0x448b409c	             mov r8d, dword [rax - 0x64]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005ddf	        0x4183e801	                              sub r8d, 1	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005de3	      0xe918ffffff	                           jmp 0x4005d00	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005de8	     0xf1f84000000	                   nop dword [rax + rax]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x4005df0	        0x4180f867	                           cmp r8b, 0x67	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005df4	            0x75af	                           jne 0x4005da5	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x4005df6	      0xb801000000	                              mov eax, 1	      9373	syntax.c	FUNCTION_144	IF_2
0x4005dfb	      0xe9c8feffff	                           jmp 0x4005cc8	      9373	syntax.c	FUNCTION_144	IF_2
0x4005e00	        0x4180f850	                           cmp r8b, 0x50	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005e04	     0xf8473ffffff	                            je 0x4005d7d	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x4005e0a	            0x3c19	                            cmp al, 0x19	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005e0c	     0xf8696feffff	                           jbe 0x4005ca8	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005e12	      0xe923ffffff	                           jmp 0x4005d3a	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005e17	    0x660f1f840000	                    nop word [rax + rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x4005e20	        0x4180f84f	                           cmp r8b, 0x4f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005e24	            0x7598	                           jne 0x4005dbe	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005e26	      0x440fb64602	               movzx r8d, byte [rsi + 2]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005e2b	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005e2f	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005e33	     0xf87b7000000	                            ja 0x4005ef0	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005e39	        0x4180f84e	                           cmp r8b, 0x4e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005e3d	     0xf857bffffff	                           jne 0x4005dbe	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005e43	      0x440fb64603	               movzx r8d, byte [rsi + 3]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005e48	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005e4c	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005e50	     0xf8677010000	                           jbe 0x4005fcd	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005e56	        0x4180f874	                           cmp r8b, 0x74	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005e5a	     0xf855effffff	                           jne 0x4005dbe	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005e60	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x4005e63	     0xf851dffffff	                           jne 0x4005d86	      9381	syntax.c	FUNCTION_144	IF_6
0x4005e69	          0x4863ff	                         movsxd rdi, edi	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4005e6c	    0x4c8b0d000000	              mov r9, qword [0x04005e73]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4005e73	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4005e77	        0x488d0447	                  lea rax, [rdi + rax*2]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4005e7b	        0x498d04c1	                   lea rax, [r9 + rax*8]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4005e7f	        0x488b40c8	             mov rax, qword [rax - 0x38]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4005e83	      0xe9a1feffff	                           jmp 0x4005d29	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4005e88	     0xf1f84000000	                   nop dword [rax + rax]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x4005e90	            0x31c9	                            xor ecx, ecx	      9381	syntax.c	FUNCTION_144	IF_6
0x4005e92	    0x8b1500000000	            mov edx, dword [0x04005e98] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005e98	            0x85d2	                           test edx, edx	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005e9a	            0x7444	                            je 0x4005ee0	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005e9c	        0x807e0223	                cmp byte [rsi + 2], 0x23	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005ea0	     0xf8492000000	                            je 0x4005f38	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005ea6	          0x4863ff	                         movsxd rdi, edi	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005ea9	            0x85c0	                           test eax, eax	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005eab	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005eaf	        0x488d0447	                  lea rax, [rdi + rax*2]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005eb3	            0x754b	                           jne 0x4005f00	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005eb5	    0x488b35000000	            mov rsi, qword [0x04005ebc] 	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x4005ebc	            0x85c9	                           test ecx, ecx	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x4005ebe	        0x488d04c6	                  lea rax, [rsi + rax*8]	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x4005ec2	            0x7464	                            je 0x4005f28	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x4005ec4	        0x488b40e8	             mov rax, qword [rax - 0x18]	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x4005ec8	      0xe95cfeffff	                           jmp 0x4005d29	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x4005ecd	           0xf1f00	                         nop dword [rax]	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x4005ed0	          0x80f946	                            cmp cl, 0x46	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005ed3	     0xf84d9feffff	                            je 0x4005db2	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005ed9	      0xe9c1fdffff	                           jmp 0x4005c9f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005ede	            0x6690	                                     nop	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x4005ee0	    0x448b05000000	            mov r8d, dword [0x04005ee7] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005ee7	          0x4585c0	                           test r8d, r8d	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005eea	            0x74ba	                            je 0x4005ea6	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005eec	            0xebae	                           jmp 0x4005e9c	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005eee	            0x6690	                                     nop	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005ef0	        0x4180f86e	                           cmp r8b, 0x6e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005ef4	     0xf85c4feffff	                           jne 0x4005dbe	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005efa	      0xe944ffffff	                           jmp 0x4005e43	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005eff	              0x90	                                     nop	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005f00	    0x488b3d000000	            mov rdi, qword [0x04005f07] 	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005f07	        0x488d04c7	                  lea rax, [rdi + rax*8]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005f0b	        0x488b40d8	             mov rax, qword [rax - 0x28]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005f0f	      0xe915feffff	                           jmp 0x4005d29	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005f14	         0xf1f4000	                         nop dword [rax]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x4005f18	            0x31c0	                            xor eax, eax	      9381	syntax.c	FUNCTION_144	IF_6
0x4005f1a	      0xb901000000	                              mov ecx, 1	      9381	syntax.c	FUNCTION_144	IF_6
0x4005f1f	      0xe96effffff	                           jmp 0x4005e92	      9381	syntax.c	FUNCTION_144	IF_6
0x4005f24	         0xf1f4000	                         nop dword [rax]	      9381	syntax.c	FUNCTION_144	IF_6
0x4005f28	        0x488b40e0	             mov rax, qword [rax - 0x20]	      9421	syntax.c	FUNCTION_144	IF_6
0x4005f2c	      0xe9f8fdffff	                           jmp 0x4005d29	      9421	syntax.c	FUNCTION_144	IF_6
0x4005f31	     0xf1f80000000	                         nop dword [rax]	      9421	syntax.c	FUNCTION_144	IF_6
0x4005f38	          0x4863ff	                         movsxd rdi, edi	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4005f3b	            0x85c0	                           test eax, eax	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4005f3d	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4005f41	        0x488d0447	                  lea rax, [rdi + rax*2]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4005f45	            0x7471	                            je 0x4005fb8	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4005f47	    0x4c8b1d000000	            mov r11, qword [0x04005f4e] 	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4005f4e	        0x498d04c3	                  lea rax, [r11 + rax*8]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4005f52	        0x488b78a8	             mov rdi, qword [rax - 0x58]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x4005f56	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x4005f5d	     0xf8423feffff	                            je 0x4005d86	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x4005f63	            0x85d2	                           test edx, edx	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4005f65	      0xb800000000	                              mov eax, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4005f6a	      0xba00000000	                              mov edx, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4005f6f	        0x480f45c2	                         cmovne rax, rdx	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4005f73	            0xffd0	                                call rax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x4005f75	           0xfb6d4	                           movzx edx, ah	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f78	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f7c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f81	          0x4989d1	                             mov r9, rdx	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f84	           0xfb6d0	                           movzx edx, al	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f87	        0x48c1e810	                           shr rax, 0x10	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f8b	              0x52	                                push rdx	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f8c	          0x4989c0	                             mov r8, rax	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f8f	      0xba0a000000	                            mov edx, 0xa	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f94	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f99	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005f9e	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005fa0	      0xe800000000	                          call 0x4005fa5	        33	stdio2.h	FUNCTION_182	CALL_1
0x4005fa5	            0x4158	                                  pop r8	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005fa7	      0xb800000000	                              mov eax, 0	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005fac	            0x4159	                                  pop r9	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005fae	      0xe976fdffff	                           jmp 0x4005d29	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005fb3	       0xf1f440000	                   nop dword [rax + rax]	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x4005fb8	    0x4c8b15000000	            mov r10, qword [0x04005fbf] 	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005fbf	            0x85c9	                           test ecx, ecx	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005fc1	        0x498d04c2	                  lea rax, [r10 + rax*8]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005fc5	            0x7415	                            je 0x4005fdc	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005fc7	        0x488b78b8	             mov rdi, qword [rax - 0x48]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005fcb	            0xeb89	                           jmp 0x4005f56	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x4005fcd	        0x4180f854	                           cmp r8b, 0x54	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005fd1	     0xf85e7fdffff	                           jne 0x4005dbe	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005fd7	      0xe984feffff	                           jmp 0x4005e60	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x4005fdc	        0x488b78b0	             mov rdi, qword [rax - 0x50]	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x4005fe0	      0xe971ffffff	                           jmp 0x4005f56	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
syn_list_header	SWITCH,0:WHILE,0:DO,0:IF,8:ELSE,2:FOR,0:functions,0:CALL,7	80
0x400b040	            0x85ff	                           test edi, edi	      9482	syntax.c	FUNCTION_146	IF_1
0x400b042	            0x4154	                                push r12	      9478	syntax.c	FUNCTION_146
0x400b044	          0x4189fc	                           mov r12d, edi	      9478	syntax.c	FUNCTION_146
0x400b047	              0x55	                                push rbp	      9478	syntax.c	FUNCTION_146
0x400b048	            0x89d5	                            mov ebp, edx	      9478	syntax.c	FUNCTION_146
0x400b04a	              0x53	                                push rbx	      9478	syntax.c	FUNCTION_146
0x400b04b	            0x747b	                            je 0x400b0c8	      9482	syntax.c	FUNCTION_146	IF_1
0x400b04d	    0x8b1500000000	            mov edx, dword [0x0400b053] 	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400b053	    0x488b05000000	            mov rax, qword [0x0400b05a] 	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400b05a	        0x8d4c3201	                lea ecx, [rdx + rsi + 1]	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400b05e	          0x4863c9	                         movsxd rcx, ecx	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400b061	          0x4839c1	                            cmp rcx, rax	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400b064	     0xf8d86000000	                           jge 0x400b0f0	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x400b06a	            0x31db	                            xor ebx, ebx	      9480	syntax.c	FUNCTION_146
0x400b06c	          0x83fa12	                           cmp edx, 0x12	      9480	syntax.c	FUNCTION_146
0x400b06f	      0xbf13000000	                           mov edi, 0x13	      9479	syntax.c	FUNCTION_146
0x400b074	           0xf9ec3	                                setle bl	      9480	syntax.c	FUNCTION_146
0x400b077	          0x8d4a01	                      lea ecx, [rdx + 1]	      9503	syntax.c	FUNCTION_146	IF_6
0x400b07a	            0x39d7	                            cmp edi, edx	      9503	syntax.c	FUNCTION_146	IF_6
0x400b07c	          0x8d50ff	                      lea edx, [rax - 1]	      9505	syntax.c	FUNCTION_146	IF_7
0x400b07f	           0xf4ef9	                         cmovle edi, ecx	      9503	syntax.c	FUNCTION_146	IF_6
0x400b082	          0x4863cf	                         movsxd rcx, edi	      9504	syntax.c	FUNCTION_146	IF_7
0x400b085	          0x4839c1	                            cmp rcx, rax	      9505	syntax.c	FUNCTION_146	IF_7
0x400b088	           0xf4dfa	                         cmovge edi, edx	      9505	syntax.c	FUNCTION_146	IF_7
0x400b08b	      0xe800000000	                          call 0x400b090	      9507	syntax.c	FUNCTION_146	CALL_4
0x400b090	          0x4585e4	                         test r12d, r12d	      9510	syntax.c	FUNCTION_146	IF_8
0x400b093	            0x740b	                            je 0x400b0a0	      9510	syntax.c	FUNCTION_146	IF_8
0x400b095	            0x89d8	                            mov eax, ebx	      9517	syntax.c	FUNCTION_146
0x400b097	              0x5b	                                 pop rbx	      9517	syntax.c	FUNCTION_146
0x400b098	              0x5d	                                 pop rbp	      9517	syntax.c	FUNCTION_146
0x400b099	            0x415c	                                 pop r12	      9517	syntax.c	FUNCTION_146
0x400b09b	              0xc3	                                     ret	      9517	syntax.c	FUNCTION_146
0x400b09c	         0xf1f4000	                         nop dword [rax]	      9517	syntax.c	FUNCTION_146
0x400b0a0	            0x89ef	                            mov edi, ebp	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x400b0a2	      0xe800000000	                          call 0x400b0a7	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x400b0a7	      0xbf00000000	                              mov edi, 0	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x400b0ac	            0x89c6	                            mov esi, eax	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x400b0ae	      0xe800000000	                          call 0x400b0b3	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x400b0b3	      0xbf20000000	                           mov edi, 0x20	      9513	syntax.c	FUNCTION_146	IF_8	CALL_7
0x400b0b8	      0xe800000000	                          call 0x400b0bd	      9513	syntax.c	FUNCTION_146	IF_8	CALL_7
0x400b0bd	            0x89d8	                            mov eax, ebx	      9517	syntax.c	FUNCTION_146
0x400b0bf	              0x5b	                                 pop rbx	      9517	syntax.c	FUNCTION_146
0x400b0c0	              0x5d	                                 pop rbp	      9517	syntax.c	FUNCTION_146
0x400b0c1	            0x415c	                                 pop r12	      9517	syntax.c	FUNCTION_146
0x400b0c3	              0xc3	                                     ret	      9517	syntax.c	FUNCTION_146
0x400b0c4	         0xf1f4000	                         nop dword [rax]	      9517	syntax.c	FUNCTION_146
0x400b0c8	      0xbf0a000000	                            mov edi, 0xa	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x400b0cd	      0xe800000000	                          call 0x400b0d2	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x400b0d2	    0x8b0500000000	            mov eax, dword [0x0400b0d8] 	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x400b0d8	            0x85c0	                           test eax, eax	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x400b0da	            0x7444	                            je 0x400b120	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x400b0dc	      0xbb01000000	                              mov ebx, 1	      9486	syntax.c	FUNCTION_146	IF_1	IF_2
0x400b0e1	            0x89d8	                            mov eax, ebx	      9517	syntax.c	FUNCTION_146
0x400b0e3	              0x5b	                                 pop rbx	      9517	syntax.c	FUNCTION_146
0x400b0e4	              0x5d	                                 pop rbp	      9517	syntax.c	FUNCTION_146
0x400b0e5	            0x415c	                                 pop r12	      9517	syntax.c	FUNCTION_146
0x400b0e7	              0xc3	                                     ret	      9517	syntax.c	FUNCTION_146
0x400b0e8	     0xf1f84000000	                   nop dword [rax + rax]	      9517	syntax.c	FUNCTION_146
0x400b0f0	      0xbf0a000000	                            mov edi, 0xa	      9492	syntax.c	FUNCTION_146	ELSE_1	IF_3	CALL_3
0x400b0f5	      0xe800000000	                          call 0x400b0fa	      9492	syntax.c	FUNCTION_146	ELSE_1	IF_3	CALL_3
0x400b0fa	    0x8b0500000000	            mov eax, dword [0x0400b100] 	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400b100	            0x85c0	                           test eax, eax	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400b102	            0x75d8	                           jne 0x400b0dc	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400b104	    0x8b1500000000	            mov edx, dword [0x0400b10a] 	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400b10a	    0x488b05000000	            mov rax, qword [0x0400b111] 	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x400b111	      0xbb01000000	                              mov ebx, 1	      9480	syntax.c	FUNCTION_146
0x400b116	      0xbf13000000	                           mov edi, 0x13	      9479	syntax.c	FUNCTION_146
0x400b11b	      0xe957ffffff	                           jmp 0x400b077	      9479	syntax.c	FUNCTION_146
0x400b120	          0x4863c5	                         movsxd rax, ebp	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b123	      0xbb01000000	                              mov ebx, 1	      9480	syntax.c	FUNCTION_146
0x400b128	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b12c	        0x488d0450	                  lea rax, [rax + rdx*2]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b130	    0x488b15000000	            mov rdx, qword [0x0400b137] 	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b137	        0x488d04c2	                  lea rax, [rdx + rax*8]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b13b	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b142	      0xe800000000	                          call 0x400b147	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b147	    0x8b1500000000	            mov edx, dword [0x0400b14d] 	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b14d	    0x488b05000000	            mov rax, qword [0x0400b154] 	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x400b154	      0xbf0f000000	                            mov edi, 0xf	      9488	syntax.c	FUNCTION_146	IF_1
0x400b159	      0xe919ffffff	                           jmp 0x400b077	      9488	syntax.c	FUNCTION_146	IF_1
highlight_gui_started	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,1:functions,0:CALL,3	21
0x400d000	    0x8b0d00000000	            mov ecx, dword [0x0400d006] 	      9909	syntax.c	FUNCTION_160	IF_1
0x400d006	              0x53	                                push rbx	      9905	syntax.c	FUNCTION_160
0x400d007	            0x85c9	                           test ecx, ecx	      9909	syntax.c	FUNCTION_160	IF_1
0x400d009	            0x7535	                           jne 0x400d040	      9909	syntax.c	FUNCTION_160	IF_1
0x400d00b	    0x8b1500000000	            mov edx, dword [0x0400d011] 	      9909	syntax.c	FUNCTION_160	IF_1
0x400d011	            0x85d2	                           test edx, edx	      9909	syntax.c	FUNCTION_160	IF_1
0x400d013	            0x752b	                           jne 0x400d040	      9909	syntax.c	FUNCTION_160	IF_1
0x400d015	    0x8b0500000000	            mov eax, dword [0x0400d01b] 	      9912	syntax.c	FUNCTION_160	FOR_1
0x400d01b	            0x31db	                            xor ebx, ebx	      9912	syntax.c	FUNCTION_160	FOR_1
0x400d01d	            0x85c0	                           test eax, eax	      9912	syntax.c	FUNCTION_160	FOR_1
0x400d01f	            0x7e19	                           jle 0x400d03a	      9912	syntax.c	FUNCTION_160	FOR_1
0x400d021	     0xf1f80000000	                         nop dword [rax]	      9912	syntax.c	FUNCTION_160	FOR_1
0x400d028	            0x89df	                            mov edi, ebx	      9913	syntax.c	FUNCTION_160	CALL_2
0x400d02a	          0x83c301	                              add ebx, 1	      9912	syntax.c	FUNCTION_160	FOR_1
0x400d02d	      0xe8fe82ffff	       call sym.gui_do_one_color.isra.14	      9913	syntax.c	FUNCTION_160	CALL_2
0x400d032	    0x391d00000000	            cmp dword [0x0400d038], ebx 	      9912	syntax.c	FUNCTION_160	FOR_1
0x400d038	            0x7fee	                            jg 0x400d028	      9912	syntax.c	FUNCTION_160	FOR_1
0x400d03a	              0x5b	                                 pop rbx	      9916	syntax.c	FUNCTION_160
0x400d03b	      0xe900faffff	               jmp sym.highlight_changed	      9915	syntax.c	FUNCTION_160	CALL_3
0x400d040	      0xe800000000	                          call 0x400d045	      9910	syntax.c	FUNCTION_160	CALL_1
0x400d045	            0xebce	                           jmp 0x400d015	      9910	syntax.c	FUNCTION_160	CALL_1
save_chartab	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,2	19
0x4000310	    0x488b05000000	            mov rax, qword [0x04000317] 	      1014	syntax.c	FUNCTION_6	IF_1
0x4000317	    0x488b0d000000	            mov rcx, qword [0x0400031e] 	      1014	syntax.c	FUNCTION_6	IF_1
0x400031e	    0x483988b00400	           cmp qword [rax + 0x4b0], rcx 	      1014	syntax.c	FUNCTION_6	IF_1
0x4000325	            0x7441	                            je 0x4000368	      1014	syntax.c	FUNCTION_6	IF_1
0x4000327	    0x488b05000000	            mov rax, qword [0x0400032e] 	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x400032e	              0x53	                                push rbx	      1013	syntax.c	FUNCTION_6
0x400032f	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x4000334	    0x488d98a00900	                  lea rbx, [rax + 0x9a0]	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x400033b	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_171	CALL_3
0x400033e	      0xe800000000	                          call 0x4000343	        59	string3.h	FUNCTION_171	CALL_3
0x4000343	    0x488b05000000	            mov rax, qword [0x0400034a] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x400034a	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_171	CALL_3
0x400034d	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x4000352	              0x5b	                                 pop rbx	      1020	syntax.c	FUNCTION_6
0x4000353	        0x488b7010	            mov rsi, qword [rax + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x4000357	    0x4881c68c0400	                          add rsi, 0x48c	        59	string3.h	FUNCTION_171	CALL_3
0x400035e	      0xe900000000	                           jmp 0x4000363	        59	string3.h	FUNCTION_171	CALL_3
0x4000363	       0xf1f440000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_171	CALL_3
0x4000368	            0xf3c3	                                     ret	        59	string3.h	FUNCTION_171	CALL_3
syn_get_stack_item	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,1	18
0x4004450	    0x393d00000000	            cmp dword [0x04004456], edi 	      6623	syntax.c	FUNCTION_105	IF_1
0x4004456	            0x7e18	                           jle 0x4004470	      6623	syntax.c	FUNCTION_105	IF_1
0x4004458	          0x4863ff	                         movsxd rdi, edi	      6631	syntax.c	FUNCTION_105
0x400445b	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      6631	syntax.c	FUNCTION_105
0x400445f	        0x48c1e004	                              shl rax, 4	      6631	syntax.c	FUNCTION_105
0x4004463	    0x480305000000	             add rax, qword [0x0400446a]	      6631	syntax.c	FUNCTION_105
0x400446a	          0x8b4004	                mov eax, dword [rax + 4]	      6631	syntax.c	FUNCTION_105
0x400446d	              0xc3	                                     ret	      6631	syntax.c	FUNCTION_105
0x400446e	            0x6690	                                     nop	      6631	syntax.c	FUNCTION_105
0x4004470	        0x4883ec08	                              sub rsp, 8	      6622	syntax.c	FUNCTION_105
0x4004474	      0xe837beffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x4004479	    0xc70500000000	               mov dword [0x04004483], 0	      1732	syntax.c	FUNCTION_23
0x4004483	    0x48c705000000	               mov qword [0x0400448e], 0	      1733	syntax.c	FUNCTION_23
0x400448e	      0xb8ffffffff	                     mov eax, 0xffffffff	      6629	syntax.c	FUNCTION_105	IF_1
0x4004493	    0xc70500000000	     mov dword [0x0400449d], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400449d	    0xc70500000000	     mov dword [0x040044a7], 0x7fffffff 	      6628	syntax.c	FUNCTION_105	IF_1
0x40044a7	        0x4883c408	                              add rsp, 8	      6632	syntax.c	FUNCTION_105
0x40044ab	              0xc3	                                     ret	      6632	syntax.c	FUNCTION_105
syn_lines_msg	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,0:FOR,0:functions,0:CALL,10	55
0x40015f0	        0x4883ec08	                              sub rsp, 8	      4026	syntax.c	FUNCTION_64
0x40015f4	    0x488b05000000	            mov rax, qword [0x040015fb] 	      4027	syntax.c	FUNCTION_64	IF_1
0x40015fb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4027	syntax.c	FUNCTION_64	IF_1
0x40015ff	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4027	syntax.c	FUNCTION_64	IF_1
0x4001607	     0xf8edb000000	                           jle 0x40016e8	      4027	syntax.c	FUNCTION_64	IF_1
0x400160d	      0xbf00000000	                              mov edi, 0	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x4001612	      0xe800000000	                          call 0x4001617	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x4001617	    0x488b05000000	            mov rax, qword [0x0400161e] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x400161e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x4001622	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x400162a	            0x7e79	                           jle 0x40016a5	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x400162c	      0xba05000000	                              mov edx, 5	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001631	      0xbe00000000	                              mov esi, 0	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001636	            0x31ff	                            xor edi, edi	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001638	      0xe800000000	                          call 0x400163d	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400163d	          0x4889c7	                            mov rdi, rax	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001640	      0xe800000000	                          call 0x4001645	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001645	    0x488b05000000	            mov rax, qword [0x0400164c] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x400164c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x4001650	    0x488bb8a80200	           mov rdi, qword [rax + 0x2a8] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x4001657	      0xe800000000	                          call 0x400165c	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x400165c	    0x488b05000000	            mov rax, qword [0x04001663] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4001663	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4001667	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x400166f	            0x751f	                           jne 0x4001690	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4001671	            0x31ff	                            xor edi, edi	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001673	      0xba05000000	                              mov edx, 5	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001678	      0xbe00000000	                              mov esi, 0	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x400167d	      0xe800000000	                          call 0x4001682	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001682	        0x4883c408	                              add rsp, 8	      4045	syntax.c	FUNCTION_64
0x4001686	          0x4889c7	                            mov rdi, rax	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001689	      0xe900000000	                           jmp 0x400168e	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x400168e	            0x6690	                                     nop	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001690	      0xbf00000000	                              mov edi, 0	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x4001695	      0xe800000000	                          call 0x400169a	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x400169a	    0x488b05000000	            mov rax, qword [0x040016a1] 	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x40016a1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x40016a5	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x40016ad	            0x7ec2	                           jle 0x4001671	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x40016af	      0xba05000000	                              mov edx, 5	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40016b4	      0xbe00000000	                              mov esi, 0	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40016b9	            0x31ff	                            xor edi, edi	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40016bb	      0xe800000000	                          call 0x40016c0	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40016c0	          0x4889c7	                            mov rdi, rax	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40016c3	      0xe800000000	                          call 0x40016c8	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40016c8	    0x488b05000000	            mov rax, qword [0x040016cf] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40016cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40016d3	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40016da	      0xe800000000	                          call 0x40016df	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40016df	            0xeb90	                           jmp 0x4001671	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40016e1	     0xf1f80000000	                         nop dword [rax]	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40016e8	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      4028	syntax.c	FUNCTION_64	IF_1
0x40016f0	     0xf8f17ffffff	                            jg 0x400160d	      4028	syntax.c	FUNCTION_64	IF_1
0x40016f6	        0x4883c408	                              add rsp, 8	      4045	syntax.c	FUNCTION_64
0x40016fa	              0xc3	                                     ret	      4045	syntax.c	FUNCTION_64
syn_id2name	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,0	14
0x4006370	            0x85ff	                           test edi, edi	      9680	syntax.c	FUNCTION_151	IF_1
0x4006372	      0xb800000000	                              mov eax, 0	      9681	syntax.c	FUNCTION_151	IF_1
0x4006377	            0x7e27	                           jle 0x40063a0	      9680	syntax.c	FUNCTION_151	IF_1
0x4006379	    0x3b3d00000000	            cmp edi, dword [0x0400637f] 	      9680	syntax.c	FUNCTION_151	IF_1
0x400637f	            0x7f1f	                            jg 0x40063a0	      9680	syntax.c	FUNCTION_151	IF_1
0x4006381	          0x4863ff	                         movsxd rdi, edi	      9682	syntax.c	FUNCTION_151
0x4006384	    0x488b15000000	            mov rdx, qword [0x0400638b] 	      9682	syntax.c	FUNCTION_151
0x400638b	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9682	syntax.c	FUNCTION_151
0x400638f	        0x488d0447	                  lea rax, [rdi + rax*2]	      9682	syntax.c	FUNCTION_151
0x4006393	        0x488d04c2	                  lea rax, [rdx + rax*8]	      9682	syntax.c	FUNCTION_151
0x4006397	    0x488b8068ffff	             mov rax, qword [rax - 0x98]	      9682	syntax.c	FUNCTION_151
0x400639e	              0xc3	                                     ret	      9682	syntax.c	FUNCTION_151
0x400639f	              0x90	                                     nop	      9682	syntax.c	FUNCTION_151
0x40063a0	            0xf3c3	                                     ret	      9683	syntax.c	FUNCTION_151
hl_combine_attr	SWITCH,0:WHILE,0:DO,0:IF,32:ELSE,7:FOR,0:functions,0:CALL,14	280
0x40055b0	        0x4883ec38	                           sub rsp, 0x38	      9018	syntax.c	FUNCTION_136
0x40055b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      9018	syntax.c	FUNCTION_136
0x40055bd	      0x4889442428	             mov qword [rsp + 0x28], rax	      9018	syntax.c	FUNCTION_136
0x40055c2	            0x31c0	                            xor eax, eax	      9018	syntax.c	FUNCTION_136
0x40055c4	            0x85ff	                           test edi, edi	      9023	syntax.c	FUNCTION_136	IF_1
0x40055c6	            0x89f0	                            mov eax, esi	      9023	syntax.c	FUNCTION_136	IF_1
0x40055c8	            0x7417	                            je 0x40055e1	      9023	syntax.c	FUNCTION_136	IF_1
0x40055ca	    0x81ffff000000	                           cmp edi, 0xff	      9025	syntax.c	FUNCTION_136	IF_2
0x40055d0	            0x7f2e	                            jg 0x4005600	      9025	syntax.c	FUNCTION_136	IF_2
0x40055d2	    0x81feff000000	                           cmp esi, 0xff	      9025	syntax.c	FUNCTION_136	IF_2
0x40055d8	            0x7f26	                            jg 0x4005600	      9025	syntax.c	FUNCTION_136	IF_2
0x40055da	            0xa840	                           test al, 0x40	      9026	syntax.c	FUNCTION_136	IF_2
0x40055dc	           0xf45fe	                         cmovne edi, esi	      9026	syntax.c	FUNCTION_136	IF_2
0x40055df	             0x9f8	                             or eax, edi	      9026	syntax.c	FUNCTION_136	IF_2
0x40055e1	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      9152	syntax.c	FUNCTION_136
0x40055e6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9152	syntax.c	FUNCTION_136
0x40055ef	     0xf85e3040000	                           jne 0x4005ad8	      9152	syntax.c	FUNCTION_136
0x40055f5	        0x4883c438	                           add rsp, 0x38	      9152	syntax.c	FUNCTION_136
0x40055f9	              0xc3	                                     ret	      9152	syntax.c	FUNCTION_136
0x40055fa	    0x660f1f440000	                    nop word [rax + rax]	      9152	syntax.c	FUNCTION_136
0x4005600	    0x8b1500000000	            mov edx, dword [0x04005606] 	      9028	syntax.c	FUNCTION_136	IF_3
0x4005606	            0x85d2	                           test edx, edx	      9028	syntax.c	FUNCTION_136	IF_3
0x4005608	     0xf858a000000	                           jne 0x4005698	      9028	syntax.c	FUNCTION_136	IF_3
0x400560e	    0x833d00000000	               cmp dword [0x04005615], 1	      9071	syntax.c	FUNCTION_136	IF_14
0x4005615	     0xf8e15030000	                           jle 0x4005930	      9071	syntax.c	FUNCTION_136	IF_14
0x400561b	    0x81ffff000000	                           cmp edi, 0xff	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x4005621	     0xf8fe1010000	                            jg 0x4005808	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x4005627	    0x81ffff000000	                           cmp edi, 0xff	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x400562d	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005635	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400563e	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005647	    0x48c744241899	mov qword [rsp + 0x18], 0xffffffffffffd499	      9081	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x4005650	    0x48c744241099	mov qword [rsp + 0x10], 0xffffffffffffd499	      9082	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x4005659	     0xf8ec5020000	                           jle 0x4005924	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x400565f	              0x90	                                     nop	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x4005660	    0x81feff000000	                           cmp esi, 0xff	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x4005666	     0xf8ffc010000	                            jg 0x4005868	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x400566c	        0x40f6c640	                          test sil, 0x40	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4005670	     0xf849a020000	                            je 0x4005910	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4005676	            0x89f2	                            mov edx, esi	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4005678	            0x89f0	                            mov eax, esi	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400567a	             0x9d0	                             or eax, edx	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400567c	        0x66890424	                      mov word [rsp], ax	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4005680	          0x4889e6	                            mov rsi, rsp	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4005683	      0xbf00000000	                              mov edi, 0	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4005688	      0xe8c3f6ffff	                 call sym.get_attr_entry	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x400568d	      0xe94fffffff	                           jmp 0x40055e1	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4005692	    0x660f1f440000	                    nop word [rax + rax]	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x4005698	    0x81ffff000000	                           cmp edi, 0xff	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x400569e	            0x7f78	                            jg 0x4005718	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x40056a0	    0x81ffff000000	                           cmp edi, 0xff	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x40056a6	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x40056ae	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x40056b7	    0x48c744240899	 mov qword [rsp + 8], 0xffffffffffffd499	      9037	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x40056c0	    0x48c744241099	mov qword [rsp + 0x10], 0xffffffffffffd499	      9038	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x40056c9	    0x48c744241899	mov qword [rsp + 0x18], 0xffffffffffffd499	      9039	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x40056d2	     0xf8e43020000	                           jle 0x400591b	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x40056d8	     0xf1f84000000	                   nop dword [rax + rax]	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x40056e0	    0x81feff000000	                           cmp esi, 0xff	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x40056e6	     0xf8f8c000000	                            jg 0x4005778	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x40056ec	        0x40f6c640	                          test sil, 0x40	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40056f0	     0xf840a020000	                            je 0x4005900	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40056f6	            0x89f2	                            mov edx, esi	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40056f8	            0x89f0	                            mov eax, esi	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40056fa	             0x9d0	                             or eax, edx	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x40056fc	        0x66890424	                      mov word [rsp], ax	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x4005700	          0x4889e6	                            mov rsi, rsp	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4005703	      0xbf00000000	                              mov edi, 0	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4005708	      0xe843f6ffff	                 call sym.get_attr_entry	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x400570d	      0xe9cffeffff	                           jmp 0x40055e1	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4005712	    0x660f1f440000	                    nop word [rax + rax]	      9067	syntax.c	FUNCTION_136	IF_3	CALL_4
0x4005718	    0x8d8700ffffff	                  lea eax, [rdi - 0x100]	      9160	syntax.c	FUNCTION_137
0x400571e	    0x390500000000	            cmp dword [0x04005724], eax 	      9161	syntax.c	FUNCTION_137	IF_1
0x4005724	     0xf8e76ffffff	                           jle 0x40056a0	      9161	syntax.c	FUNCTION_137	IF_1
0x400572a	            0x4898	                                    cdqe	      9163	syntax.c	FUNCTION_137
0x400572c	        0x488d1480	                  lea rdx, [rax + rax*4]	      9163	syntax.c	FUNCTION_137
0x4005730	    0x488b05000000	            mov rax, qword [0x04005737] 	      9163	syntax.c	FUNCTION_137
0x4005737	        0x488d14d0	                  lea rdx, [rax + rdx*8]	      9163	syntax.c	FUNCTION_137
0x400573b	          0x4885d2	                           test rdx, rdx	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x400573e	     0xf845cffffff	                            je 0x40056a0	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x4005744	          0x488b02	                    mov rax, qword [rdx]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4005747	        0x48890424	                    mov qword [rsp], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400574b	        0x488b4208	                mov rax, qword [rdx + 8]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400574f	      0x4889442408	                mov qword [rsp + 8], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4005754	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4005758	      0x4889442410	             mov qword [rsp + 0x10], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400575d	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4005761	      0x4889442418	             mov qword [rsp + 0x18], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4005766	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400576a	      0x4889442420	             mov qword [rsp + 0x20], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400576f	      0xe96cffffff	                           jmp 0x40056e0	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4005774	         0xf1f4000	                         nop dword [rax]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x4005778	    0x8d8600ffffff	                  lea eax, [rsi - 0x100]	      9160	syntax.c	FUNCTION_137
0x400577e	    0x3b0500000000	            cmp eax, dword [0x04005784] 	      9161	syntax.c	FUNCTION_137	IF_1
0x4005784	     0xf8d76ffffff	                           jge 0x4005700	      9161	syntax.c	FUNCTION_137	IF_1
0x400578a	            0x4898	                                    cdqe	      9163	syntax.c	FUNCTION_137
0x400578c	        0x488d1480	                  lea rdx, [rax + rax*4]	      9163	syntax.c	FUNCTION_137
0x4005790	    0x488b05000000	            mov rax, qword [0x04005797] 	      9163	syntax.c	FUNCTION_137
0x4005797	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9163	syntax.c	FUNCTION_137
0x400579b	          0x4885c0	                           test rax, rax	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400579e	     0xf845cffffff	                            je 0x4005700	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x40057a4	           0xfb710	                   movzx edx, word [rax]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x40057a7	          0xf6c240	                           test dl, 0x40	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x40057aa	            0x89d1	                            mov ecx, edx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x40057ac	      0x660f440c24	                    cmove cx, word [rsp]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x40057b1	             0x9ca	                             or edx, ecx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x40057b3	        0x66891424	                      mov word [rsp], dx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x40057b7	        0x488b5008	                mov rdx, qword [rax + 8]	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x40057bb	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x40057c2	            0x7405	                            je 0x40057c9	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x40057c4	      0x4889542408	                mov qword [rsp + 8], rdx	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x40057c9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x40057cd	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x40057d4	            0x7405	                            je 0x40057db	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x40057d6	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x40057db	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x40057df	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x40057e6	            0x7405	                            je 0x40057ed	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x40057e8	      0x4889542418	             mov qword [rsp + 0x18], rdx	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x40057ed	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x40057f1	          0x4885c0	                           test rax, rax	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x40057f4	     0xf8406ffffff	                            je 0x4005700	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x40057fa	      0x4889442420	             mov qword [rsp + 0x20], rax	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x40057ff	      0xe9fcfeffff	                           jmp 0x4005700	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4005804	         0xf1f4000	                         nop dword [rax]	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x4005808	    0x8d8700ffffff	                  lea eax, [rdi - 0x100]	      9204	syntax.c	FUNCTION_140
0x400580e	    0x3b0500000000	            cmp eax, dword [0x04005814] 	      9205	syntax.c	FUNCTION_140	IF_1
0x4005814	     0xf8d0dfeffff	                           jge 0x4005627	      9205	syntax.c	FUNCTION_140	IF_1
0x400581a	            0x4898	                                    cdqe	      9207	syntax.c	FUNCTION_140
0x400581c	        0x488d1480	                  lea rdx, [rax + rax*4]	      9207	syntax.c	FUNCTION_140
0x4005820	    0x488b05000000	            mov rax, qword [0x04005827] 	      9207	syntax.c	FUNCTION_140
0x4005827	        0x488d14d0	                  lea rdx, [rax + rdx*8]	      9207	syntax.c	FUNCTION_140
0x400582b	          0x4885d2	                           test rdx, rdx	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x400582e	     0xf84f3fdffff	                            je 0x4005627	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x4005834	          0x488b02	                    mov rax, qword [rdx]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4005837	        0x48890424	                    mov qword [rsp], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400583b	        0x488b4208	                mov rax, qword [rdx + 8]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400583f	      0x4889442408	                mov qword [rsp + 8], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4005844	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4005848	      0x4889442410	             mov qword [rsp + 0x10], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400584d	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4005851	      0x4889442418	             mov qword [rsp + 0x18], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4005856	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400585a	      0x4889442420	             mov qword [rsp + 0x20], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400585f	      0xe9fcfdffff	                           jmp 0x4005660	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4005864	         0xf1f4000	                         nop dword [rax]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x4005868	    0x8d8600ffffff	                  lea eax, [rsi - 0x100]	      9204	syntax.c	FUNCTION_140
0x400586e	    0x3b0500000000	            cmp eax, dword [0x04005874] 	      9205	syntax.c	FUNCTION_140	IF_1
0x4005874	     0xf8d06feffff	                           jge 0x4005680	      9205	syntax.c	FUNCTION_140	IF_1
0x400587a	            0x4898	                                    cdqe	      9207	syntax.c	FUNCTION_140
0x400587c	        0x488d1480	                  lea rdx, [rax + rax*4]	      9207	syntax.c	FUNCTION_140
0x4005880	    0x488b05000000	            mov rax, qword [0x04005887] 	      9207	syntax.c	FUNCTION_140
0x4005887	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9207	syntax.c	FUNCTION_140
0x400588b	          0x4885c0	                           test rax, rax	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400588e	     0xf84ecfdffff	                            je 0x4005680	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x4005894	           0xfb710	                   movzx edx, word [rax]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x4005897	          0xf6c240	                           test dl, 0x40	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400589a	            0x89d1	                            mov ecx, edx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400589c	      0x660f440c24	                    cmove cx, word [rsp]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40058a1	             0x9ca	                             or edx, ecx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40058a3	        0x66891424	                      mov word [rsp], dx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x40058a7	         0xfb75008	               movzx edx, word [rax + 8]	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40058ab	          0x6685d2	                             test dx, dx	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40058ae	            0x7405	                            je 0x40058b5	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40058b0	      0x6689542408	                  mov word [rsp + 8], dx	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x40058b5	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40058b9	          0x6685d2	                             test dx, dx	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40058bc	            0x7405	                            je 0x40058c3	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40058be	      0x668954240a	                mov word [rsp + 0xa], dx	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x40058c3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x40058c7	    0x488d8a672b00	                 lea rcx, [rdx + 0x2b67]	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x40058ce	        0x4883f901	                              cmp rcx, 1	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x40058d2	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x40058d6	     0xf86e4000000	                           jbe 0x40059c0	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x40058dc	    0x4881f999d4ff	             cmp rcx, 0xffffffffffffd499	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x40058e3	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x40058e8	     0xf8492fdffff	                            je 0x4005680	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x40058ee	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x40058f3	      0xe988fdffff	                           jmp 0x4005680	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x40058f8	     0xf1f84000000	                   nop dword [rax + rax]	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x4005900	         0xfb71424	                   movzx edx, word [rsp]	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x4005904	            0x89f0	                            mov eax, esi	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x4005906	      0xe9effdffff	                           jmp 0x40056fa	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400590b	       0xf1f440000	                   nop dword [rax + rax]	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x4005910	         0xfb70424	                   movzx eax, word [rsp]	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4005914	            0x89f2	                            mov edx, esi	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x4005916	      0xe95ffdffff	                           jmp 0x400567a	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400591b	        0x66893c24	                      mov word [rsp], di	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x400591f	      0xe9bcfdffff	                           jmp 0x40056e0	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x4005924	        0x66893c24	                      mov word [rsp], di	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x4005928	      0xe933fdffff	                           jmp 0x4005660	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x400592d	           0xf1f00	                         nop dword [rax]	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x4005930	    0x8b0500000000	            mov eax, dword [0x04005936] 	      9071	syntax.c	FUNCTION_136	IF_14
0x4005936	            0x85c0	                           test eax, eax	      9071	syntax.c	FUNCTION_136	IF_14
0x4005938	     0xf85ddfcffff	                           jne 0x400561b	      9071	syntax.c	FUNCTION_136	IF_14
0x400593e	    0x81ffff000000	                           cmp edi, 0xff	      9125	syntax.c	FUNCTION_136	IF_27
0x4005944	     0xf8f9e000000	                            jg 0x40059e8	      9125	syntax.c	FUNCTION_136	IF_27
0x400594a	    0x81ffff000000	                           cmp edi, 0xff	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x4005950	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005958	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005961	    0x48c744241000	               mov qword [rsp + 0x10], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400596a	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005973	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400597c	            0x7f0a	                            jg 0x4005988	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x400597e	        0x66893c24	                      mov word [rsp], di	      9133	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x4005982	    0x660f1f440000	                    nop word [rax + rax]	      9133	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x4005988	    0x81feff000000	                           cmp esi, 0xff	      9136	syntax.c	FUNCTION_136	IF_30
0x400598e	     0xf8fb4000000	                            jg 0x4005a48	      9136	syntax.c	FUNCTION_136	IF_30
0x4005994	        0x40f6c640	                          test sil, 0x40	      9137	syntax.c	FUNCTION_136	IF_30
0x4005998	     0xf8508010000	                           jne 0x4005aa6	      9137	syntax.c	FUNCTION_136	IF_30
0x400599e	         0xfb70424	                   movzx eax, word [rsp]	      9137	syntax.c	FUNCTION_136	IF_30
0x40059a2	            0x89f2	                            mov edx, esi	      9137	syntax.c	FUNCTION_136	IF_30
0x40059a4	             0x9d0	                             or eax, edx	      9137	syntax.c	FUNCTION_136	IF_30
0x40059a6	        0x66890424	                      mov word [rsp], ax	      9137	syntax.c	FUNCTION_136	IF_30
0x40059aa	          0x4889e6	                            mov rsi, rsp	      9151	syntax.c	FUNCTION_136	CALL_14
0x40059ad	      0xbf00000000	                              mov edi, 0	      9151	syntax.c	FUNCTION_136	CALL_14
0x40059b2	      0xe899f3ffff	                 call sym.get_attr_entry	      9151	syntax.c	FUNCTION_136	CALL_14
0x40059b7	      0xe925fcffff	                           jmp 0x40055e1	      9151	syntax.c	FUNCTION_136	CALL_14
0x40059bc	         0xf1f4000	                         nop dword [rax]	      9151	syntax.c	FUNCTION_136	CALL_14
0x40059c0	    0x488db1672b00	                 lea rsi, [rcx + 0x2b67]	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x40059c7	        0x4883fe01	                              cmp rsi, 1	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x40059cb	     0xf86de000000	                           jbe 0x4005aaf	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x40059d1	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x40059d8	     0xf8410ffffff	                            je 0x40058ee	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x40059de	      0xe9f9feffff	                           jmp 0x40058dc	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x40059e3	       0xf1f440000	                   nop dword [rax + rax]	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x40059e8	    0x8d8700ffffff	                  lea eax, [rdi - 0x100]	      9195	syntax.c	FUNCTION_139
0x40059ee	    0x3b0500000000	            cmp eax, dword [0x040059f4] 	      9196	syntax.c	FUNCTION_139	IF_1
0x40059f4	     0xf8d50ffffff	                           jge 0x400594a	      9196	syntax.c	FUNCTION_139	IF_1
0x40059fa	            0x4898	                                    cdqe	      9198	syntax.c	FUNCTION_139
0x40059fc	        0x488d1480	                  lea rdx, [rax + rax*4]	      9198	syntax.c	FUNCTION_139
0x4005a00	    0x488b05000000	            mov rax, qword [0x04005a07] 	      9198	syntax.c	FUNCTION_139
0x4005a07	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9198	syntax.c	FUNCTION_139
0x4005a0b	          0x4885c0	                           test rax, rax	      9127	syntax.c	FUNCTION_136	IF_28
0x4005a0e	     0xf8436ffffff	                            je 0x400594a	      9127	syntax.c	FUNCTION_136	IF_28
0x4005a14	          0x488b10	                    mov rdx, qword [rax]	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a17	        0x48891424	                    mov qword [rsp], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a1b	        0x488b5008	                mov rdx, qword [rax + 8]	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a1f	      0x4889542408	                mov qword [rsp + 8], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a24	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a28	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a2d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a31	      0x4889542418	             mov qword [rsp + 0x18], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a36	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a3a	      0x4889442420	             mov qword [rsp + 0x20], rax	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a3f	      0xe944ffffff	                           jmp 0x4005988	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a44	         0xf1f4000	                         nop dword [rax]	      9128	syntax.c	FUNCTION_136	IF_28
0x4005a48	    0x8d8600ffffff	                  lea eax, [rsi - 0x100]	      9195	syntax.c	FUNCTION_139
0x4005a4e	    0x3b0500000000	            cmp eax, dword [0x04005a54] 	      9196	syntax.c	FUNCTION_139	IF_1
0x4005a54	     0xf8d50ffffff	                           jge 0x40059aa	      9196	syntax.c	FUNCTION_139	IF_1
0x4005a5a	            0x4898	                                    cdqe	      9198	syntax.c	FUNCTION_139
0x4005a5c	        0x488d1480	                  lea rdx, [rax + rax*4]	      9198	syntax.c	FUNCTION_139
0x4005a60	    0x488b05000000	            mov rax, qword [0x04005a67] 	      9198	syntax.c	FUNCTION_139
0x4005a67	        0x488d14d0	                  lea rdx, [rax + rdx*8]	      9198	syntax.c	FUNCTION_139
0x4005a6b	          0x4885d2	                           test rdx, rdx	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005a6e	     0xf8436ffffff	                            je 0x40059aa	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005a74	           0xfb702	                   movzx eax, word [rdx]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005a77	            0xa840	                           test al, 0x40	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005a79	            0x89c1	                            mov ecx, eax	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005a7b	      0x660f440c24	                    cmove cx, word [rsp]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005a80	             0x9c8	                             or eax, ecx	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005a82	        0x66890424	                      mov word [rsp], ax	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x4005a86	        0x488b4208	                mov rax, qword [rdx + 8]	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005a8a	          0x4885c0	                           test rax, rax	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005a8d	     0xf8417ffffff	                            je 0x40059aa	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005a93	      0x4889442408	                mov qword [rsp + 8], rax	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005a98	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005a9c	      0x4889442410	             mov qword [rsp + 0x10], rax	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005aa1	      0xe904ffffff	                           jmp 0x40059aa	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x4005aa6	            0x89f2	                            mov edx, esi	      9137	syntax.c	FUNCTION_136	IF_30
0x4005aa8	            0x89f0	                            mov eax, esi	      9137	syntax.c	FUNCTION_136	IF_30
0x4005aaa	      0xe9f5feffff	                           jmp 0x40059a4	      9137	syntax.c	FUNCTION_136	IF_30
0x4005aaf	      0x6683780800	                   cmp word [rax + 8], 0	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4005ab4	            0x7409	                            je 0x4005abf	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4005ab6	    0x48c74424109a	mov qword [rsp + 0x10], 0xffffffffffffd49a	      9108	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x4005abf	      0x6683780a00	                 cmp word [rax + 0xa], 0	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4005ac4	     0xf84b6fbffff	                            je 0x4005680	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4005aca	    0x48c74424189a	mov qword [rsp + 0x18], 0xffffffffffffd49a	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4005ad3	      0xe9a8fbffff	                           jmp 0x4005680	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x4005ad8	      0xe800000000	                          call 0x4005add	      9152	syntax.c	FUNCTION_136
syn_regexec	SWITCH,0:WHILE,0:DO,0:IF,6:ELSE,0:FOR,0:functions,0:CALL,5	94
0x40003c0	            0x4155	                                push r13	      3318	syntax.c	FUNCTION_43
0x40003c2	            0x4154	                                push r12	      3318	syntax.c	FUNCTION_43
0x40003c4	          0x4189d0	                            mov r8d, edx	      3318	syntax.c	FUNCTION_43
0x40003c7	              0x55	                                push rbp	      3318	syntax.c	FUNCTION_43
0x40003c8	              0x53	                                push rbx	      3318	syntax.c	FUNCTION_43
0x40003c9	          0x4889f5	                            mov rbp, rsi	      3318	syntax.c	FUNCTION_43
0x40003cc	          0x4889fb	                            mov rbx, rdi	      3318	syntax.c	FUNCTION_43
0x40003cf	          0x4989cc	                            mov r12, rcx	      3318	syntax.c	FUNCTION_43
0x40003d2	        0x4883ec48	                           sub rsp, 0x48	      3318	syntax.c	FUNCTION_43
0x40003d6	    0x448b0d000000	            mov r9d, dword [0x040003dd] 	      3326	syntax.c	FUNCTION_43	IF_1
0x40003dd	    0x64488b042528	                mov rax, qword fs:[0x28]	      3318	syntax.c	FUNCTION_43
0x40003e6	      0x4889442438	             mov qword [rsp + 0x38], rax	      3318	syntax.c	FUNCTION_43
0x40003eb	            0x31c0	                            xor eax, eax	      3318	syntax.c	FUNCTION_43
0x40003ed	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3321	syntax.c	FUNCTION_43
0x40003f5	          0x4585c9	                           test r9d, r9d	      3326	syntax.c	FUNCTION_43	IF_1
0x40003f8	     0xf8502010000	                           jne 0x4000500	      3326	syntax.c	FUNCTION_43	IF_1
0x40003fe	    0x488b05000000	            mov rax, qword [0x04000405] 	      3330	syntax.c	FUNCTION_43
0x4000405	        0x4883ec08	                              sub rsp, 8	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000409	    0x488b35000000	            mov rsi, qword [0x04000410] 	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000410	    0x4c8b0d000000	              mov r9, qword [0x04000417]	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000417	          0x4889df	                            mov rdi, rbx	      3331	syntax.c	FUNCTION_43	CALL_2
0x400041a	          0x4889e9	                            mov rcx, rbp	      3331	syntax.c	FUNCTION_43	CALL_2
0x400041d	    0x488b90981500	          mov rdx, qword [rax + 0x1598] 	      3330	syntax.c	FUNCTION_43
0x4000424	    0x89934c010000	            mov dword [rbx + 0x14c], edx	      3330	syntax.c	FUNCTION_43
0x400042a	      0x488d542424	                   lea rdx, [rsp + 0x24]	      3331	syntax.c	FUNCTION_43	CALL_2
0x400042f	              0x52	                                push rdx	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000430	          0x4889c2	                            mov rdx, rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000433	      0xe800000000	                          call 0x4000438	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000438	    0x448b05000000	            mov r8d, dword [0x0400043f] 	      3340	syntax.c	FUNCTION_43	IF_2
0x400043f	          0x4989c5	                            mov r13, rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x4000442	              0x5e	                                 pop rsi	      3340	syntax.c	FUNCTION_43	IF_2
0x4000443	              0x5f	                                 pop rdi	      3340	syntax.c	FUNCTION_43	IF_2
0x4000444	          0x4585c0	                           test r8d, r8d	      3340	syntax.c	FUNCTION_43	IF_2
0x4000447	            0x7547	                           jne 0x4000490	      3340	syntax.c	FUNCTION_43	IF_2
0x4000449	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      3352	syntax.c	FUNCTION_43	IF_5
0x400044d	            0x85d2	                           test edx, edx	      3352	syntax.c	FUNCTION_43	IF_5
0x400044f	     0xf857e000000	                           jne 0x40004d3	      3352	syntax.c	FUNCTION_43	IF_5
0x4000455	          0x4585ed	                         test r13d, r13d	      3356	syntax.c	FUNCTION_43	IF_6
0x4000458	     0xf8e93000000	                           jle 0x40004f1	      3356	syntax.c	FUNCTION_43	IF_6
0x400045e	        0x48016b08	                add qword [rbx + 8], rbp	      3358	syntax.c	FUNCTION_43	IF_6
0x4000462	    0x4801aba80000	            add qword [rbx + 0xa8], rbp 	      3359	syntax.c	FUNCTION_43	IF_6
0x4000469	      0xb801000000	                              mov eax, 1	      3360	syntax.c	FUNCTION_43	IF_6
0x400046e	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3363	syntax.c	FUNCTION_43
0x4000473	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3363	syntax.c	FUNCTION_43
0x400047c	     0xf85c7000000	                           jne 0x4000549	      3363	syntax.c	FUNCTION_43
0x4000482	        0x4883c448	                           add rsp, 0x48	      3363	syntax.c	FUNCTION_43
0x4000486	              0x5b	                                 pop rbx	      3363	syntax.c	FUNCTION_43
0x4000487	              0x5d	                                 pop rbp	      3363	syntax.c	FUNCTION_43
0x4000488	            0x415c	                                 pop r12	      3363	syntax.c	FUNCTION_43
0x400048a	            0x415d	                                 pop r13	      3363	syntax.c	FUNCTION_43
0x400048c	              0xc3	                                     ret	      3363	syntax.c	FUNCTION_43
0x400048d	           0xf1f00	                         nop dword [rax]	      3363	syntax.c	FUNCTION_43
0x4000490	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x4000495	      0xe800000000	                          call 0x400049a	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x400049a	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x400049f	          0x4c89e7	                            mov rdi, r12	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x40004a2	      0xe800000000	                          call 0x40004a7	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x40004a7	      0x498d742410	                   lea rsi, [r12 + 0x10]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40004ac	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40004b1	      0xe800000000	                          call 0x40004b6	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40004b6	            0x85c0	                           test eax, eax	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40004b8	            0x7876	                            js 0x4000530	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40004ba	    0x498344242001	               add qword [r12 + 0x20], 1	      3346	syntax.c	FUNCTION_43	IF_2
0x40004c0	          0x4585ed	                         test r13d, r13d	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x40004c3	            0x7e5b	                           jle 0x4000520	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x40004c5	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      3352	syntax.c	FUNCTION_43	IF_5
0x40004c9	    0x498344242801	               add qword [r12 + 0x28], 1	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x40004cf	            0x85c9	                           test ecx, ecx	      3352	syntax.c	FUNCTION_43	IF_5
0x40004d1	            0x748b	                            je 0x400045e	      3352	syntax.c	FUNCTION_43	IF_5
0x40004d3	    0x488b05000000	            mov rax, qword [0x040004da] 	      3353	syntax.c	FUNCTION_43	IF_5
0x40004da	          0x4585ed	                         test r13d, r13d	      3356	syntax.c	FUNCTION_43	IF_6
0x40004dd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3353	syntax.c	FUNCTION_43	IF_5
0x40004e1	    0xc78054020000	              mov dword [rax + 0x254], 1	      3353	syntax.c	FUNCTION_43	IF_5
0x40004eb	     0xf8f6dffffff	                            jg 0x400045e	      3356	syntax.c	FUNCTION_43	IF_6
0x40004f1	            0x31c0	                            xor eax, eax	      3362	syntax.c	FUNCTION_43
0x40004f3	      0xe976ffffff	                           jmp 0x400046e	      3362	syntax.c	FUNCTION_43
0x40004f8	     0xf1f84000000	                   nop dword [rax + rax]	      3362	syntax.c	FUNCTION_43
0x4000500	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3327	syntax.c	FUNCTION_43	CALL_1
0x4000505	        0x8954240c	              mov dword [rsp + 0xc], edx	      3327	syntax.c	FUNCTION_43	CALL_1
0x4000509	      0xe800000000	                          call 0x400050e	      3327	syntax.c	FUNCTION_43	CALL_1
0x400050e	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3327	syntax.c	FUNCTION_43	CALL_1
0x4000513	      0xe9e6feffff	                           jmp 0x40003fe	      3327	syntax.c	FUNCTION_43	CALL_1
0x4000518	     0xf1f84000000	                   nop dword [rax + rax]	      3327	syntax.c	FUNCTION_43	CALL_1
0x4000520	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3352	syntax.c	FUNCTION_43	IF_5
0x4000524	            0x85c0	                           test eax, eax	      3352	syntax.c	FUNCTION_43	IF_5
0x4000526	            0x75ab	                           jne 0x40004d3	      3352	syntax.c	FUNCTION_43	IF_5
0x4000528	            0xebc7	                           jmp 0x40004f1	      3352	syntax.c	FUNCTION_43	IF_5
0x400052a	    0x660f1f440000	                    nop word [rax + rax]	      3352	syntax.c	FUNCTION_43	IF_5
0x4000530	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4000535	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400053a	      0x4989442410	             mov qword [r12 + 0x10], rax	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400053f	      0x4989542418	             mov qword [r12 + 0x18], rdx	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4000544	      0xe971ffffff	                           jmp 0x40004ba	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4000549	      0xe800000000	                          call 0x400054e	      3363	syntax.c	FUNCTION_43
syn_stack_apply_changes_block	SWITCH,0:WHILE,0:DO,0:IF,7:ELSE,2:FOR,1:functions,0:CALL,1	77
0x4002380	    0x4883bf100300	              cmp qword [rdi + 0x310], 0	      1326	syntax.c	FUNCTION_15	IF_1
0x4002388	     0xf84a8000000	                            je 0x4002436	      1326	syntax.c	FUNCTION_15	IF_1
0x400238e	            0x4156	                                push r14	      1322	syntax.c	FUNCTION_15
0x4002390	            0x4155	                                push r13	      1322	syntax.c	FUNCTION_15
0x4002392	            0x4154	                                push r12	      1322	syntax.c	FUNCTION_15
0x4002394	              0x55	                                push rbp	      1322	syntax.c	FUNCTION_15
0x4002395	              0x53	                                push rbx	      1322	syntax.c	FUNCTION_15
0x4002396	    0x488b9f200300	           mov rbx, qword [rdi + 0x320] 	      1330	syntax.c	FUNCTION_15	FOR_1
0x400239d	          0x4885db	                           test rbx, rbx	      1330	syntax.c	FUNCTION_15	FOR_1
0x40023a0	     0xf8488000000	                            je 0x400242e	      1330	syntax.c	FUNCTION_15	FOR_1
0x40023a6	          0x4989f4	                            mov r12, rsi	      1330	syntax.c	FUNCTION_15	FOR_1
0x40023a9	          0x4889fd	                            mov rbp, rdi	      1330	syntax.c	FUNCTION_15	FOR_1
0x40023ac	          0x4531ed	                          xor r13d, r13d	      1330	syntax.c	FUNCTION_15	FOR_1
0x40023af	            0xeb57	                           jmp 0x4002408	      1330	syntax.c	FUNCTION_15	FOR_1
0x40023b1	     0xf1f80000000	                         nop dword [rax]	      1330	syntax.c	FUNCTION_15	FOR_1
0x40023b8	    0x498bbc242001	           mov rdi, qword [r12 + 0x120] 	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40023c0	    0x498b8c241801	           mov rcx, qword [r12 + 0x118] 	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x40023c8	          0x4801f8	                            add rax, rdi	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x40023cb	          0x4839c8	                            cmp rax, rcx	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x40023ce	            0x7f70	                            jg 0x4002440	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x40023d0	          0x4d85ed	                           test r13, r13	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x40023d3	          0x4c8b33	                    mov r14, qword [rbx]	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x40023d6	     0xf84c4000000	                            je 0x40024a0	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x40023dc	        0x4d897500	                    mov qword [r13], r14	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x40023e0	          0x4889df	                            mov rdi, rbx	      1439	syntax.c	FUNCTION_17	CALL_1
0x40023e3	      0xe858fdffff	                call sym.clear_syn_state	      1439	syntax.c	FUNCTION_17	CALL_1
0x40023e8	    0x488b85280300	           mov rax, qword [rbp + 0x328] 	      1440	syntax.c	FUNCTION_17
0x40023ef	          0x488903	                    mov qword [rbx], rax	      1440	syntax.c	FUNCTION_17
0x40023f2	    0x48899d280300	           mov qword [rbp + 0x328], rbx 	      1441	syntax.c	FUNCTION_17
0x40023f9	          0x4c89f3	                            mov rbx, r14	      1344	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x40023fc	    0x838530030000	              add dword [rbp + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x4002403	          0x4885db	                           test rbx, rbx	      1330	syntax.c	FUNCTION_15	FOR_1
0x4002406	            0x7426	                            je 0x400242e	      1330	syntax.c	FUNCTION_15	FOR_1
0x4002408	        0x488b4308	                mov rax, qword [rbx + 8]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400240c	    0x498b94241001	           mov rdx, qword [r12 + 0x110] 	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4002414	          0x4889c1	                            mov rcx, rax	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4002417	    0x48038db80200	            add rcx, qword [rbp + 0x2b8]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400241e	          0x4839d1	                            cmp rcx, rdx	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4002421	            0x7f95	                            jg 0x40023b8	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4002423	          0x4989dd	                            mov r13, rbx	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002426	          0x488b1b	                    mov rbx, qword [rbx]	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002429	          0x4885db	                           test rbx, rbx	      1330	syntax.c	FUNCTION_15	FOR_1
0x400242c	            0x75da	                           jne 0x4002408	      1330	syntax.c	FUNCTION_15	FOR_1
0x400242e	              0x5b	                                 pop rbx	      1366	syntax.c	FUNCTION_15
0x400242f	              0x5d	                                 pop rbp	      1366	syntax.c	FUNCTION_15
0x4002430	            0x415c	                                 pop r12	      1366	syntax.c	FUNCTION_15
0x4002432	            0x415d	                                 pop r13	      1366	syntax.c	FUNCTION_15
0x4002434	            0x415e	                                 pop r14	      1366	syntax.c	FUNCTION_15
0x4002436	            0xf3c3	                                     ret	      1366	syntax.c	FUNCTION_15
0x4002438	     0xf1f84000000	                   nop dword [rax + rax]	      1366	syntax.c	FUNCTION_15
0x4002440	    0x488bb3d00000	            mov rsi, qword [rbx + 0xd0] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4002447	          0x4839f2	                            cmp rdx, rsi	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400244a	            0x7d14	                           jge 0x4002460	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400244c	          0x4885f6	                           test rsi, rsi	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x400244f	            0x740f	                            je 0x4002460	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x4002451	          0x4801fe	                            add rsi, rdi	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x4002454	          0x4839f2	                            cmp rdx, rsi	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x4002457	            0x7d37	                           jge 0x4002490	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x4002459	    0x4889b3d00000	             mov qword [rbx + 0xd0], rsi	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x4002460	          0x4885f6	                           test rsi, rsi	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002463	            0x741b	                            je 0x4002480	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002465	          0x4839f1	                            cmp rcx, rsi	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002468	            0x7f16	                            jg 0x4002480	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x400246a	        0x48894308	                mov qword [rbx + 8], rax	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400246e	          0x4989dd	                            mov r13, rbx	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002471	          0x488b1b	                    mov rbx, qword [rbx]	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002474	            0xebb3	                           jmp 0x4002429	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002476	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002480	    0x48898bd00000	             mov qword [rbx + 0xd0], rcx	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002487	            0xebe1	                           jmp 0x400246a	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002489	     0xf1f80000000	                         nop dword [rax]	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002490	    0x488993d00000	             mov qword [rbx + 0xd0], rdx	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x4002497	          0x4889d6	                            mov rsi, rdx	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x400249a	            0xebc4	                           jmp 0x4002460	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x400249c	         0xf1f4000	                         nop dword [rax]	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x40024a0	    0x4c89b5200300	           mov qword [rbp + 0x320], r14 	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x40024a7	      0xe934ffffff	                           jmp 0x40023e0	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
syntax_start	SWITCH,0:WHILE,3:DO,0:IF,21:ELSE,7:FOR,1:functions,0:CALL,18	676
0x400a0c0	            0x4157	                                push r15	       515	syntax.c	FUNCTION_2
0x400a0c2	            0x4156	                                push r14	       515	syntax.c	FUNCTION_2
0x400a0c4	            0x4155	                                push r13	       515	syntax.c	FUNCTION_2
0x400a0c6	            0x4154	                                push r12	       515	syntax.c	FUNCTION_2
0x400a0c8	              0x55	                                push rbp	       515	syntax.c	FUNCTION_2
0x400a0c9	              0x53	                                push rbx	       515	syntax.c	FUNCTION_2
0x400a0ca	          0x4889fb	                            mov rbx, rdi	       515	syntax.c	FUNCTION_2
0x400a0cd	        0x4883ec48	                           sub rsp, 0x48	       515	syntax.c	FUNCTION_2
0x400a0d1	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       534	syntax.c	FUNCTION_2	IF_1
0x400a0d5	    0x483b15000000	            cmp rdx, qword [0x0400a0dc] 	       534	syntax.c	FUNCTION_2	IF_1
0x400a0dc	      0x4889742420	             mov qword [rsp + 0x20], rsi	       515	syntax.c	FUNCTION_2
0x400a0e1	    0xc70500000000	               mov dword [0x0400a0eb], 0	       526	syntax.c	FUNCTION_2
0x400a0eb	     0xf8490050000	                            je 0x400a681	       534	syntax.c	FUNCTION_2	IF_1
0x400a0f1	      0xe8ba61ffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x400a0f6	        0x488b4308	                mov rax, qword [rbx + 8]	       539	syntax.c	FUNCTION_2	IF_1
0x400a0fa	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       540	syntax.c	FUNCTION_2	IF_1
0x400a0fe	    0xc70500000000	               mov dword [0x0400a108], 0	      1732	syntax.c	FUNCTION_23
0x400a108	    0x48c705000000	               mov qword [0x0400a113], 0	      1733	syntax.c	FUNCTION_23
0x400a113	    0xc70500000000	     mov dword [0x0400a11d], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400a11d	    0x488905000000	            mov qword [0x0400a124], rax 	       539	syntax.c	FUNCTION_2	IF_1
0x400a124	    0x488915000000	            mov qword [0x0400a12b], rdx 	       540	syntax.c	FUNCTION_2	IF_1
0x400a12b	          0x488b30	                    mov rsi, qword [rax]	      1234	syntax.c	FUNCTION_13
0x400a12e	    0x488b88d80000	            mov rcx, qword [rax + 0xd8] 	       542	syntax.c	FUNCTION_2	CALL_3
0x400a135	    0x488b05000000	            mov rax, qword [0x0400a13c] 	      1234	syntax.c	FUNCTION_13
0x400a13c	    0x48891d000000	            mov qword [0x0400a143], rbx 	       543	syntax.c	FUNCTION_2
0x400a143	          0x4885f6	                           test rsi, rsi	      1234	syntax.c	FUNCTION_13
0x400a146	    0x48890d000000	            mov qword [0x0400a14d], rcx 	       542	syntax.c	FUNCTION_2	CALL_3
0x400a14d	        0x488d3c00	                    lea rdi, [rax + rax]	      1234	syntax.c	FUNCTION_13
0x400a151	        0x488d460f	                    lea rax, [rsi + 0xf]	      1234	syntax.c	FUNCTION_13
0x400a155	        0x480f49c6	                         cmovns rax, rsi	      1234	syntax.c	FUNCTION_13
0x400a159	        0x48c1f804	                              sar rax, 4	      1234	syntax.c	FUNCTION_13
0x400a15d	          0x4801f8	                            add rax, rdi	      1234	syntax.c	FUNCTION_13
0x400a160	    0x483d95000000	                           cmp rax, 0x95	      1235	syntax.c	FUNCTION_13	IF_1
0x400a166	     0xf8eb4030000	                           jle 0x400a520	      1235	syntax.c	FUNCTION_13	IF_1
0x400a16c	    0x483de8030000	                          cmp rax, 0x3e8	      1235	syntax.c	FUNCTION_13	IF_1
0x400a172	      0xb9e8030000	                          mov ecx, 0x3e8	      1235	syntax.c	FUNCTION_13	IF_1
0x400a177	        0x480f4ec8	                         cmovle rcx, rax	      1235	syntax.c	FUNCTION_13	IF_1
0x400a17b	        0x4c8d0c09	                     lea r9, [rcx + rcx]	      1235	syntax.c	FUNCTION_13	IF_1
0x400a17f	    0x4c6382180300	         movsxd r8, dword [rdx + 0x318] 	      1239	syntax.c	FUNCTION_13	IF_3
0x400a186	          0x4939c8	                             cmp r8, rcx	      1239	syntax.c	FUNCTION_13	IF_3
0x400a189	          0x4c89c0	                             mov rax, r8	      1239	syntax.c	FUNCTION_13	IF_3
0x400a18c	            0x7c22	                            jl 0x400a1b0	      1239	syntax.c	FUNCTION_13	IF_3
0x400a18e	          0x4d39c8	                              cmp r8, r9	      1239	syntax.c	FUNCTION_13	IF_3
0x400a191	            0x7f1d	                            jg 0x400a1b0	      1239	syntax.c	FUNCTION_13	IF_3
0x400a193	    0x4883ba100300	              cmp qword [rdx + 0x310], 0	       549	syntax.c	FUNCTION_2	IF_2
0x400a19b	     0xf8598010000	                           jne 0x400a339	       549	syntax.c	FUNCTION_2	IF_2
0x400a1a1	        0x4883c448	                           add rsp, 0x48	       686	syntax.c	FUNCTION_2
0x400a1a5	              0x5b	                                 pop rbx	       686	syntax.c	FUNCTION_2
0x400a1a6	              0x5d	                                 pop rbp	       686	syntax.c	FUNCTION_2
0x400a1a7	            0x415c	                                 pop r12	       686	syntax.c	FUNCTION_2
0x400a1a9	            0x415d	                                 pop r13	       686	syntax.c	FUNCTION_2
0x400a1ab	            0x415e	                                 pop r14	       686	syntax.c	FUNCTION_2
0x400a1ad	            0x415f	                                 pop r15	       686	syntax.c	FUNCTION_2
0x400a1af	              0xc3	                                     ret	       686	syntax.c	FUNCTION_2
0x400a1b0	          0x4889f1	                            mov rcx, rsi	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1b3	      0xbd96000000	                           mov ebp, 0x96	      1245	syntax.c	FUNCTION_13	IF_3	IF_4
0x400a1b8	        0x48c1e93f	                           shr rcx, 0x3f	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1bc	          0x4801f1	                            add rcx, rsi	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1bf	          0x48d1f9	                              sar rcx, 1	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1c2	          0x4801ce	                            add rsi, rcx	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1c5	        0x488d4e0f	                    lea rcx, [rsi + 0xf]	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1c9	          0x4885f6	                           test rsi, rsi	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1cc	        0x480f48f1	                          cmovs rsi, rcx	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1d0	        0x48c1fe04	                              sar rsi, 4	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1d4	          0x4801f7	                            add rdi, rsi	      1243	syntax.c	FUNCTION_13	IF_3
0x400a1d7	    0x4881ff950000	                           cmp rdi, 0x95	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x400a1de	     0xf8f4c030000	                            jg 0x400a530	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x400a1e4	    0x4883ba100300	              cmp qword [rdx + 0x310], 0	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x400a1ec	            0x751c	                           jne 0x400a20a	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x400a1ee	            0xeb31	                           jmp 0x400a221	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x400a1f0	      0xe8db7fffff	              call sym.syn_stack_cleanup	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400a1f5	    0x488b15000000	            mov rdx, qword [0x0400a1fc] 	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400a1fc	            0x85c0	                           test eax, eax	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400a1fe	    0x8b8218030000	           mov eax, dword [rdx + 0x318] 	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400a204	     0xf8467040000	                            je 0x400a671	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400a20a	    0x2b8230030000	            sub eax, dword [rdx + 0x330]	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400a210	          0x83c002	                              add eax, 2	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400a213	            0x4898	                                    cdqe	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400a215	          0x4839e8	                            cmp rax, rbp	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400a218	            0x7fd6	                            jg 0x400a1f0	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400a21a	          0x4839c5	                            cmp rbp, rax	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400a21d	        0x480f4ce8	                          cmovl rbp, rax	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400a221	    0x69fdd8000000	                     imul edi, ebp, 0xd8	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400a227	          0x4189ec	                           mov r12d, ebp	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400a22a	      0xe800000000	                          call 0x400a22f	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400a22f	          0x4885c0	                           test rax, rax	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x400a232	          0x4989c5	                            mov r13, rax	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400a235	    0x488b15000000	            mov rdx, qword [0x0400a23c] 	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400a23c	     0xf8451ffffff	                            je 0x400a193	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x400a242	    0x4c8d9028ffff	                   lea r10, [rax - 0xd8]	      1264	syntax.c	FUNCTION_13	IF_3
0x400a249	    0x488b05000000	            mov rax, qword [0x0400a250] 	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400a250	    0x488bb8100300	           mov rdi, qword [rax + 0x310] 	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400a257	          0x4885ff	                           test rdi, rdi	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400a25a	     0xf8408090000	                            je 0x400ab68	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400a260	    0x4c8b80200300	            mov r8, qword [rax + 0x320] 	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a267	          0x4c89ea	                            mov rdx, r13	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a26a	          0x4d85c0	                             test r8, r8	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a26d	     0xf84f5080000	                            je 0x400ab68	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a273	       0xf1f440000	                   nop dword [rax + rax]	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a278	          0x4889d7	                            mov rdi, rdx	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a27b	          0x4c89c6	                             mov rsi, r8	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a27e	      0xb91b000000	                           mov ecx, 0x1b	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a283	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a286	          0x4989d1	                             mov r9, rdx	      1271	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a289	    0x4881c2d80000	                           add rdx, 0xd8	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a290	          0x498911	                     mov qword [r9], rdx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a293	          0x4889d1	                            mov rcx, rdx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a296	          0x4d8b00	                      mov r8, qword [r8]	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a299	          0x4d85c0	                             test r8, r8	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a29c	            0x75da	                           jne 0x400a278	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a29e	          0x4d39ca	                             cmp r10, r9	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2a1	     0xf844b0a0000	                            je 0x400acf2	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2a7	    0x49c701000000	                       mov qword [r9], 0	      1278	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2ae	          0x4d29e9	                             sub r9, r13	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2b1	    0x488bb8100300	           mov rdi, qword [rax + 0x310] 	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2b8	        0x49c1f903	                               sar r9, 3	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2bc	    0x4c89a8200300	            mov qword [rax + 0x320], r13	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2c3	    0x4169d1ed25b4	               imul edx, r9d, 0x97b425ed	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2ca	      0x418d5414ff	                lea edx, [r12 + rdx - 1]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2cf	          0x4189ec	                           mov r12d, ebp	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2d2	    0x899030030000	            mov dword [rax + 0x330], edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x400a2d8	          0x4889ca	                            mov rdx, rcx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400a2db	    0x488988280300	            mov qword [rax + 0x328], rcx	      1289	syntax.c	FUNCTION_13	IF_3
0x400a2e2	      0x488d446d00	                  lea rax, [rbp + rbp*2]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a2e7	        0x488d34c0	                  lea rsi, [rax + rax*8]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a2eb	        0x48c1e603	                              shl rsi, 3	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a2ef	      0x498d443500	                    lea rax, [r13 + rsi]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a2f4	          0x4839c8	                            cmp rax, rcx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a2f7	            0x761a	                           jbe 0x400a313	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a2f9	     0xf1f80000000	                         nop dword [rax]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a300	    0x4881c2d80000	                           add rdx, 0xd8	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a307	          0x4839c2	                            cmp rdx, rax	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a30a	    0x48899228ffff	             mov qword [rdx - 0xd8], rdx	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a311	            0x72ed	                            jb 0x400a300	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400a313	    0x49c7843528ff	         mov qword [r13 + rsi - 0xd8], 0	      1292	syntax.c	FUNCTION_13	IF_3
0x400a31f	      0xe800000000	                          call 0x400a324	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x400a324	    0x488b15000000	            mov rdx, qword [0x0400a32b] 	      1295	syntax.c	FUNCTION_13	IF_3
0x400a32b	    0x4c89aa100300	            mov qword [rdx + 0x310], r13	      1295	syntax.c	FUNCTION_13	IF_3
0x400a332	    0x4489a2180300	           mov dword [rdx + 0x318], r12d	      1296	syntax.c	FUNCTION_13	IF_3
0x400a339	     0xfb705000000	           movzx eax, word [0x0400a340] 	       551	syntax.c	FUNCTION_2
0x400a340	    0x8b3500000000	            mov esi, dword [0x0400a346] 	       556	syntax.c	FUNCTION_2	IF_3
0x400a346	            0x85f6	                           test esi, esi	       556	syntax.c	FUNCTION_2	IF_3
0x400a348	    0x668982400300	              mov word [rdx + 0x340], ax	       551	syntax.c	FUNCTION_2
0x400a34f	            0x7412	                            je 0x400a363	       556	syntax.c	FUNCTION_2	IF_3
0x400a351	    0x488b05000000	            mov rax, qword [0x0400a358] 	       557	syntax.c	FUNCTION_2	IF_3
0x400a358	      0x483b442420	            cmp rax, qword [rsp + 0x20] 	       557	syntax.c	FUNCTION_2	IF_3
0x400a35d	     0xf8ce2010000	                            jl 0x400a545	       557	syntax.c	FUNCTION_2	IF_3
0x400a363	      0xe8485fffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x400a368	    0xc70500000000	               mov dword [0x0400a372], 0	      1732	syntax.c	FUNCTION_23
0x400a372	    0x48c705000000	               mov qword [0x0400a37d], 0	      1733	syntax.c	FUNCTION_23
0x400a37d	    0xc70500000000	     mov dword [0x0400a387], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400a387	    0x488b0d000000	            mov rcx, qword [0x0400a38e] 	       582	syntax.c	FUNCTION_2	IF_6
0x400a38e	    0x4883b9100300	              cmp qword [rcx + 0x310], 0	       582	syntax.c	FUNCTION_2	IF_6
0x400a396	     0xf8421030000	                            je 0x400a6bd	       582	syntax.c	FUNCTION_2	IF_6
0x400a39c	    0x488b81200300	           mov rax, qword [rcx + 0x320] 	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400a3a3	          0x4885c0	                           test rax, rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400a3a6	     0xf84f5070000	                            je 0x400aba1	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400a3ac	        0x488b5008	                mov rdx, qword [rax + 8]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3b0	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3b5	          0x4839d6	                            cmp rsi, rdx	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3b8	     0xf8ce3070000	                            jl 0x400aba1	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3be	            0x31ff	                            xor edi, edi	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3c0	          0x4531c9	                            xor r9d, r9d	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3c3	            0xeb0c	                           jmp 0x400a3d1	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3c5	           0xf1f00	                         nop dword [rax]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3c8	        0x488b5008	                mov rdx, qword [rax + 8]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3cc	          0x4839d6	                            cmp rsi, rdx	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3cf	            0x7c26	                            jl 0x400a3f7	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400a3d1	    0x4883b8d00000	               cmp qword [rax + 0xd0], 0	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x400a3d9	            0x7514	                           jne 0x400a3ef	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x400a3db	          0x4989f0	                             mov r8, rsi	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400a3de	    0x4c2b81a80200	             sub r8, qword [rcx + 0x2a8]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400a3e5	          0x4989c1	                             mov r9, rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400a3e8	          0x4939d0	                             cmp r8, rdx	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400a3eb	        0x480f4ef8	                         cmovle rdi, rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400a3ef	          0x488b00	                    mov rax, qword [rax]	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400a3f2	          0x4885c0	                           test rax, rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400a3f5	            0x75d1	                           jne 0x400a3c8	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400a3f7	          0x4885ff	                           test rdi, rdi	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x400a3fa	      0x4c894c2430	              mov qword [rsp + 0x30], r9	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x400a3ff	     0xf84c1020000	                            je 0x400a6c6	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x400a405	      0xe866e9ffff	             call sym.load_current_state	       597	syntax.c	FUNCTION_2	IF_6	CALL_9
0x400a40a	    0x8b0500000000	            mov eax, dword [0x0400a410] 	       604	syntax.c	FUNCTION_2	IF_11
0x400a410	            0x85c0	                           test eax, eax	       604	syntax.c	FUNCTION_2	IF_11
0x400a412	     0xf84ae020000	                            je 0x400a6c6	       604	syntax.c	FUNCTION_2	IF_11
0x400a418	    0x488b2d000000	            mov rbp, qword [0x0400a41f] 	       604	syntax.c	FUNCTION_2	IF_11
0x400a41f	    0x488b05000000	            mov rax, qword [0x0400a426] 	       604	syntax.c	FUNCTION_2	IF_11
0x400a426	          0x4889e9	                            mov rcx, rbp	       604	syntax.c	FUNCTION_2	IF_11
0x400a429	    0x486380180300	        movsxd rax, dword [rax + 0x318] 	       622	syntax.c	FUNCTION_2	IF_13
0x400a430	    0x488b15000000	            mov rdx, qword [0x0400a437] 	       622	syntax.c	FUNCTION_2	IF_13
0x400a437	    0x41bc3f420f00	                       mov r12d, 0xf423f	       623	syntax.c	FUNCTION_2	IF_13
0x400a43d	          0x4839d0	                            cmp rax, rdx	       622	syntax.c	FUNCTION_2	IF_13
0x400a440	            0x7e19	                           jle 0x400a45b	       622	syntax.c	FUNCTION_2	IF_13
0x400a442	          0x4829d0	                            sub rax, rdx	       625	syntax.c	FUNCTION_2	ELSE_4
0x400a445	          0x4889c6	                            mov rsi, rax	       625	syntax.c	FUNCTION_2	ELSE_4
0x400a448	    0x488b05000000	            mov rax, qword [0x0400a44f] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x400a44f	          0x488b00	                    mov rax, qword [rax]	       625	syntax.c	FUNCTION_2	ELSE_4
0x400a452	            0x4899	                                     cqo	       625	syntax.c	FUNCTION_2	ELSE_4
0x400a454	          0x48f7fe	                                idiv rsi	       625	syntax.c	FUNCTION_2	ELSE_4
0x400a457	        0x448d6001	                     lea r12d, [rax + 1]	       625	syntax.c	FUNCTION_2	ELSE_4
0x400a45b	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a460	          0x4531ed	                          xor r13d, r13d	       623	syntax.c	FUNCTION_2	IF_13
0x400a463	          0x4d63e4	                        movsxd r12, r12d	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a466	          0x4939ce	                            cmp r14, rcx	       626	syntax.c	FUNCTION_2	WHILE_1
0x400a469	     0xf8e9e000000	                           jle 0x400a50d	       626	syntax.c	FUNCTION_2	WHILE_1
0x400a46f	              0x90	                                     nop	       626	syntax.c	FUNCTION_2	WHILE_1
0x400a470	      0xe8cbe5ffff	                 call sym.syn_start_line	       628	syntax.c	FUNCTION_2	WHILE_1	CALL_11
0x400a475	            0x31ff	                            xor edi, edi	       629	syntax.c	FUNCTION_2	WHILE_1	CALL_12
0x400a477	      0xe854fbffff	                call sym.syn_finish_line	       629	syntax.c	FUNCTION_2	WHILE_1	CALL_12
0x400a47c	    0x488b0d000000	            mov rcx, qword [0x0400a483] 	       630	syntax.c	FUNCTION_2	WHILE_1
0x400a483	        0x488d5101	                      lea rdx, [rcx + 1]	       630	syntax.c	FUNCTION_2	WHILE_1
0x400a487	          0x4839d5	                            cmp rbp, rdx	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x400a48a	    0x488915000000	            mov qword [0x0400a491], rdx 	       630	syntax.c	FUNCTION_2	WHILE_1
0x400a491	            0x7f57	                            jg 0x400a4ea	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x400a493	          0x4d85ed	                           test r13, r13	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x400a496	     0xf845f010000	                            je 0x400a5fb	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x400a49c	        0x498b4508	                mov rax, qword [r13 + 8]	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x400a4a0	          0x4c89eb	                            mov rbx, r13	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a4a3	          0x4839c2	                            cmp rdx, rax	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4a6	            0x7f15	                            jg 0x400a4bd	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4a8	      0xe9eb000000	                           jmp 0x400a598	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4ad	           0xf1f00	                         nop dword [rax]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4b0	        0x488b4308	                mov rax, qword [rbx + 8]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4b4	          0x4839c2	                            cmp rdx, rax	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4b7	     0xf8edb000000	                           jle 0x400a598	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4bd	          0x488b1b	                    mov rbx, qword [rbx]	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4c0	          0x4885db	                           test rbx, rbx	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4c3	            0x75eb	                           jne 0x400a4b0	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400a4c5	          0x4d85ed	                           test r13, r13	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4c8	            0x7418	                            je 0x400a4e2	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4ca	    0x488b05000000	            mov rax, qword [0x0400a4d1] 	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4d1	          0x4939c6	                            cmp r14, rax	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4d4	            0x740c	                            je 0x400a4e2	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4d6	          0x4c89e2	                            mov rdx, r12	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4d9	        0x49035508	                add rdx, qword [r13 + 8]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4dd	          0x4839d0	                            cmp rax, rdx	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4e0	            0x7c08	                            jl 0x400a4ea	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4e2	      0xe8c97fffff	            call sym.store_current_state	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4e7	          0x4989c5	                            mov r13, rax	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400a4ea	      0xe800000000	                          call 0x400a4ef	       677	syntax.c	FUNCTION_2	WHILE_1	CALL_17
0x400a4ef	    0x8b0500000000	            mov eax, dword [0x0400a4f5] 	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a4f5	            0x85c0	                           test eax, eax	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a4f7	     0xf8563010000	                           jne 0x400a660	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a4fd	    0x488b0d000000	            mov rcx, qword [0x0400a504] 	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a504	          0x4939ce	                            cmp r14, rcx	       626	syntax.c	FUNCTION_2	WHILE_1
0x400a507	     0xf8f63ffffff	                            jg 0x400a470	       626	syntax.c	FUNCTION_2	WHILE_1
0x400a50d	        0x4883c448	                           add rsp, 0x48	       686	syntax.c	FUNCTION_2
0x400a511	              0x5b	                                 pop rbx	       686	syntax.c	FUNCTION_2
0x400a512	              0x5d	                                 pop rbp	       686	syntax.c	FUNCTION_2
0x400a513	            0x415c	                                 pop r12	       686	syntax.c	FUNCTION_2
0x400a515	            0x415d	                                 pop r13	       686	syntax.c	FUNCTION_2
0x400a517	            0x415e	                                 pop r14	       686	syntax.c	FUNCTION_2
0x400a519	            0x415f	                                 pop r15	       686	syntax.c	FUNCTION_2
0x400a51b	      0xe920e5ffff	                  jmp sym.syn_start_line	       685	syntax.c	FUNCTION_2	CALL_18
0x400a520	    0x41b92c010000	                          mov r9d, 0x12c	      1235	syntax.c	FUNCTION_13	IF_1
0x400a526	      0xb996000000	                           mov ecx, 0x96	      1236	syntax.c	FUNCTION_13	IF_1
0x400a52b	      0xe94ffcffff	                           jmp 0x400a17f	      1236	syntax.c	FUNCTION_13	IF_1
0x400a530	    0x4881ffe80300	                          cmp rdi, 0x3e8	      1236	syntax.c	FUNCTION_13	IF_1
0x400a537	      0xbde8030000	                          mov ebp, 0x3e8	      1236	syntax.c	FUNCTION_13	IF_1
0x400a53c	        0x480f4eef	                         cmovle rbp, rdi	      1236	syntax.c	FUNCTION_13	IF_1
0x400a540	      0xe99ffcffff	                           jmp 0x400a1e4	      1236	syntax.c	FUNCTION_13	IF_1
0x400a545	    0x488b15000000	            mov rdx, qword [0x0400a54c] 	       558	syntax.c	FUNCTION_2	IF_3
0x400a54c	          0x483b02	                    cmp rax, qword [rdx]	       558	syntax.c	FUNCTION_2	IF_3
0x400a54f	     0xf8d0efeffff	                           jge 0x400a363	       558	syntax.c	FUNCTION_2	IF_3
0x400a555	            0x31ff	                            xor edi, edi	       560	syntax.c	FUNCTION_2	IF_3	CALL_5
0x400a557	      0xe874faffff	                call sym.syn_finish_line	       560	syntax.c	FUNCTION_2	IF_3	CALL_5
0x400a55c	    0x8b0d00000000	            mov ecx, dword [0x0400a562] 	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x400a562	            0x85c9	                           test ecx, ecx	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x400a564	     0xf8445060000	                            je 0x400abaf	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x400a56a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x400a56f	    0x483b05000000	            cmp rax, qword [0x0400a576] 	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x400a576	     0xf85e7fdffff	                           jne 0x400a363	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x400a57c	    0x8b1500000000	            mov edx, dword [0x0400a582] 	       582	syntax.c	FUNCTION_2	IF_6
0x400a582	            0x85d2	                           test edx, edx	       582	syntax.c	FUNCTION_2	IF_6
0x400a584	     0xf84fdfdffff	                            je 0x400a387	       582	syntax.c	FUNCTION_2	IF_6
0x400a58a	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       582	syntax.c	FUNCTION_2	IF_6
0x400a58f	      0xe98bfeffff	                           jmp 0x400a41f	       582	syntax.c	FUNCTION_2	IF_6
0x400a594	         0xf1f4000	                         nop dword [rax]	       582	syntax.c	FUNCTION_2	IF_6
0x400a598	          0x4839c2	                            cmp rdx, rax	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400a59b	     0xf8524ffffff	                           jne 0x400a4c5	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400a5a1	          0x4889df	                            mov rdi, rbx	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x400a5a4	      0xe8a761ffff	                call sym.syn_stack_equal	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x400a5a9	            0x85c0	                           test eax, eax	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x400a5ab	     0xf8414ffffff	                            je 0x400a4c5	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x400a5b1	    0x488b15000000	            mov rdx, qword [0x0400a5b8] 	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400a5b8	          0x4989dd	                            mov r13, rbx	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400a5bb	            0xeb23	                           jmp 0x400a5e0	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400a5bd	           0xf1f00	                         nop dword [rax]	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400a5c0	          0x4885c0	                           test rax, rax	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x400a5c3	     0xf84e7000000	                            je 0x400a6b0	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x400a5c9	    0x48c783d00000	               mov qword [rbx + 0xd0], 0	       661	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400a5d4	          0x488b1b	                    mov rbx, qword [rbx]	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400a5d7	          0x4885db	                           test rbx, rbx	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400a5da	     0xf84d0000000	                            je 0x400a6b0	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400a5e0	    0x488b83d00000	            mov rax, qword [rbx + 0xd0] 	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400a5e7	          0x4839c2	                            cmp rdx, rax	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400a5ea	     0xf8cc0000000	                            jl 0x400a6b0	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400a5f0	        0x4c3b7308	                cmp r14, qword [rbx + 8]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400a5f4	            0x7cca	                            jl 0x400a5c0	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400a5f6	          0x4989dd	                            mov r13, rbx	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400a5f9	            0xebce	                           jmp 0x400a5c9	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400a5fb	    0x488b05000000	            mov rax, qword [0x0400a602] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a602	    0x488b98200300	           mov rbx, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a609	          0x4885db	                           test rbx, rbx	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a60c	     0xf84d0feffff	                            je 0x400a4e2	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a612	        0x488b4308	                mov rax, qword [rbx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a616	          0x4839c1	                            cmp rcx, rax	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a619	     0xf8428060000	                            je 0x400ac47	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a61f	            0x7d21	                           jge 0x400a642	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a621	      0xe97dfeffff	                           jmp 0x400a4a3	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a626	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a630	        0x498b4508	                mov rax, qword [r13 + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a634	          0x4839c1	                            cmp rcx, rax	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a637	     0xf8463feffff	                            je 0x400a4a0	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a63d	            0x7c0b	                            jl 0x400a64a	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a63f	          0x4c89eb	                            mov rbx, r13	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a642	          0x4c8b2b	                    mov r13, qword [rbx]	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a645	          0x4d85ed	                           test r13, r13	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a648	            0x75e6	                           jne 0x400a630	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a64a	        0x488b4308	                mov rax, qword [rbx + 8]	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a64e	          0x4989dd	                            mov r13, rbx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a651	      0xe94dfeffff	                           jmp 0x400a4a3	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a656	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a660	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a665	    0x488905000000	            mov qword [0x0400a66c], rax 	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a66c	      0xe99cfeffff	                           jmp 0x400a50d	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a671	    0x2b8230030000	            sub eax, dword [rdx + 0x330]	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a677	          0x83c002	                              add eax, 2	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a67a	            0x4898	                                    cdqe	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a67c	      0xe999fbffff	                           jmp 0x400a21a	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400a681	        0x488b4708	                mov rax, qword [rdi + 8]	       535	syntax.c	FUNCTION_2	IF_1
0x400a685	    0x483b05000000	            cmp rax, qword [0x0400a68c] 	       535	syntax.c	FUNCTION_2	IF_1
0x400a68c	     0xf855ffaffff	                           jne 0x400a0f1	       535	syntax.c	FUNCTION_2	IF_1
0x400a692	    0x488b0d000000	            mov rcx, qword [0x0400a699] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x400a699	    0x483988d80000	            cmp qword [rax + 0xd8], rcx 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x400a6a0	     0xf854bfaffff	                           jne 0x400a0f1	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x400a6a6	      0xe980faffff	                           jmp 0x400a12b	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x400a6ab	       0xf1f440000	                   nop dword [rax + rax]	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x400a6b0	          0x4c89ef	                            mov rdi, r13	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x400a6b3	      0xe8b8e6ffff	             call sym.load_current_state	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x400a6b8	      0xe92dfeffff	                           jmp 0x400a4ea	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x400a6bd	    0x48c744243000	               mov qword [rsp + 0x30], 0	       517	syntax.c	FUNCTION_2
0x400a6c6	      0xe8e55bffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x400a6cb	    0x488b05000000	            mov rax, qword [0x0400a6d2] 	       773	syntax.c	FUNCTION_5	IF_1
0x400a6d2	    0xc70500000000	               mov dword [0x0400a6dc], 0	      1732	syntax.c	FUNCTION_23
0x400a6dc	    0x48c705000000	               mov qword [0x0400a6e7], 0	      1733	syntax.c	FUNCTION_23
0x400a6e7	    0xc70500000000	     mov dword [0x0400a6f1], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400a6f1	    0x488b88a80200	           mov rcx, qword [rax + 0x2a8] 	       773	syntax.c	FUNCTION_5	IF_1
0x400a6f8	      0x48394c2420	            cmp qword [rsp + 0x20], rcx 	       773	syntax.c	FUNCTION_5	IF_1
0x400a6fd	     0xf8ccb010000	                            jl 0x400a8ce	       773	syntax.c	FUNCTION_5	IF_1
0x400a703	        0x4883f901	                              cmp rcx, 1	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x400a707	      0xba01000000	                              mov edx, 1	       778	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x400a70c	            0x740e	                            je 0x400a71c	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x400a70e	        0x4883f909	                              cmp rcx, 9	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x400a712	     0xf8f6f040000	                            jg 0x400ab87	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x400a718	        0x488d1409	                    lea rdx, [rcx + rcx]	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x400a71c	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400a723	          0x4885ff	                           test rdi, rdi	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400a726	            0x7407	                            je 0x400a72f	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400a728	          0x4839d7	                            cmp rdi, rdx	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400a72b	        0x480f4cd7	                          cmovl rdx, rdi	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400a72f	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x400a734	          0x4839d1	                            cmp rcx, rdx	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x400a737	     0xf8e91010000	                           jle 0x400a8ce	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x400a73d	          0x4829d1	                            sub rcx, rdx	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x400a740	    0x8b909c020000	           mov edx, dword [rax + 0x29c] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a746	      0x48894c2408	                mov qword [rsp + 8], rcx	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x400a74b	    0x48890d000000	            mov qword [0x0400a752], rcx 	       791	syntax.c	FUNCTION_5	ELSE_4
0x400a752	          0xf6c201	                              test dl, 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a755	     0xf8496010000	                            je 0x400a8f1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a75b	    0x488b05000000	            mov rax, qword [0x0400a762] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a762	        0x4883f901	                              cmp rcx, 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400a766	    0x4c8b25000000	            mov r12, qword [0x0400a76d] 	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a76d	    0x488b2d000000	            mov rbp, qword [0x0400a774] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a774	    0x48891d000000	            mov qword [0x0400a77b], rbx 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a77b	    0x488905000000	            mov qword [0x0400a782], rax 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a782	            0x744c	                            je 0x400a7d0	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400a784	          0x4989cf	                            mov r15, rcx	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400a787	            0xeb20	                           jmp 0x400a7a9	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400a789	     0xf1f80000000	                         nop dword [rax]	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400a790	          0x4889c7	                            mov rdi, rax	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a793	      0xe800000000	                          call 0x400a798	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a798	    0x41807c05ff5c	         cmp byte [r13 + rax - 1], 0x5c 	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a79e	            0x751d	                           jne 0x400a7bd	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a7a0	        0x4983fe01	                              cmp r14, 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400a7a4	          0x4d89f7	                            mov r15, r14	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400a7a7	            0x7414	                            je 0x400a7bd	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400a7a9	        0x4d8d77ff	                      lea r14, [r15 - 1]	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x400a7ad	          0x4c89f7	                            mov rdi, r14	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x400a7b0	      0xe800000000	                          call 0x400a7b5	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x400a7b5	          0x803800	                       cmp byte [rax], 0	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a7b8	          0x4989c5	                            mov r13, rax	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x400a7bb	            0x75d3	                           jne 0x400a790	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a7bd	    0x488b05000000	            mov rax, qword [0x0400a7c4] 	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a7c4	      0x4c897c2408	                mov qword [rsp + 8], r15	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a7c9	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400a7d0	      0x488b442408	                mov rax, qword [rsp + 8]	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a7d5	        0x4c8b6b38	            mov r13, qword [rbx + 0x38] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a7d9	        0x448b7340	           mov r14d, dword [rbx + 0x40] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a7dd	    0xc74340000000	               mov dword [rbx + 0x40], 0	       819	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a7e4	        0x448b7b44	           mov r15d, dword [rbx + 0x44] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a7e8	        0x48894338	             mov qword [rbx + 0x38], rax	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a7ec	    0x488905000000	            mov qword [0x0400a7f3], rax 	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a7f3	      0xe800000000	                          call 0x400a7f8	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x400a7f8	          0x4885c0	                           test rax, rax	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x400a7fb	    0x488b05000000	            mov rax, qword [0x0400a802] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a802	            0x7477	                            je 0x400a87b	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x400a804	    0x486390600200	        movsxd rdx, dword [rax + 0x260] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a80b	          0x4889d7	                            mov rdi, rdx	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a80e	        0x488d1492	                  lea rdx, [rdx + rdx*4]	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a812	        0x48c1e205	                              shl rdx, 5	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a816	    0x4881eaa00000	                           sub rdx, 0xa0	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a81d	            0xeb08	                           jmp 0x400a827	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a81f	              0x90	                                     nop	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a820	    0x4881eaa00000	                           sub rdx, 0xa0	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a827	          0x83ef01	                              sub edi, 1	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a82a	            0x784f	                            js 0x400a87b	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400a82c	          0x4889d1	                            mov rcx, rdx	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400a82f	    0x480388700200	            add rcx, qword [rax + 0x270]	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400a836	     0xfb7b0a00200	          movzx esi, word [rax + 0x2a0] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400a83d	        0x66397154	               cmp word [rcx + 0x54], si	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400a841	            0x75dd	                           jne 0x400a820	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400a843	          0x803902	                       cmp byte [rcx], 2	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400a846	            0x75d8	                           jne 0x400a820	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400a848	    0xc70500000000	           mov dword [0x0400a852], 0x90 	      1740	syntax.c	FUNCTION_24
0x400a852	    0xc70500000000	               mov dword [0x0400a85c], 3	      1741	syntax.c	FUNCTION_24
0x400a85c	      0xe8af80ffff	             call sym.push_current_state	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_6
0x400a861	          0x83f801	                              cmp eax, 1	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_6
0x400a864	            0x750e	                           jne 0x400a874	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_6
0x400a866	    0x8b0500000000	            mov eax, dword [0x0400a86c] 	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x400a86c	          0x8d78ff	                      lea edi, [rax - 1]	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x400a86f	      0xe8dcddffff	                 call sym.update_si_attr	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x400a874	    0x488b05000000	            mov rax, qword [0x0400a87b] 	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x400a87b	    0x488b0d000000	            mov rcx, qword [0x0400a882] 	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x400a882	        0x4c896b38	             mov qword [rbx + 0x38], r13	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a886	        0x44897340	            mov dword [rbx + 0x40], r14d	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a88a	        0x44897b44	            mov dword [rbx + 0x44], r15d	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a88e	    0x4c8925000000	            mov qword [0x0400a895], r12 	       842	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a895	    0x48892d000000	            mov qword [0x0400a89c], rbp 	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a89c	        0x4883f901	                              cmp rcx, 1	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x400a8a0	    0xc70500000000	           mov dword [0x0400a8aa], 0x90 	      1740	syntax.c	FUNCTION_24
0x400a8aa	    0xc70500000000	               mov dword [0x0400a8b4], 3	      1741	syntax.c	FUNCTION_24
0x400a8b4	      0xbd01000000	                              mov ebp, 1	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x400a8b9	     0xf846afbffff	                            je 0x400a429	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x400a8bf	          0x4889cd	                            mov rbp, rcx	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x400a8c2	    0x4803a8a80200	            add rbp, qword [rax + 0x2a8]	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x400a8c9	      0xe95bfbffff	                           jmp 0x400a429	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x400a8ce	    0x8b909c020000	           mov edx, dword [rax + 0x29c] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a8d4	    0x48c705000000	               mov qword [0x0400a8df], 1	       791	syntax.c	FUNCTION_5	ELSE_4
0x400a8df	          0xf6c201	                              test dl, 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a8e2	     0xf85d2030000	                           jne 0x400acba	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a8e8	    0x48c744240801	                  mov qword [rsp + 8], 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400a8f1	          0x83e202	                              and edx, 2	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x400a8f4	    0x488b0d000000	            mov rcx, qword [0x0400a8fb] 	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x400a8fb	            0x749f	                            je 0x400a89c	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x400a8fd	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400a904	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400a909	          0x4839c8	                            cmp rax, rcx	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400a90c	     0xf8d81020000	                           jge 0x400ab93	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400a912	          0x4885c0	                           test rax, rax	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400a915	     0xf8478020000	                            je 0x400ab93	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400a91b	          0x4829c1	                            sub rcx, rax	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400a91e	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400a923	      0x488b442408	                mov rax, qword [rsp + 8]	      1734	syntax.c	FUNCTION_23
0x400a928	            0x31db	                            xor ebx, ebx	       858	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x400a92a	          0x4531e4	                          xor r12d, r12d	       857	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x400a92d	          0x4531ed	                          xor r13d, r13d	       756	syntax.c	FUNCTION_5
0x400a930	            0x31ed	                            xor ebp, ebp	       755	syntax.c	FUNCTION_5
0x400a932	    0xc74424140000	               mov dword [rsp + 0x14], 0	       754	syntax.c	FUNCTION_5
0x400a93a	        0x4c8d70ff	                      lea r14, [rax - 1]	       754	syntax.c	FUNCTION_5
0x400a93e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1734	syntax.c	FUNCTION_23
0x400a943	       0xf1f440000	                   nop dword [rax + rax]	      1734	syntax.c	FUNCTION_23
0x400a948	      0x4c3b742438	            cmp r14, qword [rsp + 0x38] 	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x400a94d	      0x4c89742428	             mov qword [rsp + 0x28], r14	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x400a952	     0xf8e84020000	                           jle 0x400abdc	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x400a958	      0xe800000000	                          call 0x400a95d	       864	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_8
0x400a95d	    0x8b0500000000	            mov eax, dword [0x0400a963] 	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x400a963	            0x85c0	                           test eax, eax	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x400a965	     0xf85a7020000	                           jne 0x400ac12	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x400a96b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x400a970	          0x4885c0	                           test rax, rax	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x400a973	            0x740a	                            je 0x400a97f	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x400a975	        0x4c397008	                cmp qword [rax + 8], r14	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x400a979	     0xf8442020000	                            je 0x400abc1	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x400a97f	        0x4983fe01	                              cmp r14, 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x400a983	            0x7410	                            je 0x400a995	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x400a985	        0x4983ee01	                              sub r14, 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x400a989	          0x4c89f7	                            mov rdi, r14	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x400a98c	      0xe8bf5bffff	             call sym.syn_match_linecont	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x400a991	            0x85c0	                           test eax, eax	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x400a993	            0x75b3	                           jne 0x400a948	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x400a995	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400a99a	          0x4531f6	                          xor r14d, r14d	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400a99d	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400a9a2	    0xc70500000000	           mov dword [0x0400a9ac], 0x90 	      1740	syntax.c	FUNCTION_24
0x400a9ac	    0xc70500000000	               mov dword [0x0400a9b6], 3	      1741	syntax.c	FUNCTION_24
0x400a9b6	    0x488905000000	            mov qword [0x0400a9bd], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400a9bd	     0xf8d53010000	                           jge 0x400ab16	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400a9c3	       0xf1f440000	                   nop dword [rax + rax]	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400a9c8	      0xe873e0ffff	                 call sym.syn_start_line	       892	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	CALL_13
0x400a9cd	            0xeb55	                           jmp 0x400aa24	       892	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	CALL_13
0x400a9cf	              0x90	                                     nop	       892	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	CALL_13
0x400a9d0	      0x4c3b7c2418	            cmp r15, qword [rsp + 0x18] 	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x400a9d5	    0x4c893d000000	            mov qword [0x0400a9dc], r15 	       930	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x400a9dc	    0x891d00000000	            mov dword [0x0400a9e2], ebx 	       931	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x400a9e2	     0xf8d78010000	                           jge 0x400ab60	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x400a9e8	          0x4c89fe	                            mov rsi, r15	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x400a9eb	          0x4189dc	                           mov r12d, ebx	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400a9ee	    0x488b3d000000	            mov rdi, qword [0x0400a9f5] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400a9f5	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x400a9f7	      0xe800000000	                          call 0x400a9fc	      3305	syntax.c	FUNCTION_42	CALL_1
0x400a9fc	    0x486335000000	         movsxd rsi, dword [0x0400aa03] 	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x400aa03	        0x803c3000	                 cmp byte [rax + rsi], 0	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x400aa07	          0x4889f2	                            mov rdx, rsi	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x400aa0a	            0x7409	                            je 0x400aa15	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x400aa0c	          0x83c201	                              add edx, 1	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x400aa0f	    0x891500000000	            mov dword [0x0400aa15], edx 	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x400aa15	      0xe866ddffff	               call sym.check_state_ends	       946	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_16
0x400aa1a	    0x448925000000	           mov dword [0x0400aa21], r12d 	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa21	          0x4d89fc	                            mov r12, r15	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa24	      0xbf01000000	                              mov edi, 1	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_14
0x400aa29	      0xe8a2f5ffff	                call sym.syn_finish_line	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_14
0x400aa2e	            0x85c0	                           test eax, eax	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa30	     0xf84ba000000	                            je 0x400aaf0	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa36	    0x486305000000	         movsxd rax, dword [0x0400aa3d] 	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa3d	            0x85c0	                           test eax, eax	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa3f	     0xf84ab000000	                            je 0x400aaf0	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa45	        0x488d04c0	                  lea rax, [rax + rax*8]	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa49	    0x488b15000000	            mov rdx, qword [0x0400aa50] 	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa50	        0x48c1e004	                              shl rax, 4	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa54	    0x488d940270ff	             lea rdx, [rdx + rax - 0x90]	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa5c	        0x4c8b7a18	            mov r15, qword [rdx + 0x18] 	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400aa60	      0x4c3b7c2408	                cmp r15, qword [rsp + 8]	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400aa65	     0xf8fe5000000	                            jg 0x400ab50	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400aa6b	          0x486302	                 movsxd rax, dword [rdx]	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x400aa6e	            0x85c0	                           test eax, eax	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x400aa70	            0x7856	                            js 0x400aac8	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x400aa72	    0x488b35000000	            mov rsi, qword [0x0400aa79] 	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x400aa79	        0x488d0480	                  lea rax, [rax + rax*4]	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x400aa7d	        0x48c1e005	                              shl rax, 5	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x400aa81	    0x480386700200	            add rax, qword [rsi + 0x270]	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x400aa88	        0x448b7024	           mov r14d, dword [rax + 0x24] 	       918	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x400aa8c	          0x8b4030	            mov eax, dword [rax + 0x30] 	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x400aa8f	        0x89442414	             mov dword [rsp + 0x14], eax	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x400aa93	    0x488b2d000000	            mov rbp, qword [0x0400aa9a] 	       921	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aa9a	    0x448b2d000000	           mov r13d, dword [0x0400aaa1] 	       922	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aaa1	          0x8b5a20	            mov ebx, dword [rdx + 0x20] 	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x400aaa4	          0x4939ef	                            cmp r15, rbp	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x400aaa7	     0xf8f23ffffff	                            jg 0x400a9d0	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x400aaad	          0x4139dd	                           cmp r13d, ebx	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x400aab0	            0x7d26	                           jge 0x400aad8	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x400aab2	    0x891d00000000	            mov dword [0x0400aab8], ebx 	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x400aab8	          0x4889ee	                            mov rsi, rbp	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x400aabb	          0x4189dc	                           mov r12d, ebx	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x400aabe	      0xe92bffffff	                           jmp 0x400a9ee	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x400aac3	       0xf1f440000	                   nop dword [rax + rax]	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x400aac8	    0xc7442414ffff	     mov dword [rsp + 0x14], 0xffffffff 	       913	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x400aad0	          0x4531f6	                          xor r14d, r14d	       912	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x400aad3	            0xebbe	                           jmp 0x400aa93	       912	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x400aad5	           0xf1f00	                         nop dword [rax]	       912	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0x400aad8	        0x458d6501	                     lea r12d, [r13 + 1]	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x400aadc	          0x4889ee	                            mov rsi, rbp	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x400aadf	    0x448925000000	           mov dword [0x0400aae6], r12d 	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x400aae6	      0xe903ffffff	                           jmp 0x400a9ee	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x400aaeb	       0xf1f440000	                   nop dword [rax + rax]	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x400aaf0	    0x488b0d000000	            mov rcx, qword [0x0400aaf7] 	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x400aaf7	        0x4883c101	                              add rcx, 1	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400aafb	      0x48394c2418	            cmp qword [rsp + 0x18], rcx 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400ab00	    0x48890d000000	            mov qword [0x0400ab07], rcx 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400ab07	     0xf8fbbfeffff	                            jg 0x400a9c8	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x400ab0d	          0x4585f6	                         test r14d, r14d	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x400ab10	     0xf8539010000	                           jne 0x400ac4f	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x400ab16	      0xe89557ffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x400ab1b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1734	syntax.c	FUNCTION_23
0x400ab20	    0xc70500000000	               mov dword [0x0400ab2a], 0	      1732	syntax.c	FUNCTION_23
0x400ab2a	    0x48c705000000	               mov qword [0x0400ab35], 0	      1733	syntax.c	FUNCTION_23
0x400ab35	    0xc70500000000	     mov dword [0x0400ab3f], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400ab3f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1734	syntax.c	FUNCTION_23
0x400ab44	        0x4c8d70ff	                      lea r14, [rax - 1]	      1734	syntax.c	FUNCTION_23
0x400ab48	      0xe9fbfdffff	                           jmp 0x400a948	      1734	syntax.c	FUNCTION_23
0x400ab4d	           0xf1f00	                         nop dword [rax]	      1734	syntax.c	FUNCTION_23
0x400ab50	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400ab55	            0xeba0	                           jmp 0x400aaf7	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400ab57	    0x660f1f840000	                    nop word [rax + rax]	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400ab60	          0x4c89f9	                            mov rcx, r15	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400ab63	          0x4d89fc	                            mov r12, r15	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400ab66	            0xeb8f	                           jmp 0x400aaf7	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x400ab68	          0x4c89e9	                            mov rcx, r13	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400ab6b	    0x48c780200300	              mov qword [rax + 0x320], 0	      1284	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400ab76	          0x4189ec	                           mov r12d, ebp	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400ab79	    0x89a830030000	            mov dword [rax + 0x330], ebp	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400ab7f	          0x4889ca	                            mov rdx, rcx	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400ab82	      0xe954f7ffff	                           jmp 0x400a2db	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x400ab87	        0x488d1449	                  lea rdx, [rcx + rcx*2]	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x400ab8b	          0x48d1fa	                              sar rdx, 1	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x400ab8e	      0xe989fbffff	                           jmp 0x400a71c	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x400ab93	    0x48c744243800	               mov qword [rsp + 0x38], 0	       855	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x400ab9c	      0xe982fdffff	                           jmp 0x400a923	       855	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x400aba1	    0x48c744243000	               mov qword [rsp + 0x30], 0	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400abaa	      0xe95bf8ffff	                           jmp 0x400a40a	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400abaf	    0x488305000000	               add qword [0x0400abb7], 1	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x400abb7	      0xe8f478ffff	            call sym.store_current_state	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x400abbc	      0xe9a9f9ffff	                           jmp 0x400a56a	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x400abc1	          0x4889c7	                            mov rdi, rax	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x400abc4	      0xe8a7e1ffff	             call sym.load_current_state	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x400abc9	    0x488b0d000000	            mov rcx, qword [0x0400abd0] 	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x400abd0	    0x488b05000000	            mov rax, qword [0x0400abd7] 	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x400abd7	      0xe9c0fcffff	                           jmp 0x400a89c	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x400abdc	      0xe8cf56ffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x400abe1	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x400abe6	    0x48c705000000	               mov qword [0x0400abf1], 0	      1733	syntax.c	FUNCTION_23
0x400abf1	    0xc70500000000	     mov dword [0x0400abfb], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400abfb	    0x488b05000000	            mov rax, qword [0x0400ac02] 	      1734	syntax.c	FUNCTION_23
0x400ac02	        0x4883c101	                              add rcx, 1	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x400ac06	    0x48890d000000	            mov qword [0x0400ac0d], rcx 	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x400ac0d	      0xe98afcffff	                           jmp 0x400a89c	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x400ac12	      0xe89956ffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x400ac17	      0x488b442408	                mov rax, qword [rsp + 8]	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x400ac1c	    0x48c705000000	               mov qword [0x0400ac27], 0	      1733	syntax.c	FUNCTION_23
0x400ac27	    0xc70500000000	     mov dword [0x0400ac31], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400ac31	    0x488905000000	            mov qword [0x0400ac38], rax 	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x400ac38	          0x4889c1	                            mov rcx, rax	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x400ac3b	    0x488b05000000	            mov rax, qword [0x0400ac42] 	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x400ac42	      0xe955fcffff	                           jmp 0x400a89c	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x400ac47	          0x4989dd	                            mov r13, rbx	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400ac4a	      0xe951f8ffff	                           jmp 0x400a4a0	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400ac4f	      0xe85c56ffff	            call sym.clear_current_state	       964	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_17
0x400ac54	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x400ac58	            0x85c0	                           test eax, eax	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x400ac5a	            0x7810	                            js 0x400ac6c	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x400ac5c	            0x89c7	                            mov edi, eax	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x400ac5e	      0xe8ad7cffff	             call sym.push_current_state	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x400ac63	          0x83f801	                              cmp eax, 1	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x400ac66	     0xf8492000000	                            je 0x400acfe	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_18
0x400ac6c	        0x4183e610	                          and r14d, 0x10	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x400ac70	            0x7437	                            je 0x400aca9	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x400ac72	    0x486305000000	         movsxd rax, dword [0x0400ac79] 	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ac79	            0x85c0	                           test eax, eax	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ac7b	     0xf8590000000	                           jne 0x400ad11	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ac81	            0x31ff	                            xor edi, edi	       987	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	CALL_22
0x400ac83	    0x891d00000000	            mov dword [0x0400ac89], ebx 	       985	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x400ac89	    0x4c8925000000	            mov qword [0x0400ac90], r12 	       986	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x400ac90	      0xe83bf3ffff	                call sym.syn_finish_line	       987	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	CALL_22
0x400ac95	    0x488b05000000	            mov rax, qword [0x0400ac9c] 	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x400ac9c	        0x488d4801	                      lea rcx, [rax + 1]	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x400aca0	    0x48890d000000	            mov qword [0x0400aca7], rcx 	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x400aca7	            0xeb92	                           jmp 0x400ac3b	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x400aca9	      0x488b442408	                mov rax, qword [rsp + 8]	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x400acae	    0x488905000000	            mov qword [0x0400acb5], rax 	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x400acb5	          0x4889c1	                            mov rcx, rax	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x400acb8	            0xeb81	                           jmp 0x400ac3b	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x400acba	    0x488b15000000	            mov rdx, qword [0x0400acc1] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400acc1	    0x4c8b25000000	            mov r12, qword [0x0400acc8] 	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400acc8	    0x488b2d000000	            mov rbp, qword [0x0400accf] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400accf	    0x48891d000000	            mov qword [0x0400acd6], rbx 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400acd6	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400acdd	    0x48c744240801	                  mov qword [rsp + 8], 1	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400ace6	    0x488915000000	            mov qword [0x0400aced], rdx 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400aced	      0xe9defaffff	                           jmp 0x400a7d0	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400acf2	    0x488bb8100300	           mov rdi, qword [rax + 0x310] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400acf9	      0xe96dfeffff	                           jmp 0x400ab6b	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400acfe	    0x8b0500000000	            mov eax, dword [0x0400ad04] 	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x400ad04	          0x8d78ff	                      lea edi, [rax - 1]	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x400ad07	      0xe844d9ffff	                 call sym.update_si_attr	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x400ad0c	      0xe95bffffff	                           jmp 0x400ac6c	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x400ad11	    0x488b15000000	            mov rdx, qword [0x0400ad18] 	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ad18	        0x488d04c0	                  lea rax, [rax + rax*8]	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ad1c	    0x8b3500000000	            mov esi, dword [0x0400ad22] 	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x400ad22	        0x48c1e004	                              shl rax, 4	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ad26	    0x488dbc0270ff	             lea rdi, [rdx + rax - 0x90]	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ad2e	      0xba01000000	                              mov edx, 1	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x400ad33	        0x48896f28	             mov qword [rdi + 0x28], rbp	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ad37	        0x44896f30	            mov dword [rdi + 0x30], r13d	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x400ad3b	      0xe8e08affff	                  call sym.update_si_end	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x400ad40	      0xe85b83ffff	                  call sym.check_keepend	       983	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_21
0x400ad45	      0xe937ffffff	                           jmp 0x400ac81	       983	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_21
get_syntime_arg	SWITCH,1:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,0	6
0x40049f0	            0x31c0	                            xor eax, eax	      6725	syntax.c	FUNCTION_110
0x40049f2	          0x83fe03	                              cmp esi, 3	      6725	syntax.c	FUNCTION_110
0x40049f5	            0x770a	                            ja 0x4004a01	      6725	syntax.c	FUNCTION_110
0x40049f7	            0x89f6	                            mov esi, esi	      6725	syntax.c	FUNCTION_110
0x40049f9	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6725	syntax.c	FUNCTION_110
0x4004a01	            0xf3c3	                                     ret	      6734	syntax.c	FUNCTION_110
syn_cmd_list	SWITCH,0:WHILE,1:DO,0:IF,11:ELSE,7:FOR,2:functions,0:CALL,39	251
0x400b870	            0x4157	                                push r15	      3935	syntax.c	FUNCTION_63
0x400b872	            0x4156	                                push r14	      3935	syntax.c	FUNCTION_63
0x400b874	            0x4155	                                push r13	      3935	syntax.c	FUNCTION_63
0x400b876	            0x4154	                                push r12	      3935	syntax.c	FUNCTION_63
0x400b878	          0x4989fc	                            mov r12, rdi	      3935	syntax.c	FUNCTION_63
0x400b87b	              0x55	                                push rbp	      3935	syntax.c	FUNCTION_63
0x400b87c	              0x53	                                push rbx	      3935	syntax.c	FUNCTION_63
0x400b87d	          0x4189f5	                           mov r13d, esi	      3935	syntax.c	FUNCTION_63
0x400b880	        0x4883ec08	                              sub rsp, 8	      3935	syntax.c	FUNCTION_63
0x400b884	          0x488b1f	                    mov rbx, qword [rdi]	      3936	syntax.c	FUNCTION_63
0x400b887	          0x4889df	                            mov rdi, rbx	      3940	syntax.c	FUNCTION_63	CALL_1
0x400b88a	      0xe800000000	                          call 0x400b88f	      3940	syntax.c	FUNCTION_63	CALL_1
0x400b88f	      0x418b7c2430	            mov edi, dword [r12 + 0x30] 	      3941	syntax.c	FUNCTION_63	IF_1
0x400b894	      0x4989442408	                mov qword [r12 + 8], rax	      3940	syntax.c	FUNCTION_63	CALL_1
0x400b899	            0x85ff	                           test edi, edi	      3941	syntax.c	FUNCTION_63	IF_1
0x400b89b	     0xf8583010000	                           jne 0x400ba24	      3941	syntax.c	FUNCTION_63	IF_1
0x400b8a1	    0x488b05000000	            mov rax, qword [0x0400b8a8] 	      6445	syntax.c	FUNCTION_97
0x400b8a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6445	syntax.c	FUNCTION_97
0x400b8ac	    0x8bb060020000	           mov esi, dword [rax + 0x260] 	      6448	syntax.c	FUNCTION_97
0x400b8b2	            0x85f6	                           test esi, esi	      6448	syntax.c	FUNCTION_97
0x400b8b4	     0xf847e010000	                            je 0x400ba38	      6448	syntax.c	FUNCTION_97
0x400b8ba	          0x4585ed	                         test r13d, r13d	      3950	syntax.c	FUNCTION_63	IF_3
0x400b8bd	     0xf849d000000	                            je 0x400b960	      3950	syntax.c	FUNCTION_63	IF_3
0x400b8c3	    0x8b909c020000	           mov edx, dword [rax + 0x29c] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x400b8c9	          0xf6c201	                              test dl, 1	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x400b8cc	     0xf85fe020000	                           jne 0x400bbd0	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x400b8d2	          0x83e202	                              and edx, 2	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x400b8d5	      0xba05000000	                              mov edx, 5	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400b8da	     0xf8530020000	                           jne 0x400bb10	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x400b8e0	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x400b8e8	     0xf8422030000	                            je 0x400bc10	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x400b8ee	      0xbe00000000	                              mov esi, 0	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400b8f3	            0x31ff	                            xor edi, edi	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400b8f5	      0xe800000000	                          call 0x400b8fa	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400b8fa	          0x4889c7	                            mov rdi, rax	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400b8fd	      0xe800000000	                          call 0x400b902	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400b902	    0x488b05000000	            mov rax, qword [0x0400b909] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400b909	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400b90d	    0x488bb8a80200	           mov rdi, qword [rax + 0x2a8] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400b914	      0xe800000000	                          call 0x400b919	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400b919	            0x31ff	                            xor edi, edi	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400b91b	      0xba05000000	                              mov edx, 5	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400b920	      0xbe00000000	                              mov esi, 0	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400b925	      0xe800000000	                          call 0x400b92a	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400b92a	          0x4889c7	                            mov rdi, rax	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400b92d	      0xe800000000	                          call 0x400b932	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400b932	    0x488b05000000	            mov rax, qword [0x0400b939] 	      4050	syntax.c	FUNCTION_65	IF_1
0x400b939	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x400b93d	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      4050	syntax.c	FUNCTION_65	IF_1
0x400b945	     0xf8ed9000000	                           jle 0x400ba24	      4050	syntax.c	FUNCTION_65	IF_1
0x400b94b	        0x4883c408	                              add rsp, 8	      4022	syntax.c	FUNCTION_63
0x400b94f	              0x5b	                                 pop rbx	      4022	syntax.c	FUNCTION_63
0x400b950	              0x5d	                                 pop rbp	      4022	syntax.c	FUNCTION_63
0x400b951	            0x415c	                                 pop r12	      4022	syntax.c	FUNCTION_63
0x400b953	            0x415d	                                 pop r13	      4022	syntax.c	FUNCTION_63
0x400b955	            0x415e	                                 pop r14	      4022	syntax.c	FUNCTION_63
0x400b957	            0x415f	                                 pop r15	      4022	syntax.c	FUNCTION_63
0x400b959	      0xe92273ffff	           jmp sym.syn_match_msg.part.10	      4022	syntax.c	FUNCTION_63
0x400b95e	            0x6690	                                     nop	      4022	syntax.c	FUNCTION_63
0x400b960	            0x31ff	                            xor edi, edi	      3983	syntax.c	FUNCTION_63	CALL_24
0x400b962	      0xba05000000	                              mov edx, 5	      3983	syntax.c	FUNCTION_63	CALL_24
0x400b967	      0xbe00000000	                              mov esi, 0	      3983	syntax.c	FUNCTION_63	CALL_24
0x400b96c	      0xe800000000	                          call 0x400b971	      3983	syntax.c	FUNCTION_63	CALL_24
0x400b971	          0x4889c7	                            mov rdi, rax	      3983	syntax.c	FUNCTION_63	CALL_24
0x400b974	      0xe800000000	                          call 0x400b979	      3983	syntax.c	FUNCTION_63	CALL_24
0x400b979	           0xfb63b	                   movzx edi, byte [rbx]	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400b97c	      0xe800000000	                          call 0x400b981	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400b981	            0x85c0	                           test eax, eax	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400b983	     0xf842e010000	                            je 0x400bab7	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400b989	    0x8b1500000000	            mov edx, dword [0x0400b98f] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b98f	            0x85d2	                           test edx, edx	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b991	            0x7e36	                           jle 0x400b9c9	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b993	    0x8b0500000000	            mov eax, dword [0x0400b999] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b999	            0x85c0	                           test eax, eax	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b99b	            0x752c	                           jne 0x400b9c9	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b99d	      0xbd01000000	                              mov ebp, 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9a2	            0xeb0e	                           jmp 0x400b9b2	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9a4	         0xf1f4000	                         nop dword [rax]	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9a8	    0x8b0500000000	            mov eax, dword [0x0400b9ae] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9ae	            0x85c0	                           test eax, eax	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9b0	            0x7517	                           jne 0x400b9c9	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9b2	            0x31d2	                            xor edx, edx	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x400b9b4	            0x89ef	                            mov edi, ebp	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x400b9b6	          0x4489ee	                           mov esi, r13d	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x400b9b9	      0xe882faffff	                   call sym.syn_list_one	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x400b9be	          0x83c501	                              add ebp, 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9c1	    0x392d00000000	            cmp dword [0x0400b9c7], ebp 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9c7	            0x7ddf	                           jge 0x400b9a8	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400b9c9	    0x488b05000000	            mov rax, qword [0x0400b9d0] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9d4	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9da	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9dc	            0x7e39	                           jle 0x400ba17	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9de	    0x8b0500000000	            mov eax, dword [0x0400b9e4] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9e4	            0x31ed	                            xor ebp, ebp	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9e6	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9e8	            0x7410	                            je 0x400b9fa	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9ea	            0xeb2b	                           jmp 0x400ba17	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9ec	         0xf1f4000	                         nop dword [rax]	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9f0	    0x8b0500000000	            mov eax, dword [0x0400b9f6] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9f6	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9f8	            0x751d	                           jne 0x400ba17	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9fa	            0x89ef	                            mov edi, ebp	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x400b9fc	          0x83c501	                              add ebp, 1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400b9ff	      0xe8dc72ffff	               call sym.syn_list_cluster	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x400ba04	    0x488b05000000	            mov rax, qword [0x0400ba0b] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400ba0b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400ba0f	    0x39a878020000	           cmp dword [rax + 0x278], ebp 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400ba15	            0x7fd9	                            jg 0x400b9f0	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400ba17	          0x4889df	                            mov rdi, rbx	      4021	syntax.c	FUNCTION_63	CALL_39
0x400ba1a	      0xe800000000	                          call 0x400ba1f	      4021	syntax.c	FUNCTION_63	CALL_39
0x400ba1f	      0x4989442408	                mov qword [r12 + 8], rax	      4021	syntax.c	FUNCTION_63	CALL_39
0x400ba24	        0x4883c408	                              add rsp, 8	      4022	syntax.c	FUNCTION_63
0x400ba28	              0x5b	                                 pop rbx	      4022	syntax.c	FUNCTION_63
0x400ba29	              0x5d	                                 pop rbp	      4022	syntax.c	FUNCTION_63
0x400ba2a	            0x415c	                                 pop r12	      4022	syntax.c	FUNCTION_63
0x400ba2c	            0x415d	                                 pop r13	      4022	syntax.c	FUNCTION_63
0x400ba2e	            0x415e	                                 pop r14	      4022	syntax.c	FUNCTION_63
0x400ba30	            0x415f	                                 pop r15	      4022	syntax.c	FUNCTION_63
0x400ba32	              0xc3	                                     ret	      4022	syntax.c	FUNCTION_63
0x400ba33	       0xf1f440000	                   nop dword [rax + rax]	      4022	syntax.c	FUNCTION_63
0x400ba38	    0x8b8878020000	           mov ecx, dword [rax + 0x278] 	      6446	syntax.c	FUNCTION_97
0x400ba3e	            0x85c9	                           test ecx, ecx	      6446	syntax.c	FUNCTION_97
0x400ba40	     0xf8574feffff	                           jne 0x400b8ba	      6446	syntax.c	FUNCTION_97
0x400ba46	      0x4883780800	                  cmp qword [rax + 8], 0	      6447	syntax.c	FUNCTION_97
0x400ba4b	     0xf8569feffff	                           jne 0x400b8ba	      6447	syntax.c	FUNCTION_97
0x400ba51	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      6448	syntax.c	FUNCTION_97
0x400ba59	     0xf855bfeffff	                           jne 0x400b8ba	      6448	syntax.c	FUNCTION_97
0x400ba5f	            0x31ff	                            xor edi, edi	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400ba61	      0xba05000000	                              mov edx, 5	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400ba66	      0xbe00000000	                              mov esi, 0	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400ba6b	      0xe800000000	                          call 0x400ba70	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400ba70	        0x4883c408	                              add rsp, 8	      4022	syntax.c	FUNCTION_63
0x400ba74	          0x4889c7	                            mov rdi, rax	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400ba77	              0x5b	                                 pop rbx	      4022	syntax.c	FUNCTION_63
0x400ba78	              0x5d	                                 pop rbp	      4022	syntax.c	FUNCTION_63
0x400ba79	            0x415c	                                 pop r12	      4022	syntax.c	FUNCTION_63
0x400ba7b	            0x415d	                                 pop r13	      4022	syntax.c	FUNCTION_63
0x400ba7d	            0x415e	                                 pop r14	      4022	syntax.c	FUNCTION_63
0x400ba7f	            0x415f	                                 pop r15	      4022	syntax.c	FUNCTION_63
0x400ba81	      0xe900000000	                           jmp 0x400ba86	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400ba86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400ba90	      0xba05000000	                              mov edx, 5	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400ba95	      0xbe00000000	                              mov esi, 0	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400ba9a	            0x31ff	                            xor edi, edi	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400ba9c	      0xe800000000	                          call 0x400baa1	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400baa1	          0x4889de	                            mov rsi, rbx	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400baa4	          0x4889c7	                            mov rdi, rax	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400baa7	      0xe800000000	                          call 0x400baac	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x400baac	          0x4889ef	                            mov rdi, rbp	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x400baaf	      0xe800000000	                          call 0x400bab4	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x400bab4	          0x4889c3	                            mov rbx, rax	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x400bab7	           0xfb63b	                   movzx edi, byte [rbx]	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400baba	      0xe800000000	                          call 0x400babf	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400babf	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400bac1	     0xf8550ffffff	                           jne 0x400ba17	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400bac7	    0x8b0500000000	            mov eax, dword [0x0400bacd] 	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400bacd	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400bacf	     0xf8542ffffff	                           jne 0x400ba17	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x400bad5	          0x4889df	                            mov rdi, rbx	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x400bad8	      0xe800000000	                          call 0x400badd	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x400badd	          0x4889c6	                            mov rsi, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400bae0	          0x4889c5	                            mov rbp, rax	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x400bae3	          0x4829de	                            sub rsi, rbx	      5560	syntax.c	FUNCTION_85	CALL_1
0x400bae6	          0x803b40	                    cmp byte [rbx], 0x40	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x400bae9	     0xf8491000000	                            je 0x400bb80	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x400baef	          0x4889df	                            mov rdi, rbx	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x400baf2	      0xe800000000	                          call 0x400baf7	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x400baf7	            0x85c0	                           test eax, eax	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x400baf9	            0x7495	                            je 0x400ba90	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x400bafb	      0xba01000000	                              mov edx, 1	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400bb00	          0x4489ee	                           mov esi, r13d	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400bb03	            0x89c7	                            mov edi, eax	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400bb05	      0xe836f9ffff	                   call sym.syn_list_one	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400bb0a	            0xeba0	                           jmp 0x400baac	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400bb0c	         0xf1f4000	                         nop dword [rax]	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x400bb10	            0x31ff	                            xor edi, edi	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400bb12	      0xbe00000000	                              mov esi, 0	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400bb17	      0xe800000000	                          call 0x400bb1c	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400bb1c	          0x4889c7	                            mov rdi, rax	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400bb1f	      0xe800000000	                          call 0x400bb24	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x400bb24	    0x488b05000000	            mov rax, qword [0x0400bb2b] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400bb2b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400bb2f	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400bb37	     0xf8efb000000	                           jle 0x400bc38	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x400bb3d	      0xba05000000	                              mov edx, 5	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400bb42	      0xbe00000000	                              mov esi, 0	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400bb47	            0x31ff	                            xor edi, edi	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400bb49	      0xe800000000	                          call 0x400bb4e	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400bb4e	          0x4889c7	                            mov rdi, rax	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400bb51	      0xe800000000	                          call 0x400bb56	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400bb56	      0xe8955affff	                  call sym.syn_lines_msg	      3978	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_21
0x400bb5b	    0x488b05000000	            mov rax, qword [0x0400bb62] 	      4050	syntax.c	FUNCTION_65	IF_1
0x400bb62	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x400bb66	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      4050	syntax.c	FUNCTION_65	IF_1
0x400bb6e	     0xf8e05feffff	                           jle 0x400b979	      4050	syntax.c	FUNCTION_65	IF_1
0x400bb74	      0xe80771ffff	          call sym.syn_match_msg.part.10	      4050	syntax.c	FUNCTION_65	IF_1
0x400bb79	      0xe9fbfdffff	                           jmp 0x400b979	      4050	syntax.c	FUNCTION_65	IF_1
0x400bb7e	            0x6690	                                     nop	      4050	syntax.c	FUNCTION_65	IF_1
0x400bb80	        0x488d7b01	                      lea rdi, [rbx + 1]	      5560	syntax.c	FUNCTION_85	CALL_1
0x400bb84	          0x83ee01	                              sub esi, 1	      5560	syntax.c	FUNCTION_85	CALL_1
0x400bb87	      0xe800000000	                          call 0x400bb8c	      5560	syntax.c	FUNCTION_85	CALL_1
0x400bb8c	          0x4885c0	                           test rax, rax	      5561	syntax.c	FUNCTION_85	IF_1
0x400bb8f	          0x4989c6	                            mov r14, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400bb92	            0x742c	                            je 0x400bbc0	      5561	syntax.c	FUNCTION_85	IF_1
0x400bb94	          0x4889c7	                            mov rdi, rax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400bb97	      0xe84455ffff	                call sym.syn_scl_name2id	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400bb9c	          0x4c89f7	                            mov rdi, r14	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400bb9f	          0x4189c7	                           mov r15d, eax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0x400bba2	      0xe800000000	                          call 0x400bba7	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400bba7	          0x4585ff	                         test r15d, r15d	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x400bbaa	            0x7414	                            je 0x400bbc0	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x400bbac	    0x418dbf28a6ff	                 lea edi, [r15 - 0x59d8]	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x400bbb3	      0xe82871ffff	               call sym.syn_list_cluster	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x400bbb8	      0xe9effeffff	                           jmp 0x400baac	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x400bbbd	           0xf1f00	                         nop dword [rax]	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x400bbc0	      0xba05000000	                              mov edx, 5	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400bbc5	      0xbe00000000	                              mov esi, 0	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400bbca	      0xe9cbfeffff	                           jmp 0x400ba9a	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400bbcf	              0x90	                                     nop	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400bbd0	      0xba05000000	                              mov edx, 5	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400bbd5	      0xbe00000000	                              mov esi, 0	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400bbda	            0x31ff	                            xor edi, edi	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400bbdc	      0xe800000000	                          call 0x400bbe1	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400bbe1	          0x4889c7	                            mov rdi, rax	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400bbe4	      0xe800000000	                          call 0x400bbe9	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400bbe9	      0xe8025affff	                  call sym.syn_lines_msg	      3955	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_7
0x400bbee	    0x488b05000000	            mov rax, qword [0x0400bbf5] 	      4050	syntax.c	FUNCTION_65	IF_1
0x400bbf5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x400bbf9	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      4050	syntax.c	FUNCTION_65	IF_1
0x400bc01	     0xf8f44fdffff	                            jg 0x400b94b	      4050	syntax.c	FUNCTION_65	IF_1
0x400bc07	      0xe918feffff	                           jmp 0x400ba24	      4050	syntax.c	FUNCTION_65	IF_1
0x400bc0c	         0xf1f4000	                         nop dword [rax]	      4050	syntax.c	FUNCTION_65	IF_1
0x400bc10	            0x31ff	                            xor edi, edi	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400bc12	      0xbe00000000	                              mov esi, 0	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400bc17	      0xe800000000	                          call 0x400bc1c	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400bc1c	        0x4883c408	                              add rsp, 8	      4022	syntax.c	FUNCTION_63
0x400bc20	          0x4889c7	                            mov rdi, rax	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400bc23	              0x5b	                                 pop rbx	      4022	syntax.c	FUNCTION_63
0x400bc24	              0x5d	                                 pop rbp	      4022	syntax.c	FUNCTION_63
0x400bc25	            0x415c	                                 pop r12	      4022	syntax.c	FUNCTION_63
0x400bc27	            0x415d	                                 pop r13	      4022	syntax.c	FUNCTION_63
0x400bc29	            0x415e	                                 pop r14	      4022	syntax.c	FUNCTION_63
0x400bc2b	            0x415f	                                 pop r15	      4022	syntax.c	FUNCTION_63
0x400bc2d	      0xe900000000	                           jmp 0x400bc32	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400bc32	    0x660f1f440000	                    nop word [rax + rax]	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400bc38	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x400bc40	     0xf8ff7feffff	                            jg 0x400bb3d	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x400bc46	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x400bc4e	     0xf8fe9feffff	                            jg 0x400bb3d	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x400bc54	      0xe920fdffff	                           jmp 0x400b979	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
highlight_changed	SWITCH,1:WHILE,1:DO,0:IF,16:ELSE,5:FOR,5:functions,0:CALL,18	349
0x400ca40	            0x4157	                                push r15	     10039	syntax.c	FUNCTION_163
0x400ca42	            0x4156	                                push r14	     10039	syntax.c	FUNCTION_163
0x400ca44	      0xba00000000	                              mov edx, 0	     10039	syntax.c	FUNCTION_163
0x400ca49	            0x4155	                                push r13	     10039	syntax.c	FUNCTION_163
0x400ca4b	            0x4154	                                push r12	     10039	syntax.c	FUNCTION_163
0x400ca4d	              0x55	                                push rbp	     10039	syntax.c	FUNCTION_163
0x400ca4e	              0x53	                                push rbx	     10039	syntax.c	FUNCTION_163
0x400ca4f	        0x4883ec48	                           sub rsp, 0x48	     10039	syntax.c	FUNCTION_163
0x400ca53	    0xc70500000000	               mov dword [0x0400ca5d], 0	     10060	syntax.c	FUNCTION_163
0x400ca5d	    0x64488b042528	                mov rax, qword fs:[0x28]	     10039	syntax.c	FUNCTION_163
0x400ca66	      0x4889442438	             mov qword [rsp + 0x38], rax	     10039	syntax.c	FUNCTION_163
0x400ca6b	            0x31c0	                            xor eax, eax	     10039	syntax.c	FUNCTION_163
0x400ca6d	      0xb800000000	                              mov eax, 0	     10039	syntax.c	FUNCTION_163
0x400ca72	    0x660f1f440000	                    nop word [rax + rax]	     10039	syntax.c	FUNCTION_163
0x400ca78	    0xc70000000000	                      mov dword [rax], 0	     10066	syntax.c	FUNCTION_163	FOR_1
0x400ca7e	        0x4883c004	                              add rax, 4	     10066	syntax.c	FUNCTION_163	FOR_1
0x400ca82	          0x4839c2	                            cmp rdx, rax	     10065	syntax.c	FUNCTION_163	FOR_1
0x400ca85	            0x75f1	                           jne 0x400ca78	     10065	syntax.c	FUNCTION_163	FOR_1
0x400ca87	    0x41be01000000	                             mov r14d, 1	     10065	syntax.c	FUNCTION_163	FOR_1
0x400ca8d	          0x4531ed	                          xor r13d, r13d	     10065	syntax.c	FUNCTION_163	FOR_1
0x400ca90	          0x4531e4	                          xor r12d, r12d	     10065	syntax.c	FUNCTION_163	FOR_1
0x400ca93	            0x31db	                            xor ebx, ebx	     10065	syntax.c	FUNCTION_163	FOR_1
0x400ca95	      0xbdffffffff	                     mov ebp, 0xffffffff	     10065	syntax.c	FUNCTION_163	FOR_1
0x400ca9a	        0x4183fe01	                             cmp r14d, 1	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x400ca9e	     0xf8436050000	                            je 0x400cfda	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x400caa4	    0x488b05000000	            mov rax, qword [0x0400caab] 	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x400caab	          0x4885c0	                           test rax, rax	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400caae	     0xf8474020000	                            je 0x400cd28	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400cab4	           0xfb638	                   movzx edi, byte [rax]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cab7	          0x4084ff	                           test dil, dil	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400caba	     0xf8468020000	                            je 0x400cd28	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cac0	            0x31d2	                            xor edx, edx	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cac2	      0xbe38000000	                           mov esi, 0x38	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cac7	            0xeb18	                           jmp 0x400cae1	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cac9	     0xf1f80000000	                         nop dword [rax]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cad0	        0x4883c201	                              add rdx, 1	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cad4	        0x4883fa2e	                           cmp rdx, 0x2e	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400cad8	            0x747e	                            je 0x400cb58	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400cada	    0x8b3495000000	                  mov esi, dword [rdx*4]	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x400cae1	            0x39f7	                            cmp edi, esi	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400cae3	          0x4189d7	                           mov r15d, edx	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400cae6	            0x75e8	                           jne 0x400cad0	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x400cae8	         0xfb65001	               movzx edx, byte [rax + 1]	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400caec	        0x488d7801	                      lea rdi, [rax + 1]	     10086	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400caf0	            0x84d2	                             test dl, dl	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400caf2	            0x7464	                            je 0x400cb58	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x400caf4	            0x31c0	                            xor eax, eax	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400caf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400cb00	          0x80fa2c	                            cmp dl, 0x2c	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400cb03	            0x743a	                            je 0x400cb3f	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400cb05	          0x80fa20	                            cmp dl, 0x20	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x400cb08	            0x7426	                            je 0x400cb30	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x400cb0a	          0x80fa09	                               cmp dl, 9	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x400cb0d	            0x7421	                            je 0x400cb30	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x400cb0f	      0x3dff000000	                           cmp eax, 0xff	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x400cb14	            0x7f42	                            jg 0x400cb58	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x400cb16	          0x83ea2d	                           sub edx, 0x2d	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb19	          0x80fa48	                            cmp dl, 0x48	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb1c	            0x773a	                            ja 0x400cb58	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb1e	           0xfb6d2	                           movzx edx, dl	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb21	    0xff24d5000000	                       jmp qword [rdx*8]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb28	     0xf1f84000000	                   nop dword [rax + rax]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb30	          0x4889fa	                            mov rdx, rdi	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb33	        0x488d7a01	                      lea rdi, [rdx + 1]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400cb37	         0xfb65201	               movzx edx, byte [rdx + 1]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400cb3b	            0x84d2	                             test dl, dl	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400cb3d	            0x75c1	                           jne 0x400cb00	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400cb3f	          0x4963cf	                        movsxd rcx, r15d	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cb42	    0x89048d000000	                  mov dword [rcx*4], eax	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x400cb49	      0xe800000000	                          call 0x400cb4e	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x400cb4e	      0xe961ffffff	                           jmp 0x400cab4	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x400cb53	       0xf1f440000	                   nop dword [rax + rax]	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x400cb58	            0x31c0	                            xor eax, eax	     10146	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb5a	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	     10216	syntax.c	FUNCTION_163
0x400cb5f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     10216	syntax.c	FUNCTION_163
0x400cb68	     0xf8583040000	                           jne 0x400cff1	     10216	syntax.c	FUNCTION_163
0x400cb6e	        0x4883c448	                           add rsp, 0x48	     10216	syntax.c	FUNCTION_163
0x400cb72	              0x5b	                                 pop rbx	     10216	syntax.c	FUNCTION_163
0x400cb73	              0x5d	                                 pop rbp	     10216	syntax.c	FUNCTION_163
0x400cb74	            0x415c	                                 pop r12	     10216	syntax.c	FUNCTION_163
0x400cb76	            0x415d	                                 pop r13	     10216	syntax.c	FUNCTION_163
0x400cb78	            0x415e	                                 pop r14	     10216	syntax.c	FUNCTION_163
0x400cb7a	            0x415f	                                 pop r15	     10216	syntax.c	FUNCTION_163
0x400cb7c	              0xc3	                                     ret	     10216	syntax.c	FUNCTION_163
0x400cb7d	           0xf1f00	                         nop dword [rax]	     10216	syntax.c	FUNCTION_163
0x400cb80	          0x83c808	                               or eax, 8	     10116	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb83	          0x4889fa	                            mov rdx, rdi	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb86	            0xebab	                           jmp 0x400cb33	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb88	     0xf1f84000000	                   nop dword [rax + rax]	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb90	             0xc80	                             or al, 0x80	     10120	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb92	          0x4889fa	                            mov rdx, rdi	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb95	            0xeb9c	                           jmp 0x400cb33	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cb97	    0x660f1f840000	                    nop word [rax + rax]	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cba0	          0x83c820	                            or eax, 0x20	     10114	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cba3	          0x4889fa	                            mov rdx, rdi	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cba6	            0xeb8b	                           jmp 0x400cb33	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cba8	     0xf1f84000000	                   nop dword [rax + rax]	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbb0	          0x83c801	                               or eax, 1	     10112	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbb3	          0x4889fa	                            mov rdx, rdi	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbb6	      0xe978ffffff	                           jmp 0x400cb33	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbbb	       0xf1f440000	                   nop dword [rax + rax]	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbc0	          0x83c804	                               or eax, 4	     10107	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbc3	          0x4889fa	                            mov rdx, rdi	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbc6	      0xe968ffffff	                           jmp 0x400cb33	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbcb	       0xf1f440000	                   nop dword [rax + rax]	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbd0	          0x83c810	                            or eax, 0x10	     10118	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbd3	          0x4889fa	                            mov rdx, rdi	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbd6	      0xe958ffffff	                           jmp 0x400cb33	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbdb	       0xf1f440000	                   nop dword [rax + rax]	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbe0	          0x83c802	                               or eax, 2	     10105	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbe3	          0x4889fa	                            mov rdx, rdi	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbe6	      0xe948ffffff	                           jmp 0x400cb33	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbeb	       0xf1f440000	                   nop dword [rax + rax]	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbf0	            0x85c0	                           test eax, eax	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400cbf2	        0x4c8d4701	                       lea r8, [rdi + 1]	     10122	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cbf6	     0xf855cffffff	                           jne 0x400cb58	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400cbfc	        0x807f0100	                   cmp byte [rdi + 1], 0	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400cc00	     0xf8452ffffff	                            je 0x400cb58	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x400cc06	          0x4c89c7	                             mov rdi, r8	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400cc09	      0xbe2c000000	                           mov esi, 0x2c	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400cc0e	      0x4c89442410	              mov qword [rsp + 0x10], r8	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400cc13	      0xe800000000	                          call 0x400cc18	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400cc18	          0x4885c0	                           test rax, rax	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x400cc1b	      0x4889442408	                mov qword [rsp + 8], rax	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x400cc20	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x400cc25	     0xf840b030000	                            je 0x400cf36	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x400cc2b	      0x488b742408	                mov rsi, qword [rsp + 8]	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400cc30	          0x4c89c7	                             mov rdi, r8	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400cc33	          0x4c29c6	                             sub rsi, r8	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400cc36	      0xe800000000	                          call 0x400cc3b	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400cc3b	            0x85c0	                           test eax, eax	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x400cc3d	          0x4189c0	                            mov r8d, eax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x400cc40	     0xf8412ffffff	                            je 0x400cb58	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x400cc46	            0x89c7	                            mov edi, eax	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x400cc48	      0xe800000000	                          call 0x400cc4d	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x400cc4d	      0x488b542408	                mov rdx, qword [rsp + 8]	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cc52	        0x4883ea01	                              sub rdx, 1	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x400cc56	        0x4183ff0e	                           cmp r15d, 0xe	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x400cc5a	     0xf841f020000	                            je 0x400ce7f	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x400cc60	        0x4183ff2c	                          cmp r15d, 0x2c	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x400cc64	     0xf8473020000	                            je 0x400cedd	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x400cc6a	        0x4183ff2d	                          cmp r15d, 0x2d	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x400cc6e	            0x745e	                            je 0x400ccce	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x400cc70	        0x4183ff0d	                           cmp r15d, 0xd	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400cc74	     0xf85b9feffff	                           jne 0x400cb33	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x400cc7a	          0x4585c0	                           test r8d, r8d	      9879	syntax.c	FUNCTION_159	IF_1
0x400cc7d	    0x448b15000000	           mov r10d, dword [0x0400cc84] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400cc84	     0xf8ecb020000	                           jle 0x400cf55	      9879	syntax.c	FUNCTION_159	IF_1
0x400cc8a	          0x4539d0	                           cmp r8d, r10d	      9879	syntax.c	FUNCTION_159	IF_1
0x400cc8d	     0xf8fc2020000	                            jg 0x400cf55	      9879	syntax.c	FUNCTION_159	IF_1
0x400cc93	    0x4c8b1d000000	            mov r11, qword [0x0400cc9a] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400cc9a	      0xbf64000000	                           mov edi, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x400cc9f	            0xeb11	                           jmp 0x400ccb2	      9879	syntax.c	FUNCTION_159	IF_1
0x400cca1	          0x4139ea	                           cmp r10d, ebp	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cca4	            0x7c20	                            jl 0x400ccc6	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cca6	          0x83ef01	                              sub edi, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x400cca9	          0x4189e8	                            mov r8d, ebp	      9886	syntax.c	FUNCTION_159	FOR_1
0x400ccac	     0xf8481feffff	                            je 0x400cb33	      9886	syntax.c	FUNCTION_159	FOR_1
0x400ccb2	          0x4963f0	                         movsxd rsi, r8d	      9888	syntax.c	FUNCTION_159	FOR_1
0x400ccb5	        0x4c8d0cf6	                   lea r9, [rsi + rsi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400ccb9	        0x4a8d344e	                   lea rsi, [rsi + r9*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400ccbd	      0x418b6cf3f0	     mov ebp, dword [r11 + rsi*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ccc2	            0x85ed	                           test ebp, ebp	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ccc4	            0x75db	                           jne 0x400cca1	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ccc6	          0x4489c5	                            mov ebp, r8d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ccc9	      0xe965feffff	                           jmp 0x400cb33	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ccce	    0x448b15000000	           mov r10d, dword [0x0400ccd5] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400ccd5	          0x4539d0	                           cmp r8d, r10d	      9879	syntax.c	FUNCTION_159	IF_1
0x400ccd8	     0xf8ff4020000	                            jg 0x400cfd2	      9879	syntax.c	FUNCTION_159	IF_1
0x400ccde	          0x4585c0	                           test r8d, r8d	      9879	syntax.c	FUNCTION_159	IF_1
0x400cce1	     0xf8eeb020000	                           jle 0x400cfd2	      9879	syntax.c	FUNCTION_159	IF_1
0x400cce7	    0x4c8b1d000000	            mov r11, qword [0x0400ccee] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400ccee	      0xbf64000000	                           mov edi, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x400ccf3	            0xeb11	                           jmp 0x400cd06	      9879	syntax.c	FUNCTION_159	IF_1
0x400ccf5	          0x4585ed	                         test r13d, r13d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ccf8	            0x7421	                            je 0x400cd1b	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ccfa	          0x83ef01	                              sub edi, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x400ccfd	          0x4589e8	                           mov r8d, r13d	      9886	syntax.c	FUNCTION_159	FOR_1
0x400cd00	     0xf842dfeffff	                            je 0x400cb33	      9886	syntax.c	FUNCTION_159	FOR_1
0x400cd06	          0x4963f0	                         movsxd rsi, r8d	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cd09	        0x4c8d0cf6	                   lea r9, [rsi + rsi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cd0d	        0x4a8d344e	                   lea rsi, [rsi + r9*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cd11	      0x458b6cf3f0	    mov r13d, dword [r11 + rsi*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cd16	          0x4539ea	                          cmp r10d, r13d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cd19	            0x7dda	                           jge 0x400ccf5	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cd1b	          0x4589c5	                           mov r13d, r8d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cd1e	      0xe910feffff	                           jmp 0x400cb33	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cd23	       0xf1f440000	                   nop dword [rax + rax]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cd28	        0x4183fe02	                             cmp r14d, 2	     10072	syntax.c	FUNCTION_163	FOR_2
0x400cd2c	     0xf85b6020000	                           jne 0x400cfe8	     10072	syntax.c	FUNCTION_163	FOR_2
0x400cd32	      0xbe1c000000	                           mov esi, 0x1c	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400cd37	      0xbf00000000	                              mov edi, 0	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400cd3c	      0xe800000000	                          call 0x400cd41	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400cd41	            0x85c0	                           test eax, eax	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400cd43	     0xf840ffeffff	                            je 0x400cb58	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x400cd49	    0x486305000000	         movsxd rax, dword [0x0400cd50] 	     10169	syntax.c	FUNCTION_163
0x400cd50	          0x83fdff	             cmp ebp, 0xffffffffffffffff	     10170	syntax.c	FUNCTION_163	IF_15
0x400cd53	        0x89442408	                mov dword [rsp + 8], eax	     10169	syntax.c	FUNCTION_163
0x400cd57	     0xf84ff010000	                            je 0x400cf5c	     10170	syntax.c	FUNCTION_163	IF_15
0x400cd5d	        0x8b442408	                mov eax, dword [rsp + 8]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400cd61	          0x4531ff	                          xor r15d, r15d	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x400cd64	          0x8d4809	                      lea ecx, [rax + 9]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400cd67	          0x83c012	                           add eax, 0x12	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400cd6a	        0x8944241c	             mov dword [rsp + 0x1c], eax	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400cd6e	        0x894c2410	             mov dword [rsp + 0x10], ecx	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400cd72	            0xeb42	                           jmp 0x400cdb6	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400cd74	         0xf1f4000	                         nop dword [rax]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400cd78	    0x42c704bd0000	                    mov dword [r15*4], 0	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400cd84	    0x42c704bd0000	                    mov dword [r15*4], 0	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400cd90	    0x42c704bd0000	                    mov dword [r15*4], 0	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400cd9c	    0x42c704bd0000	                    mov dword [r15*4], 0	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400cda8	        0x4983c701	                              add r15, 1	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400cdac	        0x4983ff09	                              cmp r15, 9	     10179	syntax.c	FUNCTION_163	FOR_5
0x400cdb0	     0xf84b5000000	                            je 0x400ce6b	     10179	syntax.c	FUNCTION_163	FOR_5
0x400cdb6	        0x458d4701	                      lea r8d, [r15 + 1]	        33	stdio2.h	FUNCTION_182	CALL_1
0x400cdba	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_182	CALL_1
0x400cdbf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x400cdc4	      0xba0a000000	                            mov edx, 0xa	        33	stdio2.h	FUNCTION_182	CALL_1
0x400cdc9	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x400cdce	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x400cdd0	      0xe800000000	                          call 0x400cdd5	        33	stdio2.h	FUNCTION_182	CALL_1
0x400cdd5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x400cdda	      0xe800000000	                          call 0x400cddf	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x400cddf	            0x85c0	                           test eax, eax	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400cde1	          0x4189c6	                           mov r14d, eax	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_14
0x400cde4	            0x7492	                            je 0x400cd78	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x400cde6	            0x89c7	                            mov edi, eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_15
0x400cde8	      0xe800000000	                          call 0x400cded	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_15
0x400cded	        0x4883ec08	                              sub rsp, 8	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400cdf1	          0x4589f8	                           mov r8d, r15d	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400cdf4	    0x41b90e000000	                            mov r9d, 0xe	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400cdfa	      0x6800000000	                                  push 0	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400cdff	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400ce03	            0x89da	                            mov edx, ebx	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400ce05	            0x89ee	                            mov esi, ebp	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400ce07	          0x4489f7	                           mov edi, r14d	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400ce0a	    0x428904bd0000	                  mov dword [r15*4], eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_15
0x400ce12	      0xe8f9f8ffff	                call sym.combine_stl_hlt	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x400ce17	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400ce1b	          0x4589f8	                           mov r8d, r15d	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400ce1e	    0x41b92c000000	                           mov r9d, 0x2c	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400ce24	          0x4489e2	                           mov edx, r12d	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400ce27	            0x89ee	                            mov esi, ebp	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400ce29	          0x4489f7	                           mov edi, r14d	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400ce2c	    0x48c704240000	                      mov qword [rsp], 0	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400ce34	      0xe8d7f8ffff	                call sym.combine_stl_hlt	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x400ce39	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce3d	          0x4589f8	                           mov r8d, r15d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce40	          0x4489ea	                           mov edx, r13d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce43	    0x41b92d000000	                           mov r9d, 0x2d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce49	            0x89ee	                            mov esi, ebp	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce4b	          0x4489f7	                           mov edi, r14d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce4e	        0x4983c701	                              add r15, 1	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce52	    0x48c704240000	                      mov qword [rsp], 0	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce5a	      0xe8b1f8ffff	                call sym.combine_stl_hlt	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce5f	        0x4983ff09	                              cmp r15, 9	     10179	syntax.c	FUNCTION_163	FOR_5
0x400ce63	              0x58	                                 pop rax	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce64	              0x5a	                                 pop rdx	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x400ce65	     0xf854bffffff	                           jne 0x400cdb6	     10179	syntax.c	FUNCTION_163	FOR_5
0x400ce6b	        0x8b442408	                mov eax, dword [rsp + 8]	     10210	syntax.c	FUNCTION_163
0x400ce6f	    0x890500000000	            mov dword [0x0400ce75], eax 	     10210	syntax.c	FUNCTION_163
0x400ce75	      0xb801000000	                              mov eax, 1	     10215	syntax.c	FUNCTION_163
0x400ce7a	      0xe9dbfcffff	                           jmp 0x400cb5a	     10215	syntax.c	FUNCTION_163
0x400ce7f	          0x4585c0	                           test r8d, r8d	      9879	syntax.c	FUNCTION_159	IF_1
0x400ce82	    0x448b15000000	           mov r10d, dword [0x0400ce89] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400ce89	     0xf8e34010000	                           jle 0x400cfc3	      9879	syntax.c	FUNCTION_159	IF_1
0x400ce8f	          0x4539d0	                           cmp r8d, r10d	      9879	syntax.c	FUNCTION_159	IF_1
0x400ce92	     0xf8f2b010000	                            jg 0x400cfc3	      9879	syntax.c	FUNCTION_159	IF_1
0x400ce98	    0x4c8b1d000000	            mov r11, qword [0x0400ce9f] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400ce9f	      0xbf64000000	                           mov edi, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x400cea4	            0xeb1b	                           jmp 0x400cec1	      9879	syntax.c	FUNCTION_159	IF_1
0x400cea6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x400ceb0	          0x4139da	                           cmp r10d, ebx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ceb3	            0x7c20	                            jl 0x400ced5	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ceb5	          0x83ef01	                              sub edi, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x400ceb8	          0x4189d8	                            mov r8d, ebx	      9886	syntax.c	FUNCTION_159	FOR_1
0x400cebb	     0xf8472fcffff	                            je 0x400cb33	      9886	syntax.c	FUNCTION_159	FOR_1
0x400cec1	          0x4963f0	                         movsxd rsi, r8d	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cec4	        0x4c8d0cf6	                   lea r9, [rsi + rsi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cec8	        0x4a8d344e	                   lea rsi, [rsi + r9*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cecc	      0x418b5cf3f0	     mov ebx, dword [r11 + rsi*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ced1	            0x85db	                           test ebx, ebx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ced3	            0x75db	                           jne 0x400ceb0	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ced5	          0x4489c3	                            mov ebx, r8d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400ced8	      0xe956fcffff	                           jmp 0x400cb33	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cedd	          0x4585c0	                           test r8d, r8d	      9879	syntax.c	FUNCTION_159	IF_1
0x400cee0	    0x448b15000000	           mov r10d, dword [0x0400cee7] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400cee7	     0xf8edd000000	                           jle 0x400cfca	      9879	syntax.c	FUNCTION_159	IF_1
0x400ceed	          0x4539d0	                           cmp r8d, r10d	      9879	syntax.c	FUNCTION_159	IF_1
0x400cef0	     0xf8fd4000000	                            jg 0x400cfca	      9879	syntax.c	FUNCTION_159	IF_1
0x400cef6	    0x4c8b1d000000	            mov r11, qword [0x0400cefd] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400cefd	      0xbf64000000	                           mov edi, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x400cf02	            0xeb15	                           jmp 0x400cf19	      9879	syntax.c	FUNCTION_159	IF_1
0x400cf04	         0xf1f4000	                         nop dword [rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x400cf08	          0x4585e4	                         test r12d, r12d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cf0b	            0x7421	                            je 0x400cf2e	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cf0d	          0x83ef01	                              sub edi, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x400cf10	          0x4589e0	                           mov r8d, r12d	      9886	syntax.c	FUNCTION_159	FOR_1
0x400cf13	     0xf841afcffff	                            je 0x400cb33	      9886	syntax.c	FUNCTION_159	FOR_1
0x400cf19	          0x4963f0	                         movsxd rsi, r8d	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cf1c	        0x4c8d0cf6	                   lea r9, [rsi + rsi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cf20	        0x4a8d344e	                   lea rsi, [rsi + r9*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400cf24	      0x458b64f3f0	    mov r12d, dword [r11 + rsi*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cf29	          0x4539e2	                          cmp r10d, r12d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cf2c	            0x7dda	                           jge 0x400cf08	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cf2e	          0x4589c4	                           mov r12d, r8d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cf31	      0xe9fdfbffff	                           jmp 0x400cb33	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400cf36	          0x4c89c7	                             mov rdi, r8	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400cf39	      0x4c89442408	                 mov qword [rsp + 8], r8	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400cf3e	      0xe800000000	                          call 0x400cf43	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400cf43	      0x4c8b442408	                 mov r8, qword [rsp + 8]	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400cf48	          0x4c01c0	                             add rax, r8	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400cf4b	      0x4889442408	                mov qword [rsp + 8], rax	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400cf50	      0xe9d6fcffff	                           jmp 0x400cc2b	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x400cf55	            0x31ed	                            xor ebp, ebp	      9880	syntax.c	FUNCTION_159	IF_1
0x400cf57	      0xe9d7fbffff	                           jmp 0x400cb33	      9880	syntax.c	FUNCTION_159	IF_1
0x400cf5c	        0x488d14c0	                  lea rdx, [rax + rax*8]	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x400cf60	            0x89c6	                            mov esi, eax	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x400cf62	          0x8d6e13	                   lea ebp, [rsi + 0x13]	     10176	syntax.c	FUNCTION_163	IF_15
0x400cf65	        0x488d1450	                  lea rdx, [rax + rdx*2]	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x400cf69	    0x488b05000000	            mov rax, qword [0x0400cf70] 	        90	string3.h	FUNCTION_173	CALL_6
0x400cf70	        0x48c1e203	                              shl rdx, 3	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x400cf74	    0x488d84100810	           lea rax, [rax + rdx + 0x1008]	        90	string3.h	FUNCTION_173	CALL_6
0x400cf7c	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x400cf80	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cf87	    0x48c780900000	               mov qword [rax + 0x90], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cf92	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x400cf96	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x400cf99	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_173	CALL_6
0x400cf9c	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x400cf9e	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_173	CALL_6
0x400cfa4	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x400cfa7	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x400cfaa	    0x488b05000000	            mov rax, qword [0x0400cfb1] 	     10175	syntax.c	FUNCTION_163	IF_15
0x400cfb1	    0x8b0d00000000	            mov ecx, dword [0x0400cfb7] 	     10175	syntax.c	FUNCTION_163	IF_15
0x400cfb7	    0x898c10c40a00	      mov dword [rax + rdx + 0xac4], ecx	     10175	syntax.c	FUNCTION_163	IF_15
0x400cfbe	      0xe99afdffff	                           jmp 0x400cd5d	     10175	syntax.c	FUNCTION_163	IF_15
0x400cfc3	            0x31db	                            xor ebx, ebx	      9880	syntax.c	FUNCTION_159	IF_1
0x400cfc5	      0xe969fbffff	                           jmp 0x400cb33	      9880	syntax.c	FUNCTION_159	IF_1
0x400cfca	          0x4531e4	                          xor r12d, r12d	      9880	syntax.c	FUNCTION_159	IF_1
0x400cfcd	      0xe961fbffff	                           jmp 0x400cb33	      9880	syntax.c	FUNCTION_159	IF_1
0x400cfd2	          0x4531ed	                          xor r13d, r13d	      9880	syntax.c	FUNCTION_159	IF_1
0x400cfd5	      0xe959fbffff	                           jmp 0x400cb33	      9880	syntax.c	FUNCTION_159	IF_1
0x400cfda	      0xe800000000	                          call 0x400cfdf	     10077	syntax.c	FUNCTION_163	FOR_2	CALL_1
0x400cfdf	          0x4885c0	                           test rax, rax	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400cfe2	     0xf85ccfaffff	                           jne 0x400cab4	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400cfe8	        0x4183c601	                             add r14d, 1	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400cfec	      0xe9a9faffff	                           jmp 0x400ca9a	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x400cff1	      0xe800000000	                          call 0x400cff6	     10216	syntax.c	FUNCTION_163
syntax_end_parsing	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,0:FOR,0:functions,0:CALL,1	30
0x4003cb0	    0x488b05000000	            mov rax, qword [0x04003cb7] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4003cb7	    0x488b90200300	           mov rdx, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4003cbe	          0x4885d2	                           test rdx, rdx	      1455	syntax.c	FUNCTION_18	FOR_1
0x4003cc1	            0x743d	                            je 0x4003d00	      1455	syntax.c	FUNCTION_18	FOR_1
0x4003cc3	        0x483b7a08	                cmp rdi, qword [rdx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4003cc7	            0x743f	                            je 0x4003d08	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4003cc9	            0x7d10	                           jge 0x4003cdb	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4003ccb	            0xeb40	                           jmp 0x4003d0d	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4003ccd	           0xf1f00	                         nop dword [rax]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4003cd0	        0x483b7808	                cmp rdi, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4003cd4	            0x7418	                            je 0x4003cee	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4003cd6	            0x7c0b	                            jl 0x4003ce3	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4003cd8	          0x4889c2	                            mov rdx, rax	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4003cdb	          0x488b02	                    mov rax, qword [rdx]	      1455	syntax.c	FUNCTION_18	FOR_1
0x4003cde	          0x4885c0	                           test rax, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4003ce1	            0x75ed	                           jne 0x4003cd0	      1455	syntax.c	FUNCTION_18	FOR_1
0x4003ce3	        0x483b7a08	                cmp rdi, qword [rdx + 8]	      1717	syntax.c	FUNCTION_22	IF_1
0x4003ce7	            0x7e1f	                           jle 0x4003d08	      1717	syntax.c	FUNCTION_22	IF_1
0x4003ce9	          0x4885c0	                           test rax, rax	      1720	syntax.c	FUNCTION_22	IF_2
0x4003cec	            0x7421	                            je 0x4003d0f	      1720	syntax.c	FUNCTION_22	IF_2
0x4003cee	    0x4883b8d00000	               cmp qword [rax + 0xd0], 0	      1720	syntax.c	FUNCTION_22	IF_2
0x4003cf6	            0x7408	                            je 0x4003d00	      1720	syntax.c	FUNCTION_22	IF_2
0x4003cf8	    0x4889b8d00000	             mov qword [rax + 0xd0], rdi	      1721	syntax.c	FUNCTION_22	IF_2
0x4003cff	              0xc3	                                     ret	      1722	syntax.c	FUNCTION_22
0x4003d00	            0xf3c3	                                     ret	      1722	syntax.c	FUNCTION_22
0x4003d02	    0x660f1f440000	                    nop word [rax + rax]	      1722	syntax.c	FUNCTION_22
0x4003d08	          0x4889d0	                            mov rax, rdx	      1722	syntax.c	FUNCTION_22
0x4003d0b	            0xebe1	                           jmp 0x4003cee	      1722	syntax.c	FUNCTION_22
0x4003d0d	            0xf3c3	                                     ret	      1722	syntax.c	FUNCTION_22
0x4003d0f	              0xc3	                                     ret	      1722	syntax.c	FUNCTION_22
syn_attr2attr	SWITCH,0:WHILE,0:DO,0:IF,3:ELSE,2:FOR,0:functions,0:CALL,3	40
0x4005b10	    0x8b0500000000	            mov eax, dword [0x04005b16] 	      9177	syntax.c	FUNCTION_138	IF_1
0x4005b16	    0x81ef00010000	                          sub edi, 0x100	      9160	syntax.c	FUNCTION_137
0x4005b1c	            0x85c0	                           test eax, eax	      9177	syntax.c	FUNCTION_138	IF_1
0x4005b1e	            0x7410	                            je 0x4005b30	      9177	syntax.c	FUNCTION_138	IF_1
0x4005b20	            0x31c0	                            xor eax, eax	      9187	syntax.c	FUNCTION_138	IF_3
0x4005b22	    0x3b3d00000000	            cmp edi, dword [0x04005b28] 	      9161	syntax.c	FUNCTION_137	IF_1
0x4005b28	            0x7c36	                            jl 0x4005b60	      9161	syntax.c	FUNCTION_137	IF_1
0x4005b2a	            0xf3c3	                                     ret	      9189	syntax.c	FUNCTION_138
0x4005b2c	         0xf1f4000	                         nop dword [rax]	      9189	syntax.c	FUNCTION_138
0x4005b30	    0x833d00000000	               cmp dword [0x04005b37], 1	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4005b37	            0x7e3f	                           jle 0x4005b78	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4005b39	    0x3b3d00000000	            cmp edi, dword [0x04005b3f] 	      9205	syntax.c	FUNCTION_140	IF_1
0x4005b3f	            0x7de9	                           jge 0x4005b2a	      9205	syntax.c	FUNCTION_140	IF_1
0x4005b41	          0x4863ff	                         movsxd rdi, edi	      9207	syntax.c	FUNCTION_140
0x4005b44	    0x488b05000000	            mov rax, qword [0x04005b4b] 	      9207	syntax.c	FUNCTION_140
0x4005b4b	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9207	syntax.c	FUNCTION_140
0x4005b4f	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9207	syntax.c	FUNCTION_140
0x4005b53	          0x4885c0	                           test rax, rax	      9186	syntax.c	FUNCTION_138	IF_3
0x4005b56	            0x7446	                            je 0x4005b9e	      9186	syntax.c	FUNCTION_138	IF_3
0x4005b58	           0xfbf00	                   movsx eax, word [rax]	      9188	syntax.c	FUNCTION_138
0x4005b5b	              0xc3	                                     ret	      9188	syntax.c	FUNCTION_138
0x4005b5c	         0xf1f4000	                         nop dword [rax]	      9188	syntax.c	FUNCTION_138
0x4005b60	          0x4863ff	                         movsxd rdi, edi	      9163	syntax.c	FUNCTION_137
0x4005b63	    0x488b05000000	            mov rax, qword [0x04005b6a] 	      9163	syntax.c	FUNCTION_137
0x4005b6a	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9163	syntax.c	FUNCTION_137
0x4005b6e	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9163	syntax.c	FUNCTION_137
0x4005b72	            0xebdf	                           jmp 0x4005b53	      9163	syntax.c	FUNCTION_137
0x4005b74	         0xf1f4000	                         nop dword [rax]	      9163	syntax.c	FUNCTION_137
0x4005b78	    0x8b1500000000	            mov edx, dword [0x04005b7e] 	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4005b7e	            0x85d2	                           test edx, edx	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4005b80	            0x75b7	                           jne 0x4005b39	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x4005b82	    0x3b3d00000000	            cmp edi, dword [0x04005b88] 	      9196	syntax.c	FUNCTION_139	IF_1
0x4005b88	            0x7da0	                           jge 0x4005b2a	      9196	syntax.c	FUNCTION_139	IF_1
0x4005b8a	          0x4863ff	                         movsxd rdi, edi	      9198	syntax.c	FUNCTION_139
0x4005b8d	    0x488b05000000	            mov rax, qword [0x04005b94] 	      9198	syntax.c	FUNCTION_139
0x4005b94	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9198	syntax.c	FUNCTION_139
0x4005b98	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9198	syntax.c	FUNCTION_139
0x4005b9c	            0xebb5	                           jmp 0x4005b53	      9198	syntax.c	FUNCTION_139
0x4005b9e	            0x31c0	                            xor eax, eax	      9187	syntax.c	FUNCTION_138	IF_3
0x4005ba0	              0xc3	                                     ret	      9189	syntax.c	FUNCTION_138
syn_namen2id	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,3	18
0x40063b0	              0x55	                                push rbp	      9692	syntax.c	FUNCTION_152
0x40063b1	              0x53	                                push rbx	      9692	syntax.c	FUNCTION_152
0x40063b2	            0x31ed	                            xor ebp, ebp	      9692	syntax.c	FUNCTION_152
0x40063b4	        0x4883ec08	                              sub rsp, 8	      9692	syntax.c	FUNCTION_152
0x40063b8	      0xe800000000	                          call 0x40063bd	      9696	syntax.c	FUNCTION_152	CALL_1
0x40063bd	          0x4885c0	                           test rax, rax	      9697	syntax.c	FUNCTION_152	IF_1
0x40063c0	            0x7415	                            je 0x40063d7	      9697	syntax.c	FUNCTION_152	IF_1
0x40063c2	          0x4889c3	                            mov rbx, rax	      9697	syntax.c	FUNCTION_152	IF_1
0x40063c5	          0x4889c7	                            mov rdi, rax	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x40063c8	      0xe800000000	                          call 0x40063cd	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x40063cd	          0x4889df	                            mov rdi, rbx	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x40063d0	            0x89c5	                            mov ebp, eax	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x40063d2	      0xe800000000	                          call 0x40063d7	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x40063d7	        0x4883c408	                              add rsp, 8	      9703	syntax.c	FUNCTION_152
0x40063db	            0x89e8	                            mov eax, ebp	      9703	syntax.c	FUNCTION_152
0x40063dd	              0x5b	                                 pop rbx	      9703	syntax.c	FUNCTION_152
0x40063de	              0x5d	                                 pop rbp	      9703	syntax.c	FUNCTION_152
0x40063df	              0xc3	                                     ret	      9703	syntax.c	FUNCTION_152
hl_set_fg_color_name	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,0:FOR,0:functions,0:CALL,2	23
0x4006200	          0x4885ff	                           test rdi, rdi	      8582	syntax.c	FUNCTION_126	IF_1
0x4006203	            0x7448	                            je 0x400624d	      8582	syntax.c	FUNCTION_126	IF_1
0x4006205	              0x55	                                push rbp	      8579	syntax.c	FUNCTION_126
0x4006206	              0x53	                                push rbx	      8579	syntax.c	FUNCTION_126
0x4006207	          0x4889fb	                            mov rbx, rdi	      8579	syntax.c	FUNCTION_126
0x400620a	      0xbf00000000	                              mov edi, 0	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x400620f	        0x4883ec08	                              sub rsp, 8	      8579	syntax.c	FUNCTION_126
0x4006213	      0xe800000000	                          call 0x4006218	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x4006218	            0x85c0	                           test eax, eax	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x400621a	            0x7e2b	                           jle 0x4006247	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x400621c	            0x4898	                                    cdqe	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x400621e	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4006222	        0x488d2c50	                  lea rbp, [rax + rdx*2]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4006226	    0x488b05000000	            mov rax, qword [0x0400622d] 	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x400622d	        0x48c1e503	                              shl rbp, 3	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4006231	      0x488b7c28d8	       mov rdi, qword [rax + rbp - 0x28]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x4006236	      0xe800000000	                          call 0x400623b	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x400623b	    0x488b05000000	            mov rax, qword [0x04006242] 	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4006242	      0x48895c28d8	       mov qword [rax + rbp - 0x28], rbx	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x4006247	        0x4883c408	                              add rsp, 8	      8591	syntax.c	FUNCTION_126
0x400624b	              0x5b	                                 pop rbx	      8591	syntax.c	FUNCTION_126
0x400624c	              0x5d	                                 pop rbp	      8591	syntax.c	FUNCTION_126
0x400624d	            0xf3c3	                                     ret	      8591	syntax.c	FUNCTION_126
syn_cmd_manual	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	2
0x4002c40	      0xbe00000000	                              mov esi, 0	      3902	syntax.c	FUNCTION_60	CALL_1
0x4002c45	      0xe956ffffff	                   jmp sym.syn_cmd_onoff	      3902	syntax.c	FUNCTION_60	CALL_1
syn_cmd_enable	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,3	12
0x4002c50	              0x53	                                push rbx	      3874	syntax.c	FUNCTION_58
0x4002c51	      0xbe00000000	                              mov esi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x4002c56	          0x4889fb	                            mov rbx, rdi	      3874	syntax.c	FUNCTION_58
0x4002c59	      0xbf00000000	                              mov edi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x4002c5e	      0xe800000000	                          call 0x4002c63	      3875	syntax.c	FUNCTION_58	CALL_1
0x4002c63	          0x4889df	                            mov rdi, rbx	      3876	syntax.c	FUNCTION_58	CALL_2
0x4002c66	      0xbe00000000	                              mov esi, 0	      3876	syntax.c	FUNCTION_58	CALL_2
0x4002c6b	      0xe830ffffff	                  call sym.syn_cmd_onoff	      3876	syntax.c	FUNCTION_58	CALL_2
0x4002c70	              0x5b	                                 pop rbx	      3878	syntax.c	FUNCTION_58
0x4002c71	      0xbe01000000	                              mov esi, 1	      3877	syntax.c	FUNCTION_58	CALL_3
0x4002c76	      0xbf00000000	                              mov edi, 0	      3877	syntax.c	FUNCTION_58	CALL_3
0x4002c7b	      0xe900000000	           jmp sym.syn_match_msg.part.10	      3877	syntax.c	FUNCTION_58	CALL_3
syn_id2cterm_bg	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	35
0x400c960	    0x448b05000000	            mov r8d, dword [0x0400c967] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400c967	          0x4439c7	                            cmp edi, r8d	      9879	syntax.c	FUNCTION_159	IF_1
0x400c96a	            0x7f54	                            jg 0x400c9c0	      9879	syntax.c	FUNCTION_159	IF_1
0x400c96c	            0x85ff	                           test edi, edi	      9879	syntax.c	FUNCTION_159	IF_1
0x400c96e	    0x4c8b0d000000	              mov r9, qword [0x0400c975]	      9879	syntax.c	FUNCTION_159	IF_1
0x400c975	      0xb864000000	                           mov eax, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x400c97a	            0x7f0d	                            jg 0x400c989	      9879	syntax.c	FUNCTION_159	IF_1
0x400c97c	            0xeb42	                           jmp 0x400c9c0	      9879	syntax.c	FUNCTION_159	IF_1
0x400c97e	            0x6690	                                     nop	      9879	syntax.c	FUNCTION_159	IF_1
0x400c980	            0x85ff	                           test edi, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c982	            0x7424	                            je 0x400c9a8	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c984	          0x83e801	                              sub eax, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x400c987	            0x7447	                            je 0x400c9d0	      9886	syntax.c	FUNCTION_159	FOR_1
0x400c989	          0x4863ff	                         movsxd rdi, edi	      9888	syntax.c	FUNCTION_159	FOR_1
0x400c98c	        0x488d0cff	                  lea rcx, [rdi + rdi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400c990	        0x488d0c4f	                  lea rcx, [rdi + rcx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400c994	    0x498d8cc968ff	            lea rcx, [r9 + rcx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400c99c	    0x4863b9880000	         movsxd rdi, dword [rcx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c9a3	          0x4139f8	                            cmp r8d, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c9a6	            0x7dd8	                           jge 0x400c980	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400c9a8	          0x8b4134	            mov eax, dword [rcx + 0x34] 	      9865	syntax.c	FUNCTION_158
0x400c9ab	          0x83e801	                              sub eax, 1	      9865	syntax.c	FUNCTION_158
0x400c9ae	            0x8906	                    mov dword [rsi], eax	      9865	syntax.c	FUNCTION_158
0x400c9b0	          0x8b4138	            mov eax, dword [rcx + 0x38] 	      9866	syntax.c	FUNCTION_158
0x400c9b3	          0x83e801	                              sub eax, 1	      9866	syntax.c	FUNCTION_158
0x400c9b6	            0x8902	                    mov dword [rdx], eax	      9866	syntax.c	FUNCTION_158
0x400c9b8	              0xc3	                                     ret	      9866	syntax.c	FUNCTION_158
0x400c9b9	     0xf1f80000000	                         nop dword [rax]	      9866	syntax.c	FUNCTION_158
0x400c9c0	    0x488b05000000	            mov rax, qword [0x0400c9c7] 	      9866	syntax.c	FUNCTION_158
0x400c9c7	    0x488d8868ffff	                   lea rcx, [rax - 0x98]	      9866	syntax.c	FUNCTION_158
0x400c9ce	            0xebd8	                           jmp 0x400c9a8	      9866	syntax.c	FUNCTION_158
0x400c9d0	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9866	syntax.c	FUNCTION_158
0x400c9d4	        0x488d0447	                  lea rax, [rdi + rax*2]	      9866	syntax.c	FUNCTION_158
0x400c9d8	    0x498d8cc168ff	            lea rcx, [r9 + rax*8 - 0x98]	      9866	syntax.c	FUNCTION_158
0x400c9e0	            0xebc6	                           jmp 0x400c9a8	      9866	syntax.c	FUNCTION_158
get_highlight_name	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	2
0x400ebb0	      0xba01000000	                              mov edx, 1	     10306	syntax.c	FUNCTION_167	CALL_1
0x400ebb5	      0xe9f6feffff	          jmp sym.get_highlight_name_ext	     10306	syntax.c	FUNCTION_167	CALL_1
syn_name2attr	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,2	11
0x400c6e0	        0x4883ec08	                              sub rsp, 8	      9654	syntax.c	FUNCTION_149
0x400c6e4	      0xe800000000	                          call 0x400c6e9	      9655	syntax.c	FUNCTION_149	CALL_1
0x400c6e9	            0x85c0	                           test eax, eax	      9657	syntax.c	FUNCTION_149	IF_1
0x400c6eb	            0x7413	                            je 0x400c700	      9657	syntax.c	FUNCTION_149	IF_1
0x400c6ed	            0x89c7	                            mov edi, eax	      9658	syntax.c	FUNCTION_149	CALL_2
0x400c6ef	        0x4883c408	                              add rsp, 8	      9660	syntax.c	FUNCTION_149
0x400c6f3	      0xe998beffff	                     jmp sym.syn_id2attr	      9658	syntax.c	FUNCTION_149	CALL_2
0x400c6f8	     0xf1f84000000	                   nop dword [rax + rax]	      9658	syntax.c	FUNCTION_149	CALL_2
0x400c700	            0x31c0	                            xor eax, eax	      9660	syntax.c	FUNCTION_149
0x400c702	        0x4883c408	                              add rsp, 8	      9660	syntax.c	FUNCTION_149
0x400c706	              0xc3	                                     ret	      9660	syntax.c	FUNCTION_149
syn_cmd_case	SWITCH,0:WHILE,0:DO,0:IF,5:ELSE,4:FOR,0:functions,0:CALL,10	76
0x4000db0	              0x55	                                push rbp	      3492	syntax.c	FUNCTION_46
0x4000db1	              0x53	                                push rbx	      3492	syntax.c	FUNCTION_46
0x4000db2	          0x4889fb	                            mov rbx, rdi	      3492	syntax.c	FUNCTION_46
0x4000db5	        0x4883ec08	                              sub rsp, 8	      3492	syntax.c	FUNCTION_46
0x4000db9	          0x488b2f	                    mov rbp, qword [rdi]	      3493	syntax.c	FUNCTION_46
0x4000dbc	          0x4889ef	                            mov rdi, rbp	      3496	syntax.c	FUNCTION_46	CALL_1
0x4000dbf	      0xe800000000	                          call 0x4000dc4	      3496	syntax.c	FUNCTION_46	CALL_1
0x4000dc4	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      3497	syntax.c	FUNCTION_46	IF_1
0x4000dc7	        0x48894308	                mov qword [rbx + 8], rax	      3496	syntax.c	FUNCTION_46	CALL_1
0x4000dcb	            0x85d2	                           test edx, edx	      3497	syntax.c	FUNCTION_46	IF_1
0x4000dcd	            0x7411	                            je 0x4000de0	      3497	syntax.c	FUNCTION_46	IF_1
0x4000dcf	        0x4883c408	                              add rsp, 8	      3514	syntax.c	FUNCTION_46
0x4000dd3	              0x5b	                                 pop rbx	      3514	syntax.c	FUNCTION_46
0x4000dd4	              0x5d	                                 pop rbp	      3514	syntax.c	FUNCTION_46
0x4000dd5	              0xc3	                                     ret	      3514	syntax.c	FUNCTION_46
0x4000dd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3514	syntax.c	FUNCTION_46
0x4000de0	          0x4889ef	                            mov rdi, rbp	      3500	syntax.c	FUNCTION_46	CALL_2
0x4000de3	      0xe800000000	                          call 0x4000de8	      3500	syntax.c	FUNCTION_46	CALL_2
0x4000de8	        0x807d0000	                       cmp byte [rbp], 0	      3501	syntax.c	FUNCTION_46	IF_2
0x4000dec	          0x4889c3	                            mov rbx, rax	      3500	syntax.c	FUNCTION_46	CALL_2
0x4000def	            0x746f	                            je 0x4000e60	      3501	syntax.c	FUNCTION_46	IF_2
0x4000df1	      0xba05000000	                              mov edx, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000df6	      0xbe00000000	                              mov esi, 0	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000dfb	          0x4889ef	                            mov rdi, rbp	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000dfe	      0xe800000000	                          call 0x4000e03	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000e03	            0x85c0	                           test eax, eax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000e05	            0x7510	                           jne 0x4000e17	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000e07	          0x4889d8	                            mov rax, rbx	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000e0a	          0x4829e8	                            sub rax, rbp	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000e0d	        0x4883f805	                              cmp rax, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000e11	     0xf84a9000000	                            je 0x4000ec0	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x4000e17	      0xba06000000	                              mov edx, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e1c	      0xbe00000000	                              mov esi, 0	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e21	          0x4889ef	                            mov rdi, rbp	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e24	      0xe800000000	                          call 0x4000e29	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e29	            0x85c0	                           test eax, eax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e2b	            0x7509	                           jne 0x4000e36	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e2d	          0x4829eb	                            sub rbx, rbp	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e30	        0x4883fb06	                              cmp rbx, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e34	            0x746a	                            je 0x4000ea0	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000e36	      0xbe00000000	                              mov esi, 0	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000e3b	            0x31ff	                            xor edi, edi	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000e3d	      0xba05000000	                              mov edx, 5	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000e42	      0xe800000000	                          call 0x4000e47	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000e47	        0x4883c408	                              add rsp, 8	      3514	syntax.c	FUNCTION_46
0x4000e4b	          0x4889ee	                            mov rsi, rbp	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000e4e	          0x4889c7	                            mov rdi, rax	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000e51	              0x5b	                                 pop rbx	      3514	syntax.c	FUNCTION_46
0x4000e52	              0x5d	                                 pop rbp	      3514	syntax.c	FUNCTION_46
0x4000e53	      0xe900000000	                           jmp 0x4000e58	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000e58	     0xf1f84000000	                   nop dword [rax + rax]	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000e60	    0x488b05000000	            mov rax, qword [0x04000e67] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000e67	      0xba05000000	                              mov edx, 5	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4000e6c	      0xbe00000000	                              mov esi, 0	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4000e71	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000e75	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000e7b	            0x85c0	                           test eax, eax	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000e7d	            0x7505	                           jne 0x4000e84	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000e7f	      0xbe00000000	                              mov esi, 0	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000e84	            0x31ff	                            xor edi, edi	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000e86	      0xe800000000	                          call 0x4000e8b	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000e8b	        0x4883c408	                              add rsp, 8	      3514	syntax.c	FUNCTION_46
0x4000e8f	          0x4889c7	                            mov rdi, rax	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000e92	              0x5b	                                 pop rbx	      3514	syntax.c	FUNCTION_46
0x4000e93	              0x5d	                                 pop rbp	      3514	syntax.c	FUNCTION_46
0x4000e94	      0xe900000000	                           jmp 0x4000e99	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000e99	     0xf1f80000000	                         nop dword [rax]	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000ea0	    0x488b05000000	            mov rax, qword [0x04000ea7] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000ea7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000eab	    0xc78058020000	              mov dword [rax + 0x258], 1	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000eb5	      0xe915ffffff	                           jmp 0x4000dcf	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000eba	    0x660f1f440000	                    nop word [rax + rax]	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000ec0	    0x488b05000000	            mov rax, qword [0x04000ec7] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4000ec7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4000ecb	    0xc78058020000	              mov dword [rax + 0x258], 0	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4000ed5	      0xe9f5feffff	                           jmp 0x4000dcf	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
highlight_has_attr	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,2:FOR,0:functions,0:CALL,0	28
0x4005c10	            0x85ff	                           test edi, edi	      9334	syntax.c	FUNCTION_143	IF_1
0x4005c12	            0x7e54	                           jle 0x4005c68	      9334	syntax.c	FUNCTION_143	IF_1
0x4005c14	    0x3b3d00000000	            cmp edi, dword [0x04005c1a] 	      9334	syntax.c	FUNCTION_143	IF_1
0x4005c1a	            0x7f4c	                            jg 0x4005c68	      9334	syntax.c	FUNCTION_143	IF_1
0x4005c1c	          0x4863ff	                         movsxd rdi, edi	      9339	syntax.c	FUNCTION_143	IF_2
0x4005c1f	    0x488b0d000000	            mov rcx, qword [0x04005c26] 	      9339	syntax.c	FUNCTION_143	IF_2
0x4005c26	          0x83fa67	                           cmp edx, 0x67	      9338	syntax.c	FUNCTION_143	IF_2
0x4005c29	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9339	syntax.c	FUNCTION_143	IF_2
0x4005c2d	        0x488d0447	                  lea rax, [rdi + rax*2]	      9339	syntax.c	FUNCTION_143	IF_2
0x4005c31	        0x488d04c1	                  lea rax, [rcx + rax*8]	      9339	syntax.c	FUNCTION_143	IF_2
0x4005c35	            0x7421	                            je 0x4005c58	      9338	syntax.c	FUNCTION_143	IF_2
0x4005c37	          0x83fa63	                           cmp edx, 0x63	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005c3a	            0x7424	                            je 0x4005c60	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005c3c	    0x8b807cffffff	             mov eax, dword [rax - 0x84]	      9345	syntax.c	FUNCTION_143	ELSE_2
0x4005c42	            0x85f0	                           test eax, esi	      9348	syntax.c	FUNCTION_143	IF_4
0x4005c44	      0xba00000000	                              mov edx, 0	      9348	syntax.c	FUNCTION_143	IF_4
0x4005c49	      0xb800000000	                              mov eax, 0	      9348	syntax.c	FUNCTION_143	IF_4
0x4005c4e	        0x480f44c2	                          cmove rax, rdx	      9348	syntax.c	FUNCTION_143	IF_4
0x4005c52	              0xc3	                                     ret	      9348	syntax.c	FUNCTION_143	IF_4
0x4005c53	       0xf1f440000	                   nop dword [rax + rax]	      9348	syntax.c	FUNCTION_143	IF_4
0x4005c58	          0x8b40d4	             mov eax, dword [rax - 0x2c]	      9339	syntax.c	FUNCTION_143	IF_2
0x4005c5b	            0xebe5	                           jmp 0x4005c42	      9339	syntax.c	FUNCTION_143	IF_2
0x4005c5d	           0xf1f00	                         nop dword [rax]	      9339	syntax.c	FUNCTION_143	IF_2
0x4005c60	          0x8b4094	             mov eax, dword [rax - 0x6c]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005c63	            0xebdd	                           jmp 0x4005c42	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005c65	           0xf1f00	                         nop dword [rax]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x4005c68	            0x31c0	                            xor eax, eax	      9349	syntax.c	FUNCTION_143
0x4005c6a	              0xc3	                                     ret	      9350	syntax.c	FUNCTION_143
syn_remove_pattern	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,2	28
0x4002a20	          0x4863c6	                         movsxd rax, esi	      3707	syntax.c	FUNCTION_52
0x4002a23	            0x4154	                                push r12	      3707	syntax.c	FUNCTION_52
0x4002a25	              0x55	                                push rbp	      3707	syntax.c	FUNCTION_52
0x4002a26	        0x488d2c80	                  lea rbp, [rax + rax*4]	      3710	syntax.c	FUNCTION_52
0x4002a2a	              0x53	                                push rbx	      3707	syntax.c	FUNCTION_52
0x4002a2b	          0x4989fc	                            mov r12, rdi	      3707	syntax.c	FUNCTION_52
0x4002a2e	          0x4889c3	                            mov rbx, rax	      3707	syntax.c	FUNCTION_52
0x4002a31	        0x48c1e505	                              shl rbp, 5	      3710	syntax.c	FUNCTION_52
0x4002a35	    0x4803af700200	            add rbp, qword [rdi + 0x270]	      3710	syntax.c	FUNCTION_52
0x4002a3c	        0xf6452520	           test byte [rbp + 0x25], 0x20 	      3712	syntax.c	FUNCTION_52	IF_1
0x4002a40	            0x7407	                            je 0x4002a49	      3712	syntax.c	FUNCTION_52	IF_1
0x4002a42	    0x83af0c030000	              sub dword [rdi + 0x30c], 1	      3713	syntax.c	FUNCTION_52	IF_1
0x4002a49	    0x498dbc247002	                  lea rdi, [r12 + 0x270]	      3713	syntax.c	FUNCTION_52	IF_1
0x4002a51	            0x89de	                            mov esi, ebx	      3715	syntax.c	FUNCTION_52	CALL_1
0x4002a53	            0xf7d3	                                 not ebx	        59	string3.h	FUNCTION_171	CALL_3
0x4002a55	      0xe846ffffff	       call sym.syn_clear_pattern.isra.6	      3715	syntax.c	FUNCTION_52	CALL_1
0x4002a5a	    0x41039c246002	            add ebx, dword [r12 + 0x260]	        59	string3.h	FUNCTION_171	CALL_3
0x4002a62	    0x488db5a00000	                   lea rsi, [rbp + 0xa0]	        59	string3.h	FUNCTION_171	CALL_3
0x4002a69	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_171	CALL_3
0x4002a6c	          0x4863db	                         movsxd rbx, ebx	        59	string3.h	FUNCTION_171	CALL_3
0x4002a6f	        0x488d149b	                  lea rdx, [rbx + rbx*4]	        59	string3.h	FUNCTION_171	CALL_3
0x4002a73	        0x48c1e205	                              shl rdx, 5	        59	string3.h	FUNCTION_171	CALL_3
0x4002a77	      0xe800000000	                          call 0x4002a7c	        59	string3.h	FUNCTION_171	CALL_3
0x4002a7c	              0x5b	                                 pop rbx	      3719	syntax.c	FUNCTION_52
0x4002a7d	    0x4183ac246002	              sub dword [r12 + 0x260], 1	      3718	syntax.c	FUNCTION_52
0x4002a86	              0x5d	                                 pop rbp	      3719	syntax.c	FUNCTION_52
0x4002a87	            0x415c	                                 pop r12	      3719	syntax.c	FUNCTION_52
0x4002a89	              0xc3	                                     ret	      3719	syntax.c	FUNCTION_52
load_current_state	SWITCH,0:WHILE,0:DO,0:IF,4:ELSE,2:FOR,1:functions,0:CALL,5	92
0x4008d70	            0x4156	                                push r14	      1594	syntax.c	FUNCTION_20
0x4008d72	            0x4155	                                push r13	      1594	syntax.c	FUNCTION_20
0x4008d74	          0x4989fe	                            mov r14, rdi	      1594	syntax.c	FUNCTION_20
0x4008d77	            0x4154	                                push r12	      1594	syntax.c	FUNCTION_20
0x4008d79	              0x55	                                push rbp	      1594	syntax.c	FUNCTION_20
0x4008d7a	              0x53	                                push rbx	      1594	syntax.c	FUNCTION_20
0x4008d7b	      0xe83075ffff	            call sym.clear_current_state	      1598	syntax.c	FUNCTION_20	CALL_1
0x4008d80	    0x418bb6bc0000	            mov esi, dword [r14 + 0xbc] 	      1601	syntax.c	FUNCTION_20	IF_1
0x4008d87	    0xc70500000000	           mov dword [0x04008d91], 0x90 	      1740	syntax.c	FUNCTION_24
0x4008d91	    0xc70500000000	               mov dword [0x04008d9b], 3	      1741	syntax.c	FUNCTION_24
0x4008d9b	    0xc70500000000	     mov dword [0x04008da5], 0xffffffff 	      1600	syntax.c	FUNCTION_20
0x4008da5	            0x85f6	                           test esi, esi	      1601	syntax.c	FUNCTION_20	IF_1
0x4008da7	            0x7537	                           jne 0x4008de0	      1601	syntax.c	FUNCTION_20	IF_1
0x4008da9	    0x498b86c00000	            mov rax, qword [r14 + 0xc0] 	      1630	syntax.c	FUNCTION_20
0x4008db0	              0x5b	                                 pop rbx	      1633	syntax.c	FUNCTION_20
0x4008db1	              0x5d	                                 pop rbp	      1633	syntax.c	FUNCTION_20
0x4008db2	    0x488905000000	            mov qword [0x04008db9], rax 	      1630	syntax.c	FUNCTION_20
0x4008db9	    0x418b86b80000	            mov eax, dword [r14 + 0xb8] 	      1631	syntax.c	FUNCTION_20
0x4008dc0	            0x415c	                                 pop r12	      1633	syntax.c	FUNCTION_20
0x4008dc2	            0x415d	                                 pop r13	      1633	syntax.c	FUNCTION_20
0x4008dc4	    0x890500000000	            mov dword [0x04008dca], eax 	      1631	syntax.c	FUNCTION_20
0x4008dca	        0x498b4608	                mov rax, qword [r14 + 8]	      1632	syntax.c	FUNCTION_20
0x4008dce	            0x415e	                                 pop r14	      1633	syntax.c	FUNCTION_20
0x4008dd0	    0x488905000000	            mov qword [0x04008dd7], rax 	      1632	syntax.c	FUNCTION_20
0x4008dd7	              0xc3	                                     ret	      1633	syntax.c	FUNCTION_20
0x4008dd8	     0xf1f84000000	                   nop dword [rax + rax]	      1633	syntax.c	FUNCTION_20
0x4008de0	      0xbf00000000	                              mov edi, 0	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4008de5	      0xe800000000	                          call 0x4008dea	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4008dea	            0x85c0	                           test eax, eax	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4008dec	            0x74bb	                            je 0x4008da9	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4008dee	    0x418b86bc0000	            mov eax, dword [r14 + 0xbc] 	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008df5	          0x83f807	                              cmp eax, 7	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008df8	     0xf8ff2000000	                            jg 0x4008ef0	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008dfe	            0x85c0	                           test eax, eax	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e00	        0x498d5e10	                   lea rbx, [r14 + 0x10]	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x4008e04	     0xf8e06010000	                           jle 0x4008f10	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e0a	          0x4531ed	                          xor r13d, r13d	      1594	syntax.c	FUNCTION_20
0x4008e0d	          0x4531e4	                          xor r12d, r12d	      1594	syntax.c	FUNCTION_20
0x4008e10	            0xeb71	                           jmp 0x4008e83	      1594	syntax.c	FUNCTION_20
0x4008e12	    0x660f1f440000	                    nop word [rax + rax]	      1594	syntax.c	FUNCTION_20
0x4008e18	          0x4c89e8	                            mov rax, r13	      1594	syntax.c	FUNCTION_20
0x4008e1b	    0x480305000000	             add rax, qword [0x04008e22]	      1594	syntax.c	FUNCTION_20
0x4008e22	          0x486310	                 movsxd rdx, dword [rax]	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e25	    0xc7405c000000	               mov dword [rax + 0x5c], 0	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e2c	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e33	            0x85d2	                           test edx, edx	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e35	     0xf88c5000000	                            js 0x4008f00	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e3b	    0x488b0d000000	            mov rcx, qword [0x04008e42] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e42	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e46	        0x48c1e205	                              shl rdx, 5	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e4a	    0x480391700200	            add rdx, qword [rcx + 0x270]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e51	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e55	    0x488990800000	             mov qword [rax + 0x80], rdx	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x4008e5c	          0x4489e7	                           mov edi, r12d	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x4008e5f	        0x4183c401	                             add r12d, 1	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e63	    0x4981c5900000	                           add r13, 0x90	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e6a	      0xe8e1f7ffff	                 call sym.update_si_attr	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x4008e6f	    0x418b86bc0000	            mov eax, dword [r14 + 0xbc] 	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e76	        0x4883c318	                           add rbx, 0x18	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e7a	          0x4439e0	                           cmp eax, r12d	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e7d	     0xf8e8d000000	                           jle 0x4008f10	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e83	          0x4c89ed	                            mov rbp, r13	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e86	    0x48032d000000	             add rbp, qword [0x04008e8d]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e8d	            0x8b03	                    mov eax, dword [rbx]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e8f	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x4008e93	          0x894500	                    mov dword [rbp], eax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e96	        0x48634304	            movsxd rax, dword [rbx + 4] 	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e9a	        0x48894568	            mov qword [rbp + 0x68], rax 	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008e9e	          0x8b4308	                mov eax, dword [rbx + 8]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008ea1	          0x894570	            mov dword [rbp + 0x70], eax 	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008ea4	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008ea7	          0x894574	            mov dword [rbp + 0x74], eax 	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4008eaa	      0xe800000000	                          call 0x4008eaf	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x4008eaf	    0x488985880000	            mov qword [rbp + 0x88], rax 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x4008eb6	    0x8b0500000000	            mov eax, dword [0x04008ebc] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ebc	            0x85c0	                           test eax, eax	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ebe	     0xf8954ffffff	                           jns 0x4008e18	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ec4	          0x4c89ea	                            mov rdx, r13	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ec7	    0x480315000000	             add rdx, qword [0x04008ece]	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ece	        0xf6426904	               test byte [rdx + 0x69], 4	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ed2	          0x4889d0	                            mov rax, rdx	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ed5	     0xf8447ffffff	                            je 0x4008e22	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008edb	    0x448925000000	           mov dword [0x04008ee2], r12d 	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ee2	      0xe93bffffff	                           jmp 0x4008e22	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ee7	    0x660f1f840000	                    nop word [rax + rax]	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4008ef0	        0x498b5e20	            mov rbx, qword [r14 + 0x20] 	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008ef4	      0xe911ffffff	                           jmp 0x4008e0a	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008ef9	     0xf1f80000000	                         nop dword [rax]	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x4008f00	    0x48c780800000	               mov qword [rax + 0x80], 0	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4008f0b	      0xe94cffffff	                           jmp 0x4008e5c	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x4008f10	    0x890500000000	            mov dword [0x04008f16], eax 	      1628	syntax.c	FUNCTION_20	IF_1
0x4008f16	      0xe98efeffff	                           jmp 0x4008da9	      1628	syntax.c	FUNCTION_20	IF_1
syntax_check_changed	SWITCH,0:WHILE,0:DO,0:IF,3:ELSE,0:FOR,0:functions,0:CALL,4	47
0x400adf0	    0x8b0500000000	            mov eax, dword [0x0400adf6] 	      1762	syntax.c	FUNCTION_25	IF_1
0x400adf6	              0x53	                                push rbx	      1751	syntax.c	FUNCTION_25
0x400adf7	      0xbb01000000	                              mov ebx, 1	      1752	syntax.c	FUNCTION_25
0x400adfc	            0x85c0	                           test eax, eax	      1762	syntax.c	FUNCTION_25	IF_1
0x400adfe	            0x7410	                            je 0x400ae10	      1762	syntax.c	FUNCTION_25	IF_1
0x400ae00	    0x488b05000000	            mov rax, qword [0x0400ae07] 	      1762	syntax.c	FUNCTION_25	IF_1
0x400ae07	        0x488d5001	                      lea rdx, [rax + 1]	      1762	syntax.c	FUNCTION_25	IF_1
0x400ae0b	          0x4839fa	                            cmp rdx, rdi	      1762	syntax.c	FUNCTION_25	IF_1
0x400ae0e	            0x7408	                            je 0x400ae18	      1762	syntax.c	FUNCTION_25	IF_1
0x400ae10	            0x89d8	                            mov eax, ebx	      1789	syntax.c	FUNCTION_25
0x400ae12	              0x5b	                                 pop rbx	      1789	syntax.c	FUNCTION_25
0x400ae13	              0xc3	                                     ret	      1789	syntax.c	FUNCTION_25
0x400ae14	         0xf1f4000	                         nop dword [rax]	      1789	syntax.c	FUNCTION_25
0x400ae18	    0x488b05000000	            mov rax, qword [0x0400ae1f] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400ae1f	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400ae26	          0x4885c0	                           test rax, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x400ae29	            0x74e5	                            je 0x400ae10	      1455	syntax.c	FUNCTION_18	FOR_1
0x400ae2b	        0x483b5008	                cmp rdx, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400ae2f	            0x7429	                            je 0x400ae5a	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400ae31	            0x7d10	                           jge 0x400ae43	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400ae33	            0xebdb	                           jmp 0x400ae10	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400ae35	           0xf1f00	                         nop dword [rax]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400ae38	        0x483b5308	                cmp rdx, qword [rbx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400ae3c	            0x7422	                            je 0x400ae60	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400ae3e	            0x7c0b	                            jl 0x400ae4b	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400ae40	          0x4889d8	                            mov rax, rbx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400ae43	          0x488b18	                    mov rbx, qword [rax]	      1455	syntax.c	FUNCTION_18	FOR_1
0x400ae46	          0x4885db	                           test rbx, rbx	      1455	syntax.c	FUNCTION_18	FOR_1
0x400ae49	            0x75ed	                           jne 0x400ae38	      1455	syntax.c	FUNCTION_18	FOR_1
0x400ae4b	        0x483b5008	                cmp rdx, qword [rax + 8]	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x400ae4f	            0x7409	                            je 0x400ae5a	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x400ae51	      0xbb01000000	                              mov ebx, 1	      1752	syntax.c	FUNCTION_25
0x400ae56	            0x89d8	                            mov eax, ebx	      1789	syntax.c	FUNCTION_25
0x400ae58	              0x5b	                                 pop rbx	      1789	syntax.c	FUNCTION_25
0x400ae59	              0xc3	                                     ret	      1789	syntax.c	FUNCTION_25
0x400ae5a	          0x4889c3	                            mov rbx, rax	      1789	syntax.c	FUNCTION_25
0x400ae5d	           0xf1f00	                         nop dword [rax]	      1789	syntax.c	FUNCTION_25
0x400ae60	            0x31ff	                            xor edi, edi	      1771	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x400ae62	      0xe869f1ffff	                call sym.syn_finish_line	      1771	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_2
0x400ae67	          0x4889df	                            mov rdi, rbx	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x400ae6a	            0x31db	                            xor ebx, ebx	      1752	syntax.c	FUNCTION_25
0x400ae6c	      0xe8df58ffff	                call sym.syn_stack_equal	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x400ae71	            0x85c0	                           test eax, eax	      1752	syntax.c	FUNCTION_25
0x400ae73	           0xf94c3	                                 sete bl	      1752	syntax.c	FUNCTION_25
0x400ae76	    0x488305000000	               add qword [0x0400ae7e], 1	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x400ae7e	      0xe82d76ffff	            call sym.store_current_state	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_4
0x400ae83	            0xeb8b	                           jmp 0x400ae10	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_4
store_current_state	SWITCH,0:WHILE,0:DO,0:IF,13:ELSE,6:FOR,3:functions,0:CALL,8	252
0x40024b0	            0x4155	                                push r13	      1471	syntax.c	FUNCTION_19
0x40024b2	            0x4154	                                push r12	      1471	syntax.c	FUNCTION_19
0x40024b4	              0x55	                                push rbp	      1471	syntax.c	FUNCTION_19
0x40024b5	              0x53	                                push rbx	      1471	syntax.c	FUNCTION_19
0x40024b6	        0x4883ec08	                              sub rsp, 8	      1471	syntax.c	FUNCTION_19
0x40024ba	    0x4c8b25000000	            mov r12, qword [0x040024c1] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x40024c1	    0x488b15000000	            mov rdx, qword [0x040024c8] 	      1476	syntax.c	FUNCTION_19	CALL_1
0x40024c8	    0x4d8b84242003	            mov r8, qword [r12 + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x40024d0	          0x4d85c0	                             test r8, r8	      1455	syntax.c	FUNCTION_18	FOR_1
0x40024d3	     0xf8458030000	                            je 0x4002831	      1455	syntax.c	FUNCTION_18	FOR_1
0x40024d9	        0x493b5008	                 cmp rdx, qword [r8 + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40024dd	     0xf849e030000	                            je 0x4002881	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40024e3	     0xf8c48030000	                            jl 0x4002831	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40024e9	          0x4c89c3	                             mov rbx, r8	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40024ec	            0xeb11	                           jmp 0x40024ff	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40024ee	            0x6690	                                     nop	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40024f0	        0x483b5008	                cmp rdx, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40024f4	     0xf8436020000	                            je 0x4002730	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40024fa	            0x7c0b	                            jl 0x4002507	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40024fc	          0x4889c3	                            mov rbx, rax	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40024ff	          0x488b03	                    mov rax, qword [rbx]	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002502	          0x4885c0	                           test rax, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002505	            0x75e9	                           jne 0x40024f0	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002507	    0x8b3500000000	            mov esi, dword [0x0400250d] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x400250d	          0x83ee01	                              sub esi, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002510	     0xf8895000000	                            js 0x40025ab	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002516	          0x4863c6	                         movsxd rax, esi	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002519	    0x4c8b0d000000	              mov r9, qword [0x04002520]	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002520	        0x488d3cc0	                  lea rdi, [rax + rax*8]	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002524	        0x48c1e704	                              shl rdi, 4	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002528	        0x498d0439	                     lea rax, [r9 + rdi]	      1484	syntax.c	FUNCTION_19	FOR_1
0x400252c	        0x483b5028	            cmp rdx, qword [rax + 0x28] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002530	     0xf8e9a010000	                           jle 0x40026d0	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002536	        0x483b5018	            cmp rdx, qword [rax + 0x18] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400253a	     0xf8e90010000	                           jle 0x40026d0	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002540	        0x483b5038	            cmp rdx, qword [rax + 0x38] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002544	     0xf8e66010000	                           jle 0x40026b0	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400254a	          0x4829c7	                            sub rdi, rax	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400254d	          0x4889c1	                            mov rcx, rax	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002550	    0x4881ef900000	                           sub rdi, 0x90	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002557	            0xeb32	                           jmp 0x400258b	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002559	     0xf1f80000000	                         nop dword [rax]	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002560	          0x4801f8	                            add rax, rdi	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002563	          0x4c01c8	                             add rax, r9	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002566	        0x483b5198	             cmp rdx, qword [rcx - 0x68]	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400256a	     0xf8e40010000	                           jle 0x40026b0	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002570	        0x483b5188	             cmp rdx, qword [rcx - 0x78]	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002574	     0xf8e36010000	                           jle 0x40026b0	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400257a	    0x4881e9900000	                           sub rcx, 0x90	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002581	        0x483b5138	            cmp rdx, qword [rcx + 0x38] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002585	     0xf8e25010000	                           jle 0x40026b0	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400258b	        0x448b5058	           mov r10d, dword [rax + 0x58] 	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400258f	          0x4585d2	                         test r10d, r10d	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002592	            0x740a	                            je 0x400259e	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002594	        0x483b5048	            cmp rdx, qword [rax + 0x48] 	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002598	     0xf8e12010000	                           jle 0x40026b0	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400259e	          0x83ee01	                              sub esi, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x40025a1	          0x83feff	             cmp esi, 0xffffffffffffffff	      1482	syntax.c	FUNCTION_19	FOR_1
0x40025a4	            0x75ba	                           jne 0x4002560	      1482	syntax.c	FUNCTION_19	FOR_1
0x40025a6	          0x4885db	                           test rbx, rbx	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x40025a9	            0x740a	                            je 0x40025b5	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x40025ab	        0x483b5308	                cmp rdx, qword [rbx + 8]	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x40025af	     0xf848d010000	                            je 0x4002742	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x40025b5	    0x418b84243003	           mov eax, dword [r12 + 0x330] 	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x40025bd	            0x85c0	                           test eax, eax	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x40025bf	     0xf8493010000	                            je 0x4002758	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x40025c5	    0x498bac242803	           mov rbp, qword [r12 + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40025cd	          0x83e801	                              sub eax, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40025d0	          0x4885db	                           test rbx, rbx	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x40025d3	        0x488b4d00	                    mov rcx, qword [rbp]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40025d7	    0x418984243003	            mov dword [r12 + 0x330], eax	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40025df	    0x49898c242803	            mov qword [r12 + 0x328], rcx	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40025e7	     0xf84ce020000	                            je 0x40028bb	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x40025ed	          0x488b03	                    mov rax, qword [rbx]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x40025f0	        0x48894500	                    mov qword [rbp], rax	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x40025f4	          0x48892b	                    mov qword [rbx], rbp	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x40025f7	    0xc785bc000000	               mov dword [rbp + 0xbc], 0	      1548	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002601	        0x48895508	                mov qword [rbp + 8], rdx	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002605	          0x4889ef	                            mov rdi, rbp	      1555	syntax.c	FUNCTION_19	IF_11	CALL_5
0x4002608	        0x488d5d10	                   lea rbx, [rbp + 0x10]	      1569	syntax.c	FUNCTION_19	IF_11	ELSE_6
0x400260c	      0xe82ffbffff	                call sym.clear_syn_state	      1555	syntax.c	FUNCTION_19	IF_11	CALL_5
0x4002611	    0x8b0500000000	            mov eax, dword [0x04002617] 	      1556	syntax.c	FUNCTION_19	IF_11
0x4002617	          0x83f807	                              cmp eax, 7	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x400261a	    0x8985bc000000	            mov dword [rbp + 0xbc], eax 	      1556	syntax.c	FUNCTION_19	IF_11
0x4002620	     0xf8fba010000	                            jg 0x40027e0	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x4002626	          0x4531ed	                          xor r13d, r13d	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002629	          0x4531e4	                          xor r12d, r12d	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400262c	            0x85c0	                           test eax, eax	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400262e	            0x7e4a	                           jle 0x400267a	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002630	          0x4c89e8	                            mov rax, r13	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002633	    0x480305000000	             add rax, qword [0x0400263a]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400263a	        0x4183c401	                             add r12d, 1	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400263e	    0x4981c5900000	                           add r13, 0x90	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002645	        0x4883c318	                           add rbx, 0x18	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002649	            0x8b10	                    mov edx, dword [rax]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400264b	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4002652	          0x8953e8	             mov dword [rbx - 0x18], edx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002655	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002659	          0x8953ec	             mov dword [rbx - 0x14], edx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400265c	          0x8b5070	            mov edx, dword [rax + 0x70] 	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400265f	          0x8953f0	             mov dword [rbx - 0x10], edx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002662	          0x8b5074	            mov edx, dword [rax + 0x74] 	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002665	          0x8953f4	              mov dword [rbx - 0xc], edx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002668	      0xe800000000	                          call 0x400266d	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x400266d	        0x488943f8	                mov qword [rbx - 8], rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4002671	    0x4439a5bc0000	           cmp dword [rbp + 0xbc], r12d 	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002678	            0x7fb6	                            jg 0x4002630	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x400267a	    0x8b0500000000	            mov eax, dword [0x04002680] 	      1580	syntax.c	FUNCTION_19	IF_11
0x4002680	    0x48c785d00000	               mov qword [rbp + 0xd0], 0	      1583	syntax.c	FUNCTION_19	IF_11
0x400268b	    0x8985b8000000	            mov dword [rbp + 0xb8], eax 	      1580	syntax.c	FUNCTION_19	IF_11
0x4002691	    0x488b05000000	            mov rax, qword [0x04002698] 	      1581	syntax.c	FUNCTION_19	IF_11
0x4002698	    0x488985c00000	            mov qword [rbp + 0xc0], rax 	      1581	syntax.c	FUNCTION_19	IF_11
0x400269f	     0xfb705000000	           movzx eax, word [0x040026a6] 	      1582	syntax.c	FUNCTION_19	IF_11
0x40026a6	    0x668985c80000	               mov word [rbp + 0xc8], ax	      1582	syntax.c	FUNCTION_19	IF_11
0x40026ad	            0xeb08	                           jmp 0x40026b7	      1582	syntax.c	FUNCTION_19	IF_11
0x40026af	              0x90	                                     nop	      1582	syntax.c	FUNCTION_19	IF_11
0x40026b0	          0x4885db	                           test rbx, rbx	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x40026b3	            0x751b	                           jne 0x40026d0	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x40026b5	            0x31ed	                            xor ebp, ebp	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x40026b7	    0xc70500000000	               mov dword [0x040026c1], 1	      1585	syntax.c	FUNCTION_19
0x40026c1	        0x4883c408	                              add rsp, 8	      1587	syntax.c	FUNCTION_19
0x40026c5	          0x4889e8	                            mov rax, rbp	      1587	syntax.c	FUNCTION_19
0x40026c8	              0x5b	                                 pop rbx	      1587	syntax.c	FUNCTION_19
0x40026c9	              0x5d	                                 pop rbp	      1587	syntax.c	FUNCTION_19
0x40026ca	            0x415c	                                 pop r12	      1587	syntax.c	FUNCTION_19
0x40026cc	            0x415d	                                 pop r13	      1587	syntax.c	FUNCTION_19
0x40026ce	              0xc3	                                     ret	      1587	syntax.c	FUNCTION_19
0x40026cf	              0x90	                                     nop	      1587	syntax.c	FUNCTION_19
0x40026d0	          0x4939d8	                             cmp r8, rbx	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x40026d3	     0xf8498010000	                            je 0x4002871	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x40026d9	          0x4d85c0	                             test r8, r8	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x40026dc	            0x7422	                            je 0x4002700	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x40026de	          0x498b00	                     mov rax, qword [r8]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026e1	          0x4839d8	                            cmp rax, rbx	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026e4	            0x7515	                           jne 0x40026fb	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026e6	            0xeb62	                           jmp 0x400274a	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026e8	     0xf1f84000000	                   nop dword [rax + rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026f0	          0x488b10	                    mov rdx, qword [rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026f3	          0x4839da	                            cmp rdx, rbx	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026f6	            0x7458	                            je 0x4002750	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026f8	          0x4889d0	                            mov rax, rdx	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x40026fb	          0x4885c0	                           test rax, rax	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x40026fe	            0x75f0	                           jne 0x40026f0	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4002700	          0x4889df	                            mov rdi, rbx	      1439	syntax.c	FUNCTION_17	CALL_1
0x4002703	      0xe838faffff	                call sym.clear_syn_state	      1439	syntax.c	FUNCTION_17	CALL_1
0x4002708	    0x498b84242803	           mov rax, qword [r12 + 0x328] 	      1440	syntax.c	FUNCTION_17
0x4002710	          0x488903	                    mov qword [rbx], rax	      1440	syntax.c	FUNCTION_17
0x4002713	    0x49899c242803	            mov qword [r12 + 0x328], rbx	      1441	syntax.c	FUNCTION_17
0x400271b	    0x418384243003	              add dword [r12 + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x4002724	            0xeb8f	                           jmp 0x40026b5	      1442	syntax.c	FUNCTION_17
0x4002726	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1442	syntax.c	FUNCTION_17
0x4002730	          0x4889c3	                            mov rbx, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002733	    0x8b3500000000	            mov esi, dword [0x04002739] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002739	          0x83ee01	                              sub esi, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x400273c	     0xf89d4fdffff	                           jns 0x4002516	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002742	          0x4889dd	                            mov rbp, rbx	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002745	      0xe9bbfeffff	                           jmp 0x4002605	      1482	syntax.c	FUNCTION_19	FOR_1
0x400274a	          0x4c89c0	                             mov rax, r8	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x400274d	           0xf1f00	                         nop dword [rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002750	          0x488b13	                    mov rdx, qword [rbx]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4002753	          0x488910	                    mov qword [rax], rdx	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4002756	            0xeba8	                           jmp 0x4002700	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4002758	      0xe873faffff	              call sym.syn_stack_cleanup	      1521	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_3
0x400275d	    0x4c8b25000000	            mov r12, qword [0x04002764] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002764	    0x488b15000000	            mov rdx, qword [0x0400276b] 	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_4
0x400276b	    0x498b84242003	           mov rax, qword [r12 + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002773	          0x4885c0	                           test rax, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002776	     0xf840d010000	                            je 0x4002889	      1455	syntax.c	FUNCTION_18	FOR_1
0x400277c	        0x48395008	                cmp qword [rax + 8], rdx	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002780	     0xf8446010000	                            je 0x40028cc	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002786	            0x7e17	                           jle 0x400279f	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002788	      0xe9fc000000	                           jmp 0x4002889	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400278d	           0xf1f00	                         nop dword [rax]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002790	        0x483b5308	                cmp rdx, qword [rbx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002794	     0xf8435010000	                            je 0x40028cf	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400279a	            0x7c0b	                            jl 0x40027a7	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400279c	          0x4889d8	                            mov rax, rbx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400279f	          0x488b18	                    mov rbx, qword [rax]	      1455	syntax.c	FUNCTION_18	FOR_1
0x40027a2	          0x4885db	                           test rbx, rbx	      1455	syntax.c	FUNCTION_18	FOR_1
0x40027a5	            0x75e9	                           jne 0x4002790	      1455	syntax.c	FUNCTION_18	FOR_1
0x40027a7	    0x418b8c243003	           mov ecx, dword [r12 + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40027af	            0x85c9	                           test ecx, ecx	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40027b1	     0xf84fefeffff	                            je 0x40026b5	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40027b7	    0x498bac242803	           mov rbp, qword [r12 + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40027bf	          0x83e901	                              sub ecx, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40027c2	          0x4889c3	                            mov rbx, rax	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40027c5	        0x488b7500	                    mov rsi, qword [rbp]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40027c9	    0x41898c243003	            mov dword [r12 + 0x330], ecx	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40027d1	    0x4989b4242803	            mov qword [r12 + 0x328], rsi	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40027d9	      0xe90ffeffff	                           jmp 0x40025ed	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40027de	            0x6690	                                     nop	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40027e0	        0x488d5d10	                   lea rbx, [rbp + 0x10]	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x40027e4	      0xba01000000	                              mov edx, 1	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x40027e9	      0xbe18000000	                           mov esi, 0x18	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x40027ee	          0x4889df	                            mov rdi, rbx	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x40027f1	      0xe800000000	                          call 0x40027f6	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x40027f6	    0x8b3500000000	            mov esi, dword [0x040027fc] 	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x40027fc	          0x4889df	                            mov rdi, rbx	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x40027ff	      0xe800000000	                          call 0x4002804	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4002804	            0x85c0	                           test eax, eax	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4002806	            0x7518	                           jne 0x4002820	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4002808	    0xc785bc000000	               mov dword [rbp + 0xbc], 0	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4002812	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x4002816	      0xe90bfeffff	                           jmp 0x4002626	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x400281b	       0xf1f440000	                   nop dword [rax + rax]	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x4002820	    0x8b0500000000	            mov eax, dword [0x04002826] 	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4002826	          0x894510	            mov dword [rbp + 0x10], eax 	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4002829	    0x8b85bc000000	            mov eax, dword [rbp + 0xbc] 	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x400282f	            0xebe1	                           jmp 0x4002812	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4002831	    0x8b3500000000	            mov esi, dword [0x04002837] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002837	          0x83ee01	                              sub esi, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x400283a	     0xf88c3000000	                            js 0x4002903	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002840	          0x4863c6	                         movsxd rax, esi	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002843	    0x4c8b0d000000	              mov r9, qword [0x0400284a]	      1484	syntax.c	FUNCTION_19	FOR_1
0x400284a	        0x488d3cc0	                  lea rdi, [rax + rax*8]	      1484	syntax.c	FUNCTION_19	FOR_1
0x400284e	        0x48c1e704	                              shl rdi, 4	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002852	        0x498d0439	                     lea rax, [r9 + rdi]	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002856	        0x483b5028	            cmp rdx, qword [rax + 0x28] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400285a	     0xf8e55feffff	                           jle 0x40026b5	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002860	        0x483b5018	            cmp rdx, qword [rax + 0x18] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002864	     0xf8e4bfeffff	                           jle 0x40026b5	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400286a	            0x31db	                            xor ebx, ebx	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400286c	      0xe9cffcffff	                           jmp 0x4002540	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002871	          0x488b03	                    mov rax, qword [rbx]	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4002874	    0x498984242003	            mov qword [r12 + 0x320], rax	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x400287c	      0xe97ffeffff	                           jmp 0x4002700	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4002881	          0x4c89c3	                             mov rbx, r8	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002884	      0xe9aafeffff	                           jmp 0x4002733	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002889	    0x418b8c243003	           mov ecx, dword [r12 + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4002891	            0x85c9	                           test ecx, ecx	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4002893	     0xf841cfeffff	                            je 0x40026b5	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4002899	    0x498bac242803	           mov rbp, qword [r12 + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028a1	          0x83e901	                              sub ecx, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028a4	          0x4989c0	                             mov r8, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x40028a7	        0x488b7500	                    mov rsi, qword [rbp]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028ab	    0x41898c243003	            mov dword [r12 + 0x330], ecx	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028b3	    0x4989b4242803	            mov qword [r12 + 0x328], rsi	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028bb	        0x4c894500	                     mov qword [rbp], r8	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x40028bf	    0x4989ac242003	            mov qword [r12 + 0x320], rbp	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x40028c7	      0xe92bfdffff	                           jmp 0x40025f7	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x40028cc	          0x4889c3	                            mov rbx, rax	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40028cf	    0x418b84243003	           mov eax, dword [r12 + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40028d7	            0x85c0	                           test eax, eax	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40028d9	     0xf84d6fdffff	                            je 0x40026b5	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40028df	    0x498bac242803	           mov rbp, qword [r12 + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028e7	          0x83e801	                              sub eax, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028ea	        0x488b4d00	                    mov rcx, qword [rbp]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028ee	    0x418984243003	            mov dword [r12 + 0x330], eax	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028f6	    0x49898c242803	            mov qword [r12 + 0x328], rcx	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40028fe	      0xe9eafcffff	                           jmp 0x40025ed	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002903	            0x31db	                            xor ebx, ebx	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002905	      0xe9abfcffff	                           jmp 0x40025b5	      1482	syntax.c	FUNCTION_19	FOR_1
clear_keywtab	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,2:functions,0:CALL,6	46
0x40008c0	            0x4156	                                push r14	      4487	syntax.c	FUNCTION_73
0x40008c2	            0x4155	                                push r13	      4487	syntax.c	FUNCTION_73
0x40008c4	          0x4989fe	                            mov r14, rdi	      4487	syntax.c	FUNCTION_73
0x40008c7	            0x4154	                                push r12	      4487	syntax.c	FUNCTION_73
0x40008c9	              0x55	                                push rbp	      4487	syntax.c	FUNCTION_73
0x40008ca	              0x53	                                push rbx	      4487	syntax.c	FUNCTION_73
0x40008cb	        0x488b4708	                mov rax, qword [rdi + 8]	      4493	syntax.c	FUNCTION_73
0x40008cf	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	      4494	syntax.c	FUNCTION_73	FOR_1
0x40008d3	            0x85c0	                           test eax, eax	      4494	syntax.c	FUNCTION_73	FOR_1
0x40008d5	          0x4189c5	                           mov r13d, eax	      4493	syntax.c	FUNCTION_73
0x40008d8	            0x7e54	                           jle 0x400092e	      4494	syntax.c	FUNCTION_73	FOR_1
0x40008da	    0x660f1f440000	                    nop word [rax + rax]	      4494	syntax.c	FUNCTION_73	FOR_1
0x40008e0	      0x498b5c2408	                mov rbx, qword [r12 + 8]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40008e5	    0x4881fb000000	                              cmp rbx, 0	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40008ec	            0x7462	                            je 0x4000950	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40008ee	          0x4885db	                           test rbx, rbx	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40008f1	            0x745d	                            je 0x4000950	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x40008f3	        0x4183ed01	                             sub r13d, 1	      4498	syntax.c	FUNCTION_73	FOR_1	IF_1
0x40008f7	        0x4883eb28	                           sub rbx, 0x28	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x40008fb	            0x7428	                            je 0x4000925	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x40008fd	           0xf1f00	                         nop dword [rax]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4000900	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x4000904	          0x488b2b	                    mov rbp, qword [rbx]	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4000907	      0xe800000000	                          call 0x400090c	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x400090c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x4000910	      0xe800000000	                          call 0x4000915	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x4000915	          0x4889df	                            mov rdi, rbx	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x4000918	          0x4889eb	                            mov rbx, rbp	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x400091b	      0xe800000000	                          call 0x4000920	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x4000920	          0x4885ed	                           test rbp, rbp	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4000923	            0x75db	                           jne 0x4000900	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x4000925	        0x4983c410	                           add r12, 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x4000929	          0x4585ed	                         test r13d, r13d	      4494	syntax.c	FUNCTION_73	FOR_1
0x400092c	            0x75b2	                           jne 0x40008e0	      4494	syntax.c	FUNCTION_73	FOR_1
0x400092e	          0x4c89f7	                            mov rdi, r14	      4508	syntax.c	FUNCTION_73	CALL_5
0x4000931	      0xe800000000	                          call 0x4000936	      4508	syntax.c	FUNCTION_73	CALL_5
0x4000936	              0x5b	                                 pop rbx	      4510	syntax.c	FUNCTION_73
0x4000937	          0x4c89f7	                            mov rdi, r14	      4509	syntax.c	FUNCTION_73	CALL_6
0x400093a	              0x5d	                                 pop rbp	      4510	syntax.c	FUNCTION_73
0x400093b	            0x415c	                                 pop r12	      4510	syntax.c	FUNCTION_73
0x400093d	            0x415d	                                 pop r13	      4510	syntax.c	FUNCTION_73
0x400093f	            0x415e	                                 pop r14	      4510	syntax.c	FUNCTION_73
0x4000941	      0xe900000000	                           jmp 0x4000946	      4509	syntax.c	FUNCTION_73	CALL_6
0x4000946	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4509	syntax.c	FUNCTION_73	CALL_6
0x4000950	        0x4983c410	                           add r12, 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x4000954	            0xeb8a	                           jmp 0x40008e0	      4494	syntax.c	FUNCTION_73	FOR_1
syn_cmd_off	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,0:CALL,1	2
0x4002c20	      0xbe00000000	                              mov esi, 0	      3911	syntax.c	FUNCTION_61	CALL_1
0x4002c25	      0xe976ffffff	                   jmp sym.syn_cmd_onoff	      3911	syntax.c	FUNCTION_61	CALL_1
syn_stack_apply_changes	SWITCH,0:WHILE,0:DO,0:IF,0:ELSE,0:FOR,0:functions,1:CALL,1	30
0x4003c50	            0x4154	                                push r12	      1308	syntax.c	FUNCTION_14
0x4003c52	    0x4c8da7681700	                 lea r12, [rdi + 0x1768]	      1311	syntax.c	FUNCTION_14	CALL_1
0x4003c59	              0x55	                                push rbp	      1308	syntax.c	FUNCTION_14
0x4003c5a	              0x53	                                push rbx	      1308	syntax.c	FUNCTION_14
0x4003c5b	          0x4889fe	                            mov rsi, rdi	      1311	syntax.c	FUNCTION_14	CALL_1
0x4003c5e	          0x4889fd	                            mov rbp, rdi	      1308	syntax.c	FUNCTION_14
0x4003c61	          0x4c89e7	                            mov rdi, r12	      1311	syntax.c	FUNCTION_14	CALL_1
0x4003c64	      0xe817e7ffff	  call sym.syn_stack_apply_changes_block	      1311	syntax.c	FUNCTION_14	CALL_1
0x4003c69	    0x488b1d000000	            mov rbx, qword [0x04003c70] 	      1313	syntax.c	FUNCTION_14
0x4003c70	          0x4885db	                           test rbx, rbx	      1313	syntax.c	FUNCTION_14
0x4003c73	            0x7514	                           jne 0x4003c89	      1313	syntax.c	FUNCTION_14
0x4003c75	            0xeb32	                           jmp 0x4003ca9	      1313	syntax.c	FUNCTION_14
0x4003c77	    0x660f1f840000	                    nop word [rax + rax]	      1313	syntax.c	FUNCTION_14
0x4003c80	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1313	syntax.c	FUNCTION_14
0x4003c84	          0x4885db	                           test rbx, rbx	      1313	syntax.c	FUNCTION_14
0x4003c87	            0x7420	                            je 0x4003ca9	      1313	syntax.c	FUNCTION_14
0x4003c89	        0x483b6b08	                cmp rbp, qword [rbx + 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4003c8d	            0x75f1	                           jne 0x4003c80	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4003c8f	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4003c93	          0x4939fc	                            cmp r12, rdi	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4003c96	            0x74e8	                            je 0x4003c80	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x4003c98	          0x4889ee	                            mov rsi, rbp	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4003c9b	      0xe8e0e6ffff	  call sym.syn_stack_apply_changes_block	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x4003ca0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1313	syntax.c	FUNCTION_14
0x4003ca4	          0x4885db	                           test rbx, rbx	      1313	syntax.c	FUNCTION_14
0x4003ca7	            0x75e0	                           jne 0x4003c89	      1313	syntax.c	FUNCTION_14
0x4003ca9	              0x5b	                                 pop rbx	      1318	syntax.c	FUNCTION_14
0x4003caa	              0x5d	                                 pop rbp	      1318	syntax.c	FUNCTION_14
0x4003cab	            0x415c	                                 pop r12	      1318	syntax.c	FUNCTION_14
0x4003cad	              0xc3	                                     ret	      1318	syntax.c	FUNCTION_14
in_id_list	SWITCH,0:WHILE,2:DO,0:IF,14:ELSE,3:FOR,0:functions,0:CALL,2	141
0x4000060	          0x4885ff	                           test rdi, rdi	      6241	syntax.c	FUNCTION_94	IF_1
0x4000063	            0x4156	                                push r14	      6232	syntax.c	FUNCTION_94
0x4000065	          0x4989d6	                            mov r14, rdx	      6232	syntax.c	FUNCTION_94
0x4000068	            0x4155	                                push r13	      6232	syntax.c	FUNCTION_94
0x400006a	            0x4154	                                push r12	      6232	syntax.c	FUNCTION_94
0x400006c	              0x55	                                push rbp	      6232	syntax.c	FUNCTION_94
0x400006d	          0x4889f5	                            mov rbp, rsi	      6232	syntax.c	FUNCTION_94
0x4000070	              0x53	                                push rbx	      6232	syntax.c	FUNCTION_94
0x4000071	            0x89cb	                            mov ebx, ecx	      6232	syntax.c	FUNCTION_94
0x4000073	      0x440fb76204	              movzx r12d, word [rdx + 4]	      6236	syntax.c	FUNCTION_94
0x4000078	            0x7476	                            je 0x40000f0	      6241	syntax.c	FUNCTION_94	IF_1
0x400007a	        0x488b7208	                mov rsi, qword [rdx + 8]	      6241	syntax.c	FUNCTION_94	IF_1
0x400007e	          0x4885f6	                           test rsi, rsi	      6241	syntax.c	FUNCTION_94	IF_1
0x4000081	            0x746d	                            je 0x40000f0	      6241	syntax.c	FUNCTION_94	IF_1
0x4000083	        0x488b4768	            mov rax, qword [rdi + 0x68] 	      6242	syntax.c	FUNCTION_94	IF_1
0x4000087	            0xa840	                           test al, 0x40	      6242	syntax.c	FUNCTION_94	IF_1
0x4000089	            0x7565	                           jne 0x40000f0	      6242	syntax.c	FUNCTION_94	IF_1
0x400008b	      0xa900000100	                       test eax, 0x10000	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x4000090	            0x7420	                            je 0x40000b2	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x4000092	    0x488b05000000	            mov rax, qword [0x04000099] 	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x4000099	            0xeb12	                           jmp 0x40000ad	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x400009b	       0xf1f440000	                   nop dword [rax + rax]	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40000a0	    0x4881ef900000	                           sub rdi, 0x90	      6248	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40000a7	        0xf6476a01	               test byte [rdi + 0x6a], 1	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40000ab	            0x7405	                            je 0x40000b2	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40000ad	          0x4839c7	                            cmp rdi, rax	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40000b0	            0x77ee	                            ja 0x40000a0	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0x40000b2	          0x486307	                 movsxd rax, dword [rdi]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000b5	            0x85c0	                           test eax, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000b7	            0x7837	                            js 0x40000f0	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000b9	        0x488d1480	                  lea rdx, [rax + rax*4]	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x40000bd	    0x488b05000000	            mov rax, qword [0x040000c4] 	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x40000c4	            0x31ff	                            xor edi, edi	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000c6	        0x48c1e205	                              shl rdx, 5	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x40000ca	    0x480390700200	            add rdx, qword [rax + 0x270]	      6252	syntax.c	FUNCTION_94	IF_1	IF_2
0x40000d1	          0x8b4a24	            mov ecx, dword [rdx + 0x24] 	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000d4	        0x4883c250	                           add rdx, 0x50	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000d8	          0x83e101	                              and ecx, 1	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000db	      0xe880ffffff	                     call sym.in_id_list	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000e0	            0x89c2	                            mov edx, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000e2	      0xb801000000	                              mov eax, 1	      6253	syntax.c	FUNCTION_94	IF_1	IF_2
0x40000e7	            0x85d2	                           test edx, edx	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000e9	     0xf85b4000000	                           jne 0x40001a3	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000ef	              0x90	                                     nop	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0x40000f0	          0x4885ed	                           test rbp, rbp	      6256	syntax.c	FUNCTION_94	IF_3
0x40000f3	     0xf8425010000	                            je 0x400021e	      6256	syntax.c	FUNCTION_94	IF_3
0x40000f9	            0x31c0	                            xor eax, eax	      6264	syntax.c	FUNCTION_94	IF_4
0x40000fb	            0x85db	                           test ebx, ebx	      6264	syntax.c	FUNCTION_94	IF_4
0x40000fd	           0xf94c0	                                 sete al	      6264	syntax.c	FUNCTION_94	IF_4
0x4000100	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	      6263	syntax.c	FUNCTION_94	IF_4
0x4000104	     0xf8499000000	                            je 0x40001a3	      6263	syntax.c	FUNCTION_94	IF_4
0x400010a	      0x480fbf5500	                   movsx rdx, word [rbp]	      6271	syntax.c	FUNCTION_94
0x400010f	    0x8d82e0b1ffff	                 lea eax, [rdx - 0x4e20]	      6272	syntax.c	FUNCTION_94	IF_5
0x4000115	        0x663db70b	                           cmp ax, 0xbb7	      6272	syntax.c	FUNCTION_94	IF_5
0x4000119	     0xf8691000000	                           jbe 0x40001b0	      6272	syntax.c	FUNCTION_94	IF_5
0x400011f	    0x41bd01000000	                             mov r13d, 1	      6296	syntax.c	FUNCTION_94	ELSE_3
0x4000125	            0xeb12	                           jmp 0x4000139	      6296	syntax.c	FUNCTION_94	ELSE_3
0x4000127	    0x660f1f840000	                    nop word [rax + rax]	      6296	syntax.c	FUNCTION_94	ELSE_3
0x4000130	        0x4883c502	                              add rbp, 2	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x4000134	      0x480fbf5500	                   movsx rdx, word [rbp]	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x4000139	          0x6685d2	                             test dx, dx	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x400013c	     0xf84a2000000	                            je 0x40001e4	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x4000142	        0x664139d4	                            cmp r12w, dx	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x4000146	            0x7458	                            je 0x40001a0	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x4000148	      0x6681fad759	                          cmp dx, 0x59d7	      6305	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400014d	            0x7ee1	                           jle 0x4000130	      6305	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400014f	        0x488d0452	                  lea rax, [rdx + rdx*2]	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x4000153	    0x488b15000000	            mov rdx, qword [0x0400015a] 	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400015a	        0x48c1e003	                              shl rax, 3	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400015e	    0x480382880200	            add rax, qword [rdx + 0x288]	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x4000165	    0x488bb0d093f7	          mov rsi, qword [rax - 0x86c30]	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0x400016c	          0x4885f6	                           test rsi, rsi	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400016f	            0x74bf	                            je 0x4000130	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x4000171	    0x8b0500000000	            mov eax, dword [0x04000177] 	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x4000177	          0x83f81d	                           cmp eax, 0x1d	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400017a	            0x7fb4	                            jg 0x4000130	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400017c	          0x83c001	                              add eax, 1	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400017f	            0x31ff	                            xor edi, edi	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x4000181	            0x89d9	                            mov ecx, ebx	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x4000183	          0x4c89f2	                            mov rdx, r14	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x4000186	    0x890500000000	            mov dword [0x0400018c], eax 	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x400018c	      0xe8cffeffff	                     call sym.in_id_list	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_2
0x4000191	    0x832d00000000	               sub dword [0x04000198], 1	      6314	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0x4000198	            0x85c0	                           test eax, eax	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x400019a	            0x7494	                            je 0x4000130	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x400019c	         0xf1f4000	                         nop dword [rax]	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0x40001a0	          0x4489e8	                           mov eax, r13d	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0x40001a3	              0x5b	                                 pop rbx	      6322	syntax.c	FUNCTION_94
0x40001a4	              0x5d	                                 pop rbp	      6322	syntax.c	FUNCTION_94
0x40001a5	            0x415c	                                 pop r12	      6322	syntax.c	FUNCTION_94
0x40001a7	            0x415d	                                 pop r13	      6322	syntax.c	FUNCTION_94
0x40001a9	            0x415e	                                 pop r14	      6322	syntax.c	FUNCTION_94
0x40001ab	              0xc3	                                     ret	      6322	syntax.c	FUNCTION_94
0x40001ac	         0xf1f4000	                         nop dword [rax]	      6322	syntax.c	FUNCTION_94
0x40001b0	      0x6681fa0752	                          cmp dx, 0x5207	      6274	syntax.c	FUNCTION_94	IF_5	IF_6
0x40001b5	            0x7e41	                           jle 0x40001f8	      6274	syntax.c	FUNCTION_94	IF_5	IF_6
0x40001b7	      0x6681faef55	                          cmp dx, 0x55ef	      6280	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8
0x40001bc	           0xfbfc2	                           movsx eax, dx	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x40001bf	            0x7f4f	                            jg 0x4000210	      6280	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8
0x40001c1	      0x2d08520000	                         sub eax, 0x5208	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x40001c6	          0x413b06	                    cmp eax, dword [r14]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x40001c9	            0x7553	                           jne 0x400021e	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x40001cb	            0x85db	                           test ebx, ebx	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x40001cd	            0x754f	                           jne 0x400021e	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0x40001cf	      0x480fbf5502	               movsx rdx, word [rbp + 2]	      6292	syntax.c	FUNCTION_94	IF_5
0x40001d4	          0x4531ed	                          xor r13d, r13d	      6293	syntax.c	FUNCTION_94	IF_5
0x40001d7	        0x4883c502	                              add rbp, 2	      6292	syntax.c	FUNCTION_94	IF_5
0x40001db	          0x6685d2	                             test dx, dx	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x40001de	     0xf855effffff	                           jne 0x4000142	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x40001e4	          0x4489e8	                           mov eax, r13d	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0x40001e7	              0x5b	                                 pop rbx	      6322	syntax.c	FUNCTION_94
0x40001e8	          0x83f001	                              xor eax, 1	      6322	syntax.c	FUNCTION_94
0x40001eb	              0x5d	                                 pop rbp	      6322	syntax.c	FUNCTION_94
0x40001ec	            0x415c	                                 pop r12	      6322	syntax.c	FUNCTION_94
0x40001ee	            0x415d	                                 pop r13	      6322	syntax.c	FUNCTION_94
0x40001f0	            0x415e	                                 pop r14	      6322	syntax.c	FUNCTION_94
0x40001f2	              0xc3	                                     ret	      6322	syntax.c	FUNCTION_94
0x40001f3	       0xf1f440000	                   nop dword [rax + rax]	      6322	syntax.c	FUNCTION_94
0x40001f8	    0x81ea204e0000	                         sub edx, 0x4e20	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x40001fe	            0x31c0	                            xor eax, eax	      6257	syntax.c	FUNCTION_94	IF_3
0x4000200	          0x413b16	                    cmp edx, dword [r14]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x4000203	            0x74ca	                            je 0x40001cf	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0x4000205	              0x5b	                                 pop rbx	      6322	syntax.c	FUNCTION_94
0x4000206	              0x5d	                                 pop rbp	      6322	syntax.c	FUNCTION_94
0x4000207	            0x415c	                                 pop r12	      6322	syntax.c	FUNCTION_94
0x4000209	            0x415d	                                 pop r13	      6322	syntax.c	FUNCTION_94
0x400020b	            0x415e	                                 pop r14	      6322	syntax.c	FUNCTION_94
0x400020d	              0xc3	                                     ret	      6322	syntax.c	FUNCTION_94
0x400020e	            0x6690	                                     nop	      6322	syntax.c	FUNCTION_94
0x4000210	      0x2df0550000	                         sub eax, 0x55f0	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x4000215	          0x413b06	                    cmp eax, dword [r14]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x4000218	            0x7504	                           jne 0x400021e	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400021a	            0x85db	                           test ebx, ebx	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400021c	            0x75b1	                           jne 0x40001cf	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0x400021e	              0x5b	                                 pop rbx	      6322	syntax.c	FUNCTION_94
0x400021f	            0x31c0	                            xor eax, eax	      6257	syntax.c	FUNCTION_94	IF_3
0x4000221	              0x5d	                                 pop rbp	      6322	syntax.c	FUNCTION_94
0x4000222	            0x415c	                                 pop r12	      6322	syntax.c	FUNCTION_94
0x4000224	            0x415d	                                 pop r13	      6322	syntax.c	FUNCTION_94
0x4000226	            0x415e	                                 pop r14	      6322	syntax.c	FUNCTION_94
0x4000228	              0xc3	                                     ret	      6322	syntax.c	FUNCTION_94
syn_match_linecont	SWITCH,0:WHILE,0:DO,0:IF,1:ELSE,0:FOR,0:functions,0:CALL,3	36
0x4000550	              0x55	                                push rbp	      1034	syntax.c	FUNCTION_8
0x4000551	              0x53	                                push rbx	      1034	syntax.c	FUNCTION_8
0x4000552	    0x4881ec880100	                          sub rsp, 0x188	      1034	syntax.c	FUNCTION_8
0x4000559	    0x488b1d000000	            mov rbx, qword [0x04000560] 	      1039	syntax.c	FUNCTION_8	IF_1
0x4000560	    0x64488b042528	                mov rax, qword fs:[0x28]	      1034	syntax.c	FUNCTION_8
0x4000569	    0x488984247801	            mov qword [rsp + 0x178], rax	      1034	syntax.c	FUNCTION_8
0x4000571	            0x31c0	                            xor eax, eax	      1034	syntax.c	FUNCTION_8
0x4000573	    0x4883bbc80200	              cmp qword [rbx + 0x2c8], 0	      1039	syntax.c	FUNCTION_8	IF_1
0x400057b	            0x745f	                            je 0x40005dc	      1039	syntax.c	FUNCTION_8	IF_1
0x400057d	          0x4889fd	                            mov rbp, rdi	      1039	syntax.c	FUNCTION_8	IF_1
0x4000580	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0x4000588	      0xe883fdffff	                   call sym.save_chartab	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0x400058d	    0x8b8300030000	           mov eax, dword [rbx + 0x300] 	      1043	syntax.c	FUNCTION_8	IF_1
0x4000593	    0x488d8bd00200	                  lea rcx, [rbx + 0x2d0]	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x400059a	            0x31d2	                            xor edx, edx	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x400059c	          0x4889ee	                            mov rsi, rbp	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x400059f	          0x4889e7	                            mov rdi, rsp	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x40005a2	    0x898424480100	            mov dword [rsp + 0x148], eax	      1043	syntax.c	FUNCTION_8	IF_1
0x40005a9	    0x488b83c80200	           mov rax, qword [rbx + 0x2c8] 	      1044	syntax.c	FUNCTION_8	IF_1
0x40005b0	        0x48890424	                    mov qword [rsp], rax	      1044	syntax.c	FUNCTION_8	IF_1
0x40005b4	      0xe807feffff	                    call sym.syn_regexec	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x40005b9	        0x488b1424	                    mov rdx, qword [rsp]	      1047	syntax.c	FUNCTION_8	IF_1
0x40005bd	            0x89c3	                            mov ebx, eax	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0x40005bf	    0x488b05000000	            mov rax, qword [0x040005c6] 	      1047	syntax.c	FUNCTION_8	IF_1
0x40005c6	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	      1048	syntax.c	FUNCTION_8	IF_1	CALL_3
0x40005ce	    0x488990c80200	            mov qword [rax + 0x2c8], rdx	      1047	syntax.c	FUNCTION_8	IF_1
0x40005d5	      0xe896fdffff	                call sym.restore_chartab	      1048	syntax.c	FUNCTION_8	IF_1	CALL_3
0x40005da	            0x89d8	                            mov eax, ebx	      1049	syntax.c	FUNCTION_8	IF_1
0x40005dc	    0x488bb4247801	           mov rsi, qword [rsp + 0x178] 	      1052	syntax.c	FUNCTION_8
0x40005e4	    0x644833342528	                xor rsi, qword fs:[0x28]	      1052	syntax.c	FUNCTION_8
0x40005ed	            0x750a	                           jne 0x40005f9	      1052	syntax.c	FUNCTION_8
0x40005ef	    0x4881c4880100	                          add rsp, 0x188	      1052	syntax.c	FUNCTION_8
0x40005f6	              0x5b	                                 pop rbx	      1052	syntax.c	FUNCTION_8
0x40005f7	              0x5d	                                 pop rbp	      1052	syntax.c	FUNCTION_8
0x40005f8	              0xc3	                                     ret	      1052	syntax.c	FUNCTION_8
0x40005f9	      0xe800000000	                          call 0x40005fe	      1052	syntax.c	FUNCTION_8
syn_get_id	SWITCH,0:WHILE,0:DO,0:IF,2:ELSE,1:FOR,0:functions,0:CALL,2	34
0x400afd0	            0x4155	                                push r13	      6571	syntax.c	FUNCTION_102
0x400afd2	            0x4154	                                push r12	      6571	syntax.c	FUNCTION_102
0x400afd4	          0x4589cd	                           mov r13d, r9d	      6571	syntax.c	FUNCTION_102
0x400afd7	              0x55	                                push rbp	      6571	syntax.c	FUNCTION_102
0x400afd8	              0x53	                                push rbx	      6571	syntax.c	FUNCTION_102
0x400afd9	            0x89cd	                            mov ebp, ecx	      6571	syntax.c	FUNCTION_102
0x400afdb	            0x89d3	                            mov ebx, edx	      6571	syntax.c	FUNCTION_102
0x400afdd	          0x4d89c4	                             mov r12, r8	      6571	syntax.c	FUNCTION_102
0x400afe0	        0x4883ec08	                              sub rsp, 8	      6571	syntax.c	FUNCTION_102
0x400afe4	    0x488b05000000	            mov rax, qword [0x0400afeb] 	      6574	syntax.c	FUNCTION_102	IF_1
0x400afeb	        0x48394708	                cmp qword [rdi + 8], rax	      6574	syntax.c	FUNCTION_102	IF_1
0x400afef	            0x742f	                            je 0x400b020	      6574	syntax.c	FUNCTION_102	IF_1
0x400aff1	      0xe800000000	                          call 0x400aff6	      6577	syntax.c	FUNCTION_102	CALL_1
0x400aff6	          0x4489ea	                           mov edx, r13d	      6585	syntax.c	FUNCTION_102	CALL_2
0x400aff9	          0x4c89e6	                            mov rsi, r12	      6585	syntax.c	FUNCTION_102	CALL_2
0x400affc	            0x89df	                            mov edi, ebx	      6585	syntax.c	FUNCTION_102	CALL_2
0x400affe	      0xe800000000	                          call 0x400b003	      6585	syntax.c	FUNCTION_102	CALL_2
0x400b003	            0x85ed	                           test ebp, ebp	      6587	syntax.c	FUNCTION_102
0x400b005	    0x8b0500000000	            mov eax, dword [0x0400b00b] 	      6587	syntax.c	FUNCTION_102
0x400b00b	     0xf4405000000	           cmove eax, dword [0x0400b012]	      6587	syntax.c	FUNCTION_102
0x400b012	        0x4883c408	                              add rsp, 8	      6588	syntax.c	FUNCTION_102
0x400b016	              0x5b	                                 pop rbx	      6588	syntax.c	FUNCTION_102
0x400b017	              0x5d	                                 pop rbp	      6588	syntax.c	FUNCTION_102
0x400b018	            0x415c	                                 pop r12	      6588	syntax.c	FUNCTION_102
0x400b01a	            0x415d	                                 pop r13	      6588	syntax.c	FUNCTION_102
0x400b01c	              0xc3	                                     ret	      6588	syntax.c	FUNCTION_102
0x400b01d	           0xf1f00	                         nop dword [rax]	      6588	syntax.c	FUNCTION_102
0x400b020	    0x483935000000	            cmp qword [0x0400b027], rsi 	      6575	syntax.c	FUNCTION_102	IF_1
0x400b027	            0x75c8	                           jne 0x400aff1	      6575	syntax.c	FUNCTION_102	IF_1
0x400b029	    0x391500000000	            cmp dword [0x0400b02f], edx 	      6576	syntax.c	FUNCTION_102	IF_1
0x400b02f	            0x7fc0	                            jg 0x400aff1	      6576	syntax.c	FUNCTION_102	IF_1
0x400b031	            0x7dc3	                           jge 0x400aff6	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400b033	    0xc70500000000	     mov dword [0x0400b03d], 0xffffffff 	      6583	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400b03d	            0xebb7	                           jmp 0x400aff6	      6583	syntax.c	FUNCTION_102	ELSE_1	IF_2
combine_stl_hlt	SWITCH,0:WHILE,0:DO,0:IF,10:ELSE,1:FOR,0:functions,0:CALL,4	117
0x400c710	            0x4156	                                push r14	      9975	syntax.c	FUNCTION_162
0x400c712	            0x4155	                                push r13	      9975	syntax.c	FUNCTION_162
0x400c714	            0x85d2	                           test edx, edx	      9978	syntax.c	FUNCTION_162	IF_1
0x400c716	            0x4154	                                push r12	      9975	syntax.c	FUNCTION_162
0x400c718	              0x55	                                push rbp	      9975	syntax.c	FUNCTION_162
0x400c719	          0x4963e8	                         movsxd rbp, r8d	      9975	syntax.c	FUNCTION_162
0x400c71c	              0x53	                                push rbx	      9975	syntax.c	FUNCTION_162
0x400c71d	          0x8d1c29	                    lea ebx, [rcx + rbp]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x400c720	          0x4189fd	                           mov r13d, edi	      9975	syntax.c	FUNCTION_162
0x400c723	          0x4189f4	                           mov r12d, esi	      9975	syntax.c	FUNCTION_162
0x400c726	    0x4c8b35000000	            mov r14, qword [0x0400c72d] 	      9976	syntax.c	FUNCTION_162
0x400c72d	          0x4863c3	                         movsxd rax, ebx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x400c730	     0xf855a010000	                           jne 0x400c890	      9978	syntax.c	FUNCTION_162	IF_1
0x400c736	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x400c73a	          0x4d63c9	                          movsxd r9, r9d	      9981	syntax.c	FUNCTION_162	IF_1
0x400c73d	        0x488d0450	                  lea rax, [rax + rdx*2]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x400c741	        0x498d14c6	                  lea rdx, [r14 + rax*8]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x400c745	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x400c747	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x400c74b	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_173	CALL_6
0x400c74e	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c755	    0x48c782900000	               mov qword [rdx + 0x90], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c760	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x400c764	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x400c767	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_173	CALL_6
0x400c76d	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x400c770	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x400c773	          0x4889d0	                            mov rax, rdx	        90	string3.h	FUNCTION_173	CALL_6
0x400c776	    0x468b148d0000	                  mov r10d, dword [r9*4]	      9981	syntax.c	FUNCTION_162	IF_1
0x400c77e	        0x44895214	            mov dword [rdx + 0x14], r10d	      9981	syntax.c	FUNCTION_162	IF_1
0x400c782	    0x468b048d0000	                   mov r8d, dword [r9*4]	      9982	syntax.c	FUNCTION_162	IF_1
0x400c78a	        0x4489422c	             mov dword [rdx + 0x2c], r8d	      9982	syntax.c	FUNCTION_162	IF_1
0x400c78e	    0x428b0c8d0000	                   mov ecx, dword [r9*4]	      9984	syntax.c	FUNCTION_162	IF_1
0x400c796	          0x894a6c	             mov dword [rdx + 0x6c], ecx	      9984	syntax.c	FUNCTION_162	IF_1
0x400c799	          0x4963fd	                        movsxd rdi, r13d	      9994	syntax.c	FUNCTION_162
0x400c79c	          0x4963f4	                        movsxd rsi, r12d	      9994	syntax.c	FUNCTION_162
0x400c79f	    0xc78088000000	               mov dword [rax + 0x88], 0	      9991	syntax.c	FUNCTION_162
0x400c7a9	        0x488d14ff	                  lea rdx, [rdi + rdi*8]	      9994	syntax.c	FUNCTION_162
0x400c7ad	        0x488d1457	                  lea rdx, [rdi + rdx*2]	      9994	syntax.c	FUNCTION_162
0x400c7b1	    0x498dbcd668ff	           lea rdi, [r14 + rdx*8 - 0x98]	      9994	syntax.c	FUNCTION_162
0x400c7b9	        0x488d14f6	                  lea rdx, [rsi + rsi*8]	      9994	syntax.c	FUNCTION_162
0x400c7bd	        0x488d1456	                  lea rdx, [rsi + rdx*2]	      9994	syntax.c	FUNCTION_162
0x400c7c1	          0x8b7714	            mov esi, dword [rdi + 0x14] 	      9993	syntax.c	FUNCTION_162
0x400c7c4	    0x498d94d668ff	           lea rdx, [r14 + rdx*8 - 0x98]	      9994	syntax.c	FUNCTION_162
0x400c7cc	          0x337214	             xor esi, dword [rdx + 0x14]	      9993	syntax.c	FUNCTION_162
0x400c7cf	          0x4131f2	                           xor r10d, esi	      9993	syntax.c	FUNCTION_162
0x400c7d2	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x400c7d6	        0x483b7218	            cmp rsi, qword [rdx + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x400c7da	        0x44895014	            mov dword [rax + 0x14], r10d	      9993	syntax.c	FUNCTION_162
0x400c7de	            0x7404	                            je 0x400c7e4	      9995	syntax.c	FUNCTION_162	IF_2
0x400c7e0	        0x48897018	             mov qword [rax + 0x18], rsi	      9996	syntax.c	FUNCTION_162	IF_2
0x400c7e4	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x400c7e8	        0x483b7220	            cmp rsi, qword [rdx + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x400c7ec	            0x7404	                            je 0x400c7f2	      9997	syntax.c	FUNCTION_162	IF_3
0x400c7ee	        0x48897020	             mov qword [rax + 0x20], rsi	      9998	syntax.c	FUNCTION_162	IF_3
0x400c7f2	          0x8b772c	            mov esi, dword [rdi + 0x2c] 	      9999	syntax.c	FUNCTION_162
0x400c7f5	          0x33722c	             xor esi, dword [rdx + 0x2c]	      9999	syntax.c	FUNCTION_162
0x400c7f8	          0x4131f0	                            xor r8d, esi	      9999	syntax.c	FUNCTION_162
0x400c7fb	          0x8b7734	            mov esi, dword [rdi + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x400c7fe	          0x3b7234	            cmp esi, dword [rdx + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x400c801	        0x4489402c	             mov dword [rax + 0x2c], r8d	      9999	syntax.c	FUNCTION_162
0x400c805	            0x7403	                            je 0x400c80a	     10001	syntax.c	FUNCTION_162	IF_4
0x400c807	          0x897034	             mov dword [rax + 0x34], esi	     10002	syntax.c	FUNCTION_162	IF_4
0x400c80a	          0x8b7738	            mov esi, dword [rdi + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x400c80d	          0x3b7238	            cmp esi, dword [rdx + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x400c810	            0x7403	                            je 0x400c815	     10003	syntax.c	FUNCTION_162	IF_5
0x400c812	          0x897038	             mov dword [rax + 0x38], esi	     10004	syntax.c	FUNCTION_162	IF_5
0x400c815	          0x8b776c	            mov esi, dword [rdi + 0x6c] 	     10006	syntax.c	FUNCTION_162
0x400c818	          0x33726c	             xor esi, dword [rdx + 0x6c]	     10006	syntax.c	FUNCTION_162
0x400c81b	            0x31f1	                            xor ecx, esi	     10006	syntax.c	FUNCTION_162
0x400c81d	          0x89486c	             mov dword [rax + 0x6c], ecx	     10006	syntax.c	FUNCTION_162
0x400c820	        0x488b4f40	            mov rcx, qword [rdi + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x400c824	        0x483b4a40	            cmp rcx, qword [rdx + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x400c828	            0x7404	                            je 0x400c82e	     10010	syntax.c	FUNCTION_162	IF_6
0x400c82a	        0x48894840	             mov qword [rax + 0x40], rcx	     10011	syntax.c	FUNCTION_162	IF_6
0x400c82e	        0x488b4f48	            mov rcx, qword [rdi + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x400c832	        0x483b4a48	            cmp rcx, qword [rdx + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x400c836	            0x7404	                            je 0x400c83c	     10012	syntax.c	FUNCTION_162	IF_7
0x400c838	        0x48894848	             mov qword [rax + 0x48], rcx	     10013	syntax.c	FUNCTION_162	IF_7
0x400c83c	        0x488b4f50	            mov rcx, qword [rdi + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x400c840	        0x483b4a50	            cmp rcx, qword [rdx + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x400c844	            0x7404	                            je 0x400c84a	     10014	syntax.c	FUNCTION_162	IF_8
0x400c846	        0x48894850	             mov qword [rax + 0x50], rcx	     10015	syntax.c	FUNCTION_162	IF_8
0x400c84a	        0x488b4f58	            mov rcx, qword [rdi + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x400c84e	        0x483b4a58	            cmp rcx, qword [rdx + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x400c852	            0x7404	                            je 0x400c858	     10016	syntax.c	FUNCTION_162	IF_9
0x400c854	        0x48894858	             mov qword [rax + 0x58], rcx	     10017	syntax.c	FUNCTION_162	IF_9
0x400c858	        0x448d6301	                     lea r12d, [rbx + 1]	     10023	syntax.c	FUNCTION_162
0x400c85c	            0x89df	                            mov edi, ebx	     10024	syntax.c	FUNCTION_162	CALL_3
0x400c85e	    0x448925000000	           mov dword [0x0400c865], r12d 	     10023	syntax.c	FUNCTION_162
0x400c865	      0xe8f687ffff	                    call sym.set_hl_attr	     10024	syntax.c	FUNCTION_162	CALL_3
0x400c86a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     10025	syntax.c	FUNCTION_162	CALL_4
0x400c86f	          0x4489e7	                           mov edi, r12d	     10025	syntax.c	FUNCTION_162	CALL_4
0x400c872	        0x4c8d04a8	                   lea r8, [rax + rbp*4]	     10025	syntax.c	FUNCTION_162	CALL_4
0x400c876	      0xe800000000	                          call 0x400c87b	     10025	syntax.c	FUNCTION_162	CALL_4
0x400c87b	          0x418900	                     mov dword [r8], eax	     10025	syntax.c	FUNCTION_162	CALL_4
0x400c87e	              0x5b	                                 pop rbx	     10026	syntax.c	FUNCTION_162
0x400c87f	              0x5d	                                 pop rbp	     10026	syntax.c	FUNCTION_162
0x400c880	            0x415c	                                 pop r12	     10026	syntax.c	FUNCTION_162
0x400c882	            0x415d	                                 pop r13	     10026	syntax.c	FUNCTION_162
0x400c884	            0x415e	                                 pop r14	     10026	syntax.c	FUNCTION_162
0x400c886	              0xc3	                                     ret	     10026	syntax.c	FUNCTION_162
0x400c887	    0x660f1f840000	                    nop word [rax + rax]	     10026	syntax.c	FUNCTION_162
0x400c890	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x400c894	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_171	CALL_3
0x400c897	        0x488d0448	                  lea rax, [rax + rcx*2]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x400c89b	        0x4d8d0cc6	                   lea r9, [r14 + rax*8]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x400c89f	        0x488d04d2	                  lea rax, [rdx + rdx*8]	        59	string3.h	FUNCTION_171	CALL_3
0x400c8a3	        0x488d0442	                  lea rax, [rdx + rax*2]	        59	string3.h	FUNCTION_171	CALL_3
0x400c8a7	          0x4c89cf	                             mov rdi, r9	        59	string3.h	FUNCTION_171	CALL_3
0x400c8aa	      0xba98000000	                           mov edx, 0x98	        59	string3.h	FUNCTION_171	CALL_3
0x400c8af	    0x498db4c668ff	           lea rsi, [r14 + rax*8 - 0x98]	        59	string3.h	FUNCTION_171	CALL_3
0x400c8b7	      0xe800000000	                          call 0x400c8bc	        59	string3.h	FUNCTION_171	CALL_3
0x400c8bc	        0x448b5014	           mov r10d, dword [rax + 0x14] 	        59	string3.h	FUNCTION_171	CALL_3
0x400c8c0	        0x448b402c	            mov r8d, dword [rax + 0x2c] 	        59	string3.h	FUNCTION_171	CALL_3
0x400c8c4	          0x8b486c	            mov ecx, dword [rax + 0x6c] 	        59	string3.h	FUNCTION_171	CALL_3
0x400c8c7	      0xe9cdfeffff	                           jmp 0x400c799	        59	string3.h	FUNCTION_171	CALL_3
