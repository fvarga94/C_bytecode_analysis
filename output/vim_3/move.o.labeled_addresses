halfpage	ELSE,7:CALL,24:DO,1:SWITCH,0:functions,0:IF,19:FOR,0:WHILE,6	258
0x40038a0	            0x4157	                                push r15	      2556	move.c	ELSE_5	FUNCTION_50
0x40038a2	            0x4156	                                push r14	      2556	move.c	ELSE_5	FUNCTION_50
0x40038a4	            0x4155	                                push r13	      2556	move.c	ELSE_5	FUNCTION_50
0x40038a6	            0x4154	                                push r12	      2556	move.c	ELSE_5	FUNCTION_50
0x40038a8	          0x4189fd	                           mov r13d, edi	      2556	move.c	ELSE_5	FUNCTION_50
0x40038ab	              0x55	                                push rbp	      2556	move.c	ELSE_5	FUNCTION_50
0x40038ac	              0x53	                                push rbx	      2556	move.c	ELSE_5	FUNCTION_50
0x40038ad	        0x4883ec08	                              sub rsp, 8	      2556	move.c	ELSE_5	FUNCTION_50
0x40038b1	    0x488b15000000	            mov rdx, qword [0x040038b8] 	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x40038b8	          0x4885f6	                           test rsi, rsi	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x40038bb	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x40038c2	     0xf85a3020000	                           jne 0x4003b6b	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x40038c8	    0x488b9a600200	           mov rbx, qword [rdx + 0x260] 	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x40038cf	          0x4839d8	                            cmp rax, rbx	      2565	move.c	ELSE_5	FUNCTION_50
0x40038d2	        0x480f4ed8	                         cmovle rbx, rax	      2565	move.c	ELSE_5	FUNCTION_50
0x40038d6	      0xe800000000	                          call 0x40038db	      2568	move.c	ELSE_5	FUNCTION_50	CALL_1
0x40038db	    0x488b3d000000	            mov rdi, qword [0x040038e2] 	       590	move.c	FUNCTION_16	IF_1
0x40038e2	            0x89dd	                            mov ebp, ebx	      2565	move.c	ELSE_5	FUNCTION_50
0x40038e4	    0xf687b4000000	           test byte [rdi + 0xb4], 0x20 	       590	move.c	FUNCTION_16	IF_1
0x40038eb	          0x4889fa	                            mov rdx, rdi	       590	move.c	FUNCTION_16	IF_1
0x40038ee	     0xf8441030000	                            je 0x4003c35	       590	move.c	FUNCTION_16	IF_1
0x40038f4	          0x4585ed	                         test r13d, r13d	      2574	move.c	ELSE_5	FUNCTION_50	IF_2
0x40038f7	     0xf85ec000000	                           jne 0x40039e9	      2574	move.c	ELSE_5	FUNCTION_50	IF_2
0x40038fd	            0x85db	                           test ebx, ebx	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x40038ff	     0xf8e1b020000	                           jle 0x4003b20	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4003905	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4003909	            0x31db	                            xor ebx, ebx	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x400390b	        0x4883fe01	                              cmp rsi, 1	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x400390f	            0x7f6a	                            jg 0x400397b	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4003911	      0xe909030000	                           jmp 0x4003c1f	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4003916	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4003920	    0x488b15000000	            mov rdx, qword [0x04003927] 	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4003927	          0x83ed01	                              sub ebp, 1	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x400392a	      0xb801000000	                              mov eax, 1	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x400392f	    0x838284000000	               add dword [rdx + 0x84], 1	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4003936	    0x8b8ab4000000	            mov ecx, dword [rdx + 0xb4] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x400393c	          0x4801c3	                            add rbx, rax	      2712	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x400393f	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4003943	            0x89ce	                            mov esi, ecx	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4003945	          0x83e68e	                     and esi, 0xffffff8e	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4003948	        0x4883f801	                              cmp rax, 1	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400394c	    0x89b2b4000000	             mov dword [rdx + 0xb4], esi	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4003952	            0x7e11	                           jle 0x4003965	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4003954	        0x4883e801	                              sub rax, 1	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4003958	          0x83e180	                     and ecx, 0xffffff80	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400395b	        0x48894238	             mov qword [rdx + 0x38], rax	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400395f	    0x898ab4000000	             mov dword [rdx + 0xb4], ecx	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4003965	            0x85ed	                           test ebp, ebp	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4003967	     0xf8eb3010000	                           jle 0x4003b20	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x400396d	        0x488b7278	            mov rsi, qword [rdx + 0x78] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4003971	        0x4883fe01	                              cmp rsi, 1	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4003975	     0xf8ea4020000	                           jle 0x4003c1f	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x400397b	    0x448ba2840000	           mov r12d, dword [rdx + 0x84] 	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4003982	          0x4889d7	                            mov rdi, rdx	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4003985	      0xe800000000	                          call 0x400398a	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x400398a	          0x4139c4	                           cmp r12d, eax	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x400398d	            0x7c91	                            jl 0x4003920	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x400398f	    0x488b05000000	            mov rax, qword [0x04003996] 	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4003996	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x400399a	        0x4883ef01	                              sub rdi, 1	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x400399e	      0xe800000000	                          call 0x40039a3	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x40039a3	            0x29c5	                            sub ebp, eax	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x40039a5	          0x4189c4	                           mov r12d, eax	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x40039a8	            0x7909	                           jns 0x40039b3	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x40039aa	          0x4885db	                           test rbx, rbx	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x40039ad	     0xf8f6d010000	                            jg 0x4003b20	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x40039b3	    0x488b35000000	            mov rsi, qword [0x040039ba] 	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40039ba	            0x31d2	                            xor edx, edx	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x40039bc	        0x488b4678	            mov rax, qword [rsi + 0x78] 	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40039c0	        0x4883c678	                           add rsi, 0x78	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x40039c4	        0x488d78ff	                      lea rdi, [rax - 1]	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40039c8	          0x48893e	                    mov qword [rsi], rdi	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40039cb	      0xe800000000	                          call 0x40039d0	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x40039d0	    0x488b15000000	            mov rdx, qword [0x040039d7] 	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40039d7	          0x4963c4	                        movsxd rax, r12d	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40039da	    0xc78284000000	               mov dword [rdx + 0x84], 0	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40039e4	      0xe94dffffff	                           jmp 0x4003936	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40039e9	            0x85db	                           test ebx, ebx	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40039eb	     0xf8e2f010000	                           jle 0x4003b20	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40039f1	    0x488b05000000	            mov rax, qword [0x040039f8] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40039f8	          0x488b00	                    mov rax, qword [rax]	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40039fb	    0x483987e80000	            cmp qword [rdi + 0xe8], rax 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a02	     0xf8ff0000000	                            jg 0x4003af8	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a08	    0x8b9ff4000000	            mov ebx, dword [rdi + 0xf4] 	      2572	move.c	ELSE_5	FUNCTION_50
0x4003a0e	          0x4531e4	                          xor r12d, r12d	      2572	move.c	ELSE_5	FUNCTION_50
0x4003a11	     0x39ff0000000	             add ebx, dword [rdi + 0xf0]	      2572	move.c	ELSE_5	FUNCTION_50
0x4003a17	            0xeb39	                           jmp 0x4003a52	      2572	move.c	ELSE_5	FUNCTION_50
0x4003a19	     0xf1f80000000	                         nop dword [rax]	      2572	move.c	ELSE_5	FUNCTION_50
0x4003a20	          0x83e08e	                     and eax, 0xffffff8e	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4003a23	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4003a29	            0x85ed	                           test ebp, ebp	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a2b	     0xf8eef000000	                           jle 0x4003b20	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a31	    0x488b3d000000	            mov rdi, qword [0x04003a38] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a38	    0x488b05000000	            mov rax, qword [0x04003a3f] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a3f	          0x488b00	                    mov rax, qword [rax]	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a42	    0x483987e80000	            cmp qword [rdi + 0xe8], rax 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a49	          0x4889fa	                            mov rdx, rdi	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a4c	     0xf8fa6000000	                            jg 0x4003af8	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a52	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003a58	            0x85c0	                           test eax, eax	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003a5a	     0xf8e28010000	                           jle 0x4003b88	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003a60	          0x83e801	                              sub eax, 1	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003a63	          0x83ed01	                              sub ebp, 1	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4003a66	      0xba01000000	                              mov edx, 1	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4003a6b	    0x898784000000	             mov dword [rdi + 0x84], eax	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003a71	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003a77	    0x41be01000000	                             mov r14d, 1	      2584	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4003a7d	          0x4901d4	                            add r12, rdx	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a80	    0x8b97c0010000	           mov edx, dword [rdi + 0x1c0] 	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4003a86	            0x89c1	                            mov ecx, eax	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a88	          0x83e1ee	                     and ecx, 0xffffffee	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a8b	    0x898fb4000000	             mov dword [rdi + 0xb4], ecx	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003a91	            0x85d2	                           test edx, edx	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4003a93	            0x758b	                           jne 0x4003a20	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4003a95	    0x488bbfe80000	            mov rdi, qword [rdi + 0xe8] 	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4003a9c	          0x4401f3	                           add ebx, r14d	      2626	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x4003a9f	              0x90	                                     nop	      2626	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x4003aa0	      0xe800000000	                          call 0x4003aa5	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4003aa5	            0x39c3	                            cmp ebx, eax	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4003aa7	          0x4189c6	                           mov r14d, eax	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4003aaa	     0xf8c79ffffff	                            jl 0x4003a29	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4003ab0	    0x488b05000000	            mov rax, qword [0x04003ab7] 	      2634	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003ab7	            0x31f6	                            xor esi, esi	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4003ab9	          0x4429f3	                           sub ebx, r14d	      2637	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003abc	    0x488bb8e80000	            mov rdi, qword [rax + 0xe8] 	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4003ac3	    0x488d90e80000	                   lea rdx, [rax + 0xe8]	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4003aca	      0xe800000000	                          call 0x4003acf	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4003acf	    0x488b15000000	            mov rdx, qword [0x04003ad6] 	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003ad6	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003add	        0x488d7801	                      lea rdi, [rax + 1]	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003ae1	    0x488b05000000	            mov rax, qword [0x04003ae8] 	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003ae8	    0x4889bae80000	             mov qword [rdx + 0xe8], rdi	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003aef	          0x483b38	                    cmp rdi, qword [rax]	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003af2	            0x7eac	                           jle 0x4003aa0	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4003af4	            0x85ed	                           test ebp, ebp	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003af6	            0x7e28	                           jle 0x4003b20	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4003af8	          0x4889d7	                            mov rdi, rdx	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4003afb	      0xe800000000	                          call 0x4003b00	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4003b00	            0x85c0	                           test eax, eax	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4003b02	     0xf8541010000	                           jne 0x4003c49	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4003b08	    0x488b05000000	            mov rax, qword [0x04003b0f] 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4003b0f	          0x4863ed	                         movsxd rbp, ebp	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4003b12	        0x48016838	            add qword [rax + 0x38], rbp 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4003b16	      0xe800000000	                          call 0x4003b1b	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x4003b1b	       0xf1f440000	                   nop dword [rax + rax]	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x4003b20	      0xe800000000	                          call 0x4003b25	      2762	move.c	FUNCTION_50	ELSE_5	CALL_20
0x4003b25	    0x488b3d000000	            mov rdi, qword [0x04003b2c] 	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x4003b2c	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      1368	move.c	FUNCTION_35	IF_1
0x4003b32	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x4003b34	            0x7e0e	                           jle 0x4003b44	      1368	move.c	FUNCTION_35	IF_1
0x4003b36	            0x31f6	                            xor esi, esi	      1368	move.c	FUNCTION_35	IF_1
0x4003b38	          0x4585ed	                         test r13d, r13d	      1368	move.c	FUNCTION_35	IF_1
0x4003b3b	        0x400f94c6	                                sete sil	      1368	move.c	FUNCTION_35	IF_1
0x4003b3f	      0xe84cc6ffff	           call sym.check_topfill.part.8	      1368	move.c	FUNCTION_35	IF_1
0x4003b44	      0xe800000000	                          call 0x4003b49	      2767	move.c	FUNCTION_50	ELSE_5	CALL_22
0x4003b49	      0xbf06000000	                              mov edi, 6	      2768	move.c	FUNCTION_50	ELSE_5	CALL_23
0x4003b4e	      0xe800000000	                          call 0x4003b53	      2768	move.c	FUNCTION_50	ELSE_5	CALL_23
0x4003b53	        0x4883c408	                              add rsp, 8	      2770	move.c	FUNCTION_50	ELSE_5
0x4003b57	      0xbf0a000000	                            mov edi, 0xa	      2769	move.c	FUNCTION_50	ELSE_5	CALL_24
0x4003b5c	              0x5b	                                 pop rbx	      2770	move.c	FUNCTION_50	ELSE_5
0x4003b5d	              0x5d	                                 pop rbp	      2770	move.c	FUNCTION_50	ELSE_5
0x4003b5e	            0x415c	                                 pop r12	      2770	move.c	FUNCTION_50	ELSE_5
0x4003b60	            0x415d	                                 pop r13	      2770	move.c	FUNCTION_50	ELSE_5
0x4003b62	            0x415e	                                 pop r14	      2770	move.c	FUNCTION_50	ELSE_5
0x4003b64	            0x415f	                                 pop r15	      2770	move.c	FUNCTION_50	ELSE_5
0x4003b66	      0xe900000000	                           jmp 0x4003b6b	      2769	move.c	FUNCTION_50	ELSE_5	CALL_24
0x4003b6b	          0x4839c6	                            cmp rsi, rax	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4003b6e	          0x4889f3	                            mov rbx, rsi	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4003b71	        0x480f4fd8	                          cmovg rbx, rax	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4003b75	    0x48899a600200	            mov qword [rdx + 0x260], rbx	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4003b7c	      0xe94efdffff	                           jmp 0x40038cf	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4003b81	     0xf1f80000000	                         nop dword [rax]	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4003b88	        0x488b7f78	            mov rdi, qword [rdi + 0x78] 	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4003b8c	      0xe800000000	                          call 0x4003b91	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4003b91	            0x29c5	                            sub ebp, eax	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4003b93	          0x4189c6	                           mov r14d, eax	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4003b96	            0x7905	                           jns 0x4003b9d	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4003b98	          0x4d85e4	                           test r12, r12	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4003b9b	            0x7f83	                            jg 0x4003b20	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4003b9d	    0x488b05000000	            mov rax, qword [0x04003ba4] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003ba4	            0x31f6	                            xor esi, esi	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003ba6	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003baa	        0x488d5078	                   lea rdx, [rax + 0x78]	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003bae	      0xe800000000	                          call 0x4003bb3	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4003bb3	    0x4c8b3d000000	            mov r15, qword [0x04003bba] 	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4003bba	        0x498b4778	            mov rax, qword [r15 + 0x78] 	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4003bbe	          0x4c89ff	                            mov rdi, r15	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4003bc1	        0x488d7001	                      lea rsi, [rax + 1]	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4003bc5	        0x49897778	             mov qword [r15 + 0x78], rsi	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4003bc9	      0xe800000000	                          call 0x4003bce	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4003bce	    0x488b3d000000	            mov rdi, qword [0x04003bd5] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003bd5	    0x488b15000000	            mov rdx, qword [0x04003bdc] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003bdc	    0x418987840000	             mov dword [r15 + 0x84], eax	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4003be3	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003be7	          0x483b02	                    cmp rax, qword [rdx]	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003bea	            0x7c14	                            jl 0x4003c00	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003bec	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003bf2	          0x4963d6	                        movsxd rdx, r14d	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003bf5	      0xe983feffff	                           jmp 0x4003a7d	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003bfa	    0x660f1f440000	                    nop word [rax + rax]	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003c00	        0x4883c001	                              add rax, 1	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003c04	          0x4963d6	                        movsxd rdx, r14d	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003c07	        0x48894738	             mov qword [rdi + 0x38], rax	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003c0b	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003c11	          0x83e0f1	                     and eax, 0xfffffff1	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003c14	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003c1a	      0xe95efeffff	                           jmp 0x4003a7d	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4003c1f	          0x4863dd	                         movsxd rbx, ebp	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4003c22	        0x48395a38	            cmp qword [rdx + 0x38], rbx 	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4003c26	            0x7f73	                            jg 0x4003c9b	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4003c28	    0x48c742380100	               mov qword [rdx + 0x38], 1	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4003c30	      0xe9ebfeffff	                           jmp 0x4003b20	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4003c35	      0xe896cdffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x4003c3a	    0x488b3d000000	            mov rdi, qword [0x04003c41] 	       591	move.c	FUNCTION_16	CALL_1
0x4003c41	          0x4889fa	                            mov rdx, rdi	       591	move.c	FUNCTION_16	CALL_1
0x4003c44	      0xe9abfcffff	                           jmp 0x40038f4	       591	move.c	FUNCTION_16	CALL_1
0x4003c49	    0x488b15000000	            mov rdx, qword [0x04003c50] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c50	          0x83ed01	                              sub ebp, 1	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c53	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c57	            0xeb31	                           jmp 0x4003c8a	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c59	     0xf1f80000000	                         nop dword [rax]	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c60	        0x4883c238	                           add rdx, 0x38	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4003c64	            0x31f6	                            xor esi, esi	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4003c66	          0x83ed01	                              sub ebp, 1	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c69	      0xe800000000	                          call 0x4003c6e	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4003c6e	    0x488b15000000	            mov rdx, qword [0x04003c75] 	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c75	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c78	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c7c	        0x488d7801	                      lea rdi, [rax + 1]	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c80	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c84	     0xf848cfeffff	                            je 0x4003b16	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c8a	    0x488b05000000	            mov rax, qword [0x04003c91] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c91	          0x483938	                    cmp qword [rax], rdi	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c94	            0x7fca	                            jg 0x4003c60	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c96	      0xe97bfeffff	                           jmp 0x4003b16	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4003c9b	          0x4889d7	                            mov rdi, rdx	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4003c9e	      0xe800000000	                          call 0x4003ca3	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4003ca3	            0x85c0	                           test eax, eax	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4003ca5	            0x743e	                            je 0x4003ce5	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x4003ca7	          0x83ed01	                              sub ebp, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003caa	            0xeb23	                           jmp 0x4003ccf	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cac	         0xf1f4000	                         nop dword [rax]	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cb0	        0x488d78ff	                      lea rdi, [rax - 1]	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cb4	        0x488d7238	                   lea rsi, [rdx + 0x38]	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4003cb8	          0x83ed01	                              sub ebp, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cbb	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cbf	            0x31d2	                            xor edx, edx	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4003cc1	      0xe800000000	                          call 0x4003cc6	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x4003cc6	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cc9	     0xf8451feffff	                            je 0x4003b20	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003ccf	    0x488b15000000	            mov rdx, qword [0x04003cd6] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cd6	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cda	        0x4883f801	                              cmp rax, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003cde	            0x7fd0	                            jg 0x4003cb0	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003ce0	      0xe93bfeffff	                           jmp 0x4003b20	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4003ce5	    0x488b05000000	            mov rax, qword [0x04003cec] 	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x4003cec	        0x48295838	             sub qword [rax + 0x38], rbx	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x4003cf0	      0xe92bfeffff	                           jmp 0x4003b20	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
update_curswant	ELSE,0:CALL,1:DO,0:SWITCH,0:functions,0:IF,1:FOR,0:WHILE,0	14
0x4000dd0	    0x488b3d000000	            mov rdi, qword [0x04000dd7] 	       467	move.c	FUNCTION_7	IF_1
0x4000dd7	          0x8b474c	            mov eax, dword [rdi + 0x4c] 	       467	move.c	FUNCTION_7	IF_1
0x4000dda	            0x85c0	                           test eax, eax	       467	move.c	FUNCTION_7	IF_1
0x4000ddc	            0x7502	                           jne 0x4000de0	       467	move.c	FUNCTION_7	IF_1
0x4000dde	              0xc3	                                     ret	       473	move.c	FUNCTION_7
0x4000ddf	              0x90	                                     nop	       473	move.c	FUNCTION_7
0x4000de0	        0x4883ec08	                              sub rsp, 8	       466	move.c	FUNCTION_7
0x4000de4	      0xe800000000	                          call 0x4000de9	       788	move.c	FUNCTION_24	CALL_1
0x4000de9	    0x488b05000000	            mov rax, qword [0x04000df0] 	       470	move.c	FUNCTION_7	IF_1
0x4000df0	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	       470	move.c	FUNCTION_7	IF_1
0x4000df6	    0xc7404c000000	               mov dword [rax + 0x4c], 0	       471	move.c	FUNCTION_7	IF_1
0x4000dfd	          0x895048	             mov dword [rax + 0x48], edx	       470	move.c	FUNCTION_7	IF_1
0x4000e00	        0x4883c408	                              add rsp, 8	       473	move.c	FUNCTION_7
0x4000e04	              0xc3	                                     ret	       473	move.c	FUNCTION_7
curs_rows	ELSE,7:CALL,10:DO,0:SWITCH,0:functions,0:IF,14:FOR,1:WHILE,0	177
0x4000670	            0x4156	                                push r14	       662	move.c	FUNCTION_23
0x4000672	            0x4155	                                push r13	       662	move.c	FUNCTION_23
0x4000674	            0x4154	                                push r12	       662	move.c	FUNCTION_23
0x4000676	              0x55	                                push rbp	       662	move.c	FUNCTION_23
0x4000677	          0x4889fd	                            mov rbp, rdi	       662	move.c	FUNCTION_23
0x400067a	              0x53	                                push rbx	       662	move.c	FUNCTION_23
0x400067b	      0xe800000000	                          call 0x4000680	       672	move.c	FUNCTION_23	CALL_1
0x4000680	            0x85c0	                           test eax, eax	       674	move.c	FUNCTION_23
0x4000682	            0x740e	                            je 0x4000692	       674	move.c	FUNCTION_23
0x4000684	    0x8bbdf8000000	            mov edi, dword [rbp + 0xf8] 	       673	move.c	FUNCTION_23
0x400068a	            0x85ff	                           test edi, edi	       673	move.c	FUNCTION_23
0x400068c	     0xf857e010000	                           jne 0x4000810	       673	move.c	FUNCTION_23
0x4000692	        0x488b5d78	            mov rbx, qword [rbp + 0x78] 	       673	move.c	FUNCTION_23
0x4000696	    0x41bd01000000	                             mov r13d, 1	       674	move.c	FUNCTION_23
0x400069c	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       677	move.c	FUNCTION_23	FOR_1
0x40006a0	          0x4531e4	                          xor r12d, r12d	       677	move.c	FUNCTION_23	FOR_1
0x40006a3	    0xc785d4000000	               mov dword [rbp + 0xd4], 0	       676	move.c	FUNCTION_23
0x40006ad	          0x4839c3	                            cmp rbx, rax	       677	move.c	FUNCTION_23	FOR_1
0x40006b0	            0x7c47	                            jl 0x40006f9	       677	move.c	FUNCTION_23	FOR_1
0x40006b2	      0xe9c1000000	                           jmp 0x4000778	       677	move.c	FUNCTION_23	FOR_1
0x40006b7	    0x660f1f840000	                    nop word [rax + rax]	       677	move.c	FUNCTION_23	FOR_1
0x40006c0	            0x31d2	                            xor edx, edx	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40006c2	          0x4889de	                            mov rsi, rbx	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40006c5	          0x4889ef	                            mov rdi, rbp	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40006c8	      0xe800000000	                          call 0x40006cd	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x40006cd	          0x4885c0	                           test rax, rax	       719	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40006d0	            0x746e	                            je 0x4000740	       719	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40006d2	          0x4801c3	                            add rbx, rax	       721	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40006d5	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x40006d9	          0x4839c3	                            cmp rbx, rax	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x40006dc	     0xf8f96000000	                            jg 0x4000778	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x40006e2	    0x8385d4000000	               add dword [rbp + 0xd4], 1	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40006e9	     0xf1f80000000	                         nop dword [rax]	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x40006f0	        0x4183c401	                             add r12d, 1	       677	move.c	FUNCTION_23	FOR_1
0x40006f4	          0x4839c3	                            cmp rbx, rax	       677	move.c	FUNCTION_23	FOR_1
0x40006f7	            0x7d7f	                           jge 0x4000778	       677	move.c	FUNCTION_23	FOR_1
0x40006f9	          0x4585ed	                         test r13d, r13d	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x40006fc	            0x75c2	                           jne 0x40006c0	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x40006fe	    0x4439a5f80000	           cmp dword [rbp + 0xf8], r12d 	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000705	            0x7eb9	                           jle 0x40006c0	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000707	          0x4963d4	                        movsxd rdx, r12d	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400070a	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400070e	    0x488b95000100	           mov rdx, qword [rbp + 0x100] 	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000715	        0x488d14ca	                  lea rdx, [rdx + rcx*8]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000719	          0x488b0a	                    mov rcx, qword [rdx]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400071c	          0x4839d9	                            cmp rcx, rbx	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400071f	            0x7ccf	                            jl 0x40006f0	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000721	        0x807a0a00	                 cmp byte [rdx + 0xa], 0	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000725	            0x74c9	                            je 0x40006f0	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000727	          0x4839d9	                            cmp rcx, rbx	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400072a	     0xf8400010000	                            je 0x4000830	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x4000730	           0xf9fc0	                                 setg al	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x4000733	           0xfb6c0	                           movzx eax, al	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x4000736	          0x4129c4	                           sub r12d, eax	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x4000739	            0xeb85	                           jmp 0x40006c0	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x400073b	       0xf1f440000	                   nop dword [rax + rax]	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x4000740	        0x48395d78	            cmp qword [rbp + 0x78], rbx 	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x4000744	        0x4c8d7301	                      lea r14, [rbx + 1]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000748	      0xba01000000	                              mov edx, 1	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400074d	          0x4889de	                            mov rsi, rbx	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000750	          0x4889ef	                            mov rdi, rbp	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000753	     0xf8497000000	                            je 0x40007f0	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x4000759	      0xe800000000	                          call 0x400075e	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400075e	     0x185d4000000	             add dword [rbp + 0xd4], eax	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4000764	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x4000768	          0x4c89f3	                            mov rbx, r14	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x400076b	        0x4183c401	                             add r12d, 1	       677	move.c	FUNCTION_23	FOR_1
0x400076f	          0x4839c3	                            cmp rbx, rax	       677	move.c	FUNCTION_23	FOR_1
0x4000772	            0x7c85	                            jl 0x40006f9	       677	move.c	FUNCTION_23	FOR_1
0x4000774	         0xf1f4000	                         nop dword [rax]	       677	move.c	FUNCTION_23	FOR_1
0x4000778	          0x4889ef	                            mov rdi, rbp	       738	move.c	FUNCTION_23	CALL_5
0x400077b	      0xe800000000	                          call 0x4000780	       738	move.c	FUNCTION_23	CALL_5
0x4000780	    0xf685b4000000	               test byte [rbp + 0xb4], 8	       739	move.c	FUNCTION_23	IF_11
0x4000787	            0x7549	                           jne 0x40007d2	       739	move.c	FUNCTION_23	IF_11
0x4000789	          0x4585ed	                         test r13d, r13d	       741	move.c	FUNCTION_23	IF_11	IF_12
0x400078c	     0xf840b010000	                            je 0x400089d	       741	move.c	FUNCTION_23	IF_11	IF_12
0x4000792	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       741	move.c	FUNCTION_23	IF_11	IF_12
0x4000796	        0x483b7578	            cmp rsi, qword [rbp + 0x78] 	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x400079a	      0xba01000000	                              mov edx, 1	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400079f	          0x4889ef	                            mov rdi, rbp	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x40007a2	     0xf8483010000	                            je 0x400092b	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x40007a8	      0xe800000000	                          call 0x40007ad	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40007ad	    0x8985cc000000	            mov dword [rbp + 0xcc], eax 	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x40007b3	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x40007b7	          0x4531c9	                            xor r9d, r9d	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x40007ba	    0x41b801000000	                              mov r8d, 1	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x40007c0	            0x31c9	                            xor ecx, ecx	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x40007c2	            0x31d2	                            xor edx, edx	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x40007c4	          0x4889ef	                            mov rdi, rbp	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x40007c7	      0xe800000000	                          call 0x40007cc	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x40007cc	    0x8985d0000000	            mov dword [rbp + 0xd0], eax 	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x40007d2	    0x488b3d000000	            mov rdi, qword [0x040007d9] 	       777	move.c	FUNCTION_23	CALL_10
0x40007d9	      0xe882faffff	          call sym.redraw_for_cursorline	       777	move.c	FUNCTION_23	CALL_10
0x40007de	    0x838db4000000	             or dword [rbp + 0xb4], 0x18	       778	move.c	FUNCTION_23
0x40007e5	              0x5b	                                 pop rbx	       780	move.c	FUNCTION_23
0x40007e6	              0x5d	                                 pop rbp	       780	move.c	FUNCTION_23
0x40007e7	            0x415c	                                 pop r12	       780	move.c	FUNCTION_23
0x40007e9	            0x415d	                                 pop r13	       780	move.c	FUNCTION_23
0x40007eb	            0x415e	                                 pop r14	       780	move.c	FUNCTION_23
0x40007ed	              0xc3	                                     ret	       780	move.c	FUNCTION_23
0x40007ee	            0x6690	                                     nop	       780	move.c	FUNCTION_23
0x40007f0	      0xe800000000	                          call 0x40007f5	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007f5	     0x38584000000	             add eax, dword [rbp + 0x84]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007fb	          0x4c89f3	                            mov rbx, r14	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007fe	     0x185d4000000	             add dword [rbp + 0xd4], eax	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000804	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000808	      0xe9e3feffff	                           jmp 0x40006f0	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x400080d	           0xf1f00	                         nop dword [rax]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x4000810	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	       674	move.c	FUNCTION_23
0x4000817	          0x4531ed	                          xor r13d, r13d	       674	move.c	FUNCTION_23
0x400081a	        0x488b5d78	            mov rbx, qword [rbp + 0x78] 	       674	move.c	FUNCTION_23
0x400081e	          0x483918	                    cmp qword [rax], rbx	       674	move.c	FUNCTION_23
0x4000821	        0x410f9fc5	                               setg r13b	       674	move.c	FUNCTION_23
0x4000825	      0xe972feffff	                           jmp 0x400069c	       674	move.c	FUNCTION_23
0x400082a	    0x660f1f440000	                    nop word [rax + rax]	       674	move.c	FUNCTION_23
0x4000830	        0x488b4d08	                mov rcx, qword [rbp + 8]	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4000834	    0x8bb10c010000	           mov esi, dword [rcx + 0x10c] 	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400083a	            0x85f6	                           test esi, esi	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x400083c	     0xf859b000000	                           jne 0x40008dd	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4000842	        0x48395d78	            cmp qword [rbp + 0x78], rbx 	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x4000846	            0x7420	                            je 0x4000868	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x4000848	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x400084c	        0x488d5f01	                      lea rbx, [rdi + 1]	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x4000850	          0x4839c3	                            cmp rbx, rax	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4000853	            0x7f33	                            jg 0x4000888	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4000855	         0xfb75208	               movzx edx, word [rdx + 8]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4000859	     0x195d4000000	             add dword [rbp + 0xd4], edx	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x400085f	      0xe98cfeffff	                           jmp 0x40006f0	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4000864	         0xf1f4000	                         nop dword [rax]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x4000868	    0x8b8dc0010000	           mov ecx, dword [rbp + 0x1c0] 	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x400086e	            0x85c9	                           test ecx, ecx	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x4000870	     0xf854afeffff	                           jne 0x40006c0	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x4000876	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x400087a	        0x488d5f01	                      lea rbx, [rdi + 1]	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x400087e	          0x4839c3	                            cmp rbx, rax	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4000881	            0x7ed2	                           jle 0x4000855	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4000883	       0xf1f440000	                   nop dword [rax + rax]	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x4000888	          0x4889ef	                            mov rdi, rbp	       738	move.c	FUNCTION_23	CALL_5
0x400088b	      0xe800000000	                          call 0x4000890	       738	move.c	FUNCTION_23	CALL_5
0x4000890	    0xf685b4000000	               test byte [rbp + 0xb4], 8	       739	move.c	FUNCTION_23	IF_11
0x4000897	     0xf8535ffffff	                           jne 0x40007d2	       739	move.c	FUNCTION_23	IF_11
0x400089d	    0x4439a5f80000	           cmp dword [rbp + 0xf8], r12d 	       742	move.c	FUNCTION_23	IF_11	IF_12
0x40008a4	     0xf84e8feffff	                            je 0x4000792	       742	move.c	FUNCTION_23	IF_11	IF_12
0x40008aa	            0x7f54	                            jg 0x4000900	       743	move.c	FUNCTION_23	IF_11	IF_12
0x40008ac	     0xf8c8f000000	                            jl 0x4000941	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40008b2	          0x4d63e4	                        movsxd r12, r12d	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40008b5	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40008bc	        0x4b8d1464	                  lea rdx, [r12 + r12*2]	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40008c0	        0x488d04d0	                  lea rax, [rax + rdx*8]	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x40008c4	         0xfb75008	               movzx edx, word [rax + 8]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x40008c8	    0x8995cc000000	            mov dword [rbp + 0xcc], edx 	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x40008ce	         0xfbe400b	            movsx eax, byte [rax + 0xb] 	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x40008d2	    0x8985d0000000	            mov dword [rbp + 0xd0], eax 	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x40008d8	      0xe9f5feffff	                           jmp 0x40007d2	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x40008dd	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008e1	          0x4839c6	                            cmp rsi, rax	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008e4	     0xf8c58ffffff	                            jl 0x4000842	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008ea	        0x4883c601	                              add rsi, 1	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008ee	    0x4839b1100100	           cmp qword [rcx + 0x110], rsi 	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008f5	     0xf8f47ffffff	                            jg 0x4000842	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008fb	      0xe9c0fdffff	                           jmp 0x40006c0	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4000900	          0x4d63e4	                        movsxd r12, r12d	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4000903	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	       744	move.c	FUNCTION_23	IF_11	IF_12
0x400090a	        0x4b8d1464	                  lea rdx, [r12 + r12*2]	       744	move.c	FUNCTION_23	IF_11	IF_12
0x400090e	        0x488d04d0	                  lea rax, [rax + rdx*8]	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4000912	        0x80780a00	                 cmp byte [rax + 0xa], 0	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4000916	     0xf8476feffff	                            je 0x4000792	       744	move.c	FUNCTION_23	IF_11	IF_12
0x400091c	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4000920	          0x483930	                    cmp qword [rax], rsi	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4000923	     0xf856dfeffff	                           jne 0x4000796	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4000929	            0xeb99	                           jmp 0x40008c4	       745	move.c	FUNCTION_23	IF_11	IF_12
0x400092b	      0xe800000000	                          call 0x4000930	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4000930	     0x38584000000	             add eax, dword [rbp + 0x84]	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4000936	    0x8985cc000000	            mov dword [rbp + 0xcc], eax 	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400093c	      0xe972feffff	                           jmp 0x40007b3	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4000941	    0xc785cc000000	               mov dword [rbp + 0xcc], 0	       762	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x400094b	      0xe963feffff	                           jmp 0x40007b3	       762	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
set_topline	ELSE,0:CALL,2:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	22
0x4000c10	              0x53	                                push rbx	       529	move.c	FUNCTION_11
0x4000c11	          0x4531c9	                            xor r9d, r9d	       532	move.c	FUNCTION_11	CALL_1
0x4000c14	    0x41b801000000	                              mov r8d, 1	       532	move.c	FUNCTION_11	CALL_1
0x4000c1a	            0x31c9	                            xor ecx, ecx	       532	move.c	FUNCTION_11	CALL_1
0x4000c1c	          0x4889fb	                            mov rbx, rdi	       529	move.c	FUNCTION_11
0x4000c1f	        0x4883ec10	                           sub rsp, 0x10	       529	move.c	FUNCTION_11
0x4000c23	      0x488d542408	                      lea rdx, [rsp + 8]	       532	move.c	FUNCTION_11	CALL_1
0x4000c28	      0x4889742408	                mov qword [rsp + 8], rsi	       529	move.c	FUNCTION_11
0x4000c2d	      0xe800000000	                          call 0x4000c32	       532	move.c	FUNCTION_11	CALL_1
0x4000c32	      0x488b442408	                mov rax, qword [rsp + 8]	       535	move.c	FUNCTION_11
0x4000c37	    0x81a3b4000000	      and dword [rbx + 0xb4], 0xffffff4e	       541	move.c	FUNCTION_11
0x4000c41	      0xbf0a000000	                            mov edi, 0xa	       543	move.c	FUNCTION_11	CALL_2
0x4000c46	    0xc68380000000	                mov byte [rbx + 0x80], 1	       537	move.c	FUNCTION_11
0x4000c4d	    0xc78384000000	               mov dword [rbx + 0x84], 0	       539	move.c	FUNCTION_11
0x4000c57	          0x4889c2	                            mov rdx, rax	       535	move.c	FUNCTION_11
0x4000c5a	        0x482b5378	             sub rdx, qword [rbx + 0x78]	       535	move.c	FUNCTION_11
0x4000c5e	    0x480193e80000	            add qword [rbx + 0xe8], rdx 	       535	move.c	FUNCTION_11
0x4000c65	        0x48894378	             mov qword [rbx + 0x78], rax	       536	move.c	FUNCTION_11
0x4000c69	      0xe800000000	                          call 0x4000c6e	       543	move.c	FUNCTION_11	CALL_2
0x4000c6e	        0x4883c410	                           add rsp, 0x10	       544	move.c	FUNCTION_11
0x4000c72	              0x5b	                                 pop rbx	       544	move.c	FUNCTION_11
0x4000c73	              0xc3	                                     ret	       544	move.c	FUNCTION_11
invalidate_botline_win	ELSE,0:CALL,0:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	2
0x4000d10	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffff9f	       606	move.c	FUNCTION_18
0x4000d17	              0xc3	                                     ret	       606	move.c	FUNCTION_18
curs_columns	ELSE,15:CALL,16:DO,0:SWITCH,0:functions,0:IF,35:FOR,0:WHILE,1	409
0x40022f0	            0x4157	                                push r15	       923	move.c	FUNCTION_32
0x40022f2	            0x4156	                                push r14	       923	move.c	FUNCTION_32
0x40022f4	            0x4155	                                push r13	       923	move.c	FUNCTION_32
0x40022f6	            0x4154	                                push r12	       923	move.c	FUNCTION_32
0x40022f8	              0x55	                                push rbp	       923	move.c	FUNCTION_32
0x40022f9	              0x53	                                push rbx	       923	move.c	FUNCTION_32
0x40022fa	            0x89fb	                            mov ebx, edi	       923	move.c	FUNCTION_32
0x40022fc	        0x4883ec28	                           sub rsp, 0x28	       923	move.c	FUNCTION_32
0x4002300	    0x64488b042528	                mov rax, qword fs:[0x28]	       923	move.c	FUNCTION_32
0x4002309	      0x4889442418	             mov qword [rsp + 0x18], rax	       923	move.c	FUNCTION_32
0x400230e	            0x31c0	                            xor eax, eax	       923	move.c	FUNCTION_32
0x4002310	      0xe800000000	                          call 0x4002315	       939	move.c	FUNCTION_32	CALL_1
0x4002315	    0x488b3d000000	            mov rdi, qword [0x0400231c] 	       944	move.c	FUNCTION_32	IF_1
0x400231c	    0xf687b4000000	           test byte [rdi + 0xb4], 0x10 	       944	move.c	FUNCTION_32	IF_1
0x4002323	     0xf8427040000	                            je 0x4002750	       944	move.c	FUNCTION_32	IF_1
0x4002329	    0x448b9fd00000	           mov r11d, dword [rdi + 0xd0] 	       951	move.c	FUNCTION_32	IF_2
0x4002330	          0x4585db	                         test r11d, r11d	       951	move.c	FUNCTION_32	IF_2
0x4002333	     0xf84e7030000	                            je 0x4002720	       951	move.c	FUNCTION_32	IF_2
0x4002339	    0x8b8794000000	            mov eax, dword [rdi + 0x94] 	       953	move.c	FUNCTION_32	IF_2
0x400233f	        0x89442414	             mov dword [rsp + 0x14], eax	       953	move.c	FUNCTION_32	IF_2
0x4002343	    0x8987d8000000	             mov dword [rdi + 0xd8], eax	       953	move.c	FUNCTION_32	IF_2
0x4002349	        0x89442410	             mov dword [rsp + 0x10], eax	       953	move.c	FUNCTION_32	IF_2
0x400234d	    0x390500000000	            cmp dword [0x04002353], eax 	       960	move.c	FUNCTION_32	IF_3
0x4002353	            0x7d0a	                           jge 0x400235f	       960	move.c	FUNCTION_32	IF_3
0x4002355	    0xc70500000000	     mov dword [0x0400235f], 0xffffffff 	       961	move.c	FUNCTION_32	IF_3
0x400235f	      0xe800000000	                          call 0x4002364	       893	move.c	FUNCTION_29	CALL_1
0x4002364	    0x488b3d000000	            mov rdi, qword [0x0400236b] 	       964	move.c	FUNCTION_32
0x400236b	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	       965	move.c	FUNCTION_32
0x4002370	    0x8b97d4000000	            mov edx, dword [rdi + 0xd4] 	       970	move.c	FUNCTION_32
0x4002376	    0x8bb7d8000000	            mov esi, dword [rdi + 0xd8] 	       964	move.c	FUNCTION_32
0x400237c	          0x4101c0	                            add r8d, eax	       965	move.c	FUNCTION_32
0x400237f	      0x4489442414	             mov dword [rsp + 0x14], r8d	       965	move.c	FUNCTION_32
0x4002384	    0x8997dc000000	             mov dword [rdi + 0xdc], edx	       970	move.c	FUNCTION_32
0x400238a	    0x8b97ac000000	            mov edx, dword [rdi + 0xac] 	       972	move.c	FUNCTION_32
0x4002390	          0x8d0c06	                    lea ecx, [rsi + rax]	       964	move.c	FUNCTION_32
0x4002393	    0x898fe0000000	             mov dword [rdi + 0xe0], ecx	       964	move.c	FUNCTION_32
0x4002399	          0x4189d4	                           mov r12d, edx	       972	move.c	FUNCTION_32
0x400239c	          0x4129c4	                           sub r12d, eax	       972	move.c	FUNCTION_32
0x400239f	          0x4585e4	                         test r12d, r12d	       973	move.c	FUNCTION_32	IF_4
0x40023a2	     0xf8ec0030000	                           jle 0x4002768	       973	move.c	FUNCTION_32	IF_4
0x40023a8	    0x448b97940200	          mov r10d, dword [rdi + 0x294] 	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40023af	          0x4585d2	                         test r10d, r10d	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40023b2	     0xf8498000000	                            je 0x4002450	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40023b8	            0x85d2	                           test edx, edx	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40023ba	     0xf8490000000	                            je 0x4002450	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40023c0	      0xe800000000	                          call 0x40023c5	       912	move.c	FUNCTION_31	CALL_1
0x40023c5	    0x488b3d000000	            mov rdi, qword [0x040023cc] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023cc	        0x418d2c04	                    lea ebp, [r12 + rax]	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x40023d0	    0x8b8fe0000000	            mov ecx, dword [rdi + 0xe0] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023d6	    0x8b87ac000000	            mov eax, dword [rdi + 0xac] 	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023dc	            0x39c1	                            cmp ecx, eax	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023de	     0xf8c8c000000	                            jl 0x4002470	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023e4	            0x89cb	                            mov ebx, ecx	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023e6	            0x29c3	                            sub ebx, eax	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023e8	            0x89d8	                            mov eax, ebx	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023ea	              0x99	                                     cdq	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023eb	            0xf7fd	                                idiv ebp	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023ed	            0x89ea	                            mov edx, ebp	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023ef	          0x83c001	                              add eax, 1	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023f2	     0x187dc000000	             add dword [rdi + 0xdc], eax	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023f8	           0xfafd0	                           imul edx, eax	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40023fb	    0x488b05000000	            mov rax, qword [0x04002402] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4002402	            0x29d1	                            sub ecx, edx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4002404	    0x898fe0000000	             mov dword [rdi + 0xe0], ecx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x400240a	          0x803800	                       cmp byte [rax], 0	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x400240d	            0x7461	                            je 0x4002470	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x400240f	      0xe800000000	                          call 0x4002414	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4002414	          0x803800	                       cmp byte [rax], 0	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4002417	    0x488b3d000000	            mov rdi, qword [0x0400241e] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x400241e	            0x7550	                           jne 0x4002470	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4002420	    0x488b05000000	            mov rax, qword [0x04002427] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4002427	    0x488b3d000000	            mov rdi, qword [0x0400242e] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x400242e	    0x8b98e0000000	            mov ebx, dword [rax + 0xe0] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4002434	      0xe800000000	                          call 0x4002439	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4002439	    0x488b3d000000	            mov rdi, qword [0x04002440] 	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4002440	            0x39c3	                            cmp ebx, eax	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4002442	            0x752c	                           jne 0x4002470	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4002444	    0xc787e0000000	               mov dword [rdi + 0xe0], 0	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x400244e	            0xeb20	                           jmp 0x4002470	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4002450	            0x85db	                           test ebx, ebx	      1005	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002452	     0xf85d8000000	                           jne 0x4002530	      1005	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002458	    0x8b8794000000	            mov eax, dword [rdi + 0x94] 	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x400245e	            0x39c1	                            cmp ecx, eax	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4002460	     0xf8e4a030000	                           jle 0x40027b0	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4002466	            0x29c1	                            sub ecx, eax	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4002468	            0x31ed	                            xor ebp, ebp	       929	move.c	FUNCTION_32
0x400246a	    0x898fe0000000	             mov dword [rdi + 0xe0], ecx	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4002470	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1059	move.c	FUNCTION_32	IF_17
0x4002474	        0x483b7778	            cmp rsi, qword [rdi + 0x78] 	      1059	move.c	FUNCTION_32	IF_17
0x4002478	     0xf8512010000	                           jne 0x4002590	      1059	move.c	FUNCTION_32	IF_17
0x400247e	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      1060	move.c	FUNCTION_32	IF_17
0x4002484	     0x387dc000000	             add eax, dword [rdi + 0xdc]	      1060	move.c	FUNCTION_32	IF_17
0x400248a	    0x8987dc000000	             mov dword [rdi + 0xdc], eax	      1060	move.c	FUNCTION_32	IF_17
0x4002490	    0x48638fa00000	         movsxd rcx, dword [rdi + 0xa0] 	      1068	move.c	FUNCTION_32	IF_18
0x4002497	    0x8b9f98000000	            mov ebx, dword [rdi + 0x98] 	      1065	move.c	FUNCTION_32
0x400249d	            0x39c1	                            cmp ecx, eax	      1068	move.c	FUNCTION_32	IF_18
0x400249f	     0xf8e73020000	                           jle 0x4002718	      1068	move.c	FUNCTION_32	IF_18
0x40024a5	            0x85db	                           test ebx, ebx	      1069	move.c	FUNCTION_32	IF_18
0x40024a7	     0xf8f03010000	                            jg 0x40025b0	      1069	move.c	FUNCTION_32	IF_18
0x40024ad	            0x4898	                                    cdqe	      1070	move.c	FUNCTION_32	IF_18
0x40024af	    0x480305000000	             add rax, qword [0x040024b6]	      1070	move.c	FUNCTION_32	IF_18
0x40024b6	          0x4839c8	                            cmp rax, rcx	      1070	move.c	FUNCTION_32	IF_18
0x40024b9	     0xf8df1000000	                           jge 0x40025b0	      1070	move.c	FUNCTION_32	IF_18
0x40024bf	              0x90	                                     nop	      1070	move.c	FUNCTION_32	IF_18
0x40024c0	    0xc78798000000	               mov dword [rdi + 0x98], 0	      1156	move.c	FUNCTION_32	ELSE_15
0x40024ca	          0x4531c0	                            xor r8d, r8d	      1156	move.c	FUNCTION_32	ELSE_15
0x40024cd	          0x4439c3	                            cmp ebx, r8d	      1157	move.c	FUNCTION_32	IF_34
0x40024d0	            0x7411	                            je 0x40024e3	      1157	move.c	FUNCTION_32	IF_34
0x40024d2	      0xbf28000000	                           mov edi, 0x28	      1158	move.c	FUNCTION_32	CALL_14
0x40024d7	      0xe800000000	                          call 0x40024dc	      1158	move.c	FUNCTION_32	CALL_14
0x40024dc	    0x488b3d000000	            mov rdi, qword [0x040024e3] 	      1158	move.c	FUNCTION_32	CALL_14
0x40024e3	    0x8b876c020000	           mov eax, dword [rdi + 0x26c] 	      1162	move.c	FUNCTION_32	IF_35
0x40024e9	            0x85c0	                           test eax, eax	      1162	move.c	FUNCTION_32	IF_35
0x40024eb	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      1162	move.c	FUNCTION_32	IF_35
0x40024f1	            0x7408	                            je 0x40024fb	      1162	move.c	FUNCTION_32	IF_35
0x40024f3	            0xa804	                              test al, 4	      1162	move.c	FUNCTION_32	IF_35
0x40024f5	     0xf8495020000	                            je 0x4002790	      1162	move.c	FUNCTION_32	IF_35
0x40024fb	          0x83c807	                               or eax, 7	      1170	move.c	FUNCTION_32
0x40024fe	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      1170	move.c	FUNCTION_32
0x4002504	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1171	move.c	FUNCTION_32
0x4002509	    0x644833042528	                xor rax, qword fs:[0x28]	      1171	move.c	FUNCTION_32
0x4002512	     0xf8571040000	                           jne 0x4002989	      1171	move.c	FUNCTION_32
0x4002518	        0x4883c428	                           add rsp, 0x28	      1171	move.c	FUNCTION_32
0x400251c	              0x5b	                                 pop rbx	      1171	move.c	FUNCTION_32
0x400251d	              0x5d	                                 pop rbp	      1171	move.c	FUNCTION_32
0x400251e	            0x415c	                                 pop r12	      1171	move.c	FUNCTION_32
0x4002520	            0x415d	                                 pop r13	      1171	move.c	FUNCTION_32
0x4002522	            0x415e	                                 pop r14	      1171	move.c	FUNCTION_32
0x4002524	            0x415f	                                 pop r15	      1171	move.c	FUNCTION_32
0x4002526	              0xc3	                                     ret	      1171	move.c	FUNCTION_32
0x4002527	    0x660f1f840000	                    nop word [rax + rax]	      1171	move.c	FUNCTION_32
0x4002530	    0x448b8fd00000	            mov r9d, dword [rdi + 0xd0] 	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002537	          0x4585c9	                           test r9d, r9d	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x400253a	     0xf8518ffffff	                           jne 0x4002458	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002540	    0x448b8f940000	            mov r9d, dword [rdi + 0x94] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002547	    0x4c8b15000000	            mov r10, qword [0x0400254e] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x400254e	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002552	          0x4401ca	                            add edx, r9d	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002555	          0x4489d3	                           mov ebx, r10d	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002558	          0x4429c8	                            sub eax, r9d	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x400255b	            0x29d3	                            sub ebx, edx	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x400255d	          0x4429d0	                           sub eax, r10d	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4002560	      0x458d441801	                 lea r8d, [r8 + rbx + 1]	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002565	            0x89c2	                            mov edx, eax	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4002567	     0xf886b020000	                            js 0x40027d8	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x400256d	          0x4585c0	                           test r8d, r8d	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4002570	     0xf8f62020000	                            jg 0x40027d8	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4002576	          0x4429c9	                            sub ecx, r9d	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002579	            0x31ed	                            xor ebp, ebp	       929	move.c	FUNCTION_32
0x400257b	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1059	move.c	FUNCTION_32	IF_17
0x400257f	        0x483b7778	            cmp rsi, qword [rdi + 0x78] 	      1059	move.c	FUNCTION_32	IF_17
0x4002583	    0x898fe0000000	             mov dword [rdi + 0xe0], ecx	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4002589	     0xf84effeffff	                            je 0x400247e	      1059	move.c	FUNCTION_32	IF_17
0x400258f	              0x90	                                     nop	      1059	move.c	FUNCTION_32	IF_17
0x4002590	      0xe800000000	                          call 0x4002595	      1062	move.c	FUNCTION_32	CALL_9
0x4002595	    0x488b3d000000	            mov rdi, qword [0x0400259c] 	      1062	move.c	FUNCTION_32	CALL_9
0x400259c	     0x387dc000000	             add eax, dword [rdi + 0xdc]	      1062	move.c	FUNCTION_32	CALL_9
0x40025a2	    0x8987dc000000	             mov dword [rdi + 0xdc], eax	      1062	move.c	FUNCTION_32	CALL_9
0x40025a8	      0xe9e3feffff	                           jmp 0x4002490	      1062	move.c	FUNCTION_32	CALL_9
0x40025ad	           0xf1f00	                         nop dword [rax]	      1062	move.c	FUNCTION_32	CALL_9
0x40025b0	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1071	move.c	FUNCTION_32	IF_18
0x40025b4	            0x31d2	                            xor edx, edx	      1071	move.c	FUNCTION_32	IF_18
0x40025b6	      0xe800000000	                          call 0x40025bb	      1071	move.c	FUNCTION_32	IF_18
0x40025bb	    0x488b3d000000	            mov rdi, qword [0x040025c2] 	      1078	move.c	FUNCTION_32	IF_18
0x40025c2	    0x8b8fa0000000	            mov ecx, dword [rdi + 0xa0] 	      1078	move.c	FUNCTION_32	IF_18
0x40025c8	            0x39c8	                            cmp eax, ecx	      1071	move.c	FUNCTION_32	IF_18
0x40025ca	     0xf8ef0feffff	                           jle 0x40024c0	      1071	move.c	FUNCTION_32	IF_18
0x40025d0	            0x85c9	                           test ecx, ecx	      1079	move.c	FUNCTION_32	IF_18
0x40025d2	     0xf84e8feffff	                            je 0x40024c0	      1079	move.c	FUNCTION_32	IF_18
0x40025d8	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1080	move.c	FUNCTION_32	IF_18
0x40025dc	        0x48397778	            cmp qword [rdi + 0x78], rsi 	      1081	move.c	FUNCTION_32	IF_18
0x40025e0	     0xf85dafeffff	                           jne 0x40024c0	      1081	move.c	FUNCTION_32	IF_18
0x40025e6	            0x85ed	                           test ebp, ebp	      1081	move.c	FUNCTION_32	IF_18
0x40025e8	     0xf8ed2feffff	                           jle 0x40024c0	      1081	move.c	FUNCTION_32	IF_18
0x40025ee	    0x8b97ac000000	            mov edx, dword [rdi + 0xac] 	      1082	move.c	FUNCTION_32	IF_18
0x40025f4	            0x85d2	                           test edx, edx	      1082	move.c	FUNCTION_32	IF_18
0x40025f6	     0xf84c4feffff	                            je 0x40024c0	      1082	move.c	FUNCTION_32	IF_18
0x40025fc	    0x4c8b1d000000	            mov r11, qword [0x04002603] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4002603	          0x4c63e5	                         movsxd r12, ebp	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4002606	    0x486397980000	         movsxd rdx, dword [rdi + 0x98] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x400260d	          0x4d89e1	                             mov r9, r12	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4002610	    0x4c63afd80000	         movsxd r13, dword [rdi + 0xd8] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4002617	        0x4d0fafcb	                            imul r9, r11	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x400261b	          0x4989d0	                             mov r8, rdx	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x400261e	          0x4c01ca	                             add rdx, r9	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4002621	            0x85c0	                           test eax, eax	      1095	move.c	FUNCTION_32	IF_18	IF_20
0x4002623	      0x4889542408	                mov qword [rsp + 8], rdx	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4002628	     0xf84e2020000	                            je 0x4002910	      1095	move.c	FUNCTION_32	IF_18	IF_20
0x400262e	          0x8d70ff	                      lea esi, [rax - 1]	      1097	move.c	FUNCTION_32	IF_18
0x4002631	    0x486387dc0000	         movsxd rax, dword [rdi + 0xdc] 	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4002638	          0x4c63f6	                         movsxd r14, esi	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x400263b	          0x4989c1	                             mov r9, rax	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x400263e	          0x4c01d8	                            add rax, r11	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4002641	        0x478d1419	                    lea r10d, [r9 + r11]	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4002645	          0x4939c6	                            cmp r14, rax	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4002648	          0x4489c0	                            mov eax, r8d	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x400264b	        0x440f4ed6	                        cmovle r10d, esi	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x400264f	              0x99	                                     cdq	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002650	            0xf7fd	                                idiv ebp	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002652	          0x4189c7	                           mov r15d, eax	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002655	          0x8d0408	                    lea eax, [rax + rcx]	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002658	          0x4139c2	                           cmp r10d, eax	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x400265b	     0xf8c0f020000	                            jl 0x4002870	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4002661	      0x4c396c2408	                cmp qword [rsp + 8], r13	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4002666	     0xf8ecb020000	                           jle 0x4002937	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400266c	    0x8b87d8000000	            mov eax, dword [rdi + 0xd8] 	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4002672	          0x4189c8	                            mov r8d, ecx	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002675	        0x41c1e81f	                           shr r8d, 0x1f	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002679	          0x4101c8	                            add r8d, ecx	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x400267c	              0x99	                                     cdq	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x400267d	          0x41d1f8	                              sar r8d, 1	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002680	            0xf7fd	                                idiv ebp	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4002682	            0x89c2	                            mov edx, eax	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002684	          0x4429c2	                            sub edx, r8d	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002687	          0x4439c0	                            cmp eax, r8d	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x400268a	    0x41b800000000	                              mov r8d, 0	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002690	        0x410f4ed0	                         cmovle edx, r8d	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4002694	            0x29ce	                            sub esi, ecx	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x4002696	        0x448d4601	                      lea r8d, [rsi + 1]	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x400269a	          0x4439c2	                            cmp edx, r8d	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x400269d	        0x440f4ec2	                         cmovle r8d, edx	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40026a1	        0x440fafc5	                           imul r8d, ebp	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40026a5	          0x4489c0	                            mov eax, r8d	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40026a8	    0x448987980000	             mov dword [rdi + 0x98], r8d	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40026af	              0x99	                                     cdq	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40026b0	            0xf7fd	                                idiv ebp	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40026b2	          0x4129c1	                            sub r9d, eax	      1140	move.c	FUNCTION_32	IF_18
0x40026b5	          0x4139c9	                            cmp r9d, ecx	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40026b8	    0x44898fdc0000	             mov dword [rdi + 0xdc], r9d	      1140	move.c	FUNCTION_32	IF_18
0x40026bf	            0x7c21	                            jl 0x40026e2	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40026c1	          0x4489c8	                            mov eax, r9d	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40026c4	            0x89ea	                            mov edx, ebp	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40026c6	            0x29c8	                            sub eax, ecx	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40026c8	          0x83c001	                              add eax, 1	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40026cb	           0xfafd0	                           imul edx, eax	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40026ce	          0x4129c1	                            sub r9d, eax	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x40026d1	    0x44898fdc0000	             mov dword [rdi + 0xdc], r9d	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x40026d8	          0x4101d0	                            add r8d, edx	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40026db	    0x448987980000	             mov dword [rdi + 0x98], r8d	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40026e2	            0x89d8	                            mov eax, ebx	      1149	move.c	FUNCTION_32	IF_18
0x40026e4	          0x4429c0	                            sub eax, r8d	      1149	move.c	FUNCTION_32	IF_18
0x40026e7	              0x99	                                     cdq	      1149	move.c	FUNCTION_32	IF_18
0x40026e8	            0xf7fd	                                idiv ebp	      1149	move.c	FUNCTION_32	IF_18
0x40026ea	          0x83f800	                              cmp eax, 0	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x40026ed	     0xf8eed010000	                           jle 0x40028e0	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x40026f3	          0x4531c0	                            xor r8d, r8d	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x40026f6	            0x31c9	                            xor ecx, ecx	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x40026f8	            0x89c2	                            mov edx, eax	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x40026fa	            0x31f6	                            xor esi, esi	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x40026fc	      0xe800000000	                          call 0x4002701	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002701	    0x488b3d000000	            mov rdi, qword [0x04002708] 	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002708	    0x448b87980000	            mov r8d, dword [rdi + 0x98] 	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x400270f	      0xe9b9fdffff	                           jmp 0x40024cd	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002714	         0xf1f4000	                         nop dword [rax]	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4002718	            0x31c0	                            xor eax, eax	      1067	move.c	FUNCTION_32
0x400271a	      0xe9b1feffff	                           jmp 0x40025d0	      1067	move.c	FUNCTION_32
0x400271f	              0x90	                                     nop	      1067	move.c	FUNCTION_32
0x4002720	    0x488d8fd80000	                   lea rcx, [rdi + 0xd8]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4002727	        0x488d7738	                   lea rsi, [rdi + 0x38]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400272b	      0x4c8d442414	                    lea r8, [rsp + 0x14]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4002730	      0x488d542410	                   lea rdx, [rsp + 0x10]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4002735	      0xe800000000	                          call 0x400273a	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400273a	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400273e	    0x488b3d000000	            mov rdi, qword [0x04002745] 	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4002745	      0xe903fcffff	                           jmp 0x400234d	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400274a	    0x660f1f440000	                    nop word [rax + rax]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4002750	      0xe81bdfffff	                      call sym.curs_rows	       945	move.c	FUNCTION_32	CALL_2
0x4002755	    0x488b3d000000	            mov rdi, qword [0x0400275c] 	       945	move.c	FUNCTION_32	CALL_2
0x400275c	      0xe9c8fbffff	                           jmp 0x4002329	       945	move.c	FUNCTION_32	CALL_2
0x4002761	     0xf1f80000000	                         nop dword [rax]	       945	move.c	FUNCTION_32	CALL_2
0x4002768	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	       977	move.c	FUNCTION_32	IF_4
0x400276e	          0x83ea01	                              sub edx, 1	       976	move.c	FUNCTION_32	IF_4
0x4002771	            0x31ed	                            xor ebp, ebp	       929	move.c	FUNCTION_32
0x4002773	    0x8997e0000000	             mov dword [rdi + 0xe0], edx	       976	move.c	FUNCTION_32	IF_4
0x4002779	          0x83e801	                              sub eax, 1	       977	move.c	FUNCTION_32	IF_4
0x400277c	    0x8987dc000000	             mov dword [rdi + 0xdc], eax	       977	move.c	FUNCTION_32	IF_4
0x4002782	      0xe9e9fcffff	                           jmp 0x4002470	       977	move.c	FUNCTION_32	IF_4
0x4002787	    0x660f1f840000	                    nop word [rax + rax]	       977	move.c	FUNCTION_32	IF_4
0x4002790	      0xe800000000	                          call 0x4002795	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x4002795	            0x85c0	                           test eax, eax	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x4002797	            0x742f	                            je 0x40027c8	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x4002799	    0x488b3d000000	            mov rdi, qword [0x040027a0] 	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40027a0	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40027a6	      0xe950fdffff	                           jmp 0x40024fb	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40027ab	       0xf1f440000	                   nop dword [rax + rax]	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40027b0	    0xc787e0000000	               mov dword [rdi + 0xe0], 0	      1054	move.c	FUNCTION_32	ELSE_8
0x40027ba	            0x31ed	                            xor ebp, ebp	       929	move.c	FUNCTION_32
0x40027bc	      0xe9affcffff	                           jmp 0x4002470	       929	move.c	FUNCTION_32
0x40027c1	     0xf1f80000000	                         nop dword [rax]	       929	move.c	FUNCTION_32
0x40027c8	      0xbf23000000	                           mov edi, 0x23	      1167	move.c	FUNCTION_32	CALL_16
0x40027cd	      0xe800000000	                          call 0x40027d2	      1167	move.c	FUNCTION_32	CALL_16
0x40027d2	            0xebc5	                           jmp 0x4002799	      1167	move.c	FUNCTION_32	CALL_16
0x40027d4	         0xf1f4000	                         nop dword [rax]	      1167	move.c	FUNCTION_32	CALL_16
0x40027d8	    0x488b05000000	            mov rax, qword [0x040027df] 	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40027df	          0x4189d2	                           mov r10d, edx	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x40027e2	          0x41f7da	                                neg r10d	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x40027e5	            0x85d2	                           test edx, edx	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x40027e7	        0x450f49d0	                        cmovns r10d, r8d	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x40027eb	          0x4885c0	                           test rax, rax	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40027ee	            0x7430	                            je 0x4002820	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40027f0	          0x4589e3	                          mov r11d, r12d	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40027f3	          0x41d1fb	                             sar r11d, 1	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40027f6	          0x4539da	                          cmp r10d, r11d	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40027f9	            0x7d25	                           jge 0x4002820	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40027fb	          0x4439c2	                            cmp edx, r8d	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40027fe	            0x7e20	                           jle 0x4002820	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4002800	          0x4963f2	                        movsxd rsi, r10d	      1033	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4002803	          0x4839f0	                            cmp rax, rsi	      1034	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4002806	        0x440f4fd0	                         cmovg r10d, eax	      1034	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x400280a	          0x4489c8	                            mov eax, r9d	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x400280d	        0x438d340a	                     lea esi, [r10 + r9]	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4002811	          0x4429d0	                           sub eax, r10d	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4002814	            0x85d2	                           test edx, edx	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4002816	           0xf48f0	                          cmovs esi, eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4002819	            0xeb12	                           jmp 0x400282d	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x400281b	       0xf1f440000	                   nop dword [rax + rax]	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4002820	          0x4489e5	                           mov ebp, r12d	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4002823	          0xc1ed1f	                           shr ebp, 0x1f	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4002826	          0x4401e5	                           add ebp, r12d	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4002829	            0xd1fd	                              sar ebp, 1	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400282b	            0x29ee	                            sub esi, ebp	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400282d	            0x85f6	                           test esi, esi	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400282f	      0xb800000000	                              mov eax, 0	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4002834	           0xf48f0	                          cmovs esi, eax	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4002837	          0x4139f1	                            cmp r9d, esi	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x400283a	     0xf8436fdffff	                            je 0x4002576	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4002840	    0x89b794000000	             mov dword [rdi + 0x94], esi	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4002846	      0xbf28000000	                           mov edi, 0x28	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x400284b	      0xe800000000	                          call 0x4002850	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4002850	    0x488b3d000000	            mov rdi, qword [0x04002857] 	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4002857	    0x8b8fe0000000	            mov ecx, dword [rdi + 0xe0] 	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x400285d	    0x448b8f940000	            mov r9d, dword [rdi + 0x94] 	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4002864	      0xe90dfdffff	                           jmp 0x4002576	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4002869	     0xf1f80000000	                         nop dword [rax]	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4002870	        0x4b8d041b	                    lea rax, [r11 + r11]	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4002874	          0x4939c6	                            cmp r14, rax	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4002877	     0xf8ceffdffff	                            jl 0x400266c	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400287d	      0x4c396c2408	                cmp qword [rsp + 8], r13	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002882	          0x4489f8	                           mov eax, r15d	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002885	     0xf8e27feffff	                           jle 0x40026b2	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400288b	        0x4d0fafdc	                           imul r11, r12	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400288f	    0x486397d80000	         movsxd rdx, dword [rdi + 0xd8] 	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002896	          0x4963c0	                         movsxd rax, r8d	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4002899	          0x4c01d8	                            add rax, r11	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400289c	          0x4829d0	                            sub rax, rdx	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400289f	      0x498d4404ff	                lea rax, [r12 + rax - 1]	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40028a4	            0x4899	                                     cqo	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40028a6	          0x49f7fc	                                idiv r12	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40028a9	          0x4889c6	                            mov rsi, rax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40028ac	          0x4489f8	                           mov eax, r15d	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40028af	            0x85f6	                           test esi, esi	      1123	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028b1	     0xf8efbfdffff	                           jle 0x40026b2	      1123	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028b7	            0x89f2	                            mov edx, esi	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40028b9	           0xfafd5	                           imul edx, ebp	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40028bc	           0xfafc5	                           imul eax, ebp	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40028bf	          0x4439c2	                            cmp edx, r8d	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40028c2	           0xf4fd0	                          cmovg edx, eax	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x40028c5	          0x4129d0	                            sub r8d, edx	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028c8	          0x4489c0	                            mov eax, r8d	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028cb	    0x448987980000	             mov dword [rdi + 0x98], r8d	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028d2	              0x99	                                     cdq	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028d3	            0xf7fd	                                idiv ebp	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028d5	      0xe9d8fdffff	                           jmp 0x40026b2	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028da	    0x660f1f440000	                    nop word [rax + rax]	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x40028e0	     0xf84e7fbffff	                            je 0x40024cd	      1152	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40028e6	            0xf7d8	                                 neg eax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40028e8	          0x4531c0	                            xor r8d, r8d	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40028eb	          0x4531c9	                            xor r9d, r9d	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40028ee	            0x89c2	                            mov edx, eax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40028f0	            0x31c9	                            xor ecx, ecx	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40028f2	            0x31f6	                            xor esi, esi	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40028f4	      0xe800000000	                          call 0x40028f9	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x40028f9	    0x488b3d000000	            mov rdi, qword [0x04002900] 	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002900	    0x448b87980000	            mov r8d, dword [rdi + 0x98] 	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002907	      0xe9c1fbffff	                           jmp 0x40024cd	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400290c	         0xf1f4000	                         nop dword [rax]	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4002910	            0x31d2	                            xor edx, edx	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4002912	      0xe800000000	                          call 0x4002917	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4002917	    0x488b3d000000	            mov rdi, qword [0x0400291e] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x400291e	    0x4c8b1d000000	            mov r11, qword [0x04002925] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4002925	    0x8b8fa0000000	            mov ecx, dword [rdi + 0xa0] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x400292b	    0x448b87980000	            mov r8d, dword [rdi + 0x98] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4002932	      0xe9f7fcffff	                           jmp 0x400262e	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4002937	          0x4d01db	                            add r11, r11	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400293a	          0x4d39de	                            cmp r14, r11	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400293d	     0xf8c29fdffff	                            jl 0x400266c	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4002943	          0x4489d6	                           mov esi, r10d	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002946	    0x8b87d8000000	            mov eax, dword [rdi + 0xd8] 	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400294c	            0x29ce	                            sub esi, ecx	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x400294e	          0x83c601	                              add esi, 1	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002951	           0xfaff5	                           imul esi, ebp	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x4002954	            0x39f0	                            cmp eax, esi	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002956	        0x89742414	             mov dword [rsp + 0x14], esi	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x400295a	            0x7d0e	                           jge 0x400296a	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400295c	         0xf1f4000	                         nop dword [rax]	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002960	            0x29ee	                            sub esi, ebp	      1135	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002962	            0x39f0	                            cmp eax, esi	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002964	            0x7cfa	                            jl 0x4002960	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x4002966	        0x89742414	             mov dword [rsp + 0x14], esi	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x400296a	          0x4439c6	                            cmp esi, r8d	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x400296d	          0x4489f8	                           mov eax, r15d	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002970	     0xf8e3cfdffff	                           jle 0x40026b2	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002976	            0x89f0	                            mov eax, esi	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002978	    0x89b798000000	             mov dword [rdi + 0x98], esi	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x400297e	          0x4189f0	                            mov r8d, esi	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002981	              0x99	                                     cdq	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002982	            0xf7fd	                                idiv ebp	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002984	      0xe929fdffff	                           jmp 0x40026b2	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x4002989	      0xe800000000	                          call 0x400298e	      1171	move.c	FUNCTION_32
changed_cline_bef_curs	ELSE,0:CALL,0:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	3
0x4000c80	    0x488b05000000	            mov rax, qword [0x04000c87] 	       554	move.c	FUNCTION_12
0x4000c87	    0x81a0b4000000	      and dword [rax + 0xb4], 0xffffff70	       554	move.c	FUNCTION_12
0x4000c91	              0xc3	                                     ret	       554	move.c	FUNCTION_12
get_scroll_overlap	ELSE,5:CALL,8:DO,0:SWITCH,0:functions,0:IF,8:FOR,0:WHILE,0	123
0x4000420	            0x4157	                                push r15	      2496	move.c	FUNCTION_49
0x4000422	            0x4156	                                push r14	      2496	move.c	FUNCTION_49
0x4000424	            0x4155	                                push r13	      2496	move.c	FUNCTION_49
0x4000426	            0x4154	                                push r12	      2496	move.c	FUNCTION_49
0x4000428	          0x4189f4	                           mov r12d, esi	      2496	move.c	FUNCTION_49
0x400042b	              0x55	                                push rbp	      2496	move.c	FUNCTION_49
0x400042c	              0x53	                                push rbx	      2496	move.c	FUNCTION_49
0x400042d	          0x4889fb	                            mov rbx, rdi	      2496	move.c	FUNCTION_49
0x4000430	        0x4883ec28	                           sub rsp, 0x28	      2496	move.c	FUNCTION_49
0x4000434	    0x488b05000000	            mov rax, qword [0x0400043b] 	      2498	move.c	FUNCTION_49
0x400043b	    0x8ba8a0000000	            mov ebp, dword [rax + 0xa0] 	      2498	move.c	FUNCTION_49
0x4000441	          0x8b4708	                mov eax, dword [rdi + 8]	      2502	move.c	FUNCTION_49	IF_1
0x4000444	          0x83ed02	                              sub ebp, 2	      2498	move.c	FUNCTION_49
0x4000447	            0x85c0	                           test eax, eax	      2502	move.c	FUNCTION_49	IF_1
0x4000449	     0xf8e49010000	                           jle 0x4000598	      2502	move.c	FUNCTION_49	IF_1
0x400044f	    0xc7470c010000	                mov dword [rdi + 0xc], 1	      2503	move.c	FUNCTION_49	IF_1
0x4000456	    0x41bf01000000	                             mov r15d, 1	      2503	move.c	FUNCTION_49	IF_1
0x400045c	          0x4439fd	                           cmp ebp, r15d	      2510	move.c	FUNCTION_49	IF_2
0x400045f	     0xf8cc2000000	                            jl 0x4000527	      2510	move.c	FUNCTION_49	IF_2
0x4000465	          0x8b4308	                mov eax, dword [rbx + 8]	      2513	move.c	FUNCTION_49
0x4000468	          0x4585e4	                         test r12d, r12d	      2514	move.c	FUNCTION_49	IF_3
0x400046b	          0x4c8b2b	                    mov r13, qword [rbx]	      2513	move.c	FUNCTION_49
0x400046e	          0x4889df	                            mov rdi, rbx	      2515	move.c	FUNCTION_49	CALL_3
0x4000471	        0x89442410	             mov dword [rsp + 0x10], eax	      2513	move.c	FUNCTION_49
0x4000475	     0xf8ee5000000	                           jle 0x4000560	      2514	move.c	FUNCTION_49	IF_3
0x400047b	      0xe870fcffff	                   call sym.botline_forw	      2515	move.c	FUNCTION_49	CALL_3
0x4000480	        0x448b730c	            mov r14d, dword [rbx + 0xc] 	      2518	move.c	FUNCTION_49
0x4000484	    0x4181feffffff	                    cmp r14d, 0x7fffffff	      2519	move.c	FUNCTION_49	IF_4
0x400048b	     0xf84af000000	                            je 0x4000540	      2519	move.c	FUNCTION_49	IF_4
0x4000491	        0x438d0c3e	                    lea ecx, [r14 + r15]	      2519	move.c	FUNCTION_49	IF_4
0x4000495	            0x39cd	                            cmp ebp, ecx	      2519	move.c	FUNCTION_49	IF_4
0x4000497	     0xf8ca3000000	                            jl 0x4000540	      2519	move.c	FUNCTION_49	IF_4
0x400049d	          0x488b03	                    mov rax, qword [rbx]	      2525	move.c	FUNCTION_49
0x40004a0	          0x4585e4	                         test r12d, r12d	      2526	move.c	FUNCTION_49	IF_5
0x40004a3	          0x4889df	                            mov rdi, rbx	      2527	move.c	FUNCTION_49	CALL_5
0x40004a6	      0x4889442408	                mov qword [rsp + 8], rax	      2525	move.c	FUNCTION_49
0x40004ab	          0x8b4308	                mov eax, dword [rbx + 8]	      2525	move.c	FUNCTION_49
0x40004ae	        0x89442414	             mov dword [rsp + 0x14], eax	      2525	move.c	FUNCTION_49
0x40004b2	     0xf8ef8000000	                           jle 0x40005b0	      2526	move.c	FUNCTION_49	IF_5
0x40004b8	      0xe833fcffff	                   call sym.botline_forw	      2527	move.c	FUNCTION_49	CALL_5
0x40004bd	          0x8b4b0c	              mov ecx, dword [rbx + 0xc]	      2530	move.c	FUNCTION_49
0x40004c0	    0x81f9ffffff7f	                     cmp ecx, 0x7fffffff	      2531	move.c	FUNCTION_49	IF_6
0x40004c6	            0x7478	                            je 0x4000540	      2531	move.c	FUNCTION_49	IF_6
0x40004c8	        0x458d040e	                    lea r8d, [r14 + rcx]	      2531	move.c	FUNCTION_49	IF_6
0x40004cc	          0x4439c5	                            cmp ebp, r8d	      2531	move.c	FUNCTION_49	IF_6
0x40004cf	            0x7c6f	                            jl 0x4000540	      2531	move.c	FUNCTION_49	IF_6
0x40004d1	          0x8b4308	                mov eax, dword [rbx + 8]	      2537	move.c	FUNCTION_49
0x40004d4	          0x4585e4	                         test r12d, r12d	      2538	move.c	FUNCTION_49	IF_7
0x40004d7	          0x4c8b2b	                    mov r13, qword [rbx]	      2537	move.c	FUNCTION_49
0x40004da	      0x4489442418	             mov dword [rsp + 0x18], r8d	      2537	move.c	FUNCTION_49
0x40004df	        0x894c2410	             mov dword [rsp + 0x10], ecx	      2537	move.c	FUNCTION_49
0x40004e3	          0x4889df	                            mov rdi, rbx	      2539	move.c	FUNCTION_49	CALL_7
0x40004e6	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2537	move.c	FUNCTION_49
0x40004ea	     0xf8ed0000000	                           jle 0x40005c0	      2538	move.c	FUNCTION_49	IF_7
0x40004f0	      0xe8fbfbffff	                   call sym.botline_forw	      2539	move.c	FUNCTION_49	CALL_7
0x40004f5	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      2539	move.c	FUNCTION_49	CALL_7
0x40004f9	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2539	move.c	FUNCTION_49	CALL_7
0x40004fe	          0x8b730c	              mov esi, dword [rbx + 0xc]	      2542	move.c	FUNCTION_49
0x4000501	    0x81feffffff7f	                     cmp esi, 0x7fffffff	      2543	move.c	FUNCTION_49	IF_8
0x4000507	            0x7467	                            je 0x4000570	      2543	move.c	FUNCTION_49	IF_8
0x4000509	             0x1ce	                            add esi, ecx	      2543	move.c	FUNCTION_49	IF_8
0x400050b	          0x4401f6	                           add esi, r14d	      2543	move.c	FUNCTION_49	IF_8
0x400050e	            0x39f5	                            cmp ebp, esi	      2543	move.c	FUNCTION_49	IF_8
0x4000510	            0x7c5e	                            jl 0x4000570	      2543	move.c	FUNCTION_49	IF_8
0x4000512	        0x438d0438	                     lea eax, [r8 + r15]	      2543	move.c	FUNCTION_49	IF_8
0x4000516	            0x39c5	                            cmp ebp, eax	      2543	move.c	FUNCTION_49	IF_8
0x4000518	            0x7c56	                            jl 0x4000570	      2543	move.c	FUNCTION_49	IF_8
0x400051a	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2546	move.c	FUNCTION_49	ELSE_5
0x400051e	          0x4c892b	                    mov qword [rbx], r13	      2546	move.c	FUNCTION_49	ELSE_5
0x4000521	          0x894b0c	              mov dword [rbx + 0xc], ecx	      2546	move.c	FUNCTION_49	ELSE_5
0x4000524	          0x894308	                mov dword [rbx + 8], eax	      2546	move.c	FUNCTION_49	ELSE_5
0x4000527	        0x4883c428	                           add rsp, 0x28	      2548	move.c	FUNCTION_49	ELSE_5
0x400052b	              0x5b	                                 pop rbx	      2548	move.c	FUNCTION_49	ELSE_5
0x400052c	              0x5d	                                 pop rbp	      2548	move.c	FUNCTION_49	ELSE_5
0x400052d	            0x415c	                                 pop r12	      2548	move.c	FUNCTION_49	ELSE_5
0x400052f	            0x415d	                                 pop r13	      2548	move.c	FUNCTION_49	ELSE_5
0x4000531	            0x415e	                                 pop r14	      2548	move.c	FUNCTION_49	ELSE_5
0x4000533	            0x415f	                                 pop r15	      2548	move.c	FUNCTION_49	ELSE_5
0x4000535	              0xc3	                                     ret	      2548	move.c	FUNCTION_49	ELSE_5
0x4000536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2548	move.c	FUNCTION_49	ELSE_5
0x4000540	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      2533	move.c	FUNCTION_49	IF_6
0x4000544	          0x4c892b	                    mov qword [rbx], r13	      2533	move.c	FUNCTION_49	IF_6
0x4000547	        0x44897b0c	             mov dword [rbx + 0xc], r15d	      2533	move.c	FUNCTION_49	IF_6
0x400054b	          0x894308	                mov dword [rbx + 8], eax	      2533	move.c	FUNCTION_49	IF_6
0x400054e	        0x4883c428	                           add rsp, 0x28	      2548	move.c	FUNCTION_49	ELSE_5
0x4000552	              0x5b	                                 pop rbx	      2548	move.c	FUNCTION_49	ELSE_5
0x4000553	              0x5d	                                 pop rbp	      2548	move.c	FUNCTION_49	ELSE_5
0x4000554	            0x415c	                                 pop r12	      2548	move.c	FUNCTION_49	ELSE_5
0x4000556	            0x415d	                                 pop r13	      2548	move.c	FUNCTION_49	ELSE_5
0x4000558	            0x415e	                                 pop r14	      2548	move.c	FUNCTION_49	ELSE_5
0x400055a	            0x415f	                                 pop r15	      2548	move.c	FUNCTION_49	ELSE_5
0x400055c	              0xc3	                                     ret	      2548	move.c	FUNCTION_49	ELSE_5
0x400055d	           0xf1f00	                         nop dword [rax]	      2548	move.c	FUNCTION_49	ELSE_5
0x4000560	      0xe83bfdffff	                   call sym.topline_back	      2517	move.c	FUNCTION_49	CALL_4
0x4000565	      0xe916ffffff	                           jmp 0x4000480	      2517	move.c	FUNCTION_49	CALL_4
0x400056a	    0x660f1f440000	                    nop word [rax + rax]	      2517	move.c	FUNCTION_49	CALL_4
0x4000570	      0x488b442408	                mov rax, qword [rsp + 8]	      2544	move.c	FUNCTION_49	IF_8
0x4000575	        0x4489730c	             mov dword [rbx + 0xc], r14d	      2544	move.c	FUNCTION_49	IF_8
0x4000579	          0x488903	                    mov qword [rbx], rax	      2544	move.c	FUNCTION_49	IF_8
0x400057c	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      2544	move.c	FUNCTION_49	IF_8
0x4000580	          0x894308	                mov dword [rbx + 8], eax	      2544	move.c	FUNCTION_49	IF_8
0x4000583	        0x4883c428	                           add rsp, 0x28	      2548	move.c	FUNCTION_49	ELSE_5
0x4000587	              0x5b	                                 pop rbx	      2548	move.c	FUNCTION_49	ELSE_5
0x4000588	              0x5d	                                 pop rbp	      2548	move.c	FUNCTION_49	ELSE_5
0x4000589	            0x415c	                                 pop r12	      2548	move.c	FUNCTION_49	ELSE_5
0x400058b	            0x415d	                                 pop r13	      2548	move.c	FUNCTION_49	ELSE_5
0x400058d	            0x415e	                                 pop r14	      2548	move.c	FUNCTION_49	ELSE_5
0x400058f	            0x415f	                                 pop r15	      2548	move.c	FUNCTION_49	ELSE_5
0x4000591	              0xc3	                                     ret	      2548	move.c	FUNCTION_49	ELSE_5
0x4000592	    0x660f1f440000	                    nop word [rax + rax]	      2548	move.c	FUNCTION_49	ELSE_5
0x4000598	          0x488b3f	                    mov rdi, qword [rdi]	      2505	move.c	FUNCTION_49	CALL_1
0x400059b	      0xe800000000	                          call 0x40005a0	      2505	move.c	FUNCTION_49	CALL_1
0x40005a0	          0x4189c7	                           mov r15d, eax	      2505	move.c	FUNCTION_49	CALL_1
0x40005a3	          0x89430c	              mov dword [rbx + 0xc], eax	      2505	move.c	FUNCTION_49	CALL_1
0x40005a6	      0xe9b1feffff	                           jmp 0x400045c	      2505	move.c	FUNCTION_49	CALL_1
0x40005ab	       0xf1f440000	                   nop dword [rax + rax]	      2505	move.c	FUNCTION_49	CALL_1
0x40005b0	      0xe8ebfcffff	                   call sym.topline_back	      2529	move.c	FUNCTION_49	CALL_6
0x40005b5	      0xe903ffffff	                           jmp 0x40004bd	      2529	move.c	FUNCTION_49	CALL_6
0x40005ba	    0x660f1f440000	                    nop word [rax + rax]	      2529	move.c	FUNCTION_49	CALL_6
0x40005c0	      0xe8dbfcffff	                   call sym.topline_back	      2541	move.c	FUNCTION_49	CALL_8
0x40005c5	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2541	move.c	FUNCTION_49	CALL_8
0x40005ca	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      2541	move.c	FUNCTION_49	CALL_8
0x40005ce	      0xe92bffffff	                           jmp 0x40004fe	      2541	move.c	FUNCTION_49	CALL_8
scroll_cursor_halfway	ELSE,2:CALL,7:DO,0:SWITCH,0:functions,0:IF,9:FOR,0:WHILE,1	112
0x40011e0	            0x4157	                                push r15	      2035	move.c	FUNCTION_46
0x40011e2	            0x4156	                                push r14	      2035	move.c	FUNCTION_46
0x40011e4	            0x4155	                                push r13	      2035	move.c	FUNCTION_46
0x40011e6	            0x4154	                                push r12	      2035	move.c	FUNCTION_46
0x40011e8	          0x4189fc	                           mov r12d, edi	      2035	move.c	FUNCTION_46
0x40011eb	              0x55	                                push rbp	      2035	move.c	FUNCTION_46
0x40011ec	              0x53	                                push rbx	      2035	move.c	FUNCTION_46
0x40011ed	        0x4883ec48	                           sub rsp, 0x48	      2035	move.c	FUNCTION_46
0x40011f1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2035	move.c	FUNCTION_46
0x40011fa	      0x4889442438	             mov qword [rsp + 0x38], rax	      2035	move.c	FUNCTION_46
0x40011ff	            0x31c0	                            xor eax, eax	      2035	move.c	FUNCTION_46
0x4001201	    0x488b05000000	            mov rax, qword [0x04001208] 	      2046	move.c	FUNCTION_46
0x4001208	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2051	move.c	FUNCTION_46	CALL_1
0x400120d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2051	move.c	FUNCTION_46	CALL_1
0x4001212	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2049	move.c	FUNCTION_46
0x4001216	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      2046	move.c	FUNCTION_46
0x400121a	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      2049	move.c	FUNCTION_46
0x400121f	      0x48894c2408	                mov qword [rsp + 8], rcx	      2046	move.c	FUNCTION_46
0x4001224	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2049	move.c	FUNCTION_46
0x4001229	      0xe800000000	                          call 0x400122e	      2051	move.c	FUNCTION_46	CALL_1
0x400122e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2054	move.c	FUNCTION_46	CALL_2
0x4001233	      0xe800000000	                          call 0x4001238	      2054	move.c	FUNCTION_46	CALL_2
0x4001238	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2060	move.c	FUNCTION_46
0x400123d	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2055	move.c	FUNCTION_46
0x4001245	    0xc74424280000	               mov dword [rsp + 0x28], 0	      2056	move.c	FUNCTION_46
0x400124d	        0x4983fe01	                              cmp r14, 1	      2061	move.c	FUNCTION_46	WHILE_1
0x4001251	     0xf8e55010000	                           jle 0x40013ac	      2061	move.c	FUNCTION_46	WHILE_1
0x4001257	            0x89c3	                            mov ebx, eax	      2061	move.c	FUNCTION_46	WHILE_1
0x4001259	          0x4531ff	                          xor r15d, r15d	      2061	move.c	FUNCTION_46	WHILE_1
0x400125c	            0x31ed	                            xor ebp, ebp	      2061	move.c	FUNCTION_46	WHILE_1
0x400125e	          0x4531ed	                          xor r13d, r13d	      2061	move.c	FUNCTION_46	WHILE_1
0x4001261	     0xf1f80000000	                         nop dword [rax]	      2061	move.c	FUNCTION_46	WHILE_1
0x4001268	          0x4539fd	                          cmp r13d, r15d	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x400126b	     0xf8dcf000000	                           jge 0x4001340	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x4001271	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2083	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x4001276	      0xe825f0ffff	                   call sym.topline_back	      2083	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x400127b	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x400127f	    0x488b35000000	            mov rsi, qword [0x04001286] 	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4001286	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x400128b	             0x1d3	                            add ebx, edx	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x400128d	    0x81faffffff7f	                     cmp edx, 0x7fffffff	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x4001293	           0xf44d8	                          cmove ebx, eax	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x4001296	    0x3b9ea0000000	            cmp ebx, dword [rsi + 0xa0] 	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x400129c	            0x7f12	                            jg 0x40012b0	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x400129e	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      2091	move.c	FUNCTION_46	WHILE_1	IF_5
0x40012a3	          0x4101d5	                           add r13d, edx	      2090	move.c	FUNCTION_46	WHILE_1	IF_5
0x40012a6	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	      2093	move.c	FUNCTION_46	WHILE_1	IF_5
0x40012aa	        0x4983fe01	                              cmp r14, 1	      2061	move.c	FUNCTION_46	WHILE_1
0x40012ae	            0x7fb8	                            jg 0x4001268	      2061	move.c	FUNCTION_46	WHILE_1
0x40012b0	        0x4883c678	                           add rsi, 0x78	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x40012b4	            0x31d2	                            xor edx, edx	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x40012b6	          0x4c89f7	                            mov rdi, r14	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x40012b9	      0xe800000000	                          call 0x40012be	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x40012be	            0x85c0	                           test eax, eax	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x40012c0	    0x488b3d000000	            mov rdi, qword [0x040012c7] 	      2100	move.c	FUNCTION_46	IF_8
0x40012c7	     0xf84d3000000	                            je 0x40013a0	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x40012cd	        0x488b4f78	            mov rcx, qword [rdi + 0x78] 	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x40012d1	    0x486387a00000	         movsxd rax, dword [rdi + 0xa0] 	      2103	move.c	FUNCTION_46	IF_9
0x40012d8	    0x89af84000000	             mov dword [rdi + 0x84], ebp	      2102	move.c	FUNCTION_46
0x40012de	          0x4801c1	                            add rcx, rax	      2103	move.c	FUNCTION_46	IF_9
0x40012e1	      0x48394c2408	                cmp qword [rsp + 8], rcx	      2103	move.c	FUNCTION_46	IF_9
0x40012e6	            0x7e0a	                           jle 0x40012f2	      2103	move.c	FUNCTION_46	IF_9
0x40012e8	    0xc7878c000000	               mov dword [rdi + 0x8c], 0	      2104	move.c	FUNCTION_46	IF_9
0x40012f2	            0x85ed	                           test ebp, ebp	      1368	move.c	FUNCTION_35	IF_1
0x40012f4	            0x7e0e	                           jle 0x4001304	      1368	move.c	FUNCTION_35	IF_1
0x40012f6	            0x31f6	                            xor esi, esi	      1368	move.c	FUNCTION_35	IF_1
0x40012f8	      0xe893eeffff	           call sym.check_topfill.part.8	      1368	move.c	FUNCTION_35	IF_1
0x40012fd	    0x488b3d000000	            mov rdi, qword [0x04001304] 	      1368	move.c	FUNCTION_35	IF_1
0x4001304	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2108	move.c	FUNCTION_46
0x400130a	          0x83e08e	                     and eax, 0xffffff8e	      2108	move.c	FUNCTION_46
0x400130d	             0xc80	                             or al, 0x80	      2108	move.c	FUNCTION_46
0x400130f	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      2108	move.c	FUNCTION_46
0x4001315	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2109	move.c	FUNCTION_46
0x400131a	    0x644833042528	                xor rax, qword fs:[0x28]	      2109	move.c	FUNCTION_46
0x4001323	     0xf8591000000	                           jne 0x40013ba	      2109	move.c	FUNCTION_46
0x4001329	        0x4883c448	                           add rsp, 0x48	      2109	move.c	FUNCTION_46
0x400132d	              0x5b	                                 pop rbx	      2109	move.c	FUNCTION_46
0x400132e	              0x5d	                                 pop rbp	      2109	move.c	FUNCTION_46
0x400132f	            0x415c	                                 pop r12	      2109	move.c	FUNCTION_46
0x4001331	            0x415d	                                 pop r13	      2109	move.c	FUNCTION_46
0x4001333	            0x415e	                                 pop r14	      2109	move.c	FUNCTION_46
0x4001335	            0x415f	                                 pop r15	      2109	move.c	FUNCTION_46
0x4001337	              0xc3	                                     ret	      2109	move.c	FUNCTION_46
0x4001338	     0xf1f84000000	                   nop dword [rax + rax]	      2109	move.c	FUNCTION_46
0x4001340	    0x488b15000000	            mov rdx, qword [0x04001347] 	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001347	          0x488b02	                    mov rax, qword [rdx]	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x400134a	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x400134f	            0x7c1f	                            jl 0x4001370	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001351	        0x4183c701	                             add r15d, 1	      2075	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1
0x4001355	        0x4183fc01	                             cmp r12d, 1	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x4001359	          0x83dbff	             sbb ebx, 0xffffffffffffffff	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x400135c	          0x4539ef	                          cmp r15d, r13d	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x400135f	     0xf8e03ffffff	                           jle 0x4001268	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001365	      0xe907ffffff	                           jmp 0x4001271	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x400136a	    0x660f1f440000	                    nop word [rax + rax]	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001370	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2067	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x4001375	      0xe876edffff	                   call sym.botline_forw	      2067	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x400137a	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      2068	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x400137e	    0x488b35000000	            mov rsi, qword [0x04001385] 	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4001385	             0x1d3	                            add ebx, edx	      2068	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001387	    0x3b9ea0000000	            cmp ebx, dword [rsi + 0xa0] 	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x400138d	     0xf8f1dffffff	                            jg 0x40012b0	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4001393	          0x4101d7	                           add r15d, edx	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001396	            0xebc4	                           jmp 0x400135c	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001398	     0xf1f84000000	                   nop dword [rax + rax]	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x40013a0	        0x4c897778	             mov qword [rdi + 0x78], r14	      2100	move.c	FUNCTION_46	IF_8
0x40013a4	          0x4c89f1	                            mov rcx, r14	      2100	move.c	FUNCTION_46	IF_8
0x40013a7	      0xe925ffffff	                           jmp 0x40012d1	      2100	move.c	FUNCTION_46	IF_8
0x40013ac	    0x488b35000000	            mov rsi, qword [0x040013b3] 	      2100	move.c	FUNCTION_46	IF_8
0x40013b3	            0x31ed	                            xor ebp, ebp	      2039	move.c	FUNCTION_46
0x40013b5	      0xe9f6feffff	                           jmp 0x40012b0	      2039	move.c	FUNCTION_46
0x40013ba	      0xe800000000	                          call 0x40013bf	      2109	move.c	FUNCTION_46
validate_cline_row	ELSE,0:CALL,3:DO,0:SWITCH,0:functions,0:IF,1:FOR,0:WHILE,0	12
0x40022b0	        0x4883ec08	                              sub rsp, 8	       645	move.c	FUNCTION_22
0x40022b4	      0xe800000000	                          call 0x40022b9	       649	move.c	FUNCTION_22	CALL_1
0x40022b9	    0x488b3d000000	            mov rdi, qword [0x040022c0] 	       650	move.c	FUNCTION_22	CALL_2
0x40022c0	      0xe800000000	                          call 0x40022c5	       650	move.c	FUNCTION_22	CALL_2
0x40022c5	    0x488b3d000000	            mov rdi, qword [0x040022cc] 	       651	move.c	FUNCTION_22	IF_1
0x40022cc	    0xf687b4000000	           test byte [rdi + 0xb4], 0x10 	       651	move.c	FUNCTION_22	IF_1
0x40022d3	            0x740b	                            je 0x40022e0	       651	move.c	FUNCTION_22	IF_1
0x40022d5	        0x4883c408	                              add rsp, 8	       653	move.c	FUNCTION_22
0x40022d9	              0xc3	                                     ret	       653	move.c	FUNCTION_22
0x40022da	    0x660f1f440000	                    nop word [rax + rax]	       653	move.c	FUNCTION_22
0x40022e0	        0x4883c408	                              add rsp, 8	       653	move.c	FUNCTION_22
0x40022e4	      0xe987e3ffff	                       jmp sym.curs_rows	       652	move.c	FUNCTION_22	CALL_3
changed_line_abv_curs	ELSE,0:CALL,0:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	3
0x4000cb0	    0x488b05000000	            mov rax, qword [0x04000cb7] 	       573	move.c	FUNCTION_14
0x4000cb7	    0x81a0b4000000	      and dword [rax + 0xb4], 0xffffff60	       573	move.c	FUNCTION_14
0x4000cc1	              0xc3	                                     ret	       573	move.c	FUNCTION_14
validate_cursor	ELSE,0:CALL,2:DO,0:SWITCH,0:functions,0:IF,1:FOR,0:WHILE,0	14
0x4002990	        0x4883ec08	                              sub rsp, 8	       633	move.c	FUNCTION_21
0x4002994	    0x488b3d000000	            mov rdi, qword [0x0400299b] 	       634	move.c	FUNCTION_21	CALL_1
0x400299b	      0xe800000000	                          call 0x40029a0	       634	move.c	FUNCTION_21	CALL_1
0x40029a0	    0x488b05000000	            mov rax, qword [0x040029a7] 	       635	move.c	FUNCTION_21	IF_1
0x40029a7	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       635	move.c	FUNCTION_21	IF_1
0x40029ad	          0x83e003	                              and eax, 3	       635	move.c	FUNCTION_21	IF_1
0x40029b0	          0x83f803	                              cmp eax, 3	       635	move.c	FUNCTION_21	IF_1
0x40029b3	            0x7413	                            je 0x40029c8	       635	move.c	FUNCTION_21	IF_1
0x40029b5	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x40029ba	        0x4883c408	                              add rsp, 8	       637	move.c	FUNCTION_21
0x40029be	      0xe92df9ffff	                    jmp sym.curs_columns	       636	move.c	FUNCTION_21	CALL_2
0x40029c3	       0xf1f440000	                   nop dword [rax + rax]	       636	move.c	FUNCTION_21	CALL_2
0x40029c8	        0x4883c408	                              add rsp, 8	       637	move.c	FUNCTION_21
0x40029cc	              0xc3	                                     ret	       637	move.c	FUNCTION_21
approximate_botline_win	ELSE,0:CALL,0:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	2
0x4000d20	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffffdf	       613	move.c	FUNCTION_19
0x4000d27	              0xc3	                                     ret	       613	move.c	FUNCTION_19
win_col_off	ELSE,0:CALL,2:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	30
0x4000e10	              0x55	                                push rbp	       876	move.c	ELSE_1	FUNCTION_28
0x4000e11	              0x53	                                push rbx	       876	move.c	ELSE_1	FUNCTION_28
0x4000e12	            0x31db	                            xor ebx, ebx	       876	move.c	ELSE_1	FUNCTION_28
0x4000e14	          0x4889fd	                            mov rbp, rdi	       876	move.c	ELSE_1	FUNCTION_28
0x4000e17	        0x4883ec08	                              sub rsp, 8	       876	move.c	ELSE_1	FUNCTION_28
0x4000e1b	    0x4883bf380200	              cmp qword [rdi + 0x238], 0	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e23	            0x753b	                           jne 0x4000e60	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e25	    0x8b1500000000	            mov edx, dword [0x04000e2b] 	       879	move.c	ELSE_1	FUNCTION_28
0x4000e2b	            0x85d2	                           test edx, edx	       879	move.c	ELSE_1	FUNCTION_28
0x4000e2d	            0x740c	                            je 0x4000e3b	       879	move.c	ELSE_1	FUNCTION_28
0x4000e2f	            0x31d2	                            xor edx, edx	       879	move.c	ELSE_1	FUNCTION_28
0x4000e31	    0x48392d000000	            cmp qword [0x04000e38], rbp 	       879	move.c	ELSE_1	FUNCTION_28
0x4000e38	           0xf94c2	                                 sete dl	       879	move.c	ELSE_1	FUNCTION_28
0x4000e3b	             0x1da	                            add edx, ebx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e3d	    0x8b9dc8010000	           mov ebx, dword [rbp + 0x1c8] 	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e43	          0x4889ef	                            mov rdi, rbp	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x4000e46	             0x1d3	                            add ebx, edx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e48	      0xe800000000	                          call 0x4000e4d	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x4000e4d	          0x83f801	                              cmp eax, 1	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e50	            0x19c0	                            sbb eax, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e52	        0x4883c408	                              add rsp, 8	       888	move.c	ELSE_1	FUNCTION_28
0x4000e56	            0xf7d0	                                 not eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e58	          0x83e002	                              and eax, 2	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e5b	             0x1d8	                            add eax, ebx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e5d	              0x5b	                                 pop rbx	       888	move.c	ELSE_1	FUNCTION_28
0x4000e5e	              0x5d	                                 pop rbp	       888	move.c	ELSE_1	FUNCTION_28
0x4000e5f	              0xc3	                                     ret	       888	move.c	ELSE_1	FUNCTION_28
0x4000e60	      0xe800000000	                          call 0x4000e65	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e65	          0x8d5801	                      lea ebx, [rax + 1]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4000e68	            0xebbb	                           jmp 0x4000e25	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
update_topline	ELSE,9:CALL,24:DO,0:SWITCH,0:functions,0:IF,28:FOR,2:WHILE,1	338
0x4001c60	            0x4157	                                push r15	       163	move.c	FUNCTION_4
0x4001c62	            0x4156	                                push r14	       163	move.c	FUNCTION_4
0x4001c64	      0xbf01000000	                              mov edi, 1	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001c69	            0x4155	                                push r13	       163	move.c	FUNCTION_4
0x4001c6b	            0x4154	                                push r12	       163	move.c	FUNCTION_4
0x4001c6d	              0x55	                                push rbp	       163	move.c	FUNCTION_4
0x4001c6e	              0x53	                                push rbx	       163	move.c	FUNCTION_4
0x4001c6f	        0x4883ec38	                           sub rsp, 0x38	       163	move.c	FUNCTION_4
0x4001c73	    0x488b1d000000	            mov rbx, qword [0x04001c7a] 	       177	move.c	FUNCTION_4
0x4001c7a	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	move.c	FUNCTION_4
0x4001c83	      0x4889442428	             mov qword [rsp + 0x28], rax	       163	move.c	FUNCTION_4
0x4001c88	            0x31c0	                            xor eax, eax	       163	move.c	FUNCTION_4
0x4001c8a	      0xe800000000	                          call 0x4001c8f	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001c8f	            0x85c0	                           test eax, eax	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001c91	    0x488b3d000000	            mov rdi, qword [0x04001c98] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001c98	            0x740c	                            je 0x4001ca6	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001c9a	    0x448b87a00000	            mov r8d, dword [rdi + 0xa0] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001ca1	          0x4585c0	                           test r8d, r8d	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001ca4	            0x754a	                           jne 0x4001cf0	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4001ca6	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       184	move.c	FUNCTION_4	IF_1
0x4001caa	    0x838fb4000000	            or dword [rdi + 0xb4], 0x60 	       186	move.c	FUNCTION_4	IF_1
0x4001cb1	    0x48c787500500	              mov qword [rdi + 0x550], 1	       187	move.c	FUNCTION_4	IF_1
0x4001cbc	        0x48894778	             mov qword [rdi + 0x78], rax	       184	move.c	FUNCTION_4	IF_1
0x4001cc0	    0x488987e80000	             mov qword [rdi + 0xe8], rax	       185	move.c	FUNCTION_4	IF_1
0x4001cc7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       407	move.c	FUNCTION_4
0x4001ccc	    0x644833042528	                xor rax, qword fs:[0x28]	       407	move.c	FUNCTION_4
0x4001cd5	     0xf858b050000	                           jne 0x4002266	       407	move.c	FUNCTION_4
0x4001cdb	        0x4883c438	                           add rsp, 0x38	       407	move.c	FUNCTION_4
0x4001cdf	              0x5b	                                 pop rbx	       407	move.c	FUNCTION_4
0x4001ce0	              0x5d	                                 pop rbp	       407	move.c	FUNCTION_4
0x4001ce1	            0x415c	                                 pop r12	       407	move.c	FUNCTION_4
0x4001ce3	            0x415d	                                 pop r13	       407	move.c	FUNCTION_4
0x4001ce5	            0x415e	                                 pop r14	       407	move.c	FUNCTION_4
0x4001ce7	            0x415f	                                 pop r15	       407	move.c	FUNCTION_4
0x4001ce9	              0xc3	                                     ret	       407	move.c	FUNCTION_4
0x4001cea	    0x660f1f440000	                    nop word [rax + rax]	       407	move.c	FUNCTION_4
0x4001cf0	      0xe800000000	                          call 0x4001cf5	       191	move.c	FUNCTION_4	CALL_2
0x4001cf5	    0x488b3d000000	            mov rdi, qword [0x04001cfc] 	       192	move.c	FUNCTION_4	IF_2
0x4001cfc	    0xf687b4000000	           test byte [rdi + 0xb4], 0x80 	       192	move.c	FUNCTION_4	IF_2
0x4001d03	            0x75c2	                           jne 0x4001cc7	       192	move.c	FUNCTION_4	IF_2
0x4001d05	    0x8b0500000000	            mov eax, dword [0x04001d0b] 	       197	move.c	FUNCTION_4	IF_3
0x4001d0b	            0x85c0	                           test eax, eax	       197	move.c	FUNCTION_4	IF_3
0x4001d0d	            0x7e0c	                           jle 0x4001d1b	       197	move.c	FUNCTION_4	IF_3
0x4001d0f	          0x83e801	                              sub eax, 1	       198	move.c	FUNCTION_4	IF_3
0x4001d12	            0x4898	                                    cdqe	       198	move.c	FUNCTION_4	IF_3
0x4001d14	    0x488905000000	            mov qword [0x04001d1b], rax 	       198	move.c	FUNCTION_4	IF_3
0x4001d1b	    0x488b05000000	            mov rax, qword [0x04001d22] 	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4001d22	        0x4c8b6f78	            mov r13, qword [rdi + 0x78] 	       201	move.c	FUNCTION_4
0x4001d26	    0x448bb7840000	           mov r14d, dword [rdi + 0x84] 	       203	move.c	FUNCTION_4
0x4001d2d	          0x488b28	                    mov rbp, qword [rax]	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4001d30	          0x4c89ee	                            mov rsi, r13	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4001d33	        0x4883fd01	                              cmp rbp, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4001d37	     0xf8435030000	                            je 0x4002072	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4001d3d	        0x4883fe01	                              cmp rsi, 1	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4001d41	     0xf8e79020000	                           jle 0x4001fc0	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4001d47	        0x48397738	            cmp qword [rdi + 0x38], rsi 	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4001d4b	     0xf8d57020000	                           jge 0x4001fa8	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4001d51	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001d57	            0x89c5	                            mov ebp, eax	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001d59	          0xc1ed1f	                           shr ebp, 0x1f	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001d5c	             0x1e8	                            add eax, ebp	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001d5e	            0xd1f8	                              sar eax, 1	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001d60	          0x8d68ff	                      lea ebp, [rax - 1]	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4001d63	      0xb802000000	                              mov eax, 2	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4001d68	          0x83fd01	                              cmp ebp, 1	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4001d6b	           0xf4ee8	                         cmovle ebp, eax	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4001d6e	      0xe800000000	                          call 0x4001d73	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4001d73	            0x85c0	                           test eax, eax	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4001d75	     0xf8495020000	                            je 0x4002010	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4001d7b	    0x488b15000000	            mov rdx, qword [0x04001d82] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001d82	        0x488b4278	            mov rax, qword [rdx + 0x78] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001d86	    0x480305000000	             add rax, qword [0x04001d8d]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001d8d	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001d91	          0x4839c7	                            cmp rdi, rax	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001d94	      0x48897c2408	                mov qword [rsp + 8], rdi	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001d99	            0x7d6e	                           jge 0x4001e09	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001d9b	    0x488b05000000	            mov rax, qword [0x04001da2] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001da2	          0x483b38	                    cmp rdi, qword [rax]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001da5	            0x7d62	                           jge 0x4001e09	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001da7	    0x41bf01000000	                             mov r15d, 1	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001dad	      0x4c8d642408	                      lea r12, [rsp + 8]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001db2	            0xeb19	                           jmp 0x4001dcd	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001db4	         0xf1f4000	                         nop dword [rax]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001db8	    0x488b05000000	            mov rax, qword [0x04001dbf] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001dbf	        0x4183c701	                             add r15d, 1	       258	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001dc3	          0x483938	                    cmp qword [rax], rdi	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001dc6	            0x7e38	                           jle 0x4001e00	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001dc8	          0x4439fd	                           cmp ebp, r15d	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001dcb	            0x7e33	                           jle 0x4001e00	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4001dcd	          0x4c89e2	                            mov rdx, r12	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4001dd0	            0x31f6	                            xor esi, esi	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4001dd2	      0xe800000000	                          call 0x4001dd7	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4001dd7	      0x488b442408	                mov rax, qword [rsp + 8]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001ddc	    0x488b15000000	            mov rdx, qword [0x04001de3] 	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001de3	        0x488d7801	                      lea rdi, [rax + 1]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001de7	    0x488b05000000	            mov rax, qword [0x04001dee] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001dee	        0x48034278	             add rax, qword [rdx + 0x78]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001df2	      0x48897c2408	                mov qword [rsp + 8], rdi	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001df7	          0x4839f8	                            cmp rax, rdi	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001dfa	            0x7fbc	                            jg 0x4001db8	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001dfc	         0xf1f4000	                         nop dword [rax]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4001e00	          0x4439fd	                           cmp ebp, r15d	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x4001e03	     0xf8ed7010000	                           jle 0x4001fe0	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x4001e09	    0x488b3d000000	            mov rdi, qword [0x04001e10] 	       417	move.c	FUNCTION_5	IF_1
0x4001e10	          0x4885ff	                           test rdi, rdi	       417	move.c	FUNCTION_5	IF_1
0x4001e13	     0xf887c020000	                            js 0x4002095	       417	move.c	FUNCTION_5	IF_1
0x4001e19	            0x31f6	                            xor esi, esi	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4001e1b	      0xe800000000	                          call 0x4001e20	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4001e20	    0x488b3d000000	            mov rdi, qword [0x04001e27] 	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4001e27	    0xf687b4000000	           test byte [rdi + 0xb4], 0x60 	       590	move.c	FUNCTION_16	IF_1
0x4001e2e	     0xf846c030000	                            je 0x40021a0	       590	move.c	FUNCTION_16	IF_1
0x4001e34	    0x488b15000000	            mov rdx, qword [0x04001e3b] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001e3b	    0x488b87e80000	            mov rax, qword [rdi + 0xe8] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001e42	          0x483b02	                    cmp rax, qword [rdx]	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001e45	     0xf8fa3010000	                            jg 0x4001fee	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4001e4b	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4001e4f	          0x4839c8	                            cmp rax, rcx	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4001e52	     0xf8f6e020000	                            jg 0x40020c6	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4001e58	      0xe800000000	                          call 0x4001e5d	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4001e5d	            0x85c0	                           test eax, eax	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4001e5f	    0x488b15000000	            mov rdx, qword [0x04001e66] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001e66	     0xf84b1030000	                            je 0x400221d	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4001e6c	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001e73	    0x482b05000000	             sub rax, qword [0x04001e7a]	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001e7a	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001e7e	          0x4839c7	                            cmp rdi, rax	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001e81	      0x48897c2408	                mov qword [rsp + 8], rdi	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001e86	     0xf8cdf030000	                            jl 0x400226b	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001e8c	          0x4885ff	                           test rdi, rdi	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001e8f	      0xbd01000000	                              mov ebp, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001e94	            0x7e69	                           jle 0x4001eff	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001e96	    0x8b8aa0000000	            mov ecx, dword [rdx + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001e9c	            0x85c9	                           test ecx, ecx	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001e9e	            0x785f	                            js 0x4001eff	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ea0	      0x4c8d642408	                      lea r12, [rsp + 8]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ea5	            0xeb26	                           jmp 0x4001ecd	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ea7	    0x660f1f840000	                    nop word [rax + rax]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001eb0	        0x4883c501	                              add rbp, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001eb4	          0x4885ff	                           test rdi, rdi	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001eb7	            0x7e46	                           jle 0x4001eff	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001eb9	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ebf	          0x83c001	                              add eax, 1	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ec2	            0x4898	                                    cdqe	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ec4	          0x4839c5	                            cmp rbp, rax	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ec7	     0xf8f13010000	                            jg 0x4001fe0	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4001ecd	            0x31d2	                            xor edx, edx	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4001ecf	          0x4c89e6	                            mov rsi, r12	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4001ed2	      0xe800000000	                          call 0x4001ed7	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4001ed7	      0x488b442408	                mov rax, qword [rsp + 8]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001edc	    0x488b15000000	            mov rdx, qword [0x04001ee3] 	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001ee3	        0x488d78ff	                      lea rdi, [rax - 1]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001ee7	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001eee	    0x482b05000000	             sub rax, qword [0x04001ef5]	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001ef5	      0x48897c2408	                mov qword [rsp + 8], rdi	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001efa	          0x4839f8	                            cmp rax, rdi	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001efd	            0x7eb1	                           jle 0x4001eb0	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4001eff	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001f06	          0x8d5001	                      lea edx, [rax + 1]	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001f09	          0x4863d2	                         movsxd rdx, edx	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001f0c	          0x4839d5	                            cmp rbp, rdx	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001f0f	     0xf8fcb000000	                            jg 0x4001fe0	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4001f15	    0x488b3d000000	            mov rdi, qword [0x04001f1c] 	       417	move.c	FUNCTION_5	IF_1
0x4001f1c	          0x4885ff	                           test rdi, rdi	       417	move.c	FUNCTION_5	IF_1
0x4001f1f	     0xf8814030000	                            js 0x4002239	       417	move.c	FUNCTION_5	IF_1
0x4001f25	            0x31f6	                            xor esi, esi	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001f27	      0xe800000000	                          call 0x4001f2c	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001f2c	    0x488b3d000000	            mov rdi, qword [0x04001f33] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001f33	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001f39	        0x488b6f78	            mov rbp, qword [rdi + 0x78] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001f3d	           0xf1f00	                         nop dword [rax]	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4001f40	             0xc80	                             or al, 0x80	       380	move.c	FUNCTION_4
0x4001f42	          0x4939ed	                            cmp r13, rbp	       385	move.c	FUNCTION_4	IF_26
0x4001f45	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       380	move.c	FUNCTION_4
0x4001f4b	     0xf84df000000	                            je 0x4002030	       385	move.c	FUNCTION_4	IF_26
0x4001f51	    0x8b8798000000	            mov eax, dword [rdi + 0x98] 	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4001f57	    0xc70500000000	     mov dword [0x04001f61], 0xffffffff 	       391	move.c	FUNCTION_4	IF_26
0x4001f61	            0x85c0	                           test eax, eax	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4001f63	     0xf8497000000	                            je 0x4002000	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4001f69	    0xc78798000000	               mov dword [rdi + 0x98], 0	       394	move.c	FUNCTION_4	IF_26	IF_27
0x4001f73	      0xbf28000000	                           mov edi, 0x28	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4001f78	      0xe800000000	                          call 0x4001f7d	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4001f7d	    0x488b05000000	            mov rax, qword [0x04001f84] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4001f84	        0x488b4878	            mov rcx, qword [rax + 0x78] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4001f88	        0x48394838	            cmp qword [rax + 0x38], rcx 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4001f8c	     0xf84d6000000	                            je 0x4002068	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4001f92	          0x4863db	                         movsxd rbx, ebx	       405	move.c	FUNCTION_4
0x4001f95	    0x48891d000000	            mov qword [0x04001f9c], rbx 	       405	move.c	FUNCTION_4
0x4001f9c	      0xe926fdffff	                           jmp 0x4001cc7	       405	move.c	FUNCTION_4
0x4001fa1	     0xf1f80000000	                         nop dword [rax]	       405	move.c	FUNCTION_4
0x4001fa8	      0xe893e3ffff	               call sym.check_top_offset	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4001fad	            0x85c0	                           test eax, eax	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4001faf	    0x488b3d000000	            mov rdi, qword [0x04001fb6] 	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4001fb6	     0xf8595fdffff	                           jne 0x4001d51	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4001fbc	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4001fc0	    0x8baf84000000	            mov ebp, dword [rdi + 0x84] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001fc6	      0xe800000000	                          call 0x4001fcb	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001fcb	            0x39c5	                            cmp ebp, eax	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001fcd	            0x7e79	                           jle 0x4002048	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001fcf	    0x488b3d000000	            mov rdi, qword [0x04001fd6] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001fd6	      0xe976fdffff	                           jmp 0x4001d51	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001fdb	       0xf1f440000	                   nop dword [rax + rax]	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4001fe0	            0x31ff	                            xor edi, edi	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4001fe2	      0xe800000000	                          call 0x4001fe7	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4001fe7	    0x488b3d000000	            mov rdi, qword [0x04001fee] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4001fee	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4001ff4	        0x488b6f78	            mov rbp, qword [rdi + 0x78] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4001ff8	      0xe943ffffff	                           jmp 0x4001f40	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4001ffd	           0xf1f00	                         nop dword [rax]	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4002000	      0xbf0a000000	                            mov edi, 0xa	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x4002005	      0xe800000000	                          call 0x400200a	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x400200a	      0xe96effffff	                           jmp 0x4001f7d	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x400200f	              0x90	                                     nop	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x4002010	    0x488b15000000	            mov rdx, qword [0x04002017] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4002017	    0x4c8b3d000000	            mov r15, qword [0x0400201e] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x400201e	        0x44037a78	            add r15d, dword [rdx + 0x78]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4002022	        0x442b7a38	            sub r15d, dword [rdx + 0x38]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4002026	      0xe9d5fdffff	                           jmp 0x4001e00	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x400202b	       0xf1f440000	                   nop dword [rax + rax]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4002030	    0x443bb7840000	           cmp r14d, dword [rdi + 0x84] 	       387	move.c	FUNCTION_4	IF_26
0x4002037	     0xf8514ffffff	                           jne 0x4001f51	       387	move.c	FUNCTION_4	IF_26
0x400203d	      0xe950ffffff	                           jmp 0x4001f92	       387	move.c	FUNCTION_4	IF_26
0x4002042	    0x660f1f440000	                    nop word [rax + rax]	       387	move.c	FUNCTION_4	IF_26
0x4002048	    0x488b05000000	            mov rax, qword [0x0400204f] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x400204f	            0x31d2	                            xor edx, edx	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4002051	        0x488b7878	            mov rdi, qword [rax + 0x78] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4002055	        0x488d7078	                   lea rsi, [rax + 0x78]	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4002059	      0xe800000000	                          call 0x400205e	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x400205e	      0xe9bdfdffff	                           jmp 0x4001e20	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4002063	       0xf1f440000	                   nop dword [rax + rax]	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4002068	      0xe800000000	                          call 0x400206d	       401	move.c	FUNCTION_4	IF_26	CALL_24
0x400206d	      0xe920ffffff	                           jmp 0x4001f92	       401	move.c	FUNCTION_4	IF_26	CALL_24
0x4002072	      0xbf01000000	                              mov edi, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4002077	      0xe800000000	                          call 0x400207c	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x400207c	          0x803800	                       cmp byte [rax], 0	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x400207f	    0x488b3d000000	            mov rdi, qword [0x04002086] 	       211	move.c	FUNCTION_4	IF_4	IF_5
0x4002086	     0xf8425010000	                            je 0x40021b1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x400208c	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4002090	      0xe9a8fcffff	                           jmp 0x4001d3d	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4002095	    0x48638aa00000	         movsxd rcx, dword [rdx + 0xa0] 	       419	move.c	FUNCTION_5
0x400209c	          0x48f7df	                                 neg rdi	       419	move.c	FUNCTION_5
0x400209f	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       419	move.c	FUNCTION_5
0x40020a9	        0x480fafcf	                           imul rcx, rdi	       419	move.c	FUNCTION_5
0x40020ad	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x40020b0	          0x48f7ea	                                imul rdx	       419	move.c	FUNCTION_5
0x40020b3	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       419	move.c	FUNCTION_5
0x40020b7	        0x48c1f93f	                           sar rcx, 0x3f	       419	move.c	FUNCTION_5
0x40020bb	        0x48c1ff06	                              sar rdi, 6	       419	move.c	FUNCTION_5
0x40020bf	            0x29cf	                            sub edi, ecx	       419	move.c	FUNCTION_5
0x40020c1	      0xe953fdffff	                           jmp 0x4001e19	       419	move.c	FUNCTION_5
0x40020c6	    0x482b05000000	             sub rax, qword [0x040020cd]	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40020cd	          0x4839c1	                            cmp rcx, rax	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40020d0	            0x7d18	                           jge 0x40020ea	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40020d2	      0xe800000000	                          call 0x40020d7	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40020d7	            0x85c0	                           test eax, eax	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40020d9	    0x488b3d000000	            mov rdi, qword [0x040020e0] 	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40020e0	     0xf8408ffffff	                            je 0x4001fee	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40020e6	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40020ea	      0x488d542410	                   lea rdx, [rsp + 0x10]	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40020ef	    0x8baff0000000	            mov ebp, dword [rdi + 0xf0] 	       320	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40020f5	            0x31f6	                            xor esi, esi	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40020f7	          0x4889cf	                            mov rdi, rcx	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40020fa	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       321	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40020ff	      0xe800000000	                          call 0x4002104	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x4002104	    0x488b3d000000	            mov rdi, qword [0x0400210b] 	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400210b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002110	    0xc74424180000	               mov dword [rsp + 0x18], 0	       327	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4002118	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       330	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4002120	     0x3aff4000000	             add ebp, dword [rdi + 0xf4]	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4002126	    0x488b8fe80000	            mov rcx, qword [rdi + 0xe8] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400212d	          0x4889fa	                            mov rdx, rdi	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4002130	          0x4839c1	                            cmp rcx, rax	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002133	          0x4c63e5	                         movsxd r12, ebp	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002136	            0x7f31	                            jg 0x4002169	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002138	      0xe9c4000000	                           jmp 0x4002201	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400213d	           0xf1f00	                         nop dword [rax]	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002140	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       340	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x4002145	      0xe8a6dfffff	                   call sym.botline_forw	       340	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x400214a	    0x488b15000000	            mov rdx, qword [0x04002151] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002151	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002156	    0x488b8ae80000	            mov rcx, qword [rdx + 0xe8] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400215d	          0x4889d7	                            mov rdi, rdx	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002160	          0x4839c8	                            cmp rax, rcx	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002163	     0xf8d98000000	                           jge 0x4002201	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002169	        0x4883c001	                              add rax, 1	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400216d	          0x4839c8	                            cmp rax, rcx	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002170	            0x7c0c	                            jl 0x400217e	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002172	        0x8b742418	            mov esi, dword [rsp + 0x18] 	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002176	            0x85f6	                           test esi, esi	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002178	     0xf857d000000	                           jne 0x40021fb	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400217e	         0x36c241c	             add ebp, dword [rsp + 0x1c]	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4002182	          0x4c63e5	                         movsxd r12, ebp	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4002185	    0x4c3b25000000	            cmp r12, qword [0x0400218c] 	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x400218c	            0x7cb2	                            jl 0x4002140	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x400218e	          0x4889d7	                            mov rdi, rdx	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4002191	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4002197	        0x488b6a78	            mov rbp, qword [rdx + 0x78] 	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x400219b	      0xe9a0fdffff	                           jmp 0x4001f40	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x40021a0	      0xe82be8ffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x40021a5	    0x488b3d000000	            mov rdi, qword [0x040021ac] 	       591	move.c	FUNCTION_16	CALL_1
0x40021ac	      0xe983fcffff	                           jmp 0x4001e34	       591	move.c	FUNCTION_16	CALL_1
0x40021b1	      0x48837f7801	               cmp qword [rdi + 0x78], 1	       211	move.c	FUNCTION_4	IF_4	IF_5
0x40021b6	            0x7411	                            je 0x40021c9	       211	move.c	FUNCTION_4	IF_4	IF_5
0x40021b8	      0xbf28000000	                           mov edi, 0x28	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x40021bd	      0xe800000000	                          call 0x40021c2	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x40021c2	    0x488b3d000000	            mov rdi, qword [0x040021c9] 	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x40021c9	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       215	move.c	FUNCTION_4	IF_4
0x40021cf	    0x48c747780100	               mov qword [rdi + 0x78], 1	       213	move.c	FUNCTION_4	IF_4
0x40021d7	    0x48c787e80000	               mov qword [rdi + 0xe8], 2	       214	move.c	FUNCTION_4	IF_4
0x40021e2	    0x48c787500500	              mov qword [rdi + 0x550], 1	       216	move.c	FUNCTION_4	IF_4
0x40021ed	          0x83c860	                            or eax, 0x60	       215	move.c	FUNCTION_4	IF_4
0x40021f0	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       215	move.c	FUNCTION_4	IF_4
0x40021f6	      0xe945fdffff	                           jmp 0x4001f40	       216	move.c	FUNCTION_4	IF_4
0x40021fb	          0x4c63e5	                         movsxd r12, ebp	       216	move.c	FUNCTION_4	IF_4
0x40021fe	          0x4889d7	                            mov rdi, rdx	       216	move.c	FUNCTION_4	IF_4
0x4002201	    0x4c3925000000	            cmp qword [0x04002208], r12 	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4002208	     0xf8f4afcffff	                            jg 0x4001e58	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x400220e	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4002214	        0x488b6a78	            mov rbp, qword [rdx + 0x78] 	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4002218	      0xe923fdffff	                           jmp 0x4001f40	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x400221d	        0x488b4238	            mov rax, qword [rdx + 0x38] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4002221	    0x482b82e80000	             sub rax, qword [rdx + 0xe8]	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4002228	    0x488b0d000000	            mov rcx, qword [0x0400222f] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x400222f	      0x488d6c0801	                lea rbp, [rax + rcx + 1]	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4002234	      0xe9c6fcffff	                           jmp 0x4001eff	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4002239	          0x48f7df	                                 neg rdi	       419	move.c	FUNCTION_5
0x400223c	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       419	move.c	FUNCTION_5
0x4002246	          0x4889f9	                            mov rcx, rdi	       419	move.c	FUNCTION_5
0x4002249	        0x480fafc8	                           imul rcx, rax	       419	move.c	FUNCTION_5
0x400224d	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x4002250	          0x48f7ea	                                imul rdx	       419	move.c	FUNCTION_5
0x4002253	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       419	move.c	FUNCTION_5
0x4002257	        0x48c1f93f	                           sar rcx, 0x3f	       419	move.c	FUNCTION_5
0x400225b	        0x48c1ff06	                              sar rdi, 6	       419	move.c	FUNCTION_5
0x400225f	            0x29cf	                            sub edi, ecx	       419	move.c	FUNCTION_5
0x4002261	      0xe9bffcffff	                           jmp 0x4001f25	       419	move.c	FUNCTION_5
0x4002266	      0xe800000000	                          call 0x400226b	       407	move.c	FUNCTION_4
0x400226b	            0x31ed	                            xor ebp, ebp	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
0x400226d	      0xe98dfcffff	                           jmp 0x4001eff	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
check_top_offset	ELSE,0:CALL,2:DO,0:SWITCH,0:functions,0:IF,3:FOR,0:WHILE,1	56
0x4000340	              0x55	                                push rbp	       428	move.c	FUNCTION_6
0x4000341	              0x53	                                push rbx	       428	move.c	FUNCTION_6
0x4000342	        0x4883ec28	                           sub rsp, 0x28	       428	move.c	FUNCTION_6
0x4000346	    0x488b3d000000	            mov rdi, qword [0x0400034d] 	       432	move.c	FUNCTION_6	IF_1
0x400034d	    0x64488b042528	                mov rax, qword fs:[0x28]	       428	move.c	FUNCTION_6
0x4000356	      0x4889442418	             mov qword [rsp + 0x18], rax	       428	move.c	FUNCTION_6
0x400035b	            0x31c0	                            xor eax, eax	       428	move.c	FUNCTION_6
0x400035d	    0x488b05000000	            mov rax, qword [0x04000364] 	       432	move.c	FUNCTION_6	IF_1
0x4000364	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       432	move.c	FUNCTION_6	IF_1
0x4000368	          0x4889c1	                            mov rcx, rax	       432	move.c	FUNCTION_6	IF_1
0x400036b	        0x48034f78	             add rcx, qword [rdi + 0x78]	       432	move.c	FUNCTION_6	IF_1
0x400036f	          0x4839ca	                            cmp rdx, rcx	       432	move.c	FUNCTION_6	IF_1
0x4000372	     0xf8d80000000	                           jge 0x40003f8	       432	move.c	FUNCTION_6	IF_1
0x4000378	    0x4863af840000	         movsxd rbp, dword [rdi + 0x84] 	       441	move.c	FUNCTION_6	IF_1
0x400037f	        0x48891424	                    mov qword [rsp], rdx	       438	move.c	FUNCTION_6	IF_1
0x4000383	    0xc74424080000	                  mov dword [rsp + 8], 0	       440	move.c	FUNCTION_6	IF_1
0x400038b	          0x4839c5	                            cmp rbp, rax	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x400038e	          0x4889eb	                            mov rbx, rbp	       441	move.c	FUNCTION_6	IF_1
0x4000391	            0x7c18	                            jl 0x40003ab	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000393	            0xeb40	                           jmp 0x40003d5	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000395	           0xf1f00	                         nop dword [rax]	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000398	         0x35c240c	              add ebx, dword [rsp + 0xc]	       456	move.c	FUNCTION_6	IF_1	WHILE_1
0x400039c	    0x488b05000000	            mov rax, qword [0x040003a3] 	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40003a3	          0x4863eb	                         movsxd rbp, ebx	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40003a6	          0x4839c5	                            cmp rbp, rax	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40003a9	            0x7d2a	                           jge 0x40003d5	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40003ab	          0x4889e7	                            mov rdi, rsp	       448	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x40003ae	      0xe8edfeffff	                   call sym.topline_back	       448	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x40003b3	    0x488b05000000	            mov rax, qword [0x040003ba] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003ba	        0x488b4078	            mov rax, qword [rax + 0x78] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003be	        0x48390424	                    cmp qword [rsp], rax	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003c2	            0x7c0a	                            jl 0x40003ce	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003c4	            0x75d2	                           jne 0x4000398	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003c6	        0x8b442408	                mov eax, dword [rsp + 8]	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003ca	            0x85c0	                           test eax, eax	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003cc	            0x7eca	                           jle 0x4000398	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003ce	    0x488b05000000	            mov rax, qword [0x040003d5] 	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40003d5	          0x4839c5	                            cmp rbp, rax	       459	move.c	FUNCTION_6	IF_1	IF_3
0x40003d8	           0xf9cc0	                                 setl al	       459	move.c	FUNCTION_6	IF_1	IF_3
0x40003db	           0xfb6c0	                           movzx eax, al	       459	move.c	FUNCTION_6	IF_1	IF_3
0x40003de	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       462	move.c	FUNCTION_6
0x40003e3	    0x644833342528	                xor rsi, qword fs:[0x28]	       462	move.c	FUNCTION_6
0x40003ec	            0x752a	                           jne 0x4000418	       462	move.c	FUNCTION_6
0x40003ee	        0x4883c428	                           add rsp, 0x28	       462	move.c	FUNCTION_6
0x40003f2	              0x5b	                                 pop rbx	       462	move.c	FUNCTION_6
0x40003f3	              0x5d	                                 pop rbp	       462	move.c	FUNCTION_6
0x40003f4	              0xc3	                                     ret	       462	move.c	FUNCTION_6
0x40003f5	           0xf1f00	                         nop dword [rax]	       462	move.c	FUNCTION_6
0x40003f8	      0xe800000000	                          call 0x40003fd	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40003fd	            0x85c0	                           test eax, eax	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40003ff	            0x74dd	                            je 0x40003de	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000401	    0x488b3d000000	            mov rdi, qword [0x04000408] 	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000408	    0x488b05000000	            mov rax, qword [0x0400040f] 	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x400040f	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000413	      0xe960ffffff	                           jmp 0x4000378	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x4000418	      0xe800000000	                          call 0x400041d	       462	move.c	FUNCTION_6
scrolldown_clamp	ELSE,2:CALL,8:DO,0:SWITCH,0:functions,0:IF,5:FOR,0:WHILE,0	83
0x4002d10	    0x488b3d000000	            mov rdi, qword [0x04002d17] 	      1419	move.c	FUNCTION_37
0x4002d17	            0x4154	                                push r12	      1416	move.c	FUNCTION_37
0x4002d19	              0x55	                                push rbp	      1416	move.c	FUNCTION_37
0x4002d1a	              0x53	                                push rbx	      1416	move.c	FUNCTION_37
0x4002d1b	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      1420	move.c	FUNCTION_37	CALL_1
0x4002d1f	    0x8baf84000000	            mov ebp, dword [rdi + 0x84] 	      1419	move.c	FUNCTION_37
0x4002d25	      0xe800000000	                          call 0x4002d2a	      1420	move.c	FUNCTION_37	CALL_1
0x4002d2a	          0x4189c4	                           mov r12d, eax	      1420	move.c	FUNCTION_37	CALL_1
0x4002d2d	    0x488b05000000	            mov rax, qword [0x04002d34] 	      1423	move.c	FUNCTION_37	IF_1
0x4002d34	      0x4883787801	               cmp qword [rax + 0x78], 1	      1423	move.c	FUNCTION_37	IF_1
0x4002d39	     0xf8ec9000000	                           jle 0x4002e08	      1423	move.c	FUNCTION_37	IF_1
0x4002d3f	      0xe800000000	                          call 0x4002d44	      1430	move.c	FUNCTION_37	CALL_2
0x4002d44	    0x488b0d000000	            mov rcx, qword [0x04002d4b] 	      1437	move.c	FUNCTION_37
0x4002d4b	          0x4439e5	                           cmp ebp, r12d	      1439	move.c	FUNCTION_37	IF_2
0x4002d4e	    0x8b99dc000000	            mov ebx, dword [rcx + 0xdc] 	      1437	move.c	FUNCTION_37
0x4002d54	     0xf8d8e000000	                           jge 0x4002de8	      1439	move.c	FUNCTION_37	IF_2
0x4002d5a	          0x83c301	                              add ebx, 1	      1440	move.c	FUNCTION_37	IF_2
0x4002d5d	    0x8b9194020000	           mov edx, dword [rcx + 0x294] 	      1446	move.c	FUNCTION_37	IF_3
0x4002d63	            0x85d2	                           test edx, edx	      1446	move.c	FUNCTION_37	IF_3
0x4002d65	            0x740e	                            je 0x4002d75	      1446	move.c	FUNCTION_37	IF_3
0x4002d67	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	      1446	move.c	FUNCTION_37	IF_3
0x4002d6d	            0x85c0	                           test eax, eax	      1446	move.c	FUNCTION_37	IF_3
0x4002d6f	     0xf85d3000000	                           jne 0x4002e48	      1446	move.c	FUNCTION_37	IF_3
0x4002d75	    0x486381a00000	         movsxd rax, dword [rcx + 0xa0] 	      1453	move.c	FUNCTION_37	IF_4
0x4002d7c	          0x4863db	                         movsxd rbx, ebx	      1453	move.c	FUNCTION_37	IF_4
0x4002d7f	    0x482b05000000	             sub rax, qword [0x04002d86]	      1453	move.c	FUNCTION_37	IF_4
0x4002d86	          0x4839c3	                            cmp rbx, rax	      1453	move.c	FUNCTION_37	IF_4
0x4002d89	            0x7d55	                           jge 0x4002de0	      1453	move.c	FUNCTION_37	IF_4
0x4002d8b	          0x4439e5	                           cmp ebp, r12d	      1456	move.c	FUNCTION_37	IF_4	IF_5
0x4002d8e	     0xf8d94000000	                           jge 0x4002e28	      1456	move.c	FUNCTION_37	IF_4	IF_5
0x4002d94	    0x8b8184000000	            mov eax, dword [rcx + 0x84] 	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4002d9a	          0x83c001	                              add eax, 1	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4002d9d	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x4002d9f	    0x898184000000	             mov dword [rcx + 0x84], eax	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4002da5	            0x7e14	                           jle 0x4002dbb	      1368	move.c	FUNCTION_35	IF_1
0x4002da7	          0x4889cf	                            mov rdi, rcx	      1368	move.c	FUNCTION_35	IF_1
0x4002daa	      0xbe01000000	                              mov esi, 1	      1368	move.c	FUNCTION_35	IF_1
0x4002daf	      0xe8dcd3ffff	           call sym.check_topfill.part.8	      1368	move.c	FUNCTION_35	IF_1
0x4002db4	    0x488b0d000000	            mov rcx, qword [0x04002dbb] 	      1368	move.c	FUNCTION_35	IF_1
0x4002dbb	        0x488b7978	            mov rdi, qword [rcx + 0x78] 	      1368	move.c	FUNCTION_35	IF_1
0x4002dbf	        0x488d7178	                   lea rsi, [rcx + 0x78]	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002dc3	            0x31d2	                            xor edx, edx	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002dc5	      0xe800000000	                          call 0x4002dca	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4002dca	    0x488b05000000	            mov rax, qword [0x04002dd1] 	      1472	move.c	FUNCTION_37	IF_4
0x4002dd1	    0x4883a8e80000	               sub qword [rax + 0xe8], 1	      1472	move.c	FUNCTION_37	IF_4
0x4002dd9	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffce	      1473	move.c	FUNCTION_37	IF_4
0x4002de0	              0x5b	                                 pop rbx	      1475	move.c	FUNCTION_37
0x4002de1	              0x5d	                                 pop rbp	      1475	move.c	FUNCTION_37
0x4002de2	            0x415c	                                 pop r12	      1475	move.c	FUNCTION_37
0x4002de4	              0xc3	                                     ret	      1475	move.c	FUNCTION_37
0x4002de5	           0xf1f00	                         nop dword [rax]	      1475	move.c	FUNCTION_37
0x4002de8	        0x488b7978	            mov rdi, qword [rcx + 0x78] 	      1442	move.c	FUNCTION_37	CALL_3
0x4002dec	        0x4883ef01	                              sub rdi, 1	      1442	move.c	FUNCTION_37	CALL_3
0x4002df0	      0xe800000000	                          call 0x4002df5	      1442	move.c	FUNCTION_37	CALL_3
0x4002df5	    0x488b0d000000	            mov rcx, qword [0x04002dfc] 	      1442	move.c	FUNCTION_37	CALL_3
0x4002dfc	             0x1c3	                            add ebx, eax	      1442	move.c	FUNCTION_37	CALL_3
0x4002dfe	      0xe95affffff	                           jmp 0x4002d5d	      1442	move.c	FUNCTION_37	CALL_3
0x4002e03	       0xf1f440000	                   nop dword [rax + rax]	      1442	move.c	FUNCTION_37	CALL_3
0x4002e08	          0x4439e5	                           cmp ebp, r12d	      1425	move.c	FUNCTION_37	IF_1
0x4002e0b	            0x7dd3	                           jge 0x4002de0	      1425	move.c	FUNCTION_37	IF_1
0x4002e0d	      0xe800000000	                          call 0x4002e12	      1430	move.c	FUNCTION_37	CALL_2
0x4002e12	    0x488b0d000000	            mov rcx, qword [0x04002e19] 	      1437	move.c	FUNCTION_37
0x4002e19	    0x8b99dc000000	            mov ebx, dword [rcx + 0xdc] 	      1437	move.c	FUNCTION_37
0x4002e1f	      0xe936ffffff	                           jmp 0x4002d5a	      1437	move.c	FUNCTION_37
0x4002e24	         0xf1f4000	                         nop dword [rax]	      1437	move.c	FUNCTION_37
0x4002e28	        0x488b4178	            mov rax, qword [rcx + 0x78] 	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002e2c	    0xc78184000000	               mov dword [rcx + 0x84], 0	      1464	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002e36	        0x488d78ff	                      lea rdi, [rax - 1]	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002e3a	        0x48897978	             mov qword [rcx + 0x78], rdi	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002e3e	      0xe97cffffff	                           jmp 0x4002dbf	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002e43	       0xf1f440000	                   nop dword [rax + rax]	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4002e48	      0xe803dbffff	               call sym.validate_cheight	      1448	move.c	FUNCTION_37	IF_3	CALL_5
0x4002e4d	    0x488b3d000000	            mov rdi, qword [0x04002e54] 	       788	move.c	FUNCTION_24	CALL_1
0x4002e54	      0xe800000000	                          call 0x4002e59	       788	move.c	FUNCTION_24	CALL_1
0x4002e59	    0x488b0d000000	            mov rcx, qword [0x04002e60] 	      1450	move.c	FUNCTION_37	IF_3
0x4002e60	    0x8b81cc000000	            mov eax, dword [rcx + 0xcc] 	      1450	move.c	FUNCTION_37	IF_3
0x4002e66	          0x8d70ff	                      lea esi, [rax - 1]	      1450	move.c	FUNCTION_37	IF_3
0x4002e69	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      1450	move.c	FUNCTION_37	IF_3
0x4002e6f	              0x99	                                     cdq	      1450	move.c	FUNCTION_37	IF_3
0x4002e70	    0xf7b9ac000000	                 idiv dword [rcx + 0xac]	      1450	move.c	FUNCTION_37	IF_3
0x4002e76	            0x29c6	                            sub esi, eax	      1450	move.c	FUNCTION_37	IF_3
0x4002e78	             0x1f3	                            add ebx, esi	      1450	move.c	FUNCTION_37	IF_3
0x4002e7a	      0xe9f6feffff	                           jmp 0x4002d75	      1450	move.c	FUNCTION_37	IF_3
changed_cline_bef_curs_win	ELSE,0:CALL,0:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	2
0x4000ca0	    0x81a7b4000000	      and dword [rdi + 0xb4], 0xffffff70	       561	move.c	FUNCTION_13
0x4000caa	              0xc3	                                     ret	       561	move.c	FUNCTION_13
scroll_cursor_bot	ELSE,5:CALL,12:DO,0:SWITCH,0:functions,0:IF,21:FOR,2:WHILE,1	302
0x4001710	            0x4157	                                push r15	      1814	move.c	FUNCTION_45
0x4001712	            0x4156	                                push r14	      1814	move.c	FUNCTION_45
0x4001714	            0x4155	                                push r13	      1814	move.c	FUNCTION_45
0x4001716	            0x4154	                                push r12	      1814	move.c	FUNCTION_45
0x4001718	          0x4c63ef	                         movsxd r13, edi	      1814	move.c	FUNCTION_45
0x400171b	              0x55	                                push rbp	      1814	move.c	FUNCTION_45
0x400171c	              0x53	                                push rbx	      1814	move.c	FUNCTION_45
0x400171d	        0x4883ec58	                           sub rsp, 0x58	      1814	move.c	FUNCTION_45
0x4001721	    0x488b3d000000	            mov rdi, qword [0x04001728] 	      1820	move.c	FUNCTION_45
0x4001728	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      1814	move.c	FUNCTION_45
0x4001731	      0x48895c2448	             mov qword [rsp + 0x48], rbx	      1814	move.c	FUNCTION_45
0x4001736	            0x31db	                            xor ebx, ebx	      1814	move.c	FUNCTION_45
0x4001738	            0x85f6	                           test esi, esi	      1833	move.c	FUNCTION_45	IF_1
0x400173a	        0x89742418	             mov dword [rsp + 0x18], esi	      1814	move.c	FUNCTION_45
0x400173e	        0x488b5f78	            mov rbx, qword [rdi + 0x78] 	      1820	move.c	FUNCTION_45
0x4001742	        0x4c8b6738	            mov r12, qword [rdi + 0x38] 	      1832	move.c	FUNCTION_45
0x4001746	      0x48895c2408	                mov qword [rsp + 8], rbx	      1820	move.c	FUNCTION_45
0x400174b	    0x488b9fe80000	            mov rbx, qword [rdi + 0xe8] 	      1827	move.c	FUNCTION_45
0x4001752	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1827	move.c	FUNCTION_45
0x4001757	    0x8b9fb4000000	            mov ebx, dword [rdi + 0xb4] 	      1828	move.c	FUNCTION_45
0x400175d	        0x895c2404	                mov dword [rsp + 4], ebx	      1828	move.c	FUNCTION_45
0x4001761	    0x8b9ff0000000	            mov ebx, dword [rdi + 0xf0] 	      1829	move.c	FUNCTION_45
0x4001767	        0x895c241c	             mov dword [rsp + 0x1c], ebx	      1829	move.c	FUNCTION_45
0x400176b	     0xf8487030000	                            je 0x4001af8	      1833	move.c	FUNCTION_45	IF_1
0x4001771	      0x498d542401	                      lea rdx, [r12 + 1]	      1836	move.c	FUNCTION_45	IF_1
0x4001776	    0x448bb7840000	           mov r14d, dword [rdi + 0x84] 	      1824	move.c	FUNCTION_45
0x400177d	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1838	move.c	FUNCTION_45	IF_1
0x4001785	        0x4883fa01	                              cmp rdx, 1	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4001789	    0x488997e80000	             mov qword [rdi + 0xe8], rdx	      1836	move.c	FUNCTION_45	IF_1
0x4001790	        0x48895778	             mov qword [rdi + 0x78], rdx	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4001794	     0xf8ea7040000	                           jle 0x4001c41	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x400179a	            0x31db	                            xor ebx, ebx	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x400179c	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40017a1	            0xeb31	                           jmp 0x40017d4	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40017a3	       0xf1f440000	                   nop dword [rax + rax]	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40017a8	    0x488b3d000000	            mov rdi, qword [0x040017af] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40017af	             0x1d8	                            add eax, ebx	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40017b1	    0x3b87a0000000	            cmp eax, dword [rdi + 0xa0] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40017b7	            0x7f3a	                            jg 0x40017f3	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40017b9	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x40017bd	            0x89c3	                            mov ebx, eax	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x40017bf	    0x899784000000	             mov dword [rdi + 0x84], edx	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x40017c5	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x40017ca	        0x4883fa01	                              cmp rdx, 1	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40017ce	        0x48895778	             mov qword [rdi + 0x78], rdx	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x40017d2	            0x7e1f	                           jle 0x40017f3	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40017d4	          0x4889ef	                            mov rdi, rbp	      1845	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x40017d7	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1844	move.c	FUNCTION_45	IF_1	FOR_1
0x40017dc	      0xe8bfeaffff	                   call sym.topline_back	      1845	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x40017e1	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40017e5	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40017ea	            0x75bc	                           jne 0x40017a8	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40017ec	    0x488b3d000000	            mov rdi, qword [0x040017f3] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40017f3	            0x85db	                           test ebx, ebx	      1785	move.c	FUNCTION_44	IF_1
0x40017f5	    0xc787f4000000	               mov dword [rdi + 0xf4], 0	      1783	move.c	FUNCTION_44
0x40017ff	     0xf850d040000	                           jne 0x4001c12	      1785	move.c	FUNCTION_44	IF_1
0x4001805	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      1785	move.c	FUNCTION_44	IF_1
0x400180b	        0x488b5778	            mov rdx, qword [rdi + 0x78] 	      1785	move.c	FUNCTION_44	IF_1
0x400180f	    0xc787f0000000	               mov dword [rdi + 0xf0], 0	      1786	move.c	FUNCTION_44	IF_1
0x4001819	            0x89c1	                            mov ecx, eax	      1854	move.c	FUNCTION_45	IF_1
0x400181b	          0x83c960	                            or ecx, 0x60	      1854	move.c	FUNCTION_45	IF_1
0x400181e	      0x4839542408	                cmp qword [rsp + 8], rdx	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x4001823	    0x898fb4000000	             mov dword [rdi + 0xb4], ecx	      1854	move.c	FUNCTION_45	IF_1
0x4001829	     0xf8400040000	                            je 0x4001c2f	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x400182f	          0x83e0ee	                     and eax, 0xffffffee	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x4001832	          0x83c860	                            or eax, 0x60	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x4001835	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x400183b	          0x4c89e7	                            mov rdi, r12	      1867	move.c	FUNCTION_45	CALL_4
0x400183e	            0x31db	                            xor ebx, ebx	      1816	move.c	FUNCTION_45
0x4001840	      0xe800000000	                          call 0x4001845	      1867	move.c	FUNCTION_45	CALL_4
0x4001845	          0x4189c7	                           mov r15d, eax	      1867	move.c	FUNCTION_45	CALL_4
0x4001848	    0x488b05000000	            mov rax, qword [0x0400184f] 	      1876	move.c	FUNCTION_45	IF_4
0x400184f	    0x4c3ba0e80000	            cmp r12, qword [rax + 0xe8] 	      1876	move.c	FUNCTION_45	IF_4
0x4001856	            0x7c09	                            jl 0x4001861	      1876	move.c	FUNCTION_45	IF_4
0x4001858	          0x4489fb	                           mov ebx, r15d	      1878	move.c	FUNCTION_45	IF_4
0x400185b	     0xf848b030000	                            je 0x4001bec	      1879	move.c	FUNCTION_45	IF_4	IF_5
0x4001861	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4001865	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400186a	          0x4889ee	                            mov rsi, rbp	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400186d	      0xe800000000	                          call 0x4001872	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4001872	            0x85c0	                           test eax, eax	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4001874	            0x750a	                           jne 0x4001880	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4001876	      0x4c89642420	             mov qword [rsp + 0x20], r12	      1894	move.c	FUNCTION_45	IF_6
0x400187b	      0x4c89642430	             mov qword [rsp + 0x30], r12	      1895	move.c	FUNCTION_45	IF_6
0x4001880	    0x488b3d000000	            mov rdi, qword [0x04001887] 	      1900	move.c	FUNCTION_45	CALL_7
0x4001887	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1898	move.c	FUNCTION_45
0x400188f	          0x4531e4	                          xor r12d, r12d	      1817	move.c	FUNCTION_45
0x4001892	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1899	move.c	FUNCTION_45
0x400189a	    0x41beffffff7f	                    mov r14d, 0x7fffffff	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x40018a0	    0x488bb7e80000	            mov rsi, qword [rdi + 0xe8] 	      1900	move.c	FUNCTION_45	CALL_7
0x40018a7	      0xe800000000	                          call 0x40018ac	      1900	move.c	FUNCTION_45	CALL_7
0x40018ac	    0x488b15000000	            mov rdx, qword [0x040018b3] 	      1901	move.c	FUNCTION_45
0x40018b3	    0x2b82f4000000	             sub eax, dword [rdx + 0xf4]	      1900	move.c	FUNCTION_45	CALL_7
0x40018b9	          0x890424	                    mov dword [rsp], eax	      1900	move.c	FUNCTION_45	CALL_7
0x40018bc	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1900	move.c	FUNCTION_45	CALL_7
0x40018c1	     0xf1f80000000	                         nop dword [rax]	      1900	move.c	FUNCTION_45	CALL_7
0x40018c8	        0x4883f801	                              cmp rax, 1	      1904	move.c	FUNCTION_45	WHILE_1
0x40018cc	     0xf8e26010000	                           jle 0x40019f8	      1904	move.c	FUNCTION_45	WHILE_1
0x40018d2	            0x85db	                           test ebx, ebx	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018d4	     0xf8e3e020000	                           jle 0x4001b18	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018da	          0x4439eb	                           cmp ebx, r13d	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018dd	     0xf8d35020000	                           jge 0x4001b18	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018e3	    0x488b0d000000	            mov rcx, qword [0x040018ea] 	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018ea	          0x488b31	                    mov rsi, qword [rcx]	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018ed	      0x4839742430	            cmp qword [rsp + 0x30], rsi 	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018f2	            0x7c1f	                            jl 0x4001913	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018f4	    0x483982e80000	            cmp qword [rdx + 0xe8], rax 	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018fb	          0x4889d6	                            mov rsi, rdx	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40018fe	            0x7c13	                            jl 0x4001913	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001900	     0xf8ff5000000	                            jg 0x40019fb	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001906	          0x8b0424	                    mov eax, dword [rsp]	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001909	        0x3b442428	            cmp eax, dword [rsp + 0x28] 	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x400190d	     0xf8ee8000000	                           jle 0x40019fb	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001913	          0x4889ef	                            mov rdi, rbp	      1924	move.c	FUNCTION_45	WHILE_1	CALL_8
0x4001916	      0xe885e9ffff	                   call sym.topline_back	      1924	move.c	FUNCTION_45	WHILE_1	CALL_8
0x400191b	    0x488b15000000	            mov rdx, qword [0x04001922] 	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x4001922	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x4001926	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x400192d	          0x4101cf	                           add r15d, ecx	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x4001930	    0x81f9ffffff7f	                     cmp ecx, 0x7fffffff	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x4001936	        0x450f44fe	                        cmove r15d, r14d	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x400193a	          0x4139c7	                           cmp r15d, eax	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x400193d	     0xf8f75020000	                            jg 0x4001bb8	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x4001943	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001948	    0x488bb2e80000	            mov rsi, qword [rdx + 0xe8] 	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x400194f	          0x4839f0	                            cmp rax, rsi	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001952	            0x7c2c	                            jl 0x4001980	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001954	     0xf8fe6010000	                            jg 0x4001b40	      1933	move.c	FUNCTION_45	WHILE_1	IF_10
0x400195a	          0x8b3c24	                    mov edi, dword [rsp]	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x400195d	        0x3b7c2428	            cmp edi, dword [rsp + 0x28] 	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001961	            0x7c1d	                            jl 0x4001980	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001963	             0x1cb	                            add ebx, ecx	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001965	          0x4839f0	                            cmp rax, rsi	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4001968	            0x7516	                           jne 0x4001980	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400196a	        0x8b742438	            mov esi, dword [rsp + 0x38] 	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400196e	            0x85f6	                           test esi, esi	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4001970	            0x750e	                           jne 0x4001980	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4001972	    0x2b9af0000000	             sub ebx, dword [rdx + 0xf0]	      1945	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4001978	     0xf1f84000000	                   nop dword [rax + rax]	      1945	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4001980	    0x488b0d000000	            mov rcx, qword [0x04001987] 	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x4001987	          0x488b39	                    mov rdi, qword [rcx]	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x400198a	      0x48397c2430	            cmp qword [rsp + 0x30], rdi 	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x400198f	     0xf8d33ffffff	                           jge 0x40018c8	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x4001995	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1951	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x400199a	      0xe851e7ffff	                   call sym.botline_forw	      1951	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x400199f	    0x488b15000000	            mov rdx, qword [0x040019a6] 	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40019a6	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	      1952	move.c	FUNCTION_45	WHILE_1	IF_12
0x40019aa	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40019b1	          0x4101cf	                           add r15d, ecx	      1952	move.c	FUNCTION_45	WHILE_1	IF_12
0x40019b4	          0x4139c7	                           cmp r15d, eax	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40019b7	     0xf8ffb010000	                            jg 0x4001bb8	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40019bd	    0x8b0500000000	            mov eax, dword [0x040019c3] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019c3	          0x4963fc	                        movsxd rdi, r12d	      1955	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019c6	    0x488b35000000	            mov rsi, qword [0x040019cd] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019cd	            0x85c0	                           test eax, eax	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019cf	            0x7e06	                           jle 0x40019d7	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019d1	          0x83e801	                              sub eax, 1	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019d4	          0x4863f0	                         movsxd rsi, eax	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019d7	          0x4439eb	                           cmp ebx, r13d	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019da	     0xf8c70010000	                            jl 0x4001b50	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019e0	          0x4839fe	                            cmp rsi, rdi	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019e3	     0xf8f67010000	                            jg 0x4001b50	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019e9	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40019ee	        0x4883f801	                              cmp rax, 1	      1904	move.c	FUNCTION_45	WHILE_1
0x40019f2	     0xf8fdafeffff	                            jg 0x40018d2	      1904	move.c	FUNCTION_45	WHILE_1
0x40019f8	          0x4889d6	                            mov rsi, rdx	      1904	move.c	FUNCTION_45	WHILE_1
0x40019fb	          0x4531e4	                          xor r12d, r12d	      1984	move.c	FUNCTION_45	IF_17
0x40019fe	            0x85db	                           test ebx, ebx	      1983	move.c	FUNCTION_45	IF_17
0x4001a00	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	      1983	move.c	FUNCTION_45	IF_17
0x4001a07	            0x7e67	                           jle 0x4001a70	      1983	move.c	FUNCTION_45	IF_17
0x4001a09	          0x4139c7	                           cmp r15d, eax	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001a0c	     0xf8fb1010000	                            jg 0x4001bc3	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001a12	    0x8b8284000000	            mov eax, dword [rdx + 0x84] 	      1993	move.c	FUNCTION_45	ELSE_4
0x4001a18	          0x4531e4	                          xor r12d, r12d	      1991	move.c	FUNCTION_45	ELSE_4
0x4001a1b	            0x31ed	                            xor ebp, ebp	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a1d	        0x89442438	             mov dword [rsp + 0x38], eax	      1993	move.c	FUNCTION_45	ELSE_4
0x4001a21	        0x488b4278	            mov rax, qword [rdx + 0x78] 	      1995	move.c	FUNCTION_45	ELSE_4
0x4001a25	        0x4883e801	                              sub rax, 1	      1995	move.c	FUNCTION_45	ELSE_4
0x4001a29	      0x4889442430	             mov qword [rsp + 0x30], rax	      1995	move.c	FUNCTION_45	ELSE_4
0x4001a2e	            0xeb0c	                           jmp 0x4001a3c	      1995	move.c	FUNCTION_45	ELSE_4
0x4001a30	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1995	move.c	FUNCTION_45	ELSE_4
0x4001a35	    0x488b35000000	            mov rsi, qword [0x04001a3c] 	      1995	move.c	FUNCTION_45	ELSE_4
0x4001a3c	    0x483986e80000	            cmp qword [rsi + 0xe8], rax 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a43	     0xf8eb7010000	                           jle 0x4001c00	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a49	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      1998	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x4001a4e	        0x4983c401	                              add r12, 1	      2000	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a52	      0xe899e6ffff	                   call sym.botline_forw	      1998	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x4001a57	         0x36c243c	             add ebp, dword [rsp + 0x3c]	      1999	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a5b	            0x39eb	                            cmp ebx, ebp	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a5d	            0x7fd1	                            jg 0x4001a30	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a5f	    0x488b05000000	            mov rax, qword [0x04001a66] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a66	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a6d	           0xf1f00	                         nop dword [rax]	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4001a70	          0x4939c4	                            cmp r12, rax	      2010	move.c	FUNCTION_45	IF_20
0x4001a73	            0x7c09	                            jl 0x4001a7e	      2010	move.c	FUNCTION_45	IF_20
0x4001a75	          0x4d39ec	                            cmp r12, r13	      2010	move.c	FUNCTION_45	IF_20
0x4001a78	     0xf8f62010000	                            jg 0x4001be0	      2010	move.c	FUNCTION_45	IF_20
0x4001a7e	      0xbe01000000	                              mov esi, 1	      2013	move.c	FUNCTION_45	CALL_12
0x4001a83	          0x4c89e7	                            mov rdi, r12	      2013	move.c	FUNCTION_45	CALL_12
0x4001a86	      0xe800000000	                          call 0x4001a8b	      2013	move.c	FUNCTION_45	CALL_12
0x4001a8b	    0x488b05000000	            mov rax, qword [0x04001a92] 	      2020	move.c	FUNCTION_45	IF_21
0x4001a92	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2020	move.c	FUNCTION_45	IF_21
0x4001a97	        0x48395878	            cmp qword [rax + 0x78], rbx 	      2020	move.c	FUNCTION_45	IF_21
0x4001a9b	     0xf852f010000	                           jne 0x4001bd0	      2020	move.c	FUNCTION_45	IF_21
0x4001aa1	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      2020	move.c	FUNCTION_45	IF_21
0x4001aa5	            0x85d2	                           test edx, edx	      2020	move.c	FUNCTION_45	IF_21
0x4001aa7	     0xf8423010000	                            je 0x4001bd0	      2020	move.c	FUNCTION_45	IF_21
0x4001aad	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2022	move.c	FUNCTION_45	IF_21
0x4001ab2	    0x488998e80000	             mov qword [rax + 0xe8], rbx	      2022	move.c	FUNCTION_45	IF_21
0x4001ab9	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	      2023	move.c	FUNCTION_45	IF_21
0x4001abd	    0x8998f0000000	             mov dword [rax + 0xf0], ebx	      2023	move.c	FUNCTION_45	IF_21
0x4001ac3	        0x8b542404	                mov edx, dword [rsp + 4]	      2026	move.c	FUNCTION_45
0x4001ac7	          0x80ca80	                             or dl, 0x80	      2026	move.c	FUNCTION_45
0x4001aca	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2026	move.c	FUNCTION_45
0x4001ad0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2027	move.c	FUNCTION_45
0x4001ad5	    0x644833042528	                xor rax, qword fs:[0x28]	      2027	move.c	FUNCTION_45
0x4001ade	     0xf8575010000	                           jne 0x4001c59	      2027	move.c	FUNCTION_45
0x4001ae4	        0x4883c458	                           add rsp, 0x58	      2027	move.c	FUNCTION_45
0x4001ae8	              0x5b	                                 pop rbx	      2027	move.c	FUNCTION_45
0x4001ae9	              0x5d	                                 pop rbp	      2027	move.c	FUNCTION_45
0x4001aea	            0x415c	                                 pop r12	      2027	move.c	FUNCTION_45
0x4001aec	            0x415d	                                 pop r13	      2027	move.c	FUNCTION_45
0x4001aee	            0x415e	                                 pop r14	      2027	move.c	FUNCTION_45
0x4001af0	            0x415f	                                 pop r15	      2027	move.c	FUNCTION_45
0x4001af2	              0xc3	                                     ret	      2027	move.c	FUNCTION_45
0x4001af3	       0xf1f440000	                   nop dword [rax + rax]	      2027	move.c	FUNCTION_45
0x4001af8	      0xf644240420	               test byte [rsp + 4], 0x20	       590	move.c	FUNCTION_16	IF_1
0x4001afd	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	       590	move.c	FUNCTION_16	IF_1
0x4001b02	     0xf8533fdffff	                           jne 0x400183b	       590	move.c	FUNCTION_16	IF_1
0x4001b08	      0xe8c3eeffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x4001b0d	      0xe929fdffff	                           jmp 0x400183b	       591	move.c	FUNCTION_16	CALL_1
0x4001b12	    0x660f1f440000	                    nop word [rax + rax]	       591	move.c	FUNCTION_16	CALL_1
0x4001b18	    0x8b0d00000000	            mov ecx, dword [0x04001b1e] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b1e	          0x4963fc	                        movsxd rdi, r12d	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b21	    0x488b35000000	            mov rsi, qword [0x04001b28] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b28	            0x85c9	                           test ecx, ecx	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b2a	            0x7e06	                           jle 0x4001b32	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b2c	          0x83e901	                              sub ecx, 1	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b2f	          0x4863f1	                         movsxd rsi, ecx	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b32	          0x4839fe	                            cmp rsi, rdi	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b35	     0xf8eb9fdffff	                           jle 0x40018f4	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b3b	      0xe9a3fdffff	                           jmp 0x40018e3	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x4001b40	             0x1cb	                            add ebx, ecx	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001b42	      0xe939feffff	                           jmp 0x4001980	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001b47	    0x660f1f840000	                    nop word [rax + rax]	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x4001b50	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b55	    0x488bb2e80000	            mov rsi, qword [rdx + 0xe8] 	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b5c	          0x4101cc	                           add r12d, ecx	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4001b5f	          0x4839f0	                            cmp rax, rsi	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b62	            0x7d2c	                           jge 0x4001b90	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b64	        0x4883c001	                              add rax, 1	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b68	          0x4839c6	                            cmp rsi, rax	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b6b	     0xf8578feffff	                           jne 0x40019e9	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b71	    0x8b82f4000000	            mov eax, dword [rdx + 0xf4] 	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b77	        0x39442438	            cmp dword [rsp + 0x38], eax 	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b7b	     0xf8e68feffff	                           jle 0x40019e9	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b81	             0x1cb	                            add ebx, ecx	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b83	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b88	      0xe93bfdffff	                           jmp 0x40018c8	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b8d	           0xf1f00	                         nop dword [rax]	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b90	             0x1cb	                            add ebx, ecx	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4001b92	          0x4839f0	                            cmp rax, rsi	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4001b95	     0xf854efeffff	                           jne 0x40019e9	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4001b9b	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4001b9f	            0x85c9	                           test ecx, ecx	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4001ba1	     0xf8542feffff	                           jne 0x40019e9	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4001ba7	    0x2b9af0000000	             sub ebx, dword [rdx + 0xf0]	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4001bad	      0xe937feffff	                           jmp 0x40019e9	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4001bb2	    0x660f1f440000	                    nop word [rax + rax]	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4001bb8	          0x4531e4	                          xor r12d, r12d	      1984	move.c	FUNCTION_45	IF_17
0x4001bbb	            0x85db	                           test ebx, ebx	      1983	move.c	FUNCTION_45	IF_17
0x4001bbd	     0xf8eadfeffff	                           jle 0x4001a70	      1983	move.c	FUNCTION_45	IF_17
0x4001bc3	          0x4d63e7	                        movsxd r12, r15d	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001bc6	      0xe9a5feffff	                           jmp 0x4001a70	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001bcb	       0xf1f440000	                   nop dword [rax + rax]	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001bd0	    0x8b98b4000000	            mov ebx, dword [rax + 0xb4] 	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001bd6	        0x895c2404	                mov dword [rsp + 4], ebx	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001bda	      0xe9e4feffff	                           jmp 0x4001ac3	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001bdf	              0x90	                                     nop	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x4001be0	            0x31ff	                            xor edi, edi	      2011	move.c	FUNCTION_45	CALL_11
0x4001be2	      0xe800000000	                          call 0x4001be7	      2011	move.c	FUNCTION_45	CALL_11
0x4001be7	      0xe99ffeffff	                           jmp 0x4001a8b	      2011	move.c	FUNCTION_45	CALL_11
0x4001bec	    0x2b98f0000000	             sub ebx, dword [rax + 0xf0]	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4001bf2	      0xe96afcffff	                           jmp 0x4001861	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4001bf7	    0x660f1f840000	                    nop word [rax + rax]	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4001c00	    0x486386a00000	         movsxd rax, dword [rsi + 0xa0] 	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4001c07	    0x41bc0f270000	                        mov r12d, 0x270f	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4001c0d	      0xe95efeffff	                           jmp 0x4001a70	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4001c12	            0x89de	                            mov esi, ebx	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4001c14	      0xe8e7e5ffff	          call sym.set_empty_rows.part.9	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4001c19	    0x488b3d000000	            mov rdi, qword [0x04001c20] 	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4001c20	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4001c26	        0x488b5778	            mov rdx, qword [rdi + 0x78] 	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4001c2a	      0xe9eafbffff	                           jmp 0x4001819	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4001c2f	    0x443bb7840000	           cmp r14d, dword [rdi + 0x84] 	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x4001c36	     0xf85f3fbffff	                           jne 0x400182f	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x4001c3c	      0xe9fafbffff	                           jmp 0x400183b	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x4001c41	    0xc787f4000000	               mov dword [rdi + 0xf4], 0	      1783	move.c	FUNCTION_44
0x4001c4b	        0x8b442404	                mov eax, dword [rsp + 4]	      1828	move.c	FUNCTION_45
0x4001c4f	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      1828	move.c	FUNCTION_45
0x4001c54	      0xe9b6fbffff	                           jmp 0x400180f	      1828	move.c	FUNCTION_45
0x4001c59	      0xe800000000	                          call 0x4001c5e	      2027	move.c	FUNCTION_45
scrolldown	ELSE,4:CALL,13:DO,0:SWITCH,0:functions,0:IF,9:FOR,0:WHILE,2	191
0x40029d0	            0x4155	                                push r13	      1180	move.c	FUNCTION_33
0x40029d2	            0x4154	                                push r12	      1180	move.c	FUNCTION_33
0x40029d4	          0x4189f4	                           mov r12d, esi	      1180	move.c	FUNCTION_33
0x40029d7	              0x55	                                push rbp	      1180	move.c	FUNCTION_33
0x40029d8	              0x53	                                push rbx	      1180	move.c	FUNCTION_33
0x40029d9	          0x4889fb	                            mov rbx, rdi	      1180	move.c	FUNCTION_33
0x40029dc	            0x31d2	                            xor edx, edx	      1189	move.c	FUNCTION_33	CALL_1
0x40029de	        0x4883ec18	                           sub rsp, 0x18	      1180	move.c	FUNCTION_33
0x40029e2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1180	move.c	FUNCTION_33
0x40029eb	      0x4889442408	                mov qword [rsp + 8], rax	      1180	move.c	FUNCTION_33
0x40029f0	            0x31c0	                            xor eax, eax	      1180	move.c	FUNCTION_33
0x40029f2	    0x488b05000000	            mov rax, qword [0x040029f9] 	      1189	move.c	FUNCTION_33	CALL_1
0x40029f9	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1189	move.c	FUNCTION_33	CALL_1
0x40029fd	        0x488d7078	                   lea rsi, [rax + 0x78]	      1189	move.c	FUNCTION_33	CALL_1
0x4002a01	      0xe800000000	                          call 0x4002a06	      1189	move.c	FUNCTION_33	CALL_1
0x4002a06	      0xe800000000	                          call 0x4002a0b	      1191	move.c	FUNCTION_33	CALL_2
0x4002a0b	          0x4885db	                           test rbx, rbx	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a0e	     0xf8e52010000	                           jle 0x4002b66	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a14	    0x488b0d000000	            mov rcx, qword [0x04002a1b] 	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a1b	        0x488d6bff	                      lea rbp, [rbx - 1]	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a1f	            0x31db	                            xor ebx, ebx	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a21	    0x448ba9840000	           mov r13d, dword [rcx + 0x84] 	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a28	        0x488b7178	            mov rsi, qword [rcx + 0x78] 	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a2c	            0xeb53	                           jmp 0x4002a81	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a2e	            0x6690	                                     nop	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a30	    0x8b81a0000000	            mov eax, dword [rcx + 0xa0] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a36	    0x448ba9840000	           mov r13d, dword [rcx + 0x84] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a3d	          0x83e801	                              sub eax, 1	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a40	          0x4139c5	                           cmp r13d, eax	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a43	            0x7d50	                           jge 0x4002a95	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a45	    0x488b81e80000	            mov rax, qword [rcx + 0xe8] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a4c	        0x488b7178	            mov rsi, qword [rcx + 0x78] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a50	        0x4183c501	                             add r13d, 1	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a54	    0x4489a9840000	            mov dword [rcx + 0x84], r13d	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a5b	        0x4883c301	                              add rbx, 1	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a5f	          0x4889ea	                            mov rdx, rbp	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a62	        0x4883e801	                              sub rax, 1	      1224	move.c	FUNCTION_33	WHILE_1
0x4002a66	    0x83a1b4000000	      and dword [rcx + 0xb4], 0xffffff9f	       600	move.c	FUNCTION_17
0x4002a6d	          0x4885d2	                           test rdx, rdx	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a70	    0x488981e80000	             mov qword [rcx + 0xe8], rax	      1224	move.c	FUNCTION_33	WHILE_1
0x4002a77	        0x488d6aff	                      lea rbp, [rdx - 1]	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a7b	     0xf8eff000000	                           jle 0x4002b80	      1192	move.c	FUNCTION_33	WHILE_1
0x4002a81	          0x4889cf	                            mov rdi, rcx	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4002a84	      0xe800000000	                          call 0x4002a89	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4002a89	          0x4439e8	                           cmp eax, r13d	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4002a8c	    0x488b0d000000	            mov rcx, qword [0x04002a93] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4002a93	            0x7f9b	                            jg 0x4002a30	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4002a95	        0x488b7178	            mov rsi, qword [rcx + 0x78] 	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002a99	        0x4883fe01	                              cmp rsi, 1	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002a9d	     0xf840d020000	                            je 0x4002cb0	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4002aa3	        0x488d7eff	                      lea rdi, [rsi - 1]	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4002aa7	            0x31d2	                            xor edx, edx	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002aa9	    0xc78184000000	               mov dword [rcx + 0x84], 0	      1208	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4002ab3	          0x4889e6	                            mov rsi, rsp	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002ab6	        0x48897978	             mov qword [rcx + 0x78], rdi	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4002aba	      0xe800000000	                          call 0x4002abf	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002abf	            0x85c0	                           test eax, eax	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002ac1	            0x746d	                            je 0x4002b30	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4002ac3	        0x4883c301	                              add rbx, 1	      1214	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002ac7	          0x4585e4	                         test r12d, r12d	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002aca	            0x743c	                            je 0x4002b08	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002acc	    0x488b0d000000	            mov rcx, qword [0x04002ad3] 	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002ad3	        0x488b3424	                    mov rsi, qword [rsp]	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002ad7	          0x4889ea	                            mov rdx, rbp	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002ada	        0x488b4178	            mov rax, qword [rcx + 0x78] 	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002ade	          0x4829f0	                            sub rax, rsi	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002ae1	    0x488bb9e80000	            mov rdi, qword [rcx + 0xe8] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002ae8	        0x48897178	             mov qword [rcx + 0x78], rsi	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002aec	    0x448ba9840000	           mov r13d, dword [rcx + 0x84] 	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002af3	          0x4829c7	                            sub rdi, rax	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002af6	          0x4889f8	                            mov rax, rdi	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002af9	    0x4889b9e80000	             mov qword [rcx + 0xe8], rdi	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002b00	      0xe95dffffff	                           jmp 0x4002a62	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002b05	           0xf1f00	                         nop dword [rax]	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4002b08	    0x488b0d000000	            mov rcx, qword [0x04002b0f] 	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b0f	        0x488b3424	                    mov rsi, qword [rsp]	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b13	        0x488b4178	            mov rax, qword [rcx + 0x78] 	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b17	          0x4829f0	                            sub rax, rsi	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b1a	        0x488d50ff	                      lea rdx, [rax - 1]	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b1e	          0x4829d5	                            sub rbp, rdx	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b21	          0x4889ea	                            mov rdx, rbp	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b24	            0xebbb	                           jmp 0x4002ae1	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4002b30	    0x488b05000000	            mov rax, qword [0x04002b37] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b37	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b3b	      0xe800000000	                          call 0x4002b40	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b40	    0x488b0d000000	            mov rcx, qword [0x04002b47] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b47	            0x4898	                                    cdqe	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b49	          0x4889ea	                            mov rdx, rbp	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b4c	          0x4801c3	                            add rbx, rax	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b4f	    0x448ba9840000	           mov r13d, dword [rcx + 0x84] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b56	    0x488b81e80000	            mov rax, qword [rcx + 0xe8] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b5d	        0x488b7178	            mov rsi, qword [rcx + 0x78] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b61	      0xe9fcfeffff	                           jmp 0x4002a62	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b66	    0x488b0d000000	            mov rcx, qword [0x04002b6d] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4002b6d	            0x31db	                            xor ebx, ebx	      1192	move.c	FUNCTION_33	WHILE_1
0x4002b6f	        0x488b7178	            mov rsi, qword [rcx + 0x78] 	      1192	move.c	FUNCTION_33	WHILE_1
0x4002b73	    0x448ba9840000	           mov r13d, dword [rcx + 0x84] 	      1192	move.c	FUNCTION_33	WHILE_1
0x4002b7a	    0x660f1f440000	                    nop word [rax + rax]	      1192	move.c	FUNCTION_33	WHILE_1
0x4002b80	    0x8b81dc000000	            mov eax, dword [rcx + 0xdc] 	      1227	move.c	FUNCTION_33
0x4002b86	     0x199d4000000	             add dword [rcx + 0xd4], ebx	      1228	move.c	FUNCTION_33
0x4002b8c	             0x1d8	                            add eax, ebx	      1227	move.c	FUNCTION_33
0x4002b8e	        0x48397138	            cmp qword [rcx + 0x38], rsi 	      1231	move.c	FUNCTION_33	IF_5
0x4002b92	    0x8981dc000000	             mov dword [rcx + 0xdc], eax	      1227	move.c	FUNCTION_33
0x4002b98	     0xf8422010000	                            je 0x4002cc0	      1231	move.c	FUNCTION_33	IF_5
0x4002b9e	          0x4585ed	                         test r13d, r13d	      1368	move.c	FUNCTION_35	IF_1
0x4002ba1	            0x89c3	                            mov ebx, eax	      1368	move.c	FUNCTION_35	IF_1
0x4002ba3	            0x7e1a	                           jle 0x4002bbf	      1368	move.c	FUNCTION_35	IF_1
0x4002ba5	          0x4889cf	                            mov rdi, rcx	      1368	move.c	FUNCTION_35	IF_1
0x4002ba8	      0xbe01000000	                              mov esi, 1	      1368	move.c	FUNCTION_35	IF_1
0x4002bad	      0xe8ded5ffff	           call sym.check_topfill.part.8	      1368	move.c	FUNCTION_35	IF_1
0x4002bb2	    0x488b0d000000	            mov rcx, qword [0x04002bb9] 	      1368	move.c	FUNCTION_35	IF_1
0x4002bb9	    0x8b99dc000000	            mov ebx, dword [rcx + 0xdc] 	      1368	move.c	FUNCTION_35	IF_1
0x4002bbf	    0x8b9194020000	           mov edx, dword [rcx + 0x294] 	      1241	move.c	FUNCTION_33	IF_6
0x4002bc5	            0x85d2	                           test edx, edx	      1241	move.c	FUNCTION_33	IF_6
0x4002bc7	            0x740e	                            je 0x4002bd7	      1241	move.c	FUNCTION_33	IF_6
0x4002bc9	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	      1241	move.c	FUNCTION_33	IF_6
0x4002bcf	            0x85c0	                           test eax, eax	      1241	move.c	FUNCTION_33	IF_6
0x4002bd1	     0xf85f9000000	                           jne 0x4002cd0	      1241	move.c	FUNCTION_33	IF_6
0x4002bd7	    0x3b99a0000000	            cmp ebx, dword [rcx + 0xa0] 	      1248	move.c	FUNCTION_33	WHILE_2
0x4002bdd	     0xf8ca1000000	                            jl 0x4002c84	      1248	move.c	FUNCTION_33	WHILE_2
0x4002be3	        0x488b7938	            mov rdi, qword [rcx + 0x38] 	      1248	move.c	FUNCTION_33	WHILE_2
0x4002be7	        0x4883ff01	                              cmp rdi, 1	      1248	move.c	FUNCTION_33	WHILE_2
0x4002beb	            0x7f44	                            jg 0x4002c31	      1248	move.c	FUNCTION_33	WHILE_2
0x4002bed	      0xe992000000	                           jmp 0x4002c84	      1248	move.c	FUNCTION_33	WHILE_2
0x4002bf2	    0x660f1f440000	                    nop word [rax + rax]	      1248	move.c	FUNCTION_33	WHILE_2
0x4002bf8	        0x488b1424	                    mov rdx, qword [rsp]	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002bfc	          0x83eb01	                              sub ebx, 1	      1253	move.c	FUNCTION_33	WHILE_2	IF_7
0x4002bff	    0x488b05000000	            mov rax, qword [0x04002c06] 	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002c06	        0x4883fa01	                              cmp rdx, 1	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002c0a	     0xf8490000000	                            je 0x4002ca0	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002c10	        0x4883ea01	                              sub rdx, 1	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002c14	        0x48895038	             mov qword [rax + 0x38], rdx	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x4002c18	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffe0	      1262	move.c	FUNCTION_33	WHILE_2
0x4002c1f	    0x3b98a0000000	            cmp ebx, dword [rax + 0xa0] 	      1248	move.c	FUNCTION_33	WHILE_2
0x4002c25	            0x7c49	                            jl 0x4002c70	      1248	move.c	FUNCTION_33	WHILE_2
0x4002c27	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1248	move.c	FUNCTION_33	WHILE_2
0x4002c2b	        0x4883ff01	                              cmp rdi, 1	      1248	move.c	FUNCTION_33	WHILE_2
0x4002c2f	            0x7e3f	                           jle 0x4002c70	      1248	move.c	FUNCTION_33	WHILE_2
0x4002c31	            0x31d2	                            xor edx, edx	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002c33	          0x4889e6	                            mov rsi, rsp	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002c36	      0xe800000000	                          call 0x4002c3b	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002c3b	            0x85c0	                           test eax, eax	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002c3d	            0x75b9	                           jne 0x4002bf8	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x4002c3f	    0x488b05000000	            mov rax, qword [0x04002c46] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002c46	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002c4a	        0x488d57ff	                      lea rdx, [rdi - 1]	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002c4e	        0x48895038	             mov qword [rax + 0x38], rdx	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002c52	      0xe800000000	                          call 0x4002c57	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002c57	            0x29c3	                            sub ebx, eax	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002c59	    0x488b05000000	            mov rax, qword [0x04002c60] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x4002c60	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffe0	      1262	move.c	FUNCTION_33	WHILE_2
0x4002c67	    0x3b98a0000000	            cmp ebx, dword [rax + 0xa0] 	      1248	move.c	FUNCTION_33	WHILE_2
0x4002c6d	            0x7db8	                           jge 0x4002c27	      1248	move.c	FUNCTION_33	WHILE_2
0x4002c6f	              0x90	                                     nop	      1248	move.c	FUNCTION_33	WHILE_2
0x4002c70	      0xe800000000	                          call 0x4002c75	      1270	move.c	FUNCTION_33	IF_9	CALL_12
0x4002c75	    0x488b05000000	            mov rax, qword [0x04002c7c] 	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x4002c7c	          0x8b7848	            mov edi, dword [rax + 0x48] 	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x4002c7f	      0xe800000000	                          call 0x4002c84	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x4002c84	      0x488b442408	                mov rax, qword [rsp + 8]	      1274	move.c	FUNCTION_33
0x4002c89	    0x644833042528	                xor rax, qword fs:[0x28]	      1274	move.c	FUNCTION_33
0x4002c92	            0x756f	                           jne 0x4002d03	      1274	move.c	FUNCTION_33
0x4002c94	        0x4883c418	                           add rsp, 0x18	      1274	move.c	FUNCTION_33
0x4002c98	              0x5b	                                 pop rbx	      1274	move.c	FUNCTION_33
0x4002c99	              0x5d	                                 pop rbp	      1274	move.c	FUNCTION_33
0x4002c9a	            0x415c	                                 pop r12	      1274	move.c	FUNCTION_33
0x4002c9c	            0x415d	                                 pop r13	      1274	move.c	FUNCTION_33
0x4002c9e	              0xc3	                                     ret	      1274	move.c	FUNCTION_33
0x4002c9f	              0x90	                                     nop	      1274	move.c	FUNCTION_33
0x4002ca0	    0x48c740380100	               mov qword [rax + 0x38], 1	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002ca8	      0xe96bffffff	                           jmp 0x4002c18	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002cad	           0xf1f00	                         nop dword [rax]	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002cb0	    0x448ba9840000	           mov r13d, dword [rcx + 0x84] 	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002cb7	      0xe9c4feffff	                           jmp 0x4002b80	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002cbc	         0xf1f4000	                         nop dword [rax]	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4002cc0	    0xc781d4000000	               mov dword [rcx + 0xd4], 0	      1232	move.c	FUNCTION_33	IF_5
0x4002cca	      0xe9cffeffff	                           jmp 0x4002b9e	      1232	move.c	FUNCTION_33	IF_5
0x4002ccf	              0x90	                                     nop	      1232	move.c	FUNCTION_33	IF_5
0x4002cd0	          0x4889cf	                            mov rdi, rcx	       788	move.c	FUNCTION_24	CALL_1
0x4002cd3	      0xe800000000	                          call 0x4002cd8	       788	move.c	FUNCTION_24	CALL_1
0x4002cd8	      0xe873dcffff	               call sym.validate_cheight	      1244	move.c	FUNCTION_33	IF_6	CALL_9
0x4002cdd	    0x488b0d000000	            mov rcx, qword [0x04002ce4] 	      1245	move.c	FUNCTION_33	IF_6
0x4002ce4	    0x8b81cc000000	            mov eax, dword [rcx + 0xcc] 	      1245	move.c	FUNCTION_33	IF_6
0x4002cea	          0x8d70ff	                      lea esi, [rax - 1]	      1245	move.c	FUNCTION_33	IF_6
0x4002ced	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      1245	move.c	FUNCTION_33	IF_6
0x4002cf3	              0x99	                                     cdq	      1245	move.c	FUNCTION_33	IF_6
0x4002cf4	    0xf7b9ac000000	                 idiv dword [rcx + 0xac]	      1245	move.c	FUNCTION_33	IF_6
0x4002cfa	            0x29c6	                            sub esi, eax	      1245	move.c	FUNCTION_33	IF_6
0x4002cfc	             0x1f3	                            add ebx, esi	      1245	move.c	FUNCTION_33	IF_6
0x4002cfe	      0xe9d4feffff	                           jmp 0x4002bd7	      1245	move.c	FUNCTION_33	IF_6
0x4002d03	      0xe800000000	                          call 0x4002d08	      1274	move.c	FUNCTION_33
scroll_cursor_top	ELSE,4:CALL,10:DO,0:SWITCH,0:functions,0:IF,15:FOR,0:WHILE,1	198
0x40013c0	            0x4157	                                push r15	      1643	move.c	FUNCTION_43
0x40013c2	            0x4156	                                push r14	      1643	move.c	FUNCTION_43
0x40013c4	          0x4189ff	                           mov r15d, edi	      1643	move.c	FUNCTION_43
0x40013c7	            0x4155	                                push r13	      1643	move.c	FUNCTION_43
0x40013c9	            0x4154	                                push r12	      1643	move.c	FUNCTION_43
0x40013cb	              0x55	                                push rbp	      1643	move.c	FUNCTION_43
0x40013cc	              0x53	                                push rbx	      1643	move.c	FUNCTION_43
0x40013cd	        0x4883ec48	                           sub rsp, 0x48	      1643	move.c	FUNCTION_43
0x40013d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1643	move.c	FUNCTION_43
0x40013da	      0x4889442438	             mov qword [rsp + 0x38], rax	      1643	move.c	FUNCTION_43
0x40013df	            0x31c0	                            xor eax, eax	      1643	move.c	FUNCTION_43
0x40013e1	    0x488b05000000	            mov rax, qword [0x040013e8] 	      1650	move.c	FUNCTION_43
0x40013e8	        0x89742418	             mov dword [rsp + 0x18], esi	      1643	move.c	FUNCTION_43
0x40013ec	        0x488b5878	            mov rbx, qword [rax + 0x78] 	      1650	move.c	FUNCTION_43
0x40013f0	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1652	move.c	FUNCTION_43
0x40013f6	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1652	move.c	FUNCTION_43
0x40013fa	    0x8b0500000000	            mov eax, dword [0x04001400] 	      1658	move.c	FUNCTION_43	IF_1
0x4001400	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1650	move.c	FUNCTION_43
0x4001405	      0xbb00000000	                              mov ebx, 0	      1644	move.c	FUNCTION_43
0x400140a	            0x85c0	                           test eax, eax	      1655	move.c	FUNCTION_43
0x400140c	        0x448d70ff	                     lea r14d, [rax - 1]	      1655	move.c	FUNCTION_43
0x4001410	    0x440f4e350000	         cmovle r14d, dword [0x04001418]	      1655	move.c	FUNCTION_43
0x4001418	      0xe833f5ffff	               call sym.validate_cheight	      1669	move.c	FUNCTION_43	CALL_1
0x400141d	    0x488b05000000	            mov rax, qword [0x04001424] 	      1670	move.c	FUNCTION_43
0x4001424	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001429	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x400142e	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1671	move.c	FUNCTION_43	IF_2
0x4001432	        0x483b7878	            cmp rdi, qword [rax + 0x78] 	      1644	move.c	FUNCTION_43
0x4001436	    0x8ba8cc000000	            mov ebp, dword [rax + 0xcc] 	      1670	move.c	FUNCTION_43
0x400143c	           0xf4cdd	                          cmovl ebx, ebp	      1644	move.c	FUNCTION_43
0x400143f	      0xe800000000	                          call 0x4001444	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001444	            0x85c0	                           test eax, eax	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001446	     0xf843c020000	                            je 0x4001688	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x400144c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1677	move.c	FUNCTION_43	IF_3
0x4001451	    0x488b3d000000	            mov rdi, qword [0x04001458] 	      1677	move.c	FUNCTION_43	IF_3
0x4001458	    0x488344243001	               add qword [rsp + 0x30], 1	      1678	move.c	FUNCTION_43	IF_3
0x400145e	        0x4c8d68ff	                      lea r13, [rax - 1]	      1677	move.c	FUNCTION_43	IF_3
0x4001462	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1677	move.c	FUNCTION_43	IF_3
0x4001466	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      1677	move.c	FUNCTION_43	IF_3
0x400146b	      0xe800000000	                          call 0x4001470	      1692	move.c	FUNCTION_43	CALL_3
0x4001470	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1699	move.c	FUNCTION_43	WHILE_1
0x4001475	        0x4983c501	                              add r13, 1	      1686	move.c	FUNCTION_43
0x4001479	          0x4189c4	                           mov r12d, eax	      1692	move.c	FUNCTION_43	CALL_3
0x400147c	          0x4885ff	                           test rdi, rdi	      1699	move.c	FUNCTION_43	WHILE_1
0x400147f	            0x7f77	                            jg 0x40014f8	      1699	move.c	FUNCTION_43	WHILE_1
0x4001481	      0xe964020000	                           jmp 0x40016ea	      1699	move.c	FUNCTION_43	WHILE_1
0x4001486	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1699	move.c	FUNCTION_43	WHILE_1
0x4001490	        0x468d0421	                    lea r8d, [rcx + r12]	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001494	             0x1cd	                            add ebp, ecx	      1708	move.c	FUNCTION_43	WHILE_1
0x4001496	          0x4539c6	                           cmp r14d, r8d	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001499	            0x7c15	                            jl 0x40014b0	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x400149b	    0x488b05000000	            mov rax, qword [0x040014a2] 	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40014a2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40014a7	          0x483938	                    cmp qword [rax], rdi	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40014aa	     0xf8f40010000	                            jg 0x40015f0	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40014b0	    0x488b15000000	            mov rdx, qword [0x040014b7] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40014b7	    0x3baaa0000000	            cmp ebp, dword [rdx + 0xa0] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40014bd	     0xf8f6d010000	                            jg 0x4001630	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40014c3	        0x488b7278	            mov rsi, qword [rdx + 0x78] 	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x40014c7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x40014cc	             0x1d9	                            add ecx, ebx	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x40014ce	          0x4839c6	                            cmp rsi, rax	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x40014d1	           0xf4fd9	                          cmovg ebx, ecx	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x40014d4	          0x4439fb	                           cmp ebx, r15d	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x40014d7	            0x7f47	                            jg 0x4001520	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x40014d9	          0x4c39ee	                            cmp rsi, r13	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x40014dc	            0x7e42	                           jle 0x4001520	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x40014de	        0x488d78ff	                      lea rdi, [rax - 1]	      1733	move.c	FUNCTION_43	WHILE_1
0x40014e2	    0x488344243001	               add qword [rsp + 0x30], 1	      1734	move.c	FUNCTION_43	WHILE_1
0x40014e8	          0x4885ff	                           test rdi, rdi	      1699	move.c	FUNCTION_43	WHILE_1
0x40014eb	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      1733	move.c	FUNCTION_43	WHILE_1
0x40014f0	            0x7e39	                           jle 0x400152b	      1699	move.c	FUNCTION_43	WHILE_1
0x40014f2	          0x4989c5	                            mov r13, rax	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x40014f5	          0x4589c4	                           mov r12d, r8d	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x40014f8	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x40014fd	            0x31d2	                            xor edx, edx	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x40014ff	      0xe800000000	                          call 0x4001504	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001504	            0x85c0	                           test eax, eax	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001506	      0xb901000000	                              mov ecx, 1	      1704	move.c	FUNCTION_43	WHILE_1	IF_4
0x400150b	            0x7583	                           jne 0x4001490	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x400150d	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001512	      0xe800000000	                          call 0x4001517	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001517	            0x89c1	                            mov ecx, eax	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001519	      0xe972ffffff	                           jmp 0x4001490	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x400151e	            0x6690	                                     nop	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001520	          0x4539e6	                          cmp r14d, r12d	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001523	            0x7fb9	                            jg 0x40014de	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001525	          0x4c89e8	                            mov rax, r13	      1686	move.c	FUNCTION_43
0x4001528	          0x4589e0	                           mov r8d, r12d	      1692	move.c	FUNCTION_43	CALL_3
0x400152b	          0x4839c6	                            cmp rsi, rax	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x400152e	     0xf8f0c010000	                            jg 0x4001640	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001534	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001538	            0x85c9	                           test ecx, ecx	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x400153a	     0xf8500010000	                           jne 0x4001640	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001540	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001544	          0x4839c6	                            cmp rsi, rax	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001547	     0xf8f63010000	                            jg 0x40016b0	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x400154d	           0xf1f00	                         nop dword [rax]	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001550	          0x4889d7	                            mov rdi, rdx	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001553	        0x48891424	                    mov qword [rsp], rdx	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001557	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x400155c	      0xe800000000	                          call 0x4001561	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001561	        0x488b1424	                    mov rdx, qword [rsp]	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001565	    0x488b3d000000	            mov rdi, qword [0x0400156c] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x400156c	    0x898284000000	             mov dword [rdx + 0x84], eax	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001572	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001578	            0x85c0	                           test eax, eax	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x400157a	            0x7e1c	                           jle 0x4001598	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x400157c	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001581	          0x4539c6	                           cmp r14d, r8d	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001584	            0x7d12	                           jge 0x4001598	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001586	          0x4529f0	                           sub r8d, r14d	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001589	          0x4429c0	                            sub eax, r8d	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x400158c	     0xf8849010000	                            js 0x40016db	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4001592	    0x898784000000	             mov dword [rdi + 0x84], eax	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001598	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x400159a	            0x7e0e	                           jle 0x40015aa	      1368	move.c	FUNCTION_35	IF_1
0x400159c	            0x31f6	                            xor esi, esi	      1368	move.c	FUNCTION_35	IF_1
0x400159e	      0xe8edebffff	           call sym.check_topfill.part.8	      1368	move.c	FUNCTION_35	IF_1
0x40015a3	    0x488b3d000000	            mov rdi, qword [0x040015aa] 	      1368	move.c	FUNCTION_35	IF_1
0x40015aa	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x40015af	        0x483b4778	            cmp rax, qword [rdi + 0x78] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x40015b3	     0xf8407010000	                            je 0x40016c0	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x40015b9	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x40015bf	          0x83e08e	                     and eax, 0xffffff8e	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x40015c2	             0xc80	                             or al, 0x80	      1771	move.c	FUNCTION_43	ELSE_4
0x40015c4	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      1771	move.c	FUNCTION_43	ELSE_4
0x40015ca	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1773	move.c	FUNCTION_43
0x40015cf	    0x644833042528	                xor rax, qword fs:[0x28]	      1773	move.c	FUNCTION_43
0x40015d8	     0xf8528010000	                           jne 0x4001706	      1773	move.c	FUNCTION_43
0x40015de	        0x4883c448	                           add rsp, 0x48	      1773	move.c	FUNCTION_43
0x40015e2	              0x5b	                                 pop rbx	      1773	move.c	FUNCTION_43
0x40015e3	              0x5d	                                 pop rbp	      1773	move.c	FUNCTION_43
0x40015e4	            0x415c	                                 pop r12	      1773	move.c	FUNCTION_43
0x40015e6	            0x415d	                                 pop r13	      1773	move.c	FUNCTION_43
0x40015e8	            0x415e	                                 pop r14	      1773	move.c	FUNCTION_43
0x40015ea	            0x415f	                                 pop r15	      1773	move.c	FUNCTION_43
0x40015ec	              0xc3	                                     ret	      1773	move.c	FUNCTION_43
0x40015ed	           0xf1f00	                         nop dword [rax]	      1773	move.c	FUNCTION_43
0x40015f0	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40015f5	            0x31f6	                            xor esi, esi	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40015f7	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40015fc	          0x890c24	                    mov dword [rsp], ecx	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40015ff	      0xe800000000	                          call 0x4001604	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4001604	            0x85c0	                           test eax, eax	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4001606	          0x8b0c24	                    mov ecx, dword [rsp]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4001609	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x400160e	            0x7450	                            je 0x4001660	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4001610	    0x488b15000000	            mov rdx, qword [0x04001617] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001617	          0x83c501	                              add ebp, 1	      1714	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6
0x400161a	    0x3baaa0000000	            cmp ebp, dword [rdx + 0xa0] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001620	     0xf8e9dfeffff	                           jle 0x40014c3	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001626	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001630	            0x31ff	                            xor edi, edi	      1743	move.c	FUNCTION_43	CALL_8
0x4001632	      0xe800000000	                          call 0x4001637	      1743	move.c	FUNCTION_43	CALL_8
0x4001637	            0xeb91	                           jmp 0x40015ca	      1743	move.c	FUNCTION_43	CALL_8
0x4001639	     0xf1f80000000	                         nop dword [rax]	      1743	move.c	FUNCTION_43	CALL_8
0x4001640	          0x4889c6	                            mov rsi, rax	      1751	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001643	        0x48894278	             mov qword [rdx + 0x78], rax	      1751	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001647	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x400164b	          0x4839c6	                            cmp rsi, rax	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x400164e	     0xf8efcfeffff	                           jle 0x4001550	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001654	            0xeb5a	                           jmp 0x40016b0	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001656	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001660	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4001665	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x400166a	          0x890c24	                    mov dword [rsp], ecx	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x400166d	      0xe800000000	                          call 0x4001672	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4001672	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4001677	             0x1c5	                            add ebp, eax	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4001679	          0x8b0c24	                    mov ecx, dword [rsp]	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x400167c	      0xe92ffeffff	                           jmp 0x40014b0	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4001681	     0xf1f80000000	                         nop dword [rax]	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4001688	    0x488b3d000000	            mov rdi, qword [0x0400168f] 	      1683	move.c	FUNCTION_43	ELSE_1
0x400168f	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1683	move.c	FUNCTION_43	ELSE_1
0x4001693	        0x4c8d6eff	                      lea r13, [rsi - 1]	      1683	move.c	FUNCTION_43	ELSE_1
0x4001697	        0x488d4601	                      lea rax, [rsi + 1]	      1684	move.c	FUNCTION_43	ELSE_1
0x400169b	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      1683	move.c	FUNCTION_43	ELSE_1
0x40016a0	      0x4889442430	             mov qword [rsp + 0x30], rax	      1684	move.c	FUNCTION_43	ELSE_1
0x40016a5	      0xe9c1fdffff	                           jmp 0x400146b	      1684	move.c	FUNCTION_43	ELSE_1
0x40016aa	    0x660f1f440000	                    nop word [rax + rax]	      1684	move.c	FUNCTION_43	ELSE_1
0x40016b0	        0x48894278	             mov qword [rdx + 0x78], rax	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40016b4	          0x4889c6	                            mov rsi, rax	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40016b7	      0xe994feffff	                           jmp 0x4001550	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40016bc	         0xf1f4000	                         nop dword [rax]	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x40016c0	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x40016c4	    0x3b8784000000	            cmp eax, dword [rdi + 0x84] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x40016ca	     0xf85e9feffff	                           jne 0x40015b9	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x40016d0	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x40016d6	      0xe9e7feffff	                           jmp 0x40015c2	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x40016db	    0xc78784000000	               mov dword [rdi + 0x84], 0	      1760	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x40016e5	      0xe9c0feffff	                           jmp 0x40015aa	      1760	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x40016ea	    0x488b15000000	            mov rdx, qword [0x040016f1] 	      1742	move.c	FUNCTION_43	IF_10
0x40016f1	    0x3baaa0000000	            cmp ebp, dword [rdx + 0xa0] 	      1742	move.c	FUNCTION_43	IF_10
0x40016f7	     0xf8f33ffffff	                            jg 0x4001630	      1742	move.c	FUNCTION_43	IF_10
0x40016fd	        0x488b7278	            mov rsi, qword [rdx + 0x78] 	      1742	move.c	FUNCTION_43	IF_10
0x4001701	      0xe91ffeffff	                           jmp 0x4001525	      1742	move.c	FUNCTION_43	IF_10
0x4001706	      0xe800000000	                          call 0x400170b	      1773	move.c	FUNCTION_43
comp_botline	ELSE,3:CALL,6:DO,0:SWITCH,0:functions,0:IF,5:FOR,1:WHILE,0	112
0x40009d0	            0x4155	                                push r13	        52	move.c	FUNCTION_1
0x40009d2	            0x4154	                                push r12	        52	move.c	FUNCTION_1
0x40009d4	              0x55	                                push rbp	        52	move.c	FUNCTION_1
0x40009d5	              0x53	                                push rbx	        52	move.c	FUNCTION_1
0x40009d6	          0x4889fd	                            mov rbp, rdi	        52	move.c	FUNCTION_1
0x40009d9	        0x4883ec18	                           sub rsp, 0x18	        52	move.c	FUNCTION_1
0x40009dd	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	move.c	FUNCTION_1
0x40009e6	      0x4889442408	                mov qword [rsp + 8], rax	        52	move.c	FUNCTION_1
0x40009eb	            0x31c0	                            xor eax, eax	        52	move.c	FUNCTION_1
0x40009ed	      0xe800000000	                          call 0x40009f2	        65	move.c	FUNCTION_1	CALL_1
0x40009f2	    0x8b97b4000000	            mov edx, dword [rdi + 0xb4] 	        66	move.c	FUNCTION_1	IF_1
0x40009f8	          0xf6c210	                           test dl, 0x10	        66	move.c	FUNCTION_1	IF_1
0x40009fb	     0xf8457010000	                            je 0x4000b58	        66	move.c	FUNCTION_1	IF_1
0x4000a01	        0x488b4708	                mov rax, qword [rdi + 8]	        77	move.c	FUNCTION_1	FOR_1
0x4000a05	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	        68	move.c	FUNCTION_1	IF_1
0x4000a09	    0x448ba7d40000	           mov r12d, dword [rdi + 0xd4] 	        69	move.c	FUNCTION_1	IF_1
0x4000a10	          0x483b18	                    cmp rbx, qword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x4000a13	     0xf8eae000000	                           jle 0x4000ac7	        77	move.c	FUNCTION_1	FOR_1
0x4000a19	     0xf1f80000000	                         nop dword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x4000a20	          0x83ca60	                            or edx, 0x60	       121	move.c	FUNCTION_1
0x4000a23	          0x4585e4	                         test r12d, r12d	      1785	move.c	FUNCTION_44	IF_1
0x4000a26	    0x48899de80000	            mov qword [rbp + 0xe8], rbx 	       120	move.c	FUNCTION_1
0x4000a2d	    0x8995b4000000	            mov dword [rbp + 0xb4], edx 	       121	move.c	FUNCTION_1
0x4000a33	    0xc785f4000000	               mov dword [rbp + 0xf4], 0	      1783	move.c	FUNCTION_44
0x4000a3d	     0xf853d010000	                           jne 0x4000b80	      1785	move.c	FUNCTION_44	IF_1
0x4000a43	    0xc785f0000000	               mov dword [rbp + 0xf0], 0	      1786	move.c	FUNCTION_44	IF_1
0x4000a4d	      0x488b442408	                mov rax, qword [rsp + 8]	       124	move.c	FUNCTION_1
0x4000a52	    0x644833042528	                xor rax, qword fs:[0x28]	       124	move.c	FUNCTION_1
0x4000a5b	     0xf854e010000	                           jne 0x4000baf	       124	move.c	FUNCTION_1
0x4000a61	        0x4883c418	                           add rsp, 0x18	       124	move.c	FUNCTION_1
0x4000a65	              0x5b	                                 pop rbx	       124	move.c	FUNCTION_1
0x4000a66	              0x5d	                                 pop rbp	       124	move.c	FUNCTION_1
0x4000a67	            0x415c	                                 pop r12	       124	move.c	FUNCTION_1
0x4000a69	            0x415d	                                 pop r13	       124	move.c	FUNCTION_1
0x4000a6b	              0xc3	                                     ret	       124	move.c	FUNCTION_1
0x4000a6c	         0xf1f4000	                         nop dword [rax]	       124	move.c	FUNCTION_1
0x4000a70	        0x48395d78	            cmp qword [rbp + 0x78], rbx 	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000a74	      0xba01000000	                              mov edx, 1	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000a79	          0x4889de	                            mov rsi, rbx	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000a7c	          0x4889ef	                            mov rdi, rbp	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000a7f	     0xf84bb000000	                            je 0x4000b40	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000a85	      0xe800000000	                          call 0x4000a8a	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000a8a	            0x31c9	                            xor ecx, ecx	        81	move.c	FUNCTION_1	FOR_1
0x4000a8c	          0x4189c5	                           mov r13d, eax	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000a8f	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000a93	          0x4839da	                            cmp rdx, rbx	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x4000a96	            0x7c06	                            jl 0x4000a9e	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x4000a98	        0x483b1424	                    cmp rdx, qword [rsp]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000a9c	            0x7e5a	                           jle 0x4000af8	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000a9e	      0x438d442500	                    lea eax, [r13 + r12]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000aa3	    0x3b85a0000000	            cmp eax, dword [rbp + 0xa0] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000aa9	     0xf8f81000000	                            jg 0x4000b30	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000aaf	        0x488b3424	                    mov rsi, qword [rsp]	        77	move.c	FUNCTION_1	FOR_1
0x4000ab3	        0x488b5508	                mov rdx, qword [rbp + 8]	        77	move.c	FUNCTION_1	FOR_1
0x4000ab7	        0x488d5e01	                      lea rbx, [rsi + 1]	        77	move.c	FUNCTION_1	FOR_1
0x4000abb	          0x48391a	                    cmp qword [rdx], rbx	        77	move.c	FUNCTION_1	FOR_1
0x4000abe	     0xf8cac000000	                            jl 0x4000b70	        77	move.c	FUNCTION_1	FOR_1
0x4000ac4	          0x4189c4	                           mov r12d, eax	        77	move.c	FUNCTION_1	FOR_1
0x4000ac7	          0x4531c9	                            xor r9d, r9d	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000aca	            0x31d2	                            xor edx, edx	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000acc	    0x41b801000000	                              mov r8d, 1	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000ad2	          0x4889e1	                            mov rcx, rsp	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000ad5	          0x4889de	                            mov rsi, rbx	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000ad8	          0x4889ef	                            mov rdi, rbp	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000adb	        0x48891c24	                    mov qword [rsp], rbx	        80	move.c	FUNCTION_1	FOR_1
0x4000adf	      0xe800000000	                          call 0x4000ae4	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000ae4	            0x85c0	                           test eax, eax	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000ae6	            0x7488	                            je 0x4000a70	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000ae8	      0xb901000000	                              mov ecx, 1	        85	move.c	FUNCTION_1	FOR_1	IF_2
0x4000aed	    0x41bd01000000	                             mov r13d, 1	        84	move.c	FUNCTION_1	FOR_1	IF_2
0x4000af3	            0xeb9a	                           jmp 0x4000a8f	        84	move.c	FUNCTION_1	FOR_1	IF_2
0x4000af5	           0xf1f00	                         nop dword [rax]	        84	move.c	FUNCTION_1	FOR_1	IF_2
0x4000af8	    0x4489a5d40000	           mov dword [rbp + 0xd4], r12d 	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x4000aff	    0x4489adcc0000	           mov dword [rbp + 0xcc], r13d 	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x4000b06	          0x4889ef	                            mov rdi, rbp	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x4000b09	    0x898dd0000000	            mov dword [rbp + 0xd0], ecx 	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x4000b0f	      0xe84cf7ffff	          call sym.redraw_for_cursorline	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x4000b14	    0x838db4000000	             or dword [rbp + 0xb4], 0x18	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x4000b1b	      0x438d442500	                    lea eax, [r13 + r12]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b20	    0x3b85a0000000	            cmp eax, dword [rbp + 0xa0] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b26	            0x7e87	                           jle 0x4000aaf	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b28	     0xf1f84000000	                   nop dword [rax + rax]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b30	    0x8b95b4000000	            mov edx, dword [rbp + 0xb4] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b36	      0xe9e5feffff	                           jmp 0x4000a20	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b3b	       0xf1f440000	                   nop dword [rax + rax]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b40	      0xe800000000	                          call 0x4000b45	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000b45	     0x38584000000	             add eax, dword [rbp + 0x84]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000b4b	            0x31c9	                            xor ecx, ecx	        81	move.c	FUNCTION_1	FOR_1
0x4000b4d	          0x4189c5	                           mov r13d, eax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000b50	      0xe93affffff	                           jmp 0x4000a8f	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000b55	           0xf1f00	                         nop dword [rax]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000b58	        0x488b4708	                mov rax, qword [rdi + 8]	        77	move.c	FUNCTION_1	FOR_1
0x4000b5c	        0x488b5f78	            mov rbx, qword [rdi + 0x78] 	        73	move.c	FUNCTION_1	ELSE_1
0x4000b60	          0x483b18	                    cmp rbx, qword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x4000b63	            0x7f2b	                            jg 0x4000b90	        77	move.c	FUNCTION_1	FOR_1
0x4000b65	          0x4531e4	                          xor r12d, r12d	        74	move.c	FUNCTION_1	ELSE_1
0x4000b68	      0xe95affffff	                           jmp 0x4000ac7	        74	move.c	FUNCTION_1	ELSE_1
0x4000b6d	           0xf1f00	                         nop dword [rax]	        74	move.c	FUNCTION_1	ELSE_1
0x4000b70	    0x8b95b4000000	            mov edx, dword [rbp + 0xb4] 	        74	move.c	FUNCTION_1	ELSE_1
0x4000b76	          0x4189c4	                           mov r12d, eax	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b79	      0xe9a2feffff	                           jmp 0x4000a20	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b7e	            0x6690	                                     nop	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b80	          0x4489e6	                           mov esi, r12d	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b83	          0x4889ef	                            mov rdi, rbp	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b86	      0xe875f6ffff	          call sym.set_empty_rows.part.9	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000b8b	      0xe9bdfeffff	                           jmp 0x4000a4d	       124	move.c	FUNCTION_1
0x4000b90	          0x83ca60	                            or edx, 0x60	       121	move.c	FUNCTION_1
0x4000b93	    0x48899fe80000	             mov qword [rdi + 0xe8], rbx	       120	move.c	FUNCTION_1
0x4000b9a	    0xc787f4000000	               mov dword [rdi + 0xf4], 0	      1783	move.c	FUNCTION_44
0x4000ba4	    0x8997b4000000	             mov dword [rdi + 0xb4], edx	       121	move.c	FUNCTION_1
0x4000baa	      0xe994feffff	                           jmp 0x4000a43	       121	move.c	FUNCTION_1
0x4000baf	      0xe800000000	                          call 0x4000bb4	       124	move.c	FUNCTION_1
update_topline_redraw	ELSE,0:CALL,2:DO,0:SWITCH,0:functions,0:IF,1:FOR,0:WHILE,0	11
0x4002280	        0x4883ec08	                              sub rsp, 8	       152	move.c	FUNCTION_3
0x4002284	      0xe800000000	                          call 0x4002289	       153	move.c	FUNCTION_3	CALL_1
0x4002289	    0x8b0500000000	            mov eax, dword [0x0400228f] 	       154	move.c	FUNCTION_3	IF_1
0x400228f	            0x85c0	                           test eax, eax	       154	move.c	FUNCTION_3	IF_1
0x4002291	            0x750d	                           jne 0x40022a0	       154	move.c	FUNCTION_3	IF_1
0x4002293	        0x4883c408	                              add rsp, 8	       156	move.c	FUNCTION_3
0x4002297	              0xc3	                                     ret	       156	move.c	FUNCTION_3
0x4002298	     0xf1f84000000	                   nop dword [rax + rax]	       156	move.c	FUNCTION_3
0x40022a0	            0x31ff	                            xor edi, edi	       155	move.c	FUNCTION_3	CALL_2
0x40022a2	        0x4883c408	                              add rsp, 8	       156	move.c	FUNCTION_3
0x40022a6	      0xe900000000	                           jmp 0x40022ab	       155	move.c	FUNCTION_3	CALL_2
validate_cursor_col	ELSE,1:CALL,3:DO,0:SWITCH,0:functions,0:IF,3:FOR,0:WHILE,0	51
0x4000ed0	    0x488b3d000000	            mov rdi, qword [0x04000ed7] 	       788	move.c	FUNCTION_24	CALL_1
0x4000ed7	            0x4154	                                push r12	       841	move.c	FUNCTION_27
0x4000ed9	              0x55	                                push rbp	       841	move.c	FUNCTION_27
0x4000eda	              0x53	                                push rbx	       841	move.c	FUNCTION_27
0x4000edb	      0xe800000000	                          call 0x4000ee0	       788	move.c	FUNCTION_24	CALL_1
0x4000ee0	    0x488b3d000000	            mov rdi, qword [0x04000ee7] 	       847	move.c	FUNCTION_27	IF_1
0x4000ee7	    0xf687b4000000	               test byte [rdi + 0xb4], 2	       847	move.c	FUNCTION_27	IF_1
0x4000eee	            0x7408	                            je 0x4000ef8	       847	move.c	FUNCTION_27	IF_1
0x4000ef0	              0x5b	                                 pop rbx	       868	move.c	FUNCTION_27	ELSE_1
0x4000ef1	              0x5d	                                 pop rbp	       868	move.c	FUNCTION_27	ELSE_1
0x4000ef2	            0x415c	                                 pop r12	       868	move.c	FUNCTION_27	ELSE_1
0x4000ef4	              0xc3	                                     ret	       868	move.c	FUNCTION_27	ELSE_1
0x4000ef5	           0xf1f00	                         nop dword [rax]	       868	move.c	FUNCTION_27	ELSE_1
0x4000ef8	    0x8b9fd8000000	            mov ebx, dword [rdi + 0xd8] 	       849	move.c	FUNCTION_27	IF_1
0x4000efe	      0xe800000000	                          call 0x4000f03	       893	move.c	FUNCTION_29	CALL_1
0x4000f03	    0x488b3d000000	            mov rdi, qword [0x04000f0a] 	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000f0a	            0x89c5	                            mov ebp, eax	       893	move.c	FUNCTION_29	CALL_1
0x4000f0c	             0x1c3	                            add ebx, eax	       851	move.c	FUNCTION_27	IF_1
0x4000f0e	    0x448ba7ac0000	           mov r12d, dword [rdi + 0xac] 	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000f15	      0xe800000000	                          call 0x4000f1a	       912	move.c	FUNCTION_31	CALL_1
0x4000f1a	    0x488b0d000000	            mov rcx, qword [0x04000f21] 	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4000f21	    0x8b9194020000	           mov edx, dword [rcx + 0x294] 	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4000f27	            0x85d2	                           test edx, edx	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4000f29	            0x7426	                            je 0x4000f51	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4000f2b	          0x4129ec	                           sub r12d, ebp	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000f2e	        0x418d3404	                    lea esi, [r12 + rax]	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4000f32	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	       856	move.c	FUNCTION_27	IF_1	IF_2
0x4000f38	            0x39c3	                            cmp ebx, eax	       857	move.c	FUNCTION_27	IF_1	IF_2
0x4000f3a	            0x7c15	                            jl 0x4000f51	       857	move.c	FUNCTION_27	IF_1	IF_2
0x4000f3c	            0x85f6	                           test esi, esi	       857	move.c	FUNCTION_27	IF_1	IF_2
0x4000f3e	            0x7e11	                           jle 0x4000f51	       857	move.c	FUNCTION_27	IF_1	IF_2
0x4000f40	            0x89da	                            mov edx, ebx	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000f42	            0x29c2	                            sub edx, eax	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000f44	            0x89d0	                            mov eax, edx	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000f46	              0x99	                                     cdq	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000f47	            0xf7fe	                                idiv esi	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000f49	          0x83c001	                              add eax, 1	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000f4c	           0xfafc6	                           imul eax, esi	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000f4f	            0x29c3	                            sub ebx, eax	       859	move.c	FUNCTION_27	IF_1	IF_2
0x4000f51	    0x8b9194000000	            mov edx, dword [rcx + 0x94] 	       860	move.c	FUNCTION_27	IF_1	IF_3
0x4000f57	            0x89d8	                            mov eax, ebx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000f59	            0x29d0	                            sub eax, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000f5b	            0x39d3	                            cmp ebx, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000f5d	      0xba00000000	                              mov edx, 0	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000f62	           0xf4ec2	                         cmovle eax, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x4000f65	    0x8389b4000000	                or dword [rcx + 0xb4], 2	       866	move.c	FUNCTION_27	IF_1	ELSE_1
0x4000f6c	    0x8981e0000000	             mov dword [rcx + 0xe0], eax	       864	move.c	FUNCTION_27	IF_1	ELSE_1
0x4000f72	              0x5b	                                 pop rbx	       868	move.c	FUNCTION_27	ELSE_1
0x4000f73	              0x5d	                                 pop rbp	       868	move.c	FUNCTION_27	ELSE_1
0x4000f74	            0x415c	                                 pop r12	       868	move.c	FUNCTION_27	ELSE_1
0x4000f76	              0xc3	                                     ret	       868	move.c	FUNCTION_27	ELSE_1
scrollup_clamp	ELSE,1:CALL,5:DO,0:SWITCH,0:functions,0:IF,4:FOR,0:WHILE,0	56
0x4002e80	    0x488b05000000	            mov rax, qword [0x04002e87] 	      1486	move.c	FUNCTION_38	IF_1
0x4002e87	    0x488b15000000	            mov rdx, qword [0x04002e8e] 	      1486	move.c	FUNCTION_38	IF_1
0x4002e8e	              0x53	                                push rbx	      1483	move.c	FUNCTION_38
0x4002e8f	          0x488b0a	                    mov rcx, qword [rdx]	      1486	move.c	FUNCTION_38	IF_1
0x4002e92	        0x48394878	            cmp qword [rax + 0x78], rcx 	      1486	move.c	FUNCTION_38	IF_1
0x4002e96	            0x7478	                            je 0x4002f10	      1486	move.c	FUNCTION_38	IF_1
0x4002e98	      0xe800000000	                          call 0x4002e9d	      1493	move.c	FUNCTION_38	CALL_1
0x4002e9d	    0x488b05000000	            mov rax, qword [0x04002ea4] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002ea4	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002ea8	    0x8b98dc000000	            mov ebx, dword [rax + 0xdc] 	      1501	move.c	FUNCTION_38	CALL_2
0x4002eae	      0xe800000000	                          call 0x4002eb3	      1501	move.c	FUNCTION_38	CALL_2
0x4002eb3	    0x488b3d000000	            mov rdi, qword [0x04002eba] 	      1502	move.c	FUNCTION_38
0x4002eba	            0x29c3	                            sub ebx, eax	      1501	move.c	FUNCTION_38	CALL_2
0x4002ebc	    0x8b9794020000	           mov edx, dword [rdi + 0x294] 	      1506	move.c	FUNCTION_38	IF_2
0x4002ec2	    0x2b9f84000000	             sub ebx, dword [rdi + 0x84]	      1501	move.c	FUNCTION_38	CALL_2
0x4002ec8	            0x85d2	                           test edx, edx	      1506	move.c	FUNCTION_38	IF_2
0x4002eca	            0x740a	                            je 0x4002ed6	      1506	move.c	FUNCTION_38	IF_2
0x4002ecc	    0x8b87ac000000	            mov eax, dword [rdi + 0xac] 	      1506	move.c	FUNCTION_38	IF_2
0x4002ed2	            0x85c0	                           test eax, eax	      1506	move.c	FUNCTION_38	IF_2
0x4002ed4	            0x754a	                           jne 0x4002f20	      1506	move.c	FUNCTION_38	IF_2
0x4002ed6	          0x4863db	                         movsxd rbx, ebx	      1511	move.c	FUNCTION_38	IF_3
0x4002ed9	    0x483b1d000000	            cmp rbx, qword [0x04002ee0] 	      1511	move.c	FUNCTION_38	IF_3
0x4002ee0	            0x7c22	                            jl 0x4002f04	      1511	move.c	FUNCTION_38	IF_3
0x4002ee2	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4002ee8	            0x85c0	                           test eax, eax	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4002eea	            0x7e64	                           jle 0x4002f50	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4002eec	          0x83e801	                              sub eax, 1	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4002eef	    0x898784000000	             mov dword [rdi + 0x84], eax	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4002ef5	    0x488387e80000	               add qword [rdi + 0xe8], 1	      1524	move.c	FUNCTION_38	IF_3
0x4002efd	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffffce	      1525	move.c	FUNCTION_38	IF_3
0x4002f04	              0x5b	                                 pop rbx	      1527	move.c	FUNCTION_38
0x4002f05	              0xc3	                                     ret	      1527	move.c	FUNCTION_38
0x4002f06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1527	move.c	FUNCTION_38
0x4002f10	    0x8b8884000000	            mov ecx, dword [rax + 0x84] 	      1488	move.c	FUNCTION_38	IF_1
0x4002f16	            0x85c9	                           test ecx, ecx	      1488	move.c	FUNCTION_38	IF_1
0x4002f18	     0xf857affffff	                           jne 0x4002e98	      1488	move.c	FUNCTION_38	IF_1
0x4002f1e	              0x5b	                                 pop rbx	      1527	move.c	FUNCTION_38
0x4002f1f	              0xc3	                                     ret	      1527	move.c	FUNCTION_38
0x4002f20	      0xe800000000	                          call 0x4002f25	       788	move.c	FUNCTION_24	CALL_1
0x4002f25	    0x488b3d000000	            mov rdi, qword [0x04002f2c] 	      1509	move.c	FUNCTION_38	IF_2
0x4002f2c	    0x8b87d8000000	            mov eax, dword [rdi + 0xd8] 	      1509	move.c	FUNCTION_38	IF_2
0x4002f32	              0x99	                                     cdq	      1509	move.c	FUNCTION_38	IF_2
0x4002f33	    0xf7bfac000000	                 idiv dword [rdi + 0xac]	      1509	move.c	FUNCTION_38	IF_2
0x4002f39	            0x29c3	                            sub ebx, eax	      1509	move.c	FUNCTION_38	IF_2
0x4002f3b	          0x4863db	                         movsxd rbx, ebx	      1511	move.c	FUNCTION_38	IF_3
0x4002f3e	    0x483b1d000000	            cmp rbx, qword [0x04002f45] 	      1511	move.c	FUNCTION_38	IF_3
0x4002f45	            0x7d9b	                           jge 0x4002ee2	      1511	move.c	FUNCTION_38	IF_3
0x4002f47	            0xebbb	                           jmp 0x4002f04	      1511	move.c	FUNCTION_38	IF_3
0x4002f49	     0xf1f80000000	                         nop dword [rax]	      1511	move.c	FUNCTION_38	IF_3
0x4002f50	        0x488d5778	                   lea rdx, [rdi + 0x78]	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002f54	        0x488b7f78	            mov rdi, qword [rdi + 0x78] 	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002f58	            0x31f6	                            xor esi, esi	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002f5a	      0xe800000000	                          call 0x4002f5f	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4002f5f	    0x488b3d000000	            mov rdi, qword [0x04002f66] 	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x4002f66	      0x4883477801	               add qword [rdi + 0x78], 1	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x4002f6b	            0xeb88	                           jmp 0x4002ef5	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
do_check_cursorbind	ELSE,0:CALL,0:DO,0:SWITCH,0:functions,1:IF,0:FOR,0:WHILE,0	102
0x4003d00	            0x4157	                                push r15	      2774	move.c	FUNCTION_51
0x4003d02	            0x4156	                                push r14	      2774	move.c	FUNCTION_51
0x4003d04	            0x4155	                                push r13	      2774	move.c	FUNCTION_51
0x4003d06	            0x4154	                                push r12	      2774	move.c	FUNCTION_51
0x4003d08	              0x55	                                push rbp	      2774	move.c	FUNCTION_51
0x4003d09	              0x53	                                push rbx	      2774	move.c	FUNCTION_51
0x4003d0a	        0x4883ec28	                           sub rsp, 0x28	      2774	move.c	FUNCTION_51
0x4003d0e	    0x488b1d000000	            mov rbx, qword [0x04003d15] 	      2775	move.c	FUNCTION_51
0x4003d15	    0x488b2d000000	            mov rbp, qword [0x04003d1c] 	      2792	move.c	FUNCTION_51
0x4003d1c	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2775	move.c	FUNCTION_51
0x4003d20	          0x4885ed	                           test rbp, rbp	      2792	move.c	FUNCTION_51
0x4003d23	        0x448b7b40	           mov r15d, dword [rbx + 0x40] 	      2776	move.c	FUNCTION_51
0x4003d27	        0x448b7344	           mov r14d, dword [rbx + 0x44] 	      2778	move.c	FUNCTION_51
0x4003d2b	        0x448b6b48	           mov r13d, dword [rbx + 0x48] 	      2780	move.c	FUNCTION_51
0x4003d2f	        0x448b634c	           mov r12d, dword [rbx + 0x4c] 	      2781	move.c	FUNCTION_51
0x4003d33	    0x48892d000000	            mov qword [0x04003d3a], rbp 	      2792	move.c	FUNCTION_51
0x4003d3a	      0x4889442408	                mov qword [rsp + 8], rax	      2775	move.c	FUNCTION_51
0x4003d3f	    0x488b05000000	            mov rax, qword [0x04003d46] 	      2783	move.c	FUNCTION_51
0x4003d46	      0x4889442410	             mov qword [rsp + 0x10], rax	      2783	move.c	FUNCTION_51
0x4003d4b	    0x8b0500000000	            mov eax, dword [0x04003d51] 	      2785	move.c	FUNCTION_51
0x4003d51	    0xc70500000000	               mov dword [0x04003d5b], 0	      2791	move.c	FUNCTION_51
0x4003d5b	        0x89442418	             mov dword [rsp + 0x18], eax	      2785	move.c	FUNCTION_51
0x4003d5f	    0x8b0500000000	            mov eax, dword [0x04003d65] 	      2786	move.c	FUNCTION_51
0x4003d65	    0xc70500000000	               mov dword [0x04003d6f], 0	      2791	move.c	FUNCTION_51
0x4003d6f	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2786	move.c	FUNCTION_51
0x4003d73	     0xf85b5000000	                           jne 0x4003e2e	      2792	move.c	FUNCTION_51
0x4003d79	      0xe922010000	                           jmp 0x4003ea0	      2792	move.c	FUNCTION_51
0x4003d7e	            0x6690	                                     nop	      2792	move.c	FUNCTION_51
0x4003d80	    0x448b85c00100	           mov r8d, dword [rbp + 0x1c0] 	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003d87	          0x4585c0	                           test r8d, r8d	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003d8a	     0xf85d0000000	                           jne 0x4003e60	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003d90	      0x488b442408	                mov rax, qword [rsp + 8]	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x4003d95	        0x48894538	            mov qword [rbp + 0x38], rax 	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x4003d99	    0x488b05000000	            mov rax, qword [0x04003da0] 	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003da0	    0x8b2d00000000	            mov ebp, dword [0x04003da6] 	      2814	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003da6	    0xc70500000000	               mov dword [0x04003db0], 1	      2815	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003db0	        0x44897840	            mov dword [rax + 0x40], r15d	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003db4	        0x44897044	            mov dword [rax + 0x44], r14d	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003db8	        0x44896848	            mov dword [rax + 0x48], r13d	      2809	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003dbc	        0x4489604c	            mov dword [rax + 0x4c], r12d	      2810	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003dc0	      0xe800000000	                          call 0x4003dc5	      2816	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_2
0x4003dc5	    0x488b05000000	            mov rax, qword [0x04003dcc] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4003dcc	    0x8bb870020000	           mov edi, dword [rax + 0x270] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4003dd2	            0x85ff	                           test edi, edi	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4003dd4	            0x750a	                           jne 0x4003de0	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4003dd6	    0x8bb06c020000	           mov esi, dword [rax + 0x26c] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4003ddc	            0x85f6	                           test esi, esi	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4003dde	            0x7405	                            je 0x4003de5	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4003de0	      0xe800000000	                          call 0x4003de5	      2819	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_3
0x4003de5	    0x8b0d00000000	            mov ecx, dword [0x04003deb] 	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x4003deb	    0x892d00000000	            mov dword [0x04003df1], ebp 	      2821	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003df1	            0x85c9	                           test ecx, ecx	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x4003df3	     0xf8597000000	                           jne 0x4003e90	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x4003df9	      0xbf0a000000	                            mov edi, 0xa	      2827	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x4003dfe	      0xe800000000	                          call 0x4003e03	      2827	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x4003e03	    0x488b05000000	            mov rax, qword [0x04003e0a] 	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4003e0a	    0x8b9088020000	           mov edx, dword [rax + 0x288] 	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4003e10	            0x85d2	                           test edx, edx	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4003e12	            0x746c	                            je 0x4003e80	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4003e14	    0xc78040010000	              mov dword [rax + 0x140], 1	      2832	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e1e	        0x488b6820	            mov rbp, qword [rax + 0x20] 	      2792	move.c	FUNCTION_51
0x4003e22	          0x4885ed	                           test rbp, rbp	      2792	move.c	FUNCTION_51
0x4003e25	    0x48892d000000	            mov qword [0x04003e2c], rbp 	      2792	move.c	FUNCTION_51
0x4003e2c	            0x7472	                            je 0x4003ea0	      2792	move.c	FUNCTION_51
0x4003e2e	        0x488b4508	                mov rax, qword [rbp + 8]	      2794	move.c	FUNCTION_51	FUNCTION_1
0x4003e32	          0x4839eb	                            cmp rbx, rbp	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e35	    0x488905000000	            mov qword [0x04003e3c], rax 	      2794	move.c	FUNCTION_51	FUNCTION_1
0x4003e3c	            0x7410	                            je 0x4003e4e	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e3e	    0x448b8db00200	           mov r9d, dword [rbp + 0x2b0] 	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e45	          0x4585c9	                           test r9d, r9d	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e48	     0xf8532ffffff	                           jne 0x4003d80	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e4e	    0x488b05000000	            mov rax, qword [0x04003e55] 	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e55	            0xebc7	                           jmp 0x4003e1e	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e57	    0x660f1f840000	                    nop word [rax + rax]	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4003e60	      0x488b742408	                mov rsi, qword [rsp + 8]	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x4003e65	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x4003e6a	      0xe800000000	                          call 0x4003e6f	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x4003e6f	        0x48894538	            mov qword [rbp + 0x38], rax 	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003e73	      0xe921ffffff	                           jmp 0x4003d99	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003e78	     0xf1f84000000	                   nop dword [rax + rax]	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x4003e80	      0xe800000000	                          call 0x4003e85	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x4003e85	    0x488b05000000	            mov rax, qword [0x04003e8c] 	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x4003e8c	            0xeb86	                           jmp 0x4003e14	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x4003e8e	            0x6690	                                     nop	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x4003e90	      0xe800000000	                          call 0x4003e95	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x4003e95	      0xe95fffffff	                           jmp 0x4003df9	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x4003e9a	    0x660f1f440000	                    nop word [rax + rax]	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x4003ea0	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2839	move.c	FUNCTION_51
0x4003ea4	    0x48891d000000	            mov qword [0x04003eab], rbx 	      2841	move.c	FUNCTION_51
0x4003eab	    0x890500000000	            mov dword [0x04003eb1], eax 	      2839	move.c	FUNCTION_51
0x4003eb1	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2840	move.c	FUNCTION_51
0x4003eb5	    0x890500000000	            mov dword [0x04003ebb], eax 	      2840	move.c	FUNCTION_51
0x4003ebb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2842	move.c	FUNCTION_51
0x4003ec0	    0x488905000000	            mov qword [0x04003ec7], rax 	      2842	move.c	FUNCTION_51
0x4003ec7	        0x4883c428	                           add rsp, 0x28	      2843	move.c	FUNCTION_51
0x4003ecb	              0x5b	                                 pop rbx	      2843	move.c	FUNCTION_51
0x4003ecc	              0x5d	                                 pop rbp	      2843	move.c	FUNCTION_51
0x4003ecd	            0x415c	                                 pop r12	      2843	move.c	FUNCTION_51
0x4003ecf	            0x415d	                                 pop r13	      2843	move.c	FUNCTION_51
0x4003ed1	            0x415e	                                 pop r14	      2843	move.c	FUNCTION_51
0x4003ed3	            0x415f	                                 pop r15	      2843	move.c	FUNCTION_51
0x4003ed5	              0xc3	                                     ret	      2843	move.c	FUNCTION_51
onepage	ELSE,9:CALL,30:DO,0:SWITCH,0:functions,0:IF,21:FOR,1:WHILE,1	317
0x40032b0	            0x4155	                                push r13	      2246	move.c	FUNCTION_48
0x40032b2	            0x4154	                                push r12	      2246	move.c	FUNCTION_48
0x40032b4	          0x4189fc	                           mov r12d, edi	      2246	move.c	FUNCTION_48
0x40032b7	              0x55	                                push rbp	      2246	move.c	FUNCTION_48
0x40032b8	              0x53	                                push rbx	      2246	move.c	FUNCTION_48
0x40032b9	        0x4883ec28	                           sub rsp, 0x28	      2246	move.c	FUNCTION_48
0x40032bd	    0x488b3d000000	            mov rdi, qword [0x040032c4] 	      2250	move.c	FUNCTION_48
0x40032c4	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	move.c	FUNCTION_48
0x40032cd	      0x4889442418	             mov qword [rsp + 0x18], rax	      2246	move.c	FUNCTION_48
0x40032d2	            0x31c0	                            xor eax, eax	      2246	move.c	FUNCTION_48
0x40032d4	    0x488b05000000	            mov rax, qword [0x040032db] 	      2252	move.c	FUNCTION_48	IF_1
0x40032db	        0x4c8b6f78	            mov r13, qword [rdi + 0x78] 	      2250	move.c	FUNCTION_48
0x40032df	        0x48833801	                      cmp qword [rax], 1	      2252	move.c	FUNCTION_48	IF_1
0x40032e3	     0xf848d050000	                            je 0x4003876	      2252	move.c	FUNCTION_48	IF_1
0x40032e9	          0x4885f6	                           test rsi, rsi	      2258	move.c	FUNCTION_48	FOR_1
0x40032ec	          0x4889f5	                            mov rbp, rsi	      2258	move.c	FUNCTION_48	FOR_1
0x40032ef	     0xf8eca020000	                           jle 0x40035bf	      2258	move.c	FUNCTION_48	FOR_1
0x40032f5	           0xf1f00	                         nop dword [rax]	      2258	move.c	FUNCTION_48	FOR_1
0x40032f8	    0xf687b4000000	           test byte [rdi + 0xb4], 0x20 	       590	move.c	FUNCTION_16	IF_1
0x40032ff	     0xf84eb000000	                            je 0x40033f0	       590	move.c	FUNCTION_16	IF_1
0x4003305	        0x4183fc01	                             cmp r12d, 1	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4003309	     0xf84f7000000	                            je 0x4003406	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x400330f	      0x48837f7801	               cmp qword [rdi + 0x78], 1	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4003314	     0xf84d6030000	                            je 0x40036f0	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x400331a	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x400331e	    0xc74424080000	                  mov dword [rsp + 8], 0	      2283	move.c	FUNCTION_48	FOR_1
0x4003326	        0x4883fe01	                              cmp rsi, 1	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x400332a	     0xf84e8030000	                            je 0x4003718	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4003330	    0x488b05000000	            mov rax, qword [0x04003337] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4003337	    0x483905000000	            cmp qword [0x0400333e], rax 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400333e	     0xf841c030000	                            je 0x4003660	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4003344	        0x488d46ff	                      lea rax, [rsi - 1]	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4003348	        0x48890424	                    mov qword [rsp], rax	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x400334c	      0xe800000000	                          call 0x4003351	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4003351	    0x488b15000000	            mov rdx, qword [0x04003358] 	      2358	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4003358	      0xbe01000000	                              mov esi, 1	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x400335d	          0x4889e7	                            mov rdi, rsp	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4003360	    0x2b8284000000	             sub eax, dword [rdx + 0x84]	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4003366	        0x89442408	                mov dword [rsp + 8], eax	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x400336a	      0xe8b1d0ffff	             call sym.get_scroll_overlap	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x400336f	    0x488b15000000	            mov rdx, qword [0x04003376] 	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4003376	        0x488b0424	                    mov rax, qword [rsp]	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x400337a	          0x488b32	                    mov rsi, qword [rdx]	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x400337d	          0x4839f0	                            cmp rax, rsi	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4003380	     0xf8c82020000	                            jl 0x4003608	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4003386	        0x48893424	                    mov qword [rsp], rsi	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x400338a	    0xc74424080000	                  mov dword [rsp + 8], 0	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4003392	    0x488b3d000000	            mov rdi, qword [0x04003399] 	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4003399	            0x31db	                            xor ebx, ebx	      2377	move.c	FUNCTION_48	FOR_1	ELSE_4
0x400339b	        0x48897738	             mov qword [rdi + 0x38], rsi	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x400339f	            0xeb12	                           jmp 0x40033b3	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033a1	     0xf1f80000000	                         nop dword [rax]	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033a8	    0x488b3d000000	            mov rdi, qword [0x040033af] 	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033af	        0x488b3424	                    mov rsi, qword [rsp]	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033b3	    0x486387a00000	         movsxd rax, dword [rdi + 0xa0] 	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033ba	          0x4839c3	                            cmp rbx, rax	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033bd	     0xf8fc5000000	                            jg 0x4003488	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033c3	          0x4885f6	                           test rsi, rsi	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033c6	     0xf8e04030000	                           jle 0x40036d0	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40033cc	          0x4889e7	                            mov rdi, rsp	      2380	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x40033cf	      0xe8ccceffff	                   call sym.topline_back	      2380	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x40033d4	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40033d9	          0x4801c3	                            add rbx, rax	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x40033dc	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40033e1	            0x75c5	                           jne 0x40033a8	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40033e3	      0xbbffffff7f	                     mov ebx, 0x7fffffff	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40033e8	            0xebbe	                           jmp 0x40033a8	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40033ea	    0x660f1f440000	                    nop word [rax + rax]	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x40033f0	      0xe8dbd5ffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x40033f5	        0x4183fc01	                             cmp r12d, 1	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x40033f9	    0x488b3d000000	            mov rdi, qword [0x04003400] 	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4003400	     0xf8509ffffff	                           jne 0x400330f	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4003406	    0x488b05000000	            mov rax, qword [0x0400340d] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x400340d	        0x488b5778	            mov rdx, qword [rdi + 0x78] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4003411	          0x488b00	                    mov rax, qword [rax]	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x4003414	          0x4889c1	                            mov rcx, rax	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4003417	    0x482b0d000000	             sub rcx, qword [0x0400341e]	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x400341e	          0x4839ca	                            cmp rdx, rcx	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4003421	     0xf8c51010000	                            jl 0x4003578	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4003427	    0x483b87e80000	            cmp rax, qword [rdi + 0xe8] 	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x400342e	     0xf8d44010000	                           jge 0x4003578	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x4003434	      0xe800000000	                          call 0x4003439	      2277	move.c	FUNCTION_48	FOR_1	IF_2	CALL_4
0x4003439	      0xe800000000	                          call 0x400343e	      2452	move.c	FUNCTION_48	CALL_23
0x400343e	      0xe800000000	                          call 0x4003443	      2454	move.c	FUNCTION_48	CALL_24
0x4003443	      0xe800000000	                          call 0x4003448	      2455	move.c	FUNCTION_48	CALL_25
0x4003448	    0x488b05000000	            mov rax, qword [0x0400344f] 	      2458	move.c	FUNCTION_48
0x400344f	            0x31db	                            xor ebx, ebx	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x4003451	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffff8	      2458	move.c	FUNCTION_48
0x4003458	      0xbf0a000000	                            mov edi, 0xa	      2478	move.c	FUNCTION_48	CALL_30
0x400345d	      0xe800000000	                          call 0x4003462	      2478	move.c	FUNCTION_48	CALL_30
0x4003462	            0x89d8	                            mov eax, ebx	      2479	move.c	FUNCTION_48
0x4003464	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2480	move.c	FUNCTION_48
0x4003469	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2480	move.c	FUNCTION_48
0x4003472	     0xf8518040000	                           jne 0x4003890	      2480	move.c	FUNCTION_48
0x4003478	        0x4883c428	                           add rsp, 0x28	      2480	move.c	FUNCTION_48
0x400347c	              0x5b	                                 pop rbx	      2480	move.c	FUNCTION_48
0x400347d	              0x5d	                                 pop rbp	      2480	move.c	FUNCTION_48
0x400347e	            0x415c	                                 pop r12	      2480	move.c	FUNCTION_48
0x4003480	            0x415d	                                 pop r13	      2480	move.c	FUNCTION_48
0x4003482	              0xc3	                                     ret	      2480	move.c	FUNCTION_48
0x4003483	       0xf1f440000	                   nop dword [rax + rax]	      2480	move.c	FUNCTION_48
0x4003488	          0x4885f6	                           test rsi, rsi	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x400348b	     0xf8e3f020000	                           jle 0x40036d0	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4003491	        0x8b542408	                mov edx, dword [rsp + 8]	      1628	move.c	FUNCTION_42	IF_1
0x4003495	            0x85d2	                           test edx, edx	      1628	move.c	FUNCTION_42	IF_1
0x4003497	            0x7e15	                           jle 0x40034ae	      1628	move.c	FUNCTION_42	IF_1
0x4003499	      0xe800000000	                          call 0x400349e	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x400349e	        0x2b442408	                sub eax, dword [rsp + 8]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40034a2	      0x48832c2401	                      sub qword [rsp], 1	      1631	move.c	FUNCTION_42	IF_1
0x40034a7	          0x83c001	                              add eax, 1	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40034aa	        0x89442408	                mov dword [rsp + 8], eax	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x40034ae	          0x4889e7	                            mov rdi, rsp	      2400	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x40034b1	      0xe83accffff	                   call sym.botline_forw	      2400	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x40034b6	          0x4889e7	                            mov rdi, rsp	      2401	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x40034b9	      0xe832ccffff	                   call sym.botline_forw	      2401	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x40034be	        0x8b442408	                mov eax, dword [rsp + 8]	      1613	move.c	FUNCTION_41	IF_1
0x40034c2	            0x85c0	                           test eax, eax	      1613	move.c	FUNCTION_41	IF_1
0x40034c4	            0x7e08	                           jle 0x40034ce	      1613	move.c	FUNCTION_41	IF_1
0x40034c6	          0x4889e7	                            mov rdi, rsp	      1613	move.c	FUNCTION_41	IF_1
0x40034c9	      0xe8f2cbffff	         call sym.botline_topline.part.0	      1613	move.c	FUNCTION_41	IF_1
0x40034ce	        0x488b3c24	                    mov rdi, qword [rsp]	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40034d2	            0x31d2	                            xor edx, edx	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40034d4	          0x4889e6	                            mov rsi, rsp	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40034d7	      0xe800000000	                          call 0x40034dc	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40034dc	    0x488b3d000000	            mov rdi, qword [0x040034e3] 	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40034e3	        0x488b0424	                    mov rax, qword [rsp]	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40034e7	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40034eb	          0x4839f0	                            cmp rax, rsi	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40034ee	     0xf8c3c010000	                            jl 0x4003630	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40034f4	     0xf8f94020000	                            jg 0x400378e	      2414	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40034fa	        0x8b542408	                mov edx, dword [rsp + 8]	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40034fe	    0x8b9f84000000	            mov ebx, dword [rdi + 0x84] 	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003504	            0x39da	                            cmp edx, ebx	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003506	     0xf8c28010000	                            jl 0x4003634	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x400350c	        0x895c2408	                mov dword [rsp + 8], ebx	      2422	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003510	      0xe800000000	                          call 0x4003515	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4003515	            0x39d8	                            cmp eax, ebx	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4003517	     0xf8f88020000	                            jg 0x40037a5	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400351d	    0x488b3d000000	            mov rdi, qword [0x04003524] 	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4003524	        0x8b442408	                mov eax, dword [rsp + 8]	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4003528	    0x398784000000	            cmp dword [rdi + 0x84], eax 	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x400352e	     0xf84e9020000	                            je 0x400381d	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4003534	      0xe897d4ffff	                   call sym.comp_botline	      2434	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x4003539	    0x488b05000000	            mov rax, qword [0x04003540] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003540	    0x488b88e80000	            mov rcx, qword [rax + 0xe8] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003547	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffe4	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x400354e	        0x488d51ff	                      lea rdx, [rcx - 1]	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003552	        0x48895038	             mov qword [rax + 0x38], rdx	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003560	        0x4883ed01	                              sub rbp, 1	      2258	move.c	FUNCTION_48	FOR_1
0x4003564	            0x7459	                            je 0x40035bf	      2258	move.c	FUNCTION_48	FOR_1
0x4003566	    0x488b3d000000	            mov rdi, qword [0x0400356d] 	      2258	move.c	FUNCTION_48	FOR_1
0x400356d	      0xe986fdffff	                           jmp 0x40032f8	      2258	move.c	FUNCTION_48	FOR_1
0x4003572	    0x660f1f440000	                    nop word [rax + rax]	      2258	move.c	FUNCTION_48	FOR_1
0x4003578	    0x488b0d000000	            mov rcx, qword [0x0400357f] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x400357f	    0x48390d000000	            cmp qword [0x04003586], rcx 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4003586	    0xc74424080000	                  mov dword [rsp + 8], 0	      2283	move.c	FUNCTION_48	FOR_1
0x400358e	     0xf843e020000	                            je 0x40037d2	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4003594	    0x488bb7e80000	            mov rsi, qword [rdi + 0xe8] 	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400359b	          0x4839f0	                            cmp rax, rsi	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x400359e	     0xf8d84010000	                           jge 0x4003728	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x40035a4	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffffee	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x40035ab	        0x4883ed01	                              sub rbp, 1	      2258	move.c	FUNCTION_48	FOR_1
0x40035af	        0x48894778	             mov qword [rdi + 0x78], rax	      2301	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x40035b3	    0xc78784000000	               mov dword [rdi + 0x84], 0	      2303	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x40035bd	            0x75a7	                           jne 0x4003566	      2258	move.c	FUNCTION_48	FOR_1
0x40035bf	      0xe800000000	                          call 0x40035c4	      2452	move.c	FUNCTION_48	CALL_23
0x40035c4	      0xe800000000	                          call 0x40035c9	      2454	move.c	FUNCTION_48	CALL_24
0x40035c9	      0xe800000000	                          call 0x40035ce	      2455	move.c	FUNCTION_48	CALL_25
0x40035ce	      0xbf06000000	                              mov edi, 6	      2457	move.c	FUNCTION_48	CALL_26
0x40035d3	      0xe800000000	                          call 0x40035d8	      2457	move.c	FUNCTION_48	CALL_26
0x40035d8	    0x488b05000000	            mov rax, qword [0x040035df] 	      2458	move.c	FUNCTION_48
0x40035df	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffff8	      2458	move.c	FUNCTION_48
0x40035e6	        0x4183fc01	                             cmp r12d, 1	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40035ea	            0x750d	                           jne 0x40035f9	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40035ec	      0xe84fcdffff	               call sym.check_top_offset	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40035f1	            0x85c0	                           test eax, eax	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40035f3	     0xf8538020000	                           jne 0x4003831	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40035f9	      0xbb01000000	                              mov ebx, 1	      2248	move.c	FUNCTION_48
0x40035fe	      0xe955feffff	                           jmp 0x4003458	      2248	move.c	FUNCTION_48
0x4003603	       0xf1f440000	                   nop dword [rax + rax]	      2248	move.c	FUNCTION_48
0x4003608	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1613	move.c	FUNCTION_41	IF_1
0x400360c	          0x4889c6	                            mov rsi, rax	      1613	move.c	FUNCTION_41	IF_1
0x400360f	            0x85c9	                           test ecx, ecx	      1613	move.c	FUNCTION_41	IF_1
0x4003611	     0xf8e7bfdffff	                           jle 0x4003392	      1613	move.c	FUNCTION_41	IF_1
0x4003617	          0x4889e7	                            mov rdi, rsp	      1613	move.c	FUNCTION_41	IF_1
0x400361a	      0xe8a1caffff	         call sym.botline_topline.part.0	      1613	move.c	FUNCTION_41	IF_1
0x400361f	        0x488b3424	                    mov rsi, qword [rsp]	      1613	move.c	FUNCTION_41	IF_1
0x4003623	      0xe96afdffff	                           jmp 0x4003392	      1613	move.c	FUNCTION_41	IF_1
0x4003628	     0xf1f84000000	                   nop dword [rax + rax]	      1613	move.c	FUNCTION_41	IF_1
0x4003630	        0x8b542408	                mov edx, dword [rsp + 8]	      1613	move.c	FUNCTION_41	IF_1
0x4003634	            0x85d2	                           test edx, edx	      1368	move.c	FUNCTION_35	IF_1
0x4003636	        0x48894778	             mov qword [rdi + 0x78], rax	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x400363a	    0x899784000000	             mov dword [rdi + 0x84], edx	      2443	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4003640	            0x7e0e	                           jle 0x4003650	      1368	move.c	FUNCTION_35	IF_1
0x4003642	            0x31f6	                            xor esi, esi	      1368	move.c	FUNCTION_35	IF_1
0x4003644	      0xe847cbffff	           call sym.check_topfill.part.8	      1368	move.c	FUNCTION_35	IF_1
0x4003649	    0x488b3d000000	            mov rdi, qword [0x04003650] 	      1368	move.c	FUNCTION_35	IF_1
0x4003650	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffffce	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4003657	      0xe904ffffff	                           jmp 0x4003560	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x400365c	         0xf1f4000	                         nop dword [rax]	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4003660	    0x488b05000000	            mov rax, qword [0x04003667] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4003667	          0x4885c0	                           test rax, rax	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400366a	     0xf8ed4fcffff	                           jle 0x4003344	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4003670	    0x488b0d000000	            mov rcx, qword [0x04003677] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4003677	        0x488d51ff	                      lea rdx, [rcx - 1]	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400367b	          0x4839d0	                            cmp rax, rdx	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400367e	     0xf8dc0fcffff	                           jge 0x4003344	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4003684	        0x4883f802	                              cmp rax, 2	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4003688	     0xf8e21010000	                           jle 0x40037af	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x400368e	        0x488d50fe	                      lea rdx, [rax - 2]	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4003692	          0x4829d6	                            sub rsi, rdx	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4003695	          0x4885f6	                           test rsi, rsi	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4003698	        0x48897778	             mov qword [rdi + 0x78], rsi	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x400369c	     0xf8e1e010000	                           jle 0x40037c0	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40036a2	    0x488b15000000	            mov rdx, qword [0x040036a9] 	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x40036a9	      0x488d4430ff	                lea rax, [rax + rsi - 1]	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x40036ae	        0x48894738	             mov qword [rdi + 0x38], rax	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x40036b2	          0x488b12	                    mov rdx, qword [rdx]	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x40036b5	          0x4839d0	                            cmp rax, rdx	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x40036b8	     0xf8ea2feffff	                           jle 0x4003560	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x40036be	        0x48895738	             mov qword [rdi + 0x38], rdx	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x40036c2	      0xe999feffff	                           jmp 0x4003560	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x40036c7	    0x660f1f840000	                    nop word [rax + rax]	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x40036d0	    0x48c747780100	               mov qword [rdi + 0x78], 1	      2388	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x40036d8	      0xe863c9ffff	                    call sym.max_topfill	      2390	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15	CALL_13
0x40036dd	    0x488b05000000	            mov rax, qword [0x040036e4] 	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x40036e4	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffce	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x40036eb	      0xe970feffff	                           jmp 0x4003560	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x40036f0	    0x8b9f84000000	            mov ebx, dword [rdi + 0x84] 	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x40036f6	      0xbe01000000	                              mov esi, 1	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x40036fb	      0xe800000000	                          call 0x4003700	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4003700	            0x39c3	                            cmp ebx, eax	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4003702	     0xf842cfdffff	                            je 0x4003434	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4003708	    0x488b3d000000	            mov rdi, qword [0x0400370f] 	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x400370f	      0xe906fcffff	                           jmp 0x400331a	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4003714	         0xf1f4000	                         nop dword [rax]	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4003718	      0xe823c9ffff	                    call sym.max_topfill	      2333	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8	CALL_8
0x400371d	      0xe93efeffff	                           jmp 0x4003560	      2334	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4003722	    0x660f1f440000	                    nop word [rax + rax]	      2334	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4003728	        0x48893424	                    mov qword [rsp], rsi	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400372c	      0xe800000000	                          call 0x4003731	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4003731	    0x488b15000000	            mov rdx, qword [0x04003738] 	      2314	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4003738	          0x4889e7	                            mov rdi, rsp	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x400373b	      0xbeffffffff	                     mov esi, 0xffffffff	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4003740	    0x2b82f4000000	             sub eax, dword [rdx + 0xf4]	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4003746	        0x89442408	                mov dword [rsp + 8], eax	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x400374a	      0xe8d1ccffff	             call sym.get_scroll_overlap	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x400374f	        0x8b542408	                mov edx, dword [rsp + 8]	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4003753	    0x488b3d000000	            mov rdi, qword [0x0400375a] 	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400375a	        0x488b0424	                    mov rax, qword [rsp]	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400375e	            0x85d2	                           test edx, edx	      1368	move.c	FUNCTION_35	IF_1
0x4003760	    0x899784000000	             mov dword [rdi + 0x84], edx	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4003766	        0x48894778	             mov qword [rdi + 0x78], rax	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400376a	            0x7e12	                           jle 0x400377e	      1368	move.c	FUNCTION_35	IF_1
0x400376c	            0x31f6	                            xor esi, esi	      1368	move.c	FUNCTION_35	IF_1
0x400376e	      0xe81dcaffff	           call sym.check_topfill.part.8	      1368	move.c	FUNCTION_35	IF_1
0x4003773	    0x488b3d000000	            mov rdi, qword [0x0400377a] 	      1368	move.c	FUNCTION_35	IF_1
0x400377a	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      1368	move.c	FUNCTION_35	IF_1
0x400377e	        0x48894738	             mov qword [rdi + 0x38], rax	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4003782	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffff84	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4003789	      0xe9d2fdffff	                           jmp 0x4003560	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x400378e	    0x8b9f84000000	            mov ebx, dword [rdi + 0x84] 	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4003794	        0x895c2408	                mov dword [rsp + 8], ebx	      2422	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4003798	      0xe800000000	                          call 0x400379d	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400379d	            0x39d8	                            cmp eax, ebx	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400379f	     0xf8e78fdffff	                           jle 0x400351d	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x40037a5	      0xe896c8ffff	                    call sym.max_topfill	      2425	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_20
0x40037aa	      0xe96efdffff	                           jmp 0x400351d	      2425	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_20
0x40037af	        0x4883ee01	                              sub rsi, 1	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x40037b3	          0x4885f6	                           test rsi, rsi	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40037b6	        0x48897778	             mov qword [rdi + 0x78], rsi	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x40037ba	     0xf8fe2feffff	                            jg 0x40036a2	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40037c0	    0x48c747780100	               mov qword [rdi + 0x78], 1	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40037c8	      0xbe01000000	                              mov esi, 1	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40037cd	      0xe9d0feffff	                           jmp 0x40036a2	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x40037d2	    0x488b0d000000	            mov rcx, qword [0x040037d9] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40037d9	          0x4885c9	                           test rcx, rcx	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40037dc	     0xf8eb2fdffff	                           jle 0x4003594	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40037e2	    0x488b1d000000	            mov rbx, qword [0x040037e9] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40037e9	        0x488d73ff	                      lea rsi, [rbx - 1]	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40037ed	          0x4839f1	                            cmp rcx, rsi	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40037f0	     0xf8d9efdffff	                           jge 0x4003594	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40037f6	        0x4883f902	                              cmp rcx, 2	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x40037fa	     0xf8f82000000	                            jg 0x4003882	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4003800	        0x4883c201	                              add rdx, 1	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4003804	        0x48895778	             mov qword [rdi + 0x78], rdx	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4003808	          0x4839d0	                            cmp rax, rdx	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x400380b	     0xf8dadfeffff	                           jge 0x40036be	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4003811	        0x48894778	             mov qword [rdi + 0x78], rax	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4003815	          0x4889c2	                            mov rdx, rax	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4003818	      0xe9a1feffff	                           jmp 0x40036be	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x400381d	      0x48836f7801	               sub qword [rdi + 0x78], 1	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4003822	    0xc78784000000	               mov dword [rdi + 0x84], 0	      2431	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x400382c	      0xe903fdffff	                           jmp 0x4003534	      2431	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4003831	            0x31f6	                            xor esi, esi	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4003833	      0xbf01000000	                              mov edi, 1	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4003838	      0xe800000000	                          call 0x400383d	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x400383d	    0x488b05000000	            mov rax, qword [0x04003844] 	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4003844	        0x4c3b6878	            cmp r13, qword [rax + 0x78] 	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4003848	     0xf8cabfdffff	                            jl 0x40035f9	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x400384e	    0x488b15000000	            mov rdx, qword [0x04003855] 	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4003855	          0x4c3b2a	                    cmp r13, qword [rdx]	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4003858	     0xf8d9bfdffff	                           jge 0x40035f9	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x400385e	        0x498d7d01	                      lea rdi, [r13 + 1]	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x4003862	        0x488d7078	                   lea rsi, [rax + 0x78]	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4003866	            0x31d2	                            xor edx, edx	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4003868	        0x48897878	             mov qword [rax + 0x78], rdi	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x400386c	      0xe800000000	                          call 0x4003871	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4003871	      0xe983fdffff	                           jmp 0x40035f9	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4003876	      0xe800000000	                          call 0x400387b	      2254	move.c	FUNCTION_48	IF_1	CALL_1
0x400387b	            0x31c0	                            xor eax, eax	      2255	move.c	FUNCTION_48	IF_1
0x400387d	      0xe9e2fbffff	                           jmp 0x4003464	      2255	move.c	FUNCTION_48	IF_1
0x4003882	      0x488d540afe	                lea rdx, [rdx + rcx - 2]	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4003887	        0x48895778	             mov qword [rdi + 0x78], rdx	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x400388b	      0xe978ffffff	                           jmp 0x4003808	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4003890	      0xe800000000	                          call 0x4003895	      2480	move.c	FUNCTION_48
changed_window_setting	ELSE,0:CALL,1:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	5
0x4000bc0	    0x488b3d000000	            mov rdi, qword [0x04000bc7] 	       512	move.c	FUNCTION_9	CALL_1
0x4000bc7	      0xbe28000000	                           mov esi, 0x28	       521	move.c	FUNCTION_10	CALL_2
0x4000bcc	    0x81a7b4000000	      and dword [rdi + 0xb4], 0xffffff00	       520	move.c	FUNCTION_10
0x4000bd6	    0xc787f8000000	               mov dword [rdi + 0xf8], 0	       518	move.c	FUNCTION_10
0x4000be0	      0xe900000000	                           jmp 0x4000be5	       521	move.c	FUNCTION_10	CALL_2
scrollup	ELSE,2:CALL,7:DO,0:SWITCH,0:functions,0:IF,8:FOR,0:WHILE,1	119
0x4000f90	            0x4154	                                push r12	      1283	move.c	FUNCTION_34
0x4000f92	              0x55	                                push rbp	      1283	move.c	FUNCTION_34
0x4000f93	          0x4189f4	                           mov r12d, esi	      1283	move.c	FUNCTION_34
0x4000f96	              0x53	                                push rbx	      1283	move.c	FUNCTION_34
0x4000f97	          0x4889fb	                            mov rbx, rdi	      1283	move.c	FUNCTION_34
0x4000f9a	        0x4883ec10	                           sub rsp, 0x10	      1283	move.c	FUNCTION_34
0x4000f9e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1283	move.c	FUNCTION_34
0x4000fa7	      0x4889442408	                mov qword [rsp + 8], rax	      1283	move.c	FUNCTION_34
0x4000fac	            0x31c0	                            xor eax, eax	      1283	move.c	FUNCTION_34
0x4000fae	            0x85f6	                           test esi, esi	      1287	move.c	FUNCTION_34	IF_1
0x4000fb0	     0xf85da000000	                           jne 0x4001090	      1287	move.c	FUNCTION_34	IF_1
0x4000fb6	    0x488b2d000000	            mov rbp, qword [0x04000fbd] 	      1295	move.c	FUNCTION_34	IF_1
0x4000fbd	    0x8b85c0010000	           mov eax, dword [rbp + 0x1c0] 	      1291	move.c	FUNCTION_34	IF_1
0x4000fc3	            0x85c0	                           test eax, eax	      1291	move.c	FUNCTION_34	IF_1
0x4000fc5	     0xf85e0000000	                           jne 0x40010ab	      1291	move.c	FUNCTION_34	IF_1
0x4000fcb	          0x4889df	                            mov rdi, rbx	      1328	move.c	FUNCTION_34	ELSE_2
0x4000fce	    0x48039de80000	             add rbx, qword [rbp + 0xe8]	      1329	move.c	FUNCTION_34	ELSE_2
0x4000fd5	        0x48037d78	             add rdi, qword [rbp + 0x78]	      1328	move.c	FUNCTION_34	ELSE_2
0x4000fd9	    0x488b15000000	            mov rdx, qword [0x04000fe0] 	      1328	move.c	FUNCTION_34	ELSE_2
0x4000fe0	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1328	move.c	FUNCTION_34	ELSE_2
0x4000fe6	        0x48897d78	            mov qword [rbp + 0x78], rdi 	      1328	move.c	FUNCTION_34	ELSE_2
0x4000fea	    0x48899de80000	            mov qword [rbp + 0xe8], rbx 	      1329	move.c	FUNCTION_34	ELSE_2
0x4000ff1	          0x488b12	                    mov rdx, qword [rdx]	      1332	move.c	FUNCTION_34	IF_5
0x4000ff4	          0x4839fa	                            cmp rdx, rdi	      1332	move.c	FUNCTION_34	IF_5
0x4000ff7	            0x7d04	                           jge 0x4000ffd	      1332	move.c	FUNCTION_34	IF_5
0x4000ff9	        0x48895578	            mov qword [rbp + 0x78], rdx 	      1333	move.c	FUNCTION_34	IF_5
0x4000ffd	        0x4883c201	                              add rdx, 1	      1334	move.c	FUNCTION_34	IF_6
0x4001001	          0x4839da	                            cmp rdx, rbx	      1334	move.c	FUNCTION_34	IF_6
0x4001004	            0x7d07	                           jge 0x400100d	      1334	move.c	FUNCTION_34	IF_6
0x4001006	    0x488995e80000	            mov qword [rbp + 0xe8], rdx 	      1335	move.c	FUNCTION_34	IF_6
0x400100d	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x400100f	            0x7e11	                           jle 0x4001022	      1368	move.c	FUNCTION_35	IF_1
0x4001011	          0x4889ef	                            mov rdi, rbp	      1368	move.c	FUNCTION_35	IF_1
0x4001014	            0x31f6	                            xor esi, esi	      1368	move.c	FUNCTION_35	IF_1
0x4001016	      0xe875f1ffff	           call sym.check_topfill.part.8	      1368	move.c	FUNCTION_35	IF_1
0x400101b	    0x488b2d000000	            mov rbp, qword [0x04001022] 	      1368	move.c	FUNCTION_35	IF_1
0x4001022	          0x4889ef	                            mov rdi, rbp	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4001025	      0xe800000000	                          call 0x400102a	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x400102a	            0x85c0	                           test eax, eax	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x400102c	     0xf8536010000	                           jne 0x4001168	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4001032	    0x488b05000000	            mov rax, qword [0x04001039] 	      1347	move.c	FUNCTION_34
0x4001039	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1347	move.c	FUNCTION_34
0x400103f	            0x89d1	                            mov ecx, edx	      1347	move.c	FUNCTION_34
0x4001041	          0x83e1ce	                     and ecx, 0xffffffce	      1347	move.c	FUNCTION_34
0x4001044	    0x8988b4000000	             mov dword [rax + 0xb4], ecx	      1347	move.c	FUNCTION_34
0x400104a	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1348	move.c	FUNCTION_34	IF_8
0x400104e	        0x48394838	            cmp qword [rax + 0x38], rcx 	      1348	move.c	FUNCTION_34	IF_8
0x4001052	            0x7d15	                           jge 0x4001069	      1348	move.c	FUNCTION_34	IF_8
0x4001054	          0x8b7848	            mov edi, dword [rax + 0x48] 	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x4001057	          0x83e2c0	                     and edx, 0xffffffc0	      1351	move.c	FUNCTION_34	IF_8
0x400105a	        0x48894838	             mov qword [rax + 0x38], rcx	      1350	move.c	FUNCTION_34	IF_8
0x400105e	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1351	move.c	FUNCTION_34	IF_8
0x4001064	      0xe800000000	                          call 0x4001069	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x4001069	      0x488b442408	                mov rax, qword [rsp + 8]	      1355	move.c	FUNCTION_34
0x400106e	    0x644833042528	                xor rax, qword fs:[0x28]	      1355	move.c	FUNCTION_34
0x4001077	     0xf8506010000	                           jne 0x4001183	      1355	move.c	FUNCTION_34
0x400107d	        0x4883c410	                           add rsp, 0x10	      1355	move.c	FUNCTION_34
0x4001081	              0x5b	                                 pop rbx	      1355	move.c	FUNCTION_34
0x4001082	              0x5d	                                 pop rbp	      1355	move.c	FUNCTION_34
0x4001083	            0x415c	                                 pop r12	      1355	move.c	FUNCTION_34
0x4001085	              0xc3	                                     ret	      1355	move.c	FUNCTION_34
0x4001086	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1355	move.c	FUNCTION_34
0x4001090	    0x488b3d000000	            mov rdi, qword [0x04001097] 	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x4001097	      0xe800000000	                          call 0x400109c	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x400109c	            0x85c0	                           test eax, eax	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x400109e	     0xf8412ffffff	                            je 0x4000fb6	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x40010a4	    0x488b2d000000	            mov rbp, qword [0x040010ab] 	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x40010ab	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	      1300	move.c	FUNCTION_34	IF_1
0x40010af	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1300	move.c	FUNCTION_34	IF_1
0x40010b5	        0x48893c24	                    mov qword [rsp], rdi	      1300	move.c	FUNCTION_34	IF_1
0x40010b9	            0xeb12	                           jmp 0x40010cd	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x40010bb	       0xf1f440000	                   nop dword [rax + rax]	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x40010c0	          0x83e801	                              sub eax, 1	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40010c3	    0x898584000000	            mov dword [rbp + 0x84], eax 	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40010c9	        0x4883eb01	                              sub rbx, 1	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40010cd	          0x4885db	                           test rbx, rbx	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x40010d0	            0x746e	                            je 0x4001140	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x40010d2	            0x85c0	                           test eax, eax	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40010d4	            0x7fea	                            jg 0x40010c0	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40010d6	          0x4585e4	                         test r12d, r12d	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_3
0x40010d9	            0x7535	                           jne 0x4001110	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_3
0x40010db	    0x488b15000000	            mov rdx, qword [0x040010e2] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40010e2	          0x48393a	                    cmp qword [rdx], rdi	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40010e5	            0x7e4a	                           jle 0x4001131	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40010e7	        0x488d7701	                      lea rsi, [rdi + 1]	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x40010eb	          0x4889ef	                            mov rdi, rbp	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40010ee	        0x48893424	                    mov qword [rsp], rsi	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x40010f2	      0xe800000000	                          call 0x40010f7	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40010f7	    0x898584000000	            mov dword [rbp + 0x84], eax 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40010fd	    0x488b2d000000	            mov rbp, qword [0x04001104] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4001104	        0x488b3c24	                    mov rdi, qword [rsp]	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4001108	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x400110e	            0xebb9	                           jmp 0x40010c9	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4001110	          0x4889e2	                            mov rdx, rsp	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x4001113	            0x31f6	                            xor esi, esi	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x4001115	      0xe800000000	                          call 0x400111a	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x400111a	    0x488b15000000	            mov rdx, qword [0x04001121] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001121	        0x488b3c24	                    mov rdi, qword [rsp]	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001125	    0x488b2d000000	            mov rbp, qword [0x0400112c] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x400112c	          0x48393a	                    cmp qword [rdx], rdi	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x400112f	            0x7fb6	                            jg 0x40010e7	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001131	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001137	            0xeb0e	                           jmp 0x4001147	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001139	     0xf1f80000000	                         nop dword [rax]	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001140	    0x488b15000000	            mov rdx, qword [0x04001147] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001147	          0x4889fb	                            mov rbx, rdi	      1322	move.c	FUNCTION_34	IF_1
0x400114a	        0x482b5d78	             sub rbx, qword [rbp + 0x78]	      1322	move.c	FUNCTION_34	IF_1
0x400114e	        0x48897d78	            mov qword [rbp + 0x78], rdi 	      1323	move.c	FUNCTION_34	IF_1
0x4001152	    0x48039de80000	             add rbx, qword [rbp + 0xe8]	      1322	move.c	FUNCTION_34	IF_1
0x4001159	    0x48899de80000	            mov qword [rbp + 0xe8], rbx 	      1322	move.c	FUNCTION_34	IF_1
0x4001160	      0xe98cfeffff	                           jmp 0x4000ff1	      1323	move.c	FUNCTION_34	IF_1
0x4001165	           0xf1f00	                         nop dword [rax]	      1323	move.c	FUNCTION_34	IF_1
0x4001168	    0x488b05000000	            mov rax, qword [0x0400116f] 	      1344	move.c	FUNCTION_34	CALL_6
0x400116f	            0x31d2	                            xor edx, edx	      1344	move.c	FUNCTION_34	CALL_6
0x4001171	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1344	move.c	FUNCTION_34	CALL_6
0x4001175	        0x488d7078	                   lea rsi, [rax + 0x78]	      1344	move.c	FUNCTION_34	CALL_6
0x4001179	      0xe800000000	                          call 0x400117e	      1344	move.c	FUNCTION_34	CALL_6
0x400117e	      0xe9affeffff	                           jmp 0x4001032	      1344	move.c	FUNCTION_34	CALL_6
0x4001183	      0xe800000000	                          call 0x4001188	      1355	move.c	FUNCTION_34
cursor_correct	ELSE,4:CALL,7:DO,0:SWITCH,0:functions,0:IF,15:FOR,0:WHILE,1	198
0x4002f70	            0x4156	                                push r14	      2119	move.c	FUNCTION_47
0x4002f72	            0x4155	                                push r13	      2119	move.c	FUNCTION_47
0x4002f74	            0x4154	                                push r12	      2119	move.c	FUNCTION_47
0x4002f76	              0x55	                                push rbp	      2119	move.c	FUNCTION_47
0x4002f77	              0x53	                                push rbx	      2119	move.c	FUNCTION_47
0x4002f78	        0x4883ec20	                           sub rsp, 0x20	      2119	move.c	FUNCTION_47
0x4002f7c	    0x488b0d000000	            mov rcx, qword [0x04002f83] 	      2141	move.c	FUNCTION_47	IF_2
0x4002f83	    0x64488b042528	                mov rax, qword fs:[0x28]	      2119	move.c	FUNCTION_47
0x4002f8c	      0x4889442418	             mov qword [rsp + 0x18], rax	      2119	move.c	FUNCTION_47
0x4002f91	            0x31c0	                            xor eax, eax	      2119	move.c	FUNCTION_47
0x4002f93	    0x8b0500000000	            mov eax, dword [0x04002f99] 	      2135	move.c	FUNCTION_47	IF_1
0x4002f99	            0x85c0	                           test eax, eax	      2132	move.c	FUNCTION_47
0x4002f9b	          0x8d68ff	                      lea ebp, [rax - 1]	      2132	move.c	FUNCTION_47
0x4002f9e	        0x488b4178	            mov rax, qword [rcx + 0x78] 	      2141	move.c	FUNCTION_47	IF_2
0x4002fa2	     0xf4e2d000000	          cmovle ebp, dword [0x04002fa9]	      2132	move.c	FUNCTION_47
0x4002fa9	        0x4883f801	                              cmp rax, 1	      2141	move.c	FUNCTION_47	IF_2
0x4002fad	          0x4189ee	                           mov r14d, ebp	      2141	move.c	FUNCTION_47	IF_2
0x4002fb0	     0xf844a020000	                            je 0x4003200	      2141	move.c	FUNCTION_47	IF_2
0x4002fb6	    0xf681b4000000	           test byte [rcx + 0xb4], 0x20 	       590	move.c	FUNCTION_16	IF_1
0x4002fbd	     0xf84f5010000	                            je 0x40031b8	       590	move.c	FUNCTION_16	IF_1
0x4002fc3	    0x488b35000000	            mov rsi, qword [0x04002fca] 	      2149	move.c	FUNCTION_47	IF_4
0x4002fca	    0x488b91e80000	            mov rdx, qword [rcx + 0xe8] 	      2149	move.c	FUNCTION_47	IF_4
0x4002fd1	          0x488b36	                    mov rsi, qword [rsi]	      2149	move.c	FUNCTION_47	IF_4
0x4002fd4	        0x4883c601	                              add rsi, 1	      2149	move.c	FUNCTION_47	IF_4
0x4002fd8	          0x4839f2	                            cmp rdx, rsi	      2149	move.c	FUNCTION_47	IF_4
0x4002fdb	     0xf84ef010000	                            je 0x40031d0	      2149	move.c	FUNCTION_47	IF_4
0x4002fe1	        0x4c8b6938	            mov r13, qword [rcx + 0x38] 	      2165	move.c	FUNCTION_47
0x4002fe5	          0x4863f5	                         movsxd rsi, ebp	      2166	move.c	FUNCTION_47	IF_6
0x4002fe8	          0x4801c6	                            add rsi, rax	      2166	move.c	FUNCTION_47	IF_6
0x4002feb	          0x4939f5	                            cmp r13, rsi	      2166	move.c	FUNCTION_47	IF_6
0x4002fee	            0x7c12	                            jl 0x4003002	      2166	move.c	FUNCTION_47	IF_6
0x4002ff0	          0x4963f6	                        movsxd rsi, r14d	      2167	move.c	FUNCTION_47	IF_6
0x4002ff3	          0x4889d7	                            mov rdi, rdx	      2167	move.c	FUNCTION_47	IF_6
0x4002ff6	          0x4829f7	                            sub rdi, rsi	      2167	move.c	FUNCTION_47	IF_6
0x4002ff9	          0x4939fd	                            cmp r13, rdi	      2167	move.c	FUNCTION_47	IF_6
0x4002ffc	     0xf8c3e020000	                            jl 0x4003240	      2167	move.c	FUNCTION_47	IF_6
0x4003002	        0x488d7aff	                      lea rdi, [rdx - 1]	      2181	move.c	FUNCTION_47
0x4003006	    0x8b9984000000	            mov ebx, dword [rcx + 0x84] 	      2184	move.c	FUNCTION_47
0x400300c	    0x448ba1f40000	           mov r12d, dword [rcx + 0xf4] 	      2185	move.c	FUNCTION_47
0x4003013	      0x4889442408	                mov qword [rsp + 8], rax	      2180	move.c	FUNCTION_47
0x4003018	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2181	move.c	FUNCTION_47
0x400301d	           0xf1f00	                         nop dword [rax]	      2181	move.c	FUNCTION_47
0x4003020	            0x39eb	                            cmp ebx, ebp	      2187	move.c	FUNCTION_47	WHILE_1
0x4003022	            0x7c05	                            jl 0x4003029	      2187	move.c	FUNCTION_47	WHILE_1
0x4003024	          0x4539f4	                          cmp r12d, r14d	      2187	move.c	FUNCTION_47	WHILE_1
0x4003027	            0x7d37	                           jge 0x4003060	      2187	move.c	FUNCTION_47	WHILE_1
0x4003029	          0x4839f8	                            cmp rax, rdi	      2187	move.c	FUNCTION_47	WHILE_1
0x400302c	            0x7d32	                           jge 0x4003060	      2187	move.c	FUNCTION_47	WHILE_1
0x400302e	          0x4539f4	                          cmp r12d, r14d	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4003031	            0x7d7d	                           jge 0x40030b0	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4003033	          0x4439e3	                           cmp ebx, r12d	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4003036	     0xf8dbc000000	                           jge 0x40030f8	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400303c	            0x39eb	                            cmp ebx, ebp	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400303e	     0xf8db4000000	                           jge 0x40030f8	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4003044	            0x39eb	                            cmp ebx, ebp	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4003046	            0x7d0a	                           jge 0x4003052	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4003048	          0x4439e3	                           cmp ebx, r12d	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x400304b	            0x7c6b	                            jl 0x40030b8	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x400304d	          0x4539f4	                          cmp r12d, r14d	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4003050	            0x7d66	                           jge 0x40030b8	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4003052	            0x39eb	                            cmp ebx, ebp	      2187	move.c	FUNCTION_47	WHILE_1
0x4003054	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2187	move.c	FUNCTION_47	WHILE_1
0x4003059	            0x7cce	                            jl 0x4003029	      2187	move.c	FUNCTION_47	WHILE_1
0x400305b	          0x4539f4	                          cmp r12d, r14d	      2187	move.c	FUNCTION_47	WHILE_1
0x400305e	            0x7cc9	                            jl 0x4003029	      2187	move.c	FUNCTION_47	WHILE_1
0x4003060	          0x4839f8	                            cmp rax, rdi	      2215	move.c	FUNCTION_47	IF_12
0x4003063	    0x488b15000000	            mov rdx, qword [0x0400306a] 	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x400306a	     0xf84b0000000	                            je 0x4003120	      2215	move.c	FUNCTION_47	IF_12
0x4003070	          0x4885ff	                           test rdi, rdi	      2215	move.c	FUNCTION_47	IF_12
0x4003073	     0xf84a7000000	                            je 0x4003120	      2215	move.c	FUNCTION_47	IF_12
0x4003079	          0x4839f8	                            cmp rax, rdi	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x400307c	     0xf8fa6010000	                            jg 0x4003228	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x4003082	          0x4939c5	                            cmp r13, rax	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4003085	     0xf8ddc010000	                           jge 0x4003267	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x400308b	      0x48837a7801	               cmp qword [rdx + 0x78], 1	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4003090	     0xf8e01020000	                           jle 0x4003297	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4003096	        0x48894238	             mov qword [rdx + 0x38], rax	      2223	move.c	FUNCTION_47	ELSE_4	IF_14
0x400309a	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x40030a0	          0x83e0e4	                     and eax, 0xffffffe4	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x40030a3	    0x8982b4000000	             mov dword [rdx + 0xb4], eax	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x40030a9	            0xeb7f	                           jmp 0x400312a	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x40030ab	       0xf1f440000	                   nop dword [rax + rax]	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x40030b0	            0x39eb	                            cmp ebx, ebp	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x40030b2	     0xf8d68ffffff	                           jge 0x4003020	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x40030b8	      0x488d542408	                      lea rdx, [rsp + 8]	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40030bd	            0x31f6	                            xor esi, esi	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40030bf	          0x4889c7	                            mov rdi, rax	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40030c2	      0xe800000000	                          call 0x40030c7	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40030c7	            0x85c0	                           test eax, eax	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40030c9	     0xf8489000000	                            je 0x4003158	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40030cf	      0x488b442408	                mov rax, qword [rsp + 8]	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40030d4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40030d9	          0x83c301	                              add ebx, 1	      2203	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10
0x40030dc	          0x4839f8	                            cmp rax, rdi	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40030df	     0xf8c92000000	                            jl 0x4003177	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40030e5	        0x4883c001	                              add rax, 1	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40030e9	      0x4889442408	                mov qword [rsp + 8], rax	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40030ee	      0xe92dffffff	                           jmp 0x4003020	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40030f3	       0xf1f440000	                   nop dword [rax + rax]	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40030f8	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x40030fd	            0x31d2	                            xor edx, edx	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x40030ff	      0xe800000000	                          call 0x4003104	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4003104	            0x85c0	                           test eax, eax	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4003106	     0xf8494000000	                            je 0x40031a0	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x400310c	        0x4183c401	                             add r12d, 1	      2193	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8
0x4003110	    0x48836c241001	               sub qword [rsp + 0x10], 1	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4003116	      0x488b442408	                mov rax, qword [rsp + 8]	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x400311b	      0xe924ffffff	                           jmp 0x4003044	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4003120	        0x48894238	             mov qword [rdx + 0x38], rax	      2216	move.c	FUNCTION_47	IF_12
0x4003124	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2216	move.c	FUNCTION_47	IF_12
0x400312a	             0xc80	                             or al, 0x80	      2234	move.c	FUNCTION_47
0x400312c	    0x8982b4000000	             mov dword [rdx + 0xb4], eax	      2234	move.c	FUNCTION_47
0x4003132	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2235	move.c	FUNCTION_47
0x4003137	    0x644833042528	                xor rax, qword fs:[0x28]	      2235	move.c	FUNCTION_47
0x4003140	     0xf855c010000	                           jne 0x40032a2	      2235	move.c	FUNCTION_47
0x4003146	        0x4883c420	                           add rsp, 0x20	      2235	move.c	FUNCTION_47
0x400314a	              0x5b	                                 pop rbx	      2235	move.c	FUNCTION_47
0x400314b	              0x5d	                                 pop rbp	      2235	move.c	FUNCTION_47
0x400314c	            0x415c	                                 pop r12	      2235	move.c	FUNCTION_47
0x400314e	            0x415d	                                 pop r13	      2235	move.c	FUNCTION_47
0x4003150	            0x415e	                                 pop r14	      2235	move.c	FUNCTION_47
0x4003152	              0xc3	                                     ret	      2235	move.c	FUNCTION_47
0x4003153	       0xf1f440000	                   nop dword [rax + rax]	      2235	move.c	FUNCTION_47
0x4003158	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x400315d	      0xe800000000	                          call 0x4003162	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4003162	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x4003167	             0x1c3	                            add ebx, eax	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4003169	      0x488b442408	                mov rax, qword [rsp + 8]	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x400316e	          0x4839f8	                            cmp rax, rdi	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x4003171	     0xf8d6effffff	                           jge 0x40030e5	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x4003177	    0x488b3d000000	            mov rdi, qword [0x0400317e] 	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x400317e	        0x488d7001	                      lea rsi, [rax + 1]	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4003182	      0xe800000000	                          call 0x4003187	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4003187	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x400318c	             0x1c3	                            add ebx, eax	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x400318e	      0x488b442408	                mov rax, qword [rsp + 8]	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4003193	      0xe94dffffff	                           jmp 0x40030e5	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4003198	     0xf1f84000000	                   nop dword [rax + rax]	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40031a0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40031a5	      0xe800000000	                          call 0x40031aa	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40031aa	          0x4101c4	                           add r12d, eax	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40031ad	      0xe95effffff	                           jmp 0x4003110	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40031b2	    0x660f1f440000	                    nop word [rax + rax]	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40031b8	          0x4889cf	                            mov rdi, rcx	       591	move.c	FUNCTION_16	CALL_1
0x40031bb	      0xe810d8ffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x40031c0	    0x488b0d000000	            mov rcx, qword [0x040031c7] 	       591	move.c	FUNCTION_16	CALL_1
0x40031c7	        0x488b4178	            mov rax, qword [rcx + 0x78] 	       591	move.c	FUNCTION_16	CALL_1
0x40031cb	      0xe9f3fdffff	                           jmp 0x4002fc3	       591	move.c	FUNCTION_16	CALL_1
0x40031d0	    0x8b3500000000	            mov esi, dword [0x040031d6] 	      2151	move.c	FUNCTION_47	IF_4
0x40031d6	            0x85f6	                           test esi, esi	      2151	move.c	FUNCTION_47	IF_4
0x40031d8	     0xf8503feffff	                           jne 0x4002fe1	      2151	move.c	FUNCTION_47	IF_4
0x40031de	    0x8bb1a0000000	            mov esi, dword [rcx + 0xa0] 	      2156	move.c	FUNCTION_47	IF_4
0x40031e4	          0x83ee01	                              sub esi, 1	      2156	move.c	FUNCTION_47	IF_4
0x40031e7	            0x89f7	                            mov edi, esi	      2156	move.c	FUNCTION_47	IF_4
0x40031e9	          0xc1ef1f	                           shr edi, 0x1f	      2156	move.c	FUNCTION_47	IF_4
0x40031ec	             0x1fe	                            add esi, edi	      2156	move.c	FUNCTION_47	IF_4
0x40031ee	            0xd1fe	                              sar esi, 1	      2156	move.c	FUNCTION_47	IF_4
0x40031f0	            0x39f5	                            cmp ebp, esi	      2156	move.c	FUNCTION_47	IF_4
0x40031f2	           0xf4fee	                          cmovg ebp, esi	      2156	move.c	FUNCTION_47	IF_4
0x40031f5	          0x4531f6	                          xor r14d, r14d	      2155	move.c	FUNCTION_47	IF_4
0x40031f8	      0xe9e4fdffff	                           jmp 0x4002fe1	      2155	move.c	FUNCTION_47	IF_4
0x40031fd	           0xf1f00	                         nop dword [rax]	      2155	move.c	FUNCTION_47	IF_4
0x4003200	    0x8b91a0000000	            mov edx, dword [rcx + 0xa0] 	      2144	move.c	FUNCTION_47	IF_2
0x4003206	          0x4189d6	                           mov r14d, edx	      2144	move.c	FUNCTION_47	IF_2
0x4003209	        0x41c1ee1f	                          shr r14d, 0x1f	      2144	move.c	FUNCTION_47	IF_2
0x400320d	          0x4101d6	                           add r14d, edx	      2144	move.c	FUNCTION_47	IF_2
0x4003210	          0x41d1fe	                             sar r14d, 1	      2144	move.c	FUNCTION_47	IF_2
0x4003213	          0x4439f5	                           cmp ebp, r14d	      2144	move.c	FUNCTION_47	IF_2
0x4003216	        0x440f4ef5	                        cmovle r14d, ebp	      2144	move.c	FUNCTION_47	IF_2
0x400321a	            0x31ed	                            xor ebp, ebp	      2143	move.c	FUNCTION_47	IF_2
0x400321c	      0xe995fdffff	                           jmp 0x4002fb6	      2143	move.c	FUNCTION_47	IF_2
0x4003221	     0xf1f80000000	                         nop dword [rax]	      2143	move.c	FUNCTION_47	IF_2
0x4003228	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x400322c	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4003232	      0xe9f3feffff	                           jmp 0x400312a	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4003237	    0x660f1f840000	                    nop word [rax + rax]	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4003240	          0x4889cf	                            mov rdi, rcx	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003243	      0xe800000000	                          call 0x4003248	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003248	            0x85c0	                           test eax, eax	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x400324a	     0xf84e2feffff	                            je 0x4003132	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003250	    0x488b0d000000	            mov rcx, qword [0x04003257] 	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003257	        0x488b4178	            mov rax, qword [rcx + 0x78] 	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x400325b	    0x488b91e80000	            mov rdx, qword [rcx + 0xe8] 	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003262	      0xe99bfdffff	                           jmp 0x4003002	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4003267	          0x4939fd	                            cmp r13, rdi	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400326a	            0x7e2b	                           jle 0x4003297	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400326c	    0x488b05000000	            mov rax, qword [0x04003273] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4003273	          0x488b00	                    mov rax, qword [rax]	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4003276	    0x483982e80000	            cmp qword [rdx + 0xe8], rax 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400327d	            0x7f18	                            jg 0x4003297	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400327f	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x4003285	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2229	move.c	FUNCTION_47	ELSE_4	IF_15
0x4003289	          0x83e0e4	                     and eax, 0xffffffe4	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x400328c	    0x8982b4000000	             mov dword [rdx + 0xb4], eax	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x4003292	      0xe993feffff	                           jmp 0x400312a	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x4003297	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x400329d	      0xe988feffff	                           jmp 0x400312a	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40032a2	      0xe800000000	                          call 0x40032a7	      2235	move.c	FUNCTION_47
max_topfill	ELSE,1:CALL,2:DO,0:SWITCH,0:functions,0:IF,2:FOR,0:WHILE,0	32
0x4000040	              0x55	                                push rbp	      1394	move.c	FUNCTION_36
0x4000041	              0x53	                                push rbx	      1394	move.c	FUNCTION_36
0x4000042	        0x4883ec08	                              sub rsp, 8	      1394	move.c	FUNCTION_36
0x4000046	    0x488b05000000	            mov rax, qword [0x0400004d] 	      1397	move.c	FUNCTION_36	CALL_1
0x400004d	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1397	move.c	FUNCTION_36	CALL_1
0x4000051	      0xe800000000	                          call 0x4000056	      1397	move.c	FUNCTION_36	CALL_1
0x4000056	    0x488b1d000000	            mov rbx, qword [0x0400005d] 	      1398	move.c	FUNCTION_36	IF_1
0x400005d	    0x3b83a0000000	            cmp eax, dword [rbx + 0xa0] 	      1398	move.c	FUNCTION_36	IF_1
0x4000063	            0x7c1b	                            jl 0x4000080	      1398	move.c	FUNCTION_36	IF_1
0x4000065	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1399	move.c	FUNCTION_36	IF_1
0x400006f	        0x4883c408	                              add rsp, 8	      1406	move.c	FUNCTION_36
0x4000073	              0x5b	                                 pop rbx	      1406	move.c	FUNCTION_36
0x4000074	              0x5d	                                 pop rbp	      1406	move.c	FUNCTION_36
0x4000075	              0xc3	                                     ret	      1406	move.c	FUNCTION_36
0x4000076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1406	move.c	FUNCTION_36
0x4000080	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4000084	          0x4889df	                            mov rdi, rbx	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4000087	            0x89c5	                            mov ebp, eax	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4000089	      0xe800000000	                          call 0x400008e	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x400008e	    0x488b15000000	            mov rdx, qword [0x04000095] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4000095	    0x898384000000	             mov dword [rbx + 0x84], eax	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x400009b	    0x8b8a84000000	            mov ecx, dword [rdx + 0x84] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x40000a1	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x40000a7	             0x1e9	                            add ecx, ebp	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x40000a9	            0x39c1	                            cmp ecx, eax	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x40000ab	            0x7ec2	                           jle 0x400006f	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x40000ad	            0x29e8	                            sub eax, ebp	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x40000af	    0x898284000000	             mov dword [rdx + 0x84], eax	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x40000b5	        0x4883c408	                              add rsp, 8	      1406	move.c	FUNCTION_36
0x40000b9	              0x5b	                                 pop rbx	      1406	move.c	FUNCTION_36
0x40000ba	              0x5d	                                 pop rbp	      1406	move.c	FUNCTION_36
0x40000bb	              0xc3	                                     ret	      1406	move.c	FUNCTION_36
cursor_valid	ELSE,0:CALL,1:DO,0:SWITCH,0:functions,0:IF,0:FOR,0:WHILE,0	9
0x4000d30	    0x488b3d000000	            mov rdi, qword [0x04000d37] 	       622	move.c	FUNCTION_20	CALL_1
0x4000d37	      0xe800000000	                          call 0x4000d3c	       622	move.c	FUNCTION_20	CALL_1
0x4000d3c	    0x488b05000000	            mov rax, qword [0x04000d43] 	       623	move.c	FUNCTION_20
0x4000d43	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       623	move.c	FUNCTION_20
0x4000d49	          0x83e003	                              and eax, 3	       623	move.c	FUNCTION_20
0x4000d4c	          0x83f803	                              cmp eax, 3	       623	move.c	FUNCTION_20
0x4000d4f	           0xf94c0	                                 sete al	       623	move.c	FUNCTION_20
0x4000d52	           0xfb6c0	                           movzx eax, al	       623	move.c	FUNCTION_20
0x4000d55	              0xc3	                                     ret	       625	move.c	FUNCTION_20
