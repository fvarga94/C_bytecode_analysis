buf_spname	IF,6:WHILE,0:DO,0:SWITCH,0:CALL,8:FOR,0:functions,0:ELSE,1	70
0x4003240	          0x4885ff	                           test rdi, rdi	      5600	buffer.c	FUNCTION_77
0x4003243	            0x741e	                            je 0x4003263	      5600	buffer.c	FUNCTION_77
0x4003245	    0x488b97181400	          mov rdx, qword [rdi + 0x1418] 	      5600	buffer.c	FUNCTION_77
0x400324c	           0xfb602	                   movzx eax, byte [rdx]	      5600	buffer.c	FUNCTION_77
0x400324f	            0x3c71	                            cmp al, 0x71	      5600	buffer.c	FUNCTION_77
0x4003251	            0x7425	                            je 0x4003278	      5600	buffer.c	FUNCTION_77
0x4003253	            0x3c6e	                            cmp al, 0x6e	      5628	buffer.c	FUNCTION_80
0x4003255	            0x7479	                            je 0x40032d0	      5628	buffer.c	FUNCTION_80
0x4003257	            0x3c61	                            cmp al, 0x61	      5629	buffer.c	FUNCTION_80
0x4003259	     0xf8481000000	                            je 0x40032e0	      5629	buffer.c	FUNCTION_80
0x400325f	            0x3c74	                            cmp al, 0x74	      5630	buffer.c	FUNCTION_80
0x4003261	            0x747d	                            je 0x40032e0	      5630	buffer.c	FUNCTION_80
0x4003263	    0x4883bf980000	               cmp qword [rdi + 0x98], 0	      5708	buffer.c	FUNCTION_84	IF_6
0x400326b	     0xf84a7000000	                            je 0x4003318	      5708	buffer.c	FUNCTION_84	IF_6
0x4003271	            0x31c0	                            xor eax, eax	      5710	buffer.c	FUNCTION_84
0x4003273	              0xc3	                                     ret	      5710	buffer.c	FUNCTION_84
0x4003274	         0xf1f4000	                         nop dword [rax]	      5710	buffer.c	FUNCTION_84
0x4003278	    0x488b15000000	            mov rdx, qword [0x0400327f] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400327f	          0x4885d2	                           test rdx, rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0x4003282	            0x743b	                            je 0x40032bf	      5768	buffer.c	FUNCTION_87	CALL_1
0x4003284	    0x488b0d000000	            mov rcx, qword [0x0400328b] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400328b	    0x488b35000000	            mov rsi, qword [0x04003292] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4003292	          0x4839ca	                            cmp rdx, rcx	      5768	buffer.c	FUNCTION_87	CALL_1
0x4003295	     0xf84a5000000	                            je 0x4003340	      5768	buffer.c	FUNCTION_87	CALL_1
0x400329b	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400329f	            0xeb11	                           jmp 0x40032b2	      5768	buffer.c	FUNCTION_87	CALL_1
0x40032a1	     0xf1f80000000	                         nop dword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x40032a8	        0x483b7808	                cmp rdi, qword [rax + 8]	      5769	buffer.c	FUNCTION_87	IF_1
0x40032ac	            0x744a	                            je 0x40032f8	      5769	buffer.c	FUNCTION_87	IF_1
0x40032ae	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x40032b2	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x40032b5	            0x75f1	                           jne 0x40032a8	      5768	buffer.c	FUNCTION_87	CALL_1
0x40032b7	          0x488b12	                    mov rdx, qword [rdx]	      5768	buffer.c	FUNCTION_87	CALL_1
0x40032ba	          0x4885d2	                           test rdx, rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0x40032bd	            0x75d3	                           jne 0x4003292	      5768	buffer.c	FUNCTION_87	CALL_1
0x40032bf	      0xba05000000	                              mov edx, 5	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x40032c4	      0xbe00000000	                              mov esi, 0	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x40032c9	            0x31ff	                            xor edi, edi	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x40032cb	      0xe900000000	                           jmp 0x40032d0	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x40032d0	        0x807a0266	                cmp byte [rdx + 2], 0x66	      5628	buffer.c	FUNCTION_80
0x40032d4	            0x758d	                           jne 0x4003263	      5628	buffer.c	FUNCTION_80
0x40032d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5628	buffer.c	FUNCTION_80
0x40032e0	    0x488b87481c00	          mov rax, qword [rdi + 0x1c48] 	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x40032e7	          0x4885c0	                           test rax, rax	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x40032ea	            0x743d	                            je 0x4003329	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x40032ec	          0x4889c7	                            mov rdi, rax	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x40032ef	      0xe900000000	                           jmp 0x40032f4	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x40032f4	         0xf1f4000	                         nop dword [rax]	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x40032f8	    0x4883b8501900	             cmp qword [rax + 0x1950], 0	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4003300	            0x74bd	                            je 0x40032bf	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4003302	      0xba05000000	                              mov edx, 5	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4003307	      0xbe00000000	                              mov esi, 0	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x400330c	            0x31ff	                            xor edi, edi	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x400330e	      0xe900000000	                           jmp 0x4003313	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4003313	       0xf1f440000	                   nop dword [rax + rax]	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4003318	      0xba05000000	                              mov edx, 5	      5709	buffer.c	FUNCTION_84	CALL_8
0x400331d	      0xbe00000000	                              mov esi, 0	      5709	buffer.c	FUNCTION_84	CALL_8
0x4003322	            0x31ff	                            xor edi, edi	      5709	buffer.c	FUNCTION_84	CALL_8
0x4003324	      0xe900000000	                           jmp 0x4003329	      5709	buffer.c	FUNCTION_84	CALL_8
0x4003329	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4003330	          0x4885c0	                           test rax, rax	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4003333	            0x7413	                            je 0x4003348	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4003335	            0xf3c3	                                     ret	      5711	buffer.c	FUNCTION_84
0x4003337	    0x660f1f840000	                    nop word [rax + rax]	      5711	buffer.c	FUNCTION_84
0x4003340	          0x4889f0	                            mov rax, rsi	      5768	buffer.c	FUNCTION_87	CALL_1
0x4003343	      0xe96affffff	                           jmp 0x40032b2	      5768	buffer.c	FUNCTION_87	CALL_1
0x4003348	      0xba05000000	                              mov edx, 5	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x400334d	      0xbe00000000	                              mov esi, 0	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4003352	            0x31ff	                            xor edi, edi	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4003354	      0xe900000000	                           jmp 0x4003359	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
buf_clear_file	IF,0:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0	15
0x4000e40	              0x53	                                push rbx	       693	buffer.c	FUNCTION_9
0x4000e41	      0xbe01000000	                              mov esi, 1	       695	buffer.c	FUNCTION_9	CALL_1
0x4000e46	          0x4889fb	                            mov rbx, rdi	       693	buffer.c	FUNCTION_9
0x4000e49	    0x48c707010000	                      mov qword [rdi], 1	       694	buffer.c	FUNCTION_9
0x4000e50	      0xe800000000	                          call 0x4000e55	       695	buffer.c	FUNCTION_9	CALL_1
0x4000e55	    0xc78360170000	            mov dword [rbx + 0x1760], 0 	       696	buffer.c	FUNCTION_9
0x4000e5f	    0xc78370140000	            mov dword [rbx + 0x1470], 1 	       697	buffer.c	FUNCTION_9
0x4000e69	          0x4889df	                            mov rdi, rbx	       706	buffer.c	FUNCTION_9	CALL_2
0x4000e6c	    0xc78300170000	            mov dword [rbx + 0x1700], 1 	       698	buffer.c	FUNCTION_9
0x4000e76	    0xc7830c140000	            mov dword [rbx + 0x140c], 0 	       700	buffer.c	FUNCTION_9
0x4000e80	    0xc78314170000	            mov dword [rbx + 0x1714], 0 	       701	buffer.c	FUNCTION_9
0x4000e8a	    0x48c743080000	                  mov qword [rbx + 8], 0	       703	buffer.c	FUNCTION_9
0x4000e92	    0xc74310010000	               mov dword [rbx + 0x10], 1	       704	buffer.c	FUNCTION_9
0x4000e99	              0x5b	                                 pop rbx	       708	buffer.c	FUNCTION_9
0x4000e9a	      0xe900000000	                           jmp 0x4000e9f	       706	buffer.c	FUNCTION_9	CALL_2
ti_change	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:ELSE,1	44
0x4000210	            0x4154	                                push r12	      3763	buffer.c	FUNCTION_62
0x4000212	              0x55	                                push rbp	      3763	buffer.c	FUNCTION_62
0x4000213	          0x4885ff	                           test rdi, rdi	      3764	buffer.c	FUNCTION_62	IF_1
0x4000216	              0x53	                                push rbx	      3763	buffer.c	FUNCTION_62
0x4000217	          0x488b2e	                    mov rbp, qword [rsi]	      3764	buffer.c	FUNCTION_62	IF_1
0x400021a	           0xf94c2	                                 sete dl	      3764	buffer.c	FUNCTION_62	IF_1
0x400021d	          0x4889fb	                            mov rbx, rdi	      3763	buffer.c	FUNCTION_62
0x4000220	          0x4989f4	                            mov r12, rsi	      3763	buffer.c	FUNCTION_62
0x4000223	          0x4885ed	                           test rbp, rbp	      3764	buffer.c	FUNCTION_62	IF_1
0x4000226	           0xf94c0	                                 sete al	      3764	buffer.c	FUNCTION_62	IF_1
0x4000229	            0x38c2	                              cmp dl, al	      3764	buffer.c	FUNCTION_62	IF_1
0x400022b	            0x7423	                            je 0x4000250	      3764	buffer.c	FUNCTION_62	IF_1
0x400022d	          0x4889ef	                            mov rdi, rbp	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4000230	      0xe800000000	                          call 0x4000235	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4000235	          0x4885db	                           test rbx, rbx	      3768	buffer.c	FUNCTION_62	IF_1	IF_2
0x4000238	            0x7436	                            je 0x4000270	      3768	buffer.c	FUNCTION_62	IF_1	IF_2
0x400023a	          0x4889df	                            mov rdi, rbx	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x400023d	      0xe800000000	                          call 0x4000242	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4000242	        0x49890424	                    mov qword [r12], rax	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4000246	      0xb801000000	                              mov eax, 1	      3772	buffer.c	FUNCTION_62	IF_1
0x400024b	              0x5b	                                 pop rbx	      3775	buffer.c	FUNCTION_62
0x400024c	              0x5d	                                 pop rbp	      3775	buffer.c	FUNCTION_62
0x400024d	            0x415c	                                 pop r12	      3775	buffer.c	FUNCTION_62
0x400024f	              0xc3	                                     ret	      3775	buffer.c	FUNCTION_62
0x4000250	          0x4885ed	                           test rbp, rbp	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000253	            0x7433	                            je 0x4000288	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000255	          0x4885ff	                           test rdi, rdi	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000258	            0x742e	                            je 0x4000288	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400025a	          0x4889ee	                            mov rsi, rbp	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400025d	      0xe800000000	                          call 0x4000262	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000262	            0x85c0	                           test eax, eax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000264	            0x74e5	                            je 0x400024b	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4000266	          0x4889ef	                            mov rdi, rbp	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4000269	      0xe800000000	                          call 0x400026e	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x400026e	            0xebca	                           jmp 0x400023a	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4000270	              0x5b	                                 pop rbx	      3775	buffer.c	FUNCTION_62
0x4000271	    0x49c704240000	                      mov qword [r12], 0	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x4000279	      0xb801000000	                              mov eax, 1	      3772	buffer.c	FUNCTION_62	IF_1
0x400027e	              0x5d	                                 pop rbp	      3775	buffer.c	FUNCTION_62
0x400027f	            0x415c	                                 pop r12	      3775	buffer.c	FUNCTION_62
0x4000281	              0xc3	                                     ret	      3775	buffer.c	FUNCTION_62
0x4000282	    0x660f1f440000	                    nop word [rax + rax]	      3775	buffer.c	FUNCTION_62
0x4000288	            0x31c0	                            xor eax, eax	      3774	buffer.c	FUNCTION_62
0x400028a	            0xebbf	                           jmp 0x400024b	      3774	buffer.c	FUNCTION_62
switch_to_win_for_buf	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,5:FOR,0:functions,0:ELSE,1	66
0x4006620	            0x4155	                                push r13	      5730	buffer.c	FUNCTION_85
0x4006622	            0x4154	                                push r12	      5730	buffer.c	FUNCTION_85
0x4006624	              0x55	                                push rbp	      5730	buffer.c	FUNCTION_85
0x4006625	              0x53	                                push rbx	      5730	buffer.c	FUNCTION_85
0x4006626	        0x4883ec08	                              sub rsp, 8	      5730	buffer.c	FUNCTION_85
0x400662a	    0x4c8b0d000000	              mov r9, qword [0x04006631]	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006631	          0x4d85c9	                             test r9, r9	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006634	            0x7431	                            je 0x4006667	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006636	    0x4c8b05000000	              mov r8, qword [0x0400663d]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400663d	    0x4c8b15000000	            mov r10, qword [0x04006644] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006644	          0x4d39c1	                              cmp r9, r8	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006647	            0x746f	                            je 0x40066b8	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006649	        0x498b4120	              mov rax, qword [r9 + 0x20]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400664d	            0xeb0b	                           jmp 0x400665a	      5768	buffer.c	FUNCTION_87	CALL_1
0x400664f	              0x90	                                     nop	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006650	        0x483b7808	                cmp rdi, qword [rax + 8]	      5769	buffer.c	FUNCTION_87	IF_1
0x4006654	            0x742a	                            je 0x4006680	      5769	buffer.c	FUNCTION_87	IF_1
0x4006656	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400665a	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x400665d	            0x75f1	                           jne 0x4006650	      5768	buffer.c	FUNCTION_87	CALL_1
0x400665f	          0x4d8b09	                      mov r9, qword [r9]	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006662	          0x4d85c9	                             test r9, r9	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006665	            0x75dd	                           jne 0x4006644	      5768	buffer.c	FUNCTION_87	CALL_1
0x4006667	        0x4883c408	                              add rsp, 8	      5741	buffer.c	FUNCTION_85
0x400666b	          0x4889fe	                            mov rsi, rdi	      5735	buffer.c	FUNCTION_85	CALL_2
0x400666e	          0x4889cf	                            mov rdi, rcx	      5735	buffer.c	FUNCTION_85	CALL_2
0x4006671	              0x5b	                                 pop rbx	      5741	buffer.c	FUNCTION_85
0x4006672	              0x5d	                                 pop rbp	      5741	buffer.c	FUNCTION_85
0x4006673	            0x415c	                                 pop r12	      5741	buffer.c	FUNCTION_85
0x4006675	            0x415d	                                 pop r13	      5741	buffer.c	FUNCTION_85
0x4006677	      0xe900000000	                           jmp 0x400667c	      5735	buffer.c	FUNCTION_85	CALL_2
0x400667c	         0xf1f4000	                         nop dword [rax]	      5735	buffer.c	FUNCTION_85	CALL_2
0x4006680	          0x4989d5	                            mov r13, rdx	      5735	buffer.c	FUNCTION_85	CALL_2
0x4006683	          0x4889f5	                            mov rbp, rsi	      5735	buffer.c	FUNCTION_85	CALL_2
0x4006686	          0x4989cc	                            mov r12, rcx	      5735	buffer.c	FUNCTION_85	CALL_2
0x4006689	          0x4889fb	                            mov rbx, rdi	      5735	buffer.c	FUNCTION_85	CALL_2
0x400668c	    0x41b801000000	                              mov r8d, 1	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x4006692	          0x4c89c9	                             mov rcx, r9	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x4006695	          0x4889c2	                            mov rdx, rax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x4006698	          0x4c89ee	                            mov rsi, r13	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400669b	          0x4889ef	                            mov rdi, rbp	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400669e	      0xe800000000	                          call 0x40066a3	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x40066a3	            0x85c0	                           test eax, eax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x40066a5	            0x7419	                            je 0x40066c0	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x40066a7	        0x4883c408	                              add rsp, 8	      5741	buffer.c	FUNCTION_85
0x40066ab	              0x5b	                                 pop rbx	      5741	buffer.c	FUNCTION_85
0x40066ac	              0x5d	                                 pop rbp	      5741	buffer.c	FUNCTION_85
0x40066ad	            0x415c	                                 pop r12	      5741	buffer.c	FUNCTION_85
0x40066af	            0x415d	                                 pop r13	      5741	buffer.c	FUNCTION_85
0x40066b1	              0xc3	                                     ret	      5741	buffer.c	FUNCTION_85
0x40066b2	    0x660f1f440000	                    nop word [rax + rax]	      5741	buffer.c	FUNCTION_85
0x40066b8	          0x4c89d0	                            mov rax, r10	      5768	buffer.c	FUNCTION_87	CALL_1
0x40066bb	            0xeb9d	                           jmp 0x400665a	      5768	buffer.c	FUNCTION_87	CALL_1
0x40066bd	           0xf1f00	                         nop dword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x40066c0	        0x498b7500	                    mov rsi, qword [r13]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x40066c4	        0x488b7d00	                    mov rdi, qword [rbp]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x40066c8	      0xba01000000	                              mov edx, 1	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x40066cd	      0xe800000000	                          call 0x40066d2	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x40066d2	        0x4883c408	                              add rsp, 8	      5741	buffer.c	FUNCTION_85
0x40066d6	          0x4889de	                            mov rsi, rbx	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x40066d9	          0x4c89e7	                            mov rdi, r12	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x40066dc	              0x5b	                                 pop rbx	      5741	buffer.c	FUNCTION_85
0x40066dd	              0x5d	                                 pop rbp	      5741	buffer.c	FUNCTION_85
0x40066de	            0x415c	                                 pop r12	      5741	buffer.c	FUNCTION_85
0x40066e0	            0x415d	                                 pop r13	      5741	buffer.c	FUNCTION_85
0x40066e2	      0xe900000000	                           jmp 0x40066e7	      5735	buffer.c	FUNCTION_85	CALL_2
restore_win_for_buf	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,1	7
0x40066f0	        0x48833a00	                      cmp qword [rdx], 0	      5749	buffer.c	FUNCTION_86	IF_1
0x40066f4	            0x740a	                            je 0x4006700	      5749	buffer.c	FUNCTION_86	IF_1
0x40066f6	          0x4889d7	                            mov rdi, rdx	      5752	buffer.c	FUNCTION_86	CALL_2
0x40066f9	      0xe900000000	                           jmp 0x40066fe	      5752	buffer.c	FUNCTION_86	CALL_2
0x40066fe	            0x6690	                                     nop	      5752	buffer.c	FUNCTION_86	CALL_2
0x4006700	      0xba01000000	                              mov edx, 1	      5750	buffer.c	FUNCTION_86	CALL_1
0x4006705	      0xe900000000	                           jmp 0x400670a	      5750	buffer.c	FUNCTION_86	CALL_1
buf_findsign	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,0:FOR,1:functions,0:ELSE,0	18
0x40069b0	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      5987	buffer.c	FUNCTION_93	FOR_1
0x40069b7	          0x4885c0	                           test rax, rax	      5987	buffer.c	FUNCTION_93	FOR_1
0x40069ba	            0x7428	                            je 0x40069e4	      5987	buffer.c	FUNCTION_93	FOR_1
0x40069bc	            0x3b30	                    cmp esi, dword [rax]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x40069be	            0x750c	                           jne 0x40069cc	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x40069c0	            0xeb1e	                           jmp 0x40069e0	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x40069c2	    0x660f1f440000	                    nop word [rax + rax]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x40069c8	            0x3930	                    cmp dword [rax], esi	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x40069ca	            0x7414	                            je 0x40069e0	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x40069cc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5987	buffer.c	FUNCTION_93	FOR_1
0x40069d0	          0x4885c0	                           test rax, rax	      5987	buffer.c	FUNCTION_93	FOR_1
0x40069d3	            0x75f3	                           jne 0x40069c8	      5987	buffer.c	FUNCTION_93	FOR_1
0x40069d5	            0xf3c3	                                     ret	      5987	buffer.c	FUNCTION_93	FOR_1
0x40069d7	    0x660f1f840000	                    nop word [rax + rax]	      5987	buffer.c	FUNCTION_93	FOR_1
0x40069e0	          0x8b4008	                mov eax, dword [rax + 8]	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x40069e3	              0xc3	                                     ret	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x40069e4	            0x31c0	                            xor eax, eax	      5991	buffer.c	FUNCTION_93
0x40069e6	              0xc3	                                     ret	      5992	buffer.c	FUNCTION_93
fileinfo	IF,10:WHILE,0:DO,0:SWITCH,0:CALL,38:FOR,0:functions,0:ELSE,8	323
0x40038e0	            0x4157	                                push r15	      3401	buffer.c	FUNCTION_59
0x40038e2	            0x4156	                                push r14	      3401	buffer.c	FUNCTION_59
0x40038e4	            0x4155	                                push r13	      3401	buffer.c	FUNCTION_59
0x40038e6	            0x4154	                                push r12	      3401	buffer.c	FUNCTION_59
0x40038e8	          0x4189d5	                           mov r13d, edx	      3401	buffer.c	FUNCTION_59
0x40038eb	              0x55	                                push rbp	      3401	buffer.c	FUNCTION_59
0x40038ec	              0x53	                                push rbx	      3401	buffer.c	FUNCTION_59
0x40038ed	            0x89fd	                            mov ebp, edi	      3401	buffer.c	FUNCTION_59
0x40038ef	      0xbf01040000	                          mov edi, 0x401	      3408	buffer.c	FUNCTION_59	CALL_1
0x40038f4	          0x4189f4	                           mov r12d, esi	      3401	buffer.c	FUNCTION_59
0x40038f7	        0x4883ec18	                           sub rsp, 0x18	      3401	buffer.c	FUNCTION_59
0x40038fb	      0xe800000000	                          call 0x4003900	      3408	buffer.c	FUNCTION_59	CALL_1
0x4003900	          0x4885c0	                           test rax, rax	      3409	buffer.c	FUNCTION_59	IF_1
0x4003903	     0xf8407050000	                            je 0x4003e10	      3409	buffer.c	FUNCTION_59	IF_1
0x4003909	          0x83fd01	                              cmp ebp, 1	      3412	buffer.c	FUNCTION_59	IF_2
0x400390c	          0x4889c3	                            mov rbx, rax	      3412	buffer.c	FUNCTION_59	IF_2
0x400390f	            0x7e2c	                           jle 0x400393d	      3412	buffer.c	FUNCTION_59	IF_2
0x4003911	    0x488b05000000	            mov rax, qword [0x04003918] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4003918	      0xba00000000	                              mov edx, 0	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400391d	      0xbe01040000	                          mov esi, 0x401	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4003922	          0x4889df	                            mov rdi, rbx	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4003925	    0x8b88b8000000	            mov ecx, dword [rax + 0xb8] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400392b	            0x31c0	                            xor eax, eax	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400392d	      0xe800000000	                          call 0x4003932	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4003932	          0x4889df	                            mov rdi, rbx	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x4003935	      0xe800000000	                          call 0x400393a	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x400393a	          0x4801d8	                            add rax, rbx	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x400393d	          0xc60022	                    mov byte [rax], 0x22	      3420	buffer.c	FUNCTION_59
0x4003940	    0x488b3d000000	            mov rdi, qword [0x04003947] 	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4003947	        0x4c8d7001	                      lea r14, [rax + 1]	      3420	buffer.c	FUNCTION_59
0x400394b	      0xe800000000	                          call 0x4003950	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4003950	          0x4885c0	                           test rax, rax	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4003953	     0xf846f030000	                            je 0x4003cc8	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x4003959	    0x488b3d000000	            mov rdi, qword [0x04003960] 	      3422	buffer.c	FUNCTION_59	CALL_6
0x4003960	      0xe800000000	                          call 0x4003965	      3422	buffer.c	FUNCTION_59	CALL_6
0x4003965	          0x4889da	                            mov rdx, rbx	      3422	buffer.c	FUNCTION_59	CALL_6
0x4003968	          0x4889c6	                            mov rsi, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x400396b	          0x4c89f7	                            mov rdi, r14	      3422	buffer.c	FUNCTION_59	CALL_6
0x400396e	          0x4c29f2	                            sub rdx, r14	      3422	buffer.c	FUNCTION_59	CALL_6
0x4003971	    0x4881c2000400	                          add rdx, 0x400	      3422	buffer.c	FUNCTION_59	CALL_6
0x4003978	      0xe800000000	                          call 0x400397d	      3422	buffer.c	FUNCTION_59	CALL_6
0x400397d	      0xe800000000	                          call 0x4003982	      3449	buffer.c	FUNCTION_59	CALL_20
0x4003982	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003984	    0x488b05000000	            mov rax, qword [0x0400398b] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x400398b	     0xf8417020000	                            je 0x4003ba8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003991	    0x448b88601500	          mov r9d, dword [rax + 0x1560] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003998	          0x4585c9	                           test r9d, r9d	      3433	buffer.c	FUNCTION_59	CALL_8
0x400399b	     0xf8523020000	                           jne 0x4003bc4	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039a1	          0x8b507c	            mov edx, dword [rax + 0x7c] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039a4	    0x41bf00000000	                             mov r15d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039aa	    0x41be00000000	                             mov r14d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039b0	          0xf6c240	                           test dl, 0x40	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039b3	      0xbd00000000	                              mov ebp, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039b8	     0xf854b020000	                           jne 0x4003c09	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039be	          0xf6c210	                           test dl, 0x10	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039c1	     0xf8569020000	                           jne 0x4003c30	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039c7	    0x41bc00000000	                             mov r12d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039cd	          0x83e208	                              and edx, 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039d0	          0x4d89e0	                             mov r8, r12	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039d3	            0x742e	                            je 0x4003a03	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039d5	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x40039dc	           0xfb600	                   movzx eax, byte [rax]	      5639	buffer.c	FUNCTION_81
0x40039df	            0x3c6e	                            cmp al, 0x6e	      5639	buffer.c	FUNCTION_81
0x40039e1	     0xf848a020000	                            je 0x4003c71	      5639	buffer.c	FUNCTION_81
0x40039e7	            0x3c74	                            cmp al, 0x74	      5639	buffer.c	FUNCTION_81
0x40039e9	     0xf8482020000	                            je 0x4003c71	      5639	buffer.c	FUNCTION_81
0x40039ef	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039f4	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039f9	            0x31ff	                            xor edi, edi	      3433	buffer.c	FUNCTION_59	CALL_8
0x40039fb	      0xe800000000	                          call 0x4003a00	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a00	          0x4989c0	                             mov r8, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a03	      0x4c89442408	                 mov qword [rsp + 8], r8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a08	      0xe800000000	                          call 0x4003a0d	      3434	buffer.c	FUNCTION_59	CALL_10
0x4003a0d	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a0f	      0xb900000000	                              mov ecx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a14	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a19	     0xf85e9020000	                           jne 0x4003d08	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a1f	        0x4883ec08	                              sub rsp, 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a23	          0x4889df	                            mov rdi, rbx	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a26	            0x31c0	                            xor eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a28	            0x4157	                                push r15	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a2a	            0x4156	                                push r14	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a2c	          0x4d89e1	                             mov r9, r12	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a2f	              0x55	                                push rbp	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a30	      0xba00000000	                              mov edx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a35	      0xbe01040000	                          mov esi, 0x401	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a3a	      0xe800000000	                          call 0x4003a3f	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003a3f	    0x488b05000000	            mov rax, qword [0x04003a46] 	      3454	buffer.c	FUNCTION_59	IF_5
0x4003a46	        0x4883c420	                           add rsp, 0x20	      3454	buffer.c	FUNCTION_59	IF_5
0x4003a4a	    0x488b3d000000	            mov rdi, qword [0x04003a51] 	      3456	buffer.c	FUNCTION_59	IF_5
0x4003a51	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      3454	buffer.c	FUNCTION_59	IF_5
0x4003a55	    0x4881fd40420f	                        cmp rbp, 0xf4240	      3454	buffer.c	FUNCTION_59	IF_5
0x4003a5c	     0xf8fde000000	                            jg 0x4003b40	      3454	buffer.c	FUNCTION_59	IF_5
0x4003a62	      0x488d44ad00	                  lea rax, [rbp + rbp*4]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4003a67	        0x488d0480	                  lea rax, [rax + rax*4]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4003a6b	        0x48c1e002	                              shl rax, 2	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4003a6f	            0x4899	                                     cqo	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4003a71	          0x48f73f	                        idiv qword [rdi]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4003a74	        0xf6471001	               test byte [rdi + 0x10], 1	      3460	buffer.c	FUNCTION_59	IF_6
0x4003a78	          0x4989c4	                            mov r12, rax	      3458	buffer.c	FUNCTION_59	ELSE_4
0x4003a7b	     0xf85f6000000	                           jne 0x4003b77	      3460	buffer.c	FUNCTION_59	IF_6
0x4003a81	    0x448b05000000	            mov r8d, dword [0x04003a88] 	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x4003a88	          0x4585c0	                           test r8d, r8d	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x4003a8b	     0xf84df020000	                            je 0x4003d70	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x4003a91	          0x488b2f	                    mov rbp, qword [rdi]	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x4003a94	      0xba05000000	                              mov edx, 5	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003a99	        0x4883fd01	                              cmp rbp, 1	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x4003a9d	     0xf843d030000	                            je 0x4003de0	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x4003aa3	      0xbe00000000	                              mov esi, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003aa8	            0x31ff	                            xor edi, edi	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003aaa	      0xe800000000	                          call 0x4003aaf	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003aaf	          0x4589e0	                           mov r8d, r12d	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003ab2	          0x4889c2	                            mov rdx, rax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003ab5	          0x4889e9	                            mov rcx, rbp	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003ab8	      0xbe01040000	                          mov esi, 0x401	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003abd	          0x4889df	                            mov rdi, rbx	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003ac0	            0x31c0	                            xor eax, eax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003ac2	      0xe800000000	                          call 0x4003ac7	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4003ac7	      0xbf66000000	                           mov edi, 0x66	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003acc	      0xe800000000	                          call 0x4003ad1	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003ad1	    0x488b3d000000	            mov rdi, qword [0x04003ad8] 	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003ad8	          0x4531c0	                            xor r8d, r8d	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003adb	            0x85c0	                           test eax, eax	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003add	        0x410f94c0	                                sete r8b	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003ae1	      0xb901040000	                          mov ecx, 0x401	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003ae6	          0x4889da	                            mov rdx, rbx	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003ae9	    0x488db78c0100	                  lea rsi, [rdi + 0x18c]	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003af0	    0x4881c7880100	                          add rdi, 0x188	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003af7	      0xe884ceffff	       call sym.append_arg_number.isra.9	      3488	buffer.c	FUNCTION_59	CALL_33
0x4003afc	          0x4585ed	                         test r13d, r13d	      3490	buffer.c	FUNCTION_59	IF_9
0x4003aff	     0xf847b010000	                            je 0x4003c80	      3490	buffer.c	FUNCTION_59	IF_9
0x4003b05	      0xe800000000	                          call 0x4003b0a	      3494	buffer.c	FUNCTION_59	IF_9	CALL_34
0x4003b0a	    0x8b2d00000000	            mov ebp, dword [0x04003b10] 	      3495	buffer.c	FUNCTION_59	IF_9
0x4003b10	          0x4889df	                            mov rdi, rbx	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x4003b13	    0xc70500000000	               mov dword [0x04003b1d], 1	      3496	buffer.c	FUNCTION_59	IF_9
0x4003b1d	      0xe800000000	                          call 0x4003b22	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x4003b22	    0x892d00000000	            mov dword [0x04003b28], ebp 	      3498	buffer.c	FUNCTION_59	IF_9
0x4003b28	        0x4883c418	                           add rsp, 0x18	      3513	buffer.c	FUNCTION_59
0x4003b2c	          0x4889df	                            mov rdi, rbx	      3512	buffer.c	FUNCTION_59	CALL_38
0x4003b2f	              0x5b	                                 pop rbx	      3513	buffer.c	FUNCTION_59
0x4003b30	              0x5d	                                 pop rbp	      3513	buffer.c	FUNCTION_59
0x4003b31	            0x415c	                                 pop r12	      3513	buffer.c	FUNCTION_59
0x4003b33	            0x415d	                                 pop r13	      3513	buffer.c	FUNCTION_59
0x4003b35	            0x415e	                                 pop r14	      3513	buffer.c	FUNCTION_59
0x4003b37	            0x415f	                                 pop r15	      3513	buffer.c	FUNCTION_59
0x4003b39	      0xe900000000	                           jmp 0x4003b3e	      3512	buffer.c	FUNCTION_59	CALL_38
0x4003b3e	            0x6690	                                     nop	      3512	buffer.c	FUNCTION_59	CALL_38
0x4003b40	          0x488b0f	                    mov rcx, qword [rdi]	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b43	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b4d	          0x4889c8	                            mov rax, rcx	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b50	          0x48f7ea	                                imul rdx	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b53	          0x4889e8	                            mov rax, rbp	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b56	        0x488d340a	                    lea rsi, [rdx + rcx]	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b5a	        0x48c1f93f	                           sar rcx, 0x3f	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b5e	            0x4899	                                     cqo	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b60	        0x48c1fe06	                              sar rsi, 6	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b64	          0x4829ce	                            sub rsi, rcx	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b67	          0x48f7fe	                                idiv rsi	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b6a	        0xf6471001	               test byte [rdi + 0x10], 1	      3460	buffer.c	FUNCTION_59	IF_6
0x4003b6e	          0x4989c4	                            mov r12, rax	      3455	buffer.c	FUNCTION_59	IF_5
0x4003b71	     0xf840affffff	                            je 0x4003a81	      3460	buffer.c	FUNCTION_59	IF_6
0x4003b77	            0x31ff	                            xor edi, edi	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b79	      0xba05000000	                              mov edx, 5	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b7e	      0xbe00000000	                              mov esi, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b83	      0xe800000000	                          call 0x4003b88	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b88	      0xba00000000	                              mov edx, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b8d	          0x4889c1	                            mov rcx, rax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b90	      0xbe01040000	                          mov esi, 0x401	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b95	          0x4889df	                            mov rdi, rbx	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b98	            0x31c0	                            xor eax, eax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b9a	      0xe800000000	                          call 0x4003b9f	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003b9f	      0xe923ffffff	                           jmp 0x4003ac7	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003ba4	         0xf1f4000	                         nop dword [rax]	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4003ba8	          0x8b507c	            mov edx, dword [rax + 0x7c] 	      3449	buffer.c	FUNCTION_59	CALL_20
0x4003bab	          0xf6c258	                           test dl, 0x58	      3449	buffer.c	FUNCTION_59	CALL_20
0x4003bae	     0xf85ddfdffff	                           jne 0x4003991	      3449	buffer.c	FUNCTION_59	CALL_20
0x4003bb4	    0x448b90601500	         mov r10d, dword [rax + 0x1560] 	      3450	buffer.c	FUNCTION_59
0x4003bbb	          0x4585d2	                         test r10d, r10d	      3450	buffer.c	FUNCTION_59
0x4003bbe	     0xf849c010000	                            je 0x4003d60	      3450	buffer.c	FUNCTION_59
0x4003bc4	      0xbf72000000	                           mov edi, 0x72	      3447	buffer.c	FUNCTION_59	CALL_18
0x4003bc9	      0xe800000000	                          call 0x4003bce	      3447	buffer.c	FUNCTION_59	CALL_18
0x4003bce	            0x85c0	                           test eax, eax	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003bd0	      0xba05000000	                              mov edx, 5	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003bd5	      0xbe00000000	                              mov esi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003bda	            0x7505	                           jne 0x4003be1	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003bdc	      0xbe00000000	                              mov esi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003be1	            0x31ff	                            xor edi, edi	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003be3	    0x41bf00000000	                             mov r15d, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003be9	      0xbd00000000	                              mov ebp, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003bee	      0xe800000000	                          call 0x4003bf3	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003bf3	          0x4989c6	                            mov r14, rax	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003bf6	    0x488b05000000	            mov rax, qword [0x04003bfd] 	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003bfd	          0x8b507c	            mov edx, dword [rax + 0x7c] 	      3448	buffer.c	FUNCTION_59	CALL_19
0x4003c00	          0xf6c240	                           test dl, 0x40	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c03	     0xf84b5fdffff	                            je 0x40039be	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c09	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c0e	            0x31ff	                            xor edi, edi	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c10	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c15	      0xe800000000	                          call 0x4003c1a	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c1a	          0x4889c5	                            mov rbp, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c1d	    0x488b05000000	            mov rax, qword [0x04003c24] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c24	          0x8b507c	            mov edx, dword [rax + 0x7c] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c27	          0xf6c210	                           test dl, 0x10	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c2a	     0xf8497fdffff	                            je 0x40039c7	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c30	    0x488b88181400	          mov rcx, qword [rax + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x4003c37	           0xfb609	                   movzx ecx, byte [rcx]	      5639	buffer.c	FUNCTION_81
0x4003c3a	          0x80f96e	                            cmp cl, 0x6e	      5639	buffer.c	FUNCTION_81
0x4003c3d	     0xf8484fdffff	                            je 0x40039c7	      5639	buffer.c	FUNCTION_81
0x4003c43	          0x80f974	                            cmp cl, 0x74	      5639	buffer.c	FUNCTION_81
0x4003c46	     0xf847bfdffff	                            je 0x40039c7	      5639	buffer.c	FUNCTION_81
0x4003c4c	            0x31ff	                            xor edi, edi	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c4e	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c53	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c58	      0xe800000000	                          call 0x4003c5d	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c5d	          0x4989c4	                            mov r12, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c60	    0x488b05000000	            mov rax, qword [0x04003c67] 	      3436	buffer.c	FUNCTION_59
0x4003c67	        0xf6407c08	               test byte [rax + 0x7c], 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c6b	     0xf8564fdffff	                           jne 0x40039d5	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c71	    0x41b800000000	                              mov r8d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c77	      0xe987fdffff	                           jmp 0x4003a03	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c7c	         0xf1f4000	                         nop dword [rax]	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003c80	            0x31f6	                            xor esi, esi	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x4003c82	            0x31d2	                            xor edx, edx	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x4003c84	          0x4889df	                            mov rdi, rbx	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x4003c87	      0xe800000000	                          call 0x4003c8c	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x4003c8c	    0x8b3500000000	            mov esi, dword [0x04003c92] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003c92	            0x85f6	                           test esi, esi	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003c94	            0x751c	                           jne 0x4003cb2	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003c96	    0x8b0d00000000	            mov ecx, dword [0x04003c9c] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003c9c	            0x85c9	                           test ecx, ecx	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003c9e	     0xf8484feffff	                            je 0x4003b28	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003ca4	    0x8b1500000000	            mov edx, dword [0x04003caa] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003caa	            0x85d2	                           test edx, edx	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003cac	     0xf8576feffff	                           jne 0x4003b28	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4003cb2	            0x31f6	                            xor esi, esi	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x4003cb4	          0x4889c7	                            mov rdi, rax	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x4003cb7	      0xe800000000	                          call 0x4003cbc	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x4003cbc	      0xe967feffff	                           jmp 0x4003b28	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x4003cc1	     0xf1f80000000	                         nop dword [rax]	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x4003cc8	            0x85ed	                           test ebp, ebp	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4003cca	    0x488b05000000	            mov rax, qword [0x04003cd1] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4003cd1	            0x7475	                            je 0x4003d48	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4003cd3	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x4003cda	            0x89da	                            mov edx, ebx	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003cdc	      0xbf00000000	                              mov edi, 0	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003ce1	    0x41b801000000	                              mov r8d, 1	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003ce7	          0x4429f2	                           sub edx, r14d	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003cea	          0x4585e4	                         test r12d, r12d	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003ced	    0x8d8a01040000	                  lea ecx, [rdx + 0x401]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003cf3	        0x480f45f8	                         cmovne rdi, rax	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003cf7	          0x4c89f2	                            mov rdx, r14	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003cfa	      0xe800000000	                          call 0x4003cff	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003cff	      0xe979fcffff	                           jmp 0x400397d	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003d04	         0xf1f4000	                         nop dword [rax]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x4003d08	      0xbf6d000000	                           mov edi, 0x6d	      3434	buffer.c	FUNCTION_59	CALL_10
0x4003d0d	      0xe800000000	                          call 0x4003d12	      3434	buffer.c	FUNCTION_59	CALL_10
0x4003d12	            0x85c0	                           test eax, eax	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d14	      0xb900000000	                              mov ecx, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d19	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d1e	     0xf85fbfcffff	                           jne 0x4003a1f	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d24	      0xba05000000	                              mov edx, 5	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d29	      0xbe00000000	                              mov esi, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d2e	            0x31ff	                            xor edi, edi	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d30	      0xe800000000	                          call 0x4003d35	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d35	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d3a	          0x4889c1	                            mov rcx, rax	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d3d	      0xe9ddfcffff	                           jmp 0x4003a1f	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d42	    0x660f1f440000	                    nop word [rax + rax]	      3435	buffer.c	FUNCTION_59	CALL_11
0x4003d48	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4003d4f	          0x4885f6	                           test rsi, rsi	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4003d52	            0x7586	                           jne 0x4003cda	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4003d54	      0xe97affffff	                           jmp 0x4003cd3	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4003d59	     0xf1f80000000	                         nop dword [rax]	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4003d60	    0x41bf00000000	                             mov r15d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003d66	          0x4d89fe	                            mov r14, r15	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003d69	      0xe942fcffff	                           jmp 0x40039b0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003d6e	            0x6690	                                     nop	      3433	buffer.c	FUNCTION_59	CALL_8
0x4003d70	          0x4c8b37	                    mov r14, qword [rdi]	      3480	buffer.c	FUNCTION_59	ELSE_7
0x4003d73	      0xba05000000	                              mov edx, 5	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d78	            0x31ff	                            xor edi, edi	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d7a	      0xbe00000000	                              mov esi, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d7f	      0xe800000000	                          call 0x4003d84	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d84	          0x4889e9	                            mov rcx, rbp	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d87	          0x4889c2	                            mov rdx, rax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d8a	          0x4589e1	                           mov r9d, r12d	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d8d	          0x4d89f0	                             mov r8, r14	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d90	      0xbe01040000	                          mov esi, 0x401	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d95	          0x4889df	                            mov rdi, rbx	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d98	            0x31c0	                            xor eax, eax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d9a	      0xe800000000	                          call 0x4003d9f	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4003d9f	      0xe800000000	                          call 0x4003da4	      3482	buffer.c	FUNCTION_59	ELSE_7	CALL_29
0x4003da4	          0x4889df	                            mov rdi, rbx	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4003da7	      0xe800000000	                          call 0x4003dac	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4003dac	    0x488b15000000	            mov rdx, qword [0x04003db3] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x4003db3	      0xbe01040000	                          mov esi, 0x401	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003db8	        0x488d3c03	                    lea rdi, [rbx + rax]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003dbc	          0x4829c6	                            sub rsi, rax	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003dbf	    0x8b8ad8000000	            mov ecx, dword [rdx + 0xd8] 	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003dc5	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003dc8	          0x83c101	                              add ecx, 1	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003dcb	          0x83c201	                              add edx, 1	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003dce	      0xe800000000	                          call 0x4003dd3	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003dd3	      0xe9effcffff	                           jmp 0x4003ac7	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003dd8	     0xf1f84000000	                   nop dword [rax + rax]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4003de0	            0x31ff	                            xor edi, edi	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003de2	      0xbe00000000	                              mov esi, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003de7	      0xe800000000	                          call 0x4003dec	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003dec	          0x4489e1	                           mov ecx, r12d	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003def	          0x4889c2	                            mov rdx, rax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003df2	      0xbe01040000	                          mov esi, 0x401	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003df7	          0x4889df	                            mov rdi, rbx	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003dfa	            0x31c0	                            xor eax, eax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003dfc	      0xe800000000	                          call 0x4003e01	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003e01	      0xe9c1fcffff	                           jmp 0x4003ac7	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003e06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x4003e10	        0x4883c418	                           add rsp, 0x18	      3513	buffer.c	FUNCTION_59
0x4003e14	              0x5b	                                 pop rbx	      3513	buffer.c	FUNCTION_59
0x4003e15	              0x5d	                                 pop rbp	      3513	buffer.c	FUNCTION_59
0x4003e16	            0x415c	                                 pop r12	      3513	buffer.c	FUNCTION_59
0x4003e18	            0x415d	                                 pop r13	      3513	buffer.c	FUNCTION_59
0x4003e1a	            0x415e	                                 pop r14	      3513	buffer.c	FUNCTION_59
0x4003e1c	            0x415f	                                 pop r15	      3513	buffer.c	FUNCTION_59
0x4003e1e	              0xc3	                                     ret	      3513	buffer.c	FUNCTION_59
bt_dontwrite_msg	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:ELSE,0	22
0x40028a0	        0x4883ec08	                              sub rsp, 8	      5644	buffer.c	FUNCTION_82
0x40028a4	          0x4885ff	                           test rdi, rdi	      5639	buffer.c	FUNCTION_81
0x40028a7	            0x7412	                            je 0x40028bb	      5639	buffer.c	FUNCTION_81
0x40028a9	    0x488b87181400	          mov rax, qword [rdi + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x40028b0	           0xfb600	                   movzx eax, byte [rax]	      5639	buffer.c	FUNCTION_81
0x40028b3	            0x3c6e	                            cmp al, 0x6e	      5639	buffer.c	FUNCTION_81
0x40028b5	            0x7411	                            je 0x40028c8	      5639	buffer.c	FUNCTION_81
0x40028b7	            0x3c74	                            cmp al, 0x74	      5639	buffer.c	FUNCTION_81
0x40028b9	            0x740d	                            je 0x40028c8	      5639	buffer.c	FUNCTION_81
0x40028bb	            0x31c0	                            xor eax, eax	      5650	buffer.c	FUNCTION_82
0x40028bd	        0x4883c408	                              add rsp, 8	      5651	buffer.c	FUNCTION_82
0x40028c1	              0xc3	                                     ret	      5651	buffer.c	FUNCTION_82
0x40028c2	    0x660f1f440000	                    nop word [rax + rax]	      5651	buffer.c	FUNCTION_82
0x40028c8	      0xba05000000	                              mov edx, 5	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40028cd	      0xbe00000000	                              mov esi, 0	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40028d2	            0x31ff	                            xor edi, edi	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40028d4	      0xe800000000	                          call 0x40028d9	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40028d9	          0x4889c7	                            mov rdi, rax	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40028dc	      0xe800000000	                          call 0x40028e1	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x40028e1	      0xb801000000	                              mov eax, 1	      5648	buffer.c	FUNCTION_82	IF_1
0x40028e6	        0x4883c408	                              add rsp, 8	      5651	buffer.c	FUNCTION_82
0x40028ea	              0xc3	                                     ret	      5651	buffer.c	FUNCTION_82
buflist_getfile	IF,14:WHILE,0:DO,0:SWITCH,0:CALL,18:FOR,0:functions,0:ELSE,3	145
0x4001c90	            0x4157	                                push r15	      2242	buffer.c	FUNCTION_28
0x4001c92	            0x4156	                                push r14	      2242	buffer.c	FUNCTION_28
0x4001c94	          0x4189ce	                           mov r14d, ecx	      2242	buffer.c	FUNCTION_28
0x4001c97	            0x4155	                                push r13	      2242	buffer.c	FUNCTION_28
0x4001c99	            0x4154	                                push r12	      2242	buffer.c	FUNCTION_28
0x4001c9b	          0x4989f5	                            mov r13, rsi	      2242	buffer.c	FUNCTION_28
0x4001c9e	              0x55	                                push rbp	      2242	buffer.c	FUNCTION_28
0x4001c9f	              0x53	                                push rbx	      2242	buffer.c	FUNCTION_28
0x4001ca0	            0x89fd	                            mov ebp, edi	      2242	buffer.c	FUNCTION_28
0x4001ca2	          0x4189d4	                           mov r12d, edx	      2242	buffer.c	FUNCTION_28
0x4001ca5	        0x4883ec08	                              sub rsp, 8	      2242	buffer.c	FUNCTION_28
0x4001ca9	      0xe800000000	                          call 0x4001cae	      2248	buffer.c	FUNCTION_28	CALL_1
0x4001cae	          0x4885c0	                           test rax, rax	      2249	buffer.c	FUNCTION_28	IF_1
0x4001cb1	     0xf8471010000	                            je 0x4001e28	      2249	buffer.c	FUNCTION_28	IF_1
0x4001cb7	    0x483b05000000	            cmp rax, qword [0x04001cbe] 	      2259	buffer.c	FUNCTION_28	IF_3
0x4001cbe	          0x4889c3	                            mov rbx, rax	      2259	buffer.c	FUNCTION_28	IF_3
0x4001cc1	     0xf8401010000	                            je 0x4001dc8	      2259	buffer.c	FUNCTION_28	IF_3
0x4001cc7	      0xe800000000	                          call 0x4001ccc	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x4001ccc	            0x85c0	                           test eax, eax	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x4001cce	     0xf85fc000000	                           jne 0x4001dd0	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x4001cd4	      0xe800000000	                          call 0x4001cd9	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x4001cd9	            0x85c0	                           test eax, eax	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x4001cdb	            0x89c5	                            mov ebp, eax	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x4001cdd	     0xf853d010000	                           jne 0x4001e20	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x4001ce3	          0x4531ff	                          xor r15d, r15d	      2278	buffer.c	FUNCTION_28	ELSE_2
0x4001ce6	          0x4d85ed	                           test r13, r13	      2271	buffer.c	FUNCTION_28	IF_6
0x4001ce9	     0xf8401010000	                            je 0x4001df0	      2271	buffer.c	FUNCTION_28	IF_6
0x4001cef	        0x41f6c404	                            test r12b, 4	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x4001cf3	            0x746b	                            je 0x4001d60	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x4001cf5	    0x8b3500000000	            mov esi, dword [0x04001cfb] 	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x4001cfb	        0x40f6c601	                             test sil, 1	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x4001cff	     0xf8553010000	                           jne 0x4001e58	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x4001d05	        0x40f6c602	                             test sil, 2	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001d09	     0xf8569010000	                           jne 0x4001e78	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001d0f	        0x40f6c61c	                          test sil, 0x1c	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001d13	            0x744b	                            je 0x4001d60	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001d15	    0x488b05000000	            mov rax, qword [0x04001d1c] 	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001d1c	        0x48833801	                      cmp qword [rax], 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001d20	     0xf8495010000	                            je 0x4001ebb	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001d26	        0x40f6c608	                             test sil, 8	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4001d2a	     0xf8581010000	                           jne 0x4001eb1	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4001d30	          0xc1ee03	                              shr esi, 3	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001d33	            0x31ff	                            xor edi, edi	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001d35	          0x83e602	                              and esi, 2	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001d38	      0xe800000000	                          call 0x4001d3d	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001d3d	            0x85c0	                           test eax, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001d3f	     0xf84db000000	                            je 0x4001e20	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4001d45	    0x488b05000000	            mov rax, qword [0x04001d4c] 	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4001d4c	    0xc78088020000	              mov dword [rax + 0x288], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4001d56	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4001d60	    0x8bbbb8000000	            mov edi, dword [rbx + 0xb8] 	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d66	          0x4489e1	                           mov ecx, r12d	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d69	            0x31d2	                            xor edx, edx	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d6b	          0x83e101	                              and ecx, 1	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d6e	            0x31f6	                            xor esi, esi	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d70	          0x4589f1	                           mov r9d, r14d	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d73	          0x4d89e8	                             mov r8, r13	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d76	    0x830500000000	               add dword [0x04001d7d], 1	      2306	buffer.c	FUNCTION_28
0x4001d7d	      0xe800000000	                          call 0x4001d82	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d82	    0x832d00000000	               sub dword [0x04001d89], 1	      2310	buffer.c	FUNCTION_28	IF_13
0x4001d89	            0x85c0	                           test eax, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d8b	            0x7f4a	                            jg 0x4001dd7	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4001d8d	    0x8b0500000000	            mov eax, dword [0x04001d93] 	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001d93	            0x85c0	                           test eax, eax	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001d95	            0x7531	                           jne 0x4001dc8	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001d97	          0x4585ff	                         test r15d, r15d	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001d9a	            0x742c	                            je 0x4001dc8	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001d9c	    0x488b05000000	            mov rax, qword [0x04001da3] 	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001da3	        0x44897840	            mov dword [rax + 0x40], r15d	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001da7	      0xe800000000	                          call 0x4001dac	      2316	buffer.c	FUNCTION_28	IF_13	IF_14	CALL_18
0x4001dac	    0x488b05000000	            mov rax, qword [0x04001db3] 	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001db3	    0xc74044000000	               mov dword [rax + 0x44], 0	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001dba	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2320	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001dc1	     0xf1f80000000	                         nop dword [rax]	      2320	buffer.c	FUNCTION_28	IF_13	IF_14
0x4001dc8	      0xbd01000000	                              mov ebp, 1	      2322	buffer.c	FUNCTION_28	IF_13
0x4001dcd	            0xeb08	                           jmp 0x4001dd7	      2322	buffer.c	FUNCTION_28	IF_13
0x4001dcf	              0x90	                                     nop	      2322	buffer.c	FUNCTION_28	IF_13
0x4001dd0	            0x31ed	                            xor ebp, ebp	      2265	buffer.c	FUNCTION_28	IF_4
0x4001dd2	      0xe800000000	                          call 0x4001dd7	      2264	buffer.c	FUNCTION_28	IF_4	CALL_7
0x4001dd7	        0x4883c408	                              add rsp, 8	      2326	buffer.c	FUNCTION_28
0x4001ddb	            0x89e8	                            mov eax, ebp	      2326	buffer.c	FUNCTION_28
0x4001ddd	              0x5b	                                 pop rbx	      2326	buffer.c	FUNCTION_28
0x4001dde	              0x5d	                                 pop rbp	      2326	buffer.c	FUNCTION_28
0x4001ddf	            0x415c	                                 pop r12	      2326	buffer.c	FUNCTION_28
0x4001de1	            0x415d	                                 pop r13	      2326	buffer.c	FUNCTION_28
0x4001de3	            0x415e	                                 pop r14	      2326	buffer.c	FUNCTION_28
0x4001de5	            0x415f	                                 pop r15	      2326	buffer.c	FUNCTION_28
0x4001de7	              0xc3	                                     ret	      2326	buffer.c	FUNCTION_28
0x4001de8	     0xf1f84000000	                   nop dword [rax + rax]	      2326	buffer.c	FUNCTION_28
0x4001df0	    0x488bbb280100	           mov rdi, qword [rbx + 0x128] 	      2931	buffer.c	FUNCTION_43	CALL_2
0x4001df7	            0x31f6	                            xor esi, esi	      2931	buffer.c	FUNCTION_43	CALL_2
0x4001df9	      0xe8b2eeffff	            call sym.find_wininfo.isra.2	      2931	buffer.c	FUNCTION_43	CALL_2
0x4001dfe	        0x488d5018	                   lea rdx, [rax + 0x18]	      2933	buffer.c	FUNCTION_43	IF_1
0x4001e02	          0x4885c0	                           test rax, rax	      2933	buffer.c	FUNCTION_43	IF_1
0x4001e05	      0xb800000000	                              mov eax, 0	      2933	buffer.c	FUNCTION_43	IF_1
0x4001e0a	        0x480f45c2	                         cmovne rax, rdx	      2933	buffer.c	FUNCTION_43	IF_1
0x4001e0e	          0x4c8b28	                    mov r13, qword [rax]	      2274	buffer.c	FUNCTION_28	IF_6
0x4001e11	        0x448b7808	               mov r15d, dword [rax + 8]	      2275	buffer.c	FUNCTION_28	IF_6
0x4001e15	      0xe9d5feffff	                           jmp 0x4001cef	      2275	buffer.c	FUNCTION_28	IF_6
0x4001e1a	    0x660f1f440000	                    nop word [rax + rax]	      2275	buffer.c	FUNCTION_28	IF_6
0x4001e20	            0x31ed	                            xor ebp, ebp	      2268	buffer.c	FUNCTION_28	IF_5
0x4001e22	            0xebb3	                           jmp 0x4001dd7	      2268	buffer.c	FUNCTION_28	IF_5
0x4001e24	         0xf1f4000	                         nop dword [rax]	      2268	buffer.c	FUNCTION_28	IF_5
0x4001e28	        0x4183e402	                             and r12d, 2	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4001e2c	      0xba05000000	                              mov edx, 5	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001e31	            0x7404	                            je 0x4001e37	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4001e33	            0x85ed	                           test ebp, ebp	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4001e35	            0x7461	                            je 0x4001e98	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4001e37	      0xbe00000000	                              mov esi, 0	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001e3c	            0x31ff	                            xor edi, edi	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001e3e	      0xe800000000	                          call 0x4001e43	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001e43	          0x4863f5	                         movsxd rsi, ebp	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001e46	          0x4889c7	                            mov rdi, rax	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001e49	            0x31ed	                            xor ebp, ebp	      2255	buffer.c	FUNCTION_28	IF_1
0x4001e4b	      0xe800000000	                          call 0x4001e50	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001e50	            0xeb85	                           jmp 0x4001dd7	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001e52	    0x660f1f440000	                    nop word [rax + rax]	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4001e58	          0x4889df	                            mov rdi, rbx	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x4001e5b	      0xe800000000	                          call 0x4001e60	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x4001e60	          0x4885c0	                           test rax, rax	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001e63	     0xf85f7feffff	                           jne 0x4001d60	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001e69	    0x8b3500000000	            mov esi, dword [0x04001e6f] 	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001e6f	      0xe991feffff	                           jmp 0x4001d05	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001e74	         0xf1f4000	                         nop dword [rax]	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4001e78	          0x4889df	                            mov rdi, rbx	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4001e7b	      0xe800000000	                          call 0x4001e80	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4001e80	          0x4885c0	                           test rax, rax	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001e83	     0xf85d7feffff	                           jne 0x4001d60	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001e89	    0x8b3500000000	            mov esi, dword [0x04001e8f] 	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001e8f	      0xe97bfeffff	                           jmp 0x4001d0f	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001e94	         0xf1f4000	                         nop dword [rax]	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4001e98	            0x31ff	                            xor edi, edi	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001e9a	      0xbe00000000	                              mov esi, 0	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001e9f	      0xe800000000	                          call 0x4001ea4	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001ea4	          0x4889c7	                            mov rdi, rax	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001ea7	      0xe800000000	                          call 0x4001eac	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001eac	      0xe926ffffff	                           jmp 0x4001dd7	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4001eb1	      0xe800000000	                          call 0x4001eb6	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x4001eb6	      0xe98afeffff	                           jmp 0x4001d45	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x4001ebb	      0xbf01000000	                              mov edi, 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001ec0	      0xe800000000	                          call 0x4001ec5	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001ec5	          0x803800	                       cmp byte [rax], 0	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001ec8	     0xf8492feffff	                            je 0x4001d60	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001ece	    0x8b3500000000	            mov esi, dword [0x04001ed4] 	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4001ed4	      0xe94dfeffff	                           jmp 0x4001d26	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
buflist_findpat	IF,16:WHILE,0:DO,0:SWITCH,0:CALL,15:FOR,3:functions,0:ELSE,3	206
0x4001960	            0x4157	                                push r15	      2435	buffer.c	FUNCTION_33
0x4001962	            0x4156	                                push r14	      2435	buffer.c	FUNCTION_33
0x4001964	          0x4889f8	                            mov rax, rdi	      2435	buffer.c	FUNCTION_33
0x4001967	            0x4155	                                push r13	      2435	buffer.c	FUNCTION_33
0x4001969	            0x4154	                                push r12	      2435	buffer.c	FUNCTION_33
0x400196b	        0x4883c001	                              add rax, 1	      2445	buffer.c	FUNCTION_33	IF_1
0x400196f	              0x55	                                push rbp	      2435	buffer.c	FUNCTION_33
0x4001970	              0x53	                                push rbx	      2435	buffer.c	FUNCTION_33
0x4001971	            0x89cd	                            mov ebp, ecx	      2435	buffer.c	FUNCTION_33
0x4001973	          0x4589c5	                           mov r13d, r8d	      2435	buffer.c	FUNCTION_33
0x4001976	    0x4881ece80000	                           sub rsp, 0xe8	      2435	buffer.c	FUNCTION_33
0x400197d	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      2435	buffer.c	FUNCTION_33
0x4001986	    0x48898c24d800	             mov qword [rsp + 0xd8], rcx	      2435	buffer.c	FUNCTION_33
0x400198e	            0x31c9	                            xor ecx, ecx	      2435	buffer.c	FUNCTION_33
0x4001990	          0x4839c6	                            cmp rsi, rax	      2445	buffer.c	FUNCTION_33	IF_1
0x4001993	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2435	buffer.c	FUNCTION_33
0x4001998	        0x89542414	             mov dword [rsp + 0x14], edx	      2435	buffer.c	FUNCTION_33
0x400199c	     0xf8464020000	                            je 0x4001c06	      2445	buffer.c	FUNCTION_33	IF_1
0x40019a2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40019a7	            0x31c9	                            xor ecx, ecx	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40019a9	            0x31d2	                            xor edx, edx	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40019ab	      0xe800000000	                          call 0x40019b0	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40019b0	          0x4885c0	                           test rax, rax	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x40019b3	          0x4889c3	                            mov rbx, rax	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40019b6	        0x48890424	                    mov qword [rsp], rax	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x40019ba	     0xf84c6020000	                            je 0x4001c86	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x40019c0	          0x4889c7	                            mov rdi, rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40019c3	      0xe800000000	                          call 0x40019c8	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40019c8	      0x488d4403ff	                lea rax, [rbx + rax - 1]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40019cd	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2472	buffer.c	FUNCTION_33	ELSE_2
0x40019d5	          0x4889c2	                            mov rdx, rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40019d8	      0x4889442408	                mov qword [rsp + 8], rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x40019dd	          0x4839d3	                            cmp rbx, rdx	      2472	buffer.c	FUNCTION_33	ELSE_2
0x40019e0	     0xf820e020000	                            jb 0x4001bf4	      2472	buffer.c	FUNCTION_33	ELSE_2
0x40019e6	    0x41bf01000000	                             mov r15d, 1	      2476	buffer.c	FUNCTION_33	ELSE_2
0x40019ec	         0xf1f4000	                         nop dword [rax]	      2476	buffer.c	FUNCTION_33	ELSE_2
0x40019f0	    0x41bc01000000	                             mov r12d, 1	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x40019f6	      0xbbffffffff	                     mov ebx, 0xffffffff	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x40019fb	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40019ff	      0x418d5424ff	                      lea edx, [r12 - 1]	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a04	            0x85c9	                           test ecx, ecx	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a06	            0x7411	                            je 0x4001a19	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a08	          0x83fa02	                              cmp edx, 2	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a0b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a10	            0x19c0	                            sbb eax, eax	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a12	            0xf7d0	                                 not eax	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a14	          0x83e024	                           and eax, 0x24	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a17	            0x8801	                      mov byte [rcx], al	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a19	        0x488b0424	                    mov rax, qword [rsp]	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4001a1d	          0x80385e	                    cmp byte [rax], 0x5e	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001a20	          0x4889c7	                            mov rdi, rax	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001a23	     0xf84ff000000	                            je 0x4001b28	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001a29	    0x8b1500000000	            mov edx, dword [0x04001a2f] 	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001a2f	            0x31f6	                            xor esi, esi	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001a31	            0x85d2	                           test edx, edx	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001a33	        0x400f95c6	                               setne sil	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001a37	      0xe800000000	                          call 0x4001a3c	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001a3c	          0x4885c0	                           test rax, rax	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4001a3f	      0x4889442420	             mov qword [rsp + 0x20], rax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4001a44	     0xf8473010000	                            je 0x4001bbd	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4001a4a	    0x4c8b35000000	            mov r14, qword [0x04001a51] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001a51	          0x4d85f6	                           test r14, r14	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001a54	            0x7513	                           jne 0x4001a69	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001a56	      0xe955010000	                           jmp 0x4001bb0	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001a5b	       0xf1f440000	                   nop dword [rax + rax]	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001a60	        0x4d8b7670	            mov r14, qword [r14 + 0x70] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001a64	          0x4d85f6	                           test r14, r14	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001a67	            0x7477	                            je 0x4001ae0	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001a69	    0x453bbe241400	         cmp r15d, dword [r14 + 0x1424] 	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4001a70	            0x75ee	                           jne 0x4001a60	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4001a72	            0x85ed	                           test ebp, ebp	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4001a74	            0x740c	                            je 0x4001a82	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4001a76	          0x4c89f7	                            mov rdi, r14	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4001a79	      0xe800000000	                          call 0x4001a7e	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4001a7e	            0x85c0	                           test eax, eax	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4001a80	            0x74de	                            je 0x4001a60	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4001a82	    0x498bb6900000	            mov rsi, qword [r14 + 0x90] 	      2665	buffer.c	FUNCTION_35	CALL_1
0x4001a89	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2665	buffer.c	FUNCTION_35	CALL_1
0x4001a8e	            0x31d2	                            xor edx, edx	      2665	buffer.c	FUNCTION_35	CALL_1
0x4001a90	      0xe85beeffff	                    call sym.fname_match	      2665	buffer.c	FUNCTION_35	CALL_1
0x4001a95	          0x4885c0	                           test rax, rax	      2666	buffer.c	FUNCTION_35	IF_1
0x4001a98	            0x7466	                            je 0x4001b00	      2666	buffer.c	FUNCTION_35	IF_1
0x4001a9a	          0x4585ed	                         test r13d, r13d	      2503	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9
0x4001a9d	            0x7420	                            je 0x4001abf	      2503	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9
0x4001a9f	    0x488b05000000	            mov rax, qword [0x04001aa6] 	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001aa6	          0x4885c0	                           test rax, rax	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001aa9	            0x750e	                           jne 0x4001ab9	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001aab	            0xebb3	                           jmp 0x4001a60	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001aad	           0xf1f00	                         nop dword [rax]	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001ab0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001ab4	          0x4885c0	                           test rax, rax	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001ab7	            0x74a7	                            je 0x4001a60	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x4001ab9	        0x4c3b7008	                cmp r14, qword [rax + 8]	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x4001abd	            0x75f1	                           jne 0x4001ab0	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x4001abf	            0x85db	                           test ebx, ebx	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4001ac1	     0xf89c9000000	                           jns 0x4001b90	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4001ac7	    0x418b9eb80000	            mov ebx, dword [r14 + 0xb8] 	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4001ace	        0x4d8b7670	            mov r14, qword [r14 + 0x70] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001ad2	          0x4d85f6	                           test r14, r14	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001ad5	            0x7592	                           jne 0x4001a69	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001ad7	    0x660f1f840000	                    nop word [rax + rax]	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4001ae0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001ae5	      0xe800000000	                          call 0x4001aea	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001aea	            0x85db	                           test ebx, ebx	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x4001aec	            0x7976	                           jns 0x4001b64	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x4001aee	        0x4183fc04	                             cmp r12d, 4	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001af2	            0x744c	                            je 0x4001b40	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001af4	        0x4183c401	                             add r12d, 1	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001af8	      0xe9fefeffff	                           jmp 0x40019fb	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001afd	           0xf1f00	                         nop dword [rax]	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001b00	    0x498bb6880000	            mov rsi, qword [r14 + 0x88] 	      2667	buffer.c	FUNCTION_35	CALL_2
0x4001b07	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2667	buffer.c	FUNCTION_35	CALL_2
0x4001b0c	            0x31d2	                            xor edx, edx	      2667	buffer.c	FUNCTION_35	CALL_2
0x4001b0e	      0xe8ddedffff	                    call sym.fname_match	      2667	buffer.c	FUNCTION_35	CALL_2
0x4001b13	          0x4885c0	                           test rax, rax	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x4001b16	     0xf8444ffffff	                            je 0x4001a60	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x4001b1c	      0xe979ffffff	                           jmp 0x4001a9a	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x4001b21	     0xf1f80000000	                         nop dword [rax]	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x4001b28	          0x83e201	                              and edx, 1	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b2b	          0x83fa01	                              cmp edx, 1	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b2e	        0x4883d700	                              adc rdi, 0	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b32	      0xe9f2feffff	                           jmp 0x4001a29	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b37	    0x660f1f840000	                    nop word [rax + rax]	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b40	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b44	          0x4589f8	                           mov r8d, r15d	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b47	            0x85c0	                           test eax, eax	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b49	           0xf94c0	                                 sete al	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b4c	        0x4183f001	                              xor r8d, 1	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b50	          0x4409c0	                             or eax, r8d	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b53	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b56	           0xf95c2	                                setne dl	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x4001b59	          0x4531ff	                          xor r15d, r15d	      2532	buffer.c	FUNCTION_33	ELSE_2	FOR_1
0x4001b5c	             0x8d0	                               or al, dl	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x4001b5e	     0xf848cfeffff	                            je 0x40019f0	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x4001b64	        0x488b3c24	                    mov rdi, qword [rsp]	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x4001b68	      0xe800000000	                          call 0x4001b6d	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x4001b6d	          0x83fbfe	             cmp ebx, 0xfffffffffffffffe	      2538	buffer.c	FUNCTION_33	IF_15
0x4001b70	      0xba05000000	                              mov edx, 5	      2539	buffer.c	FUNCTION_33	CALL_13
0x4001b75	      0xbe00000000	                              mov esi, 0	      2539	buffer.c	FUNCTION_33	CALL_13
0x4001b7a	     0xf84d7000000	                            je 0x4001c57	      2538	buffer.c	FUNCTION_33	IF_15
0x4001b80	            0x85db	                           test ebx, ebx	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001b82	            0x89d8	                            mov eax, ebx	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001b84	            0x7945	                           jns 0x4001bcb	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001b86	      0xe9c2000000	                           jmp 0x4001c4d	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001b8b	       0xf1f440000	                   nop dword [rax + rax]	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001b90	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001b95	      0xbbfeffffff	                     mov ebx, 0xfffffffe	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4001b9a	      0xe800000000	                          call 0x4001b9f	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001b9f	        0x4183fc04	                             cmp r12d, 4	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001ba3	     0xf854bffffff	                           jne 0x4001af4	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001ba9	            0xebb9	                           jmp 0x4001b64	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001bab	       0xf1f440000	                   nop dword [rax + rax]	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4001bb0	          0x4889c7	                            mov rdi, rax	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001bb3	      0xe800000000	                          call 0x4001bb8	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001bb8	      0xe931ffffff	                           jmp 0x4001aee	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4001bbd	        0x488b3c24	                    mov rdi, qword [rsp]	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x4001bc1	      0xe800000000	                          call 0x4001bc6	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x4001bc6	      0xb8ffffffff	                     mov eax, 0xffffffff	      2493	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4001bcb	    0x488b8c24d800	            mov rcx, qword [rsp + 0xd8] 	      2543	buffer.c	FUNCTION_33
0x4001bd3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2543	buffer.c	FUNCTION_33
0x4001bdc	     0xf859f000000	                           jne 0x4001c81	      2543	buffer.c	FUNCTION_33
0x4001be2	    0x4881c4e80000	                           add rsp, 0xe8	      2543	buffer.c	FUNCTION_33
0x4001be9	              0x5b	                                 pop rbx	      2543	buffer.c	FUNCTION_33
0x4001bea	              0x5d	                                 pop rbp	      2543	buffer.c	FUNCTION_33
0x4001beb	            0x415c	                                 pop r12	      2543	buffer.c	FUNCTION_33
0x4001bed	            0x415d	                                 pop r13	      2543	buffer.c	FUNCTION_33
0x4001bef	            0x415e	                                 pop r14	      2543	buffer.c	FUNCTION_33
0x4001bf1	            0x415f	                                 pop r15	      2543	buffer.c	FUNCTION_33
0x4001bf3	              0xc3	                                     ret	      2543	buffer.c	FUNCTION_33
0x4001bf4	          0x803a24	                    cmp byte [rdx], 0x24	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001bf7	           0xf94c0	                                 sete al	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001bfa	           0xfb6c0	                           movzx eax, al	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001bfd	        0x89442410	             mov dword [rsp + 0x10], eax	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001c01	      0xe9e0fdffff	                           jmp 0x40019e6	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4001c06	           0xfb607	                   movzx eax, byte [rdi]	      2445	buffer.c	FUNCTION_33	IF_1
0x4001c09	          0x8d50dd	                   lea edx, [rax - 0x23]	      2445	buffer.c	FUNCTION_33	IF_1
0x4001c0c	    0x81e2fd000000	                           and edx, 0xfd	      2445	buffer.c	FUNCTION_33	IF_1
0x4001c12	     0xf858afdffff	                           jne 0x40019a2	      2445	buffer.c	FUNCTION_33	IF_1
0x4001c18	            0x3c25	                            cmp al, 0x25	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001c1a	            0x7456	                            je 0x4001c72	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001c1c	    0x488b05000000	            mov rax, qword [0x04001c23] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x4001c23	    0x8b9878010000	           mov ebx, dword [rax + 0x178] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x4001c29	            0x85ed	                           test ebp, ebp	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001c2b	     0xf843cffffff	                            je 0x4001b6d	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001c31	            0x89df	                            mov edi, ebx	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001c33	      0xe800000000	                          call 0x4001c38	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001c38	          0x4889c7	                            mov rdi, rax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001c3b	      0xe800000000	                          call 0x4001c40	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001c40	            0x85c0	                           test eax, eax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001c42	     0xf8525ffffff	                           jne 0x4001b6d	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4001c48	      0xbbffffffff	                     mov ebx, 0xffffffff	      2453	buffer.c	FUNCTION_33	IF_1	IF_3
0x4001c4d	      0xba05000000	                              mov edx, 5	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c52	      0xbe00000000	                              mov esi, 0	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c57	            0x31ff	                            xor edi, edi	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c59	      0xe800000000	                          call 0x4001c5e	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c5e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c63	          0x4889c7	                            mov rdi, rax	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c66	      0xe800000000	                          call 0x4001c6b	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c6b	            0x89d8	                            mov eax, ebx	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c6d	      0xe959ffffff	                           jmp 0x4001bcb	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x4001c72	    0x488b05000000	            mov rax, qword [0x04001c79] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001c79	    0x8b98b8000000	            mov ebx, dword [rax + 0xb8] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001c7f	            0xeba8	                           jmp 0x4001c29	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x4001c81	      0xe800000000	                          call 0x4001c86	      2543	buffer.c	FUNCTION_33
0x4001c86	      0xb8ffffffff	                     mov eax, 0xffffffff	      2470	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x4001c8b	      0xe93bffffff	                           jmp 0x4001bcb	      2470	buffer.c	FUNCTION_33	ELSE_2	IF_4
set_buflisted	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,1	16
0x400a120	    0x4c8b05000000	              mov r8, qword [0x0400a127]	      6153	buffer.c	FUNCTION_101	IF_1
0x400a127	    0x4139b8241400	           cmp dword [r8 + 0x1424], edi 	      6153	buffer.c	FUNCTION_101	IF_1
0x400a12e	            0x7430	                            je 0x400a160	      6153	buffer.c	FUNCTION_101	IF_1
0x400a130	            0x31c9	                            xor ecx, ecx	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400a132	            0x31d2	                            xor edx, edx	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400a134	            0x31f6	                            xor esi, esi	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400a136	            0x85ff	                           test edi, edi	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0x400a138	    0x4189b8241400	           mov dword [r8 + 0x1424], edi 	      6155	buffer.c	FUNCTION_101	IF_1
0x400a13f	            0x750f	                           jne 0x400a150	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0x400a141	      0xbf01000000	                              mov edi, 1	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400a146	      0xe900000000	                           jmp 0x400a14b	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400a14b	       0xf1f440000	                   nop dword [rax + rax]	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400a150	            0x31ff	                            xor edi, edi	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400a152	      0xe900000000	                           jmp 0x400a157	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400a157	    0x660f1f840000	                    nop word [rax + rax]	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400a160	            0xf3c3	                                     ret	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
get_winopts	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,7:FOR,0:functions,0:ELSE,1	43
0x4001f40	              0x53	                                push rbx	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4001f41	          0x4889fb	                            mov rbx, rdi	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4001f44	        0x4883ec10	                           sub rsp, 0x10	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4001f48	    0x488b05000000	            mov rax, qword [0x04001f4f] 	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4001f4f	    0x488db8b00100	                  lea rdi, [rax + 0x1b0]	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4001f56	      0xe800000000	                          call 0x4001f5b	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4001f5b	    0x488b3d000000	            mov rdi, qword [0x04001f62] 	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4001f62	      0xe800000000	                          call 0x4001f67	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4001f67	    0x488bbb280100	           mov rdi, qword [rbx + 0x128] 	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4001f6e	      0xbe01000000	                              mov esi, 1	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4001f73	      0xe838edffff	            call sym.find_wininfo.isra.2	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4001f78	          0x4885c0	                           test rax, rax	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001f7b	            0x7407	                            je 0x4001f84	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001f7d	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001f80	            0x85d2	                           test edx, edx	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001f82	            0x7544	                           jne 0x4001fc8	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001f84	    0x488b3d000000	            mov rdi, qword [0x04001f8b] 	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4001f8b	    0x488db7b00100	                  lea rsi, [rdi + 0x1b0]	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4001f92	    0x4881c7680300	                          add rdi, 0x368	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4001f99	      0xe800000000	                          call 0x4001f9e	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4001f9e	    0x488b05000000	            mov rax, qword [0x04001fa5] 	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4001fa5	    0x488b3d000000	            mov rdi, qword [0x04001fac] 	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4001fac	          0x4885c0	                           test rax, rax	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4001faf	            0x7807	                            js 0x4001fb8	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4001fb1	    0x488987e80100	            mov qword [rdi + 0x1e8], rax	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4001fb8	        0x4883c410	                           add rsp, 0x10	      2918	buffer.c	FUNCTION_42	ELSE_1
0x4001fbc	              0x5b	                                 pop rbx	      2918	buffer.c	FUNCTION_42	ELSE_1
0x4001fbd	      0xe900000000	                           jmp 0x4001fc2	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x4001fc2	    0x660f1f440000	                    nop word [rax + rax]	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x4001fc8	    0x488b0d000000	            mov rcx, qword [0x04001fcf] 	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4001fcf	        0x488d7830	                   lea rdi, [rax + 0x30]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4001fd3	      0x4889442408	                mov qword [rsp + 8], rax	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4001fd8	    0x488db1b00100	                  lea rsi, [rcx + 0x1b0]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4001fdf	      0xe800000000	                          call 0x4001fe4	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4001fe4	      0x488b442408	                mov rax, qword [rsp + 8]	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001fe9	    0x488b35000000	            mov rsi, qword [0x04001ff0] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001ff0	    0x8b90e8010000	           mov edx, dword [rax + 0x1e8] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4001ff6	    0x488db8f00100	                  lea rdi, [rax + 0x1f0]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4001ffd	    0xc68621010000	               mov byte [rsi + 0x121], 1	      2903	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4002004	    0x4881c6080100	                          add rsi, 0x108	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x400200b	          0x885618	               mov byte [rsi + 0x18], dl	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x400200e	      0xe800000000	                          call 0x4002013	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4002013	            0xeb89	                           jmp 0x4001f9e	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
buf_addsign	IF,4:WHILE,2:DO,0:SWITCH,0:CALL,2:FOR,1:functions,0:ELSE,3	65
0x4006780	          0x4989d0	                             mov r8, rdx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x4006783	    0x488b97201c00	          mov rdx, qword [rdi + 0x1c20] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400678a	          0x4189c9	                            mov r9d, ecx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400678d	          0x4885d2	                           test rdx, rdx	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x4006790	     0xf8499000000	                            je 0x400682f	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x4006796	              0x53	                                push rbx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x4006797	          0x4889d0	                            mov rax, rdx	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400679a	          0x4531db	                          xor r11d, r11d	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400679d	            0xeb12	                           jmp 0x40067b1	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400679f	              0x90	                                     nop	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40067a0	            0x7f26	                            jg 0x40067c8	      5848	buffer.c	FUNCTION_89	FOR_1	IF_2
0x40067a2	        0x4c8b5018	            mov r10, qword [rax + 0x18] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40067a6	          0x4989c3	                            mov r11, rax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40067a9	          0x4d85d2	                           test r10, r10	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40067ac	            0x7442	                            je 0x40067f0	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40067ae	          0x4c89d0	                            mov rax, r10	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x40067b1	        0x488b5808	                mov rbx, qword [rax + 8]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40067b5	          0x4c39c3	                             cmp rbx, r8	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40067b8	            0x75e6	                           jne 0x40067a0	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40067ba	            0x3b30	                    cmp esi, dword [rax]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40067bc	            0x75e4	                           jne 0x40067a2	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40067be	        0x44894810	             mov dword [rax + 0x10], r9d	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x40067c2	              0x5b	                                 pop rbx	      5883	buffer.c	FUNCTION_89	ELSE_1
0x40067c3	              0xc3	                                     ret	      5883	buffer.c	FUNCTION_89	ELSE_1
0x40067c4	         0xf1f4000	                         nop dword [rax]	      5883	buffer.c	FUNCTION_89	ELSE_1
0x40067c8	          0x4d85db	                           test r11, r11	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067cb	            0x750c	                           jne 0x40067d9	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067cd	            0xeb14	                           jmp 0x40067e3	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067cf	              0x90	                                     nop	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067d0	        0x4d8b5b20	            mov r11, qword [r11 + 0x20] 	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067d4	          0x4d85db	                           test r11, r11	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067d7	            0x740a	                            je 0x40067e3	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067d9	        0x4d3b4308	                 cmp r8, qword [r11 + 8]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067dd	            0x74f1	                            je 0x40067d0	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x40067df	        0x498b5318	            mov rdx, qword [r11 + 0x18] 	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0x40067e3	              0x5b	                                 pop rbx	      5883	buffer.c	FUNCTION_89	ELSE_1
0x40067e4	            0x89f1	                            mov ecx, esi	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x40067e6	          0x4c89de	                            mov rsi, r11	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x40067e9	      0xe9729effff	                     jmp sym.insert_sign	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x40067ee	            0x6690	                                     nop	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0x40067f0	          0x4c39c3	                             cmp rbx, r8	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x40067f3	            0x7411	                            je 0x4006806	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x40067f5	            0xeb44	                           jmp 0x400683b	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x40067f7	    0x660f1f840000	                    nop word [rax + rax]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006800	        0x4c3b4008	                 cmp r8, qword [rax + 8]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006804	            0x751a	                           jne 0x4006820	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x4006806	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400680a	          0x4885c0	                           test rax, rax	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400680d	            0x75f1	                           jne 0x4006800	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400680f	              0x5b	                                 pop rbx	      5883	buffer.c	FUNCTION_89	ELSE_1
0x4006810	            0x89f1	                            mov ecx, esi	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x4006812	          0x4889c6	                            mov rsi, rax	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x4006815	      0xe9469effff	                     jmp sym.insert_sign	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400681a	    0x660f1f440000	                    nop word [rax + rax]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x4006820	              0x5b	                                 pop rbx	      5883	buffer.c	FUNCTION_89	ELSE_1
0x4006821	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      5883	buffer.c	FUNCTION_89	ELSE_1
0x4006825	            0x89f1	                            mov ecx, esi	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x4006827	          0x4889c6	                            mov rsi, rax	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400682a	      0xe9319effff	                     jmp sym.insert_sign	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400682f	            0x31c0	                            xor eax, eax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x4006831	            0x89f1	                            mov ecx, esi	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x4006833	          0x4889c6	                            mov rsi, rax	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x4006836	      0xe9259effff	                     jmp sym.insert_sign	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0x400683b	            0x31d2	                            xor edx, edx	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400683d	            0xebd0	                           jmp 0x400680f	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
buf_findsign_id	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,0:FOR,1:functions,0:ELSE,0	18
0x40069f0	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      6001	buffer.c	FUNCTION_94	FOR_1
0x40069f7	          0x4885c0	                           test rax, rax	      6001	buffer.c	FUNCTION_94	FOR_1
0x40069fa	            0x7427	                            je 0x4006a23	      6001	buffer.c	FUNCTION_94	FOR_1
0x40069fc	        0x483b7008	                cmp rsi, qword [rax + 8]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x4006a00	            0x750c	                           jne 0x4006a0e	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x4006a02	            0xeb1c	                           jmp 0x4006a20	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x4006a04	         0xf1f4000	                         nop dword [rax]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x4006a08	        0x48397008	                cmp qword [rax + 8], rsi	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x4006a0c	            0x7412	                            je 0x4006a20	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x4006a0e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6001	buffer.c	FUNCTION_94	FOR_1
0x4006a12	          0x4885c0	                           test rax, rax	      6001	buffer.c	FUNCTION_94	FOR_1
0x4006a15	            0x75f1	                           jne 0x4006a08	      6001	buffer.c	FUNCTION_94	FOR_1
0x4006a17	            0xf3c3	                                     ret	      6001	buffer.c	FUNCTION_94	FOR_1
0x4006a19	     0xf1f80000000	                         nop dword [rax]	      6001	buffer.c	FUNCTION_94	FOR_1
0x4006a20	            0x8b00	                    mov eax, dword [rax]	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x4006a22	              0xc3	                                     ret	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x4006a23	            0x31c0	                            xor eax, eax	      6005	buffer.c	FUNCTION_94
0x4006a25	              0xc3	                                     ret	      6006	buffer.c	FUNCTION_94
buf_delsign	IF,3:WHILE,0:DO,0:SWITCH,0:CALL,3:FOR,1:functions,0:ELSE,1	51
0x4006910	              0x55	                                push rbp	      5937	buffer.c	FUNCTION_92
0x4006911	              0x53	                                push rbx	      5937	buffer.c	FUNCTION_92
0x4006912	          0x4889fb	                            mov rbx, rdi	      5937	buffer.c	FUNCTION_92
0x4006915	        0x4883ec08	                              sub rsp, 8	      5937	buffer.c	FUNCTION_92
0x4006919	    0x488b97201c00	          mov rdx, qword [rdi + 0x1c20] 	      5945	buffer.c	FUNCTION_92	FOR_1
0x4006920	          0x4885d2	                           test rdx, rdx	      5945	buffer.c	FUNCTION_92	FOR_1
0x4006923	            0x746e	                            je 0x4006993	      5945	buffer.c	FUNCTION_92	FOR_1
0x4006925	            0x3b32	                    cmp esi, dword [rdx]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006927	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      5947	buffer.c	FUNCTION_92	FOR_1
0x400692b	            0x7511	                           jne 0x400693e	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400692d	            0xeb68	                           jmp 0x4006997	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400692f	              0x90	                                     nop	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006930	            0x3937	                    cmp dword [rdi], esi	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006932	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      5947	buffer.c	FUNCTION_92	FOR_1
0x4006936	            0x7418	                            je 0x4006950	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006938	          0x4889fa	                            mov rdx, rdi	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400693b	          0x4889c7	                            mov rdi, rax	      5947	buffer.c	FUNCTION_92	FOR_1
0x400693e	          0x4885ff	                           test rdi, rdi	      5945	buffer.c	FUNCTION_92	FOR_1
0x4006941	            0x75ed	                           jne 0x4006930	      5945	buffer.c	FUNCTION_92	FOR_1
0x4006943	            0x31ed	                            xor ebp, ebp	      5944	buffer.c	FUNCTION_92
0x4006945	        0x4883c408	                              add rsp, 8	      5972	buffer.c	FUNCTION_92
0x4006949	          0x4889e8	                            mov rax, rbp	      5972	buffer.c	FUNCTION_92
0x400694c	              0x5b	                                 pop rbx	      5972	buffer.c	FUNCTION_92
0x400694d	              0x5d	                                 pop rbp	      5972	buffer.c	FUNCTION_92
0x400694e	              0xc3	                                     ret	      5972	buffer.c	FUNCTION_92
0x400694f	              0x90	                                     nop	      5972	buffer.c	FUNCTION_92
0x4006950	        0x488d4a18	                   lea rcx, [rdx + 0x18]	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0x4006954	          0x4885c0	                           test rax, rax	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4006957	          0x488901	                    mov qword [rcx], rax	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400695a	            0x7408	                            je 0x4006964	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400695c	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4006960	        0x48895020	             mov qword [rax + 0x20], rdx	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x4006964	        0x488b6f08	                mov rbp, qword [rdi + 8]	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0x4006968	      0xe800000000	                          call 0x400696d	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x400696d	    0x4883bb201c00	             cmp qword [rbx + 0x1c20], 0	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x4006975	            0x75ce	                           jne 0x4006945	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x4006977	          0x4889df	                            mov rdi, rbx	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400697a	      0xbe28000000	                           mov esi, 0x28	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400697f	      0xe800000000	                          call 0x4006984	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x4006984	      0xe800000000	                          call 0x4006989	      5968	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_3
0x4006989	        0x4883c408	                              add rsp, 8	      5972	buffer.c	FUNCTION_92
0x400698d	          0x4889e8	                            mov rax, rbp	      5972	buffer.c	FUNCTION_92
0x4006990	              0x5b	                                 pop rbx	      5972	buffer.c	FUNCTION_92
0x4006991	              0x5d	                                 pop rbp	      5972	buffer.c	FUNCTION_92
0x4006992	              0xc3	                                     ret	      5972	buffer.c	FUNCTION_92
0x4006993	            0x31ed	                            xor ebp, ebp	      5944	buffer.c	FUNCTION_92
0x4006995	            0xebe0	                           jmp 0x4006977	      5944	buffer.c	FUNCTION_92
0x4006997	          0x4889f8	                            mov rax, rdi	      5947	buffer.c	FUNCTION_92	FOR_1
0x400699a	    0x488d8b201c00	                 lea rcx, [rbx + 0x1c20]	      5943	buffer.c	FUNCTION_92
0x40069a1	          0x4889d7	                            mov rdi, rdx	      5943	buffer.c	FUNCTION_92
0x40069a4	            0xebae	                           jmp 0x4006954	      5943	buffer.c	FUNCTION_92
do_autochdir	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0	20
0x40011b0	    0x8b1500000000	            mov edx, dword [0x040011b6] 	      1809	buffer.c	FUNCTION_22	IF_1
0x40011b6	            0x85d2	                           test edx, edx	      1809	buffer.c	FUNCTION_22	IF_1
0x40011b8	            0x740a	                            je 0x40011c4	      1809	buffer.c	FUNCTION_22	IF_1
0x40011ba	    0x8b0500000000	            mov eax, dword [0x040011c0] 	      1809	buffer.c	FUNCTION_22	IF_1
0x40011c0	            0x85c0	                           test eax, eax	      1809	buffer.c	FUNCTION_22	IF_1
0x40011c2	            0x742a	                            je 0x40011ee	      1809	buffer.c	FUNCTION_22	IF_1
0x40011c4	    0x488b05000000	            mov rax, qword [0x040011cb] 	      1810	buffer.c	FUNCTION_22	IF_1
0x40011cb	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      1810	buffer.c	FUNCTION_22	IF_1
0x40011d2	          0x4885ff	                           test rdi, rdi	      1810	buffer.c	FUNCTION_22	IF_1
0x40011d5	            0x7417	                            je 0x40011ee	      1810	buffer.c	FUNCTION_22	IF_1
0x40011d7	        0x4883ec08	                              sub rsp, 8	      1808	buffer.c	FUNCTION_22
0x40011db	      0xbe00000000	                              mov esi, 0	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x40011e0	      0xe800000000	                          call 0x40011e5	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x40011e5	          0x83f801	                              cmp eax, 1	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x40011e8	            0x7406	                            je 0x40011f0	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x40011ea	        0x4883c408	                              add rsp, 8	      1813	buffer.c	FUNCTION_22
0x40011ee	            0xf3c3	                                     ret	      1813	buffer.c	FUNCTION_22
0x40011f0	      0xbf01000000	                              mov edi, 1	      1812	buffer.c	FUNCTION_22	CALL_2
0x40011f5	        0x4883c408	                              add rsp, 8	      1813	buffer.c	FUNCTION_22
0x40011f9	      0xe900000000	                           jmp 0x40011fe	      1812	buffer.c	FUNCTION_22	CALL_2
open_buffer	IF,22:WHILE,0:DO,0:SWITCH,0:CALL,43:FOR,0:functions,0:ELSE,2	343
0x40072e0	            0x4157	                                push r15	       136	buffer.c	FUNCTION_2
0x40072e2	            0x4156	                                push r14	       136	buffer.c	FUNCTION_2
0x40072e4	            0x4155	                                push r13	       136	buffer.c	FUNCTION_2
0x40072e6	            0x4154	                                push r12	       136	buffer.c	FUNCTION_2
0x40072e8	          0x4989f5	                            mov r13, rsi	       136	buffer.c	FUNCTION_2
0x40072eb	              0x55	                                push rbp	       136	buffer.c	FUNCTION_2
0x40072ec	              0x53	                                push rbx	       136	buffer.c	FUNCTION_2
0x40072ed	            0x89fd	                            mov ebp, edi	       136	buffer.c	FUNCTION_2
0x40072ef	          0x4189d4	                           mov r12d, edx	       136	buffer.c	FUNCTION_2
0x40072f2	        0x4883ec68	                           sub rsp, 0x68	       136	buffer.c	FUNCTION_2
0x40072f6	    0x488b3d000000	            mov rdi, qword [0x040072fd] 	       140	buffer.c	FUNCTION_2
0x40072fd	    0x64488b042528	                mov rax, qword fs:[0x28]	       136	buffer.c	FUNCTION_2
0x4007306	      0x4889442458	             mov qword [rsp + 0x58], rax	       136	buffer.c	FUNCTION_2
0x400730b	            0x31c0	                            xor eax, eax	       136	buffer.c	FUNCTION_2
0x400730d	    0x8b0500000000	            mov eax, dword [0x04007313] 	       149	buffer.c	FUNCTION_2	IF_1
0x4007313	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       137	buffer.c	FUNCTION_2
0x400731b	    0x488b9fb81500	          mov rbx, qword [rdi + 0x15b8] 	       140	buffer.c	FUNCTION_2
0x4007322	            0x85c0	                           test eax, eax	       149	buffer.c	FUNCTION_2	IF_1
0x4007324	            0x741a	                            je 0x4007340	       149	buffer.c	FUNCTION_2	IF_1
0x4007326	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	       149	buffer.c	FUNCTION_2	IF_1
0x400732e	            0x7410	                            je 0x4007340	       149	buffer.c	FUNCTION_2	IF_1
0x4007330	        0xf6477c04	               test byte [rdi + 0x7c], 4	       150	buffer.c	FUNCTION_2	IF_1
0x4007334	            0x740a	                            je 0x4007340	       150	buffer.c	FUNCTION_2	IF_1
0x4007336	    0xc78760150000	            mov dword [rdi + 0x1560], 1 	       151	buffer.c	FUNCTION_2	IF_1
0x4007340	      0xe800000000	                          call 0x4007345	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4007345	            0x85c0	                           test eax, eax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4007347	          0x4189c7	                           mov r15d, eax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x400734a	     0xf8460010000	                            je 0x40074b0	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4007350	    0x488b1d000000	            mov rbx, qword [0x04007357] 	       183	buffer.c	FUNCTION_2	CALL_11
0x4007357	          0x4885db	                           test rbx, rbx	       362	buffer.c	FUNCTION_3
0x400735a	     0xf84a0040000	                            je 0x4007800	       362	buffer.c	FUNCTION_3
0x4007360	    0x8b83b8000000	            mov eax, dword [rbx + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4007366	        0x89442408	                mov dword [rsp + 8], eax	       362	buffer.c	FUNCTION_3
0x400736a	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	       189	buffer.c	FUNCTION_2	IF_6
0x4007371	    0x488b05000000	            mov rax, qword [0x04007378] 	       187	buffer.c	FUNCTION_2
0x4007378	    0x448b35000000	           mov r14d, dword [0x0400737f] 	       363	buffer.c	FUNCTION_3
0x400737f	    0xc70500000000	               mov dword [0x04007389], 0	       184	buffer.c	FUNCTION_2
0x4007389	          0x4885ff	                           test rdi, rdi	       189	buffer.c	FUNCTION_2	IF_6
0x400738c	    0xc780b4000000	               mov dword [rax + 0xb4], 0	       187	buffer.c	FUNCTION_2
0x4007396	            0x7410	                            je 0x40073a8	       189	buffer.c	FUNCTION_2	IF_6
0x4007398	    0x448b3d000000	           mov r15d, dword [0x0400739f] 	       191	buffer.c	FUNCTION_2	IF_6
0x400739f	          0x4585ff	                         test r15d, r15d	       191	buffer.c	FUNCTION_2	IF_6
0x40073a2	     0xf8508020000	                           jne 0x40075b0	       191	buffer.c	FUNCTION_2	IF_6
0x40073a8	            0x85ed	                           test ebp, ebp	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x40073aa	          0x4889df	                            mov rdi, rbx	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x40073ad	    0xc74424040000	                  mov dword [rsp + 4], 0	       142	buffer.c	FUNCTION_2
0x40073b5	     0xf85d5020000	                           jne 0x4007690	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x40073bb	        0xf6477c04	               test byte [rdi + 0x7c], 4	       263	buffer.c	FUNCTION_2	IF_15
0x40073bf	     0xf85cb010000	                           jne 0x4007590	       263	buffer.c	FUNCTION_2	IF_15
0x40073c5	    0x8b0500000000	            mov eax, dword [0x040073cb] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x40073cb	            0x85c0	                           test eax, eax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x40073cd	     0xf859d010000	                           jne 0x4007570	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x40073d3	    0x448b0d000000	            mov r9d, dword [0x040073da] 	       280	buffer.c	FUNCTION_2	IF_16
0x40073da	          0x4585c9	                           test r9d, r9d	       280	buffer.c	FUNCTION_2	IF_16
0x40073dd	     0xf8425030000	                            je 0x4007708	       280	buffer.c	FUNCTION_2	IF_16
0x40073e3	      0xe800000000	                          call 0x40073e8	       285	buffer.c	FUNCTION_2	CALL_29
0x40073e8	    0x488b3d000000	            mov rdi, qword [0x040073ef] 	       288	buffer.c	FUNCTION_2	CALL_31
0x40073ef	      0xe800000000	                          call 0x40073f4	       288	buffer.c	FUNCTION_2	CALL_31
0x40073f4	    0x488b05000000	            mov rax, qword [0x040073fb] 	       292	buffer.c	FUNCTION_2	CALL_32
0x40073fb	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       292	buffer.c	FUNCTION_2	CALL_32
0x4007402	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       292	buffer.c	FUNCTION_2	CALL_32
0x4007409	    0x488990000100	            mov qword [rax + 0x100], rdx	       294	buffer.c	FUNCTION_2	CALL_33
0x4007410	      0xe800000000	                          call 0x4007415	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4007415	            0x85c0	                           test eax, eax	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4007417	            0x740b	                            je 0x4007424	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4007419	    0x488b05000000	            mov rax, qword [0x04007420] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x4007420	        0x83487c40	            or dword [rax + 0x7c], 0x40 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x4007424	    0x488b3d000000	            mov rdi, qword [0x0400742b] 	       308	buffer.c	FUNCTION_2	CALL_35
0x400742b	      0xe800000000	                          call 0x4007430	       308	buffer.c	FUNCTION_2	CALL_35
0x4007430	    0x488b05000000	            mov rax, qword [0x04007437] 	       312	buffer.c	FUNCTION_2	IF_20
0x4007437	    0xf680b4000000	           test byte [rax + 0xb4], 0x80 	       312	buffer.c	FUNCTION_2	IF_20
0x400743e	            0x7458	                            je 0x4007498	       312	buffer.c	FUNCTION_2	IF_20
0x4007440	    0x4c8b05000000	              mov r8, qword [0x04007447]	       320	buffer.c	FUNCTION_2	CALL_36
0x4007447	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       320	buffer.c	FUNCTION_2	CALL_36
0x400744c	            0x31c9	                            xor ecx, ecx	       320	buffer.c	FUNCTION_2	CALL_36
0x400744e	            0x31d2	                            xor edx, edx	       320	buffer.c	FUNCTION_2	CALL_36
0x4007450	            0x31f6	                            xor esi, esi	       320	buffer.c	FUNCTION_2	CALL_36
0x4007452	      0xbf02000000	                              mov edi, 2	       320	buffer.c	FUNCTION_2	CALL_36
0x4007457	      0xe800000000	                          call 0x400745c	       320	buffer.c	FUNCTION_2	CALL_36
0x400745c	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	       325	buffer.c	FUNCTION_2	IF_21
0x4007461	        0x4183ff01	                             cmp r15d, 1	       325	buffer.c	FUNCTION_2	IF_21
0x4007465	     0xf84e5020000	                            je 0x4007750	       325	buffer.c	FUNCTION_2	IF_21
0x400746b	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       353	buffer.c	FUNCTION_2
0x4007470	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       353	buffer.c	FUNCTION_2
0x4007479	          0x4489f8	                           mov eax, r15d	       353	buffer.c	FUNCTION_2
0x400747c	     0xf8591040000	                           jne 0x4007913	       353	buffer.c	FUNCTION_2
0x4007482	        0x4883c468	                           add rsp, 0x68	       353	buffer.c	FUNCTION_2
0x4007486	              0x5b	                                 pop rbx	       353	buffer.c	FUNCTION_2
0x4007487	              0x5d	                                 pop rbp	       353	buffer.c	FUNCTION_2
0x4007488	            0x415c	                                 pop r12	       353	buffer.c	FUNCTION_2
0x400748a	            0x415d	                                 pop r13	       353	buffer.c	FUNCTION_2
0x400748c	            0x415e	                                 pop r14	       353	buffer.c	FUNCTION_2
0x400748e	            0x415f	                                 pop r15	       353	buffer.c	FUNCTION_2
0x4007490	              0xc3	                                     ret	       353	buffer.c	FUNCTION_2
0x4007491	     0xf1f80000000	                         nop dword [rax]	       353	buffer.c	FUNCTION_2
0x4007498	    0x48c740780100	               mov qword [rax + 0x78], 1	       314	buffer.c	FUNCTION_2	IF_20
0x40074a0	    0xc78084000000	               mov dword [rax + 0x84], 0	       316	buffer.c	FUNCTION_2	IF_20
0x40074aa	            0xeb94	                           jmp 0x4007440	       316	buffer.c	FUNCTION_2	IF_20
0x40074ac	         0xf1f4000	                         nop dword [rax]	       316	buffer.c	FUNCTION_2	IF_20
0x40074b0	    0x488b35000000	            mov rsi, qword [0x040074b7] 	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x40074b7	            0x31c9	                            xor ecx, ecx	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x40074b9	            0x31d2	                            xor edx, edx	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x40074bb	            0x31ff	                            xor edi, edi	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x40074bd	      0xe800000000	                          call 0x40074c2	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x40074c2	    0x488b05000000	            mov rax, qword [0x040074c9] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40074c9	          0x4885c0	                           test rax, rax	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40074cc	    0x488905000000	            mov qword [0x040074d3], rax 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40074d3	            0x742a	                            je 0x40074ff	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40074d5	      0x4883780800	                  cmp qword [rax + 8], 0	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40074da	            0x740f	                            je 0x40074eb	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40074dc	            0xeb44	                           jmp 0x4007522	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40074de	            0x6690	                                     nop	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40074e0	      0x4883780800	                  cmp qword [rax + 8], 0	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40074e5	     0xf8505030000	                           jne 0x40077f0	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x40074eb	        0x488b4068	            mov rax, qword [rax + 0x68] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40074ef	          0x4885c0	                           test rax, rax	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40074f2	            0x75ec	                           jne 0x40074e0	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40074f4	    0x48c705000000	               mov qword [0x040074ff], 0	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x40074ff	      0xba05000000	                              mov edx, 5	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4007504	      0xbe00000000	                              mov esi, 0	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4007509	            0x31ff	                            xor edi, edi	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x400750b	      0xe800000000	                          call 0x4007510	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4007510	          0x4889c7	                            mov rdi, rax	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4007513	      0xe800000000	                          call 0x4007518	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4007518	      0xbf02000000	                              mov edi, 2	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x400751d	      0xe800000000	                          call 0x4007522	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x4007522	      0xba05000000	                              mov edx, 5	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4007527	      0xbe00000000	                              mov esi, 0	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x400752c	            0x31ff	                            xor edi, edi	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x400752e	      0xe800000000	                          call 0x4007533	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4007533	          0x4889c7	                            mov rdi, rax	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4007536	      0xe800000000	                          call 0x400753b	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x400753b	    0x488b3d000000	            mov rdi, qword [0x04007542] 	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x4007542	      0xe800000000	                          call 0x4007547	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x4007547	    0x488b05000000	            mov rax, qword [0x0400754e] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x400754e	    0x483b98b81500	          cmp rbx, qword [rax + 0x15b8] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4007555	     0xf8410ffffff	                            je 0x400746b	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x400755b	    0x488b3d000000	            mov rdi, qword [0x04007562] 	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4007562	      0xe800000000	                          call 0x4007567	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4007567	      0xe9fffeffff	                           jmp 0x400746b	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x400756c	         0xf1f4000	                         nop dword [rax]	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4007570	    0x488b3d000000	            mov rdi, qword [0x04007577] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4007577	      0xbe69000000	                           mov esi, 0x69	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x400757c	      0xe800000000	                          call 0x4007581	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4007581	          0x4885c0	                           test rax, rax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4007584	     0xf8559feffff	                           jne 0x40073e3	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x400758a	      0xe944feffff	                           jmp 0x40073d3	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x400758f	              0x90	                                     nop	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4007590	            0x31f6	                            xor esi, esi	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x4007592	      0xe800000000	                          call 0x4007597	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x4007597	    0x488b3d000000	            mov rdi, qword [0x0400759e] 	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x400759e	      0xe800000000	                          call 0x40075a3	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x40075a3	      0xe91dfeffff	                           jmp 0x40073c5	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x40075a8	     0xf1f84000000	                   nop dword [rax + rax]	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x40075b0	    0x8b0500000000	            mov eax, dword [0x040075b6] 	       195	buffer.c	FUNCTION_2	IF_6
0x40075b6	          0x4189c7	                           mov r15d, eax	       195	buffer.c	FUNCTION_2	IF_6
0x40075b9	    0x8b8308140000	          mov eax, dword [rbx + 0x1408] 	       197	buffer.c	FUNCTION_2	IF_6
0x40075bf	        0x89442404	                mov dword [rsp + 4], eax	       197	buffer.c	FUNCTION_2	IF_6
0x40075c3	    0x8b0500000000	            mov eax, dword [0x040075c9] 	       201	buffer.c	FUNCTION_2	IF_6
0x40075c9	    0xc70500000000	               mov dword [0x040075d3], 0	       203	buffer.c	FUNCTION_2	IF_6
0x40075d3	        0x8944240c	              mov dword [rsp + 0xc], eax	       201	buffer.c	FUNCTION_2	IF_6
0x40075d7	      0xe800000000	                          call 0x40075dc	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x40075dc	            0x85c0	                           test eax, eax	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x40075de	            0x781b	                            js 0x40075fb	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x40075e0	      0x2500f00000	                         and eax, 0xf000	       209	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_13
0x40075e5	      0x3d00100000	                         cmp eax, 0x1000	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x40075ea	     0xf8420020000	                            je 0x4007810	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x40075f0	      0x3d00c00000	                         cmp eax, 0xc000	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x40075f5	     0xf8415020000	                            je 0x4007810	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x40075fb	      0xbf46000000	                           mov edi, 0x46	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4007600	      0xe800000000	                          call 0x4007605	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4007605	            0x85c0	                           test eax, eax	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4007607	     0xf85d2020000	                           jne 0x40078df	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x400760d	    0x488b05000000	            mov rax, qword [0x04007614] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007614	        0x4883ec08	                              sub rsp, 8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007618	        0x4183cc01	                              or r12d, 1	       226	buffer.c	FUNCTION_2	IF_6
0x400761c	            0x31d2	                            xor edx, edx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400761e	          0x4d89e9	                             mov r9, r13	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007621	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007627	            0x31c9	                            xor ecx, ecx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007629	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007630	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007637	            0x4154	                                push r12	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007639	      0xe800000000	                          call 0x400763e	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400763e	        0x8944242c	             mov dword [rsp + 0x2c], eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007642	    0x488b3d000000	            mov rdi, qword [0x04007649] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007649	              0x58	                                 pop rax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400764a	              0x5a	                                 pop rdx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400764b	    0xc74424040000	                  mov dword [rsp + 4], 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007653	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       237	buffer.c	FUNCTION_2	IF_6
0x4007657	          0x4885ff	                           test rdi, rdi	      5618	buffer.c	FUNCTION_79
0x400765a	    0x44893d000000	           mov dword [0x04007661], r15d 	       235	buffer.c	FUNCTION_2	IF_6
0x4007661	    0x890500000000	            mov dword [0x04007667], eax 	       237	buffer.c	FUNCTION_2	IF_6
0x4007667	     0xf844efdffff	                            je 0x40073bb	      5618	buffer.c	FUNCTION_79
0x400766d	    0x448ba7581700	         mov r12d, dword [rdi + 0x1758] 	      5618	buffer.c	FUNCTION_79
0x4007674	          0x4585e4	                         test r12d, r12d	      5618	buffer.c	FUNCTION_79
0x4007677	     0xf843efdffff	                            je 0x40073bb	      5618	buffer.c	FUNCTION_79
0x400767d	      0xe800000000	                          call 0x4007682	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4007682	    0x488b3d000000	            mov rdi, qword [0x04007689] 	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4007689	      0xe92dfdffff	                           jmp 0x40073bb	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x400768e	            0x6690	                                     nop	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4007690	          0x4489e0	                           mov eax, r12d	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4007693	        0x4883ec08	                              sub rsp, 8	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4007697	    0x448bbb081400	         mov r15d, dword [rbx + 0x1408] 	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x400769e	          0x83c805	                               or eax, 5	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076a1	    0xc78308140000	            mov dword [rbx + 0x1408], 1 	       253	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x40076ab	            0x31ff	                            xor edi, edi	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076ad	              0x50	                                push rax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076ae	          0x4531c9	                            xor r9d, r9d	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076b1	            0x31c9	                            xor ecx, ecx	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076b3	            0x31d2	                            xor edx, edx	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076b5	            0x31f6	                            xor esi, esi	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076b7	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076bd	      0xe800000000	                          call 0x40076c2	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076c2	    0x488b3d000000	            mov rdi, qword [0x040076c9] 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x40076c9	          0x83f801	                              cmp eax, 1	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x40076cc	        0x8944242c	             mov dword [rsp + 0x2c], eax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x40076d0	    0x4489bf081400	         mov dword [rdi + 0x1408], r15d 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x40076d7	            0x415a	                                 pop r10	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x40076d9	            0x415b	                                 pop r11	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x40076db	     0xf85dafcffff	                           jne 0x40073bb	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x40076e1	      0xbf01000000	                              mov edi, 1	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40076e6	          0x4489e2	                           mov edx, r12d	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40076e9	          0x4c89ee	                            mov rsi, r13	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40076ec	      0xe84f89ffff	                    call sym.read_buffer	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40076f1	    0x488b3d000000	            mov rdi, qword [0x040076f8] 	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40076f8	        0x8944241c	             mov dword [rsp + 0x1c], eax	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x40076fc	      0xe9bafcffff	                           jmp 0x40073bb	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x4007701	     0xf1f80000000	                         nop dword [rax]	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x4007708	      0xe800000000	                          call 0x400770d	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x400770d	            0x85c0	                           test eax, eax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x400770f	     0xf85ab010000	                           jne 0x40078c0	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4007715	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400771a	           0xf94c2	                                 sete dl	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400771d	            0x85ed	                           test ebp, ebp	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400771f	           0xf94c0	                                 sete al	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4007722	            0x84c2	                             test dl, al	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4007724	     0xf84befcffff	                            je 0x40073e8	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400772a	      0x448b442404	                mov r8d, dword [rsp + 4]	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400772f	          0x4585c0	                           test r8d, r8d	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4007732	     0xf85b0fcffff	                           jne 0x40073e8	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4007738	    0x488b3d000000	            mov rdi, qword [0x0400773f] 	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400773f	            0x31f6	                            xor esi, esi	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4007741	      0xe800000000	                          call 0x4007746	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4007746	      0xe99dfcffff	                           jmp 0x40073e8	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x400774b	       0xf1f440000	                   nop dword [rax + rax]	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4007750	    0x443b35000000	           cmp r14d, dword [0x04007757] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4007757	            0x7439	                            je 0x4007792	       377	buffer.c	FUNCTION_4	CALL_1
0x4007759	    0x488b05000000	            mov rax, qword [0x04007760] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007760	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007763	            0x7518	                           jne 0x400777d	       392	buffer.c	FUNCTION_5	FOR_1
0x4007765	      0xe901fdffff	                           jmp 0x400746b	       392	buffer.c	FUNCTION_5	FOR_1
0x400776a	    0x660f1f440000	                    nop word [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4007770	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007774	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007777	     0xf84eefcffff	                            je 0x400746b	       392	buffer.c	FUNCTION_5	FOR_1
0x400777d	          0x4839c3	                            cmp rbx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007780	            0x75ee	                           jne 0x4007770	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007782	        0x8b442408	                mov eax, dword [rsp + 8]	       378	buffer.c	FUNCTION_4
0x4007786	    0x3b83b8000000	            cmp eax, dword [rbx + 0xb8] 	       378	buffer.c	FUNCTION_4
0x400778c	     0xf85d9fcffff	                           jne 0x400746b	       378	buffer.c	FUNCTION_4
0x4007792	      0x48837b0800	                  cmp qword [rbx + 8], 0	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4007797	     0xf84cefcffff	                            je 0x400746b	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x400779d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x40077a2	          0x4889de	                            mov rsi, rbx	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x40077a5	      0xe800000000	                          call 0x40077aa	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x40077aa	    0x4c8b05000000	              mov r8, qword [0x040077b1]	      5340	buffer.c	FUNCTION_73	IF_1
0x40077b1	    0x418bb8381500	           mov edi, dword [r8 + 0x1538] 	      5340	buffer.c	FUNCTION_73	IF_1
0x40077b8	            0x85ff	                           test edi, edi	      5340	buffer.c	FUNCTION_73	IF_1
0x40077ba	     0xf85e8000000	                           jne 0x40078a8	      5340	buffer.c	FUNCTION_73	IF_1
0x40077c0	      0x4183607cf9	       and dword [r8 + 0x7c], 0xfffffff9	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x40077c5	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40077ca	            0x31c9	                            xor ecx, ecx	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40077cc	            0x31d2	                            xor edx, edx	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40077ce	            0x31f6	                            xor esi, esi	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40077d0	      0xbf0d000000	                            mov edi, 0xd	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40077d5	      0xe800000000	                          call 0x40077da	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x40077da	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x40077df	      0xe800000000	                          call 0x40077e4	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x40077e4	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x40077e9	      0xe97dfcffff	                           jmp 0x400746b	       352	buffer.c	FUNCTION_2
0x40077ee	            0x6690	                                     nop	       352	buffer.c	FUNCTION_2
0x40077f0	    0x488905000000	            mov qword [0x040077f7], rax 	       352	buffer.c	FUNCTION_2
0x40077f7	      0xe926fdffff	                           jmp 0x4007522	       352	buffer.c	FUNCTION_2
0x40077fc	         0xf1f4000	                         nop dword [rax]	       352	buffer.c	FUNCTION_2
0x4007800	    0xc74424080000	                  mov dword [rsp + 8], 0	       362	buffer.c	FUNCTION_3
0x4007808	      0xe95dfbffff	                           jmp 0x400736a	       362	buffer.c	FUNCTION_3
0x400780d	           0xf1f00	                         nop dword [rax]	       362	buffer.c	FUNCTION_3
0x4007810	    0x488b05000000	            mov rax, qword [0x04007817] 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x4007817	      0xbf46000000	                           mov edi, 0x46	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x400781c	    0xc78008140000	            mov dword [rax + 0x1408], 1 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x4007826	      0xe800000000	                          call 0x400782b	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x400782b	            0x85c0	                           test eax, eax	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x400782d	            0x740a	                            je 0x4007839	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x400782f	    0xc70500000000	               mov dword [0x04007839], 1	       223	buffer.c	FUNCTION_2	IF_6	IF_9
0x4007839	    0x488b15000000	            mov rdx, qword [0x04007840] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007840	          0x4489e0	                           mov eax, r12d	       226	buffer.c	FUNCTION_2	IF_6
0x4007843	        0x4883ec08	                              sub rsp, 8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007847	          0x83c801	                               or eax, 1	       226	buffer.c	FUNCTION_2	IF_6
0x400784a	            0x31c9	                            xor ecx, ecx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400784c	          0x4d89e9	                             mov r9, r13	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400784f	          0x83c840	                            or eax, 0x40	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007852	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007858	    0x488bb2980000	            mov rsi, qword [rdx + 0x98] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400785f	    0x488bba880000	            mov rdi, qword [rdx + 0x88] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007866	            0x31d2	                            xor edx, edx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007868	              0x50	                                push rax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007869	      0xe800000000	                          call 0x400786e	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x400786e	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x4007872	    0x488b3d000000	            mov rdi, qword [0x04007879] 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x4007879	          0x83f801	                              cmp eax, 1	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x400787c	        0x8944242c	             mov dword [rsp + 0x2c], eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4007880	    0x898f08140000	          mov dword [rdi + 0x1408], ecx 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x4007886	              0x59	                                 pop rcx	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x4007887	              0x5e	                                 pop rsi	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x4007888	            0x7464	                            je 0x40078ee	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x400788a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       237	buffer.c	FUNCTION_2	IF_6
0x400788e	    0x44893d000000	           mov dword [0x04007895], r15d 	       235	buffer.c	FUNCTION_2	IF_6
0x4007895	    0xc74424040100	                  mov dword [rsp + 4], 1	       237	buffer.c	FUNCTION_2	IF_6
0x400789d	    0x890500000000	            mov dword [0x040078a3], eax 	       237	buffer.c	FUNCTION_2	IF_6
0x40078a3	      0xe9c5fdffff	                           jmp 0x400766d	       237	buffer.c	FUNCTION_2	IF_6
0x40078a8	            0x31ff	                            xor edi, edi	       237	buffer.c	FUNCTION_2	IF_6
0x40078aa	      0xe80193ffff	           call sym.do_modelines.part.14	       237	buffer.c	FUNCTION_2	IF_6
0x40078af	    0x4c8b05000000	              mov r8, qword [0x040078b6]	       237	buffer.c	FUNCTION_2	IF_6
0x40078b6	      0xe905ffffff	                           jmp 0x40077c0	       237	buffer.c	FUNCTION_2	IF_6
0x40078bb	       0xf1f440000	                   nop dword [rax + rax]	       237	buffer.c	FUNCTION_2	IF_6
0x40078c0	    0x488b3d000000	            mov rdi, qword [0x040078c7] 	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x40078c7	      0xbe69000000	                           mov esi, 0x69	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x40078cc	      0xe800000000	                          call 0x40078d1	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x40078d1	          0x4885c0	                           test rax, rax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x40078d4	     0xf8509fbffff	                           jne 0x40073e3	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x40078da	      0xe936feffff	                           jmp 0x4007715	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x40078df	    0xc70500000000	               mov dword [0x040078e9], 1	       223	buffer.c	FUNCTION_2	IF_6	IF_9
0x40078e9	      0xe91ffdffff	                           jmp 0x400760d	       223	buffer.c	FUNCTION_2	IF_6	IF_9
0x40078ee	            0x31ff	                            xor edi, edi	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40078f0	          0x4489e2	                           mov edx, r12d	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40078f3	          0x4c89ee	                            mov rsi, r13	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40078f6	      0xe84587ffff	                    call sym.read_buffer	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40078fb	    0x488b3d000000	            mov rdi, qword [0x04007902] 	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4007902	        0x8944241c	             mov dword [rsp + 0x1c], eax	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4007906	    0xc74424040100	                  mov dword [rsp + 4], 1	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x400790e	      0xe940fdffff	                           jmp 0x4007653	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4007913	      0xe800000000	                          call 0x4007918	       353	buffer.c	FUNCTION_2
free_buf_options	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,52:FOR,0:functions,0:ELSE,0	117
0x40012e0	              0x55	                                push rbp	      2119	buffer.c	FUNCTION_27
0x40012e1	              0x53	                                push rbx	      2119	buffer.c	FUNCTION_27
0x40012e2	          0x4889fb	                            mov rbx, rdi	      2119	buffer.c	FUNCTION_27
0x40012e5	        0x4883ec08	                              sub rsp, 8	      2119	buffer.c	FUNCTION_27
0x40012e9	            0x85f6	                           test esi, esi	      2120	buffer.c	FUNCTION_27	IF_1
0x40012eb	            0x7430	                            je 0x400131d	      2120	buffer.c	FUNCTION_27	IF_1
0x40012ed	    0x488dbf881400	                 lea rdi, [rdi + 0x1488]	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x40012f4	      0xe800000000	                          call 0x40012f9	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x40012f9	    0x488dbb901400	                 lea rdi, [rbx + 0x1490]	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4001300	      0xe800000000	                          call 0x4001305	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4001305	    0x488dbb101400	                 lea rdi, [rbx + 0x1410]	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x400130c	      0xe800000000	                          call 0x4001311	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x4001311	    0x488dbb181400	                 lea rdi, [rbx + 0x1418]	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x4001318	      0xe800000000	                          call 0x400131d	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x400131d	    0x488dbbc01400	                 lea rdi, [rbx + 0x14c0]	      2130	buffer.c	FUNCTION_27	CALL_5
0x4001324	    0x488dab901200	                 lea rbp, [rbx + 0x1290]	      2160	buffer.c	FUNCTION_27	CALL_21
0x400132b	      0xe800000000	                          call 0x4001330	      2130	buffer.c	FUNCTION_27	CALL_5
0x4001330	    0x488dbbc81400	                 lea rdi, [rbx + 0x14c8]	      2131	buffer.c	FUNCTION_27	CALL_6
0x4001337	      0xe800000000	                          call 0x400133c	      2131	buffer.c	FUNCTION_27	CALL_6
0x400133c	    0x488dbbd01400	                 lea rdi, [rbx + 0x14d0]	      2133	buffer.c	FUNCTION_27	CALL_7
0x4001343	      0xe800000000	                          call 0x4001348	      2133	buffer.c	FUNCTION_27	CALL_7
0x4001348	    0x488dbbe01400	                 lea rdi, [rbx + 0x14e0]	      2137	buffer.c	FUNCTION_27	CALL_8
0x400134f	      0xe800000000	                          call 0x4001354	      2137	buffer.c	FUNCTION_27	CALL_8
0x4001354	    0x488dbbf01400	                 lea rdi, [rbx + 0x14f0]	      2138	buffer.c	FUNCTION_27	CALL_9
0x400135b	      0xe800000000	                          call 0x4001360	      2138	buffer.c	FUNCTION_27	CALL_9
0x4001360	    0x488dbb381700	                 lea rdi, [rbx + 0x1738]	      2141	buffer.c	FUNCTION_27	CALL_10
0x4001367	      0xe800000000	                          call 0x400136c	      2141	buffer.c	FUNCTION_27	CALL_10
0x400136c	    0x488dbb481700	                 lea rdi, [rbx + 0x1748]	      2144	buffer.c	FUNCTION_27	CALL_11
0x4001373	      0xe800000000	                          call 0x4001378	      2144	buffer.c	FUNCTION_27	CALL_11
0x4001378	    0x488dbbf81400	                 lea rdi, [rbx + 0x14f8]	      2146	buffer.c	FUNCTION_27	CALL_12
0x400137f	      0xe800000000	                          call 0x4001384	      2146	buffer.c	FUNCTION_27	CALL_12
0x4001384	    0x488dbb001500	                 lea rdi, [rbx + 0x1500]	      2148	buffer.c	FUNCTION_27	CALL_13
0x400138b	      0xe800000000	                          call 0x4001390	      2148	buffer.c	FUNCTION_27	CALL_13
0x4001390	    0x488dbb101500	                 lea rdi, [rbx + 0x1510]	      2151	buffer.c	FUNCTION_27	CALL_14
0x4001397	      0xe800000000	                          call 0x400139c	      2151	buffer.c	FUNCTION_27	CALL_14
0x400139c	    0x488dbb181500	                 lea rdi, [rbx + 0x1518]	      2153	buffer.c	FUNCTION_27	CALL_15
0x40013a3	      0xe800000000	                          call 0x40013a8	      2153	buffer.c	FUNCTION_27	CALL_15
0x40013a8	    0x488dbb301500	                 lea rdi, [rbx + 0x1530]	      2154	buffer.c	FUNCTION_27	CALL_16
0x40013af	      0xe800000000	                          call 0x40013b4	      2154	buffer.c	FUNCTION_27	CALL_16
0x40013b4	    0x488dbba01400	                 lea rdi, [rbx + 0x14a0]	      2155	buffer.c	FUNCTION_27	CALL_17
0x40013bb	      0xe800000000	                          call 0x40013c0	      2155	buffer.c	FUNCTION_27	CALL_17
0x40013c0	    0x488dbba81400	                 lea rdi, [rbx + 0x14a8]	      2156	buffer.c	FUNCTION_27	CALL_18
0x40013c7	      0xe800000000	                          call 0x40013cc	      2156	buffer.c	FUNCTION_27	CALL_18
0x40013cc	    0x488dbbb81400	                 lea rdi, [rbx + 0x14b8]	      2157	buffer.c	FUNCTION_27	CALL_19
0x40013d3	      0xe800000000	                          call 0x40013d8	      2157	buffer.c	FUNCTION_27	CALL_19
0x40013d8	    0x488dbbe81500	                 lea rdi, [rbx + 0x15e8]	      2159	buffer.c	FUNCTION_27	CALL_20
0x40013df	      0xe800000000	                          call 0x40013e4	      2159	buffer.c	FUNCTION_27	CALL_20
0x40013e4	          0x4889ef	                            mov rdi, rbp	      2160	buffer.c	FUNCTION_27	CALL_21
0x40013e7	      0xe800000000	                          call 0x40013ec	      2160	buffer.c	FUNCTION_27	CALL_21
0x40013ec	          0x4889ef	                            mov rdi, rbp	      2161	buffer.c	FUNCTION_27	CALL_22
0x40013ef	      0xe800000000	                          call 0x40013f4	      2161	buffer.c	FUNCTION_27	CALL_22
0x40013f4	    0x488dbb481400	                 lea rdi, [rbx + 0x1448]	      2164	buffer.c	FUNCTION_27	CALL_23
0x40013fb	      0xe800000000	                          call 0x4001400	      2164	buffer.c	FUNCTION_27	CALL_23
0x4001400	    0x488dbb501400	                 lea rdi, [rbx + 0x1450]	      2167	buffer.c	FUNCTION_27	CALL_24
0x4001407	      0xe800000000	                          call 0x400140c	      2167	buffer.c	FUNCTION_27	CALL_24
0x400140c	    0x488dbb481500	                 lea rdi, [rbx + 0x1548]	      2169	buffer.c	FUNCTION_27	CALL_25
0x4001413	      0xe800000000	                          call 0x4001418	      2169	buffer.c	FUNCTION_27	CALL_25
0x4001418	    0x488dbba01500	                 lea rdi, [rbx + 0x15a0]	      2171	buffer.c	FUNCTION_27	CALL_26
0x400141f	      0xe800000000	                          call 0x4001424	      2171	buffer.c	FUNCTION_27	CALL_26
0x4001424	    0x488dbb181c00	                 lea rdi, [rbx + 0x1c18]	      2172	buffer.c	FUNCTION_27	CALL_27
0x400142b	      0xe800000000	                          call 0x4001430	      2172	buffer.c	FUNCTION_27	CALL_27
0x4001430	    0x488dbbd01b00	                 lea rdi, [rbx + 0x1bd0]	      2175	buffer.c	FUNCTION_27	CALL_28
0x4001437	      0xe800000000	                          call 0x400143c	      2175	buffer.c	FUNCTION_27	CALL_28
0x400143c	    0x488dbbe01b00	                 lea rdi, [rbx + 0x1be0]	      2176	buffer.c	FUNCTION_27	CALL_29
0x4001443	      0xe800000000	                          call 0x4001448	      2176	buffer.c	FUNCTION_27	CALL_29
0x4001448	    0x488bbbd81b00	          mov rdi, qword [rbx + 0x1bd8] 	      2177	buffer.c	FUNCTION_27	CALL_30
0x400144f	      0xe800000000	                          call 0x4001454	      2177	buffer.c	FUNCTION_27	CALL_30
0x4001454	    0x488dbbe81b00	                 lea rdi, [rbx + 0x1be8]	      2179	buffer.c	FUNCTION_27	CALL_31
0x400145b	    0x48c783d81b00	            mov qword [rbx + 0x1bd8], 0 	      2178	buffer.c	FUNCTION_27
0x4001466	      0xe800000000	                          call 0x400146b	      2179	buffer.c	FUNCTION_27	CALL_31
0x400146b	    0x488dbb881500	                 lea rdi, [rbx + 0x1588]	      2182	buffer.c	FUNCTION_27	CALL_32
0x4001472	      0xe800000000	                          call 0x4001477	      2182	buffer.c	FUNCTION_27	CALL_32
0x4001477	    0x488dbb981400	                 lea rdi, [rbx + 0x1498]	      2184	buffer.c	FUNCTION_27	CALL_33
0x400147e	      0xe800000000	                          call 0x4001483	      2184	buffer.c	FUNCTION_27	CALL_33
0x4001483	    0x488dbb381400	                 lea rdi, [rbx + 0x1438]	      2186	buffer.c	FUNCTION_27	CALL_34
0x400148a	      0xe800000000	                          call 0x400148f	      2186	buffer.c	FUNCTION_27	CALL_34
0x400148f	    0x488dbb301400	                 lea rdi, [rbx + 0x1430]	      2187	buffer.c	FUNCTION_27	CALL_35
0x4001496	      0xe800000000	                          call 0x400149b	      2187	buffer.c	FUNCTION_27	CALL_35
0x400149b	    0x488dbb401400	                 lea rdi, [rbx + 0x1440]	      2190	buffer.c	FUNCTION_27	CALL_36
0x40014a2	      0xe800000000	                          call 0x40014a7	      2190	buffer.c	FUNCTION_27	CALL_36
0x40014a7	    0x488dbb581400	                 lea rdi, [rbx + 0x1458]	      2193	buffer.c	FUNCTION_27	CALL_37
0x40014ae	      0xe800000000	                          call 0x40014b3	      2193	buffer.c	FUNCTION_27	CALL_37
0x40014b3	    0x488dbb601400	                 lea rdi, [rbx + 0x1460]	      2196	buffer.c	FUNCTION_27	CALL_38
0x40014ba	      0xe800000000	                          call 0x40014bf	      2196	buffer.c	FUNCTION_27	CALL_38
0x40014bf	    0x488dbb681400	                 lea rdi, [rbx + 0x1468]	      2197	buffer.c	FUNCTION_27	CALL_39
0x40014c6	      0xe800000000	                          call 0x40014cb	      2197	buffer.c	FUNCTION_27	CALL_39
0x40014cb	    0x488dbbf01500	                 lea rdi, [rbx + 0x15f0]	      2200	buffer.c	FUNCTION_27	CALL_40
0x40014d2	      0xe800000000	                          call 0x40014d7	      2200	buffer.c	FUNCTION_27	CALL_40
0x40014d7	    0x488dbbf81500	                 lea rdi, [rbx + 0x15f8]	      2201	buffer.c	FUNCTION_27	CALL_41
0x40014de	      0xe800000000	                          call 0x40014e3	      2201	buffer.c	FUNCTION_27	CALL_41
0x40014e3	    0x488dbb001600	                 lea rdi, [rbx + 0x1600]	      2202	buffer.c	FUNCTION_27	CALL_42
0x40014ea	      0xe800000000	                          call 0x40014ef	      2202	buffer.c	FUNCTION_27	CALL_42
0x40014ef	    0x488dbb081600	                 lea rdi, [rbx + 0x1608]	      2204	buffer.c	FUNCTION_27	CALL_43
0x40014f6	      0xe800000000	                          call 0x40014fb	      2204	buffer.c	FUNCTION_27	CALL_43
0x40014fb	    0x488dbb101600	                 lea rdi, [rbx + 0x1610]	      2205	buffer.c	FUNCTION_27	CALL_44
0x4001502	      0xe800000000	                          call 0x4001507	      2205	buffer.c	FUNCTION_27	CALL_44
0x4001507	    0x488dbb201600	                 lea rdi, [rbx + 0x1620]	      2206	buffer.c	FUNCTION_27	CALL_45
0x400150e	      0xe800000000	                          call 0x4001513	      2206	buffer.c	FUNCTION_27	CALL_45
0x4001513	    0x488dbb281600	                 lea rdi, [rbx + 0x1628]	      2207	buffer.c	FUNCTION_27	CALL_46
0x400151a	      0xe800000000	                          call 0x400151f	      2207	buffer.c	FUNCTION_27	CALL_46
0x400151f	    0x488dbb381600	                 lea rdi, [rbx + 0x1638]	      2209	buffer.c	FUNCTION_27	CALL_47
0x4001526	      0xe800000000	                          call 0x400152b	      2209	buffer.c	FUNCTION_27	CALL_47
0x400152b	    0x488dbb401600	                 lea rdi, [rbx + 0x1640]	      2210	buffer.c	FUNCTION_27	CALL_48
0x4001532	      0xe800000000	                          call 0x4001537	      2210	buffer.c	FUNCTION_27	CALL_48
0x4001537	    0x488dbb581500	                 lea rdi, [rbx + 0x1558]	      2213	buffer.c	FUNCTION_27	CALL_49
0x400153e	      0xe800000000	                          call 0x4001543	      2213	buffer.c	FUNCTION_27	CALL_49
0x4001543	    0x488dbb581600	                 lea rdi, [rbx + 0x1658]	      2218	buffer.c	FUNCTION_27	CALL_50
0x400154a	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	      2215	buffer.c	FUNCTION_27
0x4001554	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	      2216	buffer.c	FUNCTION_27
0x400155f	      0xe800000000	                          call 0x4001564	      2218	buffer.c	FUNCTION_27	CALL_50
0x4001564	    0x488dbbf81300	                 lea rdi, [rbx + 0x13f8]	      2220	buffer.c	FUNCTION_27	CALL_51
0x400156b	      0xe800000000	                          call 0x4001570	      2220	buffer.c	FUNCTION_27	CALL_51
0x4001570	        0x4883c408	                              add rsp, 8	      2224	buffer.c	FUNCTION_27
0x4001574	    0x488dbb281500	                 lea rdi, [rbx + 0x1528]	      2222	buffer.c	FUNCTION_27	CALL_52
0x400157b	              0x5b	                                 pop rbx	      2224	buffer.c	FUNCTION_27
0x400157c	              0x5d	                                 pop rbp	      2224	buffer.c	FUNCTION_27
0x400157d	      0xe900000000	                           jmp 0x4001582	      2222	buffer.c	FUNCTION_27	CALL_52
insert_sign	IF,5:WHILE,0:DO,0:SWITCH,0:CALL,4:FOR,0:functions,0:ELSE,1	53
0x4000660	            0x4157	                                push r15	      5789	buffer.c	FUNCTION_88
0x4000662	            0x4156	                                push r14	      5789	buffer.c	FUNCTION_88
0x4000664	          0x4989fe	                            mov r14, rdi	      5789	buffer.c	FUNCTION_88
0x4000667	            0x4155	                                push r13	      5789	buffer.c	FUNCTION_88
0x4000669	            0x4154	                                push r12	      5789	buffer.c	FUNCTION_88
0x400066b	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0x4000670	              0x55	                                push rbp	      5789	buffer.c	FUNCTION_88
0x4000671	              0x53	                                push rbx	      5789	buffer.c	FUNCTION_88
0x4000672	          0x4889f3	                            mov rbx, rsi	      5789	buffer.c	FUNCTION_88
0x4000675	            0x31f6	                            xor esi, esi	      5792	buffer.c	FUNCTION_88	CALL_1
0x4000677	          0x4889d5	                            mov rbp, rdx	      5789	buffer.c	FUNCTION_88
0x400067a	          0x4189cf	                           mov r15d, ecx	      5789	buffer.c	FUNCTION_88
0x400067d	        0x4883ec18	                           sub rsp, 0x18	      5789	buffer.c	FUNCTION_88
0x4000681	          0x4d89c5	                             mov r13, r8	      5789	buffer.c	FUNCTION_88
0x4000684	          0x4589cc	                           mov r12d, r9d	      5789	buffer.c	FUNCTION_88
0x4000687	      0xe800000000	                          call 0x400068c	      5792	buffer.c	FUNCTION_88	CALL_1
0x400068c	          0x4885c0	                           test rax, rax	      5793	buffer.c	FUNCTION_88	IF_1
0x400068f	            0x7425	                            je 0x40006b6	      5793	buffer.c	FUNCTION_88	IF_1
0x4000691	          0x4885ed	                           test rbp, rbp	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x4000694	          0x448938	                   mov dword [rax], r15d	      5795	buffer.c	FUNCTION_88	IF_1
0x4000697	        0x4c896808	                mov qword [rax + 8], r13	      5796	buffer.c	FUNCTION_88	IF_1
0x400069b	        0x44896010	            mov dword [rax + 0x10], r12d	      5797	buffer.c	FUNCTION_88	IF_1
0x400069f	        0x48896818	             mov qword [rax + 0x18], rbp	      5798	buffer.c	FUNCTION_88	IF_1
0x40006a3	        0x48895820	             mov qword [rax + 0x20], rbx	      5800	buffer.c	FUNCTION_88	IF_1
0x40006a7	            0x7404	                            je 0x40006ad	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x40006a9	        0x48894520	            mov qword [rbp + 0x20], rax 	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0x40006ad	          0x4885db	                           test rbx, rbx	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x40006b0	            0x7416	                            je 0x40006c8	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x40006b2	        0x48894318	             mov qword [rbx + 0x18], rax	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0x40006b6	        0x4883c418	                           add rsp, 0x18	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006ba	              0x5b	                                 pop rbx	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006bb	              0x5d	                                 pop rbp	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006bc	            0x415c	                                 pop r12	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006be	            0x415d	                                 pop r13	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006c0	            0x415e	                                 pop r14	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006c2	            0x415f	                                 pop r15	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006c4	              0xc3	                                     ret	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006c5	           0xf1f00	                         nop dword [rax]	      5825	buffer.c	FUNCTION_88	ELSE_1
0x40006c8	    0x4983be201c00	             cmp qword [r14 + 0x1c20], 0	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x40006d0	            0x741d	                            je 0x40006ef	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x40006d2	    0x498986201c00	          mov qword [r14 + 0x1c20], rax 	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0x40006d9	      0xe800000000	                          call 0x40006de	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x40006de	            0x85c0	                           test eax, eax	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x40006e0	            0x74d4	                            je 0x40006b6	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x40006e2	    0x41c786281c00	            mov dword [r14 + 0x1c28], 1 	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0x40006ed	            0xebc7	                           jmp 0x40006b6	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0x40006ef	      0xbe28000000	                           mov esi, 0x28	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x40006f4	          0x4c89f7	                            mov rdi, r14	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x40006f7	      0x4889442408	                mov qword [rsp + 8], rax	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x40006fc	      0xe800000000	                          call 0x4000701	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x4000701	      0xe800000000	                          call 0x4000706	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
0x4000706	      0x488b442408	                mov rax, qword [rsp + 8]	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
0x400070b	            0xebc5	                           jmp 0x40006d2	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
otherfile	IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:ELSE,0	4
0x40024e0	          0x4889fe	                            mov rsi, rdi	      3306	buffer.c	FUNCTION_55
0x40024e3	    0x488b3d000000	            mov rdi, qword [0x040024ea] 	      3307	buffer.c	FUNCTION_55	CALL_1
0x40024ea	            0x31d2	                            xor edx, edx	      3307	buffer.c	FUNCTION_55	CALL_1
0x40024ec	      0xe9bffdffff	                   jmp sym.otherfile_buf	      3307	buffer.c	FUNCTION_55	CALL_1
free_buffer	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,14:FOR,0:functions,0:ELSE,1	39
0x4006c20	              0x53	                                push rbx	       822	buffer.c	FUNCTION_11
0x4006c21	      0xbe01000000	                              mov esi, 1	       824	buffer.c	FUNCTION_11	CALL_1
0x4006c26	          0x4889fb	                            mov rbx, rdi	       822	buffer.c	FUNCTION_11
0x4006c29	    0x830500000000	               add dword [0x04006c30], 1	       823	buffer.c	FUNCTION_11
0x4006c30	      0xe8fbfeffff	              call sym.free_buffer_stuff	       824	buffer.c	FUNCTION_11	CALL_1
0x4006c35	    0x488bbb301700	          mov rdi, qword [rbx + 0x1730] 	       827	buffer.c	FUNCTION_11	CALL_2
0x4006c3c	    0x488db3d00000	                   lea rsi, [rbx + 0xd0]	       827	buffer.c	FUNCTION_11	CALL_2
0x4006c43	      0xe800000000	                          call 0x4006c48	       827	buffer.c	FUNCTION_11	CALL_2
0x4006c48	    0x488bbb301700	          mov rdi, qword [rbx + 0x1730] 	       828	buffer.c	FUNCTION_11	CALL_3
0x4006c4f	      0xe800000000	                          call 0x4006c54	       828	buffer.c	FUNCTION_11	CALL_3
0x4006c54	          0x4889df	                            mov rdi, rbx	       849	buffer.c	FUNCTION_11	CALL_10
0x4006c57	      0xe800000000	                          call 0x4006c5c	       849	buffer.c	FUNCTION_11	CALL_10
0x4006c5c	          0x4889df	                            mov rdi, rbx	       852	buffer.c	FUNCTION_11	CALL_11
0x4006c5f	      0xe800000000	                          call 0x4006c64	       852	buffer.c	FUNCTION_11	CALL_11
0x4006c64	    0x488db3bc0000	                   lea rsi, [rbx + 0xbc]	       414	buffer.c	FUNCTION_7	CALL_1
0x4006c6b	      0xbf00000000	                              mov edi, 0	       414	buffer.c	FUNCTION_7	CALL_1
0x4006c70	      0xe800000000	                          call 0x4006c75	       414	buffer.c	FUNCTION_7	CALL_1
0x4006c75	        0x488b5008	                mov rdx, qword [rax + 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4006c79	          0x4885d2	                           test rdx, rdx	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4006c7c	            0x7416	                            je 0x4006c94	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4006c7e	    0x4881fa000000	                              cmp rdx, 0	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4006c85	            0x740d	                            je 0x4006c94	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x4006c87	          0x4889c6	                            mov rsi, rax	       417	buffer.c	FUNCTION_7	CALL_3
0x4006c8a	      0xbf00000000	                              mov edi, 0	       417	buffer.c	FUNCTION_7	CALL_3
0x4006c8f	      0xe800000000	                          call 0x4006c94	       417	buffer.c	FUNCTION_7	CALL_3
0x4006c94	          0x4889df	                            mov rdi, rbx	       857	buffer.c	FUNCTION_11	CALL_13
0x4006c97	      0xe800000000	                          call 0x4006c9c	       857	buffer.c	FUNCTION_11	CALL_13
0x4006c9c	    0x8b0500000000	            mov eax, dword [0x04006ca2] 	       859	buffer.c	FUNCTION_11	IF_1
0x4006ca2	            0x85c0	                           test eax, eax	       859	buffer.c	FUNCTION_11	IF_1
0x4006ca4	            0x741a	                            je 0x4006cc0	       859	buffer.c	FUNCTION_11	IF_1
0x4006ca6	    0x488b05000000	            mov rax, qword [0x04006cad] 	       863	buffer.c	FUNCTION_11	IF_1
0x4006cad	    0x48891d000000	            mov qword [0x04006cb4], rbx 	       864	buffer.c	FUNCTION_11	IF_1
0x4006cb4	        0x48894368	             mov qword [rbx + 0x68], rax	       863	buffer.c	FUNCTION_11	IF_1
0x4006cb8	              0x5b	                                 pop rbx	       868	buffer.c	FUNCTION_11
0x4006cb9	              0xc3	                                     ret	       868	buffer.c	FUNCTION_11
0x4006cba	    0x660f1f440000	                    nop word [rax + rax]	       868	buffer.c	FUNCTION_11
0x4006cc0	          0x4889df	                            mov rdi, rbx	       867	buffer.c	FUNCTION_11	CALL_14
0x4006cc3	              0x5b	                                 pop rbx	       868	buffer.c	FUNCTION_11
0x4006cc4	      0xe900000000	                           jmp 0x4006cc9	       867	buffer.c	FUNCTION_11	CALL_14
buf_contents_changed	IF,6:WHILE,0:DO,0:SWITCH,0:CALL,12:FOR,1:functions,0:ELSE,0	91
0x400a1d0	            0x4155	                                push r13	      6169	buffer.c	FUNCTION_102
0x400a1d2	            0x4154	                                push r12	      6169	buffer.c	FUNCTION_102
0x400a1d4	            0x31f6	                            xor esi, esi	      6177	buffer.c	FUNCTION_102	CALL_1
0x400a1d6	              0x55	                                push rbp	      6169	buffer.c	FUNCTION_102
0x400a1d7	              0x53	                                push rbx	      6169	buffer.c	FUNCTION_102
0x400a1d8	          0x4989fc	                            mov r12, rdi	      6169	buffer.c	FUNCTION_102
0x400a1db	      0xb904000000	                              mov ecx, 4	      6177	buffer.c	FUNCTION_102	CALL_1
0x400a1e0	            0x31ff	                            xor edi, edi	      6177	buffer.c	FUNCTION_102	CALL_1
0x400a1e2	      0xba01000000	                              mov edx, 1	      6177	buffer.c	FUNCTION_102	CALL_1
0x400a1e7	    0x4881ec080100	                          sub rsp, 0x108	      6169	buffer.c	FUNCTION_102
0x400a1ee	      0xbd01000000	                              mov ebp, 1	      6179	buffer.c	FUNCTION_102	IF_1
0x400a1f3	    0x64488b042528	                mov rax, qword fs:[0x28]	      6169	buffer.c	FUNCTION_102
0x400a1fc	    0x48898424f800	             mov qword [rsp + 0xf8], rax	      6169	buffer.c	FUNCTION_102
0x400a204	            0x31c0	                            xor eax, eax	      6169	buffer.c	FUNCTION_102
0x400a206	      0xe800000000	                          call 0x400a20b	      6177	buffer.c	FUNCTION_102	CALL_1
0x400a20b	          0x4885c0	                           test rax, rax	      6178	buffer.c	FUNCTION_102	IF_1
0x400a20e	            0x745a	                            je 0x400a26a	      6178	buffer.c	FUNCTION_102	IF_1
0x400a210	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400a215	          0x4c89e6	                            mov rsi, r12	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400a218	          0x4889c3	                            mov rbx, rax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400a21b	      0xe800000000	                          call 0x400a220	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400a220	            0x85c0	                           test eax, eax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400a222	            0x743c	                            je 0x400a260	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400a224	          0x4889de	                            mov rsi, rbx	      6189	buffer.c	FUNCTION_102	CALL_4
0x400a227	          0x4889e7	                            mov rdi, rsp	      6189	buffer.c	FUNCTION_102	CALL_4
0x400a22a	      0xe800000000	                          call 0x400a22f	      6189	buffer.c	FUNCTION_102	CALL_4
0x400a22f	    0x488b3d000000	            mov rdi, qword [0x0400a236] 	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400a236	      0xe800000000	                          call 0x400a23b	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400a23b	          0x83f801	                              cmp eax, 1	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400a23e	            0x7458	                            je 0x400a298	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400a240	      0xbd01000000	                              mov ebp, 1	      6171	buffer.c	FUNCTION_102
0x400a245	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      6208	buffer.c	FUNCTION_102	CALL_10
0x400a24a	      0xe800000000	                          call 0x400a24f	      6208	buffer.c	FUNCTION_102	CALL_10
0x400a24f	          0x4889e7	                            mov rdi, rsp	      6211	buffer.c	FUNCTION_102	CALL_11
0x400a252	      0xe800000000	                          call 0x400a257	      6211	buffer.c	FUNCTION_102	CALL_11
0x400a257	    0x483b1d000000	            cmp rbx, qword [0x0400a25e] 	      6213	buffer.c	FUNCTION_102	IF_6
0x400a25e	            0x740a	                            je 0x400a26a	      6213	buffer.c	FUNCTION_102	IF_6
0x400a260	            0x31f6	                            xor esi, esi	      6214	buffer.c	FUNCTION_102	CALL_12
0x400a262	          0x4889df	                            mov rdi, rbx	      6214	buffer.c	FUNCTION_102	CALL_12
0x400a265	      0xe800000000	                          call 0x400a26a	      6214	buffer.c	FUNCTION_102	CALL_12
0x400a26a	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	      6217	buffer.c	FUNCTION_102
0x400a272	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6217	buffer.c	FUNCTION_102
0x400a27b	            0x89e8	                            mov eax, ebp	      6217	buffer.c	FUNCTION_102
0x400a27d	     0xf85af000000	                           jne 0x400a332	      6217	buffer.c	FUNCTION_102
0x400a283	    0x4881c4080100	                          add rsp, 0x108	      6217	buffer.c	FUNCTION_102
0x400a28a	              0x5b	                                 pop rbx	      6217	buffer.c	FUNCTION_102
0x400a28b	              0x5d	                                 pop rbp	      6217	buffer.c	FUNCTION_102
0x400a28c	            0x415c	                                 pop r12	      6217	buffer.c	FUNCTION_102
0x400a28e	            0x415d	                                 pop r13	      6217	buffer.c	FUNCTION_102
0x400a290	              0xc3	                                     ret	      6217	buffer.c	FUNCTION_102
0x400a291	     0xf1f80000000	                         nop dword [rax]	      6217	buffer.c	FUNCTION_102
0x400a298	        0x4883ec08	                              sub rsp, 8	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a29c	    0x498bb4249800	            mov rsi, qword [r12 + 0x98] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2a4	    0x498bbc248800	            mov rdi, qword [r12 + 0x88] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2ac	            0x6a11	                               push 0x11	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2ae	            0x31c9	                            xor ecx, ecx	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2b0	            0x31d2	                            xor edx, edx	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2b2	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2b8	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2bd	      0xe800000000	                          call 0x400a2c2	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2c2	          0x83f801	                              cmp eax, 1	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2c5	              0x5a	                                 pop rdx	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2c6	              0x59	                                 pop rcx	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2c7	     0xf8573ffffff	                           jne 0x400a240	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400a2cd	    0x488b15000000	            mov rdx, qword [0x0400a2d4] 	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400a2d4	        0x498b0424	                    mov rax, qword [r12]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400a2d8	          0x483b02	                    cmp rax, qword [rdx]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400a2db	     0xf855fffffff	                           jne 0x400a240	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400a2e1	          0x4885c0	                           test rax, rax	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400a2e4	      0xbd01000000	                              mov ebp, 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400a2e9	            0x7e40	                           jle 0x400a32b	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400a2eb	       0xf1f440000	                   nop dword [rax + rax]	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400a2f0	          0x4889ef	                            mov rdi, rbp	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a2f3	      0xe800000000	                          call 0x400a2f8	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a2f8	            0x31d2	                            xor edx, edx	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a2fa	          0x4989c5	                            mov r13, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a2fd	          0x4889ee	                            mov rsi, rbp	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a300	          0x4c89e7	                            mov rdi, r12	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a303	      0xe800000000	                          call 0x400a308	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a308	          0x4c89ee	                            mov rsi, r13	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a30b	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a30e	      0xe800000000	                          call 0x400a313	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a313	            0x85c0	                           test eax, eax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a315	     0xf8525ffffff	                           jne 0x400a240	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400a31b	    0x488b05000000	            mov rax, qword [0x0400a322] 	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400a322	        0x4883c501	                              add rbp, 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400a326	          0x483928	                    cmp qword [rax], rbp	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400a329	            0x7dc5	                           jge 0x400a2f0	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400a32b	            0x31ed	                            xor ebp, ebp	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x400a32d	      0xe913ffffff	                           jmp 0x400a245	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x400a332	      0xe800000000	                  call section_end..text	      6217	buffer.c	FUNCTION_102
buflist_findnr	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0	33
0x40018d0	        0x4883ec28	                           sub rsp, 0x28	      2709	buffer.c	FUNCTION_37
0x40018d4	          0x4189f8	                            mov r8d, edi	      2709	buffer.c	FUNCTION_37
0x40018d7	    0x64488b042528	                mov rax, qword fs:[0x28]	      2709	buffer.c	FUNCTION_37
0x40018e0	      0x4889442418	             mov qword [rsp + 0x18], rax	      2709	buffer.c	FUNCTION_37
0x40018e5	            0x31c0	                            xor eax, eax	      2709	buffer.c	FUNCTION_37
0x40018e7	            0x85ff	                           test edi, edi	      2713	buffer.c	FUNCTION_37	IF_1
0x40018e9	            0x750e	                           jne 0x40018f9	      2713	buffer.c	FUNCTION_37	IF_1
0x40018eb	    0x488b05000000	            mov rax, qword [0x040018f2] 	      2714	buffer.c	FUNCTION_37	IF_1
0x40018f2	    0x448b80780100	           mov r8d, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x40018f9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_104	CALL_1
0x40018fe	      0xba09000000	                              mov edx, 9	        33	stdio2.h	FUNCTION_104	CALL_1
0x4001903	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x4001908	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_104	CALL_1
0x400190b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x400190d	      0xe800000000	                          call 0x4001912	        33	stdio2.h	FUNCTION_104	CALL_1
0x4001912	          0x4889e6	                            mov rsi, rsp	      2716	buffer.c	FUNCTION_37	CALL_1
0x4001915	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_1
0x400191a	      0xe800000000	                          call 0x400191f	      2716	buffer.c	FUNCTION_37	CALL_1
0x400191f	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4001923	    0x483d00000000	                              cmp rax, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4001929	            0x7425	                            je 0x4001950	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x400192b	          0x4885c0	                           test rax, rax	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x400192e	            0x7420	                            je 0x4001950	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4001930	    0x482dbc000000	                           sub rax, 0xbc	      2719	buffer.c	FUNCTION_37	IF_2
0x4001936	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2722	buffer.c	FUNCTION_37
0x400193b	    0x644833142528	                xor rdx, qword fs:[0x28]	      2722	buffer.c	FUNCTION_37
0x4001944	            0x750e	                           jne 0x4001954	      2722	buffer.c	FUNCTION_37
0x4001946	        0x4883c428	                           add rsp, 0x28	      2722	buffer.c	FUNCTION_37
0x400194a	              0xc3	                                     ret	      2722	buffer.c	FUNCTION_37
0x400194b	       0xf1f440000	                   nop dword [rax + rax]	      2722	buffer.c	FUNCTION_37
0x4001950	            0x31c0	                            xor eax, eax	      2721	buffer.c	FUNCTION_37
0x4001952	            0xebe2	                           jmp 0x4001936	      2721	buffer.c	FUNCTION_37
0x4001954	      0xe800000000	                          call 0x4001959	      2722	buffer.c	FUNCTION_37
close_buffer	IF,34:WHILE,0:DO,0:SWITCH,0:CALL,37:FOR,0:functions,0:ELSE,7	376
0x4006cd0	            0x4157	                                push r15	       445	buffer.c	FUNCTION_8
0x4006cd2	            0x4156	                                push r14	       445	buffer.c	FUNCTION_8
0x4006cd4	            0x4155	                                push r13	       445	buffer.c	FUNCTION_8
0x4006cd6	            0x4154	                                push r12	       445	buffer.c	FUNCTION_8
0x4006cd8	          0x4989f5	                            mov r13, rsi	       445	buffer.c	FUNCTION_8
0x4006cdb	              0x55	                                push rbp	       445	buffer.c	FUNCTION_8
0x4006cdc	              0x53	                                push rbx	       445	buffer.c	FUNCTION_8
0x4006cdd	          0x4889fd	                            mov rbp, rdi	       445	buffer.c	FUNCTION_8
0x4006ce0	        0x4883ec28	                           sub rsp, 0x28	       445	buffer.c	FUNCTION_8
0x4006ce4	    0x4c8b3d000000	            mov r15, qword [0x04006ceb] 	       449	buffer.c	FUNCTION_8
0x4006ceb	        0x894c240c	              mov dword [rsp + 0xc], ecx	       445	buffer.c	FUNCTION_8
0x4006cef	          0x4d85ff	                           test r15, r15	       449	buffer.c	FUNCTION_8
0x4006cf2	     0xf8448030000	                            je 0x4007040	       449	buffer.c	FUNCTION_8
0x4006cf8	          0x4531f6	                          xor r14d, r14d	       449	buffer.c	FUNCTION_8
0x4006cfb	        0x49397708	                cmp qword [r15 + 8], rsi	       449	buffer.c	FUNCTION_8
0x4006cff	        0x410f94c6	                               sete r14b	       449	buffer.c	FUNCTION_8
0x4006d03	    0x488b05000000	            mov rax, qword [0x04006d0a] 	       451	buffer.c	FUNCTION_8
0x4006d0a	          0x4531e4	                          xor r12d, r12d	       454	buffer.c	FUNCTION_8
0x4006d0d	          0x83fa04	                              cmp edx, 4	       454	buffer.c	FUNCTION_8
0x4006d10	        0x410f94c4	                               sete r12b	       454	buffer.c	FUNCTION_8
0x4006d14	      0x4889442410	             mov qword [rsp + 0x10], rax	       451	buffer.c	FUNCTION_8
0x4006d19	    0x498b85101400	          mov rax, qword [r13 + 0x1410] 	       461	buffer.c	FUNCTION_8	IF_1
0x4006d20	           0xfb600	                   movzx eax, byte [rax]	       461	buffer.c	FUNCTION_8	IF_1
0x4006d23	            0x3c64	                            cmp al, 0x64	       461	buffer.c	FUNCTION_8	IF_1
0x4006d25	     0xf8483020000	                            je 0x4006fae	       461	buffer.c	FUNCTION_8	IF_1
0x4006d2b	            0x3c77	                            cmp al, 0x77	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4006d2d	     0xf8475020000	                            je 0x4006fa8	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4006d33	            0x3c75	                            cmp al, 0x75	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4006d35	      0xbb01000000	                              mov ebx, 1	       473	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4006d3a	            0x7407	                            je 0x4006d43	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0x4006d3c	            0x31db	                            xor ebx, ebx	       452	buffer.c	FUNCTION_8
0x4006d3e	            0x85d2	                           test edx, edx	       452	buffer.c	FUNCTION_8
0x4006d40	           0xf95c3	                                setne bl	       452	buffer.c	FUNCTION_8
0x4006d43	          0x83ea03	                              sub edx, 3	       453	buffer.c	FUNCTION_8
0x4006d46	          0x83fa01	                              cmp edx, 1	       453	buffer.c	FUNCTION_8
0x4006d49	    0x498b95181400	          mov rdx, qword [r13 + 0x1418] 	      5609	buffer.c	FUNCTION_78
0x4006d50	           0xf96c0	                                setbe al	       453	buffer.c	FUNCTION_8
0x4006d53	           0xfb6c8	                           movzx ecx, al	       453	buffer.c	FUNCTION_8
0x4006d56	          0x803a74	                    cmp byte [rdx], 0x74	      5609	buffer.c	FUNCTION_78
0x4006d59	        0x894c2408	                mov dword [rsp + 8], ecx	       453	buffer.c	FUNCTION_8
0x4006d5d	     0xf84dd010000	                            je 0x4006f40	      5609	buffer.c	FUNCTION_78
0x4006d63	    0x458b8d800000	            mov r9d, dword [r13 + 0x80] 	       509	buffer.c	FUNCTION_8	IF_8
0x4006d6a	          0x4585c9	                           test r9d, r9d	       509	buffer.c	FUNCTION_8	IF_8
0x4006d6d	            0x7e18	                           jle 0x4006d87	       509	buffer.c	FUNCTION_8	IF_8
0x4006d6f	        0x8b442408	                mov eax, dword [rsp + 8]	       509	buffer.c	FUNCTION_8	IF_8
0x4006d73	          0x4409e0	                            or eax, r12d	       509	buffer.c	FUNCTION_8	IF_8
0x4006d76	     0xf8573020000	                           jne 0x4006fef	       509	buffer.c	FUNCTION_8	IF_8
0x4006d7c	          0x4531e4	                          xor r12d, r12d	       509	buffer.c	FUNCTION_8	IF_8
0x4006d7f	    0xc74424080000	                  mov dword [rsp + 8], 0	       509	buffer.c	FUNCTION_8	IF_8
0x4006d87	          0x4885ed	                           test rbp, rbp	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006d8a	            0x7440	                            je 0x4006dcc	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006d8c	          0x4889ef	                            mov rdi, rbp	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006d8f	      0xe800000000	                          call 0x4006d94	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006d94	            0x85c0	                           test eax, eax	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006d96	            0x7434	                            je 0x4006dcc	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0x4006d98	      0x41837d7801	               cmp dword [r13 + 0x78], 1	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0x4006d9d	     0xf84a5040000	                            je 0x4007248	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0x4006da3	        0x488b5538	            mov rdx, qword [rbp + 0x38] 	       525	buffer.c	FUNCTION_8	IF_9
0x4006da7	          0x8b4d40	            mov ecx, dword [rbp + 0x40] 	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006daa	      0xb800000000	                              mov eax, 0	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006daf	    0x498dbd280100	                  lea rdi, [r13 + 0x128]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006db6	    0x41b801000000	                              mov r8d, 1	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006dbc	          0x4889ee	                            mov rsi, rbp	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006dbf	        0x4883fa01	                              cmp rdx, 1	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006dc3	        0x480f44d0	                          cmove rdx, rax	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006dc7	      0xe8a499ffff	         call sym.buflist_setfpos.isra.5	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0x4006dcc	    0x418b85b80000	            mov eax, dword [r13 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4006dd3	      0x41837d7801	               cmp dword [r13 + 0x78], 1	       532	buffer.c	FUNCTION_8	IF_11
0x4006dd8	        0x8944241c	             mov dword [rsp + 0x1c], eax	       362	buffer.c	FUNCTION_3
0x4006ddc	    0x8b0500000000	            mov eax, dword [0x04006de2] 	       363	buffer.c	FUNCTION_3
0x4006de2	        0x89442418	             mov dword [rsp + 0x18], eax	       363	buffer.c	FUNCTION_3
0x4006de6	     0xf84d4020000	                            je 0x40070c0	       532	buffer.c	FUNCTION_8	IF_11
0x4006dec	          0x4585f6	                         test r14d, r14d	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4006def	            0x7419	                            je 0x4006e0a	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4006df1	    0x4c3b3d000000	            cmp r15, qword [0x04006df8] 	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4006df8	            0x7410	                            je 0x4006e0a	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4006dfa	          0x4c89ff	                            mov rdi, r15	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4006dfd	      0xe800000000	                          call 0x4006e02	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4006e02	            0x85c0	                           test eax, eax	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4006e04	     0xf8516020000	                           jne 0x4007020	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x4006e0a	        0x458b7578	           mov r14d, dword [r13 + 0x78] 	       580	buffer.c	FUNCTION_8
0x4006e0e	          0x4585f6	                         test r14d, r14d	       583	buffer.c	FUNCTION_8	IF_19
0x4006e11	            0x7e08	                           jle 0x4006e1b	       583	buffer.c	FUNCTION_8	IF_19
0x4006e13	        0x418d46ff	                      lea eax, [r14 - 1]	       584	buffer.c	FUNCTION_8	IF_19
0x4006e17	        0x41894578	             mov dword [r13 + 0x78], eax	       584	buffer.c	FUNCTION_8	IF_19
0x4006e1b	          0x83f301	                              xor ebx, 1	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e1e	      0xe800000000	                          call 0x4006e23	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e23	          0x83e301	                              and ebx, 1	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e26	            0x85c0	                           test eax, eax	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e28	        0x418b4578	            mov eax, dword [r13 + 0x78] 	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e2c	            0x740c	                            je 0x4006e3a	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e2e	            0x84db	                             test bl, bl	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e30	            0x7408	                            je 0x4006e3a	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e32	            0x85c0	                           test eax, eax	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e34	     0xf84ae030000	                            je 0x40071e8	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x4006e3a	            0x85c0	                           test eax, eax	       593	buffer.c	FUNCTION_8	IF_21
0x4006e3c	     0xf8f51010000	                            jg 0x4006f93	       593	buffer.c	FUNCTION_8	IF_21
0x4006e42	            0x84db	                             test bl, bl	       593	buffer.c	FUNCTION_8	IF_21
0x4006e44	     0xf8549010000	                           jne 0x4006f93	       593	buffer.c	FUNCTION_8	IF_21
0x4006e4a	    0x4983bd880000	               cmp qword [r13 + 0x88], 0	       598	buffer.c	FUNCTION_8	IF_22
0x4006e52	      0xb801000000	                              mov eax, 1	       598	buffer.c	FUNCTION_8	IF_22
0x4006e57	    0x488b1d000000	            mov rbx, qword [0x04006e5e] 	       602	buffer.c	FUNCTION_8	IF_23
0x4006e5e	       0xf45442408	             cmovne eax, dword [rsp + 8]	       598	buffer.c	FUNCTION_8	IF_22
0x4006e63	          0x4939dd	                            cmp r13, rbx	       602	buffer.c	FUNCTION_8	IF_23
0x4006e66	        0x89442408	                mov dword [rsp + 8], eax	       598	buffer.c	FUNCTION_8	IF_22
0x4006e6a	     0xf84b0030000	                            je 0x4007220	       602	buffer.c	FUNCTION_8	IF_23
0x4006e70	          0x4489e6	                           mov esi, r12d	       618	buffer.c	FUNCTION_8	CALL_28
0x4006e73	        0x45897578	            mov dword [r13 + 0x78], r14d	       616	buffer.c	FUNCTION_8
0x4006e77	          0x4c89ef	                            mov rdi, r13	       618	buffer.c	FUNCTION_8	CALL_28
0x4006e7a	            0xf7de	                                 neg esi	       618	buffer.c	FUNCTION_8	CALL_28
0x4006e7c	          0x83e602	                              and esi, 2	       618	buffer.c	FUNCTION_8	CALL_28
0x4006e7f	         0x3742408	                add esi, dword [rsp + 8]	       618	buffer.c	FUNCTION_8	CALL_28
0x4006e83	      0xe800000000	                          call 0x4006e88	       618	buffer.c	FUNCTION_8	CALL_28
0x4006e88	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4006e8c	    0x3b0500000000	            cmp eax, dword [0x04006e92] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4006e92	            0x7437	                            je 0x4006ecb	       377	buffer.c	FUNCTION_4	CALL_1
0x4006e94	    0x488b05000000	            mov rax, qword [0x04006e9b] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4006e9b	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4006e9e	            0x7515	                           jne 0x4006eb5	       392	buffer.c	FUNCTION_5	FOR_1
0x4006ea0	      0xe9ee000000	                           jmp 0x4006f93	       392	buffer.c	FUNCTION_5	FOR_1
0x4006ea5	           0xf1f00	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4006ea8	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4006eac	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4006eaf	     0xf84de000000	                            je 0x4006f93	       392	buffer.c	FUNCTION_5	FOR_1
0x4006eb5	          0x4939c5	                            cmp r13, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4006eb8	            0x75ee	                           jne 0x4006ea8	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4006eba	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       378	buffer.c	FUNCTION_4
0x4006ebe	    0x413b85b80000	            cmp eax, dword [r13 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4006ec5	     0xf85c8000000	                           jne 0x4006f93	       378	buffer.c	FUNCTION_4
0x4006ecb	      0xe800000000	                          call 0x4006ed0	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x4006ed0	            0x85c0	                           test eax, eax	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x4006ed2	     0xf85bb000000	                           jne 0x4006f93	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x4006ed8	    0x4c392d000000	            cmp qword [0x04006edf], r13 	       635	buffer.c	FUNCTION_8	IF_26
0x4006edf	            0x7509	                           jne 0x4006eea	       635	buffer.c	FUNCTION_8	IF_26
0x4006ee1	          0x4c39eb	                            cmp rbx, r13	       635	buffer.c	FUNCTION_8	IF_26
0x4006ee4	     0xf85a9000000	                           jne 0x4006f93	       635	buffer.c	FUNCTION_8	IF_26
0x4006eea	          0x4889ef	                            mov rdi, rbp	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4006eed	      0xe800000000	                          call 0x4006ef2	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4006ef2	            0x85c0	                           test eax, eax	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4006ef4	            0x740a	                            je 0x4006f00	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4006ef6	        0x4c3b6d08	                cmp r13, qword [rbp + 8]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4006efa	     0xf84b6030000	                            je 0x40072b6	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x4006f00	        0x418b4578	            mov eax, dword [r13 + 0x78] 	       643	buffer.c	FUNCTION_8	IF_28
0x4006f04	            0x85c0	                           test eax, eax	       643	buffer.c	FUNCTION_8	IF_28
0x4006f06	            0x7e07	                           jle 0x4006f0f	       643	buffer.c	FUNCTION_8	IF_28
0x4006f08	          0x83e801	                              sub eax, 1	       644	buffer.c	FUNCTION_8	IF_28
0x4006f0b	        0x41894578	             mov dword [r13 + 0x78], eax	       644	buffer.c	FUNCTION_8	IF_28
0x4006f0f	          0x4585e4	                         test r12d, r12d	       649	buffer.c	FUNCTION_8	IF_29
0x4006f12	     0xf8552030000	                           jne 0x400726a	       649	buffer.c	FUNCTION_8	IF_29
0x4006f18	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4006f1c	            0x85c9	                           test ecx, ecx	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4006f1e	            0x7540	                           jne 0x4006f60	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4006f20	        0x4883c428	                           add rsp, 0x28	       686	buffer.c	FUNCTION_8
0x4006f24	          0x4c89ef	                            mov rdi, r13	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4006f27	              0x5b	                                 pop rbx	       686	buffer.c	FUNCTION_8
0x4006f28	              0x5d	                                 pop rbp	       686	buffer.c	FUNCTION_8
0x4006f29	            0x415c	                                 pop r12	       686	buffer.c	FUNCTION_8
0x4006f2b	            0x415d	                                 pop r13	       686	buffer.c	FUNCTION_8
0x4006f2d	            0x415e	                                 pop r14	       686	buffer.c	FUNCTION_8
0x4006f2f	            0x415f	                                 pop r15	       686	buffer.c	FUNCTION_8
0x4006f31	      0xe90a9fffff	                  jmp sym.buf_clear_file	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4006f36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4006f40	      0x41837d7801	               cmp dword [r13 + 0x78], 1	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006f45	     0xf8405010000	                            je 0x4007050	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006f4b	            0x84c0	                             test al, al	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006f4d	     0xf85fd000000	                           jne 0x4007050	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006f53	    0xc74424080000	                  mov dword [rsp + 8], 0	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006f5b	      0xe903feffff	                           jmp 0x4006d63	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0x4006f60	      0xbe01000000	                              mov esi, 1	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4006f65	          0x4c89ef	                            mov rdi, r13	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4006f68	      0xe8c3fbffff	              call sym.free_buffer_stuff	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0x4006f6d	    0x41c7457c0600	               mov dword [r13 + 0x7c], 6	       677	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4006f75	    0x41c785a81200	            mov dword [r13 + 0x12a8], 0 	       680	buffer.c	FUNCTION_8	ELSE_7	IF_33
0x4006f80	          0x4c89ef	                            mov rdi, r13	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4006f83	      0xe800000000	                          call 0x4006f88	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0x4006f88	    0x41c785241400	            mov dword [r13 + 0x1424], 0 	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0x4006f93	        0x4883c428	                           add rsp, 0x28	       686	buffer.c	FUNCTION_8
0x4006f97	              0x5b	                                 pop rbx	       686	buffer.c	FUNCTION_8
0x4006f98	              0x5d	                                 pop rbp	       686	buffer.c	FUNCTION_8
0x4006f99	            0x415c	                                 pop r12	       686	buffer.c	FUNCTION_8
0x4006f9b	            0x415d	                                 pop r13	       686	buffer.c	FUNCTION_8
0x4006f9d	            0x415e	                                 pop r14	       686	buffer.c	FUNCTION_8
0x4006f9f	            0x415f	                                 pop r15	       686	buffer.c	FUNCTION_8
0x4006fa1	              0xc3	                                     ret	       686	buffer.c	FUNCTION_8
0x4006fa2	    0x660f1f440000	                    nop word [rax + rax]	       686	buffer.c	FUNCTION_8
0x4006fa8	    0x41bc01000000	                             mov r12d, 1	       470	buffer.c	FUNCTION_8	ELSE_1	IF_2
0x4006fae	    0x498b85181400	          mov rax, qword [r13 + 0x1418] 	      5609	buffer.c	FUNCTION_78
0x4006fb5	          0x803874	                    cmp byte [rax], 0x74	      5609	buffer.c	FUNCTION_78
0x4006fb8	     0xf84c2000000	                            je 0x4007080	      5609	buffer.c	FUNCTION_78
0x4006fbe	    0x418b85800000	            mov eax, dword [r13 + 0x80] 	       509	buffer.c	FUNCTION_8	IF_8
0x4006fc5	            0x85c0	                           test eax, eax	       509	buffer.c	FUNCTION_8	IF_8
0x4006fc7	            0x7f26	                            jg 0x4006fef	       509	buffer.c	FUNCTION_8	IF_8
0x4006fc9	    0xc74424080100	                  mov dword [rsp + 8], 1	       509	buffer.c	FUNCTION_8	IF_8
0x4006fd1	      0xbb01000000	                              mov ebx, 1	       509	buffer.c	FUNCTION_8	IF_8
0x4006fd6	      0xe9acfdffff	                           jmp 0x4006d87	       509	buffer.c	FUNCTION_8	IF_8
0x4006fdb	       0xf1f440000	                   nop dword [rax + rax]	       509	buffer.c	FUNCTION_8	IF_8
0x4006fe0	    0x418b95800000	            mov edx, dword [r13 + 0x80] 	       509	buffer.c	FUNCTION_8	IF_8
0x4006fe7	            0x85d2	                           test edx, edx	       509	buffer.c	FUNCTION_8	IF_8
0x4006fe9	     0xf8e11020000	                           jle 0x4007200	       509	buffer.c	FUNCTION_8	IF_8
0x4006fef	      0xba05000000	                              mov edx, 5	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4006ff4	      0xbe00000000	                              mov esi, 0	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x4006ff9	            0x31ff	                            xor edi, edi	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4006ffb	      0xe800000000	                          call 0x4007000	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4007000	        0x4883c428	                           add rsp, 0x28	       686	buffer.c	FUNCTION_8
0x4007004	          0x4889c7	                            mov rdi, rax	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4007007	              0x5b	                                 pop rbx	       686	buffer.c	FUNCTION_8
0x4007008	              0x5d	                                 pop rbp	       686	buffer.c	FUNCTION_8
0x4007009	            0x415c	                                 pop r12	       686	buffer.c	FUNCTION_8
0x400700b	            0x415d	                                 pop r13	       686	buffer.c	FUNCTION_8
0x400700d	            0x415e	                                 pop r14	       686	buffer.c	FUNCTION_8
0x400700f	            0x415f	                                 pop r15	       686	buffer.c	FUNCTION_8
0x4007011	      0xe900000000	                           jmp 0x4007016	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4007016	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4007020	      0xe800000000	                          call 0x4007025	       575	buffer.c	FUNCTION_8	IF_18	CALL_22
0x4007025	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x400702a	          0x4c89fe	                            mov rsi, r15	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x400702d	      0xe800000000	                          call 0x4007032	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x4007032	      0xe800000000	                          call 0x4007037	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0x4007037	      0xe9cefdffff	                           jmp 0x4006e0a	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0x400703c	         0xf1f4000	                         nop dword [rax]	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0x4007040	          0x4531f6	                          xor r14d, r14d	       449	buffer.c	FUNCTION_8
0x4007043	      0xe9bbfcffff	                           jmp 0x4006d03	       449	buffer.c	FUNCTION_8
0x4007048	     0xf1f84000000	                   nop dword [rax + rax]	       449	buffer.c	FUNCTION_8
0x4007050	    0x498bbd481c00	          mov rdi, qword [r13 + 0x1c48] 	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4007057	      0xe800000000	                          call 0x400705c	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x400705c	            0x85c0	                           test eax, eax	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x400705e	            0x7480	                            je 0x4006fe0	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4007060	            0x89d8	                            mov eax, ebx	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x4007062	          0x4409e0	                            or eax, r12d	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x4007065	            0x753a	                           jne 0x40070a1	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x4007067	          0x4531e4	                          xor r12d, r12d	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0x400706a	    0xc74424080000	                  mov dword [rsp + 8], 0	       493	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x4007072	            0x31db	                            xor ebx, ebx	       494	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x4007074	      0xe90efdffff	                           jmp 0x4006d87	       494	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x4007079	     0xf1f80000000	                         nop dword [rax]	       494	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0x4007080	    0x498bbd481c00	          mov rdi, qword [r13 + 0x1c48] 	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4007087	      0xe800000000	                          call 0x400708c	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x400708c	            0x85c0	                           test eax, eax	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x400708e	     0xf844cffffff	                            je 0x4006fe0	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4007094	      0xbb01000000	                              mov ebx, 1	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x4007099	    0xc74424080100	                  mov dword [rsp + 8], 1	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x40070a1	    0x458b95800000	           mov r10d, dword [r13 + 0x80] 	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x40070a8	          0x4585d2	                         test r10d, r10d	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x40070ab	     0xf853effffff	                           jne 0x4006fef	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x40070b1	          0x4c89ef	                            mov rdi, r13	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x40070b4	      0xe800000000	                          call 0x40070b9	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x40070b9	      0xe9a5fcffff	                           jmp 0x4006d63	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x40070be	            0x6690	                                     nop	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x40070c0	    0x418385800000	               add dword [r13 + 0x80], 1	       534	buffer.c	FUNCTION_8	IF_11
0x40070c8	    0x498bb5980000	            mov rsi, qword [r13 + 0x98] 	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40070cf	            0x31c9	                            xor ecx, ecx	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40070d1	          0x4d89e8	                             mov r8, r13	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40070d4	      0xbf0e000000	                            mov edi, 0xe	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40070d9	          0x4889f2	                            mov rdx, rsi	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40070dc	      0xe800000000	                          call 0x40070e1	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40070e1	            0x85c0	                           test eax, eax	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40070e3	            0x744b	                            je 0x4007130	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x40070e5	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       377	buffer.c	FUNCTION_4	CALL_1
0x40070e9	    0x3b0500000000	            cmp eax, dword [0x040070ef] 	       377	buffer.c	FUNCTION_4	CALL_1
0x40070ef	            0x743f	                            je 0x4007130	       377	buffer.c	FUNCTION_4	CALL_1
0x40070f1	    0x488b05000000	            mov rax, qword [0x040070f8] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40070f8	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40070fb	            0x750c	                           jne 0x4007109	       392	buffer.c	FUNCTION_5	FOR_1
0x40070fd	            0xeb1c	                           jmp 0x400711b	       392	buffer.c	FUNCTION_5	FOR_1
0x40070ff	              0x90	                                     nop	       392	buffer.c	FUNCTION_5	FOR_1
0x4007100	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007104	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007107	            0x7412	                            je 0x400711b	       392	buffer.c	FUNCTION_5	FOR_1
0x4007109	          0x4939c5	                            cmp r13, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400710c	            0x75f2	                           jne 0x4007100	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400710e	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       378	buffer.c	FUNCTION_4
0x4007112	    0x413b85b80000	            cmp eax, dword [r13 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4007119	            0x7415	                            je 0x4007130	       378	buffer.c	FUNCTION_4
0x400711b	      0xba05000000	                              mov edx, 5	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4007120	      0xbe00000000	                              mov esi, 0	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4007125	      0xe9cffeffff	                           jmp 0x4006ff9	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400712a	    0x660f1f440000	                    nop word [rax + rax]	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x4007130	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4007135	    0x4183ad800000	               sub dword [r13 + 0x80], 1	       544	buffer.c	FUNCTION_8	IF_11
0x400713d	          0x4585c0	                           test r8d, r8d	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4007140	     0xf8512010000	                           jne 0x4007258	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4007146	            0x85db	                           test ebx, ebx	       551	buffer.c	FUNCTION_8	IF_11	IF_14
0x4007148	     0xf8582000000	                           jne 0x40071d0	       551	buffer.c	FUNCTION_8	IF_11	IF_14
0x400714e	    0x418385800000	               add dword [r13 + 0x80], 1	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0x4007156	    0x498bb5980000	            mov rsi, qword [r13 + 0x98] 	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x400715d	            0x31c9	                            xor ecx, ecx	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x400715f	          0x4d89e8	                             mov r8, r13	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4007162	      0xbf05000000	                              mov edi, 5	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4007167	          0x4889f2	                            mov rdx, rsi	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x400716a	      0xe800000000	                          call 0x400716f	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x400716f	            0x85c0	                           test eax, eax	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4007171	            0x743d	                            je 0x40071b0	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0x4007173	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4007177	    0x3b0500000000	            cmp eax, dword [0x0400717d] 	       377	buffer.c	FUNCTION_4	CALL_1
0x400717d	            0x7431	                            je 0x40071b0	       377	buffer.c	FUNCTION_4	CALL_1
0x400717f	    0x488b05000000	            mov rax, qword [0x04007186] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007186	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007189	            0x750e	                           jne 0x4007199	       392	buffer.c	FUNCTION_5	FOR_1
0x400718b	            0xeb8e	                           jmp 0x400711b	       392	buffer.c	FUNCTION_5	FOR_1
0x400718d	           0xf1f00	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4007190	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007194	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007197	            0x7482	                            je 0x400711b	       392	buffer.c	FUNCTION_5	FOR_1
0x4007199	          0x4939c5	                            cmp r13, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400719c	            0x75f2	                           jne 0x4007190	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400719e	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       378	buffer.c	FUNCTION_4
0x40071a2	    0x413b85b80000	            cmp eax, dword [r13 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x40071a9	     0xf856cffffff	                           jne 0x400711b	       378	buffer.c	FUNCTION_4
0x40071af	              0x90	                                     nop	       378	buffer.c	FUNCTION_4
0x40071b0	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x40071b4	    0x4183ad800000	               sub dword [r13 + 0x80], 1	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0x40071bc	            0x85ff	                           test edi, edi	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x40071be	            0x7410	                            je 0x40071d0	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x40071c0	      0xe800000000	                          call 0x40071c5	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x40071c5	            0x85c0	                           test eax, eax	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x40071c7	     0xf854effffff	                           jne 0x400711b	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x40071cd	           0xf1f00	                         nop dword [rax]	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0x40071d0	      0xe800000000	                          call 0x40071d5	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x40071d5	            0x85c0	                           test eax, eax	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x40071d7	     0xf85b6fdffff	                           jne 0x4006f93	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x40071dd	      0xe90afcffff	                           jmp 0x4006dec	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x40071e2	    0x660f1f440000	                    nop word [rax + rax]	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x40071e8	          0x4c89ef	                            mov rdi, r13	       588	buffer.c	FUNCTION_8	CALL_26
0x40071eb	      0xe800000000	                          call 0x40071f0	       588	buffer.c	FUNCTION_8	CALL_26
0x40071f0	        0x418b4578	            mov eax, dword [r13 + 0x78] 	       588	buffer.c	FUNCTION_8	CALL_26
0x40071f4	      0xe941fcffff	                           jmp 0x4006e3a	       588	buffer.c	FUNCTION_8	CALL_26
0x40071f9	     0xf1f80000000	                         nop dword [rax]	       588	buffer.c	FUNCTION_8	CALL_26
0x4007200	    0x41bc01000000	                             mov r12d, 1	       502	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x4007206	    0xc74424080100	                  mov dword [rsp + 8], 1	       500	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x400720e	      0xbb01000000	                              mov ebx, 1	       501	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x4007213	      0xe96ffbffff	                           jmp 0x4006d87	       501	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x4007218	     0xf1f84000000	                   nop dword [rax + rax]	       501	buffer.c	FUNCTION_8	IF_4	ELSE_4
0x4007220	    0x8b3500000000	            mov esi, dword [0x04007226] 	       602	buffer.c	FUNCTION_8	IF_23
0x4007226	          0x4c89eb	                            mov rbx, r13	       602	buffer.c	FUNCTION_8	IF_23
0x4007229	            0x85f6	                           test esi, esi	       602	buffer.c	FUNCTION_8	IF_23
0x400722b	     0xf843ffcffff	                            je 0x4006e70	       602	buffer.c	FUNCTION_8	IF_23
0x4007231	      0xe800000000	                          call 0x4007236	       607	buffer.c	FUNCTION_8	CALL_27
0x4007236	    0x488b1d000000	            mov rbx, qword [0x0400723d] 	       607	buffer.c	FUNCTION_8	CALL_27
0x400723d	      0xe92efcffff	                           jmp 0x4006e70	       607	buffer.c	FUNCTION_8	CALL_27
0x4007242	    0x660f1f440000	                    nop word [rax + rax]	       607	buffer.c	FUNCTION_8	CALL_27
0x4007248	          0x4889ef	                            mov rdi, rbp	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x400724b	      0xe800000000	                          call 0x4007250	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x4007250	      0xe94efbffff	                           jmp 0x4006da3	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x4007255	           0xf1f00	                         nop dword [rax]	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0x4007258	      0xe800000000	                          call 0x400725d	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x400725d	            0x85c0	                           test eax, eax	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x400725f	     0xf85b6feffff	                           jne 0x400711b	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x4007265	      0xe9dcfeffff	                           jmp 0x4007146	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0x400726a	    0x498bbd880000	            mov rdi, qword [r13 + 0x88] 	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x4007271	      0xe800000000	                          call 0x4007276	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x4007276	    0x498bbd900000	            mov rdi, qword [r13 + 0x90] 	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x400727d	      0xe800000000	                          call 0x4007282	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x4007282	        0x498b4570	            mov rax, qword [r13 + 0x70] 	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x4007286	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x400728a	          0x4885c0	                           test rax, rax	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x400728d	            0x743d	                            je 0x40072cc	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x400728f	        0x48895068	             mov qword [rax + 0x68], rdx	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x4007293	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x4007297	          0x4885d2	                           test rdx, rdx	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x400729a	            0x7427	                            je 0x40072c3	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x400729c	        0x48894270	             mov qword [rdx + 0x70], rax	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x40072a0	        0x4883c428	                           add rsp, 0x28	       686	buffer.c	FUNCTION_8
0x40072a4	          0x4c89ef	                            mov rdi, r13	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x40072a7	              0x5b	                                 pop rbx	       686	buffer.c	FUNCTION_8
0x40072a8	              0x5d	                                 pop rbp	       686	buffer.c	FUNCTION_8
0x40072a9	            0x415c	                                 pop r12	       686	buffer.c	FUNCTION_8
0x40072ab	            0x415d	                                 pop r13	       686	buffer.c	FUNCTION_8
0x40072ad	            0x415e	                                 pop r14	       686	buffer.c	FUNCTION_8
0x40072af	            0x415f	                                 pop r15	       686	buffer.c	FUNCTION_8
0x40072b1	      0xe96af9ffff	                     jmp sym.free_buffer	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0x40072b6	    0x48c745080000	                  mov qword [rbp + 8], 0	       639	buffer.c	FUNCTION_8	IF_27
0x40072be	      0xe93dfcffff	                           jmp 0x4006f00	       639	buffer.c	FUNCTION_8	IF_27
0x40072c3	    0x488905000000	            mov qword [0x040072ca], rax 	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x40072ca	            0xebd4	                           jmp 0x40072a0	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x40072cc	    0x488915000000	            mov qword [0x040072d3], rdx 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x40072d3	            0xebc2	                           jmp 0x4007297	       659	buffer.c	FUNCTION_8	IF_29	IF_31
buflist_findname_exp	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:ELSE,0	21
0x40024a0	              0x55	                                push rbp	      2361	buffer.c	FUNCTION_30
0x40024a1	              0x53	                                push rbx	      2361	buffer.c	FUNCTION_30
0x40024a2	      0xbe01000000	                              mov esi, 1	      2366	buffer.c	FUNCTION_30	CALL_1
0x40024a7	        0x4883ec08	                              sub rsp, 8	      2361	buffer.c	FUNCTION_30
0x40024ab	      0xe800000000	                          call 0x40024b0	      2366	buffer.c	FUNCTION_30	CALL_1
0x40024b0	          0x4885c0	                           test rax, rax	      2373	buffer.c	FUNCTION_30	IF_1
0x40024b3	            0x7423	                            je 0x40024d8	      2373	buffer.c	FUNCTION_30	IF_1
0x40024b5	          0x4889c3	                            mov rbx, rax	      2373	buffer.c	FUNCTION_30	IF_1
0x40024b8	          0x4889c7	                            mov rdi, rax	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x40024bb	      0xe800000000	                          call 0x40024c0	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x40024c0	          0x4889df	                            mov rdi, rbx	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x40024c3	          0x4889c5	                            mov rbp, rax	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x40024c6	      0xe800000000	                          call 0x40024cb	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x40024cb	        0x4883c408	                              add rsp, 8	      2379	buffer.c	FUNCTION_30
0x40024cf	          0x4889e8	                            mov rax, rbp	      2379	buffer.c	FUNCTION_30
0x40024d2	              0x5b	                                 pop rbx	      2379	buffer.c	FUNCTION_30
0x40024d3	              0x5d	                                 pop rbp	      2379	buffer.c	FUNCTION_30
0x40024d4	              0xc3	                                     ret	      2379	buffer.c	FUNCTION_30
0x40024d5	           0xf1f00	                         nop dword [rax]	      2379	buffer.c	FUNCTION_30
0x40024d8	            0x31ed	                            xor ebp, ebp	      2363	buffer.c	FUNCTION_30
0x40024da	            0xebef	                           jmp 0x40024cb	      2363	buffer.c	FUNCTION_30
no_write_message_nobang	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,5:FOR,0:functions,0:ELSE,1	13
0x4001240	        0x4883ec08	                              sub rsp, 8	      1829	buffer.c	FUNCTION_24
0x4001244	    0x488bbf481c00	          mov rdi, qword [rdi + 0x1c48] 	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x400124b	      0xe800000000	                          call 0x4001250	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4001250	            0x85c0	                           test eax, eax	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4001252	      0xba05000000	                              mov edx, 5	      1832	buffer.c	FUNCTION_24	CALL_3
0x4001257	      0xbe00000000	                              mov esi, 0	      1832	buffer.c	FUNCTION_24	CALL_3
0x400125c	            0x7505	                           jne 0x4001263	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x400125e	      0xbe00000000	                              mov esi, 0	      1835	buffer.c	FUNCTION_24	CALL_5
0x4001263	            0x31ff	                            xor edi, edi	      1835	buffer.c	FUNCTION_24	CALL_5
0x4001265	      0xe800000000	                          call 0x400126a	      1835	buffer.c	FUNCTION_24	CALL_5
0x400126a	        0x4883c408	                              add rsp, 8	      1836	buffer.c	FUNCTION_24
0x400126e	          0x4889c7	                            mov rdi, rax	      1835	buffer.c	FUNCTION_24	CALL_5
0x4001271	      0xe900000000	                           jmp 0x4001276	      1835	buffer.c	FUNCTION_24	CALL_5
buflist_list	IF,7:WHILE,0:DO,1:SWITCH,0:CALL,33:FOR,1:functions,0:ELSE,4	326
0x4003360	            0x4157	                                push r15	      2952	buffer.c	FUNCTION_45
0x4003362	            0x4156	                                push r14	      2952	buffer.c	FUNCTION_45
0x4003364	            0x4155	                                push r13	      2952	buffer.c	FUNCTION_45
0x4003366	            0x4154	                                push r12	      2952	buffer.c	FUNCTION_45
0x4003368	              0x55	                                push rbp	      2952	buffer.c	FUNCTION_45
0x4003369	              0x53	                                push rbx	      2952	buffer.c	FUNCTION_45
0x400336a	        0x4883ec08	                              sub rsp, 8	      2952	buffer.c	FUNCTION_45
0x400336e	    0x488b1d000000	            mov rbx, qword [0x04003375] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003375	          0x4885db	                           test rbx, rbx	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003378	     0xf84e2000000	                            je 0x4003460	      2963	buffer.c	FUNCTION_45	FOR_1
0x400337e	    0x8b0500000000	            mov eax, dword [0x04003384] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003384	            0x85c0	                           test eax, eax	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003386	     0xf85d4000000	                           jne 0x4003460	      2963	buffer.c	FUNCTION_45	FOR_1
0x400338c	          0x4889fd	                            mov rbp, rdi	      2963	buffer.c	FUNCTION_45	FOR_1
0x400338f	    0x41bded030000	                         mov r13d, 0x3ed	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003395	            0xeb71	                           jmp 0x4003408	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003397	    0x660f1f840000	                    nop word [rax + rax]	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033a0	    0x448b93241400	         mov r10d, dword [rbx + 0x1424] 	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x40033a7	          0x4585d2	                         test r10d, r10d	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x40033aa	            0x750d	                           jne 0x40033b9	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x40033ac	        0x448b4d34	            mov r9d, dword [rbp + 0x34] 	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x40033b0	          0x4585c9	                           test r9d, r9d	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x40033b3	     0xf8487000000	                            je 0x4003440	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x40033b9	        0x488b7d00	                    mov rdi, qword [rbp]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x40033bd	      0xbe75000000	                           mov esi, 0x75	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x40033c2	      0xe800000000	                          call 0x40033c7	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x40033c7	          0x4885c0	                           test rax, rax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x40033ca	            0x740c	                            je 0x40033d8	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x40033cc	    0x448b83241400	          mov r8d, dword [rbx + 0x1424] 	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x40033d3	          0x4585c0	                           test r8d, r8d	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x40033d6	            0x751d	                           jne 0x40033f5	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x40033d8	        0x488b7d00	                    mov rdi, qword [rbp]	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x40033dc	      0xbe2b000000	                           mov esi, 0x2b	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x40033e1	      0xe800000000	                          call 0x40033e6	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x40033e6	          0x4885c0	                           test rax, rax	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x40033e9	     0xf8491000000	                            je 0x4003480	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x40033ef	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x40033f3	            0x747b	                            je 0x4003470	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x40033f5	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033f9	          0x4885db	                           test rbx, rbx	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033fc	            0x7462	                            je 0x4003460	      2963	buffer.c	FUNCTION_45	FOR_1
0x40033fe	    0x8b0500000000	            mov eax, dword [0x04003404] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003404	            0x85c0	                           test eax, eax	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003406	            0x7558	                           jne 0x4003460	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003408	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x400340f	          0x4531f6	                          xor r14d, r14d	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4003412	      0xe800000000	                          call 0x4003417	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4003417	            0x85c0	                           test eax, eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4003419	          0x4189c4	                           mov r12d, eax	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x400341c	            0x7482	                            je 0x40033a0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x400341e	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4003425	          0x4531f6	                          xor r14d, r14d	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4003428	      0xe800000000	                          call 0x400342d	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x400342d	            0x85c0	                           test eax, eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x400342f	        0x410f95c6	                              setne r14b	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4003433	      0xe968ffffff	                           jmp 0x40033a0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4003438	     0xf1f84000000	                   nop dword [rax + rax]	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4003440	        0x488b7d00	                    mov rdi, qword [rbp]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4003444	      0xbe75000000	                           mov esi, 0x75	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4003449	      0xe800000000	                          call 0x400344e	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x400344e	          0x4885c0	                           test rax, rax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4003451	     0xf8562ffffff	                           jne 0x40033b9	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4003457	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x400345b	          0x4885db	                           test rbx, rbx	      2963	buffer.c	FUNCTION_45	FOR_1
0x400345e	            0x759e	                           jne 0x40033fe	      2963	buffer.c	FUNCTION_45	FOR_1
0x4003460	        0x4883c408	                              add rsp, 8	      3045	buffer.c	FUNCTION_45
0x4003464	              0x5b	                                 pop rbx	      3045	buffer.c	FUNCTION_45
0x4003465	              0x5d	                                 pop rbp	      3045	buffer.c	FUNCTION_45
0x4003466	            0x415c	                                 pop r12	      3045	buffer.c	FUNCTION_45
0x4003468	            0x415d	                                 pop r13	      3045	buffer.c	FUNCTION_45
0x400346a	            0x415e	                                 pop r14	      3045	buffer.c	FUNCTION_45
0x400346c	            0x415f	                                 pop r15	      3045	buffer.c	FUNCTION_45
0x400346e	              0xc3	                                     ret	      3045	buffer.c	FUNCTION_45
0x400346f	              0x90	                                     nop	      3045	buffer.c	FUNCTION_45
0x4003470	          0x4889df	                            mov rdi, rbx	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4003473	      0xe800000000	                          call 0x4003478	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4003478	            0x85c0	                           test eax, eax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x400347a	     0xf8475ffffff	                            je 0x40033f5	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4003480	        0x488b7d00	                    mov rdi, qword [rbp]	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4003484	      0xbe61000000	                           mov esi, 0x61	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4003489	      0xe800000000	                          call 0x400348e	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x400348e	          0x4885c0	                           test rax, rax	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4003491	            0x7416	                            je 0x40034a9	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4003493	      0x48837b0800	                  cmp qword [rbx + 8], 0	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003498	     0xf8457ffffff	                            je 0x40033f5	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400349e	          0x8b7b78	            mov edi, dword [rbx + 0x78] 	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034a1	            0x85ff	                           test edi, edi	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034a3	     0xf844cffffff	                            je 0x40033f5	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034a9	        0x488b7d00	                    mov rdi, qword [rbp]	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x40034ad	      0xbe68000000	                           mov esi, 0x68	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x40034b2	      0xe800000000	                          call 0x40034b7	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x40034b7	          0x4885c0	                           test rax, rax	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x40034ba	            0x7416	                            je 0x40034d2	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x40034bc	      0x48837b0800	                  cmp qword [rbx + 8], 0	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034c1	     0xf842effffff	                            je 0x40033f5	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034c7	          0x8b7378	            mov esi, dword [rbx + 0x78] 	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034ca	            0x85f6	                           test esi, esi	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034cc	     0xf8523ffffff	                           jne 0x40033f5	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034d2	        0x488b7d00	                    mov rdi, qword [rbp]	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x40034d6	      0xbe52000000	                           mov esi, 0x52	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x40034db	      0xe800000000	                          call 0x40034e0	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x40034e0	          0x4885c0	                           test rax, rax	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x40034e3	     0xf84d7020000	                            je 0x40037c0	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x40034e9	          0x4585e4	                         test r12d, r12d	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034ec	     0xf8403ffffff	                            je 0x40033f5	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034f2	          0x4585f6	                         test r14d, r14d	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034f5	     0xf85fafeffff	                           jne 0x40033f5	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40034fb	        0x488b7d00	                    mov rdi, qword [rbp]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40034ff	      0xbe3f000000	                           mov esi, 0x3f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4003504	      0xe800000000	                          call 0x4003509	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4003509	          0x4885c0	                           test rax, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x400350c	     0xf85e3feffff	                           jne 0x40033f5	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4003512	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003516	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400351b	      0xe800000000	                          call 0x4003520	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003520	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003523	     0xf85ccfeffff	                           jne 0x40033f5	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003529	        0x488b7d00	                    mov rdi, qword [rbp]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x400352d	      0xbe2d000000	                           mov esi, 0x2d	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4003532	      0xe800000000	                          call 0x4003537	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4003537	          0x4885c0	                           test rax, rax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x400353a	            0x740e	                            je 0x400354a	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x400353c	    0x8b8b40150000	          mov ecx, dword [rbx + 0x1540] 	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4003542	            0x85c9	                           test ecx, ecx	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4003544	     0xf85abfeffff	                           jne 0x40033f5	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x400354a	        0x488b7d00	                    mov rdi, qword [rbp]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400354e	      0xbe3d000000	                           mov esi, 0x3d	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4003553	      0xe800000000	                          call 0x4003558	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4003558	          0x4885c0	                           test rax, rax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400355b	            0x740e	                            je 0x400356b	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400355d	    0x8b9360150000	          mov edx, dword [rbx + 0x1560] 	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4003563	            0x85d2	                           test edx, edx	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4003565	     0xf848afeffff	                            je 0x40033f5	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400356b	        0x488b7d00	                    mov rdi, qword [rbp]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400356f	      0xbe78000000	                           mov esi, 0x78	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4003574	      0xe800000000	                          call 0x4003579	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4003579	          0x4885c0	                           test rax, rax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400357c	            0x740a	                            je 0x4003588	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x400357e	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4003582	     0xf846dfeffff	                            je 0x40033f5	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4003588	        0x488b7d00	                    mov rdi, qword [rbp]	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400358c	      0xbe25000000	                           mov esi, 0x25	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4003591	      0xe800000000	                          call 0x4003596	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4003596	          0x4885c0	                           test rax, rax	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4003599	            0x740d	                            je 0x40035a8	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x400359b	    0x48391d000000	            cmp qword [0x040035a2], rbx 	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40035a2	     0xf854dfeffff	                           jne 0x40033f5	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40035a8	        0x488b7d00	                    mov rdi, qword [rbp]	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40035ac	      0xbe23000000	                           mov esi, 0x23	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40035b1	      0xe800000000	                          call 0x40035b6	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40035b6	          0x4885c0	                           test rax, rax	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40035b9	            0x7426	                            je 0x40035e1	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40035bb	    0x48391d000000	            cmp qword [0x040035c2], rbx 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40035c2	     0xf842dfeffff	                            je 0x40033f5	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40035c8	    0x488b05000000	            mov rax, qword [0x040035cf] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40035cf	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40035d5	    0x398878010000	           cmp dword [rax + 0x178], ecx 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40035db	     0xf8514feffff	                           jne 0x40033f5	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40035e1	          0x4889df	                            mov rdi, rbx	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40035e4	      0xe800000000	                          call 0x40035e9	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40035e9	          0x4885c0	                           test rax, rax	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40035ec	     0xf841a020000	                            je 0x400380c	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x40035f2	          0x4889df	                            mov rdi, rbx	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40035f5	      0xe800000000	                          call 0x40035fa	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x40035fa	    0x488b3d000000	            mov rdi, qword [0x04003601] 	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x4003601	      0xbaff0f0000	                          mov edx, 0xfff	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x4003606	          0x4889c6	                            mov rsi, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x4003609	      0xe800000000	                          call 0x400360e	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x400360e	    0x488b3d000000	            mov rdi, qword [0x04003615] 	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x4003615	      0xe800000000	                          call 0x400361a	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x400361a	            0x85c0	                           test eax, eax	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x400361c	     0xf85d3fdffff	                           jne 0x40033f5	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x4003622	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003626	    0x41be78000000	                          mov r14d, 0x78	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400362c	            0x7516	                           jne 0x4003644	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400362e	          0x4889df	                            mov rdi, rbx	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003631	      0xe800000000	                          call 0x4003636	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003636	          0x83f801	                              cmp eax, 1	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003639	          0x4519f6	                          sbb r14d, r14d	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400363c	        0x4183e6f5	                    and r14d, 0xfffffff5	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003640	        0x4183c62b	                          add r14d, 0x2b	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4003644	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x400364b	      0xe800000000	                          call 0x4003650	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4003650	            0x85c0	                           test eax, eax	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4003652	     0xf8538020000	                           jne 0x4003890	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4003658	    0x4883bb481c00	             cmp qword [rbx + 0x1c48], 0	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x4003660	    0x41bc46000000	                          mov r12d, 0x46	      3013	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x4003666	     0xf84f9010000	                            je 0x4003865	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x400366c	      0xbf0a000000	                            mov edi, 0xa	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x4003671	      0xe800000000	                          call 0x4003676	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x4003676	      0x48837b0800	                  cmp qword [rbx + 8], 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400367b	    0x488b35000000	            mov rsi, qword [0x04003682] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4003682	     0xf847a010000	                            je 0x4003802	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4003688	        0x837b7801	               cmp dword [rbx + 0x78], 1	      3025	buffer.c	FUNCTION_45	FOR_1
0x400368c	            0x19c0	                            sbb eax, eax	      3025	buffer.c	FUNCTION_45	FOR_1
0x400368e	          0x83e007	                              and eax, 7	      3025	buffer.c	FUNCTION_45	FOR_1
0x4003691	          0x83c061	                           add eax, 0x61	      3025	buffer.c	FUNCTION_45	FOR_1
0x4003694	    0x48391d000000	            cmp qword [0x0400369b], rbx 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400369b	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40036a1	    0x41b925000000	                           mov r9d, 0x25	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036a7	            0x7419	                            je 0x40036c2	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036a9	    0x488b15000000	            mov rdx, qword [0x040036b0] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40036b0	          0x4531c9	                            xor r9d, r9d	      3023	buffer.c	FUNCTION_45	FOR_1
0x40036b3	    0x398a78010000	           cmp dword [rdx + 0x178], ecx 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40036b9	        0x410f94c1	                                sete r9b	      3023	buffer.c	FUNCTION_45	FOR_1
0x40036bd	      0x478d4c4920	            lea r9d, [r9 + r9*2 + 0x20] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40036c2	    0x83bb24140000	            cmp dword [rbx + 0x1424], 1 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036c9	    0x488b3d000000	            mov rdi, qword [0x040036d0] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036d0	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036d1	            0x4156	                                push r14	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036d3	      0xbeed030000	                          mov esi, 0x3ed	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036d8	            0x4154	                                push r12	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036da	              0x50	                                push rax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036db	            0x19d2	                            sbb edx, edx	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036dd	            0x31c0	                            xor eax, eax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036df	          0x83e255	                           and edx, 0x55	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036e2	        0x448d4220	                   lea r8d, [rdx + 0x20]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036e6	      0xba00000000	                              mov edx, 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036eb	      0xe800000000	                          call 0x40036f0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40036f0	    0x488b3d000000	            mov rdi, qword [0x040036f7] 	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40036f7	        0x4883c420	                           add rsp, 0x20	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x40036fb	      0x3ded030000	                          cmp eax, 0x3ed	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003700	        0x410f4fc5	                         cmovg eax, r13d	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003704	          0x4189c4	                           mov r12d, eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003707	      0xe800000000	                          call 0x400370c	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x400370c	      0xba28000000	                           mov edx, 0x28	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003711	            0x29c2	                            sub edx, eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003713	            0x89d0	                            mov eax, edx	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003715	          0x4963d4	                        movsxd rdx, r12d	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4003718	    0x488b0d000000	            mov rcx, qword [0x0400371f] 	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400371f	          0x83e801	                              sub eax, 1	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003722	        0x4183c401	                             add r12d, 1	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003726	            0x85c0	                           test eax, eax	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003728	        0xc6041120	              mov byte [rcx + rdx], 0x20	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400372c	     0xf8e83010000	                           jle 0x40038b5	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003732	        0x4883c201	                              add rdx, 1	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003736	    0x4181fcef0300	                         cmp r12d, 0x3ef	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400373d	            0x75d9	                           jne 0x4003718	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400373f	    0x41bcef030000	                         mov r12d, 0x3ef	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4003745	    0x41be12000000	                          mov r14d, 0x12	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400374b	    0x48391d000000	            cmp qword [0x04003752], rbx 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003752	     0xf8471010000	                            je 0x40038c9	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003758	    0x488bbb280100	           mov rdi, qword [rbx + 0x128] 	      2931	buffer.c	FUNCTION_43	CALL_2
0x400375f	            0x31f6	                            xor esi, esi	      2931	buffer.c	FUNCTION_43	CALL_2
0x4003761	      0xe84ad5ffff	            call sym.find_wininfo.isra.2	      2931	buffer.c	FUNCTION_43	CALL_2
0x4003766	        0x488d5018	                   lea rdx, [rax + 0x18]	      2933	buffer.c	FUNCTION_43	IF_1
0x400376a	          0x4885c0	                           test rax, rax	      2933	buffer.c	FUNCTION_43	IF_1
0x400376d	      0xb800000000	                              mov eax, 0	      2933	buffer.c	FUNCTION_43	IF_1
0x4003772	        0x480f45c2	                         cmovne rax, rdx	      2933	buffer.c	FUNCTION_43	IF_1
0x4003776	          0x4c8b38	                    mov r15, qword [rax]	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4003779	            0x31ff	                            xor edi, edi	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400377b	      0xba05000000	                              mov edx, 5	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003780	      0xbe00000000	                              mov esi, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003785	      0xe800000000	                          call 0x400378a	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400378a	          0x4c89e7	                            mov rdi, r12	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400378d	    0x48033d000000	             add rdi, qword [0x04003794]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003794	          0x4889c2	                            mov rdx, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4003797	          0x4c89f9	                            mov rcx, r15	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400379a	          0x4c89f6	                            mov rsi, r14	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400379d	            0x31c0	                            xor eax, eax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400379f	      0xe800000000	                          call 0x40037a4	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40037a4	    0x488b3d000000	            mov rdi, qword [0x040037ab] 	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x40037ab	      0xe800000000	                          call 0x40037b0	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x40037b0	      0xe800000000	                          call 0x40037b5	      3042	buffer.c	FUNCTION_45	FOR_1	CALL_32
0x40037b5	      0xe800000000	                          call 0x40037ba	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x40037ba	      0xe936fcffff	                           jmp 0x40033f5	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x40037bf	              0x90	                                     nop	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x40037c0	        0x488b7d00	                    mov rdi, qword [rbp]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40037c4	      0xbe3f000000	                           mov esi, 0x3f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40037c9	      0xe800000000	                          call 0x40037ce	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40037ce	          0x4885c0	                           test rax, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40037d1	            0x745f	                            je 0x4003832	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x40037d3	          0x4585e4	                         test r12d, r12d	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40037d6	     0xf8419fcffff	                            je 0x40033f5	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40037dc	        0x4183fe01	                             cmp r14d, 1	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40037e0	     0xf850ffcffff	                           jne 0x40033f5	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40037e6	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40037ea	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40037ef	      0xe800000000	                          call 0x40037f4	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40037f4	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40037f7	     0xf85f8fbffff	                           jne 0x40033f5	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40037fd	      0xe927fdffff	                           jmp 0x4003529	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003802	      0xb820000000	                           mov eax, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4003807	      0xe988feffff	                           jmp 0x4003694	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400380c	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4003813	    0x488b15000000	            mov rdx, qword [0x0400381a] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x400381a	    0x41b801000000	                              mov r8d, 1	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4003820	      0xb900100000	                         mov ecx, 0x1000	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4003825	          0x4889df	                            mov rdi, rbx	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4003828	      0xe800000000	                          call 0x400382d	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x400382d	      0xe9dcfdffff	                           jmp 0x400360e	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4003832	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003836	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400383b	      0xe800000000	                          call 0x4003840	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003840	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003843	     0xf84e0fcffff	                            je 0x4003529	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4003849	          0x4585e4	                         test r12d, r12d	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400384c	     0xf85a3fbffff	                           jne 0x40033f5	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003852	    0x4883bb481c00	             cmp qword [rbx + 0x1c48], 0	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400385a	     0xf85c9fcffff	                           jne 0x4003529	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003860	      0xe990fbffff	                           jmp 0x40033f5	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4003865	    0x8b8340150000	          mov eax, dword [rbx + 0x1540] 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x400386b	    0x41bc2d000000	                          mov r12d, 0x2d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003871	            0x85c0	                           test eax, eax	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003873	     0xf84f3fdffff	                            je 0x400366c	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003879	    0x83bb60150000	            cmp dword [rbx + 0x1560], 1 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003880	          0x4519e4	                          sbb r12d, r12d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003883	        0x4183e4e3	                    and r12d, 0xffffffe3	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003887	        0x4183c43d	                          add r12d, 0x3d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x400388b	      0xe9dcfdffff	                           jmp 0x400366c	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x4003890	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4003897	    0x41be20000000	                          mov r14d, 0x20	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400389d	      0xe800000000	                          call 0x40038a2	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x40038a2	          0x83f801	                              cmp eax, 1	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038a5	          0x4519e4	                          sbb r12d, r12d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038a8	        0x4183e413	                          and r12d, 0x13	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038ac	        0x4183c43f	                          add r12d, 0x3f	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038b0	      0xe9b7fdffff	                           jmp 0x400366c	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038b5	    0x41be01040000	                         mov r14d, 0x401	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038bb	          0x4529e6	                          sub r14d, r12d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038be	          0x4d63e4	                        movsxd r12, r12d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038c1	          0x4d63f6	                        movsxd r14, r14d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038c4	      0xe982feffff	                           jmp 0x400374b	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40038c9	    0x488b05000000	            mov rax, qword [0x040038d0] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40038d0	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40038d4	      0xe9a0feffff	                           jmp 0x4003779	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
write_viminfo_bufferlist	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,8:FOR,0:functions,1:ELSE,0	103
0x4002610	            0x4156	                                push r14	      5545	buffer.c	FUNCTION_76
0x4002612	            0x4155	                                push r13	      5545	buffer.c	FUNCTION_76
0x4002614	          0x4989fd	                            mov r13, rdi	      5545	buffer.c	FUNCTION_76
0x4002617	            0x4154	                                push r12	      5545	buffer.c	FUNCTION_76
0x4002619	              0x55	                                push rbp	      5545	buffer.c	FUNCTION_76
0x400261a	      0xbf25000000	                           mov edi, 0x25	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x400261f	              0x53	                                push rbx	      5545	buffer.c	FUNCTION_76
0x4002620	      0xe800000000	                          call 0x4002625	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x4002625	          0x4885c0	                           test rax, rax	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x4002628	     0xf845e010000	                            je 0x400278c	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x400262e	      0xbf25000000	                           mov edi, 0x25	      5556	buffer.c	FUNCTION_76	CALL_2
0x4002633	      0xe800000000	                          call 0x4002638	      5556	buffer.c	FUNCTION_76	CALL_2
0x4002638	      0xbf28100000	                         mov edi, 0x1028	      5560	buffer.c	FUNCTION_76	CALL_3
0x400263d	          0x4189c6	                           mov r14d, eax	      5556	buffer.c	FUNCTION_76	CALL_2
0x4002640	      0xe800000000	                          call 0x4002645	      5560	buffer.c	FUNCTION_76	CALL_3
0x4002645	          0x4885c0	                           test rax, rax	      5561	buffer.c	FUNCTION_76	IF_2
0x4002648	          0x4989c4	                            mov r12, rax	      5560	buffer.c	FUNCTION_76	CALL_3
0x400264b	     0xf843b010000	                            je 0x400278c	      5561	buffer.c	FUNCTION_76	IF_2
0x4002651	    0x488b2d000000	            mov rbp, qword [0x04002658] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002658	          0x4885ed	                           test rbp, rbp	      5564	buffer.c	FUNCTION_76	CALL_4
0x400265b	            0x7435	                            je 0x4002692	      5564	buffer.c	FUNCTION_76	CALL_4
0x400265d	           0xf1f00	                         nop dword [rax]	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002660	    0x48392d000000	            cmp qword [0x04002667], rbp 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002667	     0xf8413010000	                            je 0x4002780	      5564	buffer.c	FUNCTION_76	CALL_4
0x400266d	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002671	            0xeb11	                           jmp 0x4002684	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002673	       0xf1f440000	                   nop dword [rax + rax]	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002678	          0x4889df	                            mov rdi, rbx	      5565	buffer.c	FUNCTION_76	CALL_5
0x400267b	      0xe800000000	                          call 0x4002680	      5565	buffer.c	FUNCTION_76	CALL_5
0x4002680	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002684	          0x4885db	                           test rbx, rbx	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002687	            0x75ef	                           jne 0x4002678	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002689	        0x488b6d00	                    mov rbp, qword [rbp]	      5564	buffer.c	FUNCTION_76	CALL_4
0x400268d	          0x4885ed	                           test rbp, rbp	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002690	            0x75ce	                           jne 0x4002660	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002692	            0x31ff	                            xor edi, edi	      5567	buffer.c	FUNCTION_76	CALL_7
0x4002694	      0xba05000000	                              mov edx, 5	      5567	buffer.c	FUNCTION_76	CALL_7
0x4002699	      0xbe00000000	                              mov esi, 0	      5567	buffer.c	FUNCTION_76	CALL_7
0x400269e	      0xe800000000	                          call 0x40026a3	      5567	buffer.c	FUNCTION_76	CALL_7
0x40026a3	          0x4c89ee	                            mov rsi, r13	      5567	buffer.c	FUNCTION_76	CALL_7
0x40026a6	          0x4889c7	                            mov rdi, rax	      5567	buffer.c	FUNCTION_76	CALL_7
0x40026a9	      0xe800000000	                          call 0x40026ae	      5567	buffer.c	FUNCTION_76	CALL_7
0x40026ae	    0x488b1d000000	            mov rbx, qword [0x040026b5] 	      5568	buffer.c	FUNCTION_76
0x40026b5	          0x4885db	                           test rbx, rbx	      5568	buffer.c	FUNCTION_76
0x40026b8	     0xf84af000000	                            je 0x400276d	      5568	buffer.c	FUNCTION_76
0x40026be	            0x6690	                                     nop	      5568	buffer.c	FUNCTION_76
0x40026c0	    0x4883bb980000	               cmp qword [rbx + 0x98], 0	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40026c8	     0xf8492000000	                            je 0x4002760	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40026ce	    0x8b8324140000	          mov eax, dword [rbx + 0x1424] 	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40026d4	            0x85c0	                           test eax, eax	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40026d6	     0xf8484000000	                            je 0x4002760	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x40026dc	    0x488b83181400	          mov rax, qword [rbx + 0x1418] 	      5600	buffer.c	FUNCTION_77
0x40026e3	           0xfb600	                   movzx eax, byte [rax]	      5600	buffer.c	FUNCTION_77
0x40026e6	            0x3c71	                            cmp al, 0x71	      5600	buffer.c	FUNCTION_77
0x40026e8	            0x7476	                            je 0x4002760	      5600	buffer.c	FUNCTION_77
0x40026ea	            0x3c74	                            cmp al, 0x74	      5609	buffer.c	FUNCTION_78
0x40026ec	            0x7472	                            je 0x4002760	      5609	buffer.c	FUNCTION_78
0x40026ee	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x40026f5	      0xe800000000	                          call 0x40026fa	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x40026fa	            0x85c0	                           test eax, eax	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x40026fc	            0x7562	                           jne 0x4002760	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x40026fe	          0x4585f6	                         test r14d, r14d	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x4002701	        0x418d6eff	                      lea ebp, [r14 - 1]	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x4002705	            0x7466	                            je 0x400276d	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x4002707	          0x4c89ee	                            mov rsi, r13	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x400270a	      0xbf25000000	                           mov edi, 0x25	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x400270f	          0x4189ee	                           mov r14d, ebp	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4002712	      0xe800000000	                          call 0x4002717	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x4002717	    0x488bb3880000	            mov rsi, qword [rbx + 0x88] 	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400271e	    0x41b801000000	                              mov r8d, 1	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4002724	      0xb900100000	                         mov ecx, 0x1000	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4002729	          0x4c89e2	                            mov rdx, r12	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400272c	            0x31ff	                            xor edi, edi	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x400272e	      0xe800000000	                          call 0x4002733	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4002733	    0x488b8b280300	           mov rcx, qword [rbx + 0x328] 	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400273a	    0x448b83300300	           mov r8d, dword [rbx + 0x330] 	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4002741	      0xba00000000	                              mov edx, 0	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4002746	      0xbe28100000	                         mov esi, 0x1028	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400274b	          0x4c89e7	                            mov rdi, r12	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x400274e	            0x31c0	                            xor eax, eax	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4002750	      0xe800000000	                          call 0x4002755	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4002755	          0x4c89e6	                            mov rsi, r12	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4002758	          0x4c89ef	                            mov rdi, r13	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x400275b	      0xe800000000	                          call 0x4002760	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4002760	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      5568	buffer.c	FUNCTION_76
0x4002764	          0x4885db	                           test rbx, rbx	      5568	buffer.c	FUNCTION_76
0x4002767	     0xf8553ffffff	                           jne 0x40026c0	      5568	buffer.c	FUNCTION_76
0x400276d	              0x5b	                                 pop rbx	      5591	buffer.c	FUNCTION_76
0x400276e	          0x4c89e7	                            mov rdi, r12	      5590	buffer.c	FUNCTION_76	CALL_8
0x4002771	              0x5d	                                 pop rbp	      5591	buffer.c	FUNCTION_76
0x4002772	            0x415c	                                 pop r12	      5591	buffer.c	FUNCTION_76
0x4002774	            0x415d	                                 pop r13	      5591	buffer.c	FUNCTION_76
0x4002776	            0x415e	                                 pop r14	      5591	buffer.c	FUNCTION_76
0x4002778	      0xe900000000	                           jmp 0x400277d	      5590	buffer.c	FUNCTION_76	CALL_8
0x400277d	           0xf1f00	                         nop dword [rax]	      5590	buffer.c	FUNCTION_76	CALL_8
0x4002780	    0x488b1d000000	            mov rbx, qword [0x04002787] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4002787	      0xe9f8feffff	                           jmp 0x4002684	      5564	buffer.c	FUNCTION_76	CALL_4
0x400278c	              0x5b	                                 pop rbx	      5591	buffer.c	FUNCTION_76
0x400278d	              0x5d	                                 pop rbp	      5591	buffer.c	FUNCTION_76
0x400278e	            0x415c	                                 pop r12	      5591	buffer.c	FUNCTION_76
0x4002790	            0x415d	                                 pop r13	      5591	buffer.c	FUNCTION_76
0x4002792	            0x415e	                                 pop r14	      5591	buffer.c	FUNCTION_76
0x4002794	              0xc3	                                     ret	      5591	buffer.c	FUNCTION_76
buf_name_changed	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,6:FOR,0:functions,0:ELSE,0	18
0x40065d0	              0x53	                                push rbx	      3196	buffer.c	FUNCTION_49
0x40065d1	      0x48837f0800	                  cmp qword [rdi + 8], 0	      3200	buffer.c	FUNCTION_49	IF_1
0x40065d6	          0x4889fb	                            mov rbx, rdi	      3196	buffer.c	FUNCTION_49
0x40065d9	            0x7405	                            je 0x40065e0	      3200	buffer.c	FUNCTION_49	IF_1
0x40065db	      0xe800000000	                          call 0x40065e0	      3201	buffer.c	FUNCTION_49	CALL_1
0x40065e0	    0x488b3d000000	            mov rdi, qword [0x040065e7] 	      3203	buffer.c	FUNCTION_49	IF_2
0x40065e7	        0x483b5f08	                cmp rbx, qword [rdi + 8]	      3203	buffer.c	FUNCTION_49	IF_2
0x40065eb	            0x7423	                            je 0x4006610	      3203	buffer.c	FUNCTION_49	IF_2
0x40065ed	      0xe800000000	                          call 0x40065f2	      3206	buffer.c	FUNCTION_49	CALL_3
0x40065f2	      0xe800000000	                          call 0x40065f7	      3208	buffer.c	FUNCTION_49	CALL_4
0x40065f7	          0x4889df	                            mov rdi, rbx	      3209	buffer.c	FUNCTION_49	CALL_5
0x40065fa	      0xe800000000	                          call 0x40065ff	      3209	buffer.c	FUNCTION_49	CALL_5
0x40065ff	          0x4889df	                            mov rdi, rbx	      3210	buffer.c	FUNCTION_49	CALL_6
0x4006602	              0x5b	                                 pop rbx	      3211	buffer.c	FUNCTION_49
0x4006603	      0xe900000000	                           jmp 0x4006608	      3210	buffer.c	FUNCTION_49	CALL_6
0x4006608	     0xf1f84000000	                   nop dword [rax + rax]	      3210	buffer.c	FUNCTION_49	CALL_6
0x4006610	      0xe800000000	                          call 0x4006615	      3204	buffer.c	FUNCTION_49	CALL_2
0x4006615	            0xebd6	                           jmp 0x40065ed	      3204	buffer.c	FUNCTION_49	CALL_2
getaltfname	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:ELSE,0	36
0x4002170	              0x55	                                push rbp	      3241	buffer.c	FUNCTION_51
0x4002171	              0x53	                                push rbx	      3241	buffer.c	FUNCTION_51
0x4002172	            0x89fd	                            mov ebp, edi	      3241	buffer.c	FUNCTION_51
0x4002174	            0x31ff	                            xor edi, edi	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4002176	        0x4883ec28	                           sub rsp, 0x28	      3241	buffer.c	FUNCTION_51
0x400217a	      0x488d542410	                   lea rdx, [rsp + 0x10]	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x400217f	      0x488d742408	                      lea rsi, [rsp + 8]	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4002184	    0x64488b042528	                mov rax, qword fs:[0x28]	      3241	buffer.c	FUNCTION_51
0x400218d	      0x4889442418	             mov qword [rsp + 0x18], rax	      3241	buffer.c	FUNCTION_51
0x4002192	            0x31c0	                            xor eax, eax	      3241	buffer.c	FUNCTION_51
0x4002194	      0xe800000000	                          call 0x4002199	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x4002199	            0x85c0	                           test eax, eax	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x400219b	            0x7523	                           jne 0x40021c0	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x400219d	            0x31db	                            xor ebx, ebx	      3249	buffer.c	FUNCTION_51	IF_1
0x400219f	            0x85ed	                           test ebp, ebp	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x40021a1	            0x752d	                           jne 0x40021d0	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x40021a3	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3252	buffer.c	FUNCTION_51
0x40021a8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3252	buffer.c	FUNCTION_51
0x40021b1	          0x4889d8	                            mov rax, rbx	      3252	buffer.c	FUNCTION_51
0x40021b4	            0x7535	                           jne 0x40021eb	      3252	buffer.c	FUNCTION_51
0x40021b6	        0x4883c428	                           add rsp, 0x28	      3252	buffer.c	FUNCTION_51
0x40021ba	              0x5b	                                 pop rbx	      3252	buffer.c	FUNCTION_51
0x40021bb	              0x5d	                                 pop rbp	      3252	buffer.c	FUNCTION_51
0x40021bc	              0xc3	                                     ret	      3252	buffer.c	FUNCTION_51
0x40021bd	           0xf1f00	                         nop dword [rax]	      3252	buffer.c	FUNCTION_51
0x40021c0	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      3251	buffer.c	FUNCTION_51
0x40021c5	            0xebdc	                           jmp 0x40021a3	      3251	buffer.c	FUNCTION_51
0x40021c7	    0x660f1f840000	                    nop word [rax + rax]	      3251	buffer.c	FUNCTION_51
0x40021d0	            0x31ff	                            xor edi, edi	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40021d2	      0xba05000000	                              mov edx, 5	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40021d7	      0xbe00000000	                              mov esi, 0	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40021dc	      0xe800000000	                          call 0x40021e1	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40021e1	          0x4889c7	                            mov rdi, rax	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40021e4	      0xe800000000	                          call 0x40021e9	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40021e9	            0xebb8	                           jmp 0x40021a3	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40021eb	      0xe800000000	                call sym.buflist_altfpos	      3252	buffer.c	FUNCTION_51
enter_buffer	IF,9:WHILE,0:DO,0:SWITCH,0:CALL,19:FOR,0:functions,0:ELSE,2	132
0x4007920	              0x53	                                push rbx	      1701	buffer.c	FUNCTION_21
0x4007921	      0xbe05000000	                              mov esi, 5	      1703	buffer.c	FUNCTION_21	CALL_1
0x4007926	          0x4889fb	                            mov rbx, rdi	      1701	buffer.c	FUNCTION_21
0x4007929	      0xe800000000	                          call 0x400792e	      1703	buffer.c	FUNCTION_21	CALL_1
0x400792e	    0x448b8b581700	          mov r9d, dword [rbx + 0x1758] 	      1704	buffer.c	FUNCTION_21	IF_1
0x4007935	          0x4585c9	                           test r9d, r9d	      1704	buffer.c	FUNCTION_21	IF_1
0x4007938	     0xf8582010000	                           jne 0x4007ac0	      1704	buffer.c	FUNCTION_21	IF_1
0x400793e	          0x4889df	                            mov rdi, rbx	      1705	buffer.c	FUNCTION_21	CALL_2
0x4007941	      0xe800000000	                          call 0x4007946	      1705	buffer.c	FUNCTION_21	CALL_2
0x4007946	    0x488b3d000000	            mov rdi, qword [0x0400794d] 	      1710	buffer.c	FUNCTION_21	CALL_4
0x400794d	      0xe800000000	                          call 0x4007952	      1710	buffer.c	FUNCTION_21	CALL_4
0x4007952	    0x488b05000000	            mov rax, qword [0x04007959] 	      1714	buffer.c	FUNCTION_21
0x4007959	    0x48891d000000	            mov qword [0x04007960], rbx 	      1715	buffer.c	FUNCTION_21
0x4007960	          0x4889df	                            mov rdi, rbx	      1715	buffer.c	FUNCTION_21
0x4007963	    0x448b80c00100	           mov r8d, dword [rax + 0x1c0] 	      1719	buffer.c	FUNCTION_21	IF_2
0x400796a	        0x48895808	                mov qword [rax + 8], rbx	      1714	buffer.c	FUNCTION_21
0x400796e	        0x83437801	               add dword [rbx + 0x78], 1	      1716	buffer.c	FUNCTION_21
0x4007972	          0x4585c0	                           test r8d, r8d	      1719	buffer.c	FUNCTION_21	IF_2
0x4007975	     0xf8575010000	                           jne 0x4007af0	      1719	buffer.c	FUNCTION_21	IF_2
0x400797b	    0xc68080000000	                mov byte [rax + 0x80], 0	      1734	buffer.c	FUNCTION_21
0x4007982	    0x488d97681700	                 lea rdx, [rdi + 0x1768]	      1724	buffer.c	FUNCTION_21
0x4007989	      0x48837f0800	                  cmp qword [rdi + 8], 0	      1740	buffer.c	FUNCTION_21	IF_3
0x400798e	    0x48c740380100	               mov qword [rax + 0x38], 1	      1728	buffer.c	FUNCTION_21
0x4007996	        0x48895010	             mov qword [rax + 0x10], rdx	      1724	buffer.c	FUNCTION_21
0x400799a	    0xc74040000000	               mov dword [rax + 0x40], 0	      1729	buffer.c	FUNCTION_21
0x40079a1	    0xc74044000000	               mov dword [rax + 0x44], 0	      1731	buffer.c	FUNCTION_21
0x40079a8	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      1733	buffer.c	FUNCTION_21
0x40079af	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      1737	buffer.c	FUNCTION_21
0x40079b9	     0xf84b1010000	                            je 0x4007b70	      1740	buffer.c	FUNCTION_21	IF_3
0x40079bf	    0x8b3500000000	            mov esi, dword [0x040079c5] 	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x40079c5	            0x85f6	                           test esi, esi	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x40079c7	     0xf840b010000	                            je 0x4007ad8	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x40079cd	            0x31f6	                            xor esi, esi	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x40079cf	      0xe800000000	                          call 0x40079d4	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x40079d4	    0x488b05000000	            mov rax, qword [0x040079db] 	      1755	buffer.c	FUNCTION_21	ELSE_2
0x40079db	    0x4c8b05000000	              mov r8, qword [0x040079e2]	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40079e2	            0x31c9	                            xor ecx, ecx	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40079e4	            0x31d2	                            xor edx, edx	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40079e6	            0x31f6	                            xor esi, esi	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40079e8	      0xbf02000000	                              mov edi, 2	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40079ed	    0x48c740780100	               mov qword [rax + 0x78], 1	      1755	buffer.c	FUNCTION_21	ELSE_2
0x40079f5	    0xc78084000000	               mov dword [rax + 0x84], 0	      1757	buffer.c	FUNCTION_21	ELSE_2
0x40079ff	      0xe800000000	                          call 0x4007a04	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4007a04	    0x4c8b05000000	              mov r8, qword [0x04007a0b]	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007a0b	            0x31c9	                            xor ecx, ecx	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007a0d	            0x31d2	                            xor edx, edx	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007a0f	            0x31f6	                            xor esi, esi	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007a11	      0xbf0d000000	                            mov edi, 0xd	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007a16	      0xe800000000	                          call 0x4007a1b	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4007a1b	    0x488b3d000000	            mov rdi, qword [0x04007a22] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007a22	      0x48837f3801	               cmp qword [rdi + 0x38], 1	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007a27	     0xf847b010000	                            je 0x4007ba8	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007a2d	      0xe800000000	                          call 0x4007a32	      1768	buffer.c	FUNCTION_21	CALL_12
0x4007a32	      0xe800000000	                          call 0x4007a37	      1770	buffer.c	FUNCTION_21	CALL_13
0x4007a37	    0x488b05000000	            mov rax, qword [0x04007a3e] 	      1773	buffer.c	FUNCTION_21	IF_7
0x4007a3e	      0x4883787801	               cmp qword [rax + 0x78], 1	      1773	buffer.c	FUNCTION_21	IF_7
0x4007a43	     0xf84ef000000	                            je 0x4007b38	      1773	buffer.c	FUNCTION_21	IF_7
0x4007a49	    0x488b3d000000	            mov rdi, qword [0x04007a50] 	      1778	buffer.c	FUNCTION_21	CALL_15
0x4007a50	      0xe800000000	                          call 0x4007a55	      1778	buffer.c	FUNCTION_21	CALL_15
0x4007a55	    0x8b0d00000000	            mov ecx, dword [0x04007a5b] 	      1782	buffer.c	FUNCTION_21
0x4007a5b	            0x85c9	                           test ecx, ecx	      1782	buffer.c	FUNCTION_21
0x4007a5d	     0xf85c5000000	                           jne 0x4007b28	      1782	buffer.c	FUNCTION_21
0x4007a63	    0x488b1d000000	            mov rbx, qword [0x04007a6a] 	      1785	buffer.c	FUNCTION_21	IF_8
0x4007a6a	    0xf68388120000	            test byte [rbx + 0x1288], 1 	      1785	buffer.c	FUNCTION_21	IF_8
0x4007a71	     0xf8599000000	                           jne 0x4007b10	      1785	buffer.c	FUNCTION_21	IF_8
0x4007a77	    0x8b9358170000	          mov edx, dword [rbx + 0x1758] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a7d	            0x85d2	                           test edx, edx	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a7f	            0x7525	                           jne 0x4007aa6	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a81	    0x488b3d000000	            mov rdi, qword [0x04007a88] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a88	    0x8b8768020000	           mov eax, dword [rdi + 0x268] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a8e	            0x85c0	                           test eax, eax	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a90	            0x7414	                            je 0x4007aa6	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a92	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a96	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      1791	buffer.c	FUNCTION_21	IF_9
0x4007a9d	          0x803800	                       cmp byte [rax], 0	      1791	buffer.c	FUNCTION_21	IF_9
0x4007aa0	     0xf85b2000000	                           jne 0x4007b58	      1791	buffer.c	FUNCTION_21	IF_9
0x4007aa6	      0xe800000000	                          call 0x4007aab	      1795	buffer.c	FUNCTION_21	CALL_18
0x4007aab	    0x488983500100	            mov qword [rbx + 0x150], rax	      1795	buffer.c	FUNCTION_21	CALL_18
0x4007ab2	      0xbf28000000	                           mov edi, 0x28	      1798	buffer.c	FUNCTION_21	CALL_19
0x4007ab7	              0x5b	                                 pop rbx	      1799	buffer.c	FUNCTION_21
0x4007ab8	      0xe900000000	                           jmp 0x4007abd	      1798	buffer.c	FUNCTION_21	CALL_19
0x4007abd	           0xf1f00	                         nop dword [rax]	      1798	buffer.c	FUNCTION_21	CALL_19
0x4007ac0	    0x488b3d000000	            mov rdi, qword [0x04007ac7] 	      1709	buffer.c	FUNCTION_21	CALL_3
0x4007ac7	      0xe800000000	                          call 0x4007acc	      1709	buffer.c	FUNCTION_21	CALL_3
0x4007acc	      0xe975feffff	                           jmp 0x4007946	      1709	buffer.c	FUNCTION_21	CALL_3
0x4007ad1	     0xf1f80000000	                         nop dword [rax]	      1709	buffer.c	FUNCTION_21	CALL_3
0x4007ad8	    0xc70500000000	               mov dword [0x04007ae2], 1	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4007ae2	      0xe9e6feffff	                           jmp 0x40079cd	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4007ae7	    0x660f1f840000	                    nop word [rax + rax]	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4007af0	      0xe800000000	                          call 0x4007af5	      1720	buffer.c	FUNCTION_21	CALL_5
0x4007af5	    0x488b05000000	            mov rax, qword [0x04007afc] 	      1720	buffer.c	FUNCTION_21	CALL_5
0x4007afc	    0x488b3d000000	            mov rdi, qword [0x04007b03] 	      1720	buffer.c	FUNCTION_21	CALL_5
0x4007b03	      0xe973feffff	                           jmp 0x400797b	      1720	buffer.c	FUNCTION_21	CALL_5
0x4007b08	     0xf1f84000000	                   nop dword [rax + rax]	      1720	buffer.c	FUNCTION_21	CALL_5
0x4007b10	      0xe800000000	                          call 0x4007b15	      1786	buffer.c	FUNCTION_21	CALL_16
0x4007b15	    0x488b1d000000	            mov rbx, qword [0x04007b1c] 	      1786	buffer.c	FUNCTION_21	CALL_16
0x4007b1c	      0xe956ffffff	                           jmp 0x4007a77	      1786	buffer.c	FUNCTION_21	CALL_16
0x4007b21	     0xf1f80000000	                         nop dword [rax]	      1786	buffer.c	FUNCTION_21	CALL_16
0x4007b28	      0xe800000000	                          call 0x4007b2d	      1782	buffer.c	FUNCTION_21
0x4007b2d	      0xe931ffffff	                           jmp 0x4007a63	      1782	buffer.c	FUNCTION_21
0x4007b32	    0x660f1f440000	                    nop word [rax + rax]	      1782	buffer.c	FUNCTION_21
0x4007b38	    0x80b880000000	                cmp byte [rax + 0x80], 0	      1773	buffer.c	FUNCTION_21	IF_7
0x4007b3f	     0xf8504ffffff	                           jne 0x4007a49	      1773	buffer.c	FUNCTION_21	IF_7
0x4007b45	            0x31ff	                            xor edi, edi	      1774	buffer.c	FUNCTION_21	CALL_14
0x4007b47	      0xe800000000	                          call 0x4007b4c	      1774	buffer.c	FUNCTION_21	CALL_14
0x4007b4c	      0xe9f8feffff	                           jmp 0x4007a49	      1774	buffer.c	FUNCTION_21	CALL_14
0x4007b51	     0xf1f80000000	                         nop dword [rax]	      1774	buffer.c	FUNCTION_21	CALL_14
0x4007b58	      0xe800000000	                          call 0x4007b5d	      1792	buffer.c	FUNCTION_21	CALL_17
0x4007b5d	    0x488b1d000000	            mov rbx, qword [0x04007b64] 	      1792	buffer.c	FUNCTION_21	CALL_17
0x4007b64	      0xe93dffffff	                           jmp 0x4007aa6	      1792	buffer.c	FUNCTION_21	CALL_17
0x4007b69	     0xf1f80000000	                         nop dword [rax]	      1792	buffer.c	FUNCTION_21	CALL_17
0x4007b70	    0x488b87981400	          mov rax, qword [rdi + 0x1498] 	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4007b77	          0x803800	                       cmp byte [rax], 0	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4007b7a	            0x750a	                           jne 0x4007b86	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x4007b7c	    0xc70500000000	               mov dword [0x04007b86], 0	      1746	buffer.c	FUNCTION_21	IF_3	IF_4
0x4007b86	            0x31ff	                            xor edi, edi	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4007b88	            0x31d2	                            xor edx, edx	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4007b8a	            0x31f6	                            xor esi, esi	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4007b8c	      0xe800000000	                          call 0x4007b91	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x4007b91	    0x488b3d000000	            mov rdi, qword [0x04007b98] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007b98	      0x48837f3801	               cmp qword [rdi + 0x38], 1	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007b9d	     0xf858afeffff	                           jne 0x4007a2d	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007ba3	       0xf1f440000	                   nop dword [rax + rax]	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007ba8	            0x31ff	                            xor edi, edi	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007baa	      0xe800000000	                          call 0x4007baf	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007baf	            0x85c0	                           test eax, eax	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007bb1	            0x750d	                           jne 0x4007bc0	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007bb3	    0x488b3d000000	            mov rdi, qword [0x04007bba] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007bba	      0xe96efeffff	                           jmp 0x4007a2d	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007bbf	              0x90	                                     nop	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4007bc0	      0xe800000000	                          call 0x4007bc5	      1766	buffer.c	FUNCTION_21	CALL_11
0x4007bc5	            0xebec	                           jmp 0x4007bb3	      1766	buffer.c	FUNCTION_21	CALL_11
goto_buffer	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,6:FOR,0:functions,0:ELSE,1	49
0x4009730	              0x53	                                push rbx	       965	buffer.c	FUNCTION_15
0x4009731	          0x4889fb	                            mov rbx, rdi	       965	buffer.c	FUNCTION_15
0x4009734	        0x4883ec30	                           sub rsp, 0x30	       965	buffer.c	FUNCTION_15
0x4009738	    0x64488b042528	                mov rax, qword fs:[0x28]	       965	buffer.c	FUNCTION_15
0x4009741	      0x4889442428	             mov qword [rsp + 0x28], rax	       965	buffer.c	FUNCTION_15
0x4009746	            0x31c0	                            xor eax, eax	       965	buffer.c	FUNCTION_15
0x4009748	    0x488b05000000	            mov rax, qword [0x0400974f] 	       969	buffer.c	FUNCTION_15	CALL_1
0x400974f	          0x4885c0	                           test rax, rax	       362	buffer.c	FUNCTION_3
0x4009752	        0x48890424	                    mov qword [rsp], rax	       361	buffer.c	FUNCTION_3
0x4009756	     0xf84ac000000	                            je 0x4009808	       362	buffer.c	FUNCTION_3
0x400975c	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4009762	        0x89442408	                mov dword [rsp + 8], eax	       362	buffer.c	FUNCTION_3
0x4009766	    0x8b0500000000	            mov eax, dword [0x0400976c] 	       363	buffer.c	FUNCTION_3
0x400976c	            0x31ff	                            xor edi, edi	       973	buffer.c	FUNCTION_15	CALL_2
0x400976e	    0xc70500000000	               mov dword [0x04009778], 1	       971	buffer.c	FUNCTION_15
0x4009778	        0x448b4334	            mov r8d, dword [rbx + 0x34] 	       973	buffer.c	FUNCTION_15	CALL_2
0x400977c	        0x8944240c	              mov dword [rsp + 0xc], eax	       363	buffer.c	FUNCTION_3
0x4009780	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       973	buffer.c	FUNCTION_15	CALL_2
0x4009784	          0x803873	                    cmp byte [rax], 0x73	       973	buffer.c	FUNCTION_15	CALL_2
0x4009787	        0x400f94c7	                                sete dil	       973	buffer.c	FUNCTION_15	CALL_2
0x400978b	      0xe800000000	                          call 0x4009790	       973	buffer.c	FUNCTION_15	CALL_2
0x4009790	    0x833d00000000	               cmp dword [0x04009797], 2	       976	buffer.c	FUNCTION_15	IF_1
0x4009797	            0x7427	                            je 0x40097c0	       976	buffer.c	FUNCTION_15	IF_1
0x4009799	          0x4889e7	                            mov rdi, rsp	       998	buffer.c	FUNCTION_15	CALL_6
0x400979c	      0xe800000000	                          call 0x40097a1	       998	buffer.c	FUNCTION_15	CALL_6
0x40097a1	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1000	buffer.c	FUNCTION_15
0x40097a6	    0x644833042528	                xor rax, qword fs:[0x28]	      1000	buffer.c	FUNCTION_15
0x40097af	            0x755e	                           jne 0x400980f	      1000	buffer.c	FUNCTION_15
0x40097b1	        0x4883c430	                           add rsp, 0x30	      1000	buffer.c	FUNCTION_15
0x40097b5	              0x5b	                                 pop rbx	      1000	buffer.c	FUNCTION_15
0x40097b6	              0xc3	                                     ret	      1000	buffer.c	FUNCTION_15
0x40097b7	    0x660f1f840000	                    nop word [rax + rax]	      1000	buffer.c	FUNCTION_15
0x40097c0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       976	buffer.c	FUNCTION_15	IF_1
0x40097c4	          0x803873	                    cmp byte [rax], 0x73	       976	buffer.c	FUNCTION_15	IF_1
0x40097c7	            0x75d0	                           jne 0x4009799	       976	buffer.c	FUNCTION_15	IF_1
0x40097c9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x40097ce	      0xe800000000	                          call 0x40097d3	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x40097d3	    0x488b3d000000	            mov rdi, qword [0x040097da] 	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x40097da	      0xbe01000000	                              mov esi, 1	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x40097df	      0xe800000000	                          call 0x40097e4	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x40097e4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x40097e9	    0xc70500000000	               mov dword [0x040097f3], 0	       988	buffer.c	FUNCTION_15	IF_1
0x40097f3	    0xc70500000000	               mov dword [0x040097fd], 1	       989	buffer.c	FUNCTION_15	IF_1
0x40097fd	      0xe800000000	                          call 0x4009802	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x4009802	            0xeb9d	                           jmp 0x40097a1	       977	buffer.c	FUNCTION_15	IF_1
0x4009804	         0xf1f4000	                         nop dword [rax]	       977	buffer.c	FUNCTION_15	IF_1
0x4009808	            0x31c0	                            xor eax, eax	       362	buffer.c	FUNCTION_3
0x400980a	      0xe953ffffff	                           jmp 0x4009762	       362	buffer.c	FUNCTION_3
0x400980f	      0xe800000000	                          call 0x4009814	      1000	buffer.c	FUNCTION_15
buflist_add	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:ELSE,0	14
0x4009d80	        0x4883ec08	                              sub rsp, 8	      3262	buffer.c	FUNCTION_52
0x4009d84	            0x89f1	                            mov ecx, esi	      3262	buffer.c	FUNCTION_52
0x4009d86	            0x31d2	                            xor edx, edx	      3265	buffer.c	FUNCTION_52	CALL_1
0x4009d88	            0x31f6	                            xor esi, esi	      3265	buffer.c	FUNCTION_52	CALL_1
0x4009d8a	      0xe800000000	                          call 0x4009d8f	      3265	buffer.c	FUNCTION_52	CALL_1
0x4009d8f	          0x4885c0	                           test rax, rax	      3266	buffer.c	FUNCTION_52	IF_1
0x4009d92	            0x740c	                            je 0x4009da0	      3266	buffer.c	FUNCTION_52	IF_1
0x4009d94	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3267	buffer.c	FUNCTION_52	IF_1
0x4009d9a	        0x4883c408	                              add rsp, 8	      3269	buffer.c	FUNCTION_52
0x4009d9e	              0xc3	                                     ret	      3269	buffer.c	FUNCTION_52
0x4009d9f	              0x90	                                     nop	      3269	buffer.c	FUNCTION_52
0x4009da0	            0x31c0	                            xor eax, eax	      3268	buffer.c	FUNCTION_52
0x4009da2	        0x4883c408	                              add rsp, 8	      3269	buffer.c	FUNCTION_52
0x4009da6	              0xc3	                                     ret	      3269	buffer.c	FUNCTION_52
do_buffer	IF,62:WHILE,5:DO,1:SWITCH,1:CALL,44:FOR,1:functions,0:ELSE,10	536
0x4008060	            0x4157	                                push r15	      1270	buffer.c	FUNCTION_19
0x4008062	            0x4156	                                push r14	      1270	buffer.c	FUNCTION_19
0x4008064	          0x4189fe	                           mov r14d, edi	      1270	buffer.c	FUNCTION_19
0x4008067	            0x4155	                                push r13	      1270	buffer.c	FUNCTION_19
0x4008069	            0x4154	                                push r12	      1270	buffer.c	FUNCTION_19
0x400806b	          0x4189d5	                           mov r13d, edx	      1270	buffer.c	FUNCTION_19
0x400806e	              0x55	                                push rbp	      1270	buffer.c	FUNCTION_19
0x400806f	              0x53	                                push rbx	      1270	buffer.c	FUNCTION_19
0x4008070	        0x448d67fe	                     lea r12d, [rdi - 2]	      1274	buffer.c	FUNCTION_19
0x4008074	        0x4883ec18	                           sub rsp, 0x18	      1270	buffer.c	FUNCTION_19
0x4008078	          0x83fe01	                              cmp esi, 1	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x400807b	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1270	buffer.c	FUNCTION_19
0x4008080	     0xf8492020000	                            je 0x4008318	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x4008086	          0x83fe02	                              cmp esi, 2	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x4008089	            0x7565	                           jne 0x40080f0	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x400808b	    0x488b15000000	            mov rdx, qword [0x04008092] 	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x4008092	          0x4989d7	                            mov r15, rdx	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x4008095	    0x488b3d000000	            mov rdi, qword [0x0400809c] 	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x400809c	            0x31c0	                            xor eax, eax	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x400809e	            0xeb2b	                           jmp 0x40080cb	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x40080a0	        0x4d8b7f70	            mov r15, qword [r15 + 0x70] 	      1322	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3
0x40080a4	          0x4d85ff	                           test r15, r15	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x40080a7	        0x4c0f44fa	                          cmove r15, rdx	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x40080ab	        0x4183fc02	                             cmp r12d, 2	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40080af	            0x760c	                           jbe 0x40080bd	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40080b1	    0x458b8f241400	          mov r9d, dword [r15 + 0x1424] 	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40080b8	          0x4585c9	                           test r9d, r9d	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40080bb	            0x7405	                            je 0x40080c2	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40080bd	          0x83e901	                              sub ecx, 1	      1329	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40080c0	            0x31c0	                            xor eax, eax	      1330	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x40080c2	          0x4939c7	                            cmp r15, rax	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x40080c5	     0xf84d7020000	                            je 0x40083a2	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x40080cb	            0x85c9	                           test ecx, ecx	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x40080cd	     0xf8e95010000	                           jle 0x4008268	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x40080d3	          0x4885c0	                           test rax, rax	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x40080d6	        0x490f44c7	                          cmove rax, r15	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x40080da	        0x4183fd01	                             cmp r13d, 1	      1314	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x40080de	            0x75c0	                           jne 0x40080a0	      1314	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x40080e0	        0x4d8b7f68	            mov r15, qword [r15 + 0x68] 	      1316	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x40080e4	          0x4d85ff	                           test r15, r15	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x40080e7	        0x4c0f44ff	                          cmove r15, rdi	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x40080eb	            0xebbe	                           jmp 0x40080ab	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x40080ed	           0xf1f00	                         nop dword [rax]	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x40080f0	          0x83fe03	                              cmp esi, 3	      1282	buffer.c	FUNCTION_19	IF_1
0x40080f3	    0x4c8b3d000000	            mov r15, qword [0x040080fa] 	      1280	buffer.c	FUNCTION_19	SWITCH_1
0x40080fa	     0xf851f020000	                           jne 0x400831f	      1282	buffer.c	FUNCTION_19	IF_1
0x4008100	            0x89cd	                            mov ebp, ecx	      1282	buffer.c	FUNCTION_19	IF_1
0x4008102	            0x85ed	                           test ebp, ebp	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4008104	            0x7e44	                           jle 0x400814a	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4008106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4008110	          0x4c89fb	                            mov rbx, r15	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4008113	            0xeb13	                           jmp 0x4008128	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4008115	           0xf1f00	                         nop dword [rax]	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4008118	          0x4889df	                            mov rdi, rbx	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x400811b	      0xe800000000	                          call 0x4008120	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4008120	            0x85c0	                           test eax, eax	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4008122	     0xf85e0010000	                           jne 0x4008308	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4008128	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      1288	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1
0x400812c	    0x4c8b3d000000	            mov r15, qword [0x04008133] 	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4008133	          0x4885db	                           test rbx, rbx	      1290	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x4008136	    0x480f441d0000	           cmove rbx, qword [0x0400813e]	      1290	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x400813e	          0x4c39fb	                            cmp rbx, r15	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4008141	            0x75d5	                           jne 0x4008118	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4008143	          0x83ed01	                              sub ebp, 1	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x4008146	            0x85ed	                           test ebp, ebp	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x4008148	            0x7fc6	                            jg 0x4008110	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x400814a	          0x4c89ff	                            mov rdi, r15	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x400814d	      0xe800000000	                          call 0x4008152	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4008152	            0x85c0	                           test eax, eax	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4008154	            0x89c5	                            mov ebp, eax	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x4008156	     0xf84f8040000	                            je 0x4008654	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x400815c	          0x4d85ff	                           test r15, r15	      1341	buffer.c	FUNCTION_19	IF_11
0x400815f	     0xf84ff010000	                            je 0x4008364	      1341	buffer.c	FUNCTION_19	IF_11
0x4008165	        0x4183fc02	                             cmp r12d, 2	      1363	buffer.c	FUNCTION_19	IF_15
0x4008169	    0xc70500000000	               mov dword [0x04008173], 1	      1357	buffer.c	FUNCTION_19
0x4008173	     0xf871f010000	                            ja 0x4008298	      1363	buffer.c	FUNCTION_19	IF_15
0x4008179	    0x418baf800000	            mov ebp, dword [r15 + 0x80] 	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x4008180	      0xba05000000	                              mov edx, 5	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x4008185	      0xbe00000000	                              mov esi, 0	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x400818a	            0x85ed	                           test ebp, ebp	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x400818c	     0xf85ee010000	                           jne 0x4008380	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x4008192	        0x4183fe04	                             cmp r14d, 4	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x4008196	    0x458ba7b80000	           mov r12d, dword [r15 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x400819d	    0x8b1d00000000	            mov ebx, dword [0x040081a3] 	       363	buffer.c	FUNCTION_3
0x40081a3	            0x740b	                            je 0x40081b0	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x40081a5	      0x49837f0800	                  cmp qword [r15 + 8], 0	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x40081aa	     0xf8416050000	                            je 0x40086c6	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x40081b0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x40081b4	            0x85c0	                           test eax, eax	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x40081b6	     0xf847b020000	                            je 0x4008437	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x40081bc	    0x488b15000000	            mov rdx, qword [0x040081c3] 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x40081c3	          0x4939d7	                            cmp r15, rdx	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x40081c6	     0xf847c050000	                            je 0x4008748	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x40081cc	    0x488b05000000	            mov rax, qword [0x040081d3] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x40081d3	          0x4885c0	                           test rax, rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x40081d6	            0x7511	                           jne 0x40081e9	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x40081d8	            0xeb34	                           jmp 0x400820e	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x40081da	    0x660f1f440000	                    nop word [rax + rax]	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x40081e0	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x40081e4	          0x4885c0	                           test rax, rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x40081e7	            0x741c	                            je 0x4008205	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x40081e9	    0x8ba824140000	          mov ebp, dword [rax + 0x1424] 	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x40081ef	            0x85ed	                           test ebp, ebp	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x40081f1	            0x74ed	                            je 0x40081e0	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x40081f3	          0x4939c7	                            cmp r15, rax	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x40081f6	     0xf85db010000	                           jne 0x40083d7	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x40081fc	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008200	          0x4885c0	                           test rax, rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008203	            0x75e4	                           jne 0x40081e9	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008205	          0x4939d7	                            cmp r15, rdx	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x4008208	     0xf845d050000	                            je 0x400876b	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x400820e	            0x31f6	                            xor esi, esi	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x4008210	          0x4c89ff	                            mov rdi, r15	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x4008213	      0xe800000000	                          call 0x4008218	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x4008218	    0x4c3b3d000000	            cmp r15, qword [0x0400821f] 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x400821f	            0x743a	                            je 0x400825b	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4008221	    0x3b1d00000000	            cmp ebx, dword [0x04008227] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4008227	     0xf8406040000	                            je 0x4008633	       377	buffer.c	FUNCTION_4	CALL_1
0x400822d	    0x488b05000000	            mov rax, qword [0x04008234] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4008234	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4008237	            0x7510	                           jne 0x4008249	       392	buffer.c	FUNCTION_5	FOR_1
0x4008239	            0xeb20	                           jmp 0x400825b	       392	buffer.c	FUNCTION_5	FOR_1
0x400823b	       0xf1f440000	                   nop dword [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4008240	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4008244	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4008247	            0x7412	                            je 0x400825b	       392	buffer.c	FUNCTION_5	FOR_1
0x4008249	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400824c	            0x75f2	                           jne 0x4008240	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400824e	    0x453ba7b80000	           cmp r12d, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4008255	     0xf84d8030000	                            je 0x4008633	       378	buffer.c	FUNCTION_4
0x400825b	      0xbd01000000	                              mov ebp, 1	      1440	buffer.c	FUNCTION_19	IF_15	IF_26
0x4008260	      0xe92c010000	                           jmp 0x4008391	      1440	buffer.c	FUNCTION_19	IF_15	IF_26
0x4008265	           0xf1f00	                         nop dword [rax]	      1440	buffer.c	FUNCTION_19	IF_15	IF_26
0x4008268	        0x4183fc02	                             cmp r12d, 2	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x400826c	     0xf8600040000	                           jbe 0x4008672	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4008272	    0x458b87241400	          mov r8d, dword [r15 + 0x1424] 	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4008279	          0x4585c0	                           test r8d, r8d	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x400827c	            0x7509	                           jne 0x4008287	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x400827e	          0x4939c7	                            cmp r15, rax	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4008281	     0xf854cfeffff	                           jne 0x40080d3	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x4008287	    0xc70500000000	               mov dword [0x04008291], 1	      1357	buffer.c	FUNCTION_19
0x4008291	     0xf1f80000000	                         nop dword [rax]	      1357	buffer.c	FUNCTION_19
0x4008298	        0x4183fe01	                             cmp r14d, 1	      1550	buffer.c	FUNCTION_19	IF_52
0x400829c	     0xf8427030000	                            je 0x40085c9	      1550	buffer.c	FUNCTION_19	IF_52
0x40082a2	    0x488b3d000000	            mov rdi, qword [0x040082a9] 	      1565	buffer.c	FUNCTION_19	IF_56
0x40082a9	          0x4c39ff	                            cmp rdi, r15	      1565	buffer.c	FUNCTION_19	IF_56
0x40082ac	            0x74ad	                            je 0x400825b	      1565	buffer.c	FUNCTION_19	IF_56
0x40082ae	          0x4585f6	                         test r14d, r14d	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40082b1	     0xf8563010000	                           jne 0x400841a	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40082b7	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40082bb	      0xe800000000	                          call 0x40082c0	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40082c0	            0x85c0	                           test eax, eax	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40082c2	            0x89c5	                            mov ebp, eax	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40082c4	            0x7530	                           jne 0x40082f6	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x40082c6	    0x8b0d00000000	            mov ecx, dword [0x040082cc] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x40082cc	            0x85c9	                           test ecx, ecx	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x40082ce	     0xf84b6030000	                            je 0x400868a	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x40082d4	    0x8b0500000000	            mov eax, dword [0x040082da] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x40082da	            0x85c0	                           test eax, eax	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x40082dc	     0xf85f8030000	                           jne 0x40086da	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x40082e2	    0x488b3d000000	            mov rdi, qword [0x040082e9] 	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x40082e9	      0xe800000000	                          call 0x40082ee	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x40082ee	            0x85c0	                           test eax, eax	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x40082f0	     0xf8548040000	                           jne 0x400873e	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x40082f6	            0x31f6	                            xor esi, esi	      1593	buffer.c	FUNCTION_19	CALL_42
0x40082f8	          0x4c89ff	                            mov rdi, r15	      1593	buffer.c	FUNCTION_19	CALL_42
0x40082fb	      0xe800000000	                          call 0x4008300	      1593	buffer.c	FUNCTION_19	CALL_42
0x4008300	      0xe920010000	                           jmp 0x4008425	      1593	buffer.c	FUNCTION_19	CALL_42
0x4008305	           0xf1f00	                         nop dword [rax]	      1593	buffer.c	FUNCTION_19	CALL_42
0x4008308	          0x4989df	                            mov r15, rbx	      1593	buffer.c	FUNCTION_19	CALL_42
0x400830b	          0x83ed01	                              sub ebp, 1	      1593	buffer.c	FUNCTION_19	CALL_42
0x400830e	      0xe933feffff	                           jmp 0x4008146	      1593	buffer.c	FUNCTION_19	CALL_42
0x4008313	       0xf1f440000	                   nop dword [rax + rax]	      1593	buffer.c	FUNCTION_19	CALL_42
0x4008318	    0x4c8b3d000000	            mov r15, qword [0x0400831f] 	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x400831f	          0x83fe01	                              cmp esi, 1	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4008322	     0xf857e040000	                           jne 0x40087a6	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4008328	            0x85c9	                           test ecx, ecx	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x400832a	     0xf8476040000	                            je 0x40087a6	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x4008330	          0x4d85ff	                           test r15, r15	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4008333	            0x7518	                           jne 0x400834d	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4008335	      0xe97e020000	                           jmp 0x40085b8	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x400833a	    0x660f1f440000	                    nop word [rax + rax]	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4008340	        0x4d8b7f68	            mov r15, qword [r15 + 0x68] 	      1303	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4008344	          0x4d85ff	                           test r15, r15	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4008347	     0xf846b020000	                            je 0x40085b8	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x400834d	    0x413b8fb80000	            cmp ecx, dword [r15 + 0xb8] 	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4008354	            0x75ea	                           jne 0x4008340	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x4008356	      0xe90afeffff	                           jmp 0x4008165	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x400835b	          0x83fe01	                              cmp esi, 1	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x400835e	     0xf845e020000	                            je 0x40085c2	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x4008364	        0x4183fd01	                             cmp r13d, 1	      1349	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4008368	      0xba05000000	                              mov edx, 5	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x400836d	      0xbe00000000	                              mov esi, 0	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x4008372	            0x750c	                           jne 0x4008380	      1349	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4008374	      0xbe00000000	                              mov esi, 0	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4008379	     0xf1f80000000	                         nop dword [rax]	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4008380	            0x31ff	                            xor edi, edi	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4008382	            0x31ed	                            xor ebp, ebp	      1353	buffer.c	FUNCTION_19	IF_11
0x4008384	      0xe800000000	                          call 0x4008389	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4008389	          0x4889c7	                            mov rdi, rax	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x400838c	      0xe800000000	                          call 0x4008391	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x4008391	        0x4883c418	                           add rsp, 0x18	      1606	buffer.c	FUNCTION_19
0x4008395	            0x89e8	                            mov eax, ebp	      1606	buffer.c	FUNCTION_19
0x4008397	              0x5b	                                 pop rbx	      1606	buffer.c	FUNCTION_19
0x4008398	              0x5d	                                 pop rbp	      1606	buffer.c	FUNCTION_19
0x4008399	            0x415c	                                 pop r12	      1606	buffer.c	FUNCTION_19
0x400839b	            0x415d	                                 pop r13	      1606	buffer.c	FUNCTION_19
0x400839d	            0x415e	                                 pop r14	      1606	buffer.c	FUNCTION_19
0x400839f	            0x415f	                                 pop r15	      1606	buffer.c	FUNCTION_19
0x40083a1	              0xc3	                                     ret	      1606	buffer.c	FUNCTION_19
0x40083a2	      0xba05000000	                              mov edx, 5	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x40083a7	      0xbe00000000	                              mov esi, 0	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x40083ac	            0xebd2	                           jmp 0x4008380	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x40083ae	            0x6690	                                     nop	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x40083b0	    0x488b05000000	            mov rax, qword [0x040083b7] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083b7	        0x48833800	                      cmp qword [rax], 0	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083bb	     0xf84dd000000	                            je 0x400849e	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083c1	            0x31f6	                            xor esi, esi	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40083c3	      0xe800000000	                          call 0x40083c8	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40083c8	            0x85c0	                           test eax, eax	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40083ca	     0xf84c1000000	                            je 0x4008491	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40083d0	    0x488b15000000	            mov rdx, qword [0x040083d7] 	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x40083d7	          0x4939d7	                            cmp r15, rdx	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083da	     0xf852efeffff	                           jne 0x400820e	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083e0	    0x488b3d000000	            mov rdi, qword [0x040083e7] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083e7	        0x448b5f28	           mov r11d, dword [rdi + 0x28] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083eb	          0x4585db	                         test r11d, r11d	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083ee	     0xf85aa000000	                           jne 0x400849e	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083f4	        0x488b4708	                mov rax, qword [rdi + 8]	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083f8	    0x448b90800000	           mov r10d, dword [rax + 0x80] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x40083ff	          0x4585d2	                         test r10d, r10d	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4008402	     0xf8f96000000	                            jg 0x400849e	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4008408	    0x488b05000000	            mov rax, qword [0x0400840f] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x400840f	    0x483905000000	            cmp qword [0x04008416], rax 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4008416	            0x75a9	                           jne 0x40083c1	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x4008418	            0xeb96	                           jmp 0x40083b0	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x400841a	          0x4489f6	                           mov esi, r14d	      1593	buffer.c	FUNCTION_19	CALL_42
0x400841d	          0x4c89ff	                            mov rdi, r15	      1593	buffer.c	FUNCTION_19	CALL_42
0x4008420	      0xe800000000	                          call 0x4008425	      1593	buffer.c	FUNCTION_19	CALL_42
0x4008425	            0x31ed	                            xor ebp, ebp	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4008427	      0xe800000000	                          call 0x400842c	      1601	buffer.c	FUNCTION_19	IF_62	CALL_44
0x400842c	            0x85c0	                           test eax, eax	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x400842e	        0x400f94c5	                                sete bpl	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4008432	      0xe95affffff	                           jmp 0x4008391	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4008437	          0x4c89ff	                            mov rdi, r15	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400843a	      0xe800000000	                          call 0x400843f	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x400843f	            0x85c0	                           test eax, eax	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x4008441	     0xf8475fdffff	                            je 0x40081bc	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x4008447	    0x8b0500000000	            mov eax, dword [0x0400844d] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x400844d	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x400844f	            0x750a	                           jne 0x400845b	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x4008451	    0x8b0500000000	            mov eax, dword [0x04008457] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x4008457	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x4008459	            0x740e	                            je 0x4008469	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x400845b	    0x8b0500000000	            mov eax, dword [0x04008461] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x4008461	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x4008463	     0xf852f040000	                           jne 0x4008898	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x4008469	    0x49639fb80000	         movsxd rbx, dword [r15 + 0xb8] 	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4008470	            0x31ff	                            xor edi, edi	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4008472	      0xba05000000	                              mov edx, 5	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4008477	      0xbe00000000	                              mov esi, 0	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x400847c	      0xe800000000	                          call 0x4008481	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4008481	          0x4889c7	                            mov rdi, rax	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4008484	          0x4889de	                            mov rsi, rbx	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x4008487	      0xe800000000	                          call 0x400848c	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x400848c	      0xe900ffffff	                           jmp 0x4008391	      1401	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6
0x4008491	    0x4c3b3d000000	            cmp r15, qword [0x04008498] 	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x4008498	     0xf8570fdffff	                           jne 0x400820e	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x400849e	    0x4c8b3d000000	            mov r15, qword [0x040084a5] 	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40084a5	          0x4d85ff	                           test r15, r15	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40084a8	            0x7447	                            je 0x40084f1	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x40084aa	    0x8b0500000000	            mov eax, dword [0x040084b0] 	       377	buffer.c	FUNCTION_4	CALL_1
0x40084b0	    0x390500000000	            cmp dword [0x040084b6], eax 	       377	buffer.c	FUNCTION_4	CALL_1
0x40084b6	     0xf84dcfdffff	                            je 0x4008298	       377	buffer.c	FUNCTION_4	CALL_1
0x40084bc	    0x488b05000000	            mov rax, qword [0x040084c3] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40084c3	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40084c6	            0x7511	                           jne 0x40084d9	       392	buffer.c	FUNCTION_5	FOR_1
0x40084c8	            0xeb27	                           jmp 0x40084f1	       392	buffer.c	FUNCTION_5	FOR_1
0x40084ca	    0x660f1f440000	                    nop word [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x40084d0	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40084d4	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40084d7	            0x7418	                            je 0x40084f1	       392	buffer.c	FUNCTION_5	FOR_1
0x40084d9	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40084dc	            0x75f2	                           jne 0x40084d0	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40084de	    0x418b87b80000	            mov eax, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x40084e5	    0x390500000000	            cmp dword [0x040084eb], eax 	       378	buffer.c	FUNCTION_4
0x40084eb	     0xf84a7fdffff	                            je 0x4008298	       378	buffer.c	FUNCTION_4
0x40084f1	    0x488b05000000	            mov rax, qword [0x040084f8] 	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40084f8	    0x8b8840150000	          mov ecx, dword [rax + 0x1540] 	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x40084fe	            0x85c9	                           test ecx, ecx	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x4008500	     0xf8eac020000	                           jle 0x40087b2	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x4008506	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x400850c	          0x83e901	                              sub ecx, 1	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x400850f	            0x89d5	                            mov ebp, edx	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4008511	          0x83ed01	                              sub ebp, 1	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4008514	           0xf48e9	                          cmovs ebp, ecx	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x4008517	          0x4531e4	                          xor r12d, r12d	      1454	buffer.c	FUNCTION_19	IF_15
0x400851a	            0x89eb	                            mov ebx, ebp	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x400851c	            0xeb31	                           jmp 0x400854f	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x400851e	    0x488b05000000	            mov rax, qword [0x04008525] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x4008525	    0x8b9840150000	          mov ebx, dword [rax + 0x1540] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x400852b	    0x399844150000	          cmp dword [rax + 0x1544], ebx 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x4008531	     0xf847e020000	                            je 0x40087b5	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x4008537	          0x83eb01	                              sub ebx, 1	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x400853a	            0x39dd	                            cmp ebp, ebx	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x400853c	     0xf8473020000	                            je 0x40087b5	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x4008542	    0x488b05000000	            mov rax, qword [0x04008549] 	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x4008549	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x400854f	            0x39d3	                            cmp ebx, edx	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x4008551	     0xf845e020000	                            je 0x40087b5	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x4008557	          0x4863d3	                         movsxd rdx, ebx	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400855a	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400855e	    0x8bbcd0b00500	   mov edi, dword [rax + rdx*8 + 0x5b0] 	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4008565	      0xe800000000	                          call 0x400856a	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x400856a	          0x4885c0	                           test rax, rax	      1470	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31
0x400856d	          0x4989c7	                            mov r15, rax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x4008570	            0x7427	                            je 0x4008599	      1470	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31
0x4008572	    0x483b05000000	            cmp rax, qword [0x04008579] 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4008579	            0x741e	                            je 0x4008599	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x400857b	    0x448b80241400	          mov r8d, dword [rax + 0x1424] 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4008582	          0x4585c0	                           test r8d, r8d	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4008585	            0x7412	                            je 0x4008599	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x4008587	      0x4883780800	                  cmp qword [rax + 8], 0	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x400858c	     0xf8506fdffff	                           jne 0x4008298	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x4008592	          0x4d85e4	                           test r12, r12	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x4008595	        0x4c0f44e0	                          cmove r12, rax	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x4008599	            0x85db	                           test ebx, ebx	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x400859b	            0x7481	                            je 0x400851e	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x400859d	          0x83eb01	                              sub ebx, 1	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40085a0	            0x7998	                           jns 0x400853a	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40085a2	    0x488b05000000	            mov rax, qword [0x040085a9] 	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40085a9	    0x8b9840150000	          mov ebx, dword [rax + 0x1540] 	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40085af	            0xeb86	                           jmp 0x4008537	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40085b1	     0xf1f80000000	                         nop dword [rax]	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x40085b8	        0x4183fc02	                             cmp r12d, 2	      1346	buffer.c	FUNCTION_19	IF_11	IF_12	IF_13
0x40085bc	     0xf87db000000	                            ja 0x400869d	      1346	buffer.c	FUNCTION_19	IF_11	IF_12	IF_13
0x40085c2	            0x31ed	                            xor ebp, ebp	      1353	buffer.c	FUNCTION_19	IF_11
0x40085c4	      0xe9c8fdffff	                           jmp 0x4008391	      1353	buffer.c	FUNCTION_19	IF_11
0x40085c9	    0x8b0500000000	            mov eax, dword [0x040085cf] 	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x40085cf	            0xa801	                              test al, 1	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x40085d1	     0xf85b3010000	                           jne 0x400878a	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x40085d7	            0xa802	                              test al, 2	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40085d9	            0x7411	                            je 0x40085ec	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40085db	          0x4c89ff	                            mov rdi, r15	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40085de	      0xe800000000	                          call 0x40085e3	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40085e3	          0x4885c0	                           test rax, rax	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40085e6	     0xf856ffcffff	                           jne 0x400825b	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x40085ec	            0x31f6	                            xor esi, esi	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40085ee	            0x31ff	                            xor edi, edi	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40085f0	      0xe800000000	                          call 0x40085f5	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40085f5	            0x85c0	                           test eax, eax	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40085f7	            0x74c9	                            je 0x40085c2	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x40085f9	    0x4c393d000000	            cmp qword [0x04008600], r15 	      1565	buffer.c	FUNCTION_19	IF_56
0x4008600	     0xf8455fcffff	                            je 0x400825b	      1565	buffer.c	FUNCTION_19	IF_56
0x4008606	      0xbe01000000	                              mov esi, 1	      1593	buffer.c	FUNCTION_19	CALL_42
0x400860b	          0x4c89ff	                            mov rdi, r15	      1593	buffer.c	FUNCTION_19	CALL_42
0x400860e	      0xe800000000	                          call 0x4008613	      1593	buffer.c	FUNCTION_19	CALL_42
0x4008613	    0x488b05000000	            mov rax, qword [0x0400861a] 	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x400861a	    0xc78088020000	              mov dword [rax + 0x288], 0	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x4008624	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x400862e	      0xe9f2fdffff	                           jmp 0x4008425	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x4008633	        0x458b4f78	            mov r9d, dword [r15 + 0x78] 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4008637	          0x4585c9	                           test r9d, r9d	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x400863a	     0xf8f1bfcffff	                            jg 0x400825b	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x4008640	            0x31c9	                            xor ecx, ecx	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4008642	          0x4489f2	                           mov edx, r14d	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4008645	          0x4c89fe	                            mov rsi, r15	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4008648	            0x31ff	                            xor edi, edi	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x400864a	      0xe800000000	                          call 0x400864f	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x400864f	      0xe907fcffff	                           jmp 0x400825b	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x4008654	            0x31ff	                            xor edi, edi	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4008656	      0xba05000000	                              mov edx, 5	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x400865b	      0xbe00000000	                              mov esi, 0	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4008660	      0xe800000000	                          call 0x4008665	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4008665	          0x4889c7	                            mov rdi, rax	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x4008668	      0xe800000000	                          call 0x400866d	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x400866d	      0xe91ffdffff	                           jmp 0x4008391	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x4008672	          0x4d85ff	                           test r15, r15	      1341	buffer.c	FUNCTION_19	IF_11
0x4008675	     0xf84e0fcffff	                            je 0x400835b	      1341	buffer.c	FUNCTION_19	IF_11
0x400867b	    0xc70500000000	               mov dword [0x04008685], 1	      1357	buffer.c	FUNCTION_19
0x4008685	      0xe9effaffff	                           jmp 0x4008179	      1357	buffer.c	FUNCTION_19
0x400868a	    0x8b1500000000	            mov edx, dword [0x04008690] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4008690	            0x85d2	                           test edx, edx	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4008692	     0xf853cfcffff	                           jne 0x40082d4	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x4008698	      0xe945fcffff	                           jmp 0x40082e2	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x400869d	      0xba05000000	                              mov edx, 5	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086a2	      0xbe00000000	                              mov esi, 0	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086a7	            0x31ff	                            xor edi, edi	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086a9	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086ad	            0x31ed	                            xor ebp, ebp	      1353	buffer.c	FUNCTION_19	IF_11
0x40086af	      0xe800000000	                          call 0x40086b4	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086b4	      0x486374240c	          movsxd rsi, dword [rsp + 0xc] 	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086b9	          0x4889c7	                            mov rdi, rax	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086bc	      0xe800000000	                          call 0x40086c1	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086c1	      0xe9cbfcffff	                           jmp 0x4008391	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x40086c6	    0x418b87241400	          mov eax, dword [r15 + 0x1424] 	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x40086cd	            0x85c0	                           test eax, eax	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x40086cf	     0xf85dbfaffff	                           jne 0x40081b0	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x40086d5	      0xe9e8feffff	                           jmp 0x40085c2	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x40086da	    0x488b3d000000	            mov rdi, qword [0x040086e1] 	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x40086e1	            0x31f6	                            xor esi, esi	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x40086e3	    0x448b25000000	           mov r12d, dword [0x040086ea] 	       363	buffer.c	FUNCTION_3
0x40086ea	    0x418b9fb80000	            mov ebx, dword [r15 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x40086f1	      0xe800000000	                          call 0x40086f6	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x40086f6	    0x443925000000	           cmp dword [0x040086fd], r12d 	       377	buffer.c	FUNCTION_4	CALL_1
0x40086fd	     0xf84dffbffff	                            je 0x40082e2	       377	buffer.c	FUNCTION_4	CALL_1
0x4008703	    0x488b05000000	            mov rax, qword [0x0400870a] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400870a	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400870d	            0x7516	                           jne 0x4008725	       392	buffer.c	FUNCTION_5	FOR_1
0x400870f	      0xe9aefeffff	                           jmp 0x40085c2	       392	buffer.c	FUNCTION_5	FOR_1
0x4008714	         0xf1f4000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4008718	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400871c	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400871f	     0xf849dfeffff	                            je 0x40085c2	       392	buffer.c	FUNCTION_5	FOR_1
0x4008725	          0x4c39f8	                            cmp rax, r15	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4008728	            0x75ee	                           jne 0x4008718	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400872a	    0x41399fb80000	            cmp dword [r15 + 0xb8], ebx 	       378	buffer.c	FUNCTION_4
0x4008731	     0xf84abfbffff	                            je 0x40082e2	       378	buffer.c	FUNCTION_4
0x4008737	            0x31ed	                            xor ebp, ebp	      1353	buffer.c	FUNCTION_19	IF_11
0x4008739	      0xe953fcffff	                           jmp 0x4008391	      1353	buffer.c	FUNCTION_19	IF_11
0x400873e	      0xe800000000	                          call 0x4008743	      1587	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_41
0x4008743	      0xe949fcffff	                           jmp 0x4008391	      1588	buffer.c	FUNCTION_19	IF_57	IF_60
0x4008748	    0x448b2d000000	           mov r13d, dword [0x0400874f] 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x400874f	          0x4585ed	                         test r13d, r13d	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x4008752	     0xf851a010000	                           jne 0x4008872	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x4008758	    0x488b05000000	            mov rax, qword [0x0400875f] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400875f	          0x4c89fa	                            mov rdx, r15	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008762	          0x4885c0	                           test rax, rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008765	     0xf857efaffff	                           jne 0x40081e9	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400876b	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x400876f	          0x4489f2	                           mov edx, r14d	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x4008772	      0xbf01000000	                              mov edi, 1	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x4008777	        0x4883c418	                           add rsp, 0x18	      1606	buffer.c	FUNCTION_19
0x400877b	              0x5b	                                 pop rbx	      1606	buffer.c	FUNCTION_19
0x400877c	              0x5d	                                 pop rbp	      1606	buffer.c	FUNCTION_19
0x400877d	            0x415c	                                 pop r12	      1606	buffer.c	FUNCTION_19
0x400877f	            0x415d	                                 pop r13	      1606	buffer.c	FUNCTION_19
0x4008781	            0x415e	                                 pop r14	      1606	buffer.c	FUNCTION_19
0x4008783	            0x415f	                                 pop r15	      1606	buffer.c	FUNCTION_19
0x4008785	      0xe946f4ffff	                    jmp sym.empty_curbuf	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x400878a	          0x4c89ff	                            mov rdi, r15	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x400878d	      0xe800000000	                          call 0x4008792	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4008792	          0x4885c0	                           test rax, rax	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x4008795	     0xf85c0faffff	                           jne 0x400825b	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x400879b	    0x8b0500000000	            mov eax, dword [0x040087a1] 	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x40087a1	      0xe931feffff	                           jmp 0x40085d7	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x40087a6	    0x488b15000000	            mov rdx, qword [0x040087ad] 	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x40087ad	      0xe9e3f8ffff	                           jmp 0x4008095	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x40087b2	          0x4531e4	                          xor r12d, r12d	      1454	buffer.c	FUNCTION_19	IF_15
0x40087b5	    0x488b15000000	            mov rdx, qword [0x040087bc] 	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x40087bc	      0xb901000000	                              mov ecx, 1	      1497	buffer.c	FUNCTION_19	IF_15	IF_39
0x40087c1	        0x4c8b7a68	            mov r15, qword [rdx + 0x68] 	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x40087c5	          0x4c89f8	                            mov rax, r15	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x40087c8	          0x4885c0	                           test rax, rax	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x40087cb	            0x7420	                            je 0x40087ed	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x40087cd	    0x8bb258170000	          mov esi, dword [rdx + 0x1758] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x40087d3	    0x39b058170000	          cmp dword [rax + 0x1758], esi 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x40087d9	            0x7424	                            je 0x40087ff	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x40087db	            0x85c9	                           test ecx, ecx	      1517	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x40087dd	            0x741a	                            je 0x40087f9	      1517	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x40087df	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x40087e3	      0xb901000000	                              mov ecx, 1	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x40087e8	          0x4885c0	                           test rax, rax	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x40087eb	            0x75e0	                           jne 0x40087cd	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x40087ed	            0x85c9	                           test ecx, ecx	      1503	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x40087ef	            0x742c	                            je 0x400881d	      1503	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x40087f1	        0x488b4270	            mov rax, qword [rdx + 0x70] 	      1505	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x40087f5	            0x31c9	                            xor ecx, ecx	      1506	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x40087f7	            0xebcf	                           jmp 0x40087c8	      1507	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x40087f9	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x40087fd	            0xebc9	                           jmp 0x40087c8	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x40087ff	    0x8bb824140000	          mov edi, dword [rax + 0x1424] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4008805	            0x85ff	                           test edi, edi	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4008807	            0x74d2	                            je 0x40087db	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x4008809	      0x4883780800	                  cmp qword [rax + 8], 0	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x400880e	     0xf85ec000000	                           jne 0x4008900	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x4008814	          0x4d85e4	                           test r12, r12	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x4008817	        0x4c0f44e0	                          cmove r12, rax	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x400881b	            0xebbe	                           jmp 0x40087db	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x400881d	          0x4d85e4	                           test r12, r12	      1525	buffer.c	FUNCTION_19	IF_15	IF_47
0x4008820	     0xf85e2000000	                           jne 0x4008908	      1525	buffer.c	FUNCTION_19	IF_15	IF_47
0x4008826	    0x488b05000000	            mov rax, qword [0x0400882d] 	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x400882d	          0x4885c0	                           test rax, rax	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4008830	            0x741c	                            je 0x400884e	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4008832	    0x8bb024140000	          mov esi, dword [rax + 0x1424] 	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x4008838	            0x85f6	                           test esi, esi	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x400883a	            0x7409	                            je 0x4008845	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x400883c	          0x4839c2	                            cmp rdx, rax	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x400883f	     0xf85bb000000	                           jne 0x4008900	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x4008845	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x4008849	          0x4885c0	                           test rax, rax	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x400884c	            0x75e4	                           jne 0x4008832	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x400884e	          0x4d85ff	                           test r15, r15	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4008851	     0xf8541faffff	                           jne 0x4008298	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x4008857	        0x4c8b7a70	            mov r15, qword [rdx + 0x70] 	      1536	buffer.c	FUNCTION_19	IF_15	IF_49	ELSE_10
0x400885b	          0x4d85ff	                           test r15, r15	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x400885e	     0xf8534faffff	                           jne 0x4008298	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x4008864	          0x4489f2	                           mov edx, r14d	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4008867	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x400886b	            0x31ff	                            xor edi, edi	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x400886d	      0xe905ffffff	                           jmp 0x4008777	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x4008872	      0xe800000000	                          call 0x4008877	      1407	buffer.c	FUNCTION_19	IF_15	CALL_22
0x4008877	    0x488b05000000	            mov rax, qword [0x0400887e] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400887e	    0x488b15000000	            mov rdx, qword [0x04008885] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008885	          0x4885c0	                           test rax, rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008888	     0xf855bf9ffff	                           jne 0x40081e9	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x400888e	      0xe972f9ffff	                           jmp 0x4008205	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008893	       0xf1f440000	                   nop dword [rax + rax]	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x4008898	            0x31f6	                            xor esi, esi	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x400889a	          0x4c89ff	                            mov rdi, r15	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x400889d	      0xe800000000	                          call 0x40088a2	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x40088a2	    0x391d00000000	            cmp dword [0x040088a8], ebx 	       377	buffer.c	FUNCTION_4	CALL_1
0x40088a8	            0x7435	                            je 0x40088df	       377	buffer.c	FUNCTION_4	CALL_1
0x40088aa	    0x488b05000000	            mov rax, qword [0x040088b1] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40088b1	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40088b4	            0x7517	                           jne 0x40088cd	       392	buffer.c	FUNCTION_5	FOR_1
0x40088b6	      0xe907fdffff	                           jmp 0x40085c2	       392	buffer.c	FUNCTION_5	FOR_1
0x40088bb	       0xf1f440000	                   nop dword [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x40088c0	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40088c4	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40088c7	     0xf84f5fcffff	                            je 0x40085c2	       392	buffer.c	FUNCTION_5	FOR_1
0x40088cd	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40088d0	            0x75ee	                           jne 0x40088c0	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40088d2	    0x453ba7b80000	           cmp r12d, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x40088d9	     0xf85e3fcffff	                           jne 0x40085c2	       378	buffer.c	FUNCTION_4
0x40088df	          0x4c89ff	                            mov rdi, r15	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40088e2	      0xe800000000	                          call 0x40088e7	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40088e7	            0x85c0	                           test eax, eax	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40088e9	     0xf84cdf8ffff	                            je 0x40081bc	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x40088ef	            0x31ed	                            xor ebp, ebp	      1353	buffer.c	FUNCTION_19	IF_11
0x40088f1	      0xe99bfaffff	                           jmp 0x4008391	      1353	buffer.c	FUNCTION_19	IF_11
0x40088f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1353	buffer.c	FUNCTION_19	IF_11
0x4008900	          0x4989c7	                            mov r15, rax	      1353	buffer.c	FUNCTION_19	IF_11
0x4008903	      0xe990f9ffff	                           jmp 0x4008298	      1353	buffer.c	FUNCTION_19	IF_11
0x4008908	          0x4d89e7	                            mov r15, r12	      1353	buffer.c	FUNCTION_19	IF_11
0x400890b	      0xe988f9ffff	                           jmp 0x4008298	      1353	buffer.c	FUNCTION_19	IF_11
wipe_buffer	IF,3:WHILE,0:DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:ELSE,0	25
0x400a170	    0x8b0500000000	            mov eax, dword [0x0400a176] 	      6229	buffer.c	FUNCTION_103	IF_1
0x400a176	    0x8b97b8000000	            mov edx, dword [rdi + 0xb8] 	      6229	buffer.c	FUNCTION_103	IF_1
0x400a17c	          0x83e801	                              sub eax, 1	      6229	buffer.c	FUNCTION_103	IF_1
0x400a17f	            0x39c2	                            cmp edx, eax	      6229	buffer.c	FUNCTION_103	IF_1
0x400a181	            0x743d	                            je 0x400a1c0	      6229	buffer.c	FUNCTION_103	IF_1
0x400a183	            0x85f6	                           test esi, esi	      6232	buffer.c	FUNCTION_103	IF_2
0x400a185	            0x7419	                            je 0x400a1a0	      6232	buffer.c	FUNCTION_103	IF_2
0x400a187	          0x4889fe	                            mov rsi, rdi	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a18a	            0x31c9	                            xor ecx, ecx	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a18c	      0xba04000000	                              mov edx, 4	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a191	            0x31ff	                            xor edi, edi	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a193	      0xe938cbffff	                    jmp sym.close_buffer	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a198	     0xf1f84000000	                   nop dword [rax + rax]	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a1a0	              0x53	                                push rbx	      6228	buffer.c	FUNCTION_103
0x400a1a1	          0x4889fb	                            mov rbx, rdi	      6228	buffer.c	FUNCTION_103
0x400a1a4	      0xe800000000	                          call 0x400a1a9	      6233	buffer.c	FUNCTION_103	CALL_1
0x400a1a9	          0x4889de	                            mov rsi, rbx	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a1ac	            0x31c9	                            xor ecx, ecx	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a1ae	      0xba04000000	                              mov edx, 4	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a1b3	            0x31ff	                            xor edi, edi	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a1b5	      0xe800000000	                          call 0x400a1ba	      6235	buffer.c	FUNCTION_103	CALL_2
0x400a1ba	              0x5b	                                 pop rbx	      6239	buffer.c	FUNCTION_103
0x400a1bb	      0xe900000000	                           jmp 0x400a1c0	      6238	buffer.c	FUNCTION_103	CALL_3
0x400a1c0	    0x891500000000	            mov dword [0x0400a1c6], edx 	      6230	buffer.c	FUNCTION_103	IF_1
0x400a1c6	            0xebbb	                           jmp 0x400a183	      6230	buffer.c	FUNCTION_103	IF_1
init_changedtick	IF,0:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0	10
0x40001b0	    0x48b86368616e	          movabs rax, 0x746465676e616863	       110	string3.h	FUNCTION_127	CALL_3
0x40001ba	    0xc687e0000000	                mov byte [rdi + 0xe0], 5	       878	buffer.c	FUNCTION_12
0x40001c1	    0xc787d0000000	               mov dword [rdi + 0xd0], 1	       879	buffer.c	FUNCTION_12
0x40001cb	    0xc687d4000000	                mov byte [rdi + 0xd4], 2	       880	buffer.c	FUNCTION_12
0x40001d2	    0x48c787d80000	               mov qword [rdi + 0xd8], 0	       881	buffer.c	FUNCTION_12
0x40001dd	    0x488db7d00000	                   lea rsi, [rdi + 0xd0]	       876	buffer.c	FUNCTION_12
0x40001e4	    0x488987e10000	             mov qword [rdi + 0xe1], rax	       110	string3.h	FUNCTION_127	CALL_3
0x40001eb	    0xc787e9000000	       mov dword [rdi + 0xe9], 0x6b6369 	       110	string3.h	FUNCTION_127	CALL_3
0x40001f5	    0x488bbf301700	          mov rdi, qword [rdi + 0x1730] 	       885	buffer.c	FUNCTION_12	CALL_2
0x40001fc	      0xe900000000	                           jmp 0x4000201	       885	buffer.c	FUNCTION_12	CALL_2
ExpandBufnames	IF,11:WHILE,0:DO,0:SWITCH,0:CALL,11:FOR,2:functions,1:ELSE,1	160
0x4001620	            0x4157	                                push r15	      2558	buffer.c	FUNCTION_34
0x4001622	            0x4156	                                push r14	      2558	buffer.c	FUNCTION_34
0x4001624	          0x4889f8	                            mov rax, rdi	      2558	buffer.c	FUNCTION_34
0x4001627	            0x4155	                                push r13	      2558	buffer.c	FUNCTION_34
0x4001629	            0x4154	                                push r12	      2558	buffer.c	FUNCTION_34
0x400162b	          0x4989d6	                            mov r14, rdx	      2558	buffer.c	FUNCTION_34
0x400162e	              0x55	                                push rbp	      2558	buffer.c	FUNCTION_34
0x400162f	              0x53	                                push rbx	      2558	buffer.c	FUNCTION_34
0x4001630	    0x4881ecf80000	                           sub rsp, 0xf8	      2558	buffer.c	FUNCTION_34
0x4001637	    0xc70600000000	                      mov dword [rsi], 0	      2566	buffer.c	FUNCTION_34
0x400163d	    0x48c702000000	                      mov qword [rdx], 0	      2567	buffer.c	FUNCTION_34
0x4001644	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      2558	buffer.c	FUNCTION_34
0x4001649	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2558	buffer.c	FUNCTION_34
0x400164e	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      2558	buffer.c	FUNCTION_34
0x4001657	    0x4889bc24e800	             mov qword [rsp + 0xe8], rdi	      2558	buffer.c	FUNCTION_34
0x400165f	            0x31ff	                            xor edi, edi	      2558	buffer.c	FUNCTION_34
0x4001661	          0x80385e	                    cmp byte [rax], 0x5e	      2570	buffer.c	FUNCTION_34	IF_1
0x4001664	      0x4889442410	             mov qword [rsp + 0x10], rax	      2570	buffer.c	FUNCTION_34	IF_1
0x4001669	     0xf84a4010000	                            je 0x4001813	      2570	buffer.c	FUNCTION_34	IF_1
0x400166f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2570	buffer.c	FUNCTION_34	IF_1
0x4001674	          0x83e102	                              and ecx, 2	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4001677	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x400167f	          0x4189cd	                           mov r13d, ecx	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4001682	      0x4889442418	             mov qword [rsp + 0x18], rax	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4001687	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x400168c	      0xbe01000000	                              mov esi, 1	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4001691	      0xe800000000	                          call 0x4001696	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4001696	          0x4885c0	                           test rax, rax	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4001699	      0x4889442430	             mov qword [rsp + 0x30], rax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x400169e	     0xf84e2010000	                            je 0x4001886	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40016a4	    0x4c8b3d000000	            mov r15, qword [0x040016ab] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016ab	      0xbd02000000	                              mov ebp, 2	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016b0	          0x4d85ff	                           test r15, r15	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016b3	     0xf849b000000	                            je 0x4001754	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016b9	            0x31db	                            xor ebx, ebx	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016bb	            0xeb0c	                           jmp 0x40016c9	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016bd	           0xf1f00	                         nop dword [rax]	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016c0	        0x4d8b7f68	            mov r15, qword [r15 + 0x68] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016c4	          0x4d85ff	                           test r15, r15	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016c7	            0x7462	                            je 0x400172b	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x40016c9	    0x418b87241400	          mov eax, dword [r15 + 0x1424] 	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x40016d0	            0x85c0	                           test eax, eax	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x40016d2	            0x74ec	                            je 0x40016c0	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x40016d4	    0x4c8b25000000	            mov r12, qword [0x040016db] 	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x40016db	    0x498bb7900000	            mov rsi, qword [r15 + 0x90] 	      2665	buffer.c	FUNCTION_35	CALL_1
0x40016e2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2665	buffer.c	FUNCTION_35	CALL_1
0x40016e7	          0x4489e2	                           mov edx, r12d	      2665	buffer.c	FUNCTION_35	CALL_1
0x40016ea	      0xe801f2ffff	                    call sym.fname_match	      2665	buffer.c	FUNCTION_35	CALL_1
0x40016ef	          0x4885c0	                           test rax, rax	      2666	buffer.c	FUNCTION_35	IF_1
0x40016f2	     0xf84d8000000	                            je 0x40017d0	      2666	buffer.c	FUNCTION_35	IF_1
0x40016f8	          0x83fd02	                              cmp ebp, 2	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x40016fb	     0xf84b7010000	                            je 0x40018b8	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4001701	          0x4585ed	                         test r13d, r13d	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4001704	     0xf84b6000000	                            je 0x40017c0	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x400170a	          0x4889c6	                            mov rsi, rax	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x400170d	          0x4c89ff	                            mov rdi, r15	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4001710	      0xe800000000	                          call 0x4001715	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4001715	          0x498b16	                    mov rdx, qword [r14]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4001718	          0x4863f3	                         movsxd rsi, ebx	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x400171b	          0x83c301	                              add ebx, 1	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x400171e	        0x488904f2	            mov qword [rdx + rsi*8], rax	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4001722	        0x4d8b7f68	            mov r15, qword [r15 + 0x68] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4001726	          0x4d85ff	                           test r15, r15	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4001729	            0x759e	                           jne 0x40016c9	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x400172b	            0x85db	                           test ebx, ebx	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x400172d	            0x7425	                            je 0x4001754	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x400172f	          0x83fd02	                              cmp ebp, 2	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x4001732	     0xf842c010000	                            je 0x4001864	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x4001738	          0x83fd03	                              cmp ebp, 3	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x400173b	     0xf8463010000	                            je 0x40018a4	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4001741	    0x4c8b3d000000	            mov r15, qword [0x04001748] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4001748	          0x83c501	                              add ebp, 1	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x400174b	          0x4d85ff	                           test r15, r15	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x400174e	     0xf8565ffffff	                           jne 0x40016b9	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4001754	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4001759	      0xe800000000	                          call 0x400175e	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x400175e	      0x8344240c01	                add dword [rsp + 0xc], 1	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4001763	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4001767	          0x83f802	                              cmp eax, 2	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x400176a	     0xf8588000000	                           jne 0x40017f8	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4001770	            0x31ed	                            xor ebp, ebp	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4001772	            0x31db	                            xor ebx, ebx	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4001774	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2644	buffer.c	FUNCTION_34	IF_11
0x4001779	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2644	buffer.c	FUNCTION_34	IF_11
0x400177e	          0x4839c8	                            cmp rax, rcx	      2644	buffer.c	FUNCTION_34	IF_11
0x4001781	            0x7408	                            je 0x400178b	      2644	buffer.c	FUNCTION_34	IF_11
0x4001783	          0x4889c7	                            mov rdi, rax	      2645	buffer.c	FUNCTION_34	CALL_11
0x4001786	      0xe800000000	                          call 0x400178b	      2645	buffer.c	FUNCTION_34	CALL_11
0x400178b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2647	buffer.c	FUNCTION_34
0x4001790	            0x8918	                    mov dword [rax], ebx	      2647	buffer.c	FUNCTION_34
0x4001792	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      2649	buffer.c	FUNCTION_34
0x400179a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2649	buffer.c	FUNCTION_34
0x40017a3	            0x89e8	                            mov eax, ebp	      2649	buffer.c	FUNCTION_34
0x40017a5	     0xf8515010000	                           jne 0x40018c0	      2649	buffer.c	FUNCTION_34
0x40017ab	    0x4881c4f80000	                           add rsp, 0xf8	      2649	buffer.c	FUNCTION_34
0x40017b2	              0x5b	                                 pop rbx	      2649	buffer.c	FUNCTION_34
0x40017b3	              0x5d	                                 pop rbp	      2649	buffer.c	FUNCTION_34
0x40017b4	            0x415c	                                 pop r12	      2649	buffer.c	FUNCTION_34
0x40017b6	            0x415d	                                 pop r13	      2649	buffer.c	FUNCTION_34
0x40017b8	            0x415e	                                 pop r14	      2649	buffer.c	FUNCTION_34
0x40017ba	            0x415f	                                 pop r15	      2649	buffer.c	FUNCTION_34
0x40017bc	              0xc3	                                     ret	      2649	buffer.c	FUNCTION_34
0x40017bd	           0xf1f00	                         nop dword [rax]	      2649	buffer.c	FUNCTION_34
0x40017c0	          0x4889c7	                            mov rdi, rax	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x40017c3	      0xe800000000	                          call 0x40017c8	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x40017c8	      0xe948ffffff	                           jmp 0x4001715	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x40017cd	           0xf1f00	                         nop dword [rax]	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x40017d0	    0x498bb7880000	            mov rsi, qword [r15 + 0x88] 	      2667	buffer.c	FUNCTION_35	CALL_2
0x40017d7	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2667	buffer.c	FUNCTION_35	CALL_2
0x40017dc	          0x4489e2	                           mov edx, r12d	      2667	buffer.c	FUNCTION_35	CALL_2
0x40017df	      0xe80cf1ffff	                    call sym.fname_match	      2667	buffer.c	FUNCTION_35	CALL_2
0x40017e4	          0x4885c0	                           test rax, rax	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40017e7	     0xf84d3feffff	                            je 0x40016c0	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40017ed	      0xe906ffffff	                           jmp 0x40016f8	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40017f2	    0x660f1f440000	                    nop word [rax + rax]	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40017f8	    0x48834424180b	             add qword [rsp + 0x18], 0xb	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x40017fe	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4001803	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4001808	     0xf8579feffff	                           jne 0x4001687	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x400180e	      0xe95dffffff	                           jmp 0x4001770	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4001813	          0x4889c7	                            mov rdi, rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001816	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x400181a	          0x4889c3	                            mov rbx, rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x400181d	      0xe800000000	                          call 0x4001822	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001822	          0x8d780b	                    lea edi, [rax + 0xb]	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001825	            0x31ed	                            xor ebp, ebp	      2574	buffer.c	FUNCTION_34	IF_1	IF_2
0x4001827	      0xe800000000	                          call 0x400182c	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x400182c	          0x4885c0	                           test rax, rax	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x400182f	      0x4889442410	             mov qword [rsp + 0x10], rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4001834	     0xf8458ffffff	                            je 0x4001792	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x400183a	    0x48b95c285e5c	          movabs rcx, 0x2f5c5b7c5c5e285c	       110	string3.h	FUNCTION_127	CALL_3
0x4001844	        0x488d7301	                      lea rsi, [rbx + 1]	       110	string3.h	FUNCTION_127	CALL_3
0x4001848	        0x488d780b	                    lea rdi, [rax + 0xb]	       110	string3.h	FUNCTION_127	CALL_3
0x400184c	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_127	CALL_3
0x400184f	    0xc740085d5c29	          mov dword [rax + 8], 0x295c5d 	       110	string3.h	FUNCTION_127	CALL_3
0x4001856	      0xe800000000	                          call 0x400185b	       110	string3.h	FUNCTION_127	CALL_3
0x400185b	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       110	string3.h	FUNCTION_127	CALL_3
0x400185f	      0xe90bfeffff	                           jmp 0x400166f	       110	string3.h	FUNCTION_127	CALL_3
0x4001864	    0x8d3cdd000000	                        lea edi, [rbx*8]	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x400186b	      0xe800000000	                          call 0x4001870	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4001870	          0x4885c0	                           test rax, rax	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x4001873	          0x498906	                    mov qword [r14], rax	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4001876	     0xf85c5feffff	                           jne 0x4001741	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x400187c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x4001881	      0xe800000000	                          call 0x4001886	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x4001886	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x400188b	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4001890	          0x4839c8	                            cmp rax, rcx	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4001893	            0x7408	                            je 0x400189d	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4001895	          0x4889c7	                            mov rdi, rax	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x4001898	      0xe800000000	                          call 0x400189d	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x400189d	            0x31ed	                            xor ebp, ebp	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x400189f	      0xe9eefeffff	                           jmp 0x4001792	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x40018a4	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x40018a9	      0xbd01000000	                              mov ebp, 1	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x40018ae	      0xe800000000	                          call 0x40018b3	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x40018b3	      0xe9bcfeffff	                           jmp 0x4001774	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x40018b8	          0x83c301	                              add ebx, 1	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x40018bb	      0xe900feffff	                           jmp 0x40016c0	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x40018c0	      0xe800000000	                          call 0x40018c5	      2649	buffer.c	FUNCTION_34
ex_buffer_all	IF,20:WHILE,0:DO,0:SWITCH,0:CALL,27:FOR,4:functions,0:ELSE,8	301
0x4009820	            0x4157	                                push r15	      5121	buffer.c	FUNCTION_72
0x4009822	            0x4156	                                push r14	      5121	buffer.c	FUNCTION_72
0x4009824	            0x4155	                                push r13	      5121	buffer.c	FUNCTION_72
0x4009826	            0x4154	                                push r12	      5121	buffer.c	FUNCTION_72
0x4009828	              0x55	                                push rbp	      5121	buffer.c	FUNCTION_72
0x4009829	              0x53	                                push rbx	      5121	buffer.c	FUNCTION_72
0x400982a	      0xbb0f270000	                         mov ebx, 0x270f	      5121	buffer.c	FUNCTION_72
0x400982f	        0x4883ec48	                           sub rsp, 0x48	      5121	buffer.c	FUNCTION_72
0x4009833	        0x448b5738	           mov r10d, dword [rdi + 0x38] 	      5133	buffer.c	FUNCTION_72	IF_1
0x4009837	    0x8b2d00000000	            mov ebp, dword [0x0400983d] 	      5130	buffer.c	FUNCTION_72
0x400983d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5121	buffer.c	FUNCTION_72
0x4009846	      0x4889442438	             mov qword [rsp + 0x38], rax	      5121	buffer.c	FUNCTION_72
0x400984b	            0x31c0	                            xor eax, eax	      5121	buffer.c	FUNCTION_72
0x400984d	          0x4585d2	                         test r10d, r10d	      5133	buffer.c	FUNCTION_72	IF_1
0x4009850	            0x7403	                            je 0x4009855	      5133	buffer.c	FUNCTION_72	IF_1
0x4009852	          0x8b5f48	            mov ebx, dword [rdi + 0x48] 	      5136	buffer.c	FUNCTION_72	ELSE_1
0x4009855	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      5137	buffer.c	FUNCTION_72	IF_2
0x4009858	      0x3de1010000	                          cmp eax, 0x1e1	      5137	buffer.c	FUNCTION_72	IF_2
0x400985d	        0x410f94c4	                               sete r12b	      5137	buffer.c	FUNCTION_72	IF_2
0x4009861	      0x3dab010000	                          cmp eax, 0x1ab	      5137	buffer.c	FUNCTION_72	IF_2
0x4009866	           0xf94c0	                                 sete al	      5137	buffer.c	FUNCTION_72	IF_2
0x4009869	          0x4109c4	                            or r12d, eax	      5137	buffer.c	FUNCTION_72	IF_2
0x400986c	      0xe800000000	                          call 0x4009871	      5142	buffer.c	FUNCTION_72	CALL_1
0x4009871	            0x85ed	                           test ebp, ebp	      5152	buffer.c	FUNCTION_72	IF_3
0x4009873	    0xc70500000000	               mov dword [0x0400987d], 1	      5145	buffer.c	FUNCTION_72
0x400987d	            0x7e16	                           jle 0x4009895	      5152	buffer.c	FUNCTION_72	IF_3
0x400987f	    0x488b3d000000	            mov rdi, qword [0x04009886] 	      5153	buffer.c	FUNCTION_72	CALL_2
0x4009886	      0xba01000000	                              mov edx, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0x400988b	      0xbe01000000	                              mov esi, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0x4009890	      0xe800000000	                          call 0x4009895	      5153	buffer.c	FUNCTION_72	CALL_2
0x4009895	            0x85ed	                           test ebp, ebp	      5153	buffer.c	FUNCTION_72	CALL_2
0x4009897	       0xf9444241f	                  sete byte [rsp + 0x1f]	      5153	buffer.c	FUNCTION_72	CALL_2
0x400989c	          0x4531ff	                          xor r15d, r15d	      5134	buffer.c	FUNCTION_72	IF_1
0x400989f	              0x90	                                     nop	      5134	buffer.c	FUNCTION_72	IF_1
0x40098a0	    0x488b05000000	            mov rax, qword [0x040098a7] 	      5156	buffer.c	FUNCTION_72	FOR_1
0x40098a7	    0x488b15000000	            mov rdx, qword [0x040098ae] 	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x40098ae	          0x488b38	                    mov rdi, qword [rax]	      5156	buffer.c	FUNCTION_72	FOR_1
0x40098b1	            0xeb39	                           jmp 0x40098ec	      5156	buffer.c	FUNCTION_72	FOR_1
0x40098b3	       0xf1f440000	                   nop dword [rax + rax]	      5156	buffer.c	FUNCTION_72	FOR_1
0x40098b8	    0x488b05000000	            mov rax, qword [0x040098bf] 	      5156	buffer.c	FUNCTION_72	FOR_1
0x40098bf	    0x483905000000	            cmp qword [0x040098c6], rax 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098c6	            0x741d	                            je 0x40098e5	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098c8	        0x448b4a28	            mov r9d, dword [rdx + 0x28] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098cc	          0x4585c9	                           test r9d, r9d	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098cf	            0x7514	                           jne 0x40098e5	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098d1	        0x488b4208	                mov rax, qword [rdx + 8]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098d5	    0x448b80800000	            mov r8d, dword [rax + 0x80] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098dc	          0x4585c0	                           test r8d, r8d	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098df	     0xf8ed3000000	                           jle 0x40099b8	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098e5	        0x4183c701	                             add r15d, 1	      5175	buffer.c	FUNCTION_72	FOR_1	FOR_2	ELSE_3
0x40098e9	          0x4889f2	                            mov rdx, rsi	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x40098ec	          0x4885d2	                           test rdx, rdx	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x40098ef	            0x743f	                            je 0x4009930	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x40098f1	        0x488b4208	                mov rax, qword [rdx + 8]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098f5	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x40098f9	        0x83787801	               cmp dword [rax + 0x78], 1	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098fd	            0x7fb9	                            jg 0x40098b8	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40098ff	    0xf60500000000	               test byte [0x04009906], 2	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009906	            0x7558	                           jne 0x4009960	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009908	    0x486382ac0000	         movsxd rax, dword [rdx + 0xac] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400990f	    0x483b05000000	            cmp rax, qword [0x04009916] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009916	            0x75a0	                           jne 0x40098b8	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009918	            0x85ed	                           test ebp, ebp	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400991a	            0x7ec9	                           jle 0x40098e5	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400991c	    0x488b05000000	            mov rax, qword [0x04009923] 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009923	          0x4839d0	                            cmp rax, rdx	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009926	            0x7597	                           jne 0x40098bf	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009928	            0xebbb	                           jmp 0x40098e5	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400992a	    0x660f1f440000	                    nop word [rax + rax]	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009930	          0x4885ff	                           test rdi, rdi	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x4009933	     0xf849f000000	                            je 0x40099d8	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x4009939	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400993e	     0xf8594000000	                           jne 0x40099d8	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x4009944	      0xba01000000	                              mov edx, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x4009949	      0xbe01000000	                              mov esi, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400994e	      0xe800000000	                          call 0x4009953	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x4009953	      0xe948ffffff	                           jmp 0x40098a0	      5182	buffer.c	FUNCTION_72	FOR_1
0x4009958	     0xf1f84000000	                   nop dword [rax + rax]	      5182	buffer.c	FUNCTION_72	FOR_1
0x4009960	    0x448bb2a40000	           mov r14d, dword [rdx + 0xa4] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009967	    0x4c8b2d000000	            mov r13, qword [0x0400996e] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400996e	    0x4403b2a00000	            add r14d, dword [rdx + 0xa0]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009975	    0x4c2b2d000000	             sub r13, qword [0x0400997c]	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400997c	      0x4889742410	             mov qword [rsp + 0x10], rsi	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009981	      0x48897c2408	                mov qword [rsp + 8], rdi	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009986	        0x48891424	                    mov qword [rsp], rdx	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400998a	      0xe800000000	                          call 0x400998f	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0x400998f	            0x4898	                                    cdqe	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009991	          0x4d63f6	                        movsxd r14, r14d	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009994	        0x488b1424	                    mov rdx, qword [rsp]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x4009998	          0x4929c5	                            sub r13, rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400999b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099a0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099a5	          0x4d39ee	                            cmp r14, r13	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099a8	     0xf8c0affffff	                            jl 0x40098b8	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099ae	      0xe965ffffff	                           jmp 0x4009918	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099b3	       0xf1f440000	                   nop dword [rax + rax]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099b8	          0x4889d7	                            mov rdi, rdx	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x40099bb	            0x31f6	                            xor esi, esi	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x40099bd	          0x4531ff	                          xor r15d, r15d	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099c0	      0xe800000000	                          call 0x40099c5	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x40099c5	    0x488b15000000	            mov rdx, qword [0x040099cc] 	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099cc	    0x488b3d000000	            mov rdi, qword [0x040099d3] 	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099d3	      0xe914ffffff	                           jmp 0x40098ec	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x40099d8	    0x488b3d000000	            mov rdi, qword [0x040099df] 	      5191	buffer.c	FUNCTION_72	CALL_6
0x40099df	            0x31f6	                            xor esi, esi	      5191	buffer.c	FUNCTION_72	CALL_6
0x40099e1	    0x830500000000	               add dword [0x040099e8], 1	      5190	buffer.c	FUNCTION_72
0x40099e8	      0xe800000000	                          call 0x40099ed	      5191	buffer.c	FUNCTION_72	CALL_6
0x40099ed	    0x4c8b35000000	            mov r14, qword [0x040099f4] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x40099f4	    0x830500000000	               add dword [0x040099fb], 1	      5192	buffer.c	FUNCTION_72
0x40099fb	          0x4d85f6	                           test r14, r14	      5193	buffer.c	FUNCTION_72	FOR_3
0x40099fe	        0x400f95c6	                               setne sil	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a02	          0x4439fb	                           cmp ebx, r15d	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a05	           0xf9fc0	                                 setg al	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a08	          0x4020c6	                             and sil, al	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a0b	      0x408874241f	              mov byte [rsp + 0x1f], sil	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a10	     0xf844a010000	                            je 0x4009b60	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a16	    0x41bd01000000	                             mov r13d, 1	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a1c	      0xe99a000000	                           jmp 0x4009abb	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a21	     0xf1f80000000	                         nop dword [rax]	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009a28	        0x418b5678	            mov edx, dword [r14 + 0x78] 	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4009a2c	       0xfb644241f	           movzx eax, byte [rsp + 0x1f] 	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4009a31	            0x85d2	                           test edx, edx	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4009a33	            0x7e0b	                           jle 0x4009a40	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4009a35	    0x48833d000000	               cmp qword [0x04009a3d], 0	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4009a3d	           0xf94c0	                                 sete al	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x4009a40	        0x4183fd01	                             cmp r13d, 1	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a44	     0xf85c5000000	                           jne 0x4009b0f	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a4a	            0x84c0	                             test al, al	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a4c	     0xf84bd000000	                            je 0x4009b0f	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a52	    0x418b86b80000	            mov eax, dword [r14 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4009a59	    0x448b05000000	            mov r8d, dword [0x04009a60] 	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a60	            0x31ff	                            xor edi, edi	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x4009a62	      0xbe21000000	                           mov esi, 0x21	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x4009a67	    0xc70500000000	               mov dword [0x04009a71], 1	      5226	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a71	        0x89442410	             mov dword [rsp + 0x10], eax	       362	buffer.c	FUNCTION_3
0x4009a75	    0x8b0500000000	            mov eax, dword [0x04009a7b] 	       363	buffer.c	FUNCTION_3
0x4009a7b	        0x44890424	                    mov dword [rsp], r8d	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a7f	        0x89442408	                mov dword [rsp + 8], eax	       363	buffer.c	FUNCTION_3
0x4009a83	      0xe800000000	                          call 0x4009a88	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x4009a88	        0x448b0424	                    mov r8d, dword [rsp]	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a8c	            0x85c0	                           test eax, eax	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x4009a8e	          0x4189c5	                           mov r13d, eax	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x4009a91	        0x458d4f01	                      lea r9d, [r15 + 1]	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a95	    0x448905000000	            mov dword [0x04009a9c], r8d 	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009a9c	     0xf857e010000	                           jne 0x4009c20	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x4009aa2	          0x4589cf	                           mov r15d, r9d	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009aa5	        0x4d8b7668	            mov r14, qword [r14 + 0x68] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009aa9	          0x4d85f6	                           test r14, r14	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009aac	     0xf84ae000000	                            je 0x4009b60	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009ab2	          0x4139df	                           cmp r15d, ebx	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009ab5	     0xf8da5000000	                           jge 0x4009b60	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009abb	          0x4584e4	                         test r12b, r12b	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4009abe	            0x7407	                            je 0x4009ac7	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4009ac0	      0x49837e0800	                  cmp qword [r14 + 8], 0	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4009ac5	            0x74de	                            je 0x4009aa5	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4009ac7	    0x418b8e241400	          mov ecx, dword [r14 + 0x1424] 	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4009ace	            0x85c9	                           test ecx, ecx	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4009ad0	            0x74d3	                            je 0x4009aa5	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x4009ad2	            0x85ed	                           test ebp, ebp	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0x4009ad4	     0xf854effffff	                           jne 0x4009a28	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0x4009ada	    0x488b3d000000	            mov rdi, qword [0x04009ae1] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009ae1	          0x4885ff	                           test rdi, rdi	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009ae4	            0x7517	                           jne 0x4009afd	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009ae6	      0xe925010000	                           jmp 0x4009c10	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009aeb	       0xf1f440000	                   nop dword [rax + rax]	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009af0	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009af4	          0x4885ff	                           test rdi, rdi	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009af7	     0xf8413010000	                            je 0x4009c10	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009afd	        0x4c3b7708	                cmp r14, qword [rdi + 8]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x4009b01	            0x75ed	                           jne 0x4009af0	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x4009b03	    0x488b35000000	            mov rsi, qword [0x04009b0a] 	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x4009b0a	      0xe800000000	                          call 0x4009b0f	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x4009b0f	      0xe800000000	                          call 0x4009b14	      5275	buffer.c	FUNCTION_72	FOR_3	CALL_17
0x4009b14	    0x8b0500000000	            mov eax, dword [0x04009b1a] 	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4009b1a	            0x85c0	                           test eax, eax	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4009b1c	     0xf858f010000	                           jne 0x4009cb1	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4009b22	      0xe800000000	                          call 0x4009b27	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x4009b27	            0x85c0	                           test eax, eax	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x4009b29	            0x7535	                           jne 0x4009b60	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x4009b2b	            0x85ed	                           test ebp, ebp	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4009b2d	     0xf8e72ffffff	                           jle 0x4009aa5	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4009b33	            0x31ff	                            xor edi, edi	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4009b35	      0xe800000000	                          call 0x4009b3a	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4009b3a	            0x4898	                                    cdqe	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4009b3c	    0x483b05000000	            cmp rax, qword [0x04009b43] 	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4009b43	     0xf8f5cffffff	                            jg 0x4009aa5	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x4009b49	        0x4d8b7668	            mov r14, qword [r14 + 0x68] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009b4d	    0xc70500000000	         mov dword [0x04009b57], 0x270f 	      5288	buffer.c	FUNCTION_72	FOR_3	IF_17
0x4009b57	          0x4d85f6	                           test r14, r14	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009b5a	     0xf8552ffffff	                           jne 0x4009ab2	      5193	buffer.c	FUNCTION_72	FOR_3
0x4009b60	    0x488b3d000000	            mov rdi, qword [0x04009b67] 	      5291	buffer.c	FUNCTION_72	CALL_21
0x4009b67	            0x31f6	                            xor esi, esi	      5291	buffer.c	FUNCTION_72	CALL_21
0x4009b69	    0x832d00000000	               sub dword [0x04009b70], 1	      5290	buffer.c	FUNCTION_72
0x4009b70	      0xe800000000	                          call 0x4009b75	      5291	buffer.c	FUNCTION_72	CALL_21
0x4009b75	    0x832d00000000	               sub dword [0x04009b7c], 1	      5292	buffer.c	FUNCTION_72
0x4009b7c	          0x4139df	                           cmp r15d, ebx	      5297	buffer.c	FUNCTION_72	FOR_4
0x4009b7f	    0x488b2d000000	            mov rbp, qword [0x04009b86] 	      5297	buffer.c	FUNCTION_72	FOR_4
0x4009b86	            0x7f24	                            jg 0x4009bac	      5297	buffer.c	FUNCTION_72	FOR_4
0x4009b88	            0xeb63	                           jmp 0x4009bed	      5297	buffer.c	FUNCTION_72	FOR_4
0x4009b8a	    0x660f1f440000	                    nop word [rax + rax]	      5297	buffer.c	FUNCTION_72	FOR_4
0x4009b90	          0x4889ef	                            mov rdi, rbp	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4009b93	      0xe800000000	                          call 0x4009b98	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4009b98	            0x85c0	                           test eax, eax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4009b9a	     0xf8520010000	                           jne 0x4009cc0	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4009ba0	    0x488b2d000000	            mov rbp, qword [0x04009ba7] 	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x4009ba7	          0x4439fb	                           cmp ebx, r15d	      5297	buffer.c	FUNCTION_72	FOR_4
0x4009baa	            0x7d41	                           jge 0x4009bed	      5297	buffer.c	FUNCTION_72	FOR_4
0x4009bac	        0x488b7508	                mov rsi, qword [rbp + 8]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4009bb0	          0x4889f7	                            mov rdi, rsi	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4009bb3	      0xe800000000	                          call 0x4009bb8	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4009bb8	            0x85c0	                           test eax, eax	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4009bba	            0x75d4	                           jne 0x4009b90	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4009bbc	          0x4889f7	                            mov rdi, rsi	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4009bbf	      0xe800000000	                          call 0x4009bc4	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4009bc4	            0x85c0	                           test eax, eax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4009bc6	            0x74c8	                            je 0x4009b90	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x4009bc8	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4009bcc	            0x31f6	                            xor esi, esi	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4009bce	      0xe800000000	                          call 0x4009bd3	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4009bd3	          0x83f801	                              cmp eax, 1	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4009bd6	            0x74b8	                            je 0x4009b90	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x4009bd8	          0x4889ef	                            mov rdi, rbp	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4009bdb	      0xe800000000	                          call 0x4009be0	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4009be0	            0x85c0	                           test eax, eax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4009be2	            0x74bc	                            je 0x4009ba0	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x4009be4	        0x488b6d18	            mov rbp, qword [rbp + 0x18] 	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0x4009be8	          0x4885ed	                           test rbp, rbp	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x4009beb	            0x75ba	                           jne 0x4009ba7	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x4009bed	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5319	buffer.c	FUNCTION_72
0x4009bf2	    0x644833042528	                xor rax, qword fs:[0x28]	      5319	buffer.c	FUNCTION_72
0x4009bfb	     0xf8531010000	                           jne 0x4009d32	      5319	buffer.c	FUNCTION_72
0x4009c01	        0x4883c448	                           add rsp, 0x48	      5319	buffer.c	FUNCTION_72
0x4009c05	              0x5b	                                 pop rbx	      5319	buffer.c	FUNCTION_72
0x4009c06	              0x5d	                                 pop rbp	      5319	buffer.c	FUNCTION_72
0x4009c07	            0x415c	                                 pop r12	      5319	buffer.c	FUNCTION_72
0x4009c09	            0x415d	                                 pop r13	      5319	buffer.c	FUNCTION_72
0x4009c0b	            0x415e	                                 pop r14	      5319	buffer.c	FUNCTION_72
0x4009c0d	            0x415f	                                 pop r15	      5319	buffer.c	FUNCTION_72
0x4009c0f	              0xc3	                                     ret	      5319	buffer.c	FUNCTION_72
0x4009c10	       0xfb644241f	           movzx eax, byte [rsp + 0x1f] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009c15	      0xe926feffff	                           jmp 0x4009a40	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009c1a	    0x660f1f440000	                    nop word [rax + rax]	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x4009c20	            0x31f6	                            xor esi, esi	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x4009c22	          0x4c89f7	                            mov rdi, r14	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x4009c25	        0x44890c24	                    mov dword [rsp], r9d	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x4009c29	    0xc70500000000	               mov dword [0x04009c33], 1	      5235	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009c33	      0xe800000000	                          call 0x4009c38	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x4009c38	        0x8b442408	                mov eax, dword [rsp + 8]	       377	buffer.c	FUNCTION_4	CALL_1
0x4009c3c	    0x3b0500000000	            cmp eax, dword [0x04009c42] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4009c42	        0x448b0c24	                    mov r9d, dword [rsp]	       377	buffer.c	FUNCTION_4	CALL_1
0x4009c46	            0x743b	                            je 0x4009c83	       377	buffer.c	FUNCTION_4	CALL_1
0x4009c48	    0x488b05000000	            mov rax, qword [0x04009c4f] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4009c4f	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4009c52	            0x7519	                           jne 0x4009c6d	       392	buffer.c	FUNCTION_5	FOR_1
0x4009c54	      0xe9c7000000	                           jmp 0x4009d20	       392	buffer.c	FUNCTION_5	FOR_1
0x4009c59	     0xf1f80000000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4009c60	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4009c64	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4009c67	     0xf84b3000000	                            je 0x4009d20	       392	buffer.c	FUNCTION_5	FOR_1
0x4009c6d	          0x4939c6	                            cmp r14, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4009c70	            0x75ee	                           jne 0x4009c60	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4009c72	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       378	buffer.c	FUNCTION_4
0x4009c76	    0x413b86b80000	            cmp eax, dword [r14 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4009c7d	     0xf859d000000	                           jne 0x4009d20	       378	buffer.c	FUNCTION_4
0x4009c83	    0x833d00000000	               cmp dword [0x04009c8a], 2	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x4009c8a	            0x7456	                            je 0x4009ce2	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x4009c8c	            0x31ff	                            xor edi, edi	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x4009c8e	        0x44890c24	                    mov dword [rsp], r9d	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x4009c92	      0xe800000000	                          call 0x4009c97	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x4009c97	        0x448b0c24	                    mov r9d, dword [rsp]	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009c9b	          0x4589cf	                           mov r15d, r9d	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x4009c9e	      0xe800000000	                          call 0x4009ca3	      5275	buffer.c	FUNCTION_72	FOR_3	CALL_17
0x4009ca3	    0x8b0500000000	            mov eax, dword [0x04009ca9] 	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4009ca9	            0x85c0	                           test eax, eax	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4009cab	     0xf8471feffff	                            je 0x4009b22	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4009cb1	      0xe800000000	                          call 0x4009cb6	      5278	buffer.c	FUNCTION_72	FOR_3	IF_15	CALL_18
0x4009cb6	      0xe9a5feffff	                           jmp 0x4009b60	      5279	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4009cbb	       0xf1f440000	                   nop dword [rax + rax]	      5279	buffer.c	FUNCTION_72	FOR_3	IF_15
0x4009cc0	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4009cc4	      0xe800000000	                          call 0x4009cc9	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4009cc9	            0x31f6	                            xor esi, esi	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4009ccb	            0x85c0	                           test eax, eax	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4009ccd	          0x4889ef	                            mov rdi, rbp	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4009cd0	        0x400f94c6	                                sete sil	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4009cd4	        0x4183ef01	                             sub r15d, 1	      5309	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x4009cd8	      0xe800000000	                          call 0x4009cdd	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4009cdd	      0xe9befeffff	                           jmp 0x4009ba0	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x4009ce2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x4009ce7	      0xe800000000	                          call 0x4009cec	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x4009cec	    0x488b3d000000	            mov rdi, qword [0x04009cf3] 	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x4009cf3	      0xbe01000000	                              mov esi, 1	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x4009cf8	      0xe800000000	                          call 0x4009cfd	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x4009cfd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x4009d02	    0xc70500000000	               mov dword [0x04009d0c], 0	      5260	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x4009d0c	    0xc70500000000	               mov dword [0x04009d16], 1	      5261	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x4009d16	      0xe800000000	                          call 0x4009d1b	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x4009d1b	      0xe9effdffff	                           jmp 0x4009b0f	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x4009d20	    0xc70500000000	               mov dword [0x04009d2a], 0	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x4009d2a	          0x4589cf	                           mov r15d, r9d	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x4009d2d	      0xe92efeffff	                           jmp 0x4009b60	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x4009d32	      0xe800000000	                          call 0x4009d37	      5319	buffer.c	FUNCTION_72
sign_mark_adjust	IF,3:WHILE,0:DO,0:SWITCH,0:CALL,0:FOR,1:functions,0:ELSE,2	29
0x400a0b0	    0x488b05000000	            mov rax, qword [0x0400a0b7] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0b7	    0x4c8b80201c00	           mov r8, qword [rax + 0x1c20] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0be	          0x4d85c0	                             test r8, r8	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0c1	            0x7523	                           jne 0x400a0e6	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0c3	            0xeb3f	                           jmp 0x400a104	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0c5	           0xf1f00	                         nop dword [rax]	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0c8	          0x4839f8	                            cmp rax, rdi	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400a0cb	            0x7c22	                            jl 0x400a0ef	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400a0cd	    0x4881faffffff	                     cmp rdx, 0x7fffffff	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400a0d4	            0x743a	                            je 0x400a110	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400a0d6	          0x4801d0	                            add rax, rdx	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400a0d9	        0x49894008	                 mov qword [r8 + 8], rax	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400a0dd	        0x4d8b4018	               mov r8, qword [r8 + 0x18]	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0e1	          0x4d85c0	                             test r8, r8	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0e4	            0x741e	                            je 0x400a104	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0e6	        0x498b4008	                 mov rax, qword [r8 + 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400a0ea	          0x4839f0	                            cmp rax, rsi	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400a0ed	            0x7ed9	                           jle 0x400a0c8	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400a0ef	          0x4839f0	                            cmp rax, rsi	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400a0f2	            0x7ee9	                           jle 0x400a0dd	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400a0f4	          0x4801c8	                            add rax, rcx	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400a0f7	        0x49894008	                 mov qword [r8 + 8], rax	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400a0fb	        0x4d8b4018	               mov r8, qword [r8 + 0x18]	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a0ff	          0x4d85c0	                             test r8, r8	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a102	            0x75e2	                           jne 0x400a0e6	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a104	            0xf3c3	                                     ret	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6132	buffer.c	FUNCTION_100	FOR_1
0x400a110	        0x49897808	                 mov qword [r8 + 8], rdi	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400a114	            0xebc7	                           jmp 0x400a0dd	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
setaltfname	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,1:FOR,0:functions,0:ELSE,0	13
0x4009d40	        0x4883ec08	                              sub rsp, 8	      3224	buffer.c	FUNCTION_50
0x4009d44	            0x31c9	                            xor ecx, ecx	      3228	buffer.c	FUNCTION_50	CALL_1
0x4009d46	      0xe800000000	                          call 0x4009d4b	      3228	buffer.c	FUNCTION_50	CALL_1
0x4009d4b	          0x4885c0	                           test rax, rax	      3229	buffer.c	FUNCTION_50	IF_1
0x4009d4e	            0x741d	                            je 0x4009d6d	      3229	buffer.c	FUNCTION_50	IF_1
0x4009d50	    0x8b1500000000	            mov edx, dword [0x04009d56] 	      3229	buffer.c	FUNCTION_50	IF_1
0x4009d56	            0x85d2	                           test edx, edx	      3229	buffer.c	FUNCTION_50	IF_1
0x4009d58	            0x7513	                           jne 0x4009d6d	      3229	buffer.c	FUNCTION_50	IF_1
0x4009d5a	    0x8b88b8000000	            mov ecx, dword [rax + 0xb8] 	      3230	buffer.c	FUNCTION_50	IF_1
0x4009d60	    0x488b15000000	            mov rdx, qword [0x04009d67] 	      3230	buffer.c	FUNCTION_50	IF_1
0x4009d67	    0x898a78010000	            mov dword [rdx + 0x178], ecx	      3230	buffer.c	FUNCTION_50	IF_1
0x4009d6d	        0x4883c408	                              add rsp, 8	      3232	buffer.c	FUNCTION_50
0x4009d71	              0xc3	                                     ret	      3232	buffer.c	FUNCTION_50
buflist_getfpos	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:ELSE,1	30
0x4001590	    0x488b05000000	            mov rax, qword [0x04001597] 	      2333	buffer.c	FUNCTION_29
0x4001597	              0x53	                                push rbx	      2333	buffer.c	FUNCTION_29
0x4001598	            0x31f6	                            xor esi, esi	      2931	buffer.c	FUNCTION_43	CALL_2
0x400159a	      0xbb00000000	                              mov ebx, 0	      2933	buffer.c	FUNCTION_43	IF_1
0x400159f	    0x488bb8280100	           mov rdi, qword [rax + 0x128] 	      2931	buffer.c	FUNCTION_43	CALL_2
0x40015a6	      0xe805f7ffff	            call sym.find_wininfo.isra.2	      2931	buffer.c	FUNCTION_43	CALL_2
0x40015ab	        0x488d5018	                   lea rdx, [rax + 0x18]	      2933	buffer.c	FUNCTION_43	IF_1
0x40015af	          0x4885c0	                           test rax, rax	      2933	buffer.c	FUNCTION_43	IF_1
0x40015b2	    0x488b05000000	            mov rax, qword [0x040015b9] 	      2338	buffer.c	FUNCTION_29
0x40015b9	        0x480f45da	                         cmovne rbx, rdx	      2933	buffer.c	FUNCTION_43	IF_1
0x40015bd	          0x488b13	                    mov rdx, qword [rbx]	      2338	buffer.c	FUNCTION_29
0x40015c0	        0x48895038	             mov qword [rax + 0x38], rdx	      2338	buffer.c	FUNCTION_29
0x40015c4	      0xe800000000	                          call 0x40015c9	      2339	buffer.c	FUNCTION_29	CALL_2
0x40015c9	    0x8b0500000000	            mov eax, dword [0x040015cf] 	      2341	buffer.c	FUNCTION_29	IF_1
0x40015cf	            0x85c0	                           test eax, eax	      2341	buffer.c	FUNCTION_29	IF_1
0x40015d1	            0x7415	                            je 0x40015e8	      2341	buffer.c	FUNCTION_29	IF_1
0x40015d3	    0x488b05000000	            mov rax, qword [0x040015da] 	      2342	buffer.c	FUNCTION_29	IF_1
0x40015da	    0xc74040000000	               mov dword [rax + 0x40], 0	      2342	buffer.c	FUNCTION_29	IF_1
0x40015e1	              0x5b	                                 pop rbx	      2352	buffer.c	FUNCTION_29
0x40015e2	              0xc3	                                     ret	      2352	buffer.c	FUNCTION_29
0x40015e3	       0xf1f440000	                   nop dword [rax + rax]	      2352	buffer.c	FUNCTION_29
0x40015e8	          0x8b5308	                mov edx, dword [rbx + 8]	      2345	buffer.c	FUNCTION_29	ELSE_1
0x40015eb	    0x488b05000000	            mov rax, qword [0x040015f2] 	      2345	buffer.c	FUNCTION_29	ELSE_1
0x40015f2	          0x895040	             mov dword [rax + 0x40], edx	      2345	buffer.c	FUNCTION_29	ELSE_1
0x40015f5	      0xe800000000	                          call 0x40015fa	      2346	buffer.c	FUNCTION_29	ELSE_1	CALL_3
0x40015fa	    0x488b05000000	            mov rax, qword [0x04001601] 	      2348	buffer.c	FUNCTION_29	ELSE_1
0x4001601	    0xc74044000000	               mov dword [rax + 0x44], 0	      2348	buffer.c	FUNCTION_29	ELSE_1
0x4001608	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2350	buffer.c	FUNCTION_29	ELSE_1
0x400160f	              0x5b	                                 pop rbx	      2352	buffer.c	FUNCTION_29
0x4001610	              0xc3	                                     ret	      2352	buffer.c	FUNCTION_29
chk_modeline	IF,14:WHILE,1:DO,1:SWITCH,0:CALL,16:FOR,2:functions,0:ELSE,1	236
0x4000290	            0x4157	                                push r15	      5371	buffer.c	FUNCTION_74
0x4000292	            0x4156	                                push r14	      5371	buffer.c	FUNCTION_74
0x4000294	          0x4989ff	                            mov r15, rdi	      5371	buffer.c	FUNCTION_74
0x4000297	            0x4155	                                push r13	      5371	buffer.c	FUNCTION_74
0x4000299	            0x4154	                                push r12	      5371	buffer.c	FUNCTION_74
0x400029b	              0x55	                                push rbp	      5371	buffer.c	FUNCTION_74
0x400029c	              0x53	                                push rbx	      5371	buffer.c	FUNCTION_74
0x400029d	            0x89f5	                            mov ebp, esi	      5371	buffer.c	FUNCTION_74
0x400029f	        0x4883ec28	                           sub rsp, 0x28	      5371	buffer.c	FUNCTION_74
0x40002a3	    0x64488b042528	                mov rax, qword fs:[0x28]	      5371	buffer.c	FUNCTION_74
0x40002ac	      0x4889442418	             mov qword [rsp + 0x18], rax	      5371	buffer.c	FUNCTION_74
0x40002b1	            0x31c0	                            xor eax, eax	      5371	buffer.c	FUNCTION_74
0x40002b3	      0xe800000000	                          call 0x40002b8	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002b8	          0x803800	                       cmp byte [rax], 0	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002bb	     0xf841a020000	                            je 0x40004db	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002c1	          0x4889c3	                            mov rbx, rax	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002c4	      0xbfffffffff	                     mov edi, 0xffffffff	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002c9	            0xeb26	                           jmp 0x40002f1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002cb	       0xf1f440000	                   nop dword [rax + rax]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002d0	      0xe800000000	                          call 0x40002d5	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40002d5	            0x85c0	                           test eax, eax	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40002d7	            0x7567	                           jne 0x4000340	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40002d9	         0xfb64301	               movzx eax, byte [rbx + 1]	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40002dd	        0x440fb633	                  movzx r14d, byte [rbx]	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40002e1	        0x4883c301	                              add rbx, 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002e5	            0x84c0	                             test al, al	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002e7	        0x410fb6fe	                         movzx edi, r14b	      5412	buffer.c	FUNCTION_74	FOR_1
0x40002eb	     0xf84ea010000	                            je 0x40004db	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002f1	          0x83ffff	             cmp edi, 0xffffffffffffffff	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40002f4	            0x75da	                           jne 0x40002d0	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40002f6	      0xbf00000000	                              mov edi, 0	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40002fb	      0xb903000000	                              mov ecx, 3	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x4000300	          0x4889de	                            mov rsi, rbx	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x4000303	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x4000305	        0x440fb633	                  movzx r14d, byte [rbx]	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x4000309	           0xf97c2	                                 seta dl	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400030c	           0xf92c0	                                 setb al	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x400030f	            0x38c2	                              cmp dl, al	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x4000311	            0x7442	                            je 0x4000355	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x4000313	          0x4489f0	                           mov eax, r14d	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000316	          0x83e0df	                     and eax, 0xffffffdf	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000319	            0x3c56	                            cmp al, 0x56	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400031b	         0xfb64301	               movzx eax, byte [rbx + 1]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400031f	            0x75c0	                           jne 0x40002e1	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000321	            0x3c69	                            cmp al, 0x69	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000323	            0x75bc	                           jne 0x40002e1	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000325	        0x807b026d	                cmp byte [rbx + 2], 0x6d	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000329	     0xf840d010000	                            je 0x400043c	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400032f	        0x410fb6fe	                         movzx edi, r14b	      5412	buffer.c	FUNCTION_74	FOR_1
0x4000333	        0x4883c301	                              add rbx, 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000337	            0xebb8	                           jmp 0x40002f1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000339	     0xf1f80000000	                         nop dword [rax]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000340	      0xbf00000000	                              mov edi, 0	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x4000345	      0xb903000000	                              mov ecx, 3	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400034a	          0x4889de	                            mov rsi, rbx	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400034d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x400034f	            0x75a5	                           jne 0x40002f6	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x4000351	        0x440fb633	                  movzx r14d, byte [rbx]	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x4000355	          0x4584f6	                         test r14b, r14b	      5415	buffer.c	FUNCTION_74	IF_6
0x4000358	            0x750a	                           jne 0x4000364	      5415	buffer.c	FUNCTION_74	IF_6
0x400035a	      0xe97c010000	                           jmp 0x40004db	      5415	buffer.c	FUNCTION_74	IF_6
0x400035f	              0x90	                                     nop	      5415	buffer.c	FUNCTION_74	IF_6
0x4000360	        0x440fb633	                  movzx r14d, byte [rbx]	      5415	buffer.c	FUNCTION_74	IF_6
0x4000364	        0x4883c301	                              add rbx, 1	      5418	buffer.c	FUNCTION_74	IF_6	DO_1
0x4000368	        0x4180fe3a	                          cmp r14b, 0x3a	      5419	buffer.c	FUNCTION_74	IF_6
0x400036c	            0x75f2	                           jne 0x4000360	      5419	buffer.c	FUNCTION_74	IF_6
0x400036e	          0x4889df	                            mov rdi, rbx	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x4000371	      0xe800000000	                          call 0x4000376	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x4000376	          0x4885c0	                           test rax, rax	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0x4000379	          0x4989c4	                            mov r12, rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x400037c	     0xf84a6020000	                            je 0x4000628	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0x4000382	    0x488b05000000	            mov rax, qword [0x04000389] 	      5425	buffer.c	FUNCTION_74	IF_6
0x4000389	          0x4c89e7	                            mov rdi, r12	      5428	buffer.c	FUNCTION_74	IF_6
0x400038c	    0x4c893d000000	            mov qword [0x04000393], r15 	      5427	buffer.c	FUNCTION_74	IF_6
0x4000393	      0xbb01000000	                              mov ebx, 1	      5378	buffer.c	FUNCTION_74
0x4000398	          0x83cd0c	                             or ebp, 0xc	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x400039b	        0x48890424	                    mov qword [rsp], rax	      5425	buffer.c	FUNCTION_74	IF_6
0x400039f	    0x488b05000000	            mov rax, qword [0x040003a6] 	      5426	buffer.c	FUNCTION_74	IF_6
0x40003a6	    0x48c705000000	               mov qword [0x040003b1], 0	      5428	buffer.c	FUNCTION_74	IF_6
0x40003b1	      0x4889442408	                mov qword [rsp + 8], rax	      5426	buffer.c	FUNCTION_74	IF_6
0x40003b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5426	buffer.c	FUNCTION_74	IF_6
0x40003c0	      0xe800000000	                          call 0x40003c5	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x40003c5	          0x803800	                       cmp byte [rax], 0	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x40003c8	          0x4989c6	                            mov r14, rax	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x40003cb	     0xf8471010000	                            je 0x4000542	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x40003d1	      0x4889442410	             mov qword [rsp + 0x10], rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003d6	           0xfb610	                   movzx edx, byte [rax]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003d9	          0x80fa3a	                            cmp dl, 0x3a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003dc	     0xf8406010000	                            je 0x40004e8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003e2	            0x84d2	                             test dl, dl	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003e4	     0xf84fe000000	                            je 0x40004e8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003ea	          0x4989c7	                            mov r15, rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003ed	            0xeb24	                           jmp 0x4000413	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003ef	              0x90	                                     nop	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003f0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003f5	        0x4c8d7a01	                      lea r15, [rdx + 1]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003f9	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40003fe	         0xfb65201	               movzx edx, byte [rdx + 1]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000402	          0x80fa3a	                            cmp dl, 0x3a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000405	     0xf84dd000000	                            je 0x40004e8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400040b	            0x84d2	                             test dl, dl	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400040d	     0xf84d5000000	                            je 0x40004e8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000413	          0x80fa5c	                            cmp dl, 0x5c	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000416	            0x75d8	                           jne 0x40003f0	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000418	      0x41807f013a	                cmp byte [r15 + 1], 0x3a	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400041d	            0x75d1	                           jne 0x40003f0	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400041f	        0x4d8d6f01	                      lea r13, [r15 + 1]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000423	          0x4c89ef	                            mov rdi, r13	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x4000426	      0xe800000000	                          call 0x400042b	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400042b	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_122	CALL_3
0x400042f	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_122	CALL_3
0x4000432	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_122	CALL_3
0x4000435	      0xe800000000	                          call 0x400043a	        59	string3.h	FUNCTION_122	CALL_3
0x400043a	            0xebb4	                           jmp 0x40003f0	        59	string3.h	FUNCTION_122	CALL_3
0x400043c	         0xfb64303	               movzx eax, byte [rbx + 3]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000440	          0x83e83c	                           sub eax, 0x3c	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000443	            0x3c02	                               cmp al, 2	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000445	     0xf86a4010000	                           jbe 0x40005ef	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400044b	        0x488d4303	                      lea rax, [rbx + 3]	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0x400044f	      0x4889442410	             mov qword [rsp + 0x10], rax	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0x4000454	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x4000459	      0xe800000000	                          call 0x400045e	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x400045e	          0x4989c4	                            mov r12, rax	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x4000461	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000466	          0x80383a	                    cmp byte [rax], 0x3a	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000469	     0xf856afeffff	                           jne 0x40002d9	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400046f	        0x440fb633	                  movzx r14d, byte [rbx]	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000473	        0x4180fe56	                          cmp r14b, 0x56	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000477	     0xf84b2010000	                            je 0x400062f	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400047d	      0x440fb66b03	              movzx r13d, byte [rbx + 3]	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000482	        0x4180fd3a	                          cmp r13b, 0x3a	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000486	     0xf84c9feffff	                            je 0x4000355	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400048c	    0x4181fc200300	                         cmp r12d, 0x320	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000493	     0xf8f64010000	                            jg 0x40005fd	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000499	      0xe800000000	                          call 0x400049e	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400049e	          0x488b08	                    mov rcx, qword [rax]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x40004a1	        0x410fb6d5	                         movzx edx, r13b	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x40004a5	      0xf644510108	         test byte [rcx + rdx*2 + 1], 8 	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x40004aa	     0xf85a5feffff	                           jne 0x4000355	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x40004b0	    0x4181fc200300	                         cmp r12d, 0x320	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40004b7	     0xf844a010000	                            je 0x4000607	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40004bd	        0x4180fd3e	                          cmp r13b, 0x3e	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40004c1	     0xf848efeffff	                            je 0x4000355	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40004c7	         0xfb64301	               movzx eax, byte [rbx + 1]	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40004cb	        0x4883c301	                              add rbx, 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40004cf	        0x410fb6fe	                         movzx edi, r14b	      5412	buffer.c	FUNCTION_74	FOR_1
0x40004d3	            0x84c0	                             test al, al	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40004d5	     0xf8516feffff	                           jne 0x40002f1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40004db	      0xb801000000	                              mov eax, 1	      5378	buffer.c	FUNCTION_74
0x40004e0	      0xe97e000000	                           jmp 0x4000563	      5378	buffer.c	FUNCTION_74
0x40004e5	           0xf1f00	                         nop dword [rax]	      5378	buffer.c	FUNCTION_74
0x40004e8	      0xbf00000000	                              mov edi, 0	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40004ed	      0xb904000000	                              mov ecx, 4	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40004f2	          0x4c89f6	                            mov rsi, r14	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40004f5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40004f7	     0xf8493000000	                            je 0x4000590	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40004fd	      0xbf00000000	                              mov edi, 0	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x4000502	      0xb903000000	                              mov ecx, 3	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x4000507	          0x4c89f6	                            mov rsi, r14	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400050a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x400050c	     0xf847e000000	                            je 0x4000590	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x4000512	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000517	          0x4531ff	                          xor r15d, r15d	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x400051a	            0x84d2	                             test dl, dl	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x400051c	        0x410f94c7	                               sete r15b	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x4000520	          0xc60000	                       mov byte [rax], 0	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000523	        0x41803e00	                       cmp byte [r14], 0	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x4000527	     0xf8591000000	                           jne 0x40005be	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400052d	           0xf1f00	                         nop dword [rax]	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x4000530	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000535	          0x4585ff	                         test r15d, r15d	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000538	        0x488d7801	                      lea rdi, [rax + 1]	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400053c	     0xf847efeffff	                            je 0x40003c0	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000542	        0x488b0424	                    mov rax, qword [rsp]	      5480	buffer.c	FUNCTION_74	IF_6
0x4000546	          0x4c89e7	                            mov rdi, r12	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x4000549	    0x488905000000	            mov qword [0x04000550], rax 	      5480	buffer.c	FUNCTION_74	IF_6
0x4000550	      0x488b442408	                mov rax, qword [rsp + 8]	      5481	buffer.c	FUNCTION_74	IF_6
0x4000555	    0x488905000000	            mov qword [0x0400055c], rax 	      5481	buffer.c	FUNCTION_74	IF_6
0x400055c	      0xe800000000	                          call 0x4000561	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x4000561	            0x89d8	                            mov eax, ebx	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x4000563	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5486	buffer.c	FUNCTION_74
0x4000568	    0x644833342528	                xor rsi, qword fs:[0x28]	      5486	buffer.c	FUNCTION_74
0x4000571	     0xf85df000000	                           jne 0x4000656	      5486	buffer.c	FUNCTION_74
0x4000577	        0x4883c428	                           add rsp, 0x28	      5486	buffer.c	FUNCTION_74
0x400057b	              0x5b	                                 pop rbx	      5486	buffer.c	FUNCTION_74
0x400057c	              0x5d	                                 pop rbp	      5486	buffer.c	FUNCTION_74
0x400057d	            0x415c	                                 pop r12	      5486	buffer.c	FUNCTION_74
0x400057f	            0x415d	                                 pop r13	      5486	buffer.c	FUNCTION_74
0x4000581	            0x415e	                                 pop r14	      5486	buffer.c	FUNCTION_74
0x4000583	            0x415f	                                 pop r15	      5486	buffer.c	FUNCTION_74
0x4000585	              0xc3	                                     ret	      5486	buffer.c	FUNCTION_74
0x4000586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5486	buffer.c	FUNCTION_74
0x4000590	          0x80fa3a	                            cmp dl, 0x3a	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x4000593	            0x75ad	                           jne 0x4000542	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x4000595	          0x4c89f7	                            mov rdi, r14	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x4000598	      0xbe20000000	                           mov esi, 0x20	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x400059d	    0x41bf01000000	                             mov r15d, 1	      5459	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11
0x40005a3	      0xe800000000	                          call 0x40005a8	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40005a8	        0x4c8d7001	                      lea r14, [rax + 1]	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40005ac	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x40005b1	          0xc60000	                       mov byte [rax], 0	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x40005b4	        0x41803e00	                       cmp byte [r14], 0	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40005b8	     0xf8472ffffff	                            je 0x4000530	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40005be	    0x448b2d000000	           mov r13d, dword [0x040005c5] 	      5467	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40005c5	            0x89ee	                            mov esi, ebp	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x40005c7	          0x4c89f7	                            mov rdi, r14	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x40005ca	    0xc70500000000	     mov dword [0x040005d4], 0xffffffff 	      5468	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40005d4	      0xe800000000	                          call 0x40005d9	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x40005d9	            0x85c0	                           test eax, eax	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x40005db	            0x89c3	                            mov ebx, eax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x40005dd	    0x44892d000000	           mov dword [0x040005e4], r13d 	      5472	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40005e4	     0xf8546ffffff	                           jne 0x4000530	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x40005ea	      0xe953ffffff	                           jmp 0x4000542	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x40005ef	        0x488d4304	                      lea rax, [rbx + 4]	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x40005f3	      0x4889442410	             mov qword [rsp + 0x10], rax	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x40005f8	      0xe957feffff	                           jmp 0x4000454	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x40005fd	        0x4180fd3c	                          cmp r13b, 0x3c	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000601	     0xf844efdffff	                            je 0x4000355	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000607	    0x4181fc200300	                         cmp r12d, 0x320	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400060e	     0xf85b3feffff	                           jne 0x40004c7	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000614	        0x4180fd3d	                          cmp r13b, 0x3d	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000618	     0xf85a9feffff	                           jne 0x40004c7	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400061e	      0xe932fdffff	                           jmp 0x4000355	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000623	       0xf1f440000	                   nop dword [rax + rax]	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000628	            0x31c0	                            xor eax, eax	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0x400062a	      0xe934ffffff	                           jmp 0x4000563	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0x400062f	        0x488d7801	                      lea rdi, [rax + 1]	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000633	      0xe800000000	                          call 0x4000638	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000638	      0xbf00000000	                              mov edi, 0	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400063d	      0xb903000000	                              mov ecx, 3	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000642	          0x4889c6	                            mov rsi, rax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000645	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000647	     0xf858cfcffff	                           jne 0x40002d9	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x400064d	        0x440fb633	                  movzx r14d, byte [rbx]	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000651	      0xe927feffff	                           jmp 0x400047d	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x4000656	      0xe800000000	                          call 0x400065b	      5486	buffer.c	FUNCTION_74
buf_findsigntype_id	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,0:FOR,1:functions,0:ELSE,0	18
0x4006a30	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      6019	buffer.c	FUNCTION_95	FOR_1
0x4006a37	          0x4885c0	                           test rax, rax	      6019	buffer.c	FUNCTION_95	FOR_1
0x4006a3a	            0x750d	                           jne 0x4006a49	      6019	buffer.c	FUNCTION_95	FOR_1
0x4006a3c	            0xeb24	                           jmp 0x4006a62	      6019	buffer.c	FUNCTION_95	FOR_1
0x4006a3e	            0x6690	                                     nop	      6019	buffer.c	FUNCTION_95	FOR_1
0x4006a40	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6019	buffer.c	FUNCTION_95	FOR_1
0x4006a44	          0x4885c0	                           test rax, rax	      6019	buffer.c	FUNCTION_95	FOR_1
0x4006a47	            0x7417	                            je 0x4006a60	      6019	buffer.c	FUNCTION_95	FOR_1
0x4006a49	        0x48397008	                cmp qword [rax + 8], rsi	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x4006a4d	            0x75f1	                           jne 0x4006a40	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x4006a4f	          0x395010	            cmp dword [rax + 0x10], edx 	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x4006a52	            0x75ec	                           jne 0x4006a40	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x4006a54	            0x8b00	                    mov eax, dword [rax]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x4006a56	              0xc3	                                     ret	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x4006a57	    0x660f1f840000	                    nop word [rax + rax]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x4006a60	            0xf3c3	                                     ret	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x4006a62	            0x31c0	                            xor eax, eax	      6023	buffer.c	FUNCTION_95
0x4006a64	              0xc3	                                     ret	      6024	buffer.c	FUNCTION_95
maketitle	IF,26:WHILE,0:DO,0:SWITCH,1:CALL,47:FOR,0:functions,0:ELSE,10	376
0x4005f20	            0x4157	                                push r15	      3538	buffer.c	FUNCTION_61
0x4005f22	            0x4156	                                push r14	      3538	buffer.c	FUNCTION_61
0x4005f24	            0x4155	                                push r13	      3538	buffer.c	FUNCTION_61
0x4005f26	            0x4154	                                push r12	      3538	buffer.c	FUNCTION_61
0x4005f28	              0x55	                                push rbp	      3538	buffer.c	FUNCTION_61
0x4005f29	              0x53	                                push rbx	      3538	buffer.c	FUNCTION_61
0x4005f2a	    0x4881ec180400	                          sub rsp, 0x418	      3538	buffer.c	FUNCTION_61
0x4005f31	    0x64488b042528	                mov rax, qword fs:[0x28]	      3538	buffer.c	FUNCTION_61
0x4005f3a	    0x488984240804	            mov qword [rsp + 0x408], rax	      3538	buffer.c	FUNCTION_61
0x4005f42	            0x31c0	                            xor eax, eax	      3538	buffer.c	FUNCTION_61
0x4005f44	      0xe800000000	                          call 0x4005f49	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4005f49	            0x85c0	                           test eax, eax	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4005f4b	            0x7533	                           jne 0x4005f80	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4005f4d	    0xc70500000000	               mov dword [0x04005f57], 1	      3552	buffer.c	FUNCTION_61	IF_1
0x4005f57	    0x488b84240804	           mov rax, qword [rsp + 0x408] 	      3754	buffer.c	FUNCTION_61
0x4005f5f	    0x644833042528	                xor rax, qword fs:[0x28]	      3754	buffer.c	FUNCTION_61
0x4005f68	     0xf854e060000	                           jne 0x40065bc	      3754	buffer.c	FUNCTION_61
0x4005f6e	    0x4881c4180400	                          add rsp, 0x418	      3754	buffer.c	FUNCTION_61
0x4005f75	              0x5b	                                 pop rbx	      3754	buffer.c	FUNCTION_61
0x4005f76	              0x5d	                                 pop rbp	      3754	buffer.c	FUNCTION_61
0x4005f77	            0x415c	                                 pop r12	      3754	buffer.c	FUNCTION_61
0x4005f79	            0x415d	                                 pop r13	      3754	buffer.c	FUNCTION_61
0x4005f7b	            0x415e	                                 pop r14	      3754	buffer.c	FUNCTION_61
0x4005f7d	            0x415f	                                 pop r15	      3754	buffer.c	FUNCTION_61
0x4005f7f	              0xc3	                                     ret	      3754	buffer.c	FUNCTION_61
0x4005f80	    0x8b3500000000	            mov esi, dword [0x04005f86] 	      3557	buffer.c	FUNCTION_61	IF_2
0x4005f86	    0xc70500000000	               mov dword [0x04005f90], 0	      3556	buffer.c	FUNCTION_61
0x4005f90	            0x85f6	                           test esi, esi	      3557	buffer.c	FUNCTION_61	IF_2
0x4005f92	     0xf85e8000000	                           jne 0x4006080	      3557	buffer.c	FUNCTION_61	IF_2
0x4005f98	    0x8b0d00000000	            mov ecx, dword [0x04005f9e] 	      3557	buffer.c	FUNCTION_61	IF_2
0x4005f9e	            0x31ff	                            xor edi, edi	      3540	buffer.c	FUNCTION_61
0x4005fa0	            0x85c9	                           test ecx, ecx	      3557	buffer.c	FUNCTION_61	IF_2
0x4005fa2	     0xf84f8010000	                            je 0x40061a0	      3557	buffer.c	FUNCTION_61	IF_2
0x4005fa8	      0xbe00000000	                              mov esi, 0	      3698	buffer.c	FUNCTION_61	CALL_36
0x4005fad	      0xe85ea2ffff	                      call sym.ti_change	      3698	buffer.c	FUNCTION_61	CALL_36
0x4005fb2	    0x8b1500000000	            mov edx, dword [0x04005fb8] 	      3700	buffer.c	FUNCTION_61	IF_19
0x4005fb8	            0x31ff	                            xor edi, edi	      3542	buffer.c	FUNCTION_61
0x4005fba	            0x89c5	                            mov ebp, eax	      3698	buffer.c	FUNCTION_61	CALL_36
0x4005fbc	            0x85d2	                           test edx, edx	      3700	buffer.c	FUNCTION_61	IF_19
0x4005fbe	     0xf848c000000	                            je 0x4006050	      3700	buffer.c	FUNCTION_61	IF_19
0x4005fc4	    0x488b3d000000	            mov rdi, qword [0x04005fcb] 	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4005fcb	          0x803f00	                       cmp byte [rdi], 0	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4005fce	     0xf8474020000	                            je 0x4006248	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4005fd4	    0xf60500000000	               test byte [0x04005fdb], 1	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4005fdb	            0x7473	                            je 0x4006050	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4005fdd	            0x31f6	                            xor esi, esi	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4005fdf	      0xbf00000000	                              mov edi, 0	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4005fe4	          0x4889e3	                            mov rbx, rsp	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005fe7	    0x448b25000000	           mov r12d, dword [0x04005fee] 	      3709	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4005fee	      0xe800000000	                          call 0x4005ff3	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4005ff3	        0x4883ec08	                              sub rsp, 8	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005ff7	    0x488b0d000000	            mov rcx, qword [0x04005ffe] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4005ffe	    0x488b3d000000	            mov rdi, qword [0x04006005] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006005	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006007	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006009	          0x4531c9	                            xor r9d, r9d	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x400600c	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x400600e	          0x4189c0	                            mov r8d, eax	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x4006011	      0xba01040000	                          mov edx, 0x401	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006016	          0x4889de	                            mov rsi, rbx	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006019	    0xc70500000000	               mov dword [0x04006023], 0	      3714	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006023	      0xe800000000	                          call 0x4006028	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4006028	    0x8b0500000000	            mov eax, dword [0x0400602e] 	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x400602e	        0x4883c420	                           add rsp, 0x20	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4006032	            0x85c0	                           test eax, eax	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4006034	     0xf85a6020000	                           jne 0x40062e0	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x400603a	          0x4409e0	                            or eax, r12d	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x400603d	          0x4889df	                            mov rdi, rbx	      3702	buffer.c	FUNCTION_61	IF_19
0x4006040	    0x890500000000	            mov dword [0x04006046], eax 	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4006050	      0xbe00000000	                              mov esi, 0	      3750	buffer.c	FUNCTION_61	CALL_46
0x4006055	      0xe8b6a1ffff	                      call sym.ti_change	      3750	buffer.c	FUNCTION_61	CALL_46
0x400605a	             0x9c5	                             or ebp, eax	      3752	buffer.c	FUNCTION_61	IF_26
0x400605c	     0xf84f5feffff	                            je 0x4005f57	      3752	buffer.c	FUNCTION_61	IF_26
0x4006062	    0x488b35000000	            mov rsi, qword [0x04006069] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006069	    0x488b3d000000	            mov rdi, qword [0x04006070] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006070	      0xe800000000	                          call 0x4006075	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006075	      0xe9ddfeffff	                           jmp 0x4005f57	      3783	buffer.c	FUNCTION_63	CALL_1
0x400607a	    0x660f1f440000	                    nop word [rax + rax]	      3783	buffer.c	FUNCTION_63	CALL_1
0x4006080	    0x488b0d000000	            mov rcx, qword [0x04006087] 	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006087	            0x31ed	                            xor ebp, ebp	      3543	buffer.c	FUNCTION_61
0x4006089	          0x4885c9	                           test rcx, rcx	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x400608c	            0x7e31	                           jle 0x40060bf	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x400608e	    0x480faf0d0000	            imul rcx, qword [0x04006096]	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4006096	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x40060a0	      0xbd0a000000	                            mov ebp, 0xa	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x40060a5	          0x4889c8	                            mov rax, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x40060a8	          0x48f7ea	                                imul rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x40060ab	          0x4801ca	                            add rdx, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x40060ae	        0x48c1f93f	                           sar rcx, 0x3f	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x40060b2	        0x48c1fa06	                              sar rdx, 6	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x40060b6	          0x4829ca	                            sub rdx, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x40060b9	          0x83fa09	                              cmp edx, 9	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x40060bc	           0xf4fea	                          cmovg ebp, edx	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x40060bf	    0x488b3d000000	            mov rdi, qword [0x040060c6] 	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x40060c6	          0x803f00	                       cmp byte [rdi], 0	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x40060c9	     0xf85f9000000	                           jne 0x40061c8	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x40060cf	    0x488b05000000	            mov rax, qword [0x040060d6] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x40060d6	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x40060dd	          0x4885d2	                           test rdx, rdx	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x40060e0	     0xf8477040000	                            je 0x400655d	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x40060e6	    0x488bb8481c00	          mov rdi, qword [rax + 0x1c48] 	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x40060ed	          0x4885ff	                           test rdi, rdi	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x40060f0	     0xf8432020000	                            je 0x4006328	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x40060f6	      0xe800000000	                          call 0x40060fb	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x40060fb	      0xba9d030000	                          mov edx, 0x39d	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4006100	          0x4889c6	                            mov rsi, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4006103	          0x4889e7	                            mov rdi, rsp	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4006106	          0x4889e3	                            mov rbx, rsp	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4006109	      0xe800000000	                          call 0x400610e	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x400610e	    0x488b3d000000	            mov rdi, qword [0x04006115] 	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4006115	    0x4883bf481c00	             cmp qword [rdi + 0x1c48], 0	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x400611d	     0xf84a7020000	                            je 0x40063ca	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4006123	    0x488b3d000000	            mov rdi, qword [0x0400612a] 	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x400612a	          0x4531c0	                            xor r8d, r8d	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x400612d	          0x4889da	                            mov rdx, rbx	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4006130	      0xb9f7030000	                          mov ecx, 0x3f7	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4006135	    0x488db78c0100	                  lea rsi, [rdi + 0x18c]	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x400613c	    0x4881c7880100	                          add rdi, 0x188	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4006143	      0xe838a8ffff	       call sym.append_arg_number.isra.9	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4006148	    0x4c8b25000000	            mov r12, qword [0x0400614f] 	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x400614f	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_131	CALL_3
0x4006154	          0x4d85e4	                           test r12, r12	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x4006157	     0xf84b3010000	                            je 0x4006310	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x400615d	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_131	CALL_3
0x4006162	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_131	CALL_3
0x4006165	      0xe800000000	                          call 0x400616a	       148	string3.h	FUNCTION_131	CALL_3
0x400616a	      0xba01040000	                          mov edx, 0x401	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x400616f	          0x4c89e6	                            mov rsi, r12	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4006172	          0x4889df	                            mov rdi, rbx	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4006175	      0xe800000000	                          call 0x400617a	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x400617a	            0x85ed	                           test ebp, ebp	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x400617c	            0x7410	                            je 0x400618e	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x400617e	          0x4889df	                            mov rdi, rbx	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x4006181	      0xe800000000	                          call 0x4006186	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x4006186	            0x39c5	                            cmp ebp, eax	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x4006188	     0xf8c32010000	                            jl 0x40062c0	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x400618e	          0x4889df	                            mov rdi, rbx	      3569	buffer.c	FUNCTION_61	IF_3
0x4006191	      0xe912feffff	                           jmp 0x4005fa8	      3569	buffer.c	FUNCTION_61	IF_3
0x4006196	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3569	buffer.c	FUNCTION_61	IF_3
0x40061a0	    0x48833d000000	               cmp qword [0x040061a8], 0	      3557	buffer.c	FUNCTION_61	IF_2
0x40061a8	     0xf85fafdffff	                           jne 0x4005fa8	      3557	buffer.c	FUNCTION_61	IF_2
0x40061ae	    0x48833d000000	               cmp qword [0x040061b6], 0	      3557	buffer.c	FUNCTION_61	IF_2
0x40061b6	     0xf85ecfdffff	                           jne 0x4005fa8	      3557	buffer.c	FUNCTION_61	IF_2
0x40061bc	      0xe996fdffff	                           jmp 0x4005f57	      3557	buffer.c	FUNCTION_61	IF_2
0x40061c1	     0xf1f80000000	                         nop dword [rax]	      3557	buffer.c	FUNCTION_61	IF_2
0x40061c8	    0xf60500000000	               test byte [0x040061cf], 2	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40061cf	     0xf84d3fdffff	                            je 0x4005fa8	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40061d5	            0x31f6	                            xor esi, esi	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40061d7	      0xbf00000000	                              mov edi, 0	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40061dc	          0x4889e3	                            mov rbx, rsp	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40061df	    0x448b25000000	           mov r12d, dword [0x040061e6] 	      3576	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40061e6	      0xe800000000	                          call 0x40061eb	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40061eb	        0x4883ec08	                              sub rsp, 8	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40061ef	    0x488b0d000000	            mov rcx, qword [0x040061f6] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40061f6	    0x488b3d000000	            mov rdi, qword [0x040061fd] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40061fd	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40061ff	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006201	          0x4531c9	                            xor r9d, r9d	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006204	              0x55	                                push rbp	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006205	          0x4189c0	                            mov r8d, eax	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x4006208	      0xba01040000	                          mov edx, 0x401	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x400620d	          0x4889de	                            mov rsi, rbx	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x4006210	    0xc70500000000	               mov dword [0x0400621a], 0	      3581	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x400621a	      0xe800000000	                          call 0x400621f	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x400621f	    0x8b0500000000	            mov eax, dword [0x04006225] 	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4006225	        0x4883c420	                           add rsp, 0x20	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4006229	            0x85c0	                           test eax, eax	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x400622b	     0xf856f010000	                           jne 0x40063a0	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4006231	          0x4409e0	                            or eax, r12d	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006234	          0x4889df	                            mov rdi, rbx	      3569	buffer.c	FUNCTION_61	IF_3
0x4006237	    0x890500000000	            mov dword [0x0400623d], eax 	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x400623d	      0xe966fdffff	                           jmp 0x4005fa8	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006242	    0x660f1f440000	                    nop word [rax + rax]	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4006248	    0x488b3d000000	            mov rdi, qword [0x0400624f] 	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x400624f	      0xe800000000	                          call 0x4006254	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4006254	          0x4885c0	                           test rax, rax	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x4006257	     0xf8403010000	                            je 0x4006360	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x400625d	    0x488b3d000000	            mov rdi, qword [0x04006264] 	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4006264	      0xe800000000	                          call 0x4006269	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x4006269	          0x4989c4	                            mov r12, rax	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x400626c	          0x4c89e7	                            mov rdi, r12	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x400626f	        0xc6042400	                       mov byte [rsp], 0	      3733	buffer.c	FUNCTION_61	IF_19	ELSE_9
0x4006273	      0xe800000000	                          call 0x4006278	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x4006278	          0x83f864	                           cmp eax, 0x64	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x400627b	            0x7e17	                           jle 0x4006294	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x400627d	          0x8d589c	                   lea ebx, [rax - 0x64]	      3738	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006280	    0x8b0500000000	            mov eax, dword [0x04006286] 	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006286	            0x85c0	                           test eax, eax	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006288	     0xf85f2000000	                           jne 0x4006380	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x400628e	          0x4863c3	                         movsxd rax, ebx	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006291	          0x4901c4	                            add r12, rax	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x4006294	      0xba01040000	                          mov edx, 0x401	       110	string3.h	FUNCTION_127	CALL_3
0x4006299	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_127	CALL_3
0x400629c	          0x4889e7	                            mov rdi, rsp	       110	string3.h	FUNCTION_127	CALL_3
0x400629f	      0xe800000000	                          call 0x40062a4	       110	string3.h	FUNCTION_127	CALL_3
0x40062a4	          0x4889e7	                            mov rdi, rsp	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x40062a7	      0xbe01040000	                          mov esi, 0x401	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x40062ac	      0xe800000000	                          call 0x40062b1	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x40062b1	          0x4889e7	                            mov rdi, rsp	      3702	buffer.c	FUNCTION_61	IF_19
0x40062b4	      0xe997fdffff	                           jmp 0x4006050	      3702	buffer.c	FUNCTION_61	IF_19
0x40062b9	     0xf1f80000000	                         nop dword [rax]	      3702	buffer.c	FUNCTION_61	IF_19
0x40062c0	      0xb901040000	                          mov ecx, 0x401	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40062c5	            0x89ea	                            mov edx, ebp	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40062c7	          0x4889de	                            mov rsi, rbx	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40062ca	          0x4889df	                            mov rdi, rbx	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40062cd	      0xe800000000	                          call 0x40062d2	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40062d2	      0xe9b7feffff	                           jmp 0x400618e	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40062d7	    0x660f1f840000	                    nop word [rax + rax]	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x40062e0	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40062e6	      0xb901000000	                              mov ecx, 1	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40062eb	      0xba00000000	                              mov edx, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40062f0	      0xbeffffffff	                     mov esi, 0xffffffff	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40062f5	      0xbf00000000	                              mov edi, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40062fa	      0xe800000000	                          call 0x40062ff	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40062ff	    0x8b0500000000	            mov eax, dword [0x04006305] 	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4006305	      0xe930fdffff	                           jmp 0x400603a	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x400630a	    0x660f1f440000	                    nop word [rax + rax]	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4006310	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_131	CALL_3
0x4006315	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_131	CALL_3
0x4006318	      0xe800000000	                          call 0x400631d	       148	string3.h	FUNCTION_131	CALL_3
0x400631d	      0xe958feffff	                           jmp 0x400617a	       148	string3.h	FUNCTION_131	CALL_3
0x4006322	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_131	CALL_3
0x4006328	          0x4889d7	                            mov rdi, rdx	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x400632b	          0x4889e3	                            mov rbx, rsp	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400632e	      0xe800000000	                          call 0x4006333	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4006333	          0x4889c7	                            mov rdi, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4006336	      0xe800000000	                          call 0x400633b	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x400633b	          0x4889e7	                            mov rdi, rsp	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400633e	          0x4989c4	                            mov r12, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4006341	      0xba9d030000	                          mov edx, 0x39d	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4006346	          0x4889c6	                            mov rsi, rax	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4006349	      0xe800000000	                          call 0x400634e	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400634e	          0x4c89e7	                            mov rdi, r12	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4006351	      0xe800000000	                          call 0x4006356	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4006356	      0xe9b3fdffff	                           jmp 0x400610e	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x400635b	       0xf1f440000	                   nop dword [rax + rax]	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4006360	    0x488b05000000	            mov rax, qword [0x04006367] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006367	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x400636e	      0xe800000000	                          call 0x4006373	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006373	          0x4989c4	                            mov r12, rax	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006376	      0xe9f1feffff	                           jmp 0x400626c	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x400637b	       0xf1f440000	                   nop dword [rax + rax]	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4006380	          0x4863f3	                         movsxd rsi, ebx	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006383	          0x4c89e7	                            mov rdi, r12	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006386	          0x4c01e6	                            add rsi, r12	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006389	      0xe800000000	                          call 0x400638e	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x400638e	        0x8d5c0301	                lea ebx, [rbx + rax + 1]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006392	      0xe9f7feffff	                           jmp 0x400628e	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4006397	    0x660f1f840000	                    nop word [rax + rax]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x40063a0	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40063a6	      0xb901000000	                              mov ecx, 1	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40063ab	      0xba00000000	                              mov edx, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40063b0	      0xbeffffffff	                     mov esi, 0xffffffff	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40063b5	      0xbf00000000	                              mov edi, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40063ba	      0xe800000000	                          call 0x40063bf	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40063bf	    0x8b0500000000	            mov eax, dword [0x040063c5] 	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40063c5	      0xe967feffff	                           jmp 0x4006231	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40063ca	      0xe800000000	                          call 0x40063cf	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40063cf	    0x4c8b25000000	            mov r12, qword [0x040063d6] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40063d6	    0x4183bc244015	            cmp dword [r12 + 0x1540], 1 	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40063df	    0x418b94246015	          mov edx, dword [r12 + 0x1560] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40063e7	          0x8d0450	                  lea eax, [rax + rdx*2]	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40063ea	            0x19d2	                            sbb edx, edx	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40063ec	          0x83e204	                              and edx, 4	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40063ef	             0x1d0	                            add eax, edx	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40063f1	          0x83f807	                              cmp eax, 7	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40063f4	            0x7719	                            ja 0x400640f	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40063f6	    0xff24c5000000	                       jmp qword [rax*8]	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40063fd	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_131	CALL_3
0x4006402	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_131	CALL_3
0x4006407	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_131	CALL_3
0x400640a	      0xe800000000	                          call 0x400640f	       148	string3.h	FUNCTION_131	CALL_3
0x400640f	    0x4983bc249800	               cmp qword [r12 + 0x98], 0	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006418	     0xf8405fdffff	                            je 0x4006123	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400641e	    0x4983bc24481c	             cmp qword [r12 + 0x1c48], 0	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006427	     0xf85f6fcffff	                           jne 0x4006123	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400642d	          0x4889d8	                            mov rax, rbx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006430	            0x8b08	                    mov ecx, dword [rax]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006432	        0x4883c004	                              add rax, 4	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006436	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400643c	            0xf7d1	                                 not ecx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400643e	            0x21ca	                            and edx, ecx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006440	    0x81e280808080	                     and edx, 0x80808080	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006446	            0x74e8	                            je 0x4006430	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006448	            0x89d1	                            mov ecx, edx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400644a	    0x41beed030000	                         mov r14d, 0x3ed	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006450	    0x41b801000000	                              mov r8d, 1	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006456	          0xc1e910	                           shr ecx, 0x10	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006459	    0xf7c280800000	                        test edx, 0x8080	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400645f	          0x4c89e7	                            mov rdi, r12	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006462	           0xf44d1	                          cmove edx, ecx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006465	        0x488d4802	                      lea rcx, [rax + 2]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006469	        0x480f44c1	                          cmove rax, rcx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400646d	            0x89d1	                            mov ecx, edx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400646f	              0xd1	                              add cl, dl	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006471	        0x4883d803	                              sbb rax, 3	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006475	          0x4829d8	                            sub rax, rbx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4006478	          0x4863d0	                         movsxd rdx, eax	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400647b	        0x448d7802	                     lea r15d, [rax + 2]	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400647f	          0x83c001	                              add eax, 1	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006482	            0x4898	                                    cdqe	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006484	        0xc6041420	              mov byte [rsp + rdx], 0x20	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4006488	          0x4d63ef	                        movsxd r13, r15d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400648b	        0xc6040428	              mov byte [rsp + rax], 0x28	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400648f	    0x498bb4248800	            mov rsi, qword [r12 + 0x88] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4006497	          0x4901dd	                            add r13, rbx	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400649a	          0x4529fe	                          sub r14d, r15d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400649d	          0x4489f1	                           mov ecx, r14d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40064a0	          0x4c89ea	                            mov rdx, r13	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40064a3	      0xe800000000	                          call 0x40064a8	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40064a8	          0x4c89ef	                            mov rdi, r13	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x40064ab	      0xe800000000	                          call 0x40064b0	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x40064b0	          0x4939c5	                            cmp r13, rax	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40064b3	     0xf84d7000000	                            je 0x4006590	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40064b9	          0xc60000	                       mov byte [rax], 0	      3659	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5
0x40064bc	    0x4181ffec0300	                         cmp r15d, 0x3ec	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x40064c3	     0xf8faa000000	                            jg 0x4006573	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x40064c9	          0x4c89ef	                            mov rdi, r13	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x40064cc	      0xe800000000	                          call 0x40064d1	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x40064d1	          0x4c89ef	                            mov rdi, r13	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x40064d4	          0x4989c4	                            mov r12, rax	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x40064d7	          0x4963d6	                        movsxd rdx, r14d	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x40064da	          0x4889c6	                            mov rsi, rax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x40064dd	      0xe800000000	                          call 0x40064e2	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x40064e2	          0x4c89e7	                            mov rdi, r12	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x40064e5	      0xe800000000	                          call 0x40064ea	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x40064ea	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_131	CALL_3
0x40064ef	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_131	CALL_3
0x40064f4	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_131	CALL_3
0x40064f7	      0xe800000000	                          call 0x40064fc	       148	string3.h	FUNCTION_131	CALL_3
0x40064fc	      0xe922fcffff	                           jmp 0x4006123	       148	string3.h	FUNCTION_131	CALL_3
0x4006501	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_131	CALL_3
0x4006506	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_131	CALL_3
0x400650b	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_131	CALL_3
0x400650e	      0xe800000000	                          call 0x4006513	       148	string3.h	FUNCTION_131	CALL_3
0x4006513	      0xe9f7feffff	                           jmp 0x400640f	       148	string3.h	FUNCTION_131	CALL_3
0x4006518	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_131	CALL_3
0x400651d	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_131	CALL_3
0x4006522	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_131	CALL_3
0x4006525	      0xe800000000	                          call 0x400652a	       148	string3.h	FUNCTION_131	CALL_3
0x400652a	      0xe9e0feffff	                           jmp 0x400640f	       148	string3.h	FUNCTION_131	CALL_3
0x400652f	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_131	CALL_3
0x4006534	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_131	CALL_3
0x4006539	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_131	CALL_3
0x400653c	      0xe800000000	                          call 0x4006541	       148	string3.h	FUNCTION_131	CALL_3
0x4006541	      0xe9c9feffff	                           jmp 0x400640f	       148	string3.h	FUNCTION_131	CALL_3
0x4006546	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_131	CALL_3
0x400654b	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_131	CALL_3
0x4006550	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_131	CALL_3
0x4006553	      0xe800000000	                          call 0x4006558	       148	string3.h	FUNCTION_131	CALL_3
0x4006558	      0xe9b2feffff	                           jmp 0x400640f	       148	string3.h	FUNCTION_131	CALL_3
0x400655d	      0xba05000000	                              mov edx, 5	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4006562	      0xbe00000000	                              mov esi, 0	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4006567	            0x31ff	                            xor edi, edi	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4006569	      0xe800000000	                          call 0x400656e	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x400656e	      0xe988fbffff	                           jmp 0x40060fb	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4006573	      0xbaf7030000	                          mov edx, 0x3f7	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4006578	      0xbe00000000	                              mov esi, 0	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x400657d	          0x4c89ef	                            mov rdi, r13	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4006580	          0x4429fa	                           sub edx, r15d	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4006583	          0x4863d2	                         movsxd rdx, edx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4006586	      0xe800000000	                          call 0x400658b	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x400658b	      0xe95affffff	                           jmp 0x40064ea	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4006590	            0x31ff	                            xor edi, edi	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4006592	      0xba05000000	                              mov edx, 5	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x4006597	      0xbe00000000	                              mov esi, 0	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x400659c	      0xe800000000	                          call 0x40065a1	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40065a1	      0xbaec030000	                          mov edx, 0x3ec	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40065a6	          0x4889c6	                            mov rsi, rax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40065a9	          0x4c89ef	                            mov rdi, r13	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40065ac	          0x4429fa	                           sub edx, r15d	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40065af	          0x4863d2	                         movsxd rdx, edx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40065b2	      0xe800000000	                          call 0x40065b7	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40065b7	      0xe900ffffff	                           jmp 0x40064bc	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40065bc	      0xe800000000	                          call 0x40065c1	      3754	buffer.c	FUNCTION_61
buf_delete_all_signs	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0	14
0x4009ef0	              0x53	                                push rbx	      6075	buffer.c	FUNCTION_98
0x4009ef1	    0x488b1d000000	            mov rbx, qword [0x04009ef8] 	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009ef8	          0x4885db	                           test rbx, rbx	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009efb	            0x741e	                            je 0x4009f1b	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009efd	           0xf1f00	                         nop dword [rax]	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009f00	    0x4883bb201c00	             cmp qword [rbx + 0x1c20], 0	      6079	buffer.c	FUNCTION_98	IF_1
0x4009f08	            0x7408	                            je 0x4009f12	      6079	buffer.c	FUNCTION_98	IF_1
0x4009f0a	          0x4889df	                            mov rdi, rbx	      6080	buffer.c	FUNCTION_98	CALL_2
0x4009f0d	      0xe800000000	                          call 0x4009f12	      6080	buffer.c	FUNCTION_98	CALL_2
0x4009f12	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009f16	          0x4885db	                           test rbx, rbx	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009f19	            0x75e5	                           jne 0x4009f00	      6078	buffer.c	FUNCTION_98	CALL_1
0x4009f1b	              0x5b	                                 pop rbx	      6081	buffer.c	FUNCTION_98
0x4009f1c	              0xc3	                                     ret	      6081	buffer.c	FUNCTION_98
buf_set_name	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,5:FOR,0:functions,0:ELSE,0	31
0x40020e0	              0x55	                                push rbp	      3173	buffer.c	FUNCTION_48
0x40020e1	              0x53	                                push rbx	      3173	buffer.c	FUNCTION_48
0x40020e2	          0x4889f5	                            mov rbp, rsi	      3173	buffer.c	FUNCTION_48
0x40020e5	        0x4883ec08	                              sub rsp, 8	      3173	buffer.c	FUNCTION_48
0x40020e9	      0xe800000000	                          call 0x40020ee	      3176	buffer.c	FUNCTION_48	CALL_1
0x40020ee	          0x4885c0	                           test rax, rax	      3177	buffer.c	FUNCTION_48	IF_1
0x40020f1	            0x7458	                            je 0x400214b	      3177	buffer.c	FUNCTION_48	IF_1
0x40020f3	    0x488bb8900000	            mov rdi, qword [rax + 0x90] 	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x40020fa	          0x4889c3	                            mov rbx, rax	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x40020fd	      0xe800000000	                          call 0x4002102	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x4002102	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x4002109	      0xe800000000	                          call 0x400210e	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x400210e	          0x4889ef	                            mov rdi, rbp	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x4002111	      0xe800000000	                          call 0x4002116	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x4002116	          0x4885c0	                           test rax, rax	      4799	buffer.c	FUNCTION_69	IF_1
0x4002119	    0x488983880000	             mov qword [rbx + 0x88], rax	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x4002120	            0x7436	                            je 0x4002158	      4799	buffer.c	FUNCTION_69	IF_1
0x4002122	    0x488983900000	             mov qword [rbx + 0x90], rax	      4802	buffer.c	FUNCTION_69	IF_2
0x4002129	      0xbe01000000	                              mov esi, 1	      4759	buffer.c	FUNCTION_68	CALL_1
0x400212e	          0x4889c7	                            mov rdi, rax	      4759	buffer.c	FUNCTION_68	CALL_1
0x4002131	      0xe800000000	                          call 0x4002136	      4759	buffer.c	FUNCTION_68	CALL_1
0x4002136	    0x488983880000	             mov qword [rbx + 0x88], rax	      4803	buffer.c	FUNCTION_69	CALL_1
0x400213d	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	      4803	buffer.c	FUNCTION_69	CALL_1
0x4002144	    0x488983980000	             mov qword [rbx + 0x98], rax	      3186	buffer.c	FUNCTION_48	IF_1
0x400214b	        0x4883c408	                              add rsp, 8	      3188	buffer.c	FUNCTION_48
0x400214f	              0x5b	                                 pop rbx	      3188	buffer.c	FUNCTION_48
0x4002150	              0x5d	                                 pop rbp	      3188	buffer.c	FUNCTION_48
0x4002151	              0xc3	                                     ret	      3188	buffer.c	FUNCTION_48
0x4002152	    0x660f1f440000	                    nop word [rax + rax]	      3188	buffer.c	FUNCTION_48
0x4002158	    0x48c783900000	               mov qword [rbx + 0x90], 0	      3182	buffer.c	FUNCTION_48	IF_1
0x4002163	            0xebdf	                           jmp 0x4002144	      3182	buffer.c	FUNCTION_48	IF_1
buf_getsigntype	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:FOR,1:functions,0:ELSE,0	52
0x4006880	            0x4154	                                push r12	      5914	buffer.c	FUNCTION_91
0x4006882	              0x55	                                push rbp	      5914	buffer.c	FUNCTION_91
0x4006883	              0x53	                                push rbx	      5914	buffer.c	FUNCTION_91
0x4006884	    0x488b9f201c00	          mov rbx, qword [rdi + 0x1c20] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400688b	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400688e	            0x7466	                            je 0x40068f6	      5917	buffer.c	FUNCTION_91	FOR_1
0x4006890	          0x4889f5	                            mov rbp, rsi	      5917	buffer.c	FUNCTION_91	FOR_1
0x4006893	          0x4189d4	                           mov r12d, edx	      5917	buffer.c	FUNCTION_91	FOR_1
0x4006896	            0xeb11	                           jmp 0x40068a9	      5917	buffer.c	FUNCTION_91	FOR_1
0x4006898	     0xf1f84000000	                   nop dword [rax + rax]	      5917	buffer.c	FUNCTION_91	FOR_1
0x40068a0	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x40068a4	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x40068a7	            0x744d	                            je 0x40068f6	      5917	buffer.c	FUNCTION_91	FOR_1
0x40068a9	        0x48396b08	                cmp qword [rbx + 8], rbp	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068ad	            0x75f1	                           jne 0x40068a0	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068af	          0x4585e4	                         test r12d, r12d	      5919	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068b2	            0x7423	                            je 0x40068d7	      5919	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068b4	        0x4183fc02	                             cmp r12d, 2	      5921	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068b8	            0x7426	                            je 0x40068e0	      5921	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068ba	        0x4183fc03	                             cmp r12d, 3	      5924	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068be	            0x7440	                            je 0x4006900	      5924	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068c0	        0x4183fc01	                             cmp r12d, 1	      5926	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068c4	            0x75da	                           jne 0x40068a0	      5926	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068c6	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40068c9	      0xbe01000000	                              mov esi, 1	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40068ce	      0xe800000000	                          call 0x40068d3	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40068d3	            0x85c0	                           test eax, eax	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40068d5	            0x74c9	                            je 0x40068a0	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x40068d7	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0x40068da	              0x5b	                                 pop rbx	      5930	buffer.c	FUNCTION_91
0x40068db	              0x5d	                                 pop rbp	      5930	buffer.c	FUNCTION_91
0x40068dc	            0x415c	                                 pop r12	      5930	buffer.c	FUNCTION_91
0x40068de	              0xc3	                                     ret	      5930	buffer.c	FUNCTION_91
0x40068df	              0x90	                                     nop	      5930	buffer.c	FUNCTION_91
0x40068e0	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x40068e3	      0xe800000000	                          call 0x40068e8	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x40068e8	          0x4885c0	                           test rax, rax	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x40068eb	            0x75ea	                           jne 0x40068d7	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x40068ed	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x40068f1	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x40068f4	            0x75b3	                           jne 0x40068a9	      5917	buffer.c	FUNCTION_91	FOR_1
0x40068f6	              0x5b	                                 pop rbx	      5930	buffer.c	FUNCTION_91
0x40068f7	            0x31c0	                            xor eax, eax	      5929	buffer.c	FUNCTION_91
0x40068f9	              0x5d	                                 pop rbp	      5930	buffer.c	FUNCTION_91
0x40068fa	            0x415c	                                 pop r12	      5930	buffer.c	FUNCTION_91
0x40068fc	              0xc3	                                     ret	      5930	buffer.c	FUNCTION_91
0x40068fd	           0xf1f00	                         nop dword [rax]	      5930	buffer.c	FUNCTION_91
0x4006900	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x4006903	      0xe800000000	                          call 0x4006908	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x4006908	          0x4885c0	                           test rax, rax	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400690b	            0x7493	                            je 0x40068a0	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400690d	            0xebc8	                           jmp 0x40068d7	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
buf_signcount	IF,2:WHILE,0:DO,0:SWITCH,0:CALL,1:FOR,1:functions,0:ELSE,0	29
0x4006a70	            0x4154	                                push r12	      6031	buffer.c	FUNCTION_96
0x4006a72	              0x55	                                push rbp	      6031	buffer.c	FUNCTION_96
0x4006a73	              0x53	                                push rbx	      6031	buffer.c	FUNCTION_96
0x4006a74	    0x488b9f201c00	          mov rbx, qword [rdi + 0x1c20] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a7b	          0x4885db	                           test rbx, rbx	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a7e	            0x7440	                            je 0x4006ac0	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a80	          0x4889f5	                            mov rbp, rsi	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a83	          0x4531e4	                          xor r12d, r12d	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a86	            0xeb11	                           jmp 0x4006a99	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a88	     0xf1f84000000	                   nop dword [rax + rax]	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a90	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a94	          0x4885db	                           test rbx, rbx	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a97	            0x741f	                            je 0x4006ab8	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006a99	        0x48396b08	                cmp qword [rbx + 8], rbp	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x4006a9d	            0x75f1	                           jne 0x4006a90	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x4006a9f	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x4006aa2	      0xe800000000	                          call 0x4006aa7	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x4006aa7	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006aab	        0x4883f801	                              cmp rax, 1	      6038	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4006aaf	        0x4183dcff	            sbb r12d, 0xffffffffffffffff	      6038	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4006ab3	          0x4885db	                           test rbx, rbx	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006ab6	            0x75e1	                           jne 0x4006a99	      6035	buffer.c	FUNCTION_96	FOR_1
0x4006ab8	          0x4489e0	                           mov eax, r12d	      6041	buffer.c	FUNCTION_96
0x4006abb	              0x5b	                                 pop rbx	      6041	buffer.c	FUNCTION_96
0x4006abc	              0x5d	                                 pop rbp	      6041	buffer.c	FUNCTION_96
0x4006abd	            0x415c	                                 pop r12	      6041	buffer.c	FUNCTION_96
0x4006abf	              0xc3	                                     ret	      6041	buffer.c	FUNCTION_96
0x4006ac0	          0x4531e4	                          xor r12d, r12d	      6033	buffer.c	FUNCTION_96
0x4006ac3	            0xebf3	                           jmp 0x4006ab8	      6033	buffer.c	FUNCTION_96
handle_swap_exists	IF,5:WHILE,0:DO,0:SWITCH,0:CALL,12:FOR,0:functions,0:ELSE,2	98
0x4009580	            0x4154	                                push r12	      1009	buffer.c	FUNCTION_16
0x4009582	              0x55	                                push rbp	      1009	buffer.c	FUNCTION_16
0x4009583	              0x53	                                push rbx	      1009	buffer.c	FUNCTION_16
0x4009584	        0x4883ec20	                           sub rsp, 0x20	      1009	buffer.c	FUNCTION_16
0x4009588	    0x64488b042528	                mov rax, qword fs:[0x28]	      1009	buffer.c	FUNCTION_16
0x4009591	      0x4889442418	             mov qword [rsp + 0x18], rax	      1009	buffer.c	FUNCTION_16
0x4009596	            0x31c0	                            xor eax, eax	      1009	buffer.c	FUNCTION_16
0x4009598	    0x8b0500000000	            mov eax, dword [0x0400959e] 	      1018	buffer.c	FUNCTION_16	IF_1
0x400959e	          0x83f802	                              cmp eax, 2	      1018	buffer.c	FUNCTION_16	IF_1
0x40095a1	            0x747d	                            je 0x4009620	      1018	buffer.c	FUNCTION_16	IF_1
0x40095a3	          0x83f803	                              cmp eax, 3	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40095a6	            0x7428	                            je 0x40095d0	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40095a8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1075	buffer.c	FUNCTION_16
0x40095ad	    0x644833042528	                xor rax, qword fs:[0x28]	      1075	buffer.c	FUNCTION_16
0x40095b6	    0xc70500000000	               mov dword [0x040095c0], 0	      1074	buffer.c	FUNCTION_16
0x40095c0	     0xf8557010000	                           jne 0x400971d	      1075	buffer.c	FUNCTION_16
0x40095c6	        0x4883c420	                           add rsp, 0x20	      1075	buffer.c	FUNCTION_16
0x40095ca	              0x5b	                                 pop rbx	      1075	buffer.c	FUNCTION_16
0x40095cb	              0x5d	                                 pop rbp	      1075	buffer.c	FUNCTION_16
0x40095cc	            0x415c	                                 pop r12	      1075	buffer.c	FUNCTION_16
0x40095ce	              0xc3	                                     ret	      1075	buffer.c	FUNCTION_16
0x40095cf	              0x90	                                     nop	      1075	buffer.c	FUNCTION_16
0x40095d0	          0x4889e7	                            mov rdi, rsp	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x40095d3	          0x4889e5	                            mov rbp, rsp	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x40095d6	      0xe800000000	                          call 0x40095db	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x40095db	    0xc70500000000	               mov dword [0x040095e5], 1	      1062	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40095e5	      0xe800000000	                          call 0x40095ea	      1063	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_9
0x40095ea	      0xbf00000000	                              mov edi, 0	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x40095ef	      0xe800000000	                          call 0x40095f4	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x40095f4	    0x8b0500000000	            mov eax, dword [0x040095fa] 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x40095fa	    0x890500000000	            mov dword [0x04009600], eax 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x4009600	    0x488b05000000	            mov rax, qword [0x04009607] 	      5340	buffer.c	FUNCTION_73	IF_1
0x4009607	    0x8b8038150000	          mov eax, dword [rax + 0x1538] 	      5340	buffer.c	FUNCTION_73	IF_1
0x400960d	            0x85c0	                           test eax, eax	      5340	buffer.c	FUNCTION_73	IF_1
0x400960f	     0xf85f3000000	                           jne 0x4009708	      5340	buffer.c	FUNCTION_73	IF_1
0x4009615	          0x4889ef	                            mov rdi, rbp	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x4009618	      0xe800000000	                          call 0x400961d	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x400961d	            0xeb89	                           jmp 0x40095a8	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x400961f	              0x90	                                     nop	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x4009620	    0x488b05000000	            mov rax, qword [0x04009627] 	      1014	buffer.c	FUNCTION_16
0x4009627	          0x4889fb	                            mov rbx, rdi	      1014	buffer.c	FUNCTION_16
0x400962a	          0x4889e7	                            mov rdi, rsp	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x400962d	          0x4889e5	                            mov rbp, rsp	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x4009630	    0x4c8ba0b81500	          mov r12, qword [rax + 0x15b8] 	      1014	buffer.c	FUNCTION_16
0x4009637	      0xe800000000	                          call 0x400963c	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x400963c	    0x488b35000000	            mov rsi, qword [0x04009643] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x4009643	    0x488b3d000000	            mov rdi, qword [0x0400964a] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400964a	            0x31c9	                            xor ecx, ecx	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400964c	      0xba02000000	                              mov edx, 2	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x4009651	    0xc70500000000	               mov dword [0x0400965b], 0	      1029	buffer.c	FUNCTION_16	IF_1
0x400965b	    0xc70500000000	               mov dword [0x04009665], 1	      1030	buffer.c	FUNCTION_16	IF_1
0x4009665	      0xe800000000	                          call 0x400966a	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400966a	          0x4885db	                           test rbx, rbx	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400966d	            0x7449	                            je 0x40096b8	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x400966f	    0x8b0500000000	            mov eax, dword [0x04009675] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4009675	          0x39430c	              cmp dword [rbx + 0xc], eax	       377	buffer.c	FUNCTION_4	CALL_1
0x4009678	     0xf849a000000	                            je 0x4009718	       377	buffer.c	FUNCTION_4	CALL_1
0x400967e	    0x488b15000000	            mov rdx, qword [0x04009685] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4009685	          0x488b03	                    mov rax, qword [rbx]	       377	buffer.c	FUNCTION_4	CALL_1
0x4009688	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x400968b	            0x750c	                           jne 0x4009699	       392	buffer.c	FUNCTION_5	FOR_1
0x400968d	            0xeb29	                           jmp 0x40096b8	       392	buffer.c	FUNCTION_5	FOR_1
0x400968f	              0x90	                                     nop	       392	buffer.c	FUNCTION_5	FOR_1
0x4009690	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4009694	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x4009697	            0x741f	                            je 0x40096b8	       392	buffer.c	FUNCTION_5	FOR_1
0x4009699	          0x4839d0	                            cmp rax, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400969c	            0x75f2	                           jne 0x4009690	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400969e	    0x8b88b8000000	            mov ecx, dword [rax + 0xb8] 	       378	buffer.c	FUNCTION_4
0x40096a4	          0x394b08	                cmp dword [rbx + 8], ecx	       378	buffer.c	FUNCTION_4
0x40096a7	            0x750f	                           jne 0x40096b8	       378	buffer.c	FUNCTION_4
0x40096a9	          0x4889c7	                            mov rdi, rax	       378	buffer.c	FUNCTION_4
0x40096ac	    0x48393d000000	            cmp qword [0x040096b3], rdi 	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x40096b3	            0x7519	                           jne 0x40096ce	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x40096b5	           0xf1f00	                         nop dword [rax]	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x40096b8	            0x31ff	                            xor edi, edi	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x40096ba	      0xb903000000	                              mov ecx, 3	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x40096bf	      0xba01000000	                              mov edx, 1	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x40096c4	            0x31f6	                            xor esi, esi	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x40096c6	      0xe800000000	                          call 0x40096cb	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x40096cb	          0x4889c7	                            mov rdi, rax	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x40096ce	          0x4885ff	                           test rdi, rdi	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x40096d1	     0xf843effffff	                            je 0x4009615	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x40096d7	      0xe800000000	                          call 0x40096dc	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x40096dc	    0x488b05000000	            mov rax, qword [0x040096e3] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40096e3	    0x4c3ba0b81500	          cmp r12, qword [rax + 0x15b8] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40096ea	     0xf8425ffffff	                            je 0x4009615	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x40096f0	    0x488b3d000000	            mov rdi, qword [0x040096f7] 	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x40096f7	      0xe800000000	                          call 0x40096fc	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x40096fc	      0xe914ffffff	                           jmp 0x4009615	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x4009701	     0xf1f80000000	                         nop dword [rax]	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x4009708	            0x31ff	                            xor edi, edi	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x400970a	      0xe8a174ffff	           call sym.do_modelines.part.14	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x400970f	      0xe901ffffff	                           jmp 0x4009615	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x4009714	         0xf1f4000	                         nop dword [rax]	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x4009718	          0x488b3b	                    mov rdi, qword [rbx]	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x400971b	            0xeb8f	                           jmp 0x40096ac	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x400971d	      0xe800000000	                          call 0x4009722	      1075	buffer.c	FUNCTION_16
empty_curbuf	IF,4:WHILE,0:DO,0:SWITCH,0:CALL,8:FOR,0:functions,0:ELSE,0	89
0x4007bd0	            0x4157	                                push r15	      1216	buffer.c	FUNCTION_18
0x4007bd2	            0x4156	                                push r14	      1216	buffer.c	FUNCTION_18
0x4007bd4	            0x4155	                                push r13	      1216	buffer.c	FUNCTION_18
0x4007bd6	            0x4154	                                push r12	      1216	buffer.c	FUNCTION_18
0x4007bd8	              0x55	                                push rbp	      1216	buffer.c	FUNCTION_18
0x4007bd9	              0x53	                                push rbx	      1216	buffer.c	FUNCTION_18
0x4007bda	        0x4883ec18	                           sub rsp, 0x18	      1216	buffer.c	FUNCTION_18
0x4007bde	          0x83fa02	                              cmp edx, 2	      1221	buffer.c	FUNCTION_18	IF_1
0x4007be1	    0x488b1d000000	            mov rbx, qword [0x04007be8] 	      1218	buffer.c	FUNCTION_18
0x4007be8	     0xf8402010000	                            je 0x4007cf0	      1221	buffer.c	FUNCTION_18	IF_1
0x4007bee	          0x4885db	                           test rbx, rbx	       362	buffer.c	FUNCTION_3
0x4007bf1	            0x89fd	                            mov ebp, edi	       362	buffer.c	FUNCTION_3
0x4007bf3	          0x4189f7	                           mov r15d, esi	       362	buffer.c	FUNCTION_3
0x4007bf6	          0x4189d4	                           mov r12d, edx	       362	buffer.c	FUNCTION_3
0x4007bf9	     0xf84e9000000	                            je 0x4007ce8	       362	buffer.c	FUNCTION_3
0x4007bff	    0x448babb80000	           mov r13d, dword [rbx + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4007c06	            0x85ed	                           test ebp, ebp	      1228	buffer.c	FUNCTION_18	IF_2
0x4007c08	    0x448b35000000	           mov r14d, dword [0x04007c0f] 	       363	buffer.c	FUNCTION_3
0x4007c0f	     0xf85bb000000	                           jne 0x4007cd0	      1228	buffer.c	FUNCTION_18	IF_2
0x4007c15	      0xe800000000	                          call 0x4007c1a	      1232	buffer.c	FUNCTION_18	CALL_5
0x4007c1a	        0x4183ff01	                             cmp r15d, 1	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c1e	    0x41b801000000	                              mov r8d, 1	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c24	          0x4519c9	                            sbb r9d, r9d	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c27	        0x4883ec08	                              sub rsp, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c2b	    0xff3500000000	                 push qword [0x04007c31]	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c31	          0x41f7d1	                                 not r9d	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c34	            0x31c9	                            xor ecx, ecx	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c36	            0x31f6	                            xor esi, esi	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c38	        0x4183e108	                              and r9d, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c3c	            0x31d2	                            xor edx, edx	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c3e	            0x31ff	                            xor edi, edi	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c40	      0xe800000000	                          call 0x4007c45	      1233	buffer.c	FUNCTION_18	CALL_6
0x4007c45	    0x483b1d000000	            cmp rbx, qword [0x04007c4c] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007c4c	              0x59	                                 pop rcx	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007c4d	              0x5e	                                 pop rsi	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007c4e	            0x7440	                            je 0x4007c90	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007c50	    0x443b35000000	           cmp r14d, dword [0x04007c57] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4007c57	            0x7457	                            je 0x4007cb0	       377	buffer.c	FUNCTION_4	CALL_1
0x4007c59	    0x488b15000000	            mov rdx, qword [0x04007c60] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007c60	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x4007c63	            0x7514	                           jne 0x4007c79	       392	buffer.c	FUNCTION_5	FOR_1
0x4007c65	            0xeb29	                           jmp 0x4007c90	       392	buffer.c	FUNCTION_5	FOR_1
0x4007c67	    0x660f1f840000	                    nop word [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4007c70	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007c74	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x4007c77	            0x7417	                            je 0x4007c90	       392	buffer.c	FUNCTION_5	FOR_1
0x4007c79	          0x4839d3	                            cmp rbx, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007c7c	            0x75f2	                           jne 0x4007c70	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007c7e	    0x443babb80000	           cmp r13d, dword [rbx + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4007c85	            0x7429	                            je 0x4007cb0	       378	buffer.c	FUNCTION_4
0x4007c87	    0x660f1f840000	                    nop word [rax + rax]	       378	buffer.c	FUNCTION_4
0x4007c90	            0x85ed	                           test ebp, ebp	      1243	buffer.c	FUNCTION_18	IF_4
0x4007c92	            0x750a	                           jne 0x4007c9e	      1243	buffer.c	FUNCTION_18	IF_4
0x4007c94	    0xc70500000000	               mov dword [0x04007c9e], 0	      1244	buffer.c	FUNCTION_18	IF_4
0x4007c9e	        0x4883c418	                           add rsp, 0x18	      1246	buffer.c	FUNCTION_18
0x4007ca2	              0x5b	                                 pop rbx	      1246	buffer.c	FUNCTION_18
0x4007ca3	              0x5d	                                 pop rbp	      1246	buffer.c	FUNCTION_18
0x4007ca4	            0x415c	                                 pop r12	      1246	buffer.c	FUNCTION_18
0x4007ca6	            0x415d	                                 pop r13	      1246	buffer.c	FUNCTION_18
0x4007ca8	            0x415e	                                 pop r14	      1246	buffer.c	FUNCTION_18
0x4007caa	            0x415f	                                 pop r15	      1246	buffer.c	FUNCTION_18
0x4007cac	              0xc3	                                     ret	      1246	buffer.c	FUNCTION_18
0x4007cad	           0xf1f00	                         nop dword [rax]	      1246	buffer.c	FUNCTION_18
0x4007cb0	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007cb3	            0x85d2	                           test edx, edx	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007cb5	            0x75d9	                           jne 0x4007c90	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4007cb7	            0x31c9	                            xor ecx, ecx	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007cb9	          0x4489e2	                           mov edx, r12d	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007cbc	          0x4889de	                            mov rsi, rbx	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007cbf	            0x31ff	                            xor edi, edi	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007cc1	        0x8944240c	              mov dword [rsp + 0xc], eax	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007cc5	      0xe800000000	                          call 0x4007cca	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007cca	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007cce	            0xebc0	                           jmp 0x4007c90	      1242	buffer.c	FUNCTION_18	CALL_8
0x4007cd0	      0xbe01000000	                              mov esi, 1	      1230	buffer.c	FUNCTION_18	CALL_4
0x4007cd5	          0x4889df	                            mov rdi, rbx	      1230	buffer.c	FUNCTION_18	CALL_4
0x4007cd8	      0xe800000000	                          call 0x4007cdd	      1230	buffer.c	FUNCTION_18	CALL_4
0x4007cdd	      0xe933ffffff	                           jmp 0x4007c15	      1230	buffer.c	FUNCTION_18	CALL_4
0x4007ce2	    0x660f1f440000	                    nop word [rax + rax]	      1230	buffer.c	FUNCTION_18	CALL_4
0x4007ce8	          0x4531ed	                          xor r13d, r13d	       362	buffer.c	FUNCTION_3
0x4007ceb	      0xe916ffffff	                           jmp 0x4007c06	       362	buffer.c	FUNCTION_3
0x4007cf0	      0xba05000000	                              mov edx, 5	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007cf5	      0xbe00000000	                              mov esi, 0	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007cfa	            0x31ff	                            xor edi, edi	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007cfc	      0xe800000000	                          call 0x4007d01	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007d01	          0x4889c7	                            mov rdi, rax	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007d04	      0xe800000000	                          call 0x4007d09	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4007d09	            0x31c0	                            xor eax, eax	      1224	buffer.c	FUNCTION_18	IF_1
0x4007d0b	            0xeb91	                           jmp 0x4007c9e	      1224	buffer.c	FUNCTION_18	IF_1
buf_freeall	IF,12:WHILE,0:DO,0:SWITCH,0:CALL,21:FOR,0:functions,0:ELSE,0	191
0x4000ea0	            0x4157	                                push r15	       720	buffer.c	FUNCTION_10
0x4000ea2	            0x4156	                                push r14	       720	buffer.c	FUNCTION_10
0x4000ea4	          0x4989ff	                            mov r15, rdi	       720	buffer.c	FUNCTION_10
0x4000ea7	            0x4155	                                push r13	       720	buffer.c	FUNCTION_10
0x4000ea9	            0x4154	                                push r12	       720	buffer.c	FUNCTION_10
0x4000eab	              0x55	                                push rbp	       720	buffer.c	FUNCTION_10
0x4000eac	              0x53	                                push rbx	       720	buffer.c	FUNCTION_10
0x4000ead	            0x89f5	                            mov ebp, esi	       720	buffer.c	FUNCTION_10
0x4000eaf	        0x4883ec18	                           sub rsp, 0x18	       720	buffer.c	FUNCTION_10
0x4000eb3	    0x4c8b35000000	            mov r14, qword [0x04000eba] 	       723	buffer.c	FUNCTION_10
0x4000eba	    0x4c8b2d000000	            mov r13, qword [0x04000ec1] 	       721	buffer.c	FUNCTION_10
0x4000ec1	          0x4d85f6	                           test r14, r14	       723	buffer.c	FUNCTION_10
0x4000ec4	     0xf84cf020000	                            je 0x4001199	       723	buffer.c	FUNCTION_10
0x4000eca	            0x31db	                            xor ebx, ebx	       723	buffer.c	FUNCTION_10
0x4000ecc	        0x49397e08	                cmp qword [r14 + 8], rdi	       723	buffer.c	FUNCTION_10
0x4000ed0	           0xf94c3	                                 sete bl	       723	buffer.c	FUNCTION_10
0x4000ed3	    0x488b05000000	            mov rax, qword [0x04000eda] 	       725	buffer.c	FUNCTION_10
0x4000eda	    0x418387800000	               add dword [r15 + 0x80], 1	       728	buffer.c	FUNCTION_10
0x4000ee2	      0x49837f0800	                  cmp qword [r15 + 8], 0	       730	buffer.c	FUNCTION_10	IF_1
0x4000ee7	    0x448b25000000	           mov r12d, dword [0x04000eee] 	       363	buffer.c	FUNCTION_3
0x4000eee	      0x4889442408	                mov qword [rsp + 8], rax	       725	buffer.c	FUNCTION_10
0x4000ef3	    0x418b87b80000	            mov eax, dword [r15 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4000efa	        0x89442404	                mov dword [rsp + 4], eax	       362	buffer.c	FUNCTION_3
0x4000efe	            0x7468	                            je 0x4000f68	       730	buffer.c	FUNCTION_10	IF_1
0x4000f00	    0x498bb7980000	            mov rsi, qword [r15 + 0x98] 	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000f07	            0x31c9	                            xor ecx, ecx	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000f09	          0x4d89f8	                             mov r8, r15	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000f0c	      0xbf0c000000	                            mov edi, 0xc	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000f11	          0x4889f2	                            mov rdx, rsi	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000f14	      0xe800000000	                          call 0x4000f19	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000f19	            0x85c0	                           test eax, eax	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000f1b	            0x744b	                            je 0x4000f68	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000f1d	    0x443b25000000	           cmp r12d, dword [0x04000f24] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4000f24	            0x7442	                            je 0x4000f68	       377	buffer.c	FUNCTION_4	CALL_1
0x4000f26	    0x488b05000000	            mov rax, qword [0x04000f2d] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4000f2d	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4000f30	            0x750f	                           jne 0x4000f41	       392	buffer.c	FUNCTION_5	FOR_1
0x4000f32	            0xeb1f	                           jmp 0x4000f53	       392	buffer.c	FUNCTION_5	FOR_1
0x4000f34	         0xf1f4000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4000f38	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4000f3c	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4000f3f	            0x7412	                            je 0x4000f53	       392	buffer.c	FUNCTION_5	FOR_1
0x4000f41	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000f44	            0x75f2	                           jne 0x4000f38	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000f46	        0x8b442404	                mov eax, dword [rsp + 4]	       378	buffer.c	FUNCTION_4
0x4000f4a	    0x413b87b80000	            cmp eax, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4000f51	            0x7415	                            je 0x4000f68	       378	buffer.c	FUNCTION_4
0x4000f53	        0x4883c418	                           add rsp, 0x18	       814	buffer.c	FUNCTION_10
0x4000f57	              0x5b	                                 pop rbx	       814	buffer.c	FUNCTION_10
0x4000f58	              0x5d	                                 pop rbp	       814	buffer.c	FUNCTION_10
0x4000f59	            0x415c	                                 pop r12	       814	buffer.c	FUNCTION_10
0x4000f5b	            0x415d	                                 pop r13	       814	buffer.c	FUNCTION_10
0x4000f5d	            0x415e	                                 pop r14	       814	buffer.c	FUNCTION_10
0x4000f5f	            0x415f	                                 pop r15	       814	buffer.c	FUNCTION_10
0x4000f61	              0xc3	                                     ret	       814	buffer.c	FUNCTION_10
0x4000f62	    0x660f1f440000	                    nop word [rax + rax]	       814	buffer.c	FUNCTION_10
0x4000f68	        0x40f6c501	                             test bpl, 1	       738	buffer.c	FUNCTION_10	IF_3
0x4000f6c	     0xf85ee000000	                           jne 0x4001060	       738	buffer.c	FUNCTION_10	IF_3
0x4000f72	        0x40f6c502	                             test bpl, 2	       746	buffer.c	FUNCTION_10	IF_5
0x4000f76	     0xf8580010000	                           jne 0x40010fc	       746	buffer.c	FUNCTION_10	IF_5
0x4000f7c	    0x4183af800000	               sub dword [r15 + 0x80], 1	       754	buffer.c	FUNCTION_10
0x4000f84	            0x85db	                           test ebx, ebx	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000f86	            0x7419	                            je 0x4000fa1	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000f88	    0x4c3b35000000	            cmp r14, qword [0x04000f8f] 	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000f8f	            0x7410	                            je 0x4000fa1	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000f91	          0x4c89f7	                            mov rdi, r14	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000f94	      0xe800000000	                          call 0x4000f99	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000f99	            0x85c0	                           test eax, eax	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000f9b	     0xf85dc010000	                           jne 0x400117d	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000fa1	      0xe800000000	                          call 0x4000fa6	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4000fa6	            0x85c0	                           test eax, eax	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4000fa8	            0x75a9	                           jne 0x4000f53	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4000faa	    0x4c393d000000	            cmp qword [0x04000fb1], r15 	       777	buffer.c	FUNCTION_10	IF_9
0x4000fb1	            0x7505	                           jne 0x4000fb8	       777	buffer.c	FUNCTION_10	IF_9
0x4000fb3	          0x4d39fd	                            cmp r13, r15	       777	buffer.c	FUNCTION_10	IF_9
0x4000fb6	            0x759b	                           jne 0x4000f53	       777	buffer.c	FUNCTION_10	IF_9
0x4000fb8	          0x4c89ff	                            mov rdi, r15	       780	buffer.c	FUNCTION_10	CALL_13
0x4000fbb	      0xe800000000	                          call 0x4000fc0	       780	buffer.c	FUNCTION_10	CALL_13
0x4000fc0	    0x488b3d000000	            mov rdi, qword [0x04000fc7] 	       784	buffer.c	FUNCTION_10	IF_10
0x4000fc7	          0x4885ff	                           test rdi, rdi	       784	buffer.c	FUNCTION_10	IF_10
0x4000fca	            0x740a	                            je 0x4000fd6	       784	buffer.c	FUNCTION_10	IF_10
0x4000fcc	        0x4c3b7f08	                cmp r15, qword [rdi + 8]	       784	buffer.c	FUNCTION_10	IF_10
0x4000fd0	     0xf84ca010000	                            je 0x40011a0	       784	buffer.c	FUNCTION_10	IF_10
0x4000fd6	    0x4c8b25000000	            mov r12, qword [0x04000fdd] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000fdd	          0x4d85e4	                           test r12, r12	       794	buffer.c	FUNCTION_10	CALL_15
0x4000fe0	            0x743a	                            je 0x400101c	       794	buffer.c	FUNCTION_10	CALL_15
0x4000fe2	    0x660f1f440000	                    nop word [rax + rax]	       794	buffer.c	FUNCTION_10	CALL_15
0x4000fe8	    0x4c3925000000	            cmp qword [0x04000fef], r12 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000fef	     0xf84fb000000	                            je 0x40010f0	       794	buffer.c	FUNCTION_10	CALL_15
0x4000ff5	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000ffa	            0xeb12	                           jmp 0x400100e	       794	buffer.c	FUNCTION_10	CALL_15
0x4000ffc	         0xf1f4000	                         nop dword [rax]	       794	buffer.c	FUNCTION_10	CALL_15
0x4001000	        0x4c3b7b08	                cmp r15, qword [rbx + 8]	       795	buffer.c	FUNCTION_10	IF_11
0x4001004	     0xf84d6000000	                            je 0x40010e0	       795	buffer.c	FUNCTION_10	IF_11
0x400100a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x400100e	          0x4885db	                           test rbx, rbx	       794	buffer.c	FUNCTION_10	CALL_15
0x4001011	            0x75ed	                           jne 0x4001000	       794	buffer.c	FUNCTION_10	CALL_15
0x4001013	        0x4d8b2424	                    mov r12, qword [r12]	       794	buffer.c	FUNCTION_10	CALL_15
0x4001017	          0x4d85e4	                           test r12, r12	       794	buffer.c	FUNCTION_10	CALL_15
0x400101a	            0x75cc	                           jne 0x4000fe8	       794	buffer.c	FUNCTION_10	CALL_15
0x400101c	      0xbe01000000	                              mov esi, 1	       803	buffer.c	FUNCTION_10	CALL_18
0x4001021	          0x4c89ff	                            mov rdi, r15	       803	buffer.c	FUNCTION_10	CALL_18
0x4001024	      0xe800000000	                          call 0x4001029	       803	buffer.c	FUNCTION_10	CALL_18
0x4001029	          0x83e504	                              and ebp, 4	       805	buffer.c	FUNCTION_10	IF_12
0x400102c	    0x49c707000000	                      mov qword [r15], 0	       804	buffer.c	FUNCTION_10
0x4001033	     0xf842f010000	                            je 0x4001168	       805	buffer.c	FUNCTION_10	IF_12
0x4001039	    0x498dbf681700	                 lea rdi, [r15 + 0x1768]	       811	buffer.c	FUNCTION_10	CALL_21
0x4001040	      0xe800000000	                          call 0x4001045	       811	buffer.c	FUNCTION_10	CALL_21
0x4001045	      0x4183677cbf	      and dword [r15 + 0x7c], 0xffffffbf	       813	buffer.c	FUNCTION_10
0x400104a	        0x4883c418	                           add rsp, 0x18	       814	buffer.c	FUNCTION_10
0x400104e	              0x5b	                                 pop rbx	       814	buffer.c	FUNCTION_10
0x400104f	              0x5d	                                 pop rbp	       814	buffer.c	FUNCTION_10
0x4001050	            0x415c	                                 pop r12	       814	buffer.c	FUNCTION_10
0x4001052	            0x415d	                                 pop r13	       814	buffer.c	FUNCTION_10
0x4001054	            0x415e	                                 pop r14	       814	buffer.c	FUNCTION_10
0x4001056	            0x415f	                                 pop r15	       814	buffer.c	FUNCTION_10
0x4001058	              0xc3	                                     ret	       814	buffer.c	FUNCTION_10
0x4001059	     0xf1f80000000	                         nop dword [rax]	       814	buffer.c	FUNCTION_10
0x4001060	    0x418b87241400	          mov eax, dword [r15 + 0x1424] 	       738	buffer.c	FUNCTION_10	IF_3
0x4001067	            0x85c0	                           test eax, eax	       738	buffer.c	FUNCTION_10	IF_3
0x4001069	     0xf8403ffffff	                            je 0x4000f72	       738	buffer.c	FUNCTION_10	IF_3
0x400106f	    0x498bb7980000	            mov rsi, qword [r15 + 0x98] 	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001076	            0x31c9	                            xor ecx, ecx	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001078	          0x4d89f8	                             mov r8, r15	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400107b	      0xbf01000000	                              mov edi, 1	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001080	          0x4889f2	                            mov rdx, rsi	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001083	      0xe800000000	                          call 0x4001088	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001088	            0x85c0	                           test eax, eax	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400108a	     0xf84e2feffff	                            je 0x4000f72	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4001090	    0x443b25000000	           cmp r12d, dword [0x04001097] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4001097	     0xf84d5feffff	                            je 0x4000f72	       377	buffer.c	FUNCTION_4	CALL_1
0x400109d	    0x488b05000000	            mov rax, qword [0x040010a4] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40010a4	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40010a7	            0x7514	                           jne 0x40010bd	       392	buffer.c	FUNCTION_5	FOR_1
0x40010a9	      0xe9a5feffff	                           jmp 0x4000f53	       392	buffer.c	FUNCTION_5	FOR_1
0x40010ae	            0x6690	                                     nop	       392	buffer.c	FUNCTION_5	FOR_1
0x40010b0	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40010b4	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40010b7	     0xf8496feffff	                            je 0x4000f53	       392	buffer.c	FUNCTION_5	FOR_1
0x40010bd	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40010c0	            0x75ee	                           jne 0x40010b0	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40010c2	        0x8b442404	                mov eax, dword [rsp + 4]	       378	buffer.c	FUNCTION_4
0x40010c6	    0x413b87b80000	            cmp eax, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x40010cd	     0xf8580feffff	                           jne 0x4000f53	       378	buffer.c	FUNCTION_4
0x40010d3	      0xe99afeffff	                           jmp 0x4000f72	       378	buffer.c	FUNCTION_4
0x40010d8	     0xf1f84000000	                   nop dword [rax + rax]	       378	buffer.c	FUNCTION_4
0x40010e0	          0x4889df	                            mov rdi, rbx	       796	buffer.c	FUNCTION_10	CALL_16
0x40010e3	      0xe800000000	                          call 0x40010e8	       796	buffer.c	FUNCTION_10	CALL_16
0x40010e8	      0xe91dffffff	                           jmp 0x400100a	       796	buffer.c	FUNCTION_10	CALL_16
0x40010ed	           0xf1f00	                         nop dword [rax]	       796	buffer.c	FUNCTION_10	CALL_16
0x40010f0	    0x488b1d000000	            mov rbx, qword [0x040010f7] 	       794	buffer.c	FUNCTION_10	CALL_15
0x40010f7	      0xe912ffffff	                           jmp 0x400100e	       794	buffer.c	FUNCTION_10	CALL_15
0x40010fc	    0x498bb7980000	            mov rsi, qword [r15 + 0x98] 	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001103	            0x31c9	                            xor ecx, ecx	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001105	          0x4d89f8	                             mov r8, r15	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001108	      0xbf0f000000	                            mov edi, 0xf	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x400110d	          0x4889f2	                            mov rdx, rsi	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001110	      0xe800000000	                          call 0x4001115	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001115	            0x85c0	                           test eax, eax	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4001117	     0xf845ffeffff	                            je 0x4000f7c	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x400111d	    0x443b25000000	           cmp r12d, dword [0x04001124] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4001124	     0xf8452feffff	                            je 0x4000f7c	       377	buffer.c	FUNCTION_4	CALL_1
0x400112a	    0x488b05000000	            mov rax, qword [0x04001131] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4001131	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4001134	            0x7517	                           jne 0x400114d	       392	buffer.c	FUNCTION_5	FOR_1
0x4001136	      0xe918feffff	                           jmp 0x4000f53	       392	buffer.c	FUNCTION_5	FOR_1
0x400113b	       0xf1f440000	                   nop dword [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4001140	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4001144	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4001147	     0xf8406feffff	                            je 0x4000f53	       392	buffer.c	FUNCTION_5	FOR_1
0x400114d	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4001150	            0x75ee	                           jne 0x4001140	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4001152	        0x8b442404	                mov eax, dword [rsp + 4]	       378	buffer.c	FUNCTION_4
0x4001156	    0x413b87b80000	            cmp eax, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x400115d	     0xf85f0fdffff	                           jne 0x4000f53	       378	buffer.c	FUNCTION_4
0x4001163	      0xe914feffff	                           jmp 0x4000f7c	       378	buffer.c	FUNCTION_4
0x4001168	          0x4c89ff	                            mov rdi, r15	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x400116b	      0xe800000000	                          call 0x4001170	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x4001170	          0x4c89ff	                            mov rdi, r15	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4001173	      0xe800000000	                          call 0x4001178	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4001178	      0xe9bcfeffff	                           jmp 0x4001039	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x400117d	      0xe800000000	                          call 0x4001182	       761	buffer.c	FUNCTION_10	IF_7	CALL_9
0x4001182	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4001187	          0x4c89f6	                            mov rsi, r14	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x400118a	      0xe800000000	                          call 0x400118f	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x400118f	      0xe800000000	                          call 0x4001194	       763	buffer.c	FUNCTION_10	IF_7	CALL_11
0x4001194	      0xe908feffff	                           jmp 0x4000fa1	       763	buffer.c	FUNCTION_10	IF_7	CALL_11
0x4001199	            0x31db	                            xor ebx, ebx	       723	buffer.c	FUNCTION_10
0x400119b	      0xe933fdffff	                           jmp 0x4000ed3	       723	buffer.c	FUNCTION_10
0x40011a0	      0xe800000000	                          call 0x40011a5	       785	buffer.c	FUNCTION_10	CALL_14
0x40011a5	      0xe92cfeffff	                           jmp 0x4000fd6	       785	buffer.c	FUNCTION_10	CALL_14
buflist_findname_stat	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,1:FOR,1:functions,0:ELSE,0	32
0x40023d0	            0x4154	                                push r12	      2408	buffer.c	FUNCTION_32
0x40023d2	              0x55	                                push rbp	      2408	buffer.c	FUNCTION_32
0x40023d3	          0x4989fc	                            mov r12, rdi	      2408	buffer.c	FUNCTION_32
0x40023d6	              0x53	                                push rbx	      2408	buffer.c	FUNCTION_32
0x40023d7	    0x488b1d000000	            mov rbx, qword [0x040023de] 	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023de	          0x4889f5	                            mov rbp, rsi	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023e1	          0x4885db	                           test rbx, rbx	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023e4	            0x7513	                           jne 0x40023f9	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023e6	            0xeb38	                           jmp 0x4002420	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023e8	     0xf1f84000000	                   nop dword [rax + rax]	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023f0	        0x488b5b70	            mov rbx, qword [rbx + 0x70] 	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023f4	          0x4885db	                           test rbx, rbx	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023f7	            0x7427	                            je 0x4002420	      2413	buffer.c	FUNCTION_32	FOR_1
0x40023f9	        0xf6437c80	           test byte [rbx + 0x7c], 0x80 	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40023fd	            0x75f1	                           jne 0x40023f0	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40023ff	          0x4889ea	                            mov rdx, rbp	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002402	          0x4c89e6	                            mov rsi, r12	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002405	          0x4889df	                            mov rdi, rbx	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002408	      0xe8a3feffff	                  call sym.otherfile_buf	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x400240d	            0x85c0	                           test eax, eax	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x400240f	            0x75df	                           jne 0x40023f0	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002411	          0x4889d8	                            mov rax, rbx	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x4002414	              0x5b	                                 pop rbx	      2421	buffer.c	FUNCTION_32
0x4002415	              0x5d	                                 pop rbp	      2421	buffer.c	FUNCTION_32
0x4002416	            0x415c	                                 pop r12	      2421	buffer.c	FUNCTION_32
0x4002418	              0xc3	                                     ret	      2421	buffer.c	FUNCTION_32
0x4002419	     0xf1f80000000	                         nop dword [rax]	      2421	buffer.c	FUNCTION_32
0x4002420	              0x5b	                                 pop rbx	      2421	buffer.c	FUNCTION_32
0x4002421	            0x31c0	                            xor eax, eax	      2420	buffer.c	FUNCTION_32
0x4002423	              0x5d	                                 pop rbp	      2421	buffer.c	FUNCTION_32
0x4002424	            0x415c	                                 pop r12	      2421	buffer.c	FUNCTION_32
0x4002426	              0xc3	                                     ret	      2421	buffer.c	FUNCTION_32
buf_delete_signs	IF,1:WHILE,1:DO,0:SWITCH,0:CALL,3:FOR,0:functions,0:ELSE,0	27
0x4006ad0	              0x55	                                push rbp	      6051	buffer.c	FUNCTION_97
0x4006ad1	              0x53	                                push rbx	      6051	buffer.c	FUNCTION_97
0x4006ad2	          0x4889fd	                            mov rbp, rdi	      6051	buffer.c	FUNCTION_97
0x4006ad5	        0x4883ec08	                              sub rsp, 8	      6051	buffer.c	FUNCTION_97
0x4006ad9	    0x488bbf201c00	          mov rdi, qword [rdi + 0x1c20] 	      6056	buffer.c	FUNCTION_97	IF_1
0x4006ae0	          0x4885ff	                           test rdi, rdi	      6056	buffer.c	FUNCTION_97	IF_1
0x4006ae3	            0x7443	                            je 0x4006b28	      6056	buffer.c	FUNCTION_97	IF_1
0x4006ae5	    0x48833d000000	               cmp qword [0x04006aed], 0	      6056	buffer.c	FUNCTION_97	IF_1
0x4006aed	            0x7421	                            je 0x4006b10	      6056	buffer.c	FUNCTION_97	IF_1
0x4006aef	          0x4889ef	                            mov rdi, rbp	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x4006af2	      0xbe28000000	                           mov esi, 0x28	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x4006af7	      0xe800000000	                          call 0x4006afc	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x4006afc	      0xe800000000	                          call 0x4006b01	      6059	buffer.c	FUNCTION_97	IF_1	CALL_2
0x4006b01	    0x488bbd201c00	          mov rdi, qword [rbp + 0x1c20] 	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006b08	          0x4885ff	                           test rdi, rdi	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006b0b	            0x741b	                            je 0x4006b28	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006b0d	           0xf1f00	                         nop dword [rax]	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006b10	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	      6064	buffer.c	FUNCTION_97	WHILE_1
0x4006b14	      0xe800000000	                          call 0x4006b19	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0x4006b19	          0x4885db	                           test rbx, rbx	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006b1c	    0x48899d201c00	          mov qword [rbp + 0x1c20], rbx 	      6066	buffer.c	FUNCTION_97	WHILE_1
0x4006b23	          0x4889df	                            mov rdi, rbx	      6066	buffer.c	FUNCTION_97	WHILE_1
0x4006b26	            0x75e8	                           jne 0x4006b10	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4006b28	        0x4883c408	                              add rsp, 8	      6068	buffer.c	FUNCTION_97
0x4006b2c	              0x5b	                                 pop rbx	      6068	buffer.c	FUNCTION_97
0x4006b2d	              0x5d	                                 pop rbp	      6068	buffer.c	FUNCTION_97
0x4006b2e	              0xc3	                                     ret	      6068	buffer.c	FUNCTION_97
set_curbuf	IF,10:WHILE,0:DO,0:SWITCH,0:CALL,22:FOR,0:functions,0:ELSE,0	198
0x4007d10	            0x4157	                                push r15	      1619	buffer.c	FUNCTION_20
0x4007d12	            0x4156	                                push r14	      1619	buffer.c	FUNCTION_20
0x4007d14	          0x4989ff	                            mov r15, rdi	      1619	buffer.c	FUNCTION_20
0x4007d17	            0x4155	                                push r13	      1619	buffer.c	FUNCTION_20
0x4007d19	            0x4154	                                push r12	      1619	buffer.c	FUNCTION_20
0x4007d1b	              0x55	                                push rbp	      1619	buffer.c	FUNCTION_20
0x4007d1c	              0x53	                                push rbx	      1619	buffer.c	FUNCTION_20
0x4007d1d	            0x89f5	                            mov ebp, esi	      1619	buffer.c	FUNCTION_20
0x4007d1f	        0x4883ec18	                           sub rsp, 0x18	      1619	buffer.c	FUNCTION_20
0x4007d23	    0x488b05000000	            mov rax, qword [0x04007d2a] 	      1624	buffer.c	FUNCTION_20
0x4007d2a	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1624	buffer.c	FUNCTION_20
0x4007d31	      0x4889442408	                mov qword [rsp + 8], rax	      1624	buffer.c	FUNCTION_20
0x4007d36	      0xe800000000	                          call 0x4007d3b	      1629	buffer.c	FUNCTION_20	CALL_1
0x4007d3b	    0x8b0500000000	            mov eax, dword [0x04007d41] 	      1630	buffer.c	FUNCTION_20	IF_1
0x4007d41	    0x488b35000000	            mov rsi, qword [0x04007d48] 	      1631	buffer.c	FUNCTION_20	IF_1
0x4007d48	    0x488b3d000000	            mov rdi, qword [0x04007d4f] 	      1631	buffer.c	FUNCTION_20	IF_1
0x4007d4f	            0x85c0	                           test eax, eax	      1630	buffer.c	FUNCTION_20	IF_1
0x4007d51	            0x750c	                           jne 0x4007d5f	      1630	buffer.c	FUNCTION_20	IF_1
0x4007d53	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	      1631	buffer.c	FUNCTION_20	IF_1
0x4007d59	    0x898678010000	            mov dword [rsi + 0x178], eax	      1631	buffer.c	FUNCTION_20	IF_1
0x4007d5f	          0x8b4e40	            mov ecx, dword [rsi + 0x40] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x4007d62	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x4007d66	    0x4881c7280100	                          add rdi, 0x128	      3297	buffer.c	FUNCTION_54	CALL_1
0x4007d6d	    0x41b801000000	                              mov r8d, 1	      3297	buffer.c	FUNCTION_54	CALL_1
0x4007d73	      0xe8f889ffff	         call sym.buflist_setfpos.isra.5	      3297	buffer.c	FUNCTION_54	CALL_1
0x4007d78	    0x4c8b25000000	            mov r12, qword [0x04007d7f] 	      1639	buffer.c	FUNCTION_20
0x4007d7f	    0xc70500000000	               mov dword [0x04007d89], 0	      1635	buffer.c	FUNCTION_20
0x4007d89	          0x4d85e4	                           test r12, r12	       362	buffer.c	FUNCTION_3
0x4007d8c	     0xf845e020000	                            je 0x4007ff0	       362	buffer.c	FUNCTION_3
0x4007d92	          0x4d85ff	                           test r15, r15	       362	buffer.c	FUNCTION_3
0x4007d95	    0x458bac24b800	           mov r13d, dword [r12 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4007d9d	    0x8b1d00000000	            mov ebx, dword [0x04007da3] 	       363	buffer.c	FUNCTION_3
0x4007da3	     0xf845f020000	                            je 0x4008008	       362	buffer.c	FUNCTION_3
0x4007da9	    0x458bb7b80000	           mov r14d, dword [r15 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4007db0	            0x31c9	                            xor ecx, ecx	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007db2	            0x31d2	                            xor edx, edx	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007db4	            0x31f6	                            xor esi, esi	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007db6	          0x4d89e0	                             mov r8, r12	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007db9	      0xbf06000000	                              mov edi, 6	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007dbe	      0xe800000000	                          call 0x4007dc3	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007dc3	            0x85c0	                           test eax, eax	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007dc5	            0x7569	                           jne 0x4007e30	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4007dc7	    0x488b3d000000	            mov rdi, qword [0x04007dce] 	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4007dce	        0x4c3b6708	                cmp r12, qword [rdi + 8]	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4007dd2	     0xf8468020000	                            je 0x4008040	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4007dd8	        0x448d75fe	                     lea r14d, [rbp - 2]	      1622	buffer.c	FUNCTION_20
0x4007ddc	        0x4183fe02	                             cmp r14d, 2	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x4007de0	     0xf86d2010000	                           jbe 0x4007fb8	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x4007de6	    0x3b1d00000000	            cmp ebx, dword [0x04007dec] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4007dec	     0xf8418010000	                            je 0x4007f0a	       377	buffer.c	FUNCTION_4	CALL_1
0x4007df2	    0x488b05000000	            mov rax, qword [0x04007df9] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007df9	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007dfc	     0xf848e010000	                            je 0x4007f90	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e02	          0x4939c4	                            cmp r12, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e05	     0xf84f5000000	                            je 0x4007f00	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e0b	          0x4889c2	                            mov rdx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e0e	            0xeb09	                           jmp 0x4007e19	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e10	          0x4939d4	                            cmp r12, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e13	     0xf84e7000000	                            je 0x4007f00	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e19	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e1d	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e20	            0x75ee	                           jne 0x4007e10	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e22	      0xe97e000000	                           jmp 0x4007ea5	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e27	    0x660f1f840000	                    nop word [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e30	    0x3b1d00000000	            cmp ebx, dword [0x04007e36] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4007e36	     0xf84a4010000	                            je 0x4007fe0	       377	buffer.c	FUNCTION_4	CALL_1
0x4007e3c	    0x488b05000000	            mov rax, qword [0x04007e43] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e43	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e46	     0xf8444010000	                            je 0x4007f90	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e4c	          0x4939c4	                            cmp r12, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e4f	            0x7415	                            je 0x4007e66	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e51	          0x4889c2	                            mov rdx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e54	         0xf1f4000	                         nop dword [rax]	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e58	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e5c	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e5f	            0x7444	                            je 0x4007ea5	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e61	          0x4939d4	                            cmp r12, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e64	            0x75f2	                           jne 0x4007e58	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e66	    0x4539ac24b800	           cmp dword [r12 + 0xb8], r13d 	       378	buffer.c	FUNCTION_4
0x4007e6e	            0x7535	                           jne 0x4007ea5	       378	buffer.c	FUNCTION_4
0x4007e70	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e73	     0xf845a010000	                            je 0x4007fd3	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e79	          0x4889c2	                            mov rdx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e7c	            0xeb0b	                           jmp 0x4007e89	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e7e	            0x6690	                                     nop	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e80	          0x4939d7	                            cmp r15, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e83	     0xf844a010000	                            je 0x4007fd3	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007e89	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e8d	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e90	            0x75ee	                           jne 0x4007e80	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e92	    0x660f1f440000	                    nop word [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e98	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e9c	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007e9f	     0xf84eb000000	                            je 0x4007f90	       392	buffer.c	FUNCTION_5	FOR_1
0x4007ea5	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007ea8	            0x75ee	                           jne 0x4007e98	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4007eaa	    0x4c3b3d000000	            cmp r15, qword [0x04007eb1] 	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4007eb1	     0xf84d9000000	                            je 0x4007f90	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4007eb7	      0xe800000000	                          call 0x4007ebc	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x4007ebc	            0x85c0	                           test eax, eax	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x4007ebe	     0xf85cc000000	                           jne 0x4007f90	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x4007ec4	          0x4c89ff	                            mov rdi, r15	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x4007ec7	      0xe800000000	                          call 0x4007ecc	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x4007ecc	    0x488b05000000	            mov rax, qword [0x04007ed3] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4007ed3	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4007ed8	    0x483b98b81500	          cmp rbx, qword [rax + 0x15b8] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4007edf	     0xf84bd000000	                            je 0x4007fa2	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4007ee5	    0x488b3d000000	            mov rdi, qword [0x04007eec] 	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x4007eec	        0x4883c418	                           add rsp, 0x18	      1692	buffer.c	FUNCTION_20
0x4007ef0	              0x5b	                                 pop rbx	      1692	buffer.c	FUNCTION_20
0x4007ef1	              0x5d	                                 pop rbp	      1692	buffer.c	FUNCTION_20
0x4007ef2	            0x415c	                                 pop r12	      1692	buffer.c	FUNCTION_20
0x4007ef4	            0x415d	                                 pop r13	      1692	buffer.c	FUNCTION_20
0x4007ef6	            0x415e	                                 pop r14	      1692	buffer.c	FUNCTION_20
0x4007ef8	            0x415f	                                 pop r15	      1692	buffer.c	FUNCTION_20
0x4007efa	      0xe900000000	                           jmp 0x4007eff	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x4007eff	              0x90	                                     nop	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x4007f00	    0x453bac24b800	           cmp r13d, dword [r12 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4007f08	            0x759b	                           jne 0x4007ea5	       378	buffer.c	FUNCTION_4
0x4007f0a	      0xe800000000	                          call 0x4007f0f	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4007f0f	            0x85c0	                           test eax, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4007f11	          0x4189c5	                           mov r13d, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4007f14	            0x7562	                           jne 0x4007f78	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4007f16	    0x4c3b25000000	            cmp r12, qword [0x04007f1d] 	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x4007f1d	    0x488b1d000000	            mov rbx, qword [0x04007f24] 	      1665	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6
0x4007f24	     0xf8420010000	                            je 0x400804a	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x4007f2a	        0x4183fe02	                             cmp r14d, 2	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f2e	     0xf87dc000000	                            ja 0x4008010	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f34	          0x4189ed	                           mov r13d, ebp	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f37	    0x488b3d000000	            mov rdi, qword [0x04007f3e] 	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f3e	      0xb800000000	                              mov eax, 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f43	          0x4489ea	                           mov edx, r13d	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f46	          0x4c89e6	                            mov rsi, r12	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f49	        0x4c3b6708	                cmp r12, qword [rdi + 8]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f4d	        0x480f45f8	                         cmovne rdi, rax	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f51	            0x31c9	                            xor ecx, ecx	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f53	      0xe800000000	                          call 0x4007f58	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4007f58	    0x483b1d000000	            cmp rbx, qword [0x04007f5f] 	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007f5f	            0x7417	                            je 0x4007f78	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007f61	          0x4889df	                            mov rdi, rbx	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007f64	      0xe800000000	                          call 0x4007f69	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007f69	            0x85c0	                           test eax, eax	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007f6b	            0x740b	                            je 0x4007f78	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x4007f6d	    0x48891d000000	            mov qword [0x04007f74], rbx 	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x4007f74	         0xf1f4000	                         nop dword [rax]	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x4007f78	    0x488b05000000	            mov rax, qword [0x04007f7f] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4007f7f	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4007f82	     0xf851dffffff	                           jne 0x4007ea5	       392	buffer.c	FUNCTION_5	FOR_1
0x4007f88	     0xf1f84000000	                   nop dword [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4007f90	    0x488b05000000	            mov rax, qword [0x04007f97] 	      1684	buffer.c	FUNCTION_20	IF_9
0x4007f97	      0x4883780800	                  cmp qword [rax + 8], 0	      1684	buffer.c	FUNCTION_20	IF_9
0x4007f9c	     0xf8422ffffff	                            je 0x4007ec4	      1684	buffer.c	FUNCTION_20	IF_9
0x4007fa2	        0x4883c418	                           add rsp, 0x18	      1692	buffer.c	FUNCTION_20
0x4007fa6	              0x5b	                                 pop rbx	      1692	buffer.c	FUNCTION_20
0x4007fa7	              0x5d	                                 pop rbp	      1692	buffer.c	FUNCTION_20
0x4007fa8	            0x415c	                                 pop r12	      1692	buffer.c	FUNCTION_20
0x4007faa	            0x415d	                                 pop r13	      1692	buffer.c	FUNCTION_20
0x4007fac	            0x415e	                                 pop r14	      1692	buffer.c	FUNCTION_20
0x4007fae	            0x415f	                                 pop r15	      1692	buffer.c	FUNCTION_20
0x4007fb0	              0xc3	                                     ret	      1692	buffer.c	FUNCTION_20
0x4007fb1	     0xf1f80000000	                         nop dword [rax]	      1692	buffer.c	FUNCTION_20
0x4007fb8	            0x31f6	                            xor esi, esi	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4007fba	          0x4c89e7	                            mov rdi, r12	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4007fbd	      0xe800000000	                          call 0x4007fc2	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4007fc2	    0x3b1d00000000	            cmp ebx, dword [0x04007fc8] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4007fc8	     0xf8524feffff	                           jne 0x4007df2	       377	buffer.c	FUNCTION_4	CALL_1
0x4007fce	      0xe937ffffff	                           jmp 0x4007f0a	       377	buffer.c	FUNCTION_4	CALL_1
0x4007fd3	    0x453bb7b80000	           cmp r14d, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4007fda	     0xf85c5feffff	                           jne 0x4007ea5	       378	buffer.c	FUNCTION_4
0x4007fe0	      0xe800000000	                          call 0x4007fe5	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4007fe5	            0x85c0	                           test eax, eax	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4007fe7	     0xf84dafdffff	                            je 0x4007dc7	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4007fed	            0xeb89	                           jmp 0x4007f78	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4007fef	              0x90	                                     nop	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4007ff0	          0x4531ed	                          xor r13d, r13d	       362	buffer.c	FUNCTION_3
0x4007ff3	          0x4d85ff	                           test r15, r15	       362	buffer.c	FUNCTION_3
0x4007ff6	    0x8b1d00000000	            mov ebx, dword [0x04007ffc] 	       363	buffer.c	FUNCTION_3
0x4007ffc	     0xf85a7fdffff	                           jne 0x4007da9	       362	buffer.c	FUNCTION_3
0x4008002	    0x660f1f440000	                    nop word [rax + rax]	       362	buffer.c	FUNCTION_3
0x4008008	          0x4531f6	                          xor r14d, r14d	       362	buffer.c	FUNCTION_3
0x400800b	      0xe9a0fdffff	                           jmp 0x4007db0	       362	buffer.c	FUNCTION_3
0x4008010	            0x85ed	                           test ebp, ebp	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4008012	     0xf851fffffff	                           jne 0x4007f37	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4008018	          0x4c89e7	                            mov rdi, r12	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x400801b	      0xe800000000	                          call 0x4008020	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x4008020	            0x85c0	                           test eax, eax	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x4008022	     0xf850fffffff	                           jne 0x4007f37	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x4008028	          0x4c89e7	                            mov rdi, r12	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x400802b	      0xe800000000	                          call 0x4008030	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4008030	            0x85c0	                           test eax, eax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4008032	      0xb802000000	                              mov eax, 2	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4008037	        0x440f44e8	                         cmove r13d, eax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x400803b	      0xe9f7feffff	                           jmp 0x4007f37	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4008040	      0xe800000000	                          call 0x4008045	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x4008045	      0xe98efdffff	                           jmp 0x4007dd8	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x400804a	            0x31ff	                            xor edi, edi	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x400804c	      0xe800000000	                          call 0x4008051	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x4008051	      0xe9d4feffff	                           jmp 0x4007f2a	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
free_buffer_stuff	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,14:FOR,0:functions,0:ELSE,0	50
0x4006b30	              0x55	                                push rbp	       896	buffer.c	FUNCTION_13
0x4006b31	              0x53	                                push rbx	       896	buffer.c	FUNCTION_13
0x4006b32	          0x4889fb	                            mov rbx, rdi	       896	buffer.c	FUNCTION_13
0x4006b35	        0x4883ec08	                              sub rsp, 8	       896	buffer.c	FUNCTION_13
0x4006b39	            0x85f6	                           test esi, esi	       897	buffer.c	FUNCTION_13	IF_1
0x4006b3b	     0xf85a7000000	                           jne 0x4006be8	       897	buffer.c	FUNCTION_13	IF_1
0x4006b41	    0x488b83301700	          mov rax, qword [rbx + 0x1730] 	       909	buffer.c	FUNCTION_13	CALL_5
0x4006b48	    0x488babd80000	            mov rbp, qword [rbx + 0xd8] 	       907	buffer.c	FUNCTION_13	CALL_4
0x4006b4f	        0x488d7810	                   lea rdi, [rax + 0x10]	       909	buffer.c	FUNCTION_13	CALL_5
0x4006b53	      0xe800000000	                          call 0x4006b58	       909	buffer.c	FUNCTION_13	CALL_5
0x4006b58	    0x488b83301700	          mov rax, qword [rbx + 0x1730] 	       910	buffer.c	FUNCTION_13	CALL_6
0x4006b5f	        0x488d7810	                   lea rdi, [rax + 0x10]	       910	buffer.c	FUNCTION_13	CALL_6
0x4006b63	      0xe800000000	                          call 0x4006b68	       910	buffer.c	FUNCTION_13	CALL_6
0x4006b68	          0x4889df	                            mov rdi, rbx	       911	buffer.c	FUNCTION_13	CALL_7
0x4006b6b	      0xe84096ffff	               call sym.init_changedtick	       911	buffer.c	FUNCTION_13	CALL_7
0x4006b70	    0x488dbbc81100	                 lea rdi, [rbx + 0x11c8]	       916	buffer.c	FUNCTION_13	CALL_9
0x4006b77	    0x4889abd80000	             mov qword [rbx + 0xd8], rbp	       912	buffer.c	FUNCTION_13	CALL_8
0x4006b7e	      0xe800000000	                          call 0x4006b83	       916	buffer.c	FUNCTION_13	CALL_9
0x4006b83	          0x4889df	                            mov rdi, rbx	       919	buffer.c	FUNCTION_13	CALL_10
0x4006b86	      0xe800000000	                          call 0x4006b8b	       919	buffer.c	FUNCTION_13	CALL_10
0x4006b8b	          0x4889df	                            mov rdi, rbx	       922	buffer.c	FUNCTION_13	CALL_11
0x4006b8e	      0xe800000000	                          call 0x4006b93	       922	buffer.c	FUNCTION_13	CALL_11
0x4006b93	            0x31c9	                            xor ecx, ecx	       925	buffer.c	FUNCTION_13	CALL_12
0x4006b95	      0xba01000000	                              mov edx, 1	       925	buffer.c	FUNCTION_13	CALL_12
0x4006b9a	      0xbe3f300000	                         mov esi, 0x303f	       925	buffer.c	FUNCTION_13	CALL_12
0x4006b9f	          0x4889df	                            mov rdi, rbx	       925	buffer.c	FUNCTION_13	CALL_12
0x4006ba2	      0xe800000000	                          call 0x4006ba7	       925	buffer.c	FUNCTION_13	CALL_12
0x4006ba7	          0x4889df	                            mov rdi, rbx	       926	buffer.c	FUNCTION_13	CALL_13
0x4006baa	      0xb901000000	                              mov ecx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x4006baf	      0xba01000000	                              mov edx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x4006bb4	      0xbe3f300000	                         mov esi, 0x303f	       926	buffer.c	FUNCTION_13	CALL_13
0x4006bb9	      0xe800000000	                          call 0x4006bbe	       926	buffer.c	FUNCTION_13	CALL_13
0x4006bbe	    0x488bbb081700	          mov rdi, qword [rbx + 0x1708] 	       929	buffer.c	FUNCTION_13	CALL_14
0x4006bc5	          0x4885ff	                           test rdi, rdi	       929	buffer.c	FUNCTION_13	CALL_14
0x4006bc8	            0x7410	                            je 0x4006bda	       929	buffer.c	FUNCTION_13	CALL_14
0x4006bca	      0xe800000000	                          call 0x4006bcf	       929	buffer.c	FUNCTION_13	CALL_14
0x4006bcf	    0x48c783081700	            mov qword [rbx + 0x1708], 0 	       929	buffer.c	FUNCTION_13	CALL_14
0x4006bda	        0x4883c408	                              add rsp, 8	       931	buffer.c	FUNCTION_13
0x4006bde	              0x5b	                                 pop rbx	       931	buffer.c	FUNCTION_13
0x4006bdf	              0x5d	                                 pop rbp	       931	buffer.c	FUNCTION_13
0x4006be0	              0xc3	                                     ret	       931	buffer.c	FUNCTION_13
0x4006be1	     0xf1f80000000	                         nop dword [rax]	       931	buffer.c	FUNCTION_13
0x4006be8	    0x488dbf280100	                  lea rdi, [rdi + 0x128]	       931	buffer.c	FUNCTION_13
0x4006bef	      0xe81c9bffff	           call sym.clear_wininfo.isra.4	       899	buffer.c	FUNCTION_13	IF_1	CALL_1
0x4006bf4	          0x4889df	                            mov rdi, rbx	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x4006bf7	      0xbe01000000	                              mov esi, 1	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x4006bfc	      0xe800000000	                          call 0x4006c01	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x4006c01	    0x488dbbb01a00	                 lea rdi, [rbx + 0x1ab0]	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x4006c08	      0xe800000000	                          call 0x4006c0d	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x4006c0d	      0xe92fffffff	                           jmp 0x4006b41	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
col_print	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,1	11
0x4002500	          0x4189c8	                            mov r8d, ecx	      3521	buffer.c	FUNCTION_60
0x4002503	            0x89d1	                            mov ecx, edx	      3523	buffer.c	FUNCTION_60	CALL_1
0x4002505	          0x4439c2	                            cmp edx, r8d	      3522	buffer.c	FUNCTION_60	IF_1
0x4002508	            0x7416	                            je 0x4002520	      3522	buffer.c	FUNCTION_60	IF_1
0x400250a	      0xba00000000	                              mov edx, 0	      3525	buffer.c	FUNCTION_60	CALL_2
0x400250f	            0x31c0	                            xor eax, eax	      3525	buffer.c	FUNCTION_60	CALL_2
0x4002511	      0xe900000000	                           jmp 0x4002516	      3525	buffer.c	FUNCTION_60	CALL_2
0x4002516	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3525	buffer.c	FUNCTION_60	CALL_2
0x4002520	      0xba00000000	                              mov edx, 0	      3523	buffer.c	FUNCTION_60	CALL_1
0x4002525	            0x31c0	                            xor eax, eax	      3523	buffer.c	FUNCTION_60	CALL_1
0x4002527	      0xe900000000	                           jmp 0x400252c	      3523	buffer.c	FUNCTION_60	CALL_1
read_buffer	IF,5:WHILE,2:DO,0:SWITCH,0:CALL,8:FOR,0:functions,0:ELSE,2	94
0x4000040	              0x55	                                push rbp	        73	buffer.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        73	buffer.c	FUNCTION_1
0x4000042	          0x83ca08	                               or edx, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x4000045	            0x89fd	                            mov ebp, edi	        73	buffer.c	FUNCTION_1
0x4000047	          0x4989f1	                             mov r9, rsi	        73	buffer.c	FUNCTION_1
0x400004a	        0x4883ec18	                           sub rsp, 0x18	        73	buffer.c	FUNCTION_1
0x400004e	    0x64488b042528	                mov rax, qword fs:[0x28]	        73	buffer.c	FUNCTION_1
0x4000057	      0x4889442408	                mov qword [rsp + 8], rax	        73	buffer.c	FUNCTION_1
0x400005c	            0x31c0	                            xor eax, eax	        73	buffer.c	FUNCTION_1
0x400005e	    0x488b05000000	            mov rax, qword [0x04000065] 	        82	buffer.c	FUNCTION_1
0x4000065	            0x85ff	                           test edi, edi	        83	buffer.c	FUNCTION_1	CALL_1
0x4000067	    0xc74424040100	                  mov dword [rsp + 4], 1	        74	buffer.c	FUNCTION_1
0x400006f	          0x488b18	                    mov rbx, qword [rax]	        82	buffer.c	FUNCTION_1
0x4000072	     0xf85c8000000	                           jne 0x4000140	        83	buffer.c	FUNCTION_1	CALL_1
0x4000078	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	        83	buffer.c	FUNCTION_1	CALL_1
0x400007f	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	        83	buffer.c	FUNCTION_1	CALL_1
0x4000086	        0x4883ec08	                              sub rsp, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x400008a	            0x31c9	                            xor ecx, ecx	        83	buffer.c	FUNCTION_1	CALL_1
0x400008c	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	        83	buffer.c	FUNCTION_1	CALL_1
0x4000092	              0x52	                                push rdx	        83	buffer.c	FUNCTION_1	CALL_1
0x4000093	          0x4889da	                            mov rdx, rbx	        83	buffer.c	FUNCTION_1	CALL_1
0x4000096	      0xe800000000	                          call 0x400009b	        83	buffer.c	FUNCTION_1	CALL_1
0x400009b	          0x83f801	                              cmp eax, 1	        88	buffer.c	FUNCTION_1	IF_1
0x400009e	        0x89442414	             mov dword [rsp + 0x14], eax	        83	buffer.c	FUNCTION_1	CALL_1
0x40000a2	              0x5a	                                 pop rdx	        88	buffer.c	FUNCTION_1	IF_1
0x40000a3	              0x59	                                 pop rcx	        88	buffer.c	FUNCTION_1	IF_1
0x40000a4	            0x7514	                           jne 0x40000ba	        88	buffer.c	FUNCTION_1	IF_1
0x40000a6	      0xe9d5000000	                           jmp 0x4000180	        88	buffer.c	FUNCTION_1	IF_1
0x40000ab	       0xf1f440000	                   nop dword [rax + rax]	        88	buffer.c	FUNCTION_1	IF_1
0x40000b0	            0x31f6	                            xor esi, esi	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40000b2	          0x4889df	                            mov rdi, rbx	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40000b5	      0xe800000000	                          call 0x40000ba	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40000ba	    0x488b05000000	            mov rax, qword [0x040000c1] 	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000c1	          0x483b18	                    cmp rbx, qword [rax]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000c4	            0x7cea	                            jl 0x40000b0	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40000c6	    0x488b05000000	            mov rax, qword [0x040000cd] 	       101	buffer.c	FUNCTION_1
0x40000cd	            0x85ed	                           test ebp, ebp	       104	buffer.c	FUNCTION_1	IF_2
0x40000cf	    0x48c740380100	               mov qword [rax + 0x38], 1	       101	buffer.c	FUNCTION_1
0x40000d7	    0xc74040000000	               mov dword [rax + 0x40], 0	       102	buffer.c	FUNCTION_1
0x40000de	            0x7441	                            je 0x4000121	       104	buffer.c	FUNCTION_1	IF_2
0x40000e0	    0x8b0500000000	            mov eax, dword [0x040000e6] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000e6	            0x85c0	                           test eax, eax	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000e8	            0x7576	                           jne 0x4000160	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000ea	    0x488b05000000	            mov rax, qword [0x040000f1] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000f1	        0x48833801	                      cmp qword [rax], 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000f5	            0x7459	                            je 0x4000150	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x40000f7	      0xe800000000	                          call 0x40000fc	       109	buffer.c	FUNCTION_1	IF_2	CALL_5
0x40000fc	        0x8b442404	                mov eax, dword [rsp + 4]	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x4000100	          0x83f801	                              cmp eax, 1	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x4000103	            0x7520	                           jne 0x4000125	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x4000105	    0x4c8b05000000	              mov r8, qword [0x0400010c]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x400010c	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000111	            0x31c9	                            xor ecx, ecx	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000113	            0x31d2	                            xor edx, edx	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000115	            0x31f6	                            xor esi, esi	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000117	      0xbf49000000	                           mov edi, 0x49	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x400011c	      0xe800000000	                          call 0x4000121	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000121	        0x8b442404	                mov eax, dword [rsp + 4]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4000125	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       124	buffer.c	FUNCTION_1
0x400012a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       124	buffer.c	FUNCTION_1
0x4000133	            0x7576	                           jne 0x40001ab	       124	buffer.c	FUNCTION_1
0x4000135	        0x4883c418	                           add rsp, 0x18	       124	buffer.c	FUNCTION_1
0x4000139	              0x5b	                                 pop rbx	       124	buffer.c	FUNCTION_1
0x400013a	              0x5d	                                 pop rbp	       124	buffer.c	FUNCTION_1
0x400013b	              0xc3	                                     ret	       124	buffer.c	FUNCTION_1
0x400013c	         0xf1f4000	                         nop dword [rax]	       124	buffer.c	FUNCTION_1
0x4000140	            0x31f6	                            xor esi, esi	        83	buffer.c	FUNCTION_1	CALL_1
0x4000142	            0x31ff	                            xor edi, edi	        83	buffer.c	FUNCTION_1	CALL_1
0x4000144	      0xe93dffffff	                           jmp 0x4000086	        83	buffer.c	FUNCTION_1	CALL_1
0x4000149	     0xf1f80000000	                         nop dword [rax]	        83	buffer.c	FUNCTION_1	CALL_1
0x4000150	      0xbf01000000	                              mov edi, 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000155	      0xe800000000	                          call 0x400015a	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400015a	          0x803800	                       cmp byte [rax], 0	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400015d	            0x7598	                           jne 0x40000f7	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400015f	              0x90	                                     nop	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4000160	        0x8b442404	                mov eax, dword [rsp + 4]	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000164	          0x83f801	                              cmp eax, 1	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000167	            0x75bc	                           jne 0x4000125	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000169	    0x488b3d000000	            mov rdi, qword [0x04000170] 	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000170	            0x31f6	                            xor esi, esi	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000172	      0xe800000000	                          call 0x4000177	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000177	            0xeb83	                           jmp 0x40000fc	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000179	     0xf1f80000000	                         nop dword [rax]	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4000180	        0x4883eb01	                              sub rbx, 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4000184	     0xf883cffffff	                            js 0x40000c6	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400018a	    0x660f1f440000	                    nop word [rax + rax]	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4000190	            0x31f6	                            xor esi, esi	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x4000192	      0xbf01000000	                              mov edi, 1	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x4000197	        0x4883eb01	                              sub rbx, 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400019b	      0xe800000000	                          call 0x40001a0	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40001a0	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40001a4	            0x75ea	                           jne 0x4000190	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40001a6	      0xe91bffffff	                           jmp 0x40000c6	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40001ab	      0xe800000000	               call sym.init_changedtick	       124	buffer.c	FUNCTION_1
buf_change_sign_type	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,0:FOR,1:functions,0:ELSE,0	19
0x4006840	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006847	          0x4885c0	                           test rax, rax	      5897	buffer.c	FUNCTION_90	FOR_1
0x400684a	            0x742c	                            je 0x4006878	      5897	buffer.c	FUNCTION_90	FOR_1
0x400684c	            0x3b30	                    cmp esi, dword [rax]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400684e	            0x750c	                           jne 0x400685c	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006850	            0xeb1e	                           jmp 0x4006870	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006852	    0x660f1f440000	                    nop word [rax + rax]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006858	            0x3930	                    cmp dword [rax], esi	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400685a	            0x7414	                            je 0x4006870	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400685c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006860	          0x4885c0	                           test rax, rax	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006863	            0x75f3	                           jne 0x4006858	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006865	            0xf3c3	                                     ret	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006867	    0x660f1f840000	                    nop word [rax + rax]	      5897	buffer.c	FUNCTION_90	FOR_1
0x4006870	          0x895010	             mov dword [rax + 0x10], edx	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006873	        0x488b4008	                mov rax, qword [rax + 8]	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006877	              0xc3	                                     ret	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x4006878	            0x31c0	                            xor eax, eax	      5906	buffer.c	FUNCTION_90
0x400687a	              0xc3	                                     ret	      5907	buffer.c	FUNCTION_90
do_arg_all	IF,38:WHILE,0:DO,0:SWITCH,0:CALL,43:FOR,5:functions,0:ELSE,6	521
0x4002940	            0x4157	                                push r15	      4845	buffer.c	FUNCTION_71
0x4002942	            0x4156	                                push r14	      4845	buffer.c	FUNCTION_71
0x4002944	            0x4155	                                push r13	      4845	buffer.c	FUNCTION_71
0x4002946	            0x4154	                                push r12	      4845	buffer.c	FUNCTION_71
0x4002948	              0x55	                                push rbp	      4845	buffer.c	FUNCTION_71
0x4002949	              0x53	                                push rbx	      4845	buffer.c	FUNCTION_71
0x400294a	        0x4883ec78	                           sub rsp, 0x78	      4845	buffer.c	FUNCTION_71
0x400294e	    0x488b05000000	            mov rax, qword [0x04002955] 	      4867	buffer.c	FUNCTION_71	IF_1
0x4002955	        0x897c2454	             mov dword [rsp + 0x54], edi	      4845	buffer.c	FUNCTION_71
0x4002959	        0x89742428	             mov dword [rsp + 0x28], esi	      4845	buffer.c	FUNCTION_71
0x400295d	        0x89542424	             mov dword [rsp + 0x24], edx	      4845	buffer.c	FUNCTION_71
0x4002961	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4867	buffer.c	FUNCTION_71	IF_1
0x4002968	            0x8b08	                    mov ecx, dword [rax]	      4867	buffer.c	FUNCTION_71	IF_1
0x400296a	            0x85c9	                           test ecx, ecx	      4867	buffer.c	FUNCTION_71	IF_1
0x400296c	     0xf8eb5070000	                           jle 0x4003127	      4867	buffer.c	FUNCTION_71	IF_1
0x4002972	    0x8b0500000000	            mov eax, dword [0x04002978] 	      4861	buffer.c	FUNCTION_71
0x4002978	            0x89c3	                            mov ebx, eax	      4861	buffer.c	FUNCTION_71
0x400297a	        0x8944246c	             mov dword [rsp + 0x6c], eax	      4861	buffer.c	FUNCTION_71
0x400297e	      0xe800000000	                          call 0x4002983	      4873	buffer.c	FUNCTION_71	CALL_1
0x4002983	    0x488b05000000	            mov rax, qword [0x0400298a] 	      4875	buffer.c	FUNCTION_71
0x400298a	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4875	buffer.c	FUNCTION_71
0x4002991	          0x448b20	                   mov r12d, dword [rax]	      4875	buffer.c	FUNCTION_71
0x4002994	          0x4489e7	                           mov edi, r12d	      4876	buffer.c	FUNCTION_71	CALL_2
0x4002997	      0xe800000000	                          call 0x400299c	      4876	buffer.c	FUNCTION_71	CALL_2
0x400299c	          0x4885c0	                           test rax, rax	      4877	buffer.c	FUNCTION_71	IF_2
0x400299f	      0x4889442430	             mov qword [rsp + 0x30], rax	      4876	buffer.c	FUNCTION_71	CALL_2
0x40029a4	     0xf847d070000	                            je 0x4003127	      4877	buffer.c	FUNCTION_71	IF_2
0x40029aa	    0x488b05000000	            mov rax, qword [0x040029b1] 	      4883	buffer.c	FUNCTION_71
0x40029b1	    0xc70500000000	               mov dword [0x040029bb], 1	      4890	buffer.c	FUNCTION_71
0x40029bb	    0x4c8ba8800100	           mov r13, qword [rax + 0x180] 	      4883	buffer.c	FUNCTION_71
0x40029c2	      0x4889442460	             mov qword [rsp + 0x60], rax	      4883	buffer.c	FUNCTION_71
0x40029c7	    0x488b05000000	            mov rax, qword [0x040029ce] 	      4887	buffer.c	FUNCTION_71
0x40029ce	      0x4183451801	               add dword [r13 + 0x18], 1	      4884	buffer.c	FUNCTION_71
0x40029d3	            0x85db	                           test ebx, ebx	      4900	buffer.c	FUNCTION_71	IF_3
0x40029d5	      0x4889442438	             mov qword [rsp + 0x38], rax	      4887	buffer.c	FUNCTION_71
0x40029da	            0x7e1d	                           jle 0x40029f9	      4900	buffer.c	FUNCTION_71	IF_3
0x40029dc	    0x488b3d000000	            mov rdi, qword [0x040029e3] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x40029e3	      0xba01000000	                              mov edx, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x40029e8	      0xbe01000000	                              mov esi, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x40029ed	      0xe800000000	                          call 0x40029f2	      4901	buffer.c	FUNCTION_71	CALL_3
0x40029f2	    0x488b05000000	            mov rax, qword [0x040029f9] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x40029f9	        0x8b54246c	            mov edx, dword [rsp + 0x6c] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x40029fd	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002a06	    0x48c744244800	               mov qword [rsp + 0x48], 0	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002a0f	    0xc74424680000	               mov dword [rsp + 0x68], 0	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002a17	            0x85d2	                           test edx, edx	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002a19	       0xf94442453	                  sete byte [rsp + 0x53]	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002a1e	            0x6690	                                     nop	      4901	buffer.c	FUNCTION_71	CALL_3
0x4002a20	          0x488b00	                    mov rax, qword [rax]	      4904	buffer.c	FUNCTION_71	FOR_1
0x4002a23	      0x4889442440	             mov qword [rsp + 0x40], rax	      4904	buffer.c	FUNCTION_71	FOR_1
0x4002a28	    0x488b05000000	            mov rax, qword [0x04002a2f] 	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002a2f	          0x4885c0	                           test rax, rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002a32	      0x4889442410	             mov qword [rsp + 0x10], rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002a37	     0xf8598000000	                           jne 0x4002ad5	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002a3d	      0xe9fb010000	                           jmp 0x4002c3d	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002a42	    0x660f1f440000	                    nop word [rax + rax]	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002a48	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002a4c	     0xf8e5e030000	                           jle 0x4002db0	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002a52	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002a57	    0x4489a0880100	           mov dword [rax + 0x188], r12d	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002a5e	          0x4889ef	                            mov rdi, rbp	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4002a61	      0xe800000000	                          call 0x4002a66	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4002a66	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4002a6a	             0x9c1	                             or ecx, eax	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4002a6c	     0xf852e020000	                           jne 0x4002ca0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4002a72	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4002a76	     0xf8e0d020000	                           jle 0x4002c89	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4002a7c	    0x488b05000000	            mov rax, qword [0x04002a83] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002a83	    0x483905000000	            cmp qword [0x04002a8a], rax 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002a8a	     0xf84d0020000	                            je 0x4002d60	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002a90	          0x4889ef	                            mov rdi, rbp	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002a93	      0xe800000000	                          call 0x4002a98	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002a98	            0x31f6	                            xor esi, esi	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002a9a	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002a9c	        0x400f94c6	                                sete sil	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002aa0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002aa5	      0xe800000000	                          call 0x4002aaa	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002aaa	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x4002aaf	          0x4889df	                            mov rdi, rbx	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x4002ab2	      0xe800000000	                          call 0x4002ab7	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x4002ab7	            0x85c0	                           test eax, eax	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x4002ab9	          0x4889d8	                            mov rax, rbx	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x4002abc	    0x480f44050000	           cmove rax, qword [0x04002ac4]	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x4002ac4	      0x4889442410	             mov qword [rsp + 0x10], rax	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x4002ac9	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002acf	     0xf8468010000	                            je 0x4002c3d	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002ad5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002ada	        0x488b6808	                mov rbp, qword [rax + 8]	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002ade	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002ae2	    0x4883bd880000	               cmp qword [rbp + 0x88], 0	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002aea	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002aef	     0xf84ab020000	                            je 0x4002da0	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002af5	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002af9	            0x85c0	                           test eax, eax	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002afb	     0xf8447ffffff	                            je 0x4002a48	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002b01	            0x31db	                            xor ebx, ebx	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b03	          0x4531ff	                          xor r15d, r15d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b06	          0x4585e4	                         test r12d, r12d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b09	            0x7f30	                            jg 0x4002b3b	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b0b	      0xe914030000	                           jmp 0x4002e24	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b10	    0x488bb8980000	            mov rdi, qword [rax + 0x98] 	      4832	buffer.c	FUNCTION_70	IF_1
0x4002b17	          0x4885ff	                           test rdi, rdi	      4832	buffer.c	FUNCTION_70	IF_1
0x4002b1a	            0x7457	                            je 0x4002b73	      4832	buffer.c	FUNCTION_70	IF_1
0x4002b1c	      0xba01000000	                              mov edx, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b21	      0xe800000000	                          call 0x4002b26	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b26	            0xa801	                              test al, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b28	            0x755e	                           jne 0x4002b88	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b2a	        0x4183c701	                             add r15d, 1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b2e	        0x4883c301	                              add rbx, 1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b32	          0x4539fc	                          cmp r12d, r15d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b35	     0xf8e55020000	                           jle 0x4002d90	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002b3b	        0x45397d00	                   cmp dword [r13], r15d	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4002b3f	            0x7ee9	                           jle 0x4002b2a	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4002b41	          0x4989de	                            mov r14, rbx	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4002b44	        0x49c1e604	                              shl r14, 4	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4002b48	        0x4d037510	             add r14, qword [r13 + 0x10]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4002b4c	        0x418b7e08	                mov edi, dword [r14 + 8]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4002b50	    0x3bbdb8000000	            cmp edi, dword [rbp + 0xb8] 	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4002b56	            0x7430	                            je 0x4002b88	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4002b58	    0x488bb5880000	            mov rsi, qword [rbp + 0x88] 	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b5f	      0x4889742408	                mov qword [rsp + 8], rsi	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b64	      0xe800000000	                          call 0x4002b69	      4831	buffer.c	FUNCTION_70	CALL_1
0x4002b69	          0x4885c0	                           test rax, rax	      4832	buffer.c	FUNCTION_70	IF_1
0x4002b6c	      0x488b742408	                mov rsi, qword [rsp + 8]	      4832	buffer.c	FUNCTION_70	IF_1
0x4002b71	            0x759d	                           jne 0x4002b10	      4832	buffer.c	FUNCTION_70	IF_1
0x4002b73	          0x498b3e	                    mov rdi, qword [r14]	      4833	buffer.c	FUNCTION_70	IF_1
0x4002b76	      0xba01000000	                              mov edx, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b7b	      0xe800000000	                          call 0x4002b80	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b80	            0xa801	                              test al, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b82	            0x74a6	                            je 0x4002b2a	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b84	         0xf1f4000	                         nop dword [rax]	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4002b88	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002b8d	    0x483b05000000	            cmp rax, qword [0x04002b94] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002b94	     0xf8473020000	                            je 0x4002e0d	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002b9a	      0xb801000000	                              mov eax, 1	      4923	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4002b9f	      0x48035c2430	             add rbx, qword [rsp + 0x30]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4002ba4	           0xfb613	                   movzx edx, byte [rbx]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4002ba7	            0x39d0	                            cmp eax, edx	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4002ba9	     0xf8e49020000	                           jle 0x4002df8	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4002baf	          0x4585ff	                         test r15d, r15d	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002bb2	            0x8803	                      mov byte [rbx], al	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4002bb4	     0xf852e020000	                           jne 0x4002de8	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002bba	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4002bbf	          0x4885c0	                           test rax, rax	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4002bc2	            0x7407	                            je 0x4002bcb	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4002bc4	    0x4489a0880100	           mov dword [rax + 0x188], r12d	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4002bcb	    0x488b05000000	            mov rax, qword [0x04002bd2] 	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002bd2	          0x4585e4	                         test r12d, r12d	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002bd5	           0xf94c3	                                 sete bl	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002bd8	      0x4889442458	             mov qword [rsp + 0x58], rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002bdd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002be2	      0x4889442448	             mov qword [rsp + 0x48], rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4002be7	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002bec	    0x498bbe800100	           mov rdi, qword [r14 + 0x180] 	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002bf3	          0x4939fd	                            cmp r13, rdi	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002bf6	            0x7411	                            je 0x4002c09	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002bf8	      0xe800000000	                          call 0x4002bfd	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0x4002bfd	    0x4d89ae800100	            mov qword [r14 + 0x180], r13	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002c04	      0x4183451801	               add dword [r13 + 0x18], 1	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4002c09	      0x448b742424	           mov r14d, dword [rsp + 0x24] 	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x4002c0e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002c13	          0x4585f6	                         test r14d, r14d	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x4002c16	    0x4489b8880100	           mov dword [rax + 0x188], r15d	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002c1d	            0x7508	                           jne 0x4002c27	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x4002c1f	            0x84db	                             test bl, bl	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x4002c21	     0xf8537feffff	                           jne 0x4002a5e	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x4002c27	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002c2c	      0x4889442410	             mov qword [rsp + 0x10], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002c31	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002c37	     0xf8598feffff	                           jne 0x4002ad5	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002c3d	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4002c42	          0x4885db	                           test rbx, rbx	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4002c45	     0xf84ed010000	                            je 0x4002e38	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4002c4b	      0x807c245300	                cmp byte [rsp + 0x53], 0	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4002c50	     0xf85e2010000	                           jne 0x4002e38	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4002c56	          0x4889df	                            mov rdi, rbx	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x4002c59	      0xe800000000	                          call 0x4002c5e	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x4002c5e	            0x85c0	                           test eax, eax	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x4002c60	          0x4889d8	                            mov rax, rbx	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x4002c63	    0x480f44050000	           cmove rax, qword [0x04002c6b]	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x4002c6b	      0xba01000000	                              mov edx, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4002c70	      0xbe01000000	                              mov esi, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4002c75	          0x4889c7	                            mov rdi, rax	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4002c78	      0xe800000000	                          call 0x4002c7d	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4002c7d	    0x488b05000000	            mov rax, qword [0x04002c84] 	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4002c84	      0xe997fdffff	                           jmp 0x4002a20	      5008	buffer.c	FUNCTION_71	FOR_1
0x4002c89	          0x4889ef	                            mov rdi, rbp	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4002c8c	      0xe800000000	                          call 0x4002c91	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4002c91	            0x85c0	                           test eax, eax	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4002c93	            0x7592	                           jne 0x4002c27	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4002c95	          0x4889ef	                            mov rdi, rbp	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4002c98	      0xe800000000	                          call 0x4002c9d	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4002c9d	           0xf1f00	                         nop dword [rax]	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4002ca0	            0x85c0	                           test eax, eax	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002ca2	     0xf85a8000000	                           jne 0x4002d50	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002ca8	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002cac	     0xf8fcafdffff	                            jg 0x4002a7c	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4002cb2	          0x4889ef	                            mov rdi, rbp	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x4002cb5	      0xe800000000	                          call 0x4002cba	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x4002cba	            0x85c0	                           test eax, eax	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x4002cbc	            0x746a	                            je 0x4002d28	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x4002cbe	            0x31f6	                            xor esi, esi	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x4002cc0	          0x4889ef	                            mov rdi, rbp	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x4002cc3	    0x448bbdb80000	           mov r15d, dword [rbp + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4002cca	    0x8b1d00000000	            mov ebx, dword [0x04002cd0] 	       363	buffer.c	FUNCTION_3
0x4002cd0	      0xe800000000	                          call 0x4002cd5	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x4002cd5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x4002cda	      0xe800000000	                          call 0x4002cdf	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x4002cdf	            0x85c0	                           test eax, eax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x4002ce1	            0x7434	                            je 0x4002d17	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x4002ce3	    0x3b1d00000000	            cmp ebx, dword [0x04002ce9] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4002ce9	            0x743d	                            je 0x4002d28	       377	buffer.c	FUNCTION_4	CALL_1
0x4002ceb	    0x488b05000000	            mov rax, qword [0x04002cf2] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4002cf2	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4002cf5	            0x7512	                           jne 0x4002d09	       392	buffer.c	FUNCTION_5	FOR_1
0x4002cf7	            0xeb1e	                           jmp 0x4002d17	       392	buffer.c	FUNCTION_5	FOR_1
0x4002cf9	     0xf1f80000000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4002d00	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4002d04	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4002d07	            0x740e	                            je 0x4002d17	       392	buffer.c	FUNCTION_5	FOR_1
0x4002d09	          0x4839c5	                            cmp rbp, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4002d0c	            0x75f2	                           jne 0x4002d00	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4002d0e	    0x443bbdb80000	           cmp r15d, dword [rbp + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4002d15	            0x7411	                            je 0x4002d28	       378	buffer.c	FUNCTION_4
0x4002d17	    0x488b05000000	            mov rax, qword [0x04002d1e] 	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x4002d1e	      0x4889442410	             mov qword [rsp + 0x10], rax	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x4002d23	      0xe9a1fdffff	                           jmp 0x4002ac9	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x4002d28	    0x488b05000000	            mov rax, qword [0x04002d2f] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d2f	    0x483905000000	            cmp qword [0x04002d36], rax 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d36	            0x7428	                            je 0x4002d60	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d38	          0x4889ef	                            mov rdi, rbp	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d3b	      0xe800000000	                          call 0x4002d40	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d40	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d42	     0xf8448fdffff	                            je 0x4002a90	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d48	            0x31f6	                            xor esi, esi	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d4a	      0xe951fdffff	                           jmp 0x4002aa0	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d4f	              0x90	                                     nop	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4002d50	    0x488b05000000	            mov rax, qword [0x04002d57] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d57	    0x483905000000	            cmp qword [0x04002d5e], rax 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d5e	            0x75e8	                           jne 0x4002d48	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d60	    0x488b05000000	            mov rax, qword [0x04002d67] 	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d67	        0x48833800	                      cmp qword [rax], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d6b	            0x7407	                            je 0x4002d74	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d6d	      0x807c245300	                cmp byte [rsp + 0x53], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d72	            0x74c4	                            je 0x4002d38	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d74	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d79	    0xc74424680100	               mov dword [rsp + 0x68], 1	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4002d81	      0x4889442410	             mov qword [rsp + 0x10], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d86	      0xe93efdffff	                           jmp 0x4002ac9	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d8b	       0xf1f440000	                   nop dword [rax + rax]	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d90	           0xf94c3	                                 sete bl	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d93	      0xe971feffff	                           jmp 0x4002c09	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002d98	     0xf1f84000000	                   nop dword [rax + rax]	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002da0	          0x4589e7	                          mov r15d, r12d	      4875	buffer.c	FUNCTION_71
0x4002da3	      0xbb01000000	                              mov ebx, 1	      4875	buffer.c	FUNCTION_71
0x4002da8	      0xe95cfeffff	                           jmp 0x4002c09	      4875	buffer.c	FUNCTION_71
0x4002dad	           0xf1f00	                         nop dword [rax]	      4875	buffer.c	FUNCTION_71
0x4002db0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002db5	    0x486380ac0000	         movsxd rax, dword [rax + 0xac] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002dbc	    0x483b05000000	            cmp rax, qword [0x04002dc3] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002dc3	     0xf8589fcffff	                           jne 0x4002a52	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4002dc9	            0x31db	                            xor ebx, ebx	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002dcb	          0x4531ff	                          xor r15d, r15d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002dce	        0x4183fc00	                             cmp r12d, 0	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002dd2	     0xf8f63fdffff	                            jg 0x4002b3b	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002dd8	           0xf94c3	                                 sete bl	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002ddb	      0x448b7c2424	           mov r15d, dword [rsp + 0x24] 	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002de0	      0xe924feffff	                           jmp 0x4002c09	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002de5	           0xf1f00	                         nop dword [rax]	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002de8	          0x4539fc	                          cmp r12d, r15d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002deb	           0xf94c3	                                 sete bl	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002dee	      0xe9f4fdffff	                           jmp 0x4002be7	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002df3	       0xf1f440000	                   nop dword [rax + rax]	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4002df8	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x4002dfc	            0x85c0	                           test eax, eax	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x4002dfe	            0x74e8	                            je 0x4002de8	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x4002e00	          0x4589e7	                          mov r15d, r12d	      4875	buffer.c	FUNCTION_71
0x4002e03	      0xbb01000000	                              mov ebx, 1	      4875	buffer.c	FUNCTION_71
0x4002e08	      0xe9dafdffff	                           jmp 0x4002be7	      4875	buffer.c	FUNCTION_71
0x4002e0d	            0x31c0	                            xor eax, eax	      4927	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002e0f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      4927	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002e14	      0x48394c2460	            cmp qword [rsp + 0x60], rcx 	      4927	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002e19	           0xf94c0	                                 sete al	      4927	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002e1c	          0x83c002	                              add eax, 2	      4927	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002e1f	      0xe97bfdffff	                           jmp 0x4002b9f	      4927	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4002e24	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002e29	    0xc78088010000	              mov dword [rax + 0x188], 0	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002e33	      0xe9effdffff	                           jmp 0x4002c27	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4002e38	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5014	buffer.c	FUNCTION_71	IF_21
0x4002e3c	          0x4139c4	                           cmp r12d, eax	      5014	buffer.c	FUNCTION_71	IF_21
0x4002e3f	     0xf8cda010000	                            jl 0x400301f	      5014	buffer.c	FUNCTION_71	IF_21
0x4002e45	            0x85c0	                           test eax, eax	      5014	buffer.c	FUNCTION_71	IF_21
0x4002e47	     0xf8ed2010000	                           jle 0x400301f	      5014	buffer.c	FUNCTION_71	IF_21
0x4002e4d	    0x488b05000000	            mov rax, qword [0x04002e54] 	      5020	buffer.c	FUNCTION_71
0x4002e54	    0x488b3d000000	            mov rdi, qword [0x04002e5b] 	      5022	buffer.c	FUNCTION_71	CALL_23
0x4002e5b	            0x31f6	                            xor esi, esi	      5022	buffer.c	FUNCTION_71	CALL_23
0x4002e5d	    0x830500000000	               add dword [0x04002e64], 1	      5018	buffer.c	FUNCTION_71
0x4002e64	    0x830500000000	               add dword [0x04002e6b], 1	      5019	buffer.c	FUNCTION_71
0x4002e6b	      0x4889442410	             mov qword [rsp + 0x10], rax	      5020	buffer.c	FUNCTION_71
0x4002e70	    0x488b05000000	            mov rax, qword [0x04002e77] 	      5021	buffer.c	FUNCTION_71
0x4002e77	      0x4889442418	             mov qword [rsp + 0x18], rax	      5021	buffer.c	FUNCTION_71
0x4002e7c	      0xe800000000	                          call 0x4002e81	      5022	buffer.c	FUNCTION_71	CALL_23
0x4002e81	      0x448b5c2424	           mov r11d, dword [rsp + 0x24] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4002e86	          0x4585db	                         test r11d, r11d	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4002e89	            0x7411	                            je 0x4002e9c	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4002e8b	    0x488b05000000	            mov rax, qword [0x04002e92] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4002e92	        0x48833801	                      cmp qword [rax], 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4002e96	     0xf8455030000	                            je 0x40031f1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4002e9c	      0x448b4c2454	            mov r9d, dword [rsp + 0x54] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ea1	          0x4585c9	                           test r9d, r9d	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ea4	     0xf8ef2000000	                           jle 0x4002f9c	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002eaa	          0x4585e4	                         test r12d, r12d	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ead	     0xf8ee9000000	                           jle 0x4002f9c	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002eb3	    0x8b0500000000	            mov eax, dword [0x04002eb9] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002eb9	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ebb	     0xf85db000000	                           jne 0x4002f9c	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ec1	    0x41be01000000	                             mov r14d, 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ec7	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ecc	            0x31ed	                            xor ebp, ebp	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ece	      0x4489742408	               mov dword [rsp + 8], r14d	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ed3	          0x4589e6	                          mov r14d, r12d	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ed6	      0x448b64246c	           mov r12d, dword [rsp + 0x6c] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002edb	          0x4531ff	                          xor r15d, r15d	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ede	            0x6690	                                     nop	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002ee0	    0x4981fd000000	                              cmp r13, 0	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002ee7	     0xf8419020000	                            je 0x4003106	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4002eed	          0x803b00	                       cmp byte [rbx], 0	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x4002ef0	     0xf8433010000	                            je 0x4003029	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x4002ef6	    0x488b35000000	            mov rsi, qword [0x04002efd] 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x4002efd	    0x4439be880100	          cmp dword [rsi + 0x188], r15d 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x4002f04	            0x744a	                            je 0x4002f50	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x4002f06	    0x488b3d000000	            mov rdi, qword [0x04002f0d] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002f0d	          0x4885ff	                           test rdi, rdi	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002f10	            0x750f	                           jne 0x4002f21	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002f12	            0xeb3c	                           jmp 0x4002f50	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002f14	         0xf1f4000	                         nop dword [rax]	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002f18	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002f1c	          0x4885ff	                           test rdi, rdi	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002f1f	            0x742f	                            je 0x4002f50	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4002f21	    0x4439bf880100	          cmp dword [rdi + 0x188], r15d 	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4002f28	            0x75ee	                           jne 0x4002f18	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4002f2a	      0x448b442424	            mov r8d, dword [rsp + 0x24] 	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002f2f	          0x4585c0	                           test r8d, r8d	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002f32	     0xf84fe010000	                            je 0x4003136	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002f38	    0x488b05000000	            mov rax, qword [0x04002f3f] 	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002f3f	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002f44	      0x4889442458	             mov qword [rsp + 0x58], rax	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002f49	     0xf1f80000000	                         nop dword [rax]	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x4002f50	      0xe800000000	                          call 0x4002f55	      5086	buffer.c	FUNCTION_71	FOR_4	CALL_32
0x4002f55	          0x4585e4	                         test r12d, r12d	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002f58	            0x7e1c	                           jle 0x4002f76	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002f5a	            0x31ff	                            xor edi, edi	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002f5c	      0xe800000000	                          call 0x4002f61	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002f61	            0x4898	                                    cdqe	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002f63	    0x483b05000000	            cmp rax, qword [0x04002f6a] 	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002f6a	            0x7f0a	                            jg 0x4002f76	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x4002f6c	    0xc70500000000	         mov dword [0x04002f76], 0x270f 	      5090	buffer.c	FUNCTION_71	FOR_4	IF_33
0x4002f76	        0x4183c701	                             add r15d, 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f7a	      0x44397c2454	           cmp dword [rsp + 0x54], r15d 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f7f	            0x7e1b	                           jle 0x4002f9c	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f81	          0x4539fe	                          cmp r14d, r15d	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f84	            0x7e16	                           jle 0x4002f9c	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f86	    0x8b0500000000	            mov eax, dword [0x04002f8c] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f8c	        0x4883c510	                           add rbp, 0x10	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f90	        0x4883c301	                              add rbx, 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f94	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f96	     0xf8444ffffff	                            je 0x4002ee0	      5029	buffer.c	FUNCTION_71	FOR_4
0x4002f9c	          0x4c89ef	                            mov rdi, r13	      5094	buffer.c	FUNCTION_71	CALL_34
0x4002f9f	      0xe800000000	                          call 0x4002fa4	      5094	buffer.c	FUNCTION_71	CALL_34
0x4002fa4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5099	buffer.c	FUNCTION_71	IF_34
0x4002fa9	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      5099	buffer.c	FUNCTION_71	IF_34
0x4002fae	    0x832d00000000	               sub dword [0x04002fb5], 1	      5096	buffer.c	FUNCTION_71
0x4002fb5	          0x4839c8	                            cmp rax, rcx	      5099	buffer.c	FUNCTION_71	IF_34
0x4002fb8	            0x7422	                            je 0x4002fdc	      5099	buffer.c	FUNCTION_71	IF_34
0x4002fba	          0x4889c7	                            mov rdi, rax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4002fbd	      0xe800000000	                          call 0x4002fc2	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4002fc2	            0x85c0	                           test eax, eax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4002fc4	     0xf850e020000	                           jne 0x40031d8	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4002fca	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4002fcf	      0xe800000000	                          call 0x4002fd4	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4002fd4	            0x85c0	                           test eax, eax	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4002fd6	     0xf85eb010000	                           jne 0x40031c7	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4002fdc	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4002fe1	      0xe800000000	                          call 0x4002fe6	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4002fe6	            0x85c0	                           test eax, eax	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4002fe8	     0xf85c0010000	                           jne 0x40031ae	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4002fee	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4002ff3	      0xe800000000	                          call 0x4002ff8	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4002ff8	            0x85c0	                           test eax, eax	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4002ffa	     0xf859d010000	                           jne 0x400319d	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4003000	    0x832d00000000	               sub dword [0x04003007], 1	      5112	buffer.c	FUNCTION_71
0x4003007	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5113	buffer.c	FUNCTION_71	CALL_43
0x400300c	        0x4883c478	                           add rsp, 0x78	      5114	buffer.c	FUNCTION_71
0x4003010	              0x5b	                                 pop rbx	      5114	buffer.c	FUNCTION_71
0x4003011	              0x5d	                                 pop rbp	      5114	buffer.c	FUNCTION_71
0x4003012	            0x415c	                                 pop r12	      5114	buffer.c	FUNCTION_71
0x4003014	            0x415d	                                 pop r13	      5114	buffer.c	FUNCTION_71
0x4003016	            0x415e	                                 pop r14	      5114	buffer.c	FUNCTION_71
0x4003018	            0x415f	                                 pop r15	      5114	buffer.c	FUNCTION_71
0x400301a	      0xe900000000	                           jmp 0x400301f	      5113	buffer.c	FUNCTION_71	CALL_43
0x400301f	      0x4489642454	            mov dword [rsp + 0x54], r12d	      4875	buffer.c	FUNCTION_71
0x4003024	      0xe924feffff	                           jmp 0x4002e4d	      4875	buffer.c	FUNCTION_71
0x4003029	      0x837c240801	                  cmp dword [rsp + 8], 1	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x400302e	     0xf851cffffff	                           jne 0x4002f50	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x4003034	        0x8b742468	            mov esi, dword [rsp + 0x68] 	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4003038	            0x85f6	                           test esi, esi	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400303a	     0xf8400010000	                            je 0x4003140	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4003040	    0x832d00000000	               sub dword [0x04003047], 1	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x4003047	    0x488b05000000	            mov rax, qword [0x0400304e] 	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x400304e	          0x4585ff	                         test r15d, r15d	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4003051	      0x4889442428	             mov qword [rsp + 0x28], rax	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x4003056	    0x4489b8880100	           mov dword [rax + 0x188], r15d	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x400305d	            0x7511	                           jne 0x4003070	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x400305f	    0x488b0d000000	            mov rcx, qword [0x04003066] 	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4003066	      0x4889442448	             mov qword [rsp + 0x48], rax	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x400306b	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4003070	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4003075	        0x488b7008	                mov rsi, qword [rax + 8]	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4003079	          0x4889f7	                            mov rdi, rsi	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x400307c	      0xe800000000	                          call 0x4003081	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4003081	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4003083	    0x41b905000000	                              mov r9d, 5	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4003089	     0xf84f4000000	                            je 0x4003183	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400308f	          0x4889ea	                            mov rdx, rbp	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4003092	        0x49035510	             add rdx, qword [r13 + 0x10]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4003096	      0x44894c2440	             mov dword [rsp + 0x40], r9d	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400309b	          0x8b7a08	                mov edi, dword [rdx + 8]	      4831	buffer.c	FUNCTION_70	CALL_1
0x400309e	      0x4889542438	             mov qword [rsp + 0x38], rdx	      4831	buffer.c	FUNCTION_70	CALL_1
0x40030a3	      0xe800000000	                          call 0x40030a8	      4831	buffer.c	FUNCTION_70	CALL_1
0x40030a8	          0x4885c0	                           test rax, rax	      4832	buffer.c	FUNCTION_70	IF_1
0x40030ab	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4832	buffer.c	FUNCTION_70	IF_1
0x40030b0	      0x448b4c2440	            mov r9d, dword [rsp + 0x40] 	      4832	buffer.c	FUNCTION_70	IF_1
0x40030b5	     0xf84c0000000	                            je 0x400317b	      4832	buffer.c	FUNCTION_70	IF_1
0x40030bb	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      4832	buffer.c	FUNCTION_70	IF_1
0x40030c2	          0x4885f6	                           test rsi, rsi	      4832	buffer.c	FUNCTION_70	IF_1
0x40030c5	     0xf84b0000000	                            je 0x400317b	      4832	buffer.c	FUNCTION_70	IF_1
0x40030cb	        0x4883ec08	                              sub rsp, 8	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40030cf	            0x31c9	                            xor ecx, ecx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40030d1	            0x31d2	                            xor edx, edx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40030d3	        0xff742430	                 push qword [rsp + 0x30]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40030d7	            0x31ff	                            xor edi, edi	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40030d9	    0x41b801000000	                              mov r8d, 1	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40030df	      0xe800000000	                          call 0x40030e4	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40030e4	              0x58	                                 pop rax	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x40030e5	              0x5a	                                 pop rdx	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x40030e6	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x40030ea	            0x85c9	                           test ecx, ecx	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x40030ec	     0xf845efeffff	                            je 0x4002f50	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x40030f2	    0x830500000000	               add dword [0x040030f9], 1	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x40030f9	    0xc74424680000	               mov dword [rsp + 0x68], 0	      5084	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x4003101	      0xe94afeffff	                           jmp 0x4002f50	      5084	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x4003106	    0x8b0500000000	            mov eax, dword [0x0400310c] 	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400310c	          0x83e801	                              sub eax, 1	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400310f	          0x4439f8	                           cmp eax, r15d	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4003112	     0xf85d5fdffff	                           jne 0x4002eed	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4003118	    0xc70500000000	               mov dword [0x04003122], 1	      5032	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4003122	      0xe9c6fdffff	                           jmp 0x4002eed	      5032	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4003127	        0x4883c478	                           add rsp, 0x78	      5114	buffer.c	FUNCTION_71
0x400312b	              0x5b	                                 pop rbx	      5114	buffer.c	FUNCTION_71
0x400312c	              0x5d	                                 pop rbp	      5114	buffer.c	FUNCTION_71
0x400312d	            0x415c	                                 pop r12	      5114	buffer.c	FUNCTION_71
0x400312f	            0x415d	                                 pop r13	      5114	buffer.c	FUNCTION_71
0x4003131	            0x415e	                                 pop r14	      5114	buffer.c	FUNCTION_71
0x4003133	            0x415f	                                 pop r15	      5114	buffer.c	FUNCTION_71
0x4003135	              0xc3	                                     ret	      5114	buffer.c	FUNCTION_71
0x4003136	      0xe800000000	                          call 0x400313b	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x400313b	      0xe910feffff	                           jmp 0x4002f50	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x4003140	    0x8b1500000000	            mov edx, dword [0x04003146] 	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4003146	            0x31ff	                            xor edi, edi	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4003148	      0xbe21000000	                           mov esi, 0x21	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x400314d	    0xc70500000000	               mov dword [0x04003157], 1	      5059	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4003157	        0x89542428	             mov dword [rsp + 0x28], edx	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400315b	      0xe800000000	                          call 0x4003160	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4003160	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4003164	            0x85c0	                           test eax, eax	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x4003166	        0x89442408	                mov dword [rsp + 8], eax	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x400316a	    0x891500000000	            mov dword [0x04003170], edx 	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4003170	     0xf8400feffff	                            je 0x4002f76	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x4003176	      0xe9ccfeffff	                           jmp 0x4003047	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x400317b	          0x488b32	                    mov rsi, qword [rdx]	      4833	buffer.c	FUNCTION_70	IF_1
0x400317e	      0xe948ffffff	                           jmp 0x40030cb	      4833	buffer.c	FUNCTION_70	IF_1
0x4003183	          0x4889f7	                            mov rdi, rsi	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4003186	      0xe800000000	                          call 0x400318b	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400318b	          0x4531c9	                            xor r9d, r9d	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400318e	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4003190	        0x410f95c1	                               setne r9b	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4003194	        0x4183c104	                              add r9d, 4	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4003198	      0xe9f2feffff	                           jmp 0x400308f	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400319d	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5110	buffer.c	FUNCTION_71	CALL_42
0x40031a2	            0x31f6	                            xor esi, esi	      5110	buffer.c	FUNCTION_71	CALL_42
0x40031a4	      0xe800000000	                          call 0x40031a9	      5110	buffer.c	FUNCTION_71	CALL_42
0x40031a9	      0xe952feffff	                           jmp 0x4003000	      5110	buffer.c	FUNCTION_71	CALL_42
0x40031ae	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5108	buffer.c	FUNCTION_71	CALL_40
0x40031b3	      0xba01000000	                              mov edx, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0x40031b8	      0xbe01000000	                              mov esi, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0x40031bd	      0xe800000000	                          call 0x40031c2	      5108	buffer.c	FUNCTION_71	CALL_40
0x40031c2	      0xe927feffff	                           jmp 0x4002fee	      5108	buffer.c	FUNCTION_71	CALL_40
0x40031c7	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x40031cc	            0x31f6	                            xor esi, esi	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x40031ce	      0xe800000000	                          call 0x40031d3	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x40031d3	      0xe904feffff	                           jmp 0x4002fdc	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x40031d8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40031dd	      0xba01000000	                              mov edx, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40031e2	      0xbe01000000	                              mov esi, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40031e7	      0xe800000000	                          call 0x40031ec	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40031ec	      0xe9d9fdffff	                           jmp 0x4002fca	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40031f1	      0xbf01000000	                              mov edi, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40031f6	      0xe800000000	                          call 0x40031fb	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40031fb	          0x803800	                       cmp byte [rax], 0	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40031fe	     0xf8598fcffff	                           jne 0x4002e9c	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4003204	    0x488b05000000	            mov rax, qword [0x0400320b] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400320b	        0x83787801	               cmp dword [rax + 0x78], 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400320f	     0xf8587fcffff	                           jne 0x4002e9c	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4003215	    0x4883b8880000	               cmp qword [rax + 0x88], 0	      5026	buffer.c	FUNCTION_71	IF_22
0x400321d	     0xf8579fcffff	                           jne 0x4002e9c	      5026	buffer.c	FUNCTION_71	IF_22
0x4003223	    0x448b90c80000	           mov r10d, dword [rax + 0xc8] 	      5027	buffer.c	FUNCTION_71	IF_22
0x400322a	      0xb801000000	                              mov eax, 1	      5027	buffer.c	FUNCTION_71	IF_22
0x400322f	          0x4585d2	                         test r10d, r10d	      5027	buffer.c	FUNCTION_71	IF_22
0x4003232	       0xf45442468	          cmovne eax, dword [rsp + 0x68]	      5027	buffer.c	FUNCTION_71	IF_22
0x4003237	        0x89442468	             mov dword [rsp + 0x68], eax	      5027	buffer.c	FUNCTION_71	IF_22
0x400323b	      0xe95cfcffff	                           jmp 0x4002e9c	      5027	buffer.c	FUNCTION_71	IF_22
buflist_name_nr	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0	34
0x4002070	              0x55	                                push rbp	      3058	buffer.c	FUNCTION_46
0x4002071	              0x53	                                push rbx	      3058	buffer.c	FUNCTION_46
0x4002072	          0x4889f5	                            mov rbp, rsi	      3058	buffer.c	FUNCTION_46
0x4002075	          0x4889d3	                            mov rbx, rdx	      3058	buffer.c	FUNCTION_46
0x4002078	        0x4883ec08	                              sub rsp, 8	      3058	buffer.c	FUNCTION_46
0x400207c	      0xe800000000	                          call 0x4002081	      3061	buffer.c	FUNCTION_46	CALL_1
0x4002081	          0x4885c0	                           test rax, rax	      3062	buffer.c	FUNCTION_46	IF_1
0x4002084	            0x744a	                            je 0x40020d0	      3062	buffer.c	FUNCTION_46	IF_1
0x4002086	    0x488b88980000	            mov rcx, qword [rax + 0x98] 	      3062	buffer.c	FUNCTION_46	IF_1
0x400208d	          0x4889c2	                            mov rdx, rax	      3062	buffer.c	FUNCTION_46	IF_1
0x4002090	            0x31c0	                            xor eax, eax	      3063	buffer.c	FUNCTION_46	IF_1
0x4002092	          0x4885c9	                           test rcx, rcx	      3062	buffer.c	FUNCTION_46	IF_1
0x4002095	            0x742d	                            je 0x40020c4	      3062	buffer.c	FUNCTION_46	IF_1
0x4002097	        0x48894d00	                    mov qword [rbp], rcx	      3065	buffer.c	FUNCTION_46
0x400209b	    0x488bba280100	           mov rdi, qword [rdx + 0x128] 	      2931	buffer.c	FUNCTION_43	CALL_2
0x40020a2	            0x31f6	                            xor esi, esi	      2931	buffer.c	FUNCTION_43	CALL_2
0x40020a4	      0xe807ecffff	            call sym.find_wininfo.isra.2	      2931	buffer.c	FUNCTION_43	CALL_2
0x40020a9	        0x488d5018	                   lea rdx, [rax + 0x18]	      2933	buffer.c	FUNCTION_43	IF_1
0x40020ad	          0x4885c0	                           test rax, rax	      2933	buffer.c	FUNCTION_43	IF_1
0x40020b0	      0xb800000000	                              mov eax, 0	      2933	buffer.c	FUNCTION_43	IF_1
0x40020b5	        0x480f45c2	                         cmovne rax, rdx	      2933	buffer.c	FUNCTION_43	IF_1
0x40020b9	          0x488b00	                    mov rax, qword [rax]	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x40020bc	          0x488903	                    mov qword [rbx], rax	      3066	buffer.c	FUNCTION_46	CALL_2
0x40020bf	      0xb801000000	                              mov eax, 1	      3068	buffer.c	FUNCTION_46
0x40020c4	        0x4883c408	                              add rsp, 8	      3069	buffer.c	FUNCTION_46
0x40020c8	              0x5b	                                 pop rbx	      3069	buffer.c	FUNCTION_46
0x40020c9	              0x5d	                                 pop rbp	      3069	buffer.c	FUNCTION_46
0x40020ca	              0xc3	                                     ret	      3069	buffer.c	FUNCTION_46
0x40020cb	       0xf1f440000	                   nop dword [rax + rax]	      3069	buffer.c	FUNCTION_46
0x40020d0	        0x4883c408	                              add rsp, 8	      3069	buffer.c	FUNCTION_46
0x40020d4	            0x31c0	                            xor eax, eax	      3063	buffer.c	FUNCTION_46	IF_1
0x40020d6	              0x5b	                                 pop rbx	      3069	buffer.c	FUNCTION_46
0x40020d7	              0x5d	                                 pop rbp	      3069	buffer.c	FUNCTION_46
0x40020d8	              0xc3	                                     ret	      3069	buffer.c	FUNCTION_46
sign_list_placed	IF,3:WHILE,1:DO,0:SWITCH,0:CALL,13:FOR,1:functions,0:ELSE,1	97
0x4009f20	            0x4157	                                push r15	      6088	buffer.c	FUNCTION_99
0x4009f22	            0x4156	                                push r14	      6088	buffer.c	FUNCTION_99
0x4009f24	      0xba05000000	                              mov edx, 5	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009f29	            0x4155	                                push r13	      6088	buffer.c	FUNCTION_99
0x4009f2b	            0x4154	                                push r12	      6088	buffer.c	FUNCTION_99
0x4009f2d	          0x4989fe	                            mov r14, rdi	      6088	buffer.c	FUNCTION_99
0x4009f30	              0x55	                                push rbp	      6088	buffer.c	FUNCTION_99
0x4009f31	              0x53	                                push rbx	      6088	buffer.c	FUNCTION_99
0x4009f32	      0xbe00000000	                              mov esi, 0	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009f37	            0x31ff	                            xor edi, edi	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009f39	          0x4d89f5	                            mov r13, r14	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009f3c	    0x4881ec182000	                         sub rsp, 0x2018	      6088	buffer.c	FUNCTION_99
0x4009f43	    0x64488b042528	                mov rax, qword fs:[0x28]	      6088	buffer.c	FUNCTION_99
0x4009f4c	    0x488984240820	          mov qword [rsp + 0x2008], rax 	      6088	buffer.c	FUNCTION_99
0x4009f54	            0x31c0	                            xor eax, eax	      6088	buffer.c	FUNCTION_99
0x4009f56	      0xe800000000	                          call 0x4009f5b	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009f5b	          0x4889c7	                            mov rdi, rax	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009f5e	      0xe800000000	                          call 0x4009f63	      6093	buffer.c	FUNCTION_99	CALL_2
0x4009f63	      0xbf0a000000	                            mov edi, 0xa	      6094	buffer.c	FUNCTION_99	CALL_3
0x4009f68	      0xe800000000	                          call 0x4009f6d	      6094	buffer.c	FUNCTION_99	CALL_3
0x4009f6d	          0x4d85f6	                           test r14, r14	      6095	buffer.c	FUNCTION_99	IF_1
0x4009f70	     0xf8414010000	                            je 0x400a08a	      6095	buffer.c	FUNCTION_99	IF_1
0x4009f76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6095	buffer.c	FUNCTION_99	IF_1
0x4009f80	    0x8b0500000000	            mov eax, dword [0x04009f86] 	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009f86	            0x85c0	                           test eax, eax	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009f88	     0xf85d7000000	                           jne 0x400a065	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x4009f8e	    0x4983bd201c00	             cmp qword [r13 + 0x1c20], 0	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x4009f96	     0xf84b7000000	                            je 0x400a053	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x4009f9c	    0x498b9d980000	            mov rbx, qword [r13 + 0x98] 	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fa3	            0x31ff	                            xor edi, edi	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fa5	      0xba05000000	                              mov edx, 5	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009faa	      0xbe00000000	                              mov esi, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009faf	      0xe800000000	                          call 0x4009fb4	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fb4	          0x4889d9	                            mov rcx, rbx	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fb7	          0x4889c2	                            mov rdx, rax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fba	      0xbe00200000	                         mov esi, 0x2000	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fbf	          0x4889e7	                            mov rdi, rsp	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fc2	            0x31c0	                            xor eax, eax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fc4	      0xe800000000	                          call 0x4009fc9	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x4009fc9	    0x8b3500000000	            mov esi, dword [0x04009fcf] 	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x4009fcf	          0x4889e7	                            mov rdi, rsp	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x4009fd2	      0xe800000000	                          call 0x4009fd7	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x4009fd7	      0xbf0a000000	                            mov edi, 0xa	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0x4009fdc	      0xe800000000	                          call 0x4009fe1	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0x4009fe1	    0x498b9d201c00	          mov rbx, qword [r13 + 0x1c20] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009fe8	          0x4885db	                           test rbx, rbx	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009feb	            0x755c	                           jne 0x400a049	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009fed	            0xeb64	                           jmp 0x400a053	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009fef	              0x90	                                     nop	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x4009ff0	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009ff3	      0xe800000000	                          call 0x4009ff8	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009ff8	          0x448b23	                   mov r12d, dword [rbx]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x4009ffb	        0x488b6b08	                mov rbp, qword [rbx + 8]	      6110	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_11
0x4009fff	            0x31ff	                            xor edi, edi	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a001	          0x4989c7	                            mov r15, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a004	      0xba05000000	                              mov edx, 5	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a009	      0xbe00000000	                              mov esi, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a00e	      0xe800000000	                          call 0x400a013	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a013	          0x4d89f9	                             mov r9, r15	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a016	          0x4889c2	                            mov rdx, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a019	          0x4589e0	                           mov r8d, r12d	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a01c	          0x4889e9	                            mov rcx, rbp	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a01f	      0xbe00200000	                         mov esi, 0x2000	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a024	          0x4889e7	                            mov rdi, rsp	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a027	            0x31c0	                            xor eax, eax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a029	      0xe800000000	                          call 0x400a02e	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400a02e	          0x4889e7	                            mov rdi, rsp	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x400a031	      0xe800000000	                          call 0x400a036	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x400a036	      0xbf0a000000	                            mov edi, 0xa	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0x400a03b	      0xe800000000	                          call 0x400a040	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0x400a040	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400a044	          0x4885db	                           test rbx, rbx	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400a047	            0x740a	                            je 0x400a053	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400a049	    0x8b0500000000	            mov eax, dword [0x0400a04f] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400a04f	            0x85c0	                           test eax, eax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400a051	            0x749d	                            je 0x4009ff0	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400a053	          0x4d85f6	                           test r14, r14	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400a056	            0x750d	                           jne 0x400a065	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400a058	        0x4d8b6d68	            mov r13, qword [r13 + 0x68] 	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400a05c	          0x4d85ed	                           test r13, r13	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400a05f	     0xf851bffffff	                           jne 0x4009f80	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400a065	    0x488b84240820	          mov rax, qword [rsp + 0x2008] 	      6118	buffer.c	FUNCTION_99
0x400a06d	    0x644833042528	                xor rax, qword fs:[0x28]	      6118	buffer.c	FUNCTION_99
0x400a076	            0x7524	                           jne 0x400a09c	      6118	buffer.c	FUNCTION_99
0x400a078	    0x4881c4182000	                         add rsp, 0x2018	      6118	buffer.c	FUNCTION_99
0x400a07f	              0x5b	                                 pop rbx	      6118	buffer.c	FUNCTION_99
0x400a080	              0x5d	                                 pop rbp	      6118	buffer.c	FUNCTION_99
0x400a081	            0x415c	                                 pop r12	      6118	buffer.c	FUNCTION_99
0x400a083	            0x415d	                                 pop r13	      6118	buffer.c	FUNCTION_99
0x400a085	            0x415e	                                 pop r14	      6118	buffer.c	FUNCTION_99
0x400a087	            0x415f	                                 pop r15	      6118	buffer.c	FUNCTION_99
0x400a089	              0xc3	                                     ret	      6118	buffer.c	FUNCTION_99
0x400a08a	    0x4c8b2d000000	            mov r13, qword [0x0400a091] 	      6096	buffer.c	FUNCTION_99	IF_1
0x400a091	          0x4d85ed	                           test r13, r13	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400a094	     0xf85e6feffff	                           jne 0x4009f80	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400a09a	            0xebc9	                           jmp 0x400a065	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400a09c	      0xe800000000	                          call 0x400a0a1	      6118	buffer.c	FUNCTION_99
buflist_nr2name	IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:FOR,0:functions,0:ELSE,0	27
0x4001ee0	              0x55	                                push rbp	      2735	buffer.c	FUNCTION_38
0x4001ee1	              0x53	                                push rbx	      2735	buffer.c	FUNCTION_38
0x4001ee2	            0x89f5	                            mov ebp, esi	      2735	buffer.c	FUNCTION_38
0x4001ee4	            0x89d3	                            mov ebx, edx	      2735	buffer.c	FUNCTION_38
0x4001ee6	        0x4883ec08	                              sub rsp, 8	      2735	buffer.c	FUNCTION_38
0x4001eea	      0xe800000000	                          call 0x4001eef	      2738	buffer.c	FUNCTION_38	CALL_1
0x4001eef	          0x4885c0	                           test rax, rax	      2739	buffer.c	FUNCTION_38	IF_1
0x4001ef2	            0x7434	                            je 0x4001f28	      2739	buffer.c	FUNCTION_38	IF_1
0x4001ef4	            0x85ed	                           test ebp, ebp	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001ef6	            0x7520	                           jne 0x4001f18	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001ef8	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001eff	            0x85db	                           test ebx, ebx	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001f01	      0xbf00000000	                              mov edi, 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001f06	        0x480f45f8	                         cmovne rdi, rax	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001f0a	        0x4883c408	                              add rsp, 8	      2743	buffer.c	FUNCTION_38
0x4001f0e	              0x5b	                                 pop rbx	      2743	buffer.c	FUNCTION_38
0x4001f0f	              0x5d	                                 pop rbp	      2743	buffer.c	FUNCTION_38
0x4001f10	      0xe900000000	                           jmp 0x4001f15	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001f15	           0xf1f00	                         nop dword [rax]	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001f18	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001f1f	            0xebde	                           jmp 0x4001eff	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001f21	     0xf1f80000000	                         nop dword [rax]	      2741	buffer.c	FUNCTION_38	CALL_2
0x4001f28	        0x4883c408	                              add rsp, 8	      2743	buffer.c	FUNCTION_38
0x4001f2c	            0x31c0	                            xor eax, eax	      2743	buffer.c	FUNCTION_38
0x4001f2e	              0x5b	                                 pop rbx	      2743	buffer.c	FUNCTION_38
0x4001f2f	              0x5d	                                 pop rbp	      2743	buffer.c	FUNCTION_38
0x4001f30	              0xc3	                                     ret	      2743	buffer.c	FUNCTION_38
do_bufdel	IF,20:WHILE,0:DO,0:SWITCH,0:CALL,28:FOR,1:functions,0:ELSE,13	190
0x4008910	            0x4157	                                push r15	      1099	buffer.c	FUNCTION_17
0x4008912	            0x4156	                                push r14	      1099	buffer.c	FUNCTION_17
0x4008914	            0x4155	                                push r13	      1099	buffer.c	FUNCTION_17
0x4008916	            0x4154	                                push r12	      1099	buffer.c	FUNCTION_17
0x4008918	          0x4189fc	                           mov r12d, edi	      1099	buffer.c	FUNCTION_17
0x400891b	              0x55	                                push rbp	      1099	buffer.c	FUNCTION_17
0x400891c	              0x53	                                push rbx	      1099	buffer.c	FUNCTION_17
0x400891d	        0x4883ec18	                           sub rsp, 0x18	      1099	buffer.c	FUNCTION_17
0x4008921	            0x85d2	                           test edx, edx	      1106	buffer.c	FUNCTION_17	IF_1
0x4008923	      0x4889742408	                mov qword [rsp + 8], rsi	      1099	buffer.c	FUNCTION_17
0x4008928	        0x44890424	                    mov dword [rsp], r8d	      1099	buffer.c	FUNCTION_17
0x400892c	      0x44894c2404	                mov dword [rsp + 4], r9d	      1099	buffer.c	FUNCTION_17
0x4008931	     0xf846f020000	                            je 0x4008ba6	      1106	buffer.c	FUNCTION_17	IF_1
0x4008937	          0x83fa02	                              cmp edx, 2	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x400893a	            0x89d5	                            mov ebp, edx	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x400893c	        0x448b3c24	                   mov r15d, dword [rsp]	      1119	buffer.c	FUNCTION_17	ELSE_1	ELSE_2
0x4008940	     0xf84ea010000	                            je 0x4008b30	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x4008946	    0x8b0500000000	            mov eax, dword [0x0400894c] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400894c	            0x31db	                            xor ebx, ebx	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400894e	          0x4531f6	                          xor r14d, r14d	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008951	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008953	            0x742c	                            je 0x4008981	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008955	      0xe964020000	                           jmp 0x4008bbe	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400895a	    0x660f1f440000	                    nop word [rax + rax]	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008960	        0x4183c701	                             add r15d, 1	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4008964	        0x44393c24	                   cmp dword [rsp], r15d	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x4008968	     0xf8cc2000000	                            jl 0x4008a30	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x400896e	      0xe800000000	                          call 0x4008973	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008973	    0x8b0500000000	            mov eax, dword [0x04008979] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008979	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400897b	     0xf85af000000	                           jne 0x4008a30	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008981	    0x488b05000000	            mov rax, qword [0x04008988] 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x4008988	    0x4439b8b80000	           cmp dword [rax + 0xb8], r15d 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x400898f	     0xf8403010000	                            je 0x4008a98	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x4008995	      0x448b442404	                mov r8d, dword [rsp + 4]	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x400899a	          0x4489f9	                           mov ecx, r15d	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x400899d	      0xba01000000	                              mov edx, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x40089a2	      0xbe01000000	                              mov esi, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x40089a7	          0x4489e7	                           mov edi, r12d	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x40089aa	      0xe800000000	                          call 0x40089af	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x40089af	          0x83f801	                              cmp eax, 1	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x40089b2	           0xf94c0	                                 sete al	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x40089b5	           0xfb6c0	                           movzx eax, al	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x40089b8	             0x1c3	                            add ebx, eax	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x40089ba	          0x83fd02	                              cmp ebp, 2	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x40089bd	            0x74a1	                            je 0x4008960	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x40089bf	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x40089c4	      0xe800000000	                          call 0x40089c9	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x40089c9	      0x4889442408	                mov qword [rsp + 8], rax	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x40089ce	           0xfb610	                   movzx edx, byte [rax]	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x40089d1	            0x84d2	                             test dl, dl	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x40089d3	            0x745b	                            je 0x4008a30	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x40089d5	          0x83ea30	                           sub edx, 0x30	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x40089d8	          0x83fa09	                              cmp edx, 9	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x40089db	     0xf86bf000000	                           jbe 0x4008aa0	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x40089e1	          0x4889c7	                            mov rdi, rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x40089e4	      0xe800000000	                          call 0x40089e9	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x40089e9	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x40089ee	            0x31d2	                            xor edx, edx	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x40089f0	        0x4183fc04	                             cmp r12d, 4	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x40089f4	           0xf94c2	                                 sete dl	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x40089f7	          0x4889c6	                            mov rsi, rax	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x40089fa	          0x4531c0	                            xor r8d, r8d	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x40089fd	            0x31c9	                            xor ecx, ecx	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x40089ff	          0x4989c5	                            mov r13, rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x4008a02	      0xe800000000	                          call 0x4008a07	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4008a07	            0x85c0	                           test eax, eax	      1153	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x4008a09	          0x4189c7	                           mov r15d, eax	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x4008a0c	            0x7822	                            js 0x4008a30	      1153	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x4008a0e	      0x4c896c2408	                mov qword [rsp + 8], r13	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x4008a13	      0xe800000000	                          call 0x4008a18	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008a18	    0x8b0500000000	            mov eax, dword [0x04008a1e] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008a1e	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008a20	     0xf845bffffff	                            je 0x4008981	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008a26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x4008a30	          0x4585f6	                         test r14d, r14d	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008a33	    0x8b0500000000	            mov eax, dword [0x04008a39] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008a39	            0x7404	                            je 0x4008a3f	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008a3b	            0x85c0	                           test eax, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008a3d	            0x7479	                            je 0x4008ab8	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008a3f	            0x85db	                           test ebx, ebx	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4008a41	     0xf8599000000	                           jne 0x4008ae0	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4008a47	        0x4183fc02	                             cmp r12d, 2	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x4008a4b	      0xba05000000	                              mov edx, 5	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4008a50	      0xbe00000000	                              mov esi, 0	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x4008a55	            0x7410	                            je 0x4008a67	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x4008a57	        0x4183fc03	                             cmp r12d, 3	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4008a5b	      0xbe00000000	                              mov esi, 0	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4008a60	            0x7405	                            je 0x4008a67	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x4008a62	      0xbe00000000	                              mov esi, 0	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4008a67	            0x31ff	                            xor edi, edi	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4008a69	      0xe800000000	                          call 0x4008a6e	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x4008a6e	    0x488b3d000000	            mov rdi, qword [0x04008a75] 	       110	string3.h	FUNCTION_127	CALL_3
0x4008a75	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_127	CALL_3
0x4008a78	      0xe800000000	                          call 0x4008a7d	       110	string3.h	FUNCTION_127	CALL_3
0x4008a7d	    0x488b05000000	            mov rax, qword [0x04008a84] 	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x4008a84	        0x4883c418	                           add rsp, 0x18	      1203	buffer.c	FUNCTION_17
0x4008a88	              0x5b	                                 pop rbx	      1203	buffer.c	FUNCTION_17
0x4008a89	              0x5d	                                 pop rbp	      1203	buffer.c	FUNCTION_17
0x4008a8a	            0x415c	                                 pop r12	      1203	buffer.c	FUNCTION_17
0x4008a8c	            0x415d	                                 pop r13	      1203	buffer.c	FUNCTION_17
0x4008a8e	            0x415e	                                 pop r14	      1203	buffer.c	FUNCTION_17
0x4008a90	            0x415f	                                 pop r15	      1203	buffer.c	FUNCTION_17
0x4008a92	              0xc3	                                     ret	      1203	buffer.c	FUNCTION_17
0x4008a93	       0xf1f440000	                   nop dword [rax + rax]	      1203	buffer.c	FUNCTION_17
0x4008a98	          0x4589fe	                          mov r14d, r15d	      1203	buffer.c	FUNCTION_17
0x4008a9b	      0xe91affffff	                           jmp 0x40089ba	      1203	buffer.c	FUNCTION_17
0x4008aa0	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4008aa5	      0xe800000000	                          call 0x4008aaa	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4008aaa	          0x4189c7	                           mov r15d, eax	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4008aad	      0xe9bcfeffff	                           jmp 0x400896e	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4008ab2	    0x660f1f440000	                    nop word [rax + rax]	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x4008ab8	      0x448b442404	                mov r8d, dword [rsp + 4]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008abd	          0x4489f1	                           mov ecx, r14d	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008ac0	      0xba01000000	                              mov edx, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008ac5	      0xbe01000000	                              mov esi, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008aca	          0x4489e7	                           mov edi, r12d	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008acd	      0xe800000000	                          call 0x4008ad2	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008ad2	          0x83f801	                              cmp eax, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008ad5	     0xf8564ffffff	                           jne 0x4008a3f	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008adb	          0x83c301	                              add ebx, 1	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x4008ade	            0x6690	                                     nop	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x4008ae0	          0x4863c3	                         movsxd rax, ebx	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4008ae3	    0x483b05000000	            cmp rax, qword [0x04008aea] 	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4008aea	            0x7c2e	                            jl 0x4008b1a	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x4008aec	        0x4183fc02	                             cmp r12d, 2	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x4008af0	      0xba05000000	                              mov edx, 5	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4008af5	            0x7463	                            je 0x4008b5a	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x4008af7	        0x4183fc03	                             cmp r12d, 3	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x4008afb	            0x746e	                            je 0x4008b6b	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x4008afd	          0x83fb01	                              cmp ebx, 1	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x4008b00	      0xbe00000000	                              mov esi, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008b05	            0x743b	                            je 0x4008b42	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x4008b07	            0x31ff	                            xor edi, edi	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008b09	      0xe800000000	                          call 0x4008b0e	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008b0e	            0x89de	                            mov esi, ebx	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008b10	          0x4889c7	                            mov rdi, rax	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008b13	            0x31c0	                            xor eax, eax	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008b15	      0xe800000000	                          call 0x4008b1a	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x4008b1a	            0x31c0	                            xor eax, eax	      1102	buffer.c	FUNCTION_17
0x4008b1c	        0x4883c418	                           add rsp, 0x18	      1203	buffer.c	FUNCTION_17
0x4008b20	              0x5b	                                 pop rbx	      1203	buffer.c	FUNCTION_17
0x4008b21	              0x5d	                                 pop rbp	      1203	buffer.c	FUNCTION_17
0x4008b22	            0x415c	                                 pop r12	      1203	buffer.c	FUNCTION_17
0x4008b24	            0x415d	                                 pop r13	      1203	buffer.c	FUNCTION_17
0x4008b26	            0x415e	                                 pop r14	      1203	buffer.c	FUNCTION_17
0x4008b28	            0x415f	                                 pop r15	      1203	buffer.c	FUNCTION_17
0x4008b2a	              0xc3	                                     ret	      1203	buffer.c	FUNCTION_17
0x4008b2b	       0xf1f440000	                   nop dword [rax + rax]	      1203	buffer.c	FUNCTION_17
0x4008b30	      0x488b442408	                mov rax, qword [rsp + 8]	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4008b35	          0x803800	                       cmp byte [rax], 0	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4008b38	            0x7556	                           jne 0x4008b90	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x4008b3a	          0x4189cf	                           mov r15d, ecx	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x4008b3d	      0xe904feffff	                           jmp 0x4008946	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x4008b42	      0xbe00000000	                              mov esi, 0	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008b47	            0x31ff	                            xor edi, edi	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008b49	      0xe800000000	                          call 0x4008b4e	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008b4e	          0x4889c7	                            mov rdi, rax	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008b51	      0xe800000000	                          call 0x4008b56	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x4008b56	            0x31c0	                            xor eax, eax	      1102	buffer.c	FUNCTION_17
0x4008b58	            0xebc2	                           jmp 0x4008b1c	      1102	buffer.c	FUNCTION_17
0x4008b5a	          0x83fb01	                              cmp ebx, 1	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x4008b5d	      0xbe00000000	                              mov esi, 0	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x4008b62	            0x74e3	                            je 0x4008b47	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x4008b64	      0xbe00000000	                              mov esi, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4008b69	            0xeb9c	                           jmp 0x4008b07	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x4008b6b	          0x83fb01	                              cmp ebx, 1	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x4008b6e	      0xbe00000000	                              mov esi, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x4008b73	            0x7592	                           jne 0x4008b07	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x4008b75	      0xbe00000000	                              mov esi, 0	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4008b7a	            0x31ff	                            xor edi, edi	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4008b7c	      0xe800000000	                          call 0x4008b81	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4008b81	          0x4889c7	                            mov rdi, rax	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4008b84	      0xe800000000	                          call 0x4008b89	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x4008b89	            0x31c0	                            xor eax, eax	      1102	buffer.c	FUNCTION_17
0x4008b8b	      0xe9f4feffff	                           jmp 0x4008a84	      1102	buffer.c	FUNCTION_17
0x4008b90	      0xba05000000	                              mov edx, 5	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4008b95	      0xbe00000000	                              mov esi, 0	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4008b9a	            0x31ff	                            xor edi, edi	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4008b9c	      0xe800000000	                          call 0x4008ba1	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4008ba1	      0xe9defeffff	                           jmp 0x4008a84	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x4008ba6	          0x4589c8	                            mov r8d, r9d	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4008ba9	            0x31c9	                            xor ecx, ecx	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4008bab	      0xba01000000	                              mov edx, 1	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4008bb0	            0x31f6	                            xor esi, esi	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4008bb2	      0xe800000000	                          call 0x4008bb7	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x4008bb7	            0x31c0	                            xor eax, eax	      1102	buffer.c	FUNCTION_17
0x4008bb9	      0xe9c6feffff	                           jmp 0x4008a84	      1102	buffer.c	FUNCTION_17
0x4008bbe	    0x8b0500000000	            mov eax, dword [0x04008bc4] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x4008bc4	      0xe97efeffff	                           jmp 0x4008a47	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
