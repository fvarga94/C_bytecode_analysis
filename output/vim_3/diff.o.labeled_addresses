diff_invalidate	DO,0:WHILE,0:IF,0:CALL,0:ELSE,0:functions,1:SWITCH,0:FOR,0	33
0x40011b0	              0x55	                                push rbp	       195	diff.c	FUNCTION_7
0x40011b1	              0x53	                                push rbx	       195	diff.c	FUNCTION_7
0x40011b2	        0x4883ec08	                              sub rsp, 8	       195	diff.c	FUNCTION_7
0x40011b6	    0x488b1d000000	            mov rbx, qword [0x040011bd] 	       199	diff.c	FUNCTION_7
0x40011bd	          0x4885db	                           test rbx, rbx	       199	diff.c	FUNCTION_7
0x40011c0	            0x742c	                            je 0x40011ee	       199	diff.c	FUNCTION_7
0x40011c2	          0x4889fd	                            mov rbp, rdi	       199	diff.c	FUNCTION_7
0x40011c5	           0xf1f00	                         nop dword [rax]	       199	diff.c	FUNCTION_7
0x40011c8	        0x488d4360	                   lea rax, [rbx + 0x60]	       199	diff.c	FUNCTION_7
0x40011cc	    0x488d93a00000	                   lea rdx, [rbx + 0xa0]	       199	diff.c	FUNCTION_7
0x40011d3	       0xf1f440000	                   nop dword [rax + rax]	       199	diff.c	FUNCTION_7
0x40011d8	          0x483b28	                    cmp rbp, qword [rax]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40011db	            0x741b	                            je 0x40011f8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40011dd	        0x4883c008	                              add rax, 8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40011e1	          0x4839d0	                            cmp rax, rdx	       183	diff.c	FUNCTION_6	FOR_1
0x40011e4	            0x75f2	                           jne 0x40011d8	       183	diff.c	FUNCTION_6	FOR_1
0x40011e6	          0x488b1b	                    mov rbx, qword [rbx]	       199	diff.c	FUNCTION_7
0x40011e9	          0x4885db	                           test rbx, rbx	       199	diff.c	FUNCTION_7
0x40011ec	            0x75da	                           jne 0x40011c8	       199	diff.c	FUNCTION_7
0x40011ee	        0x4883c408	                              add rsp, 8	       209	diff.c	FUNCTION_7
0x40011f2	              0x5b	                                 pop rbx	       209	diff.c	FUNCTION_7
0x40011f3	              0x5d	                                 pop rbp	       209	diff.c	FUNCTION_7
0x40011f4	              0xc3	                                     ret	       209	diff.c	FUNCTION_7
0x40011f5	           0xf1f00	                         nop dword [rax]	       209	diff.c	FUNCTION_7
0x40011f8	    0x48391d000000	            cmp qword [0x040011ff], rbx 	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x40011ff	    0xc783a0000000	               mov dword [rbx + 0xa0], 1	       204	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x4001209	            0x75db	                           jne 0x40011e6	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x400120b	      0xbf01000000	                              mov edi, 1	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x4001210	      0xe89bf5ffff	                    call sym.diff_redraw	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x4001215	          0x488b1b	                    mov rbx, qword [rbx]	       199	diff.c	FUNCTION_7
0x4001218	          0x4885db	                           test rbx, rbx	       199	diff.c	FUNCTION_7
0x400121b	            0x75ab	                           jne 0x40011c8	       199	diff.c	FUNCTION_7
0x400121d	            0xebcf	                           jmp 0x40011ee	       199	diff.c	FUNCTION_7
ex_diffthis	DO,0:WHILE,0:IF,0:CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0	3
0x4001100	    0x488b3d000000	            mov rdi, qword [0x04001107] 	      1129	diff.c	FUNCTION_19	CALL_1
0x4001107	      0xbe01000000	                              mov esi, 1	      1129	diff.c	FUNCTION_19	CALL_1
0x400110c	      0xe98ff8ffff	                jmp sym.diff_win_options	      1129	diff.c	FUNCTION_19	CALL_1
diff_mark_adjust	DO,0:WHILE,0:IF,0:CALL,0:ELSE,0:functions,1:SWITCH,0:FOR,0	452
0x4001220	            0x4157	                                push r15	       220	diff.c	FUNCTION_8
0x4001222	            0x4156	                                push r14	       220	diff.c	FUNCTION_8
0x4001224	          0x4889f8	                            mov rax, rdi	       220	diff.c	FUNCTION_8
0x4001227	            0x4155	                                push r13	       220	diff.c	FUNCTION_8
0x4001229	            0x4154	                                push r12	       220	diff.c	FUNCTION_8
0x400122b	        0x4883e801	                              sub rax, 1	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x400122f	              0x55	                                push rbp	       220	diff.c	FUNCTION_8
0x4001230	              0x53	                                push rbx	       220	diff.c	FUNCTION_8
0x4001231	    0x4881ec980000	                           sub rsp, 0x98	       220	diff.c	FUNCTION_8
0x4001238	    0x4c8b3d000000	            mov r15, qword [0x0400123f] 	       225	diff.c	FUNCTION_8
0x400123f	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       220	diff.c	FUNCTION_8
0x4001244	      0x4889742418	             mov qword [rsp + 0x18], rsi	       220	diff.c	FUNCTION_8
0x4001249	    0x488994248800	             mov qword [rsp + 0x88], rdx	       220	diff.c	FUNCTION_8
0x4001251	      0x48894c2460	             mov qword [rsp + 0x60], rcx	       220	diff.c	FUNCTION_8
0x4001256	          0x4d85ff	                           test r15, r15	       225	diff.c	FUNCTION_8
0x4001259	      0x4889442430	             mov qword [rsp + 0x30], rax	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x400125e	            0x7429	                            je 0x4001289	       225	diff.c	FUNCTION_8
0x4001260	    0x488b15000000	            mov rdx, qword [0x04001267] 	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x4001267	            0x31c0	                            xor eax, eax	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x4001269	     0xf1f80000000	                         nop dword [rax]	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x4001270	      0x493b54c760	    cmp rdx, qword [r15 + rax*8 + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001275	            0x7424	                            je 0x400129b	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4001277	        0x4883c001	                              add rax, 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400127b	        0x4883f808	                              cmp rax, 8	       183	diff.c	FUNCTION_6	FOR_1
0x400127f	            0x75ef	                           jne 0x4001270	       183	diff.c	FUNCTION_6	FOR_1
0x4001281	          0x4d8b3f	                    mov r15, qword [r15]	       225	diff.c	FUNCTION_8
0x4001284	          0x4d85ff	                           test r15, r15	       225	diff.c	FUNCTION_8
0x4001287	            0x75d7	                           jne 0x4001260	       225	diff.c	FUNCTION_8
0x4001289	    0x4881c4980000	                           add rsp, 0x98	       231	diff.c	FUNCTION_8
0x4001290	              0x5b	                                 pop rbx	       231	diff.c	FUNCTION_8
0x4001291	              0x5d	                                 pop rbp	       231	diff.c	FUNCTION_8
0x4001292	            0x415c	                                 pop r12	       231	diff.c	FUNCTION_8
0x4001294	            0x415d	                                 pop r13	       231	diff.c	FUNCTION_8
0x4001296	            0x415e	                                 pop r14	       231	diff.c	FUNCTION_8
0x4001298	            0x415f	                                 pop r15	       231	diff.c	FUNCTION_8
0x400129a	              0xc3	                                     ret	       231	diff.c	FUNCTION_8
0x400129b	    0x48817c2418ff	     cmp qword [rsp + 0x18], 0x7fffffff 	       259	diff.c	FUNCTION_9	IF_1
0x40012a4	        0x8944245c	             mov dword [rsp + 0x5c], eax	       259	diff.c	FUNCTION_9	IF_1
0x40012a8	     0xf8449060000	                            je 0x40018f7	       259	diff.c	FUNCTION_9	IF_1
0x40012ae	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40012b3	          0x4885c0	                           test rax, rax	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40012b6	     0xf8e53060000	                           jle 0x400190f	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40012bc	        0x8944244c	             mov dword [rsp + 0x4c], eax	       268	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40012c0	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40012c8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       279	diff.c	FUNCTION_9
0x40012cd	        0x4d8b6758	            mov r12, qword [r15 + 0x58] 	       279	diff.c	FUNCTION_9
0x40012d1	          0x4531f6	                          xor r14d, r14d	       278	diff.c	FUNCTION_9
0x40012d4	          0x4d89f5	                            mov r13, r14	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012d7	      0x4889442468	             mov qword [rsp + 0x68], rax	       279	diff.c	FUNCTION_9
0x40012dc	      0x486344245c	         movsxd rax, dword [rsp + 0x5c] 	       279	diff.c	FUNCTION_9
0x40012e1	          0x4d89e6	                            mov r14, r12	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012e4	      0x4889442408	                mov qword [rsp + 8], rax	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012e9	        0x48c1e003	                              shl rax, 3	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012ed	      0x4889442440	             mov qword [rsp + 0x40], rax	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012f2	      0x486344244c	         movsxd rax, dword [rsp + 0x4c] 	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012f7	      0x4889442470	             mov qword [rsp + 0x70], rax	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40012fc	         0xf1f4000	                         nop dword [rax]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001300	          0x4d85f6	                           test r14, r14	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001303	            0x742b	                            je 0x4001330	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001305	      0x488b442408	                mov rax, qword [rsp + 8]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400130a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400130f	      0x498b44c608	       mov rax, qword [r14 + rax*8 + 8] 	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001314	        0x488d50ff	                      lea rdx, [rax - 1]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001318	          0x4839d1	                            cmp rcx, rdx	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400131b	            0x7c13	                            jl 0x4001330	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400131d	    0x4881f9ffffff	                     cmp rcx, 0x7fffffff	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001324	            0x7546	                           jne 0x400136c	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001326	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x400132b	            0x7d3f	                           jge 0x400136c	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x400132d	           0xf1f00	                         nop dword [rax]	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001330	          0x4d85ed	                           test r13, r13	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001333	            0x7416	                            je 0x400134b	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001335	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x400133a	      0x498b441d08	         mov rax, qword [r13 + rbx + 8] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x400133f	      0x4903441d48	       add rax, qword [r13 + rbx + 0x48]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001344	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001349	            0x7e0e	                           jle 0x4001359	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x400134b	    0x8b0500000000	            mov eax, dword [0x04001351] 	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001351	            0x85c0	                           test eax, eax	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001353	     0xf8407030000	                            je 0x4001660	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001359	          0x4d85f6	                           test r14, r14	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x400135c	     0xf84b1040000	                            je 0x4001813	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4001362	      0x488b442408	                mov rax, qword [rsp + 8]	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4001367	      0x498b44c608	       mov rax, qword [r14 + rax*8 + 8] 	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x400136c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4001371	    0x4c8d24cd0000	                        lea r12, [rcx*8]	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4001379	        0x4b8d1c26	                    lea rbx, [r14 + r12]	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x400137d	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	       326	diff.c	FUNCTION_9	FOR_1
0x4001381	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       326	diff.c	FUNCTION_9	FOR_1
0x4001386	      0x488d4c02ff	                lea rcx, [rdx + rax - 1]	       326	diff.c	FUNCTION_9	FOR_1
0x400138b	      0x483b4c2430	            cmp rcx, qword [rsp + 0x30] 	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x4001390	            0x7c30	                            jl 0x40013c2	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x4001392	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x4001396	            0x31f6	                            xor esi, esi	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x4001398	         0x37c242c	             add edi, dword [rsp + 0x2c]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x400139c	          0x4889c7	                            mov rdi, rax	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x400139f	        0x400f95c6	                               setne sil	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013a3	          0x4829f7	                            sub rdi, rsi	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013a6	      0x48397c2418	            cmp qword [rsp + 0x18], rdi 	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013ab	            0x7d4b	                           jge 0x40013f8	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013ad	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40013b2	          0x4885c9	                           test rcx, rcx	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40013b5	     0xf8458040000	                            je 0x4001813	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40013bb	          0x4801c8	                            add rax, rcx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013be	        0x48894308	                mov qword [rbx + 8], rax	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40013c2	          0x4d85ed	                           test r13, r13	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40013c5	            0x7419	                            je 0x40013e0	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40013c7	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40013cc	      0x4b8b442508	         mov rax, qword [r13 + r12 + 8] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40013d1	      0x4b03442548	       add rax, qword [r13 + r12 + 0x48]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40013d6	        0x483b4108	                cmp rax, qword [rcx + 8]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40013da	     0xf8440020000	                            je 0x4001620	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40013e0	          0x4d89f5	                            mov r13, r14	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x40013e3	          0x4d8b36	                    mov r14, qword [r14]	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x40013e6	          0x4d85f6	                           test r14, r14	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40013e9	     0xf8516ffffff	                           jne 0x4001305	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40013ef	      0xe93cffffff	                           jmp 0x4001330	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40013f4	         0xf1f4000	                         nop dword [rax]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x40013f8	        0x8b5c242c	            mov ebx, dword [rsp + 0x2c] 	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x40013fc	            0x85db	                           test ebx, ebx	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x40013fe	     0xf8eac030000	                           jle 0x40017b0	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x4001404	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4001409	     0xf8f31030000	                            jg 0x4001740	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x400140f	      0x4c8b542468	            mov r10, qword [rsp + 0x68] 	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4001414	            0x89c7	                            mov edi, eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4001416	          0x4429d7	                           sub edi, r10d	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4001419	          0x4489d6	                           mov esi, r10d	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x400141c	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x4001421	          0x4939ca	                            cmp r10, rcx	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x4001424	     0xf8ca4030000	                            jl 0x40017ce	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x400142a	          0x498b06	                    mov rax, qword [r14]	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400142d	          0x4885c0	                           test rax, rax	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001430	     0xf849a040000	                            je 0x40018d0	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001436	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400143b	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001440	        0x488d48ff	                      lea rcx, [rax - 1]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001444	          0x4939ca	                            cmp r10, rcx	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001447	     0xf8c83040000	                            jl 0x40018d0	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400144d	            0x89c1	                            mov ecx, eax	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400144f	      0x4889442468	             mov qword [rsp + 0x68], rax	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001454	            0x29f1	                            sub ecx, esi	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001456	            0x89ce	                            mov esi, ecx	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001458	            0x29cb	                            sub ebx, ecx	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400145a	        0x895c242c	             mov dword [rsp + 0x2c], ebx	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400145e	            0x29d6	                            sub esi, edx	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4001460	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4001465	          0x4531db	                          xor r11d, r11d	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x4001468	    0x48c740480000	               mov qword [rax + 0x48], 0	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4001470	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x4001475	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x400147a	        0x48895808	                mov qword [rax + 8], rbx	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x400147e	          0x4863cf	                         movsxd rcx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001481	        0x8b7c245c	            mov edi, dword [rsp + 0x5c] 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001485	        0x498d4608	                      lea rax, [r14 + 8]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001489	            0x31d2	                            xor edx, edx	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400148b	          0x4863f6	                         movsxd rsi, esi	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400148e	            0x6690	                                     nop	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001490	    0x49837cd76000	       cmp qword [r15 + rdx*8 + 0x60], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001496	            0x740b	                            je 0x40014a3	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4001498	            0x39d7	                            cmp edi, edx	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400149a	            0x7407	                            je 0x40014a3	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400149c	          0x482908	                    sub qword [rax], rcx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400149f	        0x48017040	            add qword [rax + 0x40], rsi 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40014a3	        0x4883c201	                              add rdx, 1	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40014a7	        0x4883c008	                              add rax, 8	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40014ab	        0x4883fa08	                              cmp rdx, 8	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x40014af	            0x75df	                           jne 0x4001490	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x40014b1	          0x4585db	                         test r11d, r11d	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x40014b4	     0xf8408ffffff	                            je 0x40013c2	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x40014ba	            0x31c0	                            xor eax, eax	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40014bc	            0xeb10	                           jmp 0x40014ce	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40014be	            0x6690	                                     nop	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40014c0	        0x4883c001	                              add rax, 1	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40014c4	        0x4883f808	                              cmp rax, 8	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40014c8	     0xf84f4feffff	                            je 0x40013c2	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x40014ce	    0x49837cc76000	       cmp qword [r15 + rax*8 + 0x60], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40014d4	            0x74ea	                            je 0x40014c0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40014d6	        0x89442458	             mov dword [rsp + 0x58], eax	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40014da	            0x31c0	                            xor eax, eax	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40014dc	         0xf1f4000	                         nop dword [rax]	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40014e0	      0x498b4c0760	      mov rcx, qword [r15 + rax + 0x60] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x40014e5	          0x4885c9	                           test rcx, rcx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x40014e8	            0x7417	                            je 0x4001501	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x40014ea	      0x498b540648	      mov rdx, qword [r14 + rax + 0x48] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x40014ef	      0x4903540608	          add rdx, qword [r14 + rax + 8]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x40014f4	        0x4883ea01	                              sub rdx, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x40014f8	          0x483b11	                    cmp rdx, qword [rcx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x40014fb	     0xf8fc1feffff	                            jg 0x40013c2	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4001501	        0x4883c008	                              add rax, 8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4001505	        0x4883f840	                           cmp rax, 0x40	       594	diff.c	FUNCTION_12	FOR_1
0x4001509	            0x75d5	                           jne 0x40014e0	       594	diff.c	FUNCTION_12	FOR_1
0x400150b	      0x4863442458	         movsxd rax, dword [rsp + 0x58] 	       594	diff.c	FUNCTION_12	FOR_1
0x4001510	      0xbd01000000	                              mov ebp, 1	       594	diff.c	FUNCTION_12	FOR_1
0x4001515	            0x31db	                            xor ebx, ebx	       594	diff.c	FUNCTION_12	FOR_1
0x4001517	    0xc74424480000	               mov dword [rsp + 0x48], 0	       594	diff.c	FUNCTION_12	FOR_1
0x400151f	      0x4c896c2478	             mov qword [rsp + 0x78], r13	       594	diff.c	FUNCTION_12	FOR_1
0x4001524	    0x4c89a4248000	             mov qword [rsp + 0x80], r12	       594	diff.c	FUNCTION_12	FOR_1
0x400152c	      0x4889442450	             mov qword [rsp + 0x50], rax	       594	diff.c	FUNCTION_12	FOR_1
0x4001531	        0x498d04c6	                  lea rax, [r14 + rax*8]	       594	diff.c	FUNCTION_12	FOR_1
0x4001535	      0x4889442438	             mov qword [rsp + 0x38], rax	       594	diff.c	FUNCTION_12	FOR_1
0x400153a	    0x660f1f440000	                    nop word [rax + rax]	       594	diff.c	FUNCTION_12	FOR_1
0x4001540	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4001545	        0x488b4048	            mov rax, qword [rax + 0x48] 	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4001549	          0x4885c0	                           test rax, rax	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x400154c	     0xf8eb6000000	                           jle 0x4001608	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4001552	          0x83e801	                              sub eax, 1	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4001555	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4001558	       0xf45442448	          cmovne eax, dword [rsp + 0x48]	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x400155d	            0x31d2	                            xor edx, edx	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400155f	        0x89442448	             mov dword [rsp + 0x48], eax	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4001563	          0x4863f0	                         movsxd rsi, eax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001566	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400156b	        0x48037008	                add rsi, qword [rax + 8]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400156f	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001574	      0x498b7cc760	    mov rdi, qword [r15 + rax*8 + 0x60] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001579	      0xe800000000	                          call 0x400157e	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400157e	          0x4889c7	                            mov rdi, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001581	      0xe800000000	                          call 0x4001586	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4001586	          0x4885c0	                           test rax, rax	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4001589	          0x4989c5	                            mov r13, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x400158c	     0xf8419030000	                            je 0x40018ab	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4001592	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4001596	        0x448d6001	                     lea r12d, [rax + 1]	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x400159a	        0x4183fc08	                             cmp r12d, 8	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x400159e	            0x7541	                           jne 0x40015e1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40015a0	      0xe95b010000	                           jmp 0x4001700	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40015a5	           0xf1f00	                         nop dword [rax]	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40015a8	            0x85db	                           test ebx, ebx	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40015aa	            0x7854	                            js 0x4001600	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40015ac	        0x498d04c6	                  lea rax, [r14 + rax*8]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40015b0	          0x4863f3	                         movsxd rsi, ebx	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40015b3	        0x483b7048	            cmp rsi, qword [rax + 0x48] 	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40015b7	            0x7d47	                           jge 0x4001600	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40015b9	        0x48037008	                add rsi, qword [rax + 8]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40015bd	            0x31d2	                            xor edx, edx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40015bf	      0xe800000000	                          call 0x40015c4	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40015c4	          0x4c89ef	                            mov rdi, r13	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40015c7	          0x4889c6	                            mov rsi, rax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40015ca	      0xe821ecffff	                       call sym.diff_cmp	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40015cf	            0x85c0	                           test eax, eax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40015d1	            0x752d	                           jne 0x4001600	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40015d3	        0x4183c401	                             add r12d, 1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40015d7	        0x4183fc08	                             cmp r12d, 8	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40015db	     0xf841f010000	                            je 0x4001700	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x40015e1	          0x4963c4	                        movsxd rax, r12d	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x40015e4	      0x498b7cc760	    mov rdi, qword [r15 + rax*8 + 0x60] 	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x40015e9	          0x4885ff	                           test rdi, rdi	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x40015ec	            0x74e5	                            je 0x40015d3	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x40015ee	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       555	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x40015f1	            0x75b5	                           jne 0x40015a8	       555	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x40015f3	      0x418b4cc648	    mov ecx, dword [r14 + rax*8 + 0x48] 	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x40015f8	          0x8d59ff	                      lea ebx, [rcx - 1]	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x40015fb	            0x85db	                           test ebx, ebx	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40015fd	            0x79ad	                           jns 0x40015ac	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40015ff	              0x90	                                     nop	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4001600	          0x4c89ef	                            mov rdi, r13	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4001603	      0xe800000000	                          call 0x4001608	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4001608	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x400160b	     0xf849a020000	                            je 0x40018ab	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4001611	      0xbdffffffff	                     mov ebp, 0xffffffff	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x4001616	      0xe925ffffff	                           jmp 0x4001540	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x400161b	       0xf1f440000	                   nop dword [rax + rax]	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x4001620	            0x31c0	                            xor eax, eax	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001622	    0x660f1f440000	                    nop word [rax + rax]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001628	    0x49837c076000	         cmp qword [r15 + rax + 0x60], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400162e	            0x740a	                            je 0x400163a	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4001630	      0x498b540648	      mov rdx, qword [r14 + rax + 0x48] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4001635	      0x4901540548	      add qword [r13 + rax + 0x48], rdx 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400163a	        0x4883c008	                              add rax, 8	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400163e	        0x4883f840	                           cmp rax, 0x40	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4001642	            0x75e4	                           jne 0x4001628	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0x4001644	          0x498b06	                    mov rax, qword [r14]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001647	          0x4c89f7	                            mov rdi, r14	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x400164a	        0x49894500	                    mov qword [r13], rax	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x400164e	      0xe800000000	                          call 0x4001653	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x4001653	        0x4d8b7500	                    mov r14, qword [r13]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001657	      0xe9a4fcffff	                           jmp 0x4001300	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x400165c	         0xf1f4000	                         nop dword [rax]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x4001660	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x4001665	      0xe800000000	                          call 0x400166a	       497	diff.c	FUNCTION_10	CALL_1
0x400166a	          0x4885c0	                           test rax, rax	       498	diff.c	FUNCTION_10	IF_1
0x400166d	     0xf840efcffff	                            je 0x4001281	       498	diff.c	FUNCTION_10	IF_1
0x4001673	          0x4d85ed	                           test r13, r13	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4001676	          0x4c8930	                    mov qword [rax], r14	       500	diff.c	FUNCTION_10	IF_1
0x4001679	     0xf846f020000	                            je 0x40018ee	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x400167f	        0x49894500	                    mov qword [r13], rax	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4001683	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4001688	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x400168d	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4001692	      0x48637c242c	         movsxd rdi, dword [rsp + 0x2c] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4001697	      0x448b44245c	            mov r8d, dword [rsp + 0x5c] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x400169c	        0x488d1418	                    lea rdx, [rax + rbx]	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40016a0	          0x4989c9	                             mov r9, rcx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40016a3	        0x48897248	             mov qword [rdx + 0x48], rsi	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40016a7	        0x48894a08	                mov qword [rdx + 8], rcx	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x40016ab	      0x498d741d00	                    lea rsi, [r13 + rbx]	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x40016b0	            0x31d2	                            xor edx, edx	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40016b2	            0xeb31	                           jmp 0x40016e5	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40016b4	         0xf1f4000	                         nop dword [rax]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40016b8	      0x498b4cd548	    mov rcx, qword [r13 + rdx*8 + 0x48] 	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40016bd	      0x49034cd508	        add rcx, qword [r13 + rdx*8 + 8]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40016c2	          0x4c01c9	                             add rcx, r9	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40016c5	        0x482b4e48	             sub rcx, qword [rsi + 0x48]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40016c9	        0x482b4e08	                sub rcx, qword [rsi + 8]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40016cd	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x40016d2	      0x48897cd048	     mov qword [rax + rdx*8 + 0x48], rdi	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40016d7	        0x4883c201	                              add rdx, 1	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40016db	        0x4883fa08	                              cmp rdx, 8	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x40016df	     0xf8474fcffff	                            je 0x4001359	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x40016e5	    0x49837cd76000	       cmp qword [r15 + rdx*8 + 0x60], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40016eb	            0x74ea	                            je 0x40016d7	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40016ed	          0x4139d0	                            cmp r8d, edx	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40016f0	            0x74e5	                            je 0x40016d7	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40016f2	          0x4d85ed	                           test r13, r13	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x40016f5	            0x75c1	                           jne 0x40016b8	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x40016f7	      0x4c894cd008	         mov qword [rax + rdx*8 + 8], r9	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x40016fc	            0xebd4	                           jmp 0x40016d2	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x40016fe	            0x6690	                                     nop	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4001700	          0x4c89ef	                            mov rdi, r13	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4001703	      0xe800000000	                          call 0x4001708	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4001708	        0x8b542458	            mov edx, dword [rsp + 0x58] 	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x400170c	            0xeb14	                           jmp 0x4001722	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x400170e	            0x6690	                                     nop	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4001710	    0x49836cc64801	       sub qword [r14 + rax*8 + 0x48], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4001716	          0x83c201	                              add edx, 1	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4001719	          0x83fa08	                              cmp edx, 8	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x400171c	     0xf841efeffff	                            je 0x4001540	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4001722	          0x4863c2	                         movsxd rax, edx	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4001725	    0x49837cc76000	       cmp qword [r15 + rax*8 + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400172b	            0x74e9	                            je 0x4001716	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400172d	          0x83fd01	                              cmp ebp, 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4001730	            0x75de	                           jne 0x4001710	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4001732	    0x498344c60801	          add qword [r14 + rax*8 + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4001738	            0xebd6	                           jmp 0x4001710	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400173a	    0x660f1f440000	                    nop word [rax + rax]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4001740	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001745	          0x4839cb	                            cmp rbx, rcx	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001748	     0xf8ea8000000	                           jle 0x40017f6	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400174e	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001753	          0x4889c8	                            mov rax, rcx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001756	          0x4829f8	                            sub rax, rdi	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001759	        0x4883c001	                              add rax, 1	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400175d	          0x4829c2	                            sub rdx, rax	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001760	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001765	        0x48895048	             mov qword [rax + 0x48], rdx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4001769	          0x498b06	                    mov rax, qword [r14]	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400176c	          0x4885c0	                           test rax, rax	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400176f	     0xf8466010000	                            je 0x40018db	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4001775	      0x488b542408	                mov rdx, qword [rsp + 8]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400177a	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400177f	        0x488d50ff	                      lea rdx, [rax - 1]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4001783	          0x4839d3	                            cmp rbx, rdx	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4001786	     0xf8c4f010000	                            jl 0x40018db	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x400178c	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4001790	          0x8d70ff	                      lea esi, [rax - 1]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4001793	      0x4889442468	             mov qword [rsp + 0x68], rax	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4001798	    0x41bb01000000	                             mov r11d, 1	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x400179e	            0x29ce	                            sub esi, ecx	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40017a0	             0x1fa	                            add edx, edi	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40017a2	            0x31ff	                            xor edi, edi	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x40017a4	            0x29c2	                            sub edx, eax	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40017a6	        0x8954242c	             mov dword [rsp + 0x2c], edx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40017aa	      0xe9cffcffff	                           jmp 0x400147e	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40017af	              0x90	                                     nop	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x40017b0	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x40017b5	     0xf8c02010000	                            jl 0x40018bd	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x40017bb	      0x4803542470	             add rdx, qword [rsp + 0x70]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x40017c0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x40017c5	        0x48895048	             mov qword [rax + 0x48], rdx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x40017c9	      0xe9ecfcffff	                           jmp 0x40014ba	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x40017ce	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017d3	            0x89fe	                            mov esi, edi	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017d5	    0x41bb01000000	                             mov r11d, 1	       371	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017db	          0x4829c1	                            sub rcx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017de	          0x4889c8	                            mov rax, rcx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017e1	        0x4883c001	                              add rax, 1	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017e5	          0x4829c2	                            sub rdx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017e8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017ed	        0x48895048	             mov qword [rax + 0x48], rdx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017f1	      0xe97afcffff	                           jmp 0x4001470	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40017f6	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40017fb	          0x4531db	                          xor r11d, r11d	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x40017fe	            0x31ff	                            xor edi, edi	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x4001800	            0x31f6	                            xor esi, esi	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4001802	          0x4829c2	                            sub rdx, rax	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4001805	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400180a	        0x48895048	             mov qword [rax + 0x48], rdx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x400180e	      0xe96bfcffff	                           jmp 0x400147e	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x4001813	        0x498b7f58	            mov rdi, qword [r15 + 0x58] 	       452	diff.c	FUNCTION_9
0x4001817	            0x31ed	                            xor ebp, ebp	       453	diff.c	FUNCTION_9	WHILE_1
0x4001819	     0xf1f80000000	                         nop dword [rax]	       453	diff.c	FUNCTION_9	WHILE_1
0x4001820	          0x4885ff	                           test rdi, rdi	       453	diff.c	FUNCTION_9	WHILE_1
0x4001823	            0x7442	                            je 0x4001867	       453	diff.c	FUNCTION_9	WHILE_1
0x4001825	            0x31c0	                            xor eax, eax	       453	diff.c	FUNCTION_9	WHILE_1
0x4001827	    0x660f1f840000	                    nop word [rax + rax]	       453	diff.c	FUNCTION_9	WHILE_1
0x4001830	    0x49837c076000	         cmp qword [r15 + rax + 0x60], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4001836	            0x7408	                            je 0x4001840	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4001838	    0x48837c074800	         cmp qword [rdi + rax + 0x48], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x400183e	            0x7560	                           jne 0x40018a0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4001840	        0x4883c008	                              add rax, 8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4001844	        0x4883f840	                           cmp rax, 0x40	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x4001848	            0x75e6	                           jne 0x4001830	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0x400184a	          0x488b1f	                    mov rbx, qword [rdi]	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0x400184d	      0xe800000000	                          call 0x4001852	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0x4001852	          0x4885ed	                           test rbp, rbp	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4001855	     0xf84cb000000	                            je 0x4001926	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x400185b	          0x4889df	                            mov rdi, rbx	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x400185e	        0x48895d00	                    mov qword [rbp], rbx	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0x4001862	          0x4885ff	                           test rdi, rdi	       453	diff.c	FUNCTION_9	WHILE_1
0x4001865	            0x75be	                           jne 0x4001825	       453	diff.c	FUNCTION_9	WHILE_1
0x4001867	    0x4c393d000000	            cmp qword [0x0400186e], r15 	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x400186e	     0xf850dfaffff	                           jne 0x4001281	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4001874	      0xbf01000000	                              mov edi, 1	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0x4001879	      0xe832efffff	                    call sym.diff_redraw	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0x400187e	          0x4d8b3f	                    mov r15, qword [r15]	       225	diff.c	FUNCTION_8
0x4001881	    0xc70500000000	               mov dword [0x0400188b], 1	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0x400188b	          0x4d85ff	                           test r15, r15	       225	diff.c	FUNCTION_8
0x400188e	     0xf85ccf9ffff	                           jne 0x4001260	       225	diff.c	FUNCTION_8
0x4001894	      0xe9f0f9ffff	                           jmp 0x4001289	       225	diff.c	FUNCTION_8
0x4001899	     0xf1f80000000	                         nop dword [rax]	       225	diff.c	FUNCTION_8
0x40018a0	          0x4889fd	                            mov rbp, rdi	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40018a3	          0x488b3f	                    mov rdi, qword [rdi]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40018a6	      0xe975ffffff	                           jmp 0x4001820	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40018ab	      0x4c8b6c2478	            mov r13, qword [rsp + 0x78] 	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40018b0	    0x4c8ba4248000	            mov r12, qword [rsp + 0x80] 	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40018b8	      0xe905fbffff	                           jmp 0x40013c2	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40018bd	      0x4803442470	             add rax, qword [rsp + 0x70]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x40018c2	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x40018c7	        0x48894308	                mov qword [rbx + 8], rax	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x40018cb	      0xe9f2faffff	                           jmp 0x40013c2	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x40018d0	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40018d4	            0x29d6	                            sub esi, edx	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40018d6	      0xe985fbffff	                           jmp 0x4001460	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x40018db	        0x8b742418	            mov esi, dword [rsp + 0x18] 	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x40018df	    0x41bb01000000	                             mov r11d, 1	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x40018e5	            0x31ff	                            xor edi, edi	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x40018e7	            0x29ce	                            sub esi, ecx	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x40018e9	      0xe990fbffff	                           jmp 0x400147e	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x40018ee	        0x49894758	             mov qword [r15 + 0x58], rax	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x40018f2	      0xe98cfdffff	                           jmp 0x4001683	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x40018f7	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	       262	diff.c	FUNCTION_9	IF_1
0x40018fe	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       263	diff.c	FUNCTION_9	IF_1
0x4001906	        0x8944244c	             mov dword [rsp + 0x4c], eax	       262	diff.c	FUNCTION_9	IF_1
0x400190a	      0xe9b9f9ffff	                           jmp 0x40012c8	       262	diff.c	FUNCTION_9	IF_1
0x400190f	        0x8b442460	            mov eax, dword [rsp + 0x60] 	       275	diff.c	FUNCTION_9	ELSE_2
0x4001913	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	       274	diff.c	FUNCTION_9	ELSE_2
0x400191b	            0xf7d8	                                 neg eax	       275	diff.c	FUNCTION_9	ELSE_2
0x400191d	        0x8944242c	             mov dword [rsp + 0x2c], eax	       275	diff.c	FUNCTION_9	ELSE_2
0x4001921	      0xe9a2f9ffff	                           jmp 0x40012c8	       275	diff.c	FUNCTION_9	ELSE_2
0x4001926	        0x49895f58	             mov qword [r15 + 0x58], rbx	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x400192a	          0x4889df	                            mov rdi, rbx	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x400192d	      0xe9eefeffff	                           jmp 0x4001820	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
diff_win_options	DO,0:WHILE,0:IF,8:CALL,11:ELSE,0:functions,0:SWITCH,0:FOR,0	91
0x40009a0	            0x4154	                                push r12	      1153	diff.c	FUNCTION_21
0x40009a2	              0x55	                                push rbp	      1153	diff.c	FUNCTION_21
0x40009a3	          0x4189f4	                           mov r12d, esi	      1153	diff.c	FUNCTION_21
0x40009a6	              0x53	                                push rbx	      1153	diff.c	FUNCTION_21
0x40009a7	          0x4889fb	                            mov rbx, rdi	      1153	diff.c	FUNCTION_21
0x40009aa	    0x488b2d000000	            mov rbp, qword [0x040009b1] 	      1155	diff.c	FUNCTION_21
0x40009b1	    0x48893d000000	            mov qword [0x040009b8], rdi 	      1158	diff.c	FUNCTION_21
0x40009b8	      0xe800000000	                          call 0x40009bd	      1159	diff.c	FUNCTION_21	CALL_1
0x40009bd	    0x8b8bc0010000	           mov ecx, dword [rbx + 0x1c0] 	      1164	diff.c	FUNCTION_21	IF_1
0x40009c3	    0x48892d000000	            mov qword [0x040009ca], rbp 	      1160	diff.c	FUNCTION_21
0x40009ca	            0x85c9	                           test ecx, ecx	      1164	diff.c	FUNCTION_21	IF_1
0x40009cc	     0xf855e010000	                           jne 0x4000b30	      1164	diff.c	FUNCTION_21	IF_1
0x40009d2	    0x8b8388020000	           mov eax, dword [rbx + 0x288] 	      1165	diff.c	FUNCTION_21	IF_1
0x40009d8	    0x8b938c020000	           mov edx, dword [rbx + 0x28c] 	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x40009de	    0xc78388020000	              mov dword [rbx + 0x288], 1	      1166	diff.c	FUNCTION_21
0x40009e8	    0x48891d000000	            mov qword [0x040009ef], rbx 	      1174	diff.c	FUNCTION_21
0x40009ef	    0x898390020000	            mov dword [rbx + 0x290], eax	      1165	diff.c	FUNCTION_21	IF_1
0x40009f5	    0x8b83b0020000	           mov eax, dword [rbx + 0x2b0] 	      1168	diff.c	FUNCTION_21	IF_2
0x40009fb	            0x85d2	                           test edx, edx	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x40009fd	    0xc783b0020000	              mov dword [rbx + 0x2b0], 1	      1169	diff.c	FUNCTION_21
0x4000a07	    0x8983b4020000	            mov dword [rbx + 0x2b4], eax	      1168	diff.c	FUNCTION_21	IF_2
0x4000a0d	    0x8b8394020000	           mov eax, dword [rbx + 0x294] 	      1171	diff.c	FUNCTION_21	IF_3
0x4000a13	    0xc78394020000	              mov dword [rbx + 0x294], 0	      1172	diff.c	FUNCTION_21
0x4000a1d	    0x898398020000	            mov dword [rbx + 0x298], eax	      1171	diff.c	FUNCTION_21	IF_3
0x4000a23	        0x488b4308	                mov rax, qword [rbx + 8]	      1175	diff.c	FUNCTION_21
0x4000a27	    0x488905000000	            mov qword [0x04000a2e], rax 	      1175	diff.c	FUNCTION_21
0x4000a2e	     0xf8534010000	                           jne 0x4000b68	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x4000a34	    0x488bbbf80100	           mov rdi, qword [rbx + 0x1f8] 	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4000a3b	      0xe800000000	                          call 0x4000a40	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4000a40	    0x488983000200	            mov qword [rbx + 0x200], rax	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x4000a47	          0x4531c0	                            xor r8d, r8d	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a4a	      0xb905000000	                              mov ecx, 5	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a4f	      0xba00000000	                              mov edx, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a54	      0xbeffffffff	                     mov esi, 0xffffffff	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a59	      0xbf00000000	                              mov edi, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a5e	      0xe800000000	                          call 0x4000a63	      1182	diff.c	FUNCTION_21	CALL_4
0x4000a63	        0x488b4508	                mov rax, qword [rbp + 8]	      1185	diff.c	FUNCTION_21
0x4000a67	    0x48892d000000	            mov qword [0x04000a6e], rbp 	      1184	diff.c	FUNCTION_21
0x4000a6e	    0x488905000000	            mov qword [0x04000a75], rax 	      1185	diff.c	FUNCTION_21
0x4000a75	    0x8b83c0010000	           mov eax, dword [rbx + 0x1c0] 	      1186	diff.c	FUNCTION_21	IF_6
0x4000a7b	            0x85c0	                           test eax, eax	      1186	diff.c	FUNCTION_21	IF_6
0x4000a7d	            0x7526	                           jne 0x4000aa5	      1186	diff.c	FUNCTION_21	IF_6
0x4000a7f	    0x488b83c80100	           mov rax, qword [rbx + 0x1c8] 	      1188	diff.c	FUNCTION_21	IF_6
0x4000a86	    0x8983d0010000	            mov dword [rbx + 0x1d0], eax	      1188	diff.c	FUNCTION_21	IF_6
0x4000a8c	    0x8b83d4010000	           mov eax, dword [rbx + 0x1d4] 	      1189	diff.c	FUNCTION_21	IF_6
0x4000a92	    0x8983d8010000	            mov dword [rbx + 0x1d8], eax	      1189	diff.c	FUNCTION_21	IF_6
0x4000a98	    0x488b83e80100	           mov rax, qword [rbx + 0x1e8] 	      1190	diff.c	FUNCTION_21	IF_6
0x4000a9f	    0x8983f0010000	            mov dword [rbx + 0x1f0], eax	      1190	diff.c	FUNCTION_21	IF_6
0x4000aa5	    0x486305000000	         movsxd rax, dword [0x04000aac] 	      1192	diff.c	FUNCTION_21
0x4000aac	          0x4889df	                            mov rdi, rbx	      1195	diff.c	FUNCTION_21	CALL_5
0x4000aaf	    0xc783d4010000	              mov dword [rbx + 0x1d4], 1	      1193	diff.c	FUNCTION_21
0x4000ab9	    0x48c783e80100	              mov qword [rbx + 0x1e8], 0	      1194	diff.c	FUNCTION_21
0x4000ac4	    0x488983c80100	            mov qword [rbx + 0x1c8], rax	      1192	diff.c	FUNCTION_21
0x4000acb	      0xe800000000	                          call 0x4000ad0	      1195	diff.c	FUNCTION_21	CALL_5
0x4000ad0	          0x4889df	                            mov rdi, rbx	      1197	diff.c	FUNCTION_21	CALL_6
0x4000ad3	      0xe800000000	                          call 0x4000ad8	      1197	diff.c	FUNCTION_21	CALL_6
0x4000ad8	    0x488b3d000000	            mov rdi, qword [0x04000adf] 	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000adf	      0xbe68000000	                           mov esi, 0x68	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000ae4	      0xe800000000	                          call 0x4000ae9	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000ae9	          0x4885c0	                           test rax, rax	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000aec	     0xf848e000000	                            je 0x4000b80	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4000af2	    0xc7838c020000	              mov dword [rbx + 0x28c], 1	      1202	diff.c	FUNCTION_21
0x4000afc	      0xbe01000000	                              mov esi, 1	      1204	diff.c	FUNCTION_21	CALL_9
0x4000b01	          0x4889df	                            mov rdi, rbx	      1204	diff.c	FUNCTION_21	CALL_9
0x4000b04	      0xe897f6ffff	                call sym.set_diff_option	      1204	diff.c	FUNCTION_21	CALL_9
0x4000b09	          0x4585e4	                         test r12d, r12d	      1206	diff.c	FUNCTION_21	IF_8
0x4000b0c	            0x7409	                            je 0x4000b17	      1206	diff.c	FUNCTION_21	IF_8
0x4000b0e	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1207	diff.c	FUNCTION_21	CALL_10
0x4000b12	      0xe800000000	                          call 0x4000b17	      1207	diff.c	FUNCTION_21	CALL_10
0x4000b17	          0x4889df	                            mov rdi, rbx	      1208	diff.c	FUNCTION_21	CALL_11
0x4000b1a	      0xbe28000000	                           mov esi, 0x28	      1208	diff.c	FUNCTION_21	CALL_11
0x4000b1f	              0x5b	                                 pop rbx	      1209	diff.c	FUNCTION_21
0x4000b20	              0x5d	                                 pop rbp	      1209	diff.c	FUNCTION_21
0x4000b21	            0x415c	                                 pop r12	      1209	diff.c	FUNCTION_21
0x4000b23	      0xe900000000	                           jmp 0x4000b28	      1208	diff.c	FUNCTION_21	CALL_11
0x4000b28	     0xf1f84000000	                   nop dword [rax + rax]	      1208	diff.c	FUNCTION_21	CALL_11
0x4000b30	        0x488b4308	                mov rax, qword [rbx + 8]	      1175	diff.c	FUNCTION_21
0x4000b34	    0xc78388020000	              mov dword [rbx + 0x288], 1	      1166	diff.c	FUNCTION_21
0x4000b3e	    0xc783b0020000	              mov dword [rbx + 0x2b0], 1	      1169	diff.c	FUNCTION_21
0x4000b48	    0xc78394020000	              mov dword [rbx + 0x294], 0	      1172	diff.c	FUNCTION_21
0x4000b52	    0x48891d000000	            mov qword [0x04000b59], rbx 	      1174	diff.c	FUNCTION_21
0x4000b59	    0x488905000000	            mov qword [0x04000b60], rax 	      1175	diff.c	FUNCTION_21
0x4000b60	      0xe9e2feffff	                           jmp 0x4000a47	      1175	diff.c	FUNCTION_21
0x4000b65	           0xf1f00	                         nop dword [rax]	      1175	diff.c	FUNCTION_21
0x4000b68	    0x488bbb000200	           mov rdi, qword [rbx + 0x200] 	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4000b6f	      0xe800000000	                          call 0x4000b74	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4000b74	      0xe9bbfeffff	                           jmp 0x4000a34	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4000b79	     0xf1f80000000	                         nop dword [rax]	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4000b80	      0xbf00000000	                              mov edi, 0	      1200	diff.c	FUNCTION_21	CALL_8
0x4000b85	      0xe800000000	                          call 0x4000b8a	      1200	diff.c	FUNCTION_21	CALL_8
0x4000b8a	      0xe963ffffff	                           jmp 0x4000af2	      1200	diff.c	FUNCTION_21	CALL_8
diff_get_corresponding_line_int	DO,0:WHILE,0:IF,7:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,1	113
0x4002330	            0x4154	                                push r12	      2580	diff.c	FUNCTION_42
0x4002332	              0x55	                                push rbp	      2580	diff.c	FUNCTION_42
0x4002333	            0x31c0	                            xor eax, eax	      2580	diff.c	FUNCTION_42
0x4002335	              0x53	                                push rbx	      2580	diff.c	FUNCTION_42
0x4002336	        0x4883ec10	                           sub rsp, 0x10	      2580	diff.c	FUNCTION_42
0x400233a	    0x488b15000000	            mov rdx, qword [0x04002341] 	      2580	diff.c	FUNCTION_42
0x4002341	     0xf1f80000000	                         nop dword [rax]	      2580	diff.c	FUNCTION_42
0x4002348	      0x483b7cc260	    cmp rdi, qword [rdx + rax*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400234d	            0x89c5	                            mov ebp, eax	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400234f	            0x740f	                            je 0x4002360	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002351	        0x4883c001	                              add rax, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002355	        0x4883f808	                              cmp rax, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4002359	            0x75ed	                           jne 0x4002348	       168	diff.c	FUNCTION_5	FOR_1
0x400235b	      0xbd08000000	                              mov ebp, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4002360	    0x488b0d000000	            mov rcx, qword [0x04002367] 	      2587	diff.c	FUNCTION_42	CALL_2
0x4002367	            0x31c0	                            xor eax, eax	      2587	diff.c	FUNCTION_42	CALL_2
0x4002369	     0xf1f80000000	                         nop dword [rax]	      2587	diff.c	FUNCTION_42	CALL_2
0x4002370	      0x483b4cc260	    cmp rcx, qword [rdx + rax*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002375	          0x4863d8	                         movsxd rbx, eax	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002378	            0x7416	                            je 0x4002390	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400237a	        0x4883c001	                              add rax, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400237e	        0x4883f808	                              cmp rax, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4002382	            0x75ec	                           jne 0x4002370	       168	diff.c	FUNCTION_5	FOR_1
0x4002384	          0x4889f0	                            mov rax, rsi	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4002387	        0x4883c410	                           add rsp, 0x10	      2629	diff.c	FUNCTION_42
0x400238b	              0x5b	                                 pop rbx	      2629	diff.c	FUNCTION_42
0x400238c	              0x5d	                                 pop rbp	      2629	diff.c	FUNCTION_42
0x400238d	            0x415c	                                 pop r12	      2629	diff.c	FUNCTION_42
0x400238f	              0xc3	                                     ret	      2629	diff.c	FUNCTION_42
0x4002390	          0x83fd08	                              cmp ebp, 8	      2588	diff.c	FUNCTION_42	IF_1
0x4002393	            0x74ef	                            je 0x4002384	      2588	diff.c	FUNCTION_42	IF_1
0x4002395	        0x488b4a58	            mov rcx, qword [rdx + 0x58] 	      2588	diff.c	FUNCTION_42	IF_1
0x4002399	          0x4885c9	                           test rcx, rcx	      2588	diff.c	FUNCTION_42	IF_1
0x400239c	            0x74e6	                            je 0x4002384	      2588	diff.c	FUNCTION_42	IF_1
0x400239e	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	      2591	diff.c	FUNCTION_42	IF_2
0x40023a4	            0x85c0	                           test eax, eax	      2591	diff.c	FUNCTION_42	IF_2
0x40023a6	     0xf85a4000000	                           jne 0x4002450	      2591	diff.c	FUNCTION_42	IF_2
0x40023ac	          0x4c63c5	                          movsxd r8, ebp	      2591	diff.c	FUNCTION_42	IF_2
0x40023af	          0x4863eb	                         movsxd rbp, ebx	      2591	diff.c	FUNCTION_42	IF_2
0x40023b2	    0x4c8b1d000000	            mov r11, qword [0x040023b9] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023b9	            0x31d2	                            xor edx, edx	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023bb	        0x49c1e003	                               shl r8, 3	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023bf	        0x48c1e503	                              shl rbp, 3	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023c3	            0xeb36	                           jmp 0x40023fb	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023c5	           0xf1f00	                         nop dword [rax]	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023c8	          0x4885d2	                           test rdx, rdx	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023cb	            0x754d	                           jne 0x400241a	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023cd	        0x4c8d1429	                    lea r10, [rcx + rbp]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023d1	        0x498b4338	            mov rax, qword [r11 + 0x38] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023d5	        0x4d8b4a08	                 mov r9, qword [r10 + 8]	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023d9	        0x4d8b5248	            mov r10, qword [r10 + 0x48] 	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023dd	          0x4939c1	                             cmp r9, rax	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023e0	            0x7f09	                            jg 0x40023eb	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023e2	        0x4f8d2411	                     lea r12, [r9 + r10]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023e6	          0x4c39e0	                            cmp rax, r12	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023e9	            0x7c9c	                            jl 0x4002387	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x40023eb	          0x488b09	                    mov rcx, qword [rcx]	      2597	diff.c	FUNCTION_42	FOR_1
0x40023ee	             0x1fa	                            add edx, edi	      2623	diff.c	FUNCTION_42	FOR_1
0x40023f0	          0x4429ca	                            sub edx, r9d	      2623	diff.c	FUNCTION_42	FOR_1
0x40023f3	          0x4429d2	                           sub edx, r10d	      2623	diff.c	FUNCTION_42	FOR_1
0x40023f6	          0x4885c9	                           test rcx, rcx	      2597	diff.c	FUNCTION_42	FOR_1
0x40023f9	            0x743b	                            je 0x4002436	      2597	diff.c	FUNCTION_42	FOR_1
0x40023fb	        0x4a8d0401	                     lea rax, [rcx + r8]	      2597	diff.c	FUNCTION_42	FOR_1
0x40023ff	        0x488b7808	                mov rdi, qword [rax + 8]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4002403	          0x4839fe	                            cmp rsi, rdi	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4002406	            0x7c2e	                            jl 0x4002436	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4002408	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x400240c	        0x488d0417	                    lea rax, [rdi + rdx]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4002410	          0x4839c6	                            cmp rsi, rax	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4002413	            0x7c6b	                            jl 0x4002480	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4002415	          0x4839fe	                            cmp rsi, rdi	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4002418	            0x74ae	                            je 0x40023c8	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x400241a	        0x488d0429	                    lea rax, [rcx + rbp]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x400241e	          0x488b09	                    mov rcx, qword [rcx]	      2597	diff.c	FUNCTION_42	FOR_1
0x4002421	             0x1fa	                            add edx, edi	      2623	diff.c	FUNCTION_42	FOR_1
0x4002423	        0x4c8b4808	                 mov r9, qword [rax + 8]	      2623	diff.c	FUNCTION_42	FOR_1
0x4002427	        0x4c8b5048	            mov r10, qword [rax + 0x48] 	      2623	diff.c	FUNCTION_42	FOR_1
0x400242b	          0x4429ca	                            sub edx, r9d	      2623	diff.c	FUNCTION_42	FOR_1
0x400242e	          0x4429d2	                           sub edx, r10d	      2623	diff.c	FUNCTION_42	FOR_1
0x4002431	          0x4885c9	                           test rcx, rcx	      2597	diff.c	FUNCTION_42	FOR_1
0x4002434	            0x75c5	                           jne 0x40023fb	      2597	diff.c	FUNCTION_42	FOR_1
0x4002436	        0x4883c410	                           add rsp, 0x10	      2629	diff.c	FUNCTION_42
0x400243a	          0x4863d2	                         movsxd rdx, edx	      2628	diff.c	FUNCTION_42
0x400243d	          0x4889f0	                            mov rax, rsi	      2628	diff.c	FUNCTION_42
0x4002440	              0x5b	                                 pop rbx	      2629	diff.c	FUNCTION_42
0x4002441	          0x4829d0	                            sub rax, rdx	      2628	diff.c	FUNCTION_42
0x4002444	              0x5d	                                 pop rbp	      2629	diff.c	FUNCTION_42
0x4002445	            0x415c	                                 pop r12	      2629	diff.c	FUNCTION_42
0x4002447	              0xc3	                                     ret	      2629	diff.c	FUNCTION_42
0x4002448	     0xf1f84000000	                   nop dword [rax + rax]	      2629	diff.c	FUNCTION_42
0x4002450	            0x31ff	                            xor edi, edi	      2592	diff.c	FUNCTION_42	CALL_3
0x4002452	      0x4889742408	                mov qword [rsp + 8], rsi	      2592	diff.c	FUNCTION_42	CALL_3
0x4002457	      0xe800000000	                          call 0x400245c	      2592	diff.c	FUNCTION_42	CALL_3
0x400245c	    0x488b05000000	            mov rax, qword [0x04002463] 	      2594	diff.c	FUNCTION_42	IF_3
0x4002463	      0x488b742408	                mov rsi, qword [rsp + 8]	      2594	diff.c	FUNCTION_42	IF_3
0x4002468	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      2594	diff.c	FUNCTION_42	IF_3
0x400246c	          0x4885c9	                           test rcx, rcx	      2594	diff.c	FUNCTION_42	IF_3
0x400246f	     0xf8537ffffff	                           jne 0x40023ac	      2594	diff.c	FUNCTION_42	IF_3
0x4002475	      0xe90affffff	                           jmp 0x4002384	      2594	diff.c	FUNCTION_42	IF_3
0x400247a	    0x660f1f440000	                    nop word [rax + rax]	      2594	diff.c	FUNCTION_42	IF_3
0x4002480	        0x488d14d9	                  lea rdx, [rcx + rbx*8]	      2594	diff.c	FUNCTION_42	IF_3
0x4002484	            0x29fe	                            sub esi, edi	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4002486	          0x4863c6	                         movsxd rax, esi	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4002489	        0x488b4a48	            mov rcx, qword [rdx + 0x48] 	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x400248d	          0x4839c8	                            cmp rax, rcx	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4002490	          0x4863f1	                         movsxd rsi, ecx	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4002493	        0x480f4fc6	                          cmovg rax, rsi	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4002497	        0x48034208	                add rax, qword [rdx + 8]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x400249b	        0x4883c410	                           add rsp, 0x10	      2629	diff.c	FUNCTION_42
0x400249f	              0x5b	                                 pop rbx	      2629	diff.c	FUNCTION_42
0x40024a0	              0x5d	                                 pop rbp	      2629	diff.c	FUNCTION_42
0x40024a1	            0x415c	                                 pop r12	      2629	diff.c	FUNCTION_42
0x40024a3	              0xc3	                                     ret	      2629	diff.c	FUNCTION_42
ex_diffupdate	DO,0:WHILE,0:IF,24:CALL,34:ELSE,3:functions,0:SWITCH,0:FOR,6	625
0x4001940	            0x4157	                                push r15	       663	diff.c	FUNCTION_15
0x4001942	            0x4156	                                push r14	       663	diff.c	FUNCTION_15
0x4001944	            0x4155	                                push r13	       663	diff.c	FUNCTION_15
0x4001946	            0x4154	                                push r12	       663	diff.c	FUNCTION_15
0x4001948	              0x55	                                push rbp	       663	diff.c	FUNCTION_15
0x4001949	              0x53	                                push rbx	       663	diff.c	FUNCTION_15
0x400194a	    0x4881ecb80000	                           sub rsp, 0xb8	       663	diff.c	FUNCTION_15
0x4001951	    0x488b2d000000	            mov rbp, qword [0x04001958] 	       675	diff.c	FUNCTION_15	CALL_1
0x4001958	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       663	diff.c	FUNCTION_15
0x400195d	    0x64488b042528	                mov rax, qword fs:[0x28]	       663	diff.c	FUNCTION_15
0x4001966	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       663	diff.c	FUNCTION_15
0x400196e	            0x31c0	                            xor eax, eax	       663	diff.c	FUNCTION_15
0x4001970	        0x488b7d58	            mov rdi, qword [rbp + 0x58] 	      1503	diff.c	FUNCTION_25	FOR_1
0x4001974	          0x4885ff	                           test rdi, rdi	      1503	diff.c	FUNCTION_25	FOR_1
0x4001977	     0xf8480050000	                            je 0x4001efd	      1503	diff.c	FUNCTION_25	FOR_1
0x400197d	           0xf1f00	                         nop dword [rax]	      1503	diff.c	FUNCTION_25	FOR_1
0x4001980	          0x488b1f	                    mov rbx, qword [rdi]	      1505	diff.c	FUNCTION_25	FOR_1
0x4001983	      0xe800000000	                          call 0x4001988	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x4001988	          0x4885db	                           test rbx, rbx	      1503	diff.c	FUNCTION_25	FOR_1
0x400198b	          0x4889df	                            mov rdi, rbx	      1503	diff.c	FUNCTION_25	FOR_1
0x400198e	            0x75f0	                           jne 0x4001980	      1503	diff.c	FUNCTION_25	FOR_1
0x4001990	    0x488b15000000	            mov rdx, qword [0x04001997] 	      1503	diff.c	FUNCTION_25	FOR_1
0x4001997	    0x48c745580000	               mov qword [rbp + 0x58], 0	      1508	diff.c	FUNCTION_25
0x400199f	            0x31c0	                            xor eax, eax	       676	diff.c	FUNCTION_15
0x40019a1	    0xc782a0000000	               mov dword [rdx + 0xa0], 0	       676	diff.c	FUNCTION_15
0x40019ab	       0xf1f440000	                   nop dword [rax + rax]	       676	diff.c	FUNCTION_15
0x40019b0	    0x48837cc26000	       cmp qword [rdx + rax*8 + 0x60], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40019b6	          0x4189c7	                           mov r15d, eax	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40019b9	            0x7535	                           jne 0x40019f0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40019bb	        0x4883c001	                              add rax, 1	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x40019bf	        0x4883f808	                              cmp rax, 8	       679	diff.c	FUNCTION_15	FOR_1
0x40019c3	            0x75eb	                           jne 0x40019b0	       679	diff.c	FUNCTION_15	FOR_1
0x40019c5	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       831	diff.c	FUNCTION_15
0x40019cd	    0x644833042528	                xor rax, qword fs:[0x28]	       831	diff.c	FUNCTION_15
0x40019d6	     0xf854d090000	                           jne 0x4002329	       831	diff.c	FUNCTION_15
0x40019dc	    0x4881c4b80000	                           add rsp, 0xb8	       831	diff.c	FUNCTION_15
0x40019e3	              0x5b	                                 pop rbx	       831	diff.c	FUNCTION_15
0x40019e4	              0x5d	                                 pop rbp	       831	diff.c	FUNCTION_15
0x40019e5	            0x415c	                                 pop r12	       831	diff.c	FUNCTION_15
0x40019e7	            0x415d	                                 pop r13	       831	diff.c	FUNCTION_15
0x40019e9	            0x415e	                                 pop r14	       831	diff.c	FUNCTION_15
0x40019eb	            0x415f	                                 pop r15	       831	diff.c	FUNCTION_15
0x40019ed	              0xc3	                                     ret	       831	diff.c	FUNCTION_15
0x40019ee	            0x6690	                                     nop	       831	diff.c	FUNCTION_15
0x40019f0	          0x8d4001	                      lea eax, [rax + 1]	       686	diff.c	FUNCTION_15	FOR_2
0x40019f3	          0x83f808	                              cmp eax, 8	       686	diff.c	FUNCTION_15	FOR_2
0x40019f6	        0x89442458	             mov dword [rsp + 0x58], eax	       686	diff.c	FUNCTION_15	FOR_2
0x40019fa	            0x750c	                           jne 0x4001a08	       686	diff.c	FUNCTION_15	FOR_2
0x40019fc	            0xebc7	                           jmp 0x40019c5	       686	diff.c	FUNCTION_15	FOR_2
0x40019fe	            0x6690	                                     nop	       686	diff.c	FUNCTION_15	FOR_2
0x4001a00	          0x83c001	                              add eax, 1	       686	diff.c	FUNCTION_15	FOR_2
0x4001a03	          0x83f808	                              cmp eax, 8	       686	diff.c	FUNCTION_15	FOR_2
0x4001a06	            0x74bd	                            je 0x40019c5	       686	diff.c	FUNCTION_15	FOR_2
0x4001a08	          0x4863c8	                         movsxd rcx, eax	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001a0b	    0x48837cca6000	       cmp qword [rdx + rcx*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001a11	            0x74ed	                            je 0x4001a00	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4001a13	      0xbe01000000	                              mov esi, 1	       693	diff.c	FUNCTION_15	CALL_2
0x4001a18	      0xbf6f000000	                           mov edi, 0x6f	       693	diff.c	FUNCTION_15	CALL_2
0x4001a1d	      0xe800000000	                          call 0x4001a22	       693	diff.c	FUNCTION_15	CALL_2
0x4001a22	      0xbe01000000	                              mov esi, 1	       694	diff.c	FUNCTION_15	CALL_3
0x4001a27	      0xbf6e000000	                           mov edi, 0x6e	       694	diff.c	FUNCTION_15	CALL_3
0x4001a2c	          0x4889c3	                            mov rbx, rax	       693	diff.c	FUNCTION_15	CALL_2
0x4001a2f	      0x4889442410	             mov qword [rsp + 0x10], rax	       693	diff.c	FUNCTION_15	CALL_2
0x4001a34	      0xe800000000	                          call 0x4001a39	       694	diff.c	FUNCTION_15	CALL_3
0x4001a39	      0xbf64000000	                           mov edi, 0x64	       695	diff.c	FUNCTION_15	CALL_4
0x4001a3e	      0xbe01000000	                              mov esi, 1	       695	diff.c	FUNCTION_15	CALL_4
0x4001a43	          0x4989c6	                            mov r14, rax	       694	diff.c	FUNCTION_15	CALL_3
0x4001a46	        0x48890424	                    mov qword [rsp], rax	       694	diff.c	FUNCTION_15	CALL_3
0x4001a4a	      0xe800000000	                          call 0x4001a4f	       695	diff.c	FUNCTION_15	CALL_4
0x4001a4f	          0x4885db	                           test rbx, rbx	       696	diff.c	FUNCTION_15	IF_5
0x4001a52	          0x4889c7	                            mov rdi, rax	       695	diff.c	FUNCTION_15	CALL_4
0x4001a55	      0x4889442408	                mov qword [rsp + 8], rax	       695	diff.c	FUNCTION_15	CALL_4
0x4001a5a	           0xf94c2	                                 sete dl	       696	diff.c	FUNCTION_15	IF_5
0x4001a5d	          0x4d85f6	                           test r14, r14	       696	diff.c	FUNCTION_15	IF_5
0x4001a60	           0xf94c0	                                 sete al	       696	diff.c	FUNCTION_15	IF_5
0x4001a63	             0x8c2	                               or dl, al	       696	diff.c	FUNCTION_15	IF_5
0x4001a65	     0xf8516020000	                           jne 0x4001c81	       696	diff.c	FUNCTION_15	IF_5
0x4001a6b	          0x4531f6	                          xor r14d, r14d	       696	diff.c	FUNCTION_15	IF_5
0x4001a6e	          0x4885ff	                           test rdi, rdi	       696	diff.c	FUNCTION_15	IF_5
0x4001a71	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	       696	diff.c	FUNCTION_15	IF_5
0x4001a76	     0xf8405020000	                            je 0x4001c81	       696	diff.c	FUNCTION_15	IF_5
0x4001a7c	      0x44897c2420	            mov dword [rsp + 0x20], r15d	       696	diff.c	FUNCTION_15	IF_5
0x4001a81	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       696	diff.c	FUNCTION_15	IF_5
0x4001a86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       696	diff.c	FUNCTION_15	IF_5
0x4001a90	      0xbe00000000	                              mov esi, 0	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x4001a95	          0x4c89ff	                            mov rdi, r15	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x4001a98	      0xe800000000	                          call 0x4001a9d	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x4001a9d	          0x4885c0	                           test rax, rax	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x4001aa0	          0x4989c4	                            mov r12, rax	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x4001aa3	     0xf847f010000	                            je 0x4001c28	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x4001aa9	          0x4889c1	                            mov rcx, rax	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4001aac	      0xba01000000	                              mov edx, 1	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4001ab1	      0xbe06000000	                              mov esi, 6	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4001ab6	      0xbf00000000	                              mov edi, 0	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4001abb	      0xbb01000000	                              mov ebx, 1	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4001ac0	      0xe800000000	                          call 0x4001ac5	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4001ac5	          0x4c89e7	                            mov rdi, r12	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x4001ac8	        0x4883f801	                              cmp rax, 1	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4001acc	        0x440f45f3	                        cmovne r14d, ebx	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4001ad0	      0xe800000000	                          call 0x4001ad5	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x4001ad5	        0x4c8b2c24	                    mov r13, qword [rsp]	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001ad9	      0xbe00000000	                              mov esi, 0	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001ade	          0x4c89ef	                            mov rdi, r13	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001ae1	      0xe800000000	                          call 0x4001ae6	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001ae6	          0x4885c0	                           test rax, rax	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001ae9	          0x4989c4	                            mov r12, rax	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4001aec	     0xf8446010000	                            je 0x4001c38	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001af2	          0x4889c1	                            mov rcx, rax	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001af5	      0xba01000000	                              mov edx, 1	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001afa	      0xbe06000000	                              mov esi, 6	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001aff	      0xbf00000000	                              mov edi, 0	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001b04	      0xe800000000	                          call 0x4001b09	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4001b09	          0x4c89e7	                            mov rdi, r12	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4001b0c	        0x4883f801	                              cmp rax, 1	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x4001b10	        0x440f45f3	                        cmovne r14d, ebx	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x4001b14	      0xe800000000	                          call 0x4001b19	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4001b19	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001b1e	          0x4c89ee	                            mov rsi, r13	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001b21	          0x4c89ff	                            mov rdi, r15	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001b24	          0x4889da	                            mov rdx, rbx	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001b27	      0xe8d4e8ffff	                      call sym.diff_file	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x4001b2c	      0xbe00000000	                              mov esi, 0	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001b31	          0x4889df	                            mov rdi, rbx	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001b34	      0xe800000000	                          call 0x4001b39	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001b39	          0x4885c0	                           test rax, rax	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4001b3c	          0x4989c4	                            mov r12, rax	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x4001b3f	     0xf84ab030000	                            je 0x4001ef0	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4001b45	            0x31db	                            xor ebx, ebx	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4001b47	    0x41bd01000000	                             mov r13d, 1	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001b4d	            0xeb14	                           jmp 0x4001b63	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001b4f	              0x90	                                     nop	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001b50	      0xbf00000000	                              mov edi, 0	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001b55	      0xb903000000	                              mov ecx, 3	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001b5a	          0x4889ee	                            mov rsi, rbp	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x4001b5d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001b5f	        0x410f44dd	                         cmove ebx, r13d	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x4001b63	          0x4c89e2	                            mov rdx, r12	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001b66	      0xbe32000000	                           mov esi, 0x32	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001b6b	          0x4889ef	                            mov rdi, rbp	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001b6e	      0xe800000000	                          call 0x4001b73	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001b73	            0x85c0	                           test eax, eax	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001b75	            0x74d9	                            je 0x4001b50	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x4001b77	          0x4c89e7	                            mov rdi, r12	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x4001b7a	      0xe800000000	                          call 0x4001b7f	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x4001b7f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x4001b84	      0xe800000000	                          call 0x4001b89	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x4001b89	        0x488b3c24	                    mov rdi, qword [rsp]	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x4001b8d	      0xe800000000	                          call 0x4001b92	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x4001b92	          0x4c89ff	                            mov rdi, r15	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x4001b95	      0xe800000000	                          call 0x4001b9a	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x4001b9a	    0x488b05000000	            mov rax, qword [0x04001ba1] 	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001ba1	          0x803800	                       cmp byte [rax], 0	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001ba4	     0xf859e000000	                           jne 0x4001c48	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4001baa	    0x833d00000000	               cmp dword [0x04001bb1], 2	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x4001bb1	     0xf8591000000	                           jne 0x4001c48	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x4001bb7	            0x85db	                           test ebx, ebx	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001bb9	    0x891d00000000	            mov dword [0x04001bbf], ebx 	       773	diff.c	FUNCTION_15	FOR_3
0x4001bbf	     0xf84cbfeffff	                            je 0x4001a90	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001bc5	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4001bca	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       792	diff.c	FUNCTION_15	IF_20
0x4001bcf	          0x4885c0	                           test rax, rax	       792	diff.c	FUNCTION_15	IF_20
0x4001bd2	     0xf84cb000000	                            je 0x4001ca3	       792	diff.c	FUNCTION_15	IF_20
0x4001bd8	          0x8b4034	            mov eax, dword [rax + 0x34] 	       792	diff.c	FUNCTION_15	IF_20
0x4001bdb	            0x85c0	                           test eax, eax	       792	diff.c	FUNCTION_15	IF_20
0x4001bdd	     0xf84c0000000	                            je 0x4001ca3	       792	diff.c	FUNCTION_15	IF_20
0x4001be3	          0x4489fd	                           mov ebp, r15d	       792	diff.c	FUNCTION_15	IF_20
0x4001be6	            0xeb14	                           jmp 0x4001bfc	       792	diff.c	FUNCTION_15	IF_20
0x4001be8	     0xf1f84000000	                   nop dword [rax + rax]	       792	diff.c	FUNCTION_15	IF_20
0x4001bf0	          0x83c501	                              add ebp, 1	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bf3	          0x83fd08	                              cmp ebp, 8	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bf6	     0xf84a7000000	                            je 0x4001ca3	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001bfc	    0x488b15000000	            mov rdx, qword [0x04001c03] 	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001c03	          0x4863c5	                         movsxd rax, ebp	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001c06	      0x488b5cc260	    mov rbx, qword [rdx + rax*8 + 0x60] 	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x4001c0b	          0x4889df	                            mov rdi, rbx	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4001c0e	      0xe800000000	                          call 0x4001c13	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4001c13	            0x85c0	                           test eax, eax	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4001c15	            0x74d9	                            je 0x4001bf0	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4001c17	            0x31f6	                            xor esi, esi	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4001c19	          0x4889df	                            mov rdi, rbx	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4001c1c	      0xe800000000	                          call 0x4001c21	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4001c21	            0xebcd	                           jmp 0x4001bf0	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4001c23	       0xf1f440000	                   nop dword [rax + rax]	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4001c28	    0x41be01000000	                             mov r14d, 1	       710	diff.c	FUNCTION_15	FOR_3	IF_6
0x4001c2e	            0x31db	                            xor ebx, ebx	       707	diff.c	FUNCTION_15	FOR_3
0x4001c30	      0xe965ffffff	                           jmp 0x4001b9a	       707	diff.c	FUNCTION_15	FOR_3
0x4001c35	           0xf1f00	                         nop dword [rax]	       707	diff.c	FUNCTION_15	FOR_3
0x4001c38	    0x41be01000000	                             mov r14d, 1	       718	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4001c3e	            0x31db	                            xor ebx, ebx	       707	diff.c	FUNCTION_15	FOR_3
0x4001c40	      0xe94dffffff	                           jmp 0x4001b92	       707	diff.c	FUNCTION_15	FOR_3
0x4001c45	           0xf1f00	                         nop dword [rax]	       707	diff.c	FUNCTION_15	FOR_3
0x4001c48	            0x85db	                           test ebx, ebx	       779	diff.c	FUNCTION_15	IF_18
0x4001c4a	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	       779	diff.c	FUNCTION_15	IF_18
0x4001c4f	     0xf8575ffffff	                           jne 0x4001bca	       779	diff.c	FUNCTION_15	IF_18
0x4001c55	          0x4585f6	                         test r14d, r14d	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x4001c58	     0xf855e050000	                           jne 0x40021bc	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x4001c5e	      0xba05000000	                              mov edx, 5	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001c63	      0xbe00000000	                              mov esi, 0	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001c68	            0x31ff	                            xor edi, edi	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001c6a	      0xe800000000	                          call 0x4001c6f	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001c6f	          0x4889c7	                            mov rdi, rax	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001c72	      0xe800000000	                          call 0x4001c77	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x4001c77	    0xc70500000000	               mov dword [0x04001c81], 2	       784	diff.c	FUNCTION_15	IF_18
0x4001c81	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       828	diff.c	FUNCTION_15	CALL_32
0x4001c86	      0xe800000000	                          call 0x4001c8b	       828	diff.c	FUNCTION_15	CALL_32
0x4001c8b	        0x488b3c24	                    mov rdi, qword [rsp]	       829	diff.c	FUNCTION_15	CALL_33
0x4001c8f	      0xe800000000	                          call 0x4001c94	       829	diff.c	FUNCTION_15	CALL_33
0x4001c94	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       830	diff.c	FUNCTION_15	CALL_34
0x4001c99	      0xe800000000	                          call 0x4001c9e	       830	diff.c	FUNCTION_15	CALL_34
0x4001c9e	      0xe922fdffff	                           jmp 0x40019c5	       830	diff.c	FUNCTION_15	CALL_34
0x4001ca3	          0x4963c7	                        movsxd rax, r15d	       801	diff.c	FUNCTION_15
0x4001ca6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cab	          0x4889c3	                            mov rbx, rax	       801	diff.c	FUNCTION_15
0x4001cae	      0x4889442448	             mov qword [rsp + 0x48], rax	       801	diff.c	FUNCTION_15
0x4001cb3	    0x488b05000000	            mov rax, qword [0x04001cba] 	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cba	      0x488b7cd860	    mov rdi, qword [rax + rbx*8 + 0x60] 	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cbf	      0xe86ce4ffff	                     call sym.diff_write	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cc4	            0x85c0	                           test eax, eax	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cc6	            0x74b9	                            je 0x4001c81	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cc8	      0x448b742458	           mov r14d, dword [rsp + 0x58] 	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001ccd	    0x4c8d2cdd0000	                        lea r13, [rbx*8]	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cd5	      0x44897c245c	            mov dword [rsp + 0x5c], r15d	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cda	            0xeb12	                           jmp 0x4001cee	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001cdc	         0xf1f4000	                         nop dword [rax]	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4001ce0	        0x4183c601	                             add r14d, 1	       806	diff.c	FUNCTION_15	FOR_6
0x4001ce4	        0x4183fe08	                             cmp r14d, 8	       806	diff.c	FUNCTION_15	FOR_6
0x4001ce8	     0xf84c7020000	                            je 0x4001fb5	       806	diff.c	FUNCTION_15	FOR_6
0x4001cee	          0x4963c6	                        movsxd rax, r14d	       808	diff.c	FUNCTION_15	FOR_6
0x4001cf1	          0x4889c6	                            mov rsi, rax	       808	diff.c	FUNCTION_15	FOR_6
0x4001cf4	      0x4889442428	             mov qword [rsp + 0x28], rax	       808	diff.c	FUNCTION_15	FOR_6
0x4001cf9	    0x488b05000000	            mov rax, qword [0x04001d00] 	       808	diff.c	FUNCTION_15	FOR_6
0x4001d00	      0x488b7cf060	    mov rdi, qword [rax + rsi*8 + 0x60] 	       808	diff.c	FUNCTION_15	FOR_6
0x4001d05	          0x4885ff	                           test rdi, rdi	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001d08	            0x74d6	                            je 0x4001ce0	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001d0a	      0x48837f0800	                  cmp qword [rdi + 8], 0	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001d0f	            0x74cf	                            je 0x4001ce0	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4001d11	        0x488b3424	                    mov rsi, qword [rsp]	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001d15	      0xe816e4ffff	                     call sym.diff_write	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001d1a	            0x85c0	                           test eax, eax	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001d1c	            0x74c2	                            je 0x4001ce0	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4001d1e	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001d23	        0x488b3424	                    mov rsi, qword [rsp]	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001d27	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001d2c	          0x4c89fa	                            mov rdx, r15	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001d2f	      0xe8cce6ffff	                      call sym.diff_file	       813	diff.c	FUNCTION_15	FOR_6	CALL_26
0x4001d34	    0x488b05000000	            mov rax, qword [0x04001d3b] 	      1291	diff.c	FUNCTION_23
0x4001d3b	      0xbe00000000	                              mov esi, 0	      1303	diff.c	FUNCTION_23	CALL_1
0x4001d40	          0x4c89ff	                            mov rdi, r15	      1303	diff.c	FUNCTION_23	CALL_1
0x4001d43	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      1291	diff.c	FUNCTION_23
0x4001d47	      0xe800000000	                          call 0x4001d4c	      1303	diff.c	FUNCTION_23	CALL_1
0x4001d4c	          0x4885c0	                           test rax, rax	      1304	diff.c	FUNCTION_23	IF_1
0x4001d4f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1303	diff.c	FUNCTION_23	CALL_1
0x4001d54	     0xf84a5050000	                            je 0x40022ff	      1304	diff.c	FUNCTION_23	IF_1
0x4001d5a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1304	diff.c	FUNCTION_23	IF_1
0x4001d5f	      0xbd01000000	                              mov ebp, 1	      1304	diff.c	FUNCTION_23	IF_1
0x4001d64	          0x4531e4	                          xor r12d, r12d	      1304	diff.c	FUNCTION_23	IF_1
0x4001d67	        0x48c1e003	                              shl rax, 3	      1304	diff.c	FUNCTION_23	IF_1
0x4001d6b	      0x4889442420	             mov qword [rsp + 0x20], rax	      1304	diff.c	FUNCTION_23	IF_1
0x4001d70	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d75	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d7a	      0xbe32000000	                           mov esi, 0x32	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d7f	      0xe800000000	                          call 0x4001d84	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d84	            0x85c0	                           test eax, eax	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d86	     0xf8579010000	                           jne 0x4001f05	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4001d8c	      0xe800000000	                          call 0x4001d91	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d91	       0xfb6542470	           movzx edx, byte [rsp + 0x70] 	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d96	          0x488b00	                    mov rax, qword [rax]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d99	      0xf644500108	         test byte [rax + rdx*2 + 1], 8 	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001d9e	            0x74d0	                            je 0x4001d70	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4001da0	      0x488d442470	                   lea rax, [rsp + 0x70]	      1322	diff.c	FUNCTION_23	FOR_1
0x4001da5	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001daa	      0x4889442468	             mov qword [rsp + 0x68], rax	      1322	diff.c	FUNCTION_23	FOR_1
0x4001daf	      0xe800000000	                          call 0x4001db4	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001db4	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001db9	          0x4889c1	                            mov rcx, rax	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001dbc	          0x4889ce	                            mov rsi, rcx	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4001dbf	           0xfb602	                   movzx eax, byte [rdx]	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001dc2	            0x3c2c	                            cmp al, 0x2c	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001dc4	     0xf84be010000	                            je 0x4001f88	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001dca	          0x8d789d	                   lea edi, [rax - 0x63]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001dcd	        0x4080ff01	                              cmp dil, 1	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001dd1	        0x410f97c2	                               seta r10b	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001dd5	            0x3c61	                            cmp al, 0x61	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001dd7	           0xf95c0	                                setne al	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001dda	          0x4120c2	                            and r10b, al	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001ddd	          0x4589d7	                          mov r15d, r10d	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001de0	            0x758e	                           jne 0x4001d70	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4001de2	        0x488d4201	                      lea rax, [rdx + 1]	      1333	diff.c	FUNCTION_23	FOR_1
0x4001de6	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4001deb	      0x4889742438	             mov qword [rsp + 0x38], rsi	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4001df0	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4001df5	      0x4889442468	             mov qword [rsp + 0x68], rax	      1333	diff.c	FUNCTION_23	FOR_1
0x4001dfa	           0xfb602	                   movzx eax, byte [rdx]	      1333	diff.c	FUNCTION_23	FOR_1
0x4001dfd	        0x88442440	               mov byte [rsp + 0x40], al	      1333	diff.c	FUNCTION_23	FOR_1
0x4001e01	      0xe800000000	                          call 0x4001e06	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4001e06	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001e0b	          0x4989c1	                             mov r9, rax	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4001e0e	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001e13	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001e18	          0x803a2c	                    cmp byte [rdx], 0x2c	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001e1b	     0xf842b040000	                            je 0x400224c	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001e21	          0x4839f1	                            cmp rcx, rsi	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4001e24	     0xf8f46ffffff	                            jg 0x4001d70	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4001e2a	          0x4584ff	                         test r15b, r15b	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4001e2d	     0xf853dffffff	                           jne 0x4001d70	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4001e33	    0x440fb67c2440	          movzx r15d, byte [rsp + 0x40] 	      1333	diff.c	FUNCTION_23	FOR_1
0x4001e39	        0x4183ff61	                          cmp r15d, 0x61	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001e3d	     0xf84fe030000	                            je 0x4002241	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001e43	          0x4829ce	                            sub rsi, rcx	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x4001e46	        0x4883c601	                              add rsi, 1	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x4001e4a	        0x4183ff64	                          cmp r15d, 0x64	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001e4e	     0xf84e1030000	                            je 0x4002235	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001e54	          0x4c29c8	                             sub rax, r9	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4001e57	        0x4c8d4001	                       lea r8, [rax + 1]	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4001e5b	          0x4885db	                           test rbx, rbx	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e5e	     0xf8476030000	                            je 0x40021da	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e64	        0x4a8d142b	                    lea rdx, [rbx + r13]	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e68	        0x488b4208	                mov rax, qword [rdx + 8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e6c	        0x488b7a48	            mov rdi, qword [rdx + 0x48] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e70	        0x488d1438	                    lea rdx, [rax + rdi]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e74	          0x4839ca	                            cmp rdx, rcx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e77	     0xf8d6a010000	                           jge 0x4001fe7	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001e7d	            0x85ed	                           test ebp, ebp	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4001e7f	            0x7433	                            je 0x4001eb4	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4001e81	            0xeb61	                           jmp 0x4001ee4	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4001e83	       0xf1f440000	                   nop dword [rax + rax]	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4001e88	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e8d	      0x4b8b542c08	         mov rdx, qword [r12 + r13 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e92	      0x4b03542c48	       add rdx, qword [r12 + r13 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e97	      0x4b2b541c48	       sub rdx, qword [r12 + r11 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001e9c	      0x4b2b541c08	          sub rdx, qword [r12 + r11 + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001ea1	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001ea6	          0x4829d0	                            sub rax, rdx	      1491	diff.c	FUNCTION_24
0x4001ea9	          0x4901da	                            add r10, rbx	      1491	diff.c	FUNCTION_24
0x4001eac	        0x49894208	                mov qword [r10 + 8], rax	      1491	diff.c	FUNCTION_24
0x4001eb0	        0x49897a48	             mov qword [r10 + 0x48], rdi	      1492	diff.c	FUNCTION_24
0x4001eb4	          0x4c8b3b	                    mov r15, qword [rbx]	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001eb7	          0x4d85ff	                           test r15, r15	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001eba	     0xf842d020000	                            je 0x40020ed	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ec0	        0x4b8d142f	                    lea rdx, [r15 + r13]	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ec4	      0xbd01000000	                              mov ebp, 1	      1375	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ec9	          0x4989dc	                            mov r12, rbx	      1375	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ecc	        0x488b4208	                mov rax, qword [rdx + 8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ed0	        0x488b7a48	            mov rdi, qword [rdx + 0x48] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ed4	        0x488d1438	                    lea rdx, [rax + rdi]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ed8	          0x4839ca	                            cmp rdx, rcx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001edb	     0xf8d0c010000	                           jge 0x4001fed	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ee1	          0x4c89fb	                            mov rbx, r15	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001ee4	          0x4d85e4	                           test r12, r12	      1486	diff.c	FUNCTION_24	IF_1
0x4001ee7	            0x759f	                           jne 0x4001e88	      1486	diff.c	FUNCTION_24	IF_1
0x4001ee9	            0x31d2	                            xor edx, edx	      1487	diff.c	FUNCTION_24	IF_1
0x4001eeb	            0xebb4	                           jmp 0x4001ea1	      1487	diff.c	FUNCTION_24	IF_1
0x4001eed	           0xf1f00	                         nop dword [rax]	      1487	diff.c	FUNCTION_24	IF_1
0x4001ef0	    0x41be01000000	                             mov r14d, 1	       727	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4001ef6	            0x31db	                            xor ebx, ebx	       707	diff.c	FUNCTION_15	FOR_3
0x4001ef8	      0xe982fcffff	                           jmp 0x4001b7f	       707	diff.c	FUNCTION_15	FOR_3
0x4001efd	          0x4889ea	                            mov rdx, rbp	      1503	diff.c	FUNCTION_25	FOR_1
0x4001f00	      0xe992faffff	                           jmp 0x4001997	      1503	diff.c	FUNCTION_25	FOR_1
0x4001f05	          0x4885db	                           test rbx, rbx	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001f08	            0x745c	                            je 0x4001f66	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001f0a	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001f0f	        0x48c1e603	                              shl rsi, 3	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001f13	            0x85ed	                           test ebp, ebp	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4001f15	            0x7441	                            je 0x4001f58	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4001f17	    0x660f1f840000	                    nop word [rax + rax]	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4001f20	          0x4d85e4	                           test r12, r12	      1486	diff.c	FUNCTION_24	IF_1
0x4001f23	     0xf84b7000000	                            je 0x4001fe0	      1486	diff.c	FUNCTION_24	IF_1
0x4001f29	      0x4b8b442c08	         mov rax, qword [r12 + r13 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001f2e	      0x4b03442c48	       add rax, qword [r12 + r13 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001f33	      0x492b443448	       sub rax, qword [r12 + rsi + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001f38	      0x492b443408	          sub rax, qword [r12 + rsi + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001f3d	        0x4a8d0c2b	                    lea rcx, [rbx + r13]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001f41	        0x488d1433	                    lea rdx, [rbx + rsi]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001f45	        0x488b7908	                mov rdi, qword [rcx + 8]	      1491	diff.c	FUNCTION_24
0x4001f49	          0x4829c7	                            sub rdi, rax	      1491	diff.c	FUNCTION_24
0x4001f4c	        0x48897a08	                mov qword [rdx + 8], rdi	      1491	diff.c	FUNCTION_24
0x4001f50	        0x488b4148	            mov rax, qword [rcx + 0x48] 	      1492	diff.c	FUNCTION_24
0x4001f54	        0x48894248	             mov qword [rdx + 0x48], rax	      1492	diff.c	FUNCTION_24
0x4001f58	          0x488b03	                    mov rax, qword [rbx]	      1466	diff.c	FUNCTION_23	WHILE_3
0x4001f5b	          0x4989dc	                            mov r12, rbx	      1466	diff.c	FUNCTION_23	WHILE_3
0x4001f5e	          0x4885c0	                           test rax, rax	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001f61	          0x4889c3	                            mov rbx, rax	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001f64	            0x75ba	                           jne 0x4001f20	      1461	diff.c	FUNCTION_23	WHILE_3
0x4001f66	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1471	diff.c	FUNCTION_23	CALL_14
0x4001f6b	      0xe800000000	                          call 0x4001f70	      1471	diff.c	FUNCTION_23	CALL_14
0x4001f70	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x4001f75	      0xe800000000	                          call 0x4001f7a	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x4001f7a	        0x488b3c24	                    mov rdi, qword [rsp]	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x4001f7e	      0xe800000000	                          call 0x4001f83	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x4001f83	      0xe958fdffff	                           jmp 0x4001ce0	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x4001f88	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001f8d	        0x4883c201	                              add rdx, 1	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001f91	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001f96	      0x4889542468	             mov qword [rsp + 0x68], rdx	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x4001f9b	      0xe800000000	                          call 0x4001fa0	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001fa0	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001fa5	          0x4889c6	                            mov rsi, rax	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001fa8	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001fad	           0xfb602	                   movzx eax, byte [rdx]	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001fb0	      0xe915feffff	                           jmp 0x4001dca	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4001fb5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       820	diff.c	FUNCTION_15	CALL_30
0x4001fba	      0xe800000000	                          call 0x4001fbf	       820	diff.c	FUNCTION_15	CALL_30
0x4001fbf	    0x488b05000000	            mov rax, qword [0x04001fc6] 	       823	diff.c	FUNCTION_15
0x4001fc6	      0xbf01000000	                              mov edi, 1	       825	diff.c	FUNCTION_15	CALL_31
0x4001fcb	    0x48c780b80000	               mov qword [rax + 0xb8], 0	       823	diff.c	FUNCTION_15
0x4001fd6	      0xe8d5e7ffff	                    call sym.diff_redraw	       825	diff.c	FUNCTION_15	CALL_31
0x4001fdb	      0xe9a1fcffff	                           jmp 0x4001c81	       825	diff.c	FUNCTION_15	CALL_31
0x4001fe0	            0x31c0	                            xor eax, eax	      1487	diff.c	FUNCTION_24	IF_1
0x4001fe2	      0xe956ffffff	                           jmp 0x4001f3d	      1487	diff.c	FUNCTION_24	IF_1
0x4001fe7	          0x4989df	                            mov r15, rbx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001fea	          0x4c89e3	                            mov rbx, r12	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001fed	        0x4c8d1c31	                    lea r11, [rcx + rsi]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001ff1	          0x4939c3	                            cmp r11, rax	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001ff4	     0xf8ce6010000	                            jl 0x40021e0	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001ffa	          0x4c89ff	                            mov rdi, r15	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001ffd	      0x4c8b642448	            mov r12, qword [rsp + 0x48] 	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002002	            0xeb0e	                           jmp 0x4002012	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002004	         0xf1f4000	                         nop dword [rax]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002008	      0x4f3b5ce208	       cmp r11, qword [r10 + r12*8 + 8] 	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x400200d	            0x7c0b	                            jl 0x400201a	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x400200f	          0x4c89d7	                            mov rdi, r10	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4002012	          0x4c8b17	                    mov r10, qword [rdi]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002015	          0x4d85d2	                           test r10, r10	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4002018	            0x75ee	                           jne 0x4002008	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x400201a	          0x4829c8	                            sub rax, rcx	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x400201d	          0x4885c0	                           test rax, rax	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002020	     0xf8e68020000	                           jle 0x400228e	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002026	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x400202a	    0x488b35000000	            mov rsi, qword [0x04002031] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002031	          0x4139ce	                           cmp r14d, ecx	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002034	            0x89ca	                            mov edx, ecx	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002036	            0x7e20	                           jle 0x4002058	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002038	     0xf1f84000000	                   nop dword [rax + rax]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002040	          0x4863ca	                         movsxd rcx, edx	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4002043	    0x48837cce6000	       cmp qword [rsi + rcx*8 + 0x60], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4002049	            0x7405	                            je 0x4002050	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x400204b	      0x492944cf08	        sub qword [r15 + rcx*8 + 8], rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4002050	          0x83c201	                              add edx, 1	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002053	          0x4439f2	                           cmp edx, r14d	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002056	            0x75e8	                           jne 0x4002040	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002058	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x400205d	        0x4a8d0c2f	                    lea rcx, [rdi + r13]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002061	          0x4c01f8	                            add rax, r15	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4002064	        0x4c894808	                 mov qword [rax + 8], r9	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4002068	        0x4c894048	              mov qword [rax + 0x48], r8	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x400206c	          0x4c89de	                            mov rsi, r11	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x400206f	        0x482b7148	             sub rsi, qword [rcx + 0x48]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4002073	        0x482b7108	                sub rsi, qword [rcx + 8]	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4002077	     0xf8853020000	                            js 0x40022d0	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x400207d	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002081	    0x4c8b05000000	              mov r8, qword [0x04002088]	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002088	          0x4139c6	                           cmp r14d, eax	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x400208b	            0x89c1	                            mov ecx, eax	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x400208d	            0x7e31	                           jle 0x40020c0	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x400208f	              0x90	                                     nop	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4002090	          0x4863d1	                         movsxd rdx, ecx	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002093	    0x49837cd06000	        cmp qword [r8 + rdx*8 + 0x60], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4002099	            0x741d	                            je 0x40020b8	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400209b	        0x48c1e203	                              shl rdx, 3	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400209f	        0x4d8d0c17	                     lea r9, [r15 + rdx]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40020a3	      0x488b441708	         mov rax, qword [rdi + rdx + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40020a8	      0x4803441748	       add rax, qword [rdi + rdx + 0x48]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40020ad	        0x492b4108	                 sub rax, qword [r9 + 8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40020b1	          0x4801f0	                            add rax, rsi	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40020b4	        0x49894148	              mov qword [r9 + 0x48], rax	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40020b8	          0x83c101	                              add ecx, 1	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x40020bb	          0x4439f1	                           cmp ecx, r14d	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x40020be	            0x75d0	                           jne 0x4002090	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x40020c0	          0x498b3f	                    mov rdi, qword [r15]	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x40020c3	          0x4d8917	                    mov qword [r15], r10	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x40020c6	          0x4c39d7	                            cmp rdi, r10	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020c9	            0x7415	                            je 0x40020e0	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020cb	       0xf1f440000	                   nop dword [rax + rax]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020d0	          0x488b2f	                    mov rbp, qword [rdi]	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020d3	      0xe800000000	                          call 0x40020d8	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_10
0x40020d8	          0x493b2f	                    cmp rbp, qword [r15]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020db	          0x4889ef	                            mov rdi, rbp	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020de	            0x75f0	                           jne 0x40020d0	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020e0	          0x4989dc	                            mov r12, rbx	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020e3	            0x31ed	                            xor ebp, ebp	      1457	diff.c	FUNCTION_23	FOR_1
0x40020e5	          0x4c89fb	                            mov rbx, r15	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020e8	      0xe983fcffff	                           jmp 0x4001d70	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x40020ed	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x40020f2	      0x4c89442450	              mov qword [rsp + 0x50], r8	       497	diff.c	FUNCTION_10	CALL_1
0x40020f7	      0x4889742440	             mov qword [rsp + 0x40], rsi	       497	diff.c	FUNCTION_10	CALL_1
0x40020fc	      0x4c894c2438	              mov qword [rsp + 0x38], r9	       497	diff.c	FUNCTION_10	CALL_1
0x4002101	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       497	diff.c	FUNCTION_10	CALL_1
0x4002106	      0xe800000000	                          call 0x400210b	       497	diff.c	FUNCTION_10	CALL_1
0x400210b	          0x4885c0	                           test rax, rax	       498	diff.c	FUNCTION_10	IF_1
0x400210e	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       498	diff.c	FUNCTION_10	IF_1
0x4002113	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       498	diff.c	FUNCTION_10	IF_1
0x4002118	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       498	diff.c	FUNCTION_10	IF_1
0x400211d	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	       498	diff.c	FUNCTION_10	IF_1
0x4002122	     0xf843efeffff	                            je 0x4001f66	       498	diff.c	FUNCTION_10	IF_1
0x4002128	          0x4989dc	                            mov r12, rbx	       500	diff.c	FUNCTION_10	IF_1
0x400212b	    0x48c700000000	                      mov qword [rax], 0	       500	diff.c	FUNCTION_10	IF_1
0x4002132	          0x4889c3	                            mov rbx, rax	       497	diff.c	FUNCTION_10	CALL_1
0x4002135	        0x49891c24	                    mov qword [r12], rbx	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4002139	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x400213e	        0x4a8d3c2b	                    lea rdi, [rbx + r13]	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x4002142	        0x48894f08	                mov qword [rdi + 8], rcx	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002146	        0x48897748	             mov qword [rdi + 0x48], rsi	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x400214a	          0x4801d8	                            add rax, rbx	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x400214d	        0x4c894808	                 mov qword [rax + 8], r9	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002151	        0x4c894048	              mov qword [rax + 0x48], r8	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x4002155	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002159	          0x4439f0	                           cmp eax, r14d	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400215c	            0x7d57	                           jge 0x40021b5	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400215e	    0x4c8b05000000	              mov r8, qword [0x04002165]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002165	            0x89c1	                            mov ecx, eax	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002167	        0x4b8d342c	                    lea rsi, [r12 + r13]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400216b	            0xeb34	                           jmp 0x40021a1	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400216d	           0xf1f00	                         nop dword [rax]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4002170	        0x488b4648	            mov rax, qword [rsi + 0x48] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002174	        0x48034608	                add rax, qword [rsi + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002178	      0x492b44d448	     sub rax, qword [r12 + rdx*8 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x400217d	      0x492b44d408	        sub rax, qword [r12 + rdx*8 + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4002182	        0x4c8b5f08	                mov r11, qword [rdi + 8]	      1491	diff.c	FUNCTION_24
0x4002186	        0x488d14d3	                  lea rdx, [rbx + rdx*8]	      1491	diff.c	FUNCTION_24
0x400218a	          0x4929c3	                            sub r11, rax	      1491	diff.c	FUNCTION_24
0x400218d	        0x4c895a08	                mov qword [rdx + 8], r11	      1491	diff.c	FUNCTION_24
0x4002191	        0x488b4748	            mov rax, qword [rdi + 0x48] 	      1492	diff.c	FUNCTION_24
0x4002195	        0x48894248	             mov qword [rdx + 0x48], rax	      1492	diff.c	FUNCTION_24
0x4002199	          0x83c101	                              add ecx, 1	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400219c	          0x4439f1	                           cmp ecx, r14d	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400219f	            0x7414	                            je 0x40021b5	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40021a1	          0x4863d1	                         movsxd rdx, ecx	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40021a4	    0x49837cd06000	        cmp qword [r8 + rdx*8 + 0x60], 0	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40021aa	            0x74ed	                            je 0x4002199	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40021ac	          0x4d85e4	                           test r12, r12	      1486	diff.c	FUNCTION_24	IF_1
0x40021af	            0x75bf	                           jne 0x4002170	      1486	diff.c	FUNCTION_24	IF_1
0x40021b1	            0x31c0	                            xor eax, eax	      1487	diff.c	FUNCTION_24	IF_1
0x40021b3	            0xebcd	                           jmp 0x4002182	      1487	diff.c	FUNCTION_24	IF_1
0x40021b5	            0x31ed	                            xor ebp, ebp	      1457	diff.c	FUNCTION_23	FOR_1
0x40021b7	      0xe9b4fbffff	                           jmp 0x4001d70	      1457	diff.c	FUNCTION_23	FOR_1
0x40021bc	            0x31ff	                            xor edi, edi	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40021be	      0xba05000000	                              mov edx, 5	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40021c3	      0xbe00000000	                              mov esi, 0	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40021c8	      0xe800000000	                          call 0x40021cd	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40021cd	          0x4889c7	                            mov rdi, rax	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40021d0	      0xe800000000	                          call 0x40021d5	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40021d5	      0xe984faffff	                           jmp 0x4001c5e	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40021da	          0x4531ff	                          xor r15d, r15d	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x40021dd	          0x4c89e3	                            mov rbx, r12	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x40021e0	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x40021e5	      0x4c89442450	              mov qword [rsp + 0x50], r8	       497	diff.c	FUNCTION_10	CALL_1
0x40021ea	      0x4889742440	             mov qword [rsp + 0x40], rsi	       497	diff.c	FUNCTION_10	CALL_1
0x40021ef	      0x4c894c2438	              mov qword [rsp + 0x38], r9	       497	diff.c	FUNCTION_10	CALL_1
0x40021f4	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       497	diff.c	FUNCTION_10	CALL_1
0x40021f9	    0x488b2d000000	            mov rbp, qword [0x04002200] 	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4002200	      0xe800000000	                          call 0x4002205	       497	diff.c	FUNCTION_10	CALL_1
0x4002205	          0x4885c0	                           test rax, rax	       498	diff.c	FUNCTION_10	IF_1
0x4002208	     0xf8458fdffff	                            je 0x4001f66	       498	diff.c	FUNCTION_10	IF_1
0x400220e	          0x4885db	                           test rbx, rbx	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4002211	          0x4c8938	                    mov qword [rax], r15	       500	diff.c	FUNCTION_10	IF_1
0x4002214	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4002219	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x400221e	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4002223	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4002228	            0x7455	                            je 0x400227f	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x400222a	          0x4989dc	                            mov r12, rbx	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x400222d	          0x4889c3	                            mov rbx, rax	       497	diff.c	FUNCTION_10	CALL_1
0x4002230	      0xe900ffffff	                           jmp 0x4002135	       497	diff.c	FUNCTION_10	CALL_1
0x4002235	        0x4983c101	                               add r9, 1	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x4002239	          0x4531c0	                            xor r8d, r8d	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x400223c	      0xe91afcffff	                           jmp 0x4001e5b	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x4002241	        0x4883c101	                              add rcx, 1	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x4002245	            0x31f6	                            xor esi, esi	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x4002247	      0xe908fcffff	                           jmp 0x4001e54	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x400224c	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4002251	        0x4883c201	                              add rdx, 1	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x4002255	      0x4889442450	             mov qword [rsp + 0x50], rax	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x400225a	      0x4889542468	             mov qword [rsp + 0x68], rdx	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x400225f	      0xe800000000	                          call 0x4002264	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4002264	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4002269	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x400226e	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4002273	          0x4939c1	                             cmp r9, rax	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x4002276	        0x410f9fc7	                               setg r15b	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x400227a	      0xe9a2fbffff	                           jmp 0x4001e21	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x400227f	        0x48894558	            mov qword [rbp + 0x58], rax 	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x4002283	          0x4531e4	                          xor r12d, r12d	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x4002286	          0x4889c3	                            mov rbx, rax	       497	diff.c	FUNCTION_10	CALL_1
0x4002289	      0xe9abfeffff	                           jmp 0x4002139	       497	diff.c	FUNCTION_10	CALL_1
0x400228e	            0x85ed	                           test ebp, ebp	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002290	            0x7449	                            je 0x40022db	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002292	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4002297	          0x4901c1	                             add r9, rax	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x400229a	          0x4929c0	                             sub r8, rax	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x400229d	          0x4c89de	                            mov rsi, r11	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x40022a0	        0x498d140f	                    lea rdx, [r15 + rcx]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x40022a4	        0x4c894a08	                 mov qword [rdx + 8], r9	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x40022a8	        0x4c894248	              mov qword [rdx + 0x48], r8	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x40022ac	      0x4a2b742f08	          sub rsi, qword [rdi + r13 + 8]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x40022b1	      0x4a2b742f48	       sub rsi, qword [rdi + r13 + 0x48]	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x40022b6	     0xf89c1fdffff	                           jns 0x400207d	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x40022bc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x40022c1	          0x4929f0	                             sub r8, rsi	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x40022c4	            0x31f6	                            xor esi, esi	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x40022c6	      0x4d8944c748	      mov qword [r15 + rax*8 + 0x48], r8	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x40022cb	      0xe9adfdffff	                           jmp 0x400207d	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x40022d0	            0x85ed	                           test ebp, ebp	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x40022d2	            0x7549	                           jne 0x400231d	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x40022d4	            0x31f6	                            xor esi, esi	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x40022d6	      0xe9a2fdffff	                           jmp 0x400207d	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x40022db	        0x4a8d0c2f	                    lea rcx, [rdi + r13]	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x40022df	          0x4c89c0	                             mov rax, r8	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x40022e2	          0x4829f0	                            sub rax, rsi	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x40022e5	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x40022ea	        0x48034108	                add rax, qword [rcx + 8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x40022ee	        0x48034148	             add rax, qword [rcx + 0x48]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x40022f2	          0x4829d0	                            sub rax, rdx	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x40022f5	      0x4901443748	      add qword [r15 + rsi + 0x48], rax 	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x40022fa	      0xe96dfdffff	                           jmp 0x400206c	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x40022ff	            0x31ff	                            xor edi, edi	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002301	      0xba05000000	                              mov edx, 5	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002306	      0xbe00000000	                              mov esi, 0	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x400230b	      0xe800000000	                          call 0x4002310	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002310	          0x4889c7	                            mov rdi, rax	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002313	      0xe800000000	                          call 0x4002318	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002318	      0xe953fcffff	                           jmp 0x4001f70	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x400231d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002322	      0x4d8b44c748	     mov r8, qword [r15 + rax*8 + 0x48] 	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002327	            0xeb93	                           jmp 0x40022bc	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4002329	      0xe800000000	                          call 0x400232e	       831	diff.c	FUNCTION_15
diff_set_topline	DO,0:WHILE,0:IF,16:CALL,7:ELSE,5:functions,0:SWITCH,0:FOR,2	172
0x4002850	            0x4157	                                push r15	      1738	diff.c	FUNCTION_31
0x4002852	            0x4156	                                push r14	      1738	diff.c	FUNCTION_31
0x4002854	            0x31c0	                            xor eax, eax	      1739	diff.c	FUNCTION_31
0x4002856	            0x4155	                                push r13	      1738	diff.c	FUNCTION_31
0x4002858	            0x4154	                                push r12	      1738	diff.c	FUNCTION_31
0x400285a	              0x55	                                push rbp	      1738	diff.c	FUNCTION_31
0x400285b	              0x53	                                push rbx	      1738	diff.c	FUNCTION_31
0x400285c	        0x4883ec08	                              sub rsp, 8	      1738	diff.c	FUNCTION_31
0x4002860	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      1739	diff.c	FUNCTION_31
0x4002864	    0x4c8b0d000000	              mov r9, qword [0x0400286b]	      1739	diff.c	FUNCTION_31
0x400286b	       0xf1f440000	                   nop dword [rax + rax]	      1739	diff.c	FUNCTION_31
0x4002870	      0x4d3b6cc160	     cmp r13, qword [r9 + rax*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002875	            0x89c3	                            mov ebx, eax	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002877	            0x741f	                            je 0x4002898	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002879	        0x4883c001	                              add rax, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400287d	        0x4883f808	                              cmp rax, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4002881	            0x75ed	                           jne 0x4002870	       168	diff.c	FUNCTION_5	FOR_1
0x4002883	        0x4883c408	                              add rsp, 8	      1851	diff.c	FUNCTION_31
0x4002887	              0x5b	                                 pop rbx	      1851	diff.c	FUNCTION_31
0x4002888	              0x5d	                                 pop rbp	      1851	diff.c	FUNCTION_31
0x4002889	            0x415c	                                 pop r12	      1851	diff.c	FUNCTION_31
0x400288b	            0x415d	                                 pop r13	      1851	diff.c	FUNCTION_31
0x400288d	            0x415e	                                 pop r14	      1851	diff.c	FUNCTION_31
0x400288f	            0x415f	                                 pop r15	      1851	diff.c	FUNCTION_31
0x4002891	              0xc3	                                     ret	      1851	diff.c	FUNCTION_31
0x4002892	    0x660f1f440000	                    nop word [rax + rax]	      1851	diff.c	FUNCTION_31
0x4002898	    0x418b81a00000	              mov eax, dword [r9 + 0xa0]	      1751	diff.c	FUNCTION_31	IF_2
0x400289f	          0x4889f5	                            mov rbp, rsi	      1751	diff.c	FUNCTION_31	IF_2
0x40028a2	          0x4989fe	                            mov r14, rdi	      1751	diff.c	FUNCTION_31	IF_2
0x40028a5	        0x4c8b6778	            mov r12, qword [rdi + 0x78] 	      1740	diff.c	FUNCTION_31
0x40028a9	            0x85c0	                           test eax, eax	      1751	diff.c	FUNCTION_31	IF_2
0x40028ab	     0xf859f010000	                           jne 0x4002a50	      1751	diff.c	FUNCTION_31	IF_2
0x40028b1	        0x498b4158	              mov rax, qword [r9 + 0x58]	      1757	diff.c	FUNCTION_31	FOR_1
0x40028b5	    0xc78584000000	               mov dword [rbp + 0x84], 0	      1754	diff.c	FUNCTION_31
0x40028bf	          0x4885c0	                           test rax, rax	      1757	diff.c	FUNCTION_31	FOR_1
0x40028c2	            0x7441	                            je 0x4002905	      1757	diff.c	FUNCTION_31	FOR_1
0x40028c4	          0x4c63c3	                          movsxd r8, ebx	      1757	diff.c	FUNCTION_31	FOR_1
0x40028c7	        0x49c1e003	                               shl r8, 3	      1757	diff.c	FUNCTION_31	FOR_1
0x40028cb	        0x4a8d0c00	                     lea rcx, [rax + r8]	      1757	diff.c	FUNCTION_31	FOR_1
0x40028cf	        0x488b5108	                mov rdx, qword [rcx + 8]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028d3	        0x48035148	             add rdx, qword [rcx + 0x48]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028d7	          0x4939d4	                            cmp r12, rdx	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028da	            0x7f21	                            jg 0x40028fd	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028dc	      0xe9af000000	                           jmp 0x4002990	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028e1	     0xf1f80000000	                         nop dword [rax]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028e8	        0x4a8d0c00	                     lea rcx, [rax + r8]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028ec	        0x488b5148	            mov rdx, qword [rcx + 0x48] 	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028f0	        0x48035108	                add rdx, qword [rcx + 8]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028f4	          0x4939d4	                            cmp r12, rdx	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028f7	     0xf8e93000000	                           jle 0x4002990	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x40028fd	          0x488b00	                    mov rax, qword [rax]	      1757	diff.c	FUNCTION_31	FOR_1
0x4002900	          0x4885c0	                           test rax, rax	      1757	diff.c	FUNCTION_31	FOR_1
0x4002903	            0x75e3	                           jne 0x40028e8	      1757	diff.c	FUNCTION_31	FOR_1
0x4002905	        0x4d2b6500	                    sub r12, qword [r13]	      1765	diff.c	FUNCTION_31	IF_4
0x4002909	        0x488b7508	                mov rsi, qword [rbp + 8]	      1764	diff.c	FUNCTION_31	IF_4
0x400290d	          0x4d89e0	                             mov r8, r12	      1765	diff.c	FUNCTION_31	IF_4
0x4002910	          0x4c0306	                     add r8, qword [rsi]	      1765	diff.c	FUNCTION_31	IF_4
0x4002913	        0x4c894578	              mov qword [rbp + 0x78], r8	      1764	diff.c	FUNCTION_31	IF_4
0x4002917	          0x488b06	                    mov rax, qword [rsi]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x400291a	    0xc7858c000000	               mov dword [rbp + 0x8c], 0	      1830	diff.c	FUNCTION_31	ELSE_5
0x4002924	          0x4c39c0	                             cmp rax, r8	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4002927	            0x7d11	                           jge 0x400293a	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4002929	        0x48894578	            mov qword [rbp + 0x78], rax 	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x400292d	    0xc7858c000000	               mov dword [rbp + 0x8c], 1	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x4002937	          0x4989c0	                             mov r8, rax	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x400293a	          0x4d85c0	                             test r8, r8	      1836	diff.c	FUNCTION_31	IF_16
0x400293d	     0xf8e25010000	                           jle 0x4002a68	      1836	diff.c	FUNCTION_31	IF_16
0x4002943	          0x4889ef	                            mov rdi, rbp	      1843	diff.c	FUNCTION_31	CALL_4
0x4002946	      0xe800000000	                          call 0x400294b	      1843	diff.c	FUNCTION_31	CALL_4
0x400294b	          0x4889ef	                            mov rdi, rbp	      1844	diff.c	FUNCTION_31	CALL_5
0x400294e	      0xe800000000	                          call 0x4002953	      1844	diff.c	FUNCTION_31	CALL_5
0x4002953	          0x4889ef	                            mov rdi, rbp	      1846	diff.c	FUNCTION_31	CALL_6
0x4002956	            0x31f6	                            xor esi, esi	      1846	diff.c	FUNCTION_31	CALL_6
0x4002958	      0xe800000000	                          call 0x400295d	      1846	diff.c	FUNCTION_31	CALL_6
0x400295d	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	      1848	diff.c	FUNCTION_31	CALL_7
0x4002961	        0x4883c408	                              add rsp, 8	      1851	diff.c	FUNCTION_31
0x4002965	        0x488d5578	                   lea rdx, [rbp + 0x78]	      1848	diff.c	FUNCTION_31	CALL_7
0x4002969	              0x5b	                                 pop rbx	      1851	diff.c	FUNCTION_31
0x400296a	          0x4889ef	                            mov rdi, rbp	      1848	diff.c	FUNCTION_31	CALL_7
0x400296d	          0x4531c9	                            xor r9d, r9d	      1848	diff.c	FUNCTION_31	CALL_7
0x4002970	    0x41b801000000	                              mov r8d, 1	      1848	diff.c	FUNCTION_31	CALL_7
0x4002976	              0x5d	                                 pop rbp	      1851	diff.c	FUNCTION_31
0x4002977	            0x415c	                                 pop r12	      1851	diff.c	FUNCTION_31
0x4002979	            0x415d	                                 pop r13	      1851	diff.c	FUNCTION_31
0x400297b	            0x415e	                                 pop r14	      1851	diff.c	FUNCTION_31
0x400297d	            0x415f	                                 pop r15	      1851	diff.c	FUNCTION_31
0x400297f	            0x31c9	                            xor ecx, ecx	      1848	diff.c	FUNCTION_31	CALL_7
0x4002981	      0xe900000000	                           jmp 0x4002986	      1848	diff.c	FUNCTION_31	CALL_7
0x4002986	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1848	diff.c	FUNCTION_31	CALL_7
0x4002990	            0x31d2	                            xor edx, edx	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x4002992	        0x488b7508	                mov rsi, qword [rbp + 8]	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x4002996	      0x493b74d160	     cmp rsi, qword [r9 + rdx*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400299b	          0x4863fa	                         movsxd rdi, edx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400299e	            0x7418	                            je 0x40029b8	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40029a0	        0x4883c201	                              add rdx, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40029a4	        0x4883fa08	                              cmp rdx, 8	       168	diff.c	FUNCTION_5	FOR_1
0x40029a8	     0xf84d5feffff	                            je 0x4002883	       168	diff.c	FUNCTION_5	FOR_1
0x40029ae	      0x493b74d160	     cmp rsi, qword [r9 + rdx*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40029b3	          0x4863fa	                         movsxd rdi, edx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40029b6	            0x75e8	                           jne 0x40029a0	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40029b8	        0x4c8d2cf8	                  lea r13, [rax + rdi*8]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40029bc	        0x488b5908	                mov rbx, qword [rcx + 8]	      1774	diff.c	FUNCTION_31	ELSE_1
0x40029c0	        0x4d8b7d08	                mov r15, qword [r13 + 8]	      1774	diff.c	FUNCTION_31	ELSE_1
0x40029c4	          0x4d89f8	                             mov r8, r15	      1774	diff.c	FUNCTION_31	ELSE_1
0x40029c7	          0x4929d8	                             sub r8, rbx	      1774	diff.c	FUNCTION_31	ELSE_1
0x40029ca	          0x4d01e0	                             add r8, r12	      1774	diff.c	FUNCTION_31	ELSE_1
0x40029cd	          0x4939dc	                            cmp r12, rbx	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40029d0	        0x4c894578	              mov qword [rbp + 0x78], r8	      1774	diff.c	FUNCTION_31	ELSE_1
0x40029d4	     0xf8c3dffffff	                            jl 0x4002917	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40029da	            0x31d2	                            xor edx, edx	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40029dc	            0x31ff	                            xor edi, edi	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40029de	            0x6690	                                     nop	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40029e0	    0x49837c116000	          cmp qword [r9 + rdx + 0x60], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40029e6	            0x740f	                            je 0x40029f7	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40029e8	      0x4c8b541048	      mov r10, qword [rax + rdx + 0x48] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40029ed	          0x4c63df	                         movsxd r11, edi	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40029f0	          0x4d39d3	                            cmp r11, r10	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40029f3	        0x410f4cfa	                         cmovl edi, r10d	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40029f7	        0x4883c208	                              add rdx, 8	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40029fb	        0x4883fa40	                           cmp rdx, 0x40	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x40029ff	            0x75df	                           jne 0x40029e0	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x4002a01	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4002a05	        0x488b5148	            mov rdx, qword [rcx + 0x48] 	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4002a09	          0x4839d0	                            cmp rax, rdx	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4002a0c	            0x7472	                            je 0x4002a80	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x4002a0e	     0xf8e84000000	                           jle 0x4002a98	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x4002a14	          0x4801da	                            add rdx, rbx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002a17	          0x4939d4	                            cmp r12, rdx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002a1a	     0xf85f7feffff	                           jne 0x4002917	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x4002a20	    0x49638e840000	         movsxd rcx, dword [r14 + 0x84] 	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a27	            0x89fa	                            mov edx, edi	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a29	            0x29ca	                            sub edx, ecx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a2b	          0x4863d2	                         movsxd rdx, edx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a2e	          0x4839d0	                            cmp rax, rdx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a31	     0xf8f99000000	                            jg 0x4002ad0	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a37	        0x4d8d0407	                     lea r8, [r15 + rax]	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a3b	    0x898d84000000	            mov dword [rbp + 0x84], ecx 	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a41	        0x4c894578	              mov qword [rbp + 0x78], r8	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a45	      0xe9cdfeffff	                           jmp 0x4002917	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a4a	    0x660f1f440000	                    nop word [rax + rax]	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4002a50	            0x31ff	                            xor edi, edi	      1752	diff.c	FUNCTION_31	CALL_2
0x4002a52	      0xe800000000	                          call 0x4002a57	      1752	diff.c	FUNCTION_31	CALL_2
0x4002a57	    0x4c8b0d000000	              mov r9, qword [0x04002a5e]	      1752	diff.c	FUNCTION_31	CALL_2
0x4002a5e	      0xe94efeffff	                           jmp 0x40028b1	      1752	diff.c	FUNCTION_31	CALL_2
0x4002a63	       0xf1f440000	                   nop dword [rax + rax]	      1752	diff.c	FUNCTION_31	CALL_2
0x4002a68	    0x48c745780100	               mov qword [rbp + 0x78], 1	      1838	diff.c	FUNCTION_31	IF_16
0x4002a70	    0xc78584000000	               mov dword [rbp + 0x84], 0	      1839	diff.c	FUNCTION_31	IF_16
0x4002a7a	      0xe9c4feffff	                           jmp 0x4002943	      1839	diff.c	FUNCTION_31	IF_16
0x4002a7f	              0x90	                                     nop	      1839	diff.c	FUNCTION_31	IF_16
0x4002a80	    0x418b86840000	            mov eax, dword [r14 + 0x84] 	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4002a87	    0x898584000000	            mov dword [rbp + 0x84], eax 	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4002a8d	      0xe985feffff	                           jmp 0x4002917	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4002a92	    0x660f1f440000	                    nop word [rax + rax]	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4002a98	          0x4c01f8	                            add rax, r15	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4002a9b	          0x4939c0	                             cmp r8, rax	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4002a9e	     0xf8c73feffff	                            jl 0x4002917	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4002aa4	    0xf60500000000	               test byte [0x04002aab], 1	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x4002aab	        0x48894578	            mov qword [rbp + 0x78], rax 	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4002aaf	          0x4989c0	                             mov r8, rax	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4002ab2	     0xf845ffeffff	                            je 0x4002917	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x4002ab8	          0x4801da	                            add rdx, rbx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4002abb	          0x4939d4	                            cmp r12, rdx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4002abe	            0x74c0	                            je 0x4002a80	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4002ac0	          0x4429e3	                           sub ebx, r12d	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4002ac3	             0x1df	                            add edi, ebx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4002ac5	    0x89bd84000000	            mov dword [rbp + 0x84], edi 	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4002acb	      0xe947feffff	                           jmp 0x4002917	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4002ad0	          0x4c63c7	                          movsxd r8, edi	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4002ad3	          0x4d01f8	                             add r8, r15	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4002ad6	          0x4929c8	                             sub r8, rcx	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4002ad9	        0x4c894578	              mov qword [rbp + 0x78], r8	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4002add	      0xe935feffff	                           jmp 0x4002917	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
set_diff_option	DO,0:WHILE,0:IF,0:CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0	17
0x40001a0	              0x53	                                push rbx	      1134	diff.c	FUNCTION_20
0x40001a1	    0x488b1d000000	            mov rbx, qword [0x040001a8] 	      1135	diff.c	FUNCTION_20
0x40001a8	          0x4863f6	                         movsxd rsi, esi	      1140	diff.c	FUNCTION_20	CALL_1
0x40001ab	        0x488b4708	                mov rax, qword [rdi + 8]	      1138	diff.c	FUNCTION_20
0x40001af	    0x48893d000000	            mov qword [0x040001b6], rdi 	      1137	diff.c	FUNCTION_20
0x40001b6	      0xb904000000	                              mov ecx, 4	      1140	diff.c	FUNCTION_20	CALL_1
0x40001bb	            0x31d2	                            xor edx, edx	      1140	diff.c	FUNCTION_20	CALL_1
0x40001bd	      0xbf00000000	                              mov edi, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x40001c2	    0x830500000000	               add dword [0x040001c9], 1	      1139	diff.c	FUNCTION_20
0x40001c9	    0x488905000000	            mov qword [0x040001d0], rax 	      1138	diff.c	FUNCTION_20
0x40001d0	      0xe800000000	                          call 0x40001d5	      1140	diff.c	FUNCTION_20	CALL_1
0x40001d5	        0x488b4308	                mov rax, qword [rbx + 8]	      1143	diff.c	FUNCTION_20
0x40001d9	    0x48891d000000	            mov qword [0x040001e0], rbx 	      1142	diff.c	FUNCTION_20
0x40001e0	    0x832d00000000	               sub dword [0x040001e7], 1	      1141	diff.c	FUNCTION_20
0x40001e7	              0x5b	                                 pop rbx	      1144	diff.c	FUNCTION_20
0x40001e8	    0x488905000000	            mov qword [0x040001ef], rax 	      1143	diff.c	FUNCTION_20
0x40001ef	              0xc3	                                     ret	      1144	diff.c	FUNCTION_20
diff_write	DO,0:WHILE,0:IF,0:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,0	30
0x4000130	            0x4154	                                push r12	       641	diff.c	FUNCTION_14
0x4000132	              0x55	                                push rbp	       641	diff.c	FUNCTION_14
0x4000133	          0x4889f5	                            mov rbp, rsi	       641	diff.c	FUNCTION_14
0x4000136	              0x53	                                push rbx	       641	diff.c	FUNCTION_14
0x4000137	          0x4889fb	                            mov rbx, rdi	       641	diff.c	FUNCTION_14
0x400013a	    0x4c8ba7901400	          mov r12, qword [rdi + 0x1490] 	       645	diff.c	FUNCTION_14
0x4000141	      0xbf00000000	                              mov edi, 0	       646	diff.c	FUNCTION_14	CALL_1
0x4000146	      0xe800000000	                          call 0x400014b	       646	diff.c	FUNCTION_14	CALL_1
0x400014b	          0x4c8b03	                     mov r8, qword [rbx]	       647	diff.c	FUNCTION_14	CALL_2
0x400014e	            0x6a01	                                  push 1	       647	diff.c	FUNCTION_14	CALL_2
0x4000150	          0x4889ee	                            mov rsi, rbp	       647	diff.c	FUNCTION_14	CALL_2
0x4000153	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4000155	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4000157	          0x4889df	                            mov rdi, rbx	       647	diff.c	FUNCTION_14	CALL_2
0x400015a	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x400015c	    0x488983901400	          mov qword [rbx + 0x1490], rax 	       646	diff.c	FUNCTION_14	CALL_1
0x4000163	          0x4531c9	                            xor r9d, r9d	       647	diff.c	FUNCTION_14	CALL_2
0x4000166	      0xb901000000	                              mov ecx, 1	       647	diff.c	FUNCTION_14	CALL_2
0x400016b	            0x31d2	                            xor edx, edx	       647	diff.c	FUNCTION_14	CALL_2
0x400016d	      0xe800000000	                          call 0x4000172	       647	diff.c	FUNCTION_14	CALL_2
0x4000172	    0x488bbb901400	          mov rdi, qword [rbx + 0x1490] 	       649	diff.c	FUNCTION_14	CALL_3
0x4000179	        0x4883c420	                           add rsp, 0x20	       649	diff.c	FUNCTION_14	CALL_3
0x400017d	            0x89c5	                            mov ebp, eax	       647	diff.c	FUNCTION_14	CALL_2
0x400017f	      0xe800000000	                          call 0x4000184	       649	diff.c	FUNCTION_14	CALL_3
0x4000184	    0x4c89a3901400	          mov qword [rbx + 0x1490], r12 	       650	diff.c	FUNCTION_14
0x400018b	            0x89e8	                            mov eax, ebp	       652	diff.c	FUNCTION_14
0x400018d	              0x5b	                                 pop rbx	       652	diff.c	FUNCTION_14
0x400018e	              0x5d	                                 pop rbp	       652	diff.c	FUNCTION_14
0x400018f	            0x415c	                                 pop r12	       652	diff.c	FUNCTION_14
0x4000191	              0xc3	                                     ret	       652	diff.c	FUNCTION_14
diff_check	DO,0:WHILE,0:IF,17:CALL,4:ELSE,1:functions,0:SWITCH,0:FOR,4	150
0x4000590	            0x4155	                                push r13	      1522	diff.c	FUNCTION_26
0x4000592	            0x4154	                                push r12	      1522	diff.c	FUNCTION_26
0x4000594	              0x55	                                push rbp	      1522	diff.c	FUNCTION_26
0x4000595	              0x53	                                push rbx	      1522	diff.c	FUNCTION_26
0x4000596	          0x4889f5	                            mov rbp, rsi	      1522	diff.c	FUNCTION_26
0x4000599	          0x4889fb	                            mov rbx, rdi	      1522	diff.c	FUNCTION_26
0x400059c	        0x4883ec08	                              sub rsp, 8	      1522	diff.c	FUNCTION_26
0x40005a0	    0x488b15000000	            mov rdx, qword [0x040005a7] 	      1530	diff.c	FUNCTION_26	IF_1
0x40005a7	        0x4c8b6708	                mov r12, qword [rdi + 8]	      1527	diff.c	FUNCTION_26
0x40005ab	    0x8b8aa0000000	            mov ecx, dword [rdx + 0xa0] 	      1530	diff.c	FUNCTION_26	IF_1
0x40005b1	            0x85c9	                           test ecx, ecx	      1530	diff.c	FUNCTION_26	IF_1
0x40005b3	            0x7553	                           jne 0x4000608	      1530	diff.c	FUNCTION_26	IF_1
0x40005b5	      0x48837a5800	               cmp qword [rdx + 0x58], 0	      1533	diff.c	FUNCTION_26	IF_2
0x40005ba	            0x7438	                            je 0x40005f4	      1533	diff.c	FUNCTION_26	IF_2
0x40005bc	    0x8b83c0010000	           mov eax, dword [rbx + 0x1c0] 	      1537	diff.c	FUNCTION_26	IF_3
0x40005c2	            0x85c0	                           test eax, eax	      1537	diff.c	FUNCTION_26	IF_3
0x40005c4	            0x742e	                            je 0x40005f4	      1537	diff.c	FUNCTION_26	IF_3
0x40005c6	          0x4885ed	                           test rbp, rbp	      1537	diff.c	FUNCTION_26	IF_3
0x40005c9	            0x7e29	                           jle 0x40005f4	      1537	diff.c	FUNCTION_26	IF_3
0x40005cb	        0x498b0424	                    mov rax, qword [r12]	      1537	diff.c	FUNCTION_26	IF_3
0x40005cf	        0x4883c001	                              add rax, 1	      1537	diff.c	FUNCTION_26	IF_3
0x40005d3	          0x4839c5	                            cmp rbp, rax	      1537	diff.c	FUNCTION_26	IF_3
0x40005d6	            0x7f1c	                            jg 0x40005f4	      1537	diff.c	FUNCTION_26	IF_3
0x40005d8	            0x31c0	                            xor eax, eax	      1537	diff.c	FUNCTION_26	IF_3
0x40005da	    0x660f1f440000	                    nop word [rax + rax]	      1537	diff.c	FUNCTION_26	IF_3
0x40005e0	      0x4c3b64c260	    cmp r12, qword [rdx + rax*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40005e5	          0x4189c5	                           mov r13d, eax	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40005e8	            0x7436	                            je 0x4000620	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40005ea	        0x4883c001	                              add rax, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40005ee	        0x4883f808	                              cmp rax, 8	       168	diff.c	FUNCTION_5	FOR_1
0x40005f2	            0x75ec	                           jne 0x40005e0	       168	diff.c	FUNCTION_5	FOR_1
0x40005f4	            0x31c0	                            xor eax, eax	      1534	diff.c	FUNCTION_26	IF_2
0x40005f6	        0x4883c408	                              add rsp, 8	      1608	diff.c	FUNCTION_26
0x40005fa	              0x5b	                                 pop rbx	      1608	diff.c	FUNCTION_26
0x40005fb	              0x5d	                                 pop rbp	      1608	diff.c	FUNCTION_26
0x40005fc	            0x415c	                                 pop r12	      1608	diff.c	FUNCTION_26
0x40005fe	            0x415d	                                 pop r13	      1608	diff.c	FUNCTION_26
0x4000600	              0xc3	                                     ret	      1608	diff.c	FUNCTION_26
0x4000601	     0xf1f80000000	                         nop dword [rax]	      1608	diff.c	FUNCTION_26
0x4000608	            0x31ff	                            xor edi, edi	      1531	diff.c	FUNCTION_26	CALL_1
0x400060a	      0xe800000000	                          call 0x400060f	      1531	diff.c	FUNCTION_26	CALL_1
0x400060f	    0x488b15000000	            mov rdx, qword [0x04000616] 	      1531	diff.c	FUNCTION_26	CALL_1
0x4000616	            0xeb9d	                           jmp 0x40005b5	      1531	diff.c	FUNCTION_26	CALL_1
0x4000618	     0xf1f84000000	                   nop dword [rax + rax]	      1531	diff.c	FUNCTION_26	CALL_1
0x4000620	          0x4531c9	                            xor r9d, r9d	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000623	            0x31c9	                            xor ecx, ecx	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000625	            0x31d2	                            xor edx, edx	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000627	    0x41b801000000	                              mov r8d, 1	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400062d	          0x4889ee	                            mov rsi, rbp	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000630	          0x4889df	                            mov rdi, rbx	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000633	      0xe800000000	                          call 0x4000638	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4000638	            0x85c0	                           test eax, eax	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400063a	            0x75b8	                           jne 0x40005f4	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400063c	    0x488b35000000	            mov rsi, qword [0x04000643] 	      1551	diff.c	FUNCTION_26	FOR_1
0x4000643	        0x488b5e58	            mov rbx, qword [rsi + 0x58] 	      1551	diff.c	FUNCTION_26	FOR_1
0x4000647	          0x4885db	                           test rbx, rbx	      1551	diff.c	FUNCTION_26	FOR_1
0x400064a	            0x74a8	                            je 0x40005f4	      1551	diff.c	FUNCTION_26	FOR_1
0x400064c	          0x4963fd	                        movsxd rdi, r13d	      1551	diff.c	FUNCTION_26	FOR_1
0x400064f	    0x488d0cfd0000	                        lea rcx, [rdi*8]	      1551	diff.c	FUNCTION_26	FOR_1
0x4000657	        0x488d040b	                    lea rax, [rbx + rcx]	      1551	diff.c	FUNCTION_26	FOR_1
0x400065b	        0x488b5008	                mov rdx, qword [rax + 8]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400065f	          0x4989d3	                            mov r11, rdx	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000662	        0x4c035848	             add r11, qword [rax + 0x48]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000666	          0x4939eb	                            cmp r11, rbp	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000669	            0x7c19	                            jl 0x4000684	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400066b	            0xeb2b	                           jmp 0x4000698	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400066d	           0xf1f00	                         nop dword [rax]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000670	        0x488d040b	                    lea rax, [rbx + rcx]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000674	        0x488b5008	                mov rdx, qword [rax + 8]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000678	          0x4989d2	                            mov r10, rdx	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400067b	        0x4c035048	             add r10, qword [rax + 0x48]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x400067f	          0x4c39d5	                            cmp rbp, r10	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000682	            0x7e14	                           jle 0x4000698	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x4000684	          0x488b1b	                    mov rbx, qword [rbx]	      1551	diff.c	FUNCTION_26	FOR_1
0x4000687	          0x4885db	                           test rbx, rbx	      1551	diff.c	FUNCTION_26	FOR_1
0x400068a	            0x75e4	                           jne 0x4000670	      1551	diff.c	FUNCTION_26	FOR_1
0x400068c	      0xe963ffffff	                           jmp 0x40005f4	      1551	diff.c	FUNCTION_26	FOR_1
0x4000691	     0xf1f80000000	                         nop dword [rax]	      1551	diff.c	FUNCTION_26	FOR_1
0x4000698	          0x4839d5	                            cmp rbp, rdx	      1554	diff.c	FUNCTION_26	IF_7
0x400069b	     0xf8c53ffffff	                            jl 0x40005f4	      1554	diff.c	FUNCTION_26	IF_7
0x40006a1	      0x4c8b44fb48	     mov r8, qword [rbx + rdi*8 + 0x48] 	      1557	diff.c	FUNCTION_26	IF_8
0x40006a6	          0x4c01c2	                             add rdx, r8	      1557	diff.c	FUNCTION_26	IF_8
0x40006a9	          0x4839d5	                            cmp rbp, rdx	      1557	diff.c	FUNCTION_26	IF_8
0x40006ac	            0x7d52	                           jge 0x4000700	      1557	diff.c	FUNCTION_26	IF_8
0x40006ae	            0x31c0	                            xor eax, eax	      1557	diff.c	FUNCTION_26	IF_8
0x40006b0	          0x4531e4	                          xor r12d, r12d	      1557	diff.c	FUNCTION_26	IF_8
0x40006b3	            0x31c9	                            xor ecx, ecx	      1557	diff.c	FUNCTION_26	IF_8
0x40006b5	            0xeb21	                           jmp 0x40006d8	      1557	diff.c	FUNCTION_26	IF_8
0x40006b7	    0x660f1f840000	                    nop word [rax + rax]	      1557	diff.c	FUNCTION_26	IF_8
0x40006c0	          0x4939d0	                             cmp r8, rdx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40006c3	     0xf85c1000000	                           jne 0x400078a	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40006c9	      0xb901000000	                              mov ecx, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x40006ce	        0x4883c001	                              add rax, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x40006d2	        0x4883f808	                              cmp rax, 8	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x40006d6	            0x7468	                            je 0x4000740	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x40006d8	          0x4139c5	                           cmp r13d, eax	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40006db	            0x74f1	                            je 0x40006ce	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40006dd	    0x48837cc66000	       cmp qword [rsi + rax*8 + 0x60], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40006e3	            0x74e9	                            je 0x40006ce	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40006e5	      0x488b54c348	    mov rdx, qword [rbx + rax*8 + 0x48] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006ea	          0x4885d2	                           test rdx, rdx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006ed	            0x75d1	                           jne 0x40006c0	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006ef	    0x41bc01000000	                             mov r12d, 1	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006f5	            0xebd7	                           jmp 0x40006ce	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40006f7	    0x660f1f840000	                    nop word [rax + rax]	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4000700	    0xf60500000000	               test byte [0x04000707], 1	      1598	diff.c	FUNCTION_26	IF_16
0x4000707	     0xf84e7feffff	                            je 0x40005f4	      1598	diff.c	FUNCTION_26	IF_16
0x400070d	            0x31d2	                            xor edx, edx	      1598	diff.c	FUNCTION_26	IF_16
0x400070f	            0x31c0	                            xor eax, eax	      1598	diff.c	FUNCTION_26	IF_16
0x4000711	     0xf1f80000000	                         nop dword [rax]	      1598	diff.c	FUNCTION_26	IF_16
0x4000718	    0x48837c166000	         cmp qword [rsi + rdx + 0x60], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400071e	            0x740e	                            je 0x400072e	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4000720	      0x488b4c1348	      mov rcx, qword [rbx + rdx + 0x48] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4000725	          0x4863f8	                         movsxd rdi, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4000728	          0x4839f9	                            cmp rcx, rdi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x400072b	           0xf4fc1	                          cmovg eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x400072e	        0x4883c208	                              add rdx, 8	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4000732	        0x4883fa40	                           cmp rdx, 0x40	      1604	diff.c	FUNCTION_26	FOR_4
0x4000736	            0x75e0	                           jne 0x4000718	      1604	diff.c	FUNCTION_26	FOR_4
0x4000738	          0x4429c0	                            sub eax, r8d	      1607	diff.c	FUNCTION_26
0x400073b	      0xe9b6feffff	                           jmp 0x40005f6	      1607	diff.c	FUNCTION_26
0x4000740	            0x85c9	                           test ecx, ecx	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4000742	            0x7454	                            je 0x4000798	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4000744	            0x31ed	                            xor ebp, ebp	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4000746	            0xeb12	                           jmp 0x400075a	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4000748	     0xf1f84000000	                   nop dword [rax + rax]	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4000750	        0x4883c501	                              add rbp, 1	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4000754	        0x4883fd08	                              cmp rbp, 8	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x4000758	            0x743e	                            je 0x4000798	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x400075a	          0x4439ed	                           cmp ebp, r13d	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400075d	            0x74f1	                            je 0x4000750	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400075f	    0x488b15000000	            mov rdx, qword [0x04000766] 	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000766	          0x4863c5	                         movsxd rax, ebp	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000769	    0x48837cc26000	       cmp qword [rdx + rax*8 + 0x60], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400076f	            0x74df	                            je 0x4000750	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000771	    0x48837ceb4800	       cmp qword [rbx + rbp*8 + 0x48], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000777	            0x74d7	                            je 0x4000750	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4000779	            0x89ea	                            mov edx, ebp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400077b	          0x4489ee	                           mov esi, r13d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400077e	          0x4889df	                            mov rdi, rbx	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4000781	      0xe86afbffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4000786	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4000788	            0x75c6	                           jne 0x4000750	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400078a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x400078f	      0xe962feffff	                           jmp 0x40005f6	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x4000794	         0xf1f4000	                         nop dword [rax]	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x4000798	          0x4585e4	                         test r12d, r12d	      1592	diff.c	FUNCTION_26	IF_8	IF_15
0x400079b	      0xb8feffffff	                     mov eax, 0xfffffffe	      1594	diff.c	FUNCTION_26	IF_8
0x40007a0	     0xf844efeffff	                            je 0x40005f4	      1592	diff.c	FUNCTION_26	IF_8	IF_15
0x40007a6	      0xe94bfeffff	                           jmp 0x40005f6	      1592	diff.c	FUNCTION_26	IF_8	IF_15
diff_find_change	DO,0:WHILE,4:IF,14:CALL,20:ELSE,2:functions,0:SWITCH,0:FOR,2	285
0x4002da0	            0x4157	                                push r15	      1964	diff.c	FUNCTION_35
0x4002da2	            0x4156	                                push r14	      1964	diff.c	FUNCTION_35
0x4002da4	            0x4155	                                push r13	      1964	diff.c	FUNCTION_35
0x4002da6	            0x4154	                                push r12	      1964	diff.c	FUNCTION_35
0x4002da8	              0x55	                                push rbp	      1964	diff.c	FUNCTION_35
0x4002da9	              0x53	                                push rbx	      1964	diff.c	FUNCTION_35
0x4002daa	          0x4889fb	                            mov rbx, rdi	      1964	diff.c	FUNCTION_35
0x4002dad	          0x4889f5	                            mov rbp, rsi	      1964	diff.c	FUNCTION_35
0x4002db0	        0x4883ec48	                           sub rsp, 0x48	      1964	diff.c	FUNCTION_35
0x4002db4	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1978	diff.c	FUNCTION_35	CALL_2
0x4002db8	      0x4889542408	                mov qword [rsp + 8], rdx	      1964	diff.c	FUNCTION_35
0x4002dbd	            0x31d2	                            xor edx, edx	      1978	diff.c	FUNCTION_35	CALL_2
0x4002dbf	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      1964	diff.c	FUNCTION_35
0x4002dc4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1964	diff.c	FUNCTION_35
0x4002dcd	      0x4889442438	             mov qword [rsp + 0x38], rax	      1964	diff.c	FUNCTION_35
0x4002dd2	            0x31c0	                            xor eax, eax	      1964	diff.c	FUNCTION_35
0x4002dd4	      0xe800000000	                          call 0x4002dd9	      1978	diff.c	FUNCTION_35	CALL_2
0x4002dd9	          0x4889c7	                            mov rdi, rax	      1978	diff.c	FUNCTION_35	CALL_2
0x4002ddc	      0xe800000000	                          call 0x4002de1	      1978	diff.c	FUNCTION_35	CALL_2
0x4002de1	          0x4885c0	                           test rax, rax	      1979	diff.c	FUNCTION_35	IF_1
0x4002de4	     0xf8491030000	                            je 0x400317b	      1979	diff.c	FUNCTION_35	IF_1
0x4002dea	        0x488b5308	                mov rdx, qword [rbx + 8]	      1982	diff.c	FUNCTION_35	CALL_3
0x4002dee	    0x488b0d000000	            mov rcx, qword [0x04002df5] 	      1982	diff.c	FUNCTION_35	CALL_3
0x4002df5	          0x4989c5	                            mov r13, rax	      1982	diff.c	FUNCTION_35	CALL_3
0x4002df8	            0x31c0	                            xor eax, eax	      1982	diff.c	FUNCTION_35	CALL_3
0x4002dfa	    0x660f1f440000	                    nop word [rax + rax]	      1982	diff.c	FUNCTION_35	CALL_3
0x4002e00	      0x483b54c160	    cmp rdx, qword [rcx + rax*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002e05	            0x7439	                            je 0x4002e40	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002e07	        0x4883c001	                              add rax, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4002e0b	        0x4883f808	                              cmp rax, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4002e0f	            0x75ef	                           jne 0x4002e00	       168	diff.c	FUNCTION_5	FOR_1
0x4002e11	          0x4c89ef	                            mov rdi, r13	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x4002e14	      0xe800000000	                          call 0x4002e19	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x4002e19	            0x31c0	                            xor eax, eax	      1986	diff.c	FUNCTION_35	IF_2
0x4002e1b	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2083	diff.c	FUNCTION_35
0x4002e20	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2083	diff.c	FUNCTION_35
0x4002e29	     0xf8553030000	                           jne 0x4003182	      2083	diff.c	FUNCTION_35
0x4002e2f	        0x4883c448	                           add rsp, 0x48	      2083	diff.c	FUNCTION_35
0x4002e33	              0x5b	                                 pop rbx	      2083	diff.c	FUNCTION_35
0x4002e34	              0x5d	                                 pop rbp	      2083	diff.c	FUNCTION_35
0x4002e35	            0x415c	                                 pop r12	      2083	diff.c	FUNCTION_35
0x4002e37	            0x415d	                                 pop r13	      2083	diff.c	FUNCTION_35
0x4002e39	            0x415e	                                 pop r14	      2083	diff.c	FUNCTION_35
0x4002e3b	            0x415f	                                 pop r15	      2083	diff.c	FUNCTION_35
0x4002e3d	              0xc3	                                     ret	      2083	diff.c	FUNCTION_35
0x4002e3e	            0x6690	                                     nop	      2083	diff.c	FUNCTION_35
0x4002e40	        0x488b5958	            mov rbx, qword [rcx + 0x58] 	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e44	        0x89442424	             mov dword [rsp + 0x24], eax	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e48	          0x4885db	                           test rbx, rbx	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e4b	            0x74c4	                            je 0x4002e11	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e4d	          0x4863f0	                         movsxd rsi, eax	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e50	    0x488d14f50000	                        lea rdx, [rsi*8]	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e58	            0xeb0e	                           jmp 0x4002e68	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e5a	    0x660f1f440000	                    nop word [rax + rax]	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e60	          0x488b1b	                    mov rbx, qword [rbx]	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e63	          0x4885db	                           test rbx, rbx	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e66	            0x74a9	                            je 0x4002e11	      1990	diff.c	FUNCTION_35	FOR_1
0x4002e68	      0x488b441308	         mov rax, qword [rbx + rdx + 8] 	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4002e6d	      0x4803441348	       add rax, qword [rbx + rdx + 0x48]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4002e72	          0x4839c5	                            cmp rbp, rax	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4002e75	            0x7fe9	                            jg 0x4002e60	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4002e77	            0x31c0	                            xor eax, eax	      1982	diff.c	FUNCTION_35	CALL_3
0x4002e79	     0xf1f80000000	                         nop dword [rax]	      1982	diff.c	FUNCTION_35	CALL_3
0x4002e80	      0x488b7c0160	      mov rdi, qword [rcx + rax + 0x60] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e85	          0x4885ff	                           test rdi, rdi	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e88	            0x7417	                            je 0x4002ea1	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e8a	      0x488b540348	      mov rdx, qword [rbx + rax + 0x48] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e8f	      0x4803540308	          add rdx, qword [rbx + rax + 8]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e94	        0x4883ea01	                              sub rdx, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e98	          0x483b17	                    cmp rdx, qword [rdi]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e9b	     0xf8f70ffffff	                            jg 0x4002e11	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002ea1	        0x4883c008	                              add rax, 8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002ea5	        0x4883f840	                           cmp rax, 0x40	       594	diff.c	FUNCTION_12	FOR_1
0x4002ea9	            0x75d5	                           jne 0x4002e80	       594	diff.c	FUNCTION_12	FOR_1
0x4002eab	        0x2b6cf308	        sub ebp, dword [rbx + rsi*8 + 8]	      1999	diff.c	FUNCTION_35
0x4002eaf	        0x488d4348	                   lea rax, [rbx + 0x48]	      1999	diff.c	FUNCTION_35
0x4002eb3	    0x41bc01000000	                             mov r12d, 1	      1973	diff.c	FUNCTION_35
0x4002eb9	    0xc74424200000	               mov dword [rsp + 0x20], 0	      2001	diff.c	FUNCTION_35	FOR_2
0x4002ec1	      0x4889442410	             mov qword [rsp + 0x10], rax	      2001	diff.c	FUNCTION_35	FOR_2
0x4002ec6	          0x4863c5	                         movsxd rax, ebp	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002ec9	      0x4889442418	             mov qword [rsp + 0x18], rax	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002ece	            0xeb1f	                           jmp 0x4002eef	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002ed0	      0x8344242001	               add dword [rsp + 0x20], 1	      2001	diff.c	FUNCTION_35	FOR_2
0x4002ed5	    0x488344241008	               add qword [rsp + 0x10], 8	      2001	diff.c	FUNCTION_35	FOR_2
0x4002edb	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2001	diff.c	FUNCTION_35	FOR_2
0x4002edf	          0x83f808	                              cmp eax, 8	      2001	diff.c	FUNCTION_35	FOR_2
0x4002ee2	     0xf8450020000	                            je 0x4003138	      2001	diff.c	FUNCTION_35	FOR_2
0x4002ee8	    0x488b0d000000	            mov rcx, qword [0x04002eef] 	      2001	diff.c	FUNCTION_35	FOR_2
0x4002eef	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002ef3	          0x4863c6	                         movsxd rax, esi	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002ef6	      0x488b7cc160	    mov rdi, qword [rcx + rax*8 + 0x60] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002efb	          0x4885ff	                           test rdi, rdi	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002efe	            0x74d0	                            je 0x4002ed0	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002f00	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002f04	            0x39ce	                            cmp esi, ecx	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002f06	            0x74c8	                            je 0x4002ed0	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002f08	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002f0d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002f12	          0x483b08	                    cmp rcx, qword [rax]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002f15	            0x7db9	                           jge 0x4002ed0	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4002f17	          0x4889ce	                            mov rsi, rcx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002f1a	        0x480370c0	             add rsi, qword [rax - 0x40]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002f1e	            0x31d2	                            xor edx, edx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002f20	          0x4531f6	                          xor r14d, r14d	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002f23	            0x31ed	                            xor ebp, ebp	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x4002f25	      0xe800000000	                          call 0x4002f2a	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002f2a	          0x4989c4	                            mov r12, rax	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4002f2d	            0xeb20	                           jmp 0x4002f4f	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f2f	              0x90	                                     nop	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f30	          0x80fa09	                               cmp dl, 9	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4002f33	            0x743b	                            je 0x4002f70	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4002f35	      0x488d542434	                   lea rdx, [rsp + 0x34]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002f3a	          0x4889df	                            mov rdi, rbx	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002f3d	      0xe8fed0ffff	                call sym.diff_equal_char	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002f42	            0x85c0	                           test eax, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002f44	            0x746a	                            je 0x4002fb0	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4002f46	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x4002f4a	             0x1c5	                            add ebp, eax	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x4002f4c	          0x4101c6	                           add r14d, eax	      2028	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x4002f4f	          0x4863dd	                         movsxd rbx, ebp	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f52	          0x4c01eb	                            add rbx, r13	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f55	           0xfb613	                   movzx edx, byte [rbx]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f58	            0x84d2	                             test dl, dl	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f5a	            0x7454	                            je 0x4002fb0	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f5c	          0x4963f6	                        movsxd rsi, r14d	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002f5f	          0x4c01e6	                            add rsi, r12	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002f62	    0xf60500000000	               test byte [0x04002f69], 4	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x4002f69	            0x74ca	                            je 0x4002f35	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x4002f6b	          0x80fa20	                            cmp dl, 0x20	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4002f6e	            0x75c0	                           jne 0x4002f30	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4002f70	           0xfb606	                   movzx eax, byte [rsi]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002f73	            0x3c20	                            cmp al, 0x20	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002f75	            0x7404	                            je 0x4002f7b	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002f77	            0x3c09	                               cmp al, 9	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002f79	            0x75ba	                           jne 0x4002f35	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4002f7b	          0x4889df	                            mov rdi, rbx	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002f7e	        0x48893424	                    mov qword [rsp], rsi	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002f82	      0xe800000000	                          call 0x4002f87	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002f87	        0x488b3424	                    mov rsi, qword [rsp]	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002f8b	            0x89c5	                            mov ebp, eax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002f8d	          0x4429ed	                           sub ebp, r13d	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4002f90	          0x4863dd	                         movsxd rbx, ebp	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f93	          0x4c01eb	                            add rbx, r13	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002f96	          0x4889f7	                            mov rdi, rsi	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002f99	      0xe800000000	                          call 0x4002f9e	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002f9e	           0xfb613	                   movzx edx, byte [rbx]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002fa1	          0x4189c6	                           mov r14d, eax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002fa4	          0x4529e6	                          sub r14d, r12d	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4002fa7	            0x84d2	                             test dl, dl	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002fa9	            0x75b1	                           jne 0x4002f5c	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002fab	       0xf1f440000	                   nop dword [rax + rax]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4002fb0	    0x8b0500000000	            mov eax, dword [0x04002fb6] 	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002fb6	            0x85c0	                           test eax, eax	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002fb8	     0xf8592010000	                           jne 0x4003150	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4002fbe	      0x488b442408	                mov rax, qword [rsp + 8]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4002fc3	            0x3b28	                    cmp ebp, dword [rax]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4002fc5	            0x7d02	                           jge 0x4002fc9	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4002fc7	            0x8928	                    mov dword [rax], ebp	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4002fc9	          0x803b00	                       cmp byte [rbx], 0	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002fcc	            0x750e	                           jne 0x4002fdc	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002fce	          0x4963c6	                        movsxd rax, r14d	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002fd1	      0x41803c0400	                 cmp byte [r12 + rax], 0	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002fd6	     0xf84db000000	                            je 0x40030b7	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4002fdc	          0x4c89ef	                            mov rdi, r13	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002fdf	      0xe800000000	                          call 0x4002fe4	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002fe4	          0x4c89e7	                            mov rdi, r12	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002fe7	          0x4189c7	                           mov r15d, eax	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4002fea	      0xe800000000	                          call 0x4002fef	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002fef	          0x4189c0	                            mov r8d, eax	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002ff2	      0x488b442408	                mov rax, qword [rsp + 8]	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002ff7	          0x4c89e9	                            mov rcx, r13	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002ffa	          0x4489c3	                            mov ebx, r8d	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4002ffd	          0x4589f5	                          mov r13d, r14d	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4003000	            0x8b30	                    mov esi, dword [rax]	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4003002	          0x4139f7	                           cmp r15d, esi	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4003005	     0xf8c97000000	                            jl 0x40030a2	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400300b	          0x4489f8	                           mov eax, r15d	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400300e	          0x4139dd	                           cmp r13d, ebx	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4003011	            0xf7d0	                                 not eax	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4003013	           0xf9ec2	                                setle dl	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4003016	          0xc1e81f	                           shr eax, 0x1f	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4003019	            0x84c2	                             test dl, al	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400301b	     0xf8481000000	                            je 0x40030a2	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4003021	            0x85db	                           test ebx, ebx	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4003023	            0x787d	                            js 0x40030a2	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4003025	    0xf60500000000	               test byte [0x0400302c], 4	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x400302c	     0xf84f6000000	                            je 0x4003128	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4003032	          0x4963d7	                        movsxd rdx, r15d	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4003035	        0x4c8d3411	                    lea r14, [rcx + rdx]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4003039	        0x410fb606	                   movzx eax, byte [r14]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x400303d	            0x3c20	                            cmp al, 0x20	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x400303f	            0x747f	                            je 0x40030c0	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4003041	            0x3c09	                               cmp al, 9	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4003043	            0x747b	                            je 0x40030c0	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4003045	          0x4863eb	                         movsxd rbp, ebx	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4003048	          0x4c01e5	                            add rbp, r12	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x400304b	          0x4889cf	                            mov rdi, rcx	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400304e	        0x48890c24	                    mov qword [rsp], rcx	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003052	          0x4c89f6	                            mov rsi, r14	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003055	    0xff1500000000	                 call qword [0x0400305b]	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400305b	            0x4898	                                    cdqe	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400305d	          0x4889ee	                            mov rsi, rbp	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003060	          0x4c89e7	                            mov rdi, r12	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003063	          0x4929c6	                            sub r14, rax	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003066	    0xff1500000000	                 call qword [0x0400306c]	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400306c	          0x4889ee	                            mov rsi, rbp	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x400306f	            0x4898	                                    cdqe	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4003071	      0x488d542434	                   lea rdx, [rsp + 0x34]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4003076	          0x4829c6	                            sub rsi, rax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4003079	          0x4c89f7	                            mov rdi, r14	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x400307c	      0xe8bfcfffff	                call sym.diff_equal_char	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4003081	            0x85c0	                           test eax, eax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4003083	        0x488b0c24	                    mov rcx, qword [rsp]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4003087	            0x7419	                            je 0x40030a2	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4003089	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400308d	          0x4129c7	                           sub r15d, eax	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003090	            0x29c3	                            sub ebx, eax	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003092	      0x488b442408	                mov rax, qword [rsp + 8]	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003097	            0x8b30	                    mov esi, dword [rax]	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4003099	          0x4139f7	                           cmp r15d, esi	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x400309c	     0xf8d69ffffff	                           jge 0x400300b	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40030a2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x40030a7	          0x4989cd	                            mov r13, rcx	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x40030aa	          0x443b38	                   cmp r15d, dword [rax]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x40030ad	            0x7e08	                           jle 0x40030b7	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x40030af	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x40030b4	          0x448938	                   mov dword [rax], r15d	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x40030b7	          0x4531e4	                          xor r12d, r12d	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x40030ba	      0xe911feffff	                           jmp 0x4002ed0	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x40030bf	              0x90	                                     nop	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x40030c0	          0x4863fb	                         movsxd rdi, ebx	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030c3	        0x498d2c3c	                    lea rbp, [r12 + rdi]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030c7	         0xfb64500	                   movzx eax, byte [rbp]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030cb	            0x3c20	                            cmp al, 0x20	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030cd	            0x7408	                            je 0x40030d7	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030cf	            0x3c09	                               cmp al, 9	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030d1	     0xf8574ffffff	                           jne 0x400304b	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030d7	      0x488d4411ff	                lea rax, [rcx + rdx - 1]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030dc	         0xf1f4000	                         nop dword [rax]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40030e0	        0x4183ef01	                             sub r15d, 1	      2057	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x40030e4	          0x4139f7	                           cmp r15d, esi	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x40030e7	            0x7c11	                            jl 0x40030fa	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x40030e9	           0xfb610	                   movzx edx, byte [rax]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40030ec	        0x4883e801	                              sub rax, 1	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40030f0	          0x80fa20	                            cmp dl, 0x20	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40030f3	            0x74eb	                            je 0x40030e0	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40030f5	          0x80fa09	                               cmp dl, 9	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40030f8	            0x74e6	                            je 0x40030e0	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40030fa	      0x498d443cff	                lea rax, [r12 + rdi - 1]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40030ff	              0x90	                                     nop	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4003100	          0x83eb01	                              sub ebx, 1	      2060	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4003103	          0x4139dd	                           cmp r13d, ebx	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4003106	     0xf8ff6feffff	                            jg 0x4003002	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x400310c	           0xfb610	                   movzx edx, byte [rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400310f	        0x4883e801	                              sub rax, 1	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4003113	          0x80fa20	                            cmp dl, 0x20	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4003116	            0x74e8	                            je 0x4003100	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4003118	          0x80fa09	                               cmp dl, 9	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400311b	            0x74e3	                            je 0x4003100	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400311d	      0xe9e0feffff	                           jmp 0x4003002	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4003122	    0x660f1f440000	                    nop word [rax + rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4003128	          0x4d63f7	                        movsxd r14, r15d	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400312b	          0x4901ce	                            add r14, rcx	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400312e	      0xe912ffffff	                           jmp 0x4003045	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4003133	       0xf1f440000	                   nop dword [rax + rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4003138	          0x4c89ef	                            mov rdi, r13	      2081	diff.c	FUNCTION_35	CALL_20
0x400313b	      0xe800000000	                          call 0x4003140	      2081	diff.c	FUNCTION_35	CALL_20
0x4003140	          0x4489e0	                           mov eax, r12d	      2082	diff.c	FUNCTION_35
0x4003143	      0xe9d3fcffff	                           jmp 0x4002e1b	      2082	diff.c	FUNCTION_35
0x4003148	     0xf1f84000000	                   nop dword [rax + rax]	      2082	diff.c	FUNCTION_35
0x4003150	          0x4889de	                            mov rsi, rbx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4003153	          0x4c89ef	                            mov rdi, r13	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4003156	    0xff1500000000	                 call qword [0x0400315c]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400315c	            0x29c5	                            sub ebp, eax	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400315e	          0x4963f6	                        movsxd rsi, r14d	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4003161	          0x4c89e7	                            mov rdi, r12	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4003164	          0x4863dd	                         movsxd rbx, ebp	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4003167	          0x4c01e6	                            add rsi, r12	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400316a	          0x4c01eb	                            add rbx, r13	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400316d	    0xff1500000000	                 call qword [0x04003173]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4003173	          0x4129c6	                           sub r14d, eax	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4003176	      0xe943feffff	                           jmp 0x4002fbe	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400317b	            0x31c0	                            xor eax, eax	      1980	diff.c	FUNCTION_35	IF_1
0x400317d	      0xe999fcffff	                           jmp 0x4002e1b	      1980	diff.c	FUNCTION_35	IF_1
0x4003182	      0xe800000000	                          call 0x4003187	      2083	diff.c	FUNCTION_35
ex_diffoff	DO,0:WHILE,0:IF,2:CALL,3:ELSE,0:functions,1:SWITCH,0:FOR,0	135
0x40025f0	            0x4155	                                push r13	      1217	diff.c	FUNCTION_22
0x40025f2	            0x4154	                                push r12	      1217	diff.c	FUNCTION_22
0x40025f4	          0x4989fc	                            mov r12, rdi	      1217	diff.c	FUNCTION_22
0x40025f7	              0x55	                                push rbp	      1217	diff.c	FUNCTION_22
0x40025f8	              0x53	                                push rbx	      1217	diff.c	FUNCTION_22
0x40025f9	        0x4883ec08	                              sub rsp, 8	      1217	diff.c	FUNCTION_22
0x40025fd	    0x488b1d000000	            mov rbx, qword [0x04002604] 	      1221	diff.c	FUNCTION_22
0x4002604	          0x4885db	                           test rbx, rbx	      1221	diff.c	FUNCTION_22
0x4002607	     0xf8486010000	                            je 0x4002793	      1221	diff.c	FUNCTION_22
0x400260d	          0x8b5734	            mov edx, dword [rdi + 0x34] 	      1221	diff.c	FUNCTION_22
0x4002610	            0x31ed	                            xor ebp, ebp	      1221	diff.c	FUNCTION_22
0x4002612	    0x41bd00000000	                             mov r13d, 0	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002618	            0xeb2a	                           jmp 0x4002644	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400261a	    0x660f1f440000	                    nop word [rax + rax]	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4002620	    0x448b8bc00100	           mov r9d, dword [rbx + 0x1c0] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002627	          0x4585c9	                           test r9d, r9d	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400262a	           0xf95c0	                                setne al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400262d	            0x84c0	                             test al, al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400262f	            0x7525	                           jne 0x4002656	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002631	     0xbabc0010000	             or ebp, dword [rbx + 0x1c0]	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x4002637	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1221	diff.c	FUNCTION_22
0x400263b	          0x4885db	                           test rbx, rbx	      1221	diff.c	FUNCTION_22
0x400263e	     0xf8404010000	                            je 0x4002748	      1221	diff.c	FUNCTION_22
0x4002644	            0x85d2	                           test edx, edx	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002646	            0x75d8	                           jne 0x4002620	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002648	    0x48391d000000	            cmp qword [0x0400264f], rbx 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400264f	           0xf94c0	                                 sete al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002652	            0x84c0	                             test al, al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002654	            0x74db	                            je 0x4002631	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002656	            0x31f6	                            xor esi, esi	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x4002658	          0x4889df	                            mov rdi, rbx	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x400265b	      0xe840dbffff	                call sym.set_diff_option	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x4002660	    0x448b838c0200	           mov r8d, dword [rbx + 0x28c] 	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x4002667	          0x4585c0	                           test r8d, r8d	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x400266a	     0xf84a6000000	                            je 0x4002716	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x4002670	    0x8bbb88020000	           mov edi, dword [rbx + 0x288] 	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x4002676	            0x85ff	                           test edi, edi	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x4002678	            0x740c	                            je 0x4002686	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x400267a	    0x8b8390020000	           mov eax, dword [rbx + 0x290] 	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x4002680	    0x898388020000	            mov dword [rbx + 0x288], eax	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x4002686	    0x8bb3b0020000	           mov esi, dword [rbx + 0x2b0] 	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x400268c	            0x85f6	                           test esi, esi	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x400268e	            0x740c	                            je 0x400269c	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x4002690	    0x8b83b4020000	           mov eax, dword [rbx + 0x2b4] 	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x4002696	    0x8983b0020000	            mov dword [rbx + 0x2b0], eax	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x400269c	    0x8b8b94020000	           mov ecx, dword [rbx + 0x294] 	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40026a2	            0x85c9	                           test ecx, ecx	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40026a4	            0x750c	                           jne 0x40026b2	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40026a6	    0x8b8398020000	           mov eax, dword [rbx + 0x298] 	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40026ac	    0x898394020000	            mov dword [rbx + 0x294], eax	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40026b2	    0x488bbbf80100	           mov rdi, qword [rbx + 0x1f8] 	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x40026b9	      0xe800000000	                          call 0x40026be	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x40026be	    0x488bbb000200	           mov rdi, qword [rbx + 0x200] 	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40026c5	          0x803f00	                       cmp byte [rdi], 0	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x40026c8	        0x490f44fd	                          cmove rdi, r13	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x40026cc	      0xe800000000	                          call 0x40026d1	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x40026d1	    0x488983f80100	            mov qword [rbx + 0x1f8], rax	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x40026d8	    0x486305000000	         movsxd rax, dword [0x040026df] 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40026df	    0x483983c80100	           cmp qword [rbx + 0x1c8], rax 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40026e6	     0xf8494000000	                            je 0x4002780	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x40026ec	    0x4883bbe80100	              cmp qword [rbx + 0x1e8], 0	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40026f4	            0x750e	                           jne 0x4002704	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40026f6	    0x486383f00100	        movsxd rax, dword [rbx + 0x1f0] 	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x40026fd	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x4002704	    0x8b93d4010000	           mov edx, dword [rbx + 0x1d4] 	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400270a	            0x85d2	                           test edx, edx	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400270c	            0x7552	                           jne 0x4002760	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400270e	          0x4889df	                            mov rdi, rbx	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x4002711	      0xe800000000	                          call 0x4002716	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x4002716	          0x4889df	                            mov rdi, rbx	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x4002719	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1259	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4002723	      0xe800000000	                          call 0x4002728	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x4002728	          0x4889df	                            mov rdi, rbx	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x400272b	      0xe800000000	                          call 0x4002730	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x4002730	     0xbabc0010000	             or ebp, dword [rbx + 0x1c0]	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x4002736	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1221	diff.c	FUNCTION_22
0x400273a	      0x418b542434	            mov edx, dword [r12 + 0x34] 	      1221	diff.c	FUNCTION_22
0x400273f	          0x4885db	                           test rbx, rbx	      1221	diff.c	FUNCTION_22
0x4002742	     0xf85fcfeffff	                           jne 0x4002644	      1221	diff.c	FUNCTION_22
0x4002748	            0x85d2	                           test edx, edx	      1272	diff.c	FUNCTION_22	IF_1
0x400274a	     0xf8580000000	                           jne 0x40027d0	      1272	diff.c	FUNCTION_22	IF_1
0x4002750	            0x85ed	                           test ebp, ebp	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x4002752	            0x744c	                            je 0x40027a0	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x4002754	        0x4883c408	                              add rsp, 8	      1278	diff.c	FUNCTION_22
0x4002758	              0x5b	                                 pop rbx	      1278	diff.c	FUNCTION_22
0x4002759	              0x5d	                                 pop rbp	      1278	diff.c	FUNCTION_22
0x400275a	            0x415c	                                 pop r12	      1278	diff.c	FUNCTION_22
0x400275c	            0x415d	                                 pop r13	      1278	diff.c	FUNCTION_22
0x400275e	              0xc3	                                     ret	      1278	diff.c	FUNCTION_22
0x400275f	              0x90	                                     nop	      1278	diff.c	FUNCTION_22
0x4002760	          0x4889df	                            mov rdi, rbx	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4002763	      0xe800000000	                          call 0x4002768	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4002768	            0x31d2	                            xor edx, edx	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400276a	            0x85c0	                           test eax, eax	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400276c	            0x7506	                           jne 0x4002774	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400276e	    0x8b93d8010000	           mov edx, dword [rbx + 0x1d8] 	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4002774	    0x8993d4010000	            mov dword [rbx + 0x1d4], edx	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x400277a	            0xeb92	                           jmp 0x400270e	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x400277c	         0xf1f4000	                         nop dword [rax]	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4002780	    0x486383d00100	        movsxd rax, dword [rbx + 0x1d0] 	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002787	    0x488983c80100	            mov qword [rbx + 0x1c8], rax	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x400278e	      0xe959ffffff	                           jmp 0x40026ec	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4002793	          0x8b4734	            mov eax, dword [rdi + 0x34] 	      1272	diff.c	FUNCTION_22	IF_1
0x4002796	            0x85c0	                           test eax, eax	      1272	diff.c	FUNCTION_22	IF_1
0x4002798	            0x7530	                           jne 0x40027ca	      1272	diff.c	FUNCTION_22	IF_1
0x400279a	    0x660f1f440000	                    nop word [rax + rax]	      1272	diff.c	FUNCTION_22	IF_1
0x40027a0	    0x488b3d000000	            mov rdi, qword [0x040027a7] 	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40027a7	      0xbe68000000	                           mov esi, 0x68	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40027ac	      0xe800000000	                          call 0x40027b1	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40027b1	          0x4885c0	                           test rax, rax	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40027b4	            0x749e	                            je 0x4002754	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40027b6	        0x4883c408	                              add rsp, 8	      1278	diff.c	FUNCTION_22
0x40027ba	      0xbf00000000	                              mov edi, 0	      1277	diff.c	FUNCTION_22	CALL_3
0x40027bf	              0x5b	                                 pop rbx	      1278	diff.c	FUNCTION_22
0x40027c0	              0x5d	                                 pop rbp	      1278	diff.c	FUNCTION_22
0x40027c1	            0x415c	                                 pop r12	      1278	diff.c	FUNCTION_22
0x40027c3	            0x415d	                                 pop r13	      1278	diff.c	FUNCTION_22
0x40027c5	      0xe900000000	                           jmp 0x40027ca	      1277	diff.c	FUNCTION_22	CALL_3
0x40027ca	            0x31ed	                            xor ebp, ebp	      1219	diff.c	FUNCTION_22
0x40027cc	         0xf1f4000	                         nop dword [rax]	      1219	diff.c	FUNCTION_22
0x40027d0	            0x31db	                            xor ebx, ebx	      1219	diff.c	FUNCTION_22
0x40027d2	    0x660f1f440000	                    nop word [rax + rax]	      1219	diff.c	FUNCTION_22
0x40027d8	    0x488b05000000	            mov rax, qword [0x040027df] 	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40027df	          0x4863d3	                         movsxd rdx, ebx	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40027e2	        0x488d14d0	                  lea rdx, [rax + rdx*8]	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40027e6	      0x48837a6000	               cmp qword [rdx + 0x60], 0	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40027eb	            0x741c	                            je 0x4002809	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40027ed	    0x48c742600000	               mov qword [rdx + 0x60], 0	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x40027f5	      0xbf01000000	                              mov edi, 1	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x40027fa	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       154	diff.c	FUNCTION_4	FOR_1	IF_1
0x4002804	      0xe8a7dfffff	                    call sym.diff_redraw	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4002809	          0x83c301	                              add ebx, 1	       150	diff.c	FUNCTION_4	FOR_1
0x400280c	          0x83fb08	                              cmp ebx, 8	       150	diff.c	FUNCTION_4	FOR_1
0x400280f	            0x75c7	                           jne 0x40027d8	       150	diff.c	FUNCTION_4	FOR_1
0x4002811	      0xe93affffff	                           jmp 0x4002750	       150	diff.c	FUNCTION_4	FOR_1
ex_diffsplit	DO,0:WHILE,0:IF,4:CALL,11:ELSE,0:functions,0:SWITCH,0:FOR,0	69
0x40024b0	              0x55	                                push rbp	      1080	diff.c	FUNCTION_18
0x40024b1	              0x53	                                push rbx	      1080	diff.c	FUNCTION_18
0x40024b2	          0x4889fd	                            mov rbp, rdi	      1080	diff.c	FUNCTION_18
0x40024b5	        0x4883ec28	                           sub rsp, 0x28	      1080	diff.c	FUNCTION_18
0x40024b9	    0x488b35000000	            mov rsi, qword [0x040024c0] 	      1084	diff.c	FUNCTION_18	CALL_1
0x40024c0	    0x488b1d000000	            mov rbx, qword [0x040024c7] 	      1081	diff.c	FUNCTION_18
0x40024c7	          0x4889e7	                            mov rdi, rsp	      1084	diff.c	FUNCTION_18	CALL_1
0x40024ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      1080	diff.c	FUNCTION_18
0x40024d3	      0x4889442418	             mov qword [rsp + 0x18], rax	      1080	diff.c	FUNCTION_18
0x40024d8	            0x31c0	                            xor eax, eax	      1080	diff.c	FUNCTION_18
0x40024da	      0xe800000000	                          call 0x40024df	      1084	diff.c	FUNCTION_18	CALL_1
0x40024df	    0xc70500000000	               mov dword [0x040024e9], 1	      1086	diff.c	FUNCTION_18
0x40024e9	      0xe800000000	                          call 0x40024ee	      1089	diff.c	FUNCTION_18	CALL_2
0x40024ee	    0x488b3d000000	            mov rdi, qword [0x040024f5] 	      1090	diff.c	FUNCTION_18	CALL_3
0x40024f5	      0xe800000000	                          call 0x40024fa	      1090	diff.c	FUNCTION_18	CALL_3
0x40024fa	    0x8b3500000000	            mov esi, dword [0x04002500] 	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4002500	      0xb802000000	                              mov eax, 2	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4002505	    0xc70500000000	               mov dword [0x0400250f], 0	      1093	diff.c	FUNCTION_18
0x400250f	          0x83e610	                           and esi, 0x10	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4002512	           0xf45f0	                         cmovne esi, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4002515	            0x31ff	                            xor edi, edi	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4002517	      0xe800000000	                          call 0x400251c	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x400251c	            0x85c0	                           test eax, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x400251e	            0x7520	                           jne 0x4002540	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4002520	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1120	diff.c	FUNCTION_18
0x4002525	    0x644833042528	                xor rax, qword fs:[0x28]	      1120	diff.c	FUNCTION_18
0x400252e	     0xf85ad000000	                           jne 0x40025e1	      1120	diff.c	FUNCTION_18
0x4002534	        0x4883c428	                           add rsp, 0x28	      1120	diff.c	FUNCTION_18
0x4002538	              0x5b	                                 pop rbx	      1120	diff.c	FUNCTION_18
0x4002539	              0x5d	                                 pop rbp	      1120	diff.c	FUNCTION_18
0x400253a	              0xc3	                                     ret	      1120	diff.c	FUNCTION_18
0x400253b	       0xf1f440000	                   nop dword [rax + rax]	      1120	diff.c	FUNCTION_18
0x4002540	    0x488b05000000	            mov rax, qword [0x04002547] 	      1099	diff.c	FUNCTION_18	IF_1
0x4002547	    0xc745209a0100	          mov dword [rbp + 0x20], 0x19a 	      1098	diff.c	FUNCTION_18	IF_1
0x400254e	          0x4889ef	                            mov rdi, rbp	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4002551	          0x4889de	                            mov rsi, rbx	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4002554	    0xc780c0010000	              mov dword [rax + 0x1c0], 1	      1099	diff.c	FUNCTION_18	IF_1
0x400255e	      0xe800000000	                          call 0x4002563	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4002563	    0x488b3d000000	            mov rdi, qword [0x0400256a] 	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x400256a	          0x4839fb	                            cmp rbx, rdi	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x400256d	            0x74b1	                            je 0x4002520	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x400256f	      0xbe01000000	                              mov esi, 1	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4002574	      0xe800000000	                          call 0x4002579	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4002579	          0x4889df	                            mov rdi, rbx	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x400257c	      0xe800000000	                          call 0x4002581	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4002581	            0x85c0	                           test eax, eax	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4002583	            0x751b	                           jne 0x40025a0	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4002585	    0x488b3d000000	            mov rdi, qword [0x0400258c] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x400258c	    0x8bb7a0000000	            mov esi, dword [rdi + 0xa0] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4002592	      0xe800000000	                          call 0x4002597	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4002597	            0xeb87	                           jmp 0x4002520	      1120	diff.c	FUNCTION_18
0x4002599	     0xf1f80000000	                         nop dword [rax]	      1120	diff.c	FUNCTION_18
0x40025a0	      0xbe01000000	                              mov esi, 1	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x40025a5	          0x4889df	                            mov rdi, rbx	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x40025a8	      0xe800000000	                          call 0x40025ad	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x40025ad	          0x4889e7	                            mov rdi, rsp	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x40025b0	      0xe800000000	                          call 0x40025b5	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x40025b5	            0x85c0	                           test eax, eax	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x40025b7	            0x74cc	                            je 0x4002585	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x40025b9	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      2638	diff.c	FUNCTION_43	CALL_1
0x40025bd	        0x488b3c24	                    mov rdi, qword [rsp]	      2638	diff.c	FUNCTION_43	CALL_1
0x40025c1	    0x488b2d000000	            mov rbp, qword [0x040025c8] 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40025c8	      0xe863fdffff	call sym.diff_get_corresponding_line_int	      2638	diff.c	FUNCTION_43	CALL_1
0x40025cd	    0x488b15000000	            mov rdx, qword [0x040025d4] 	      2641	diff.c	FUNCTION_43	IF_1
0x40025d4	          0x483902	                    cmp qword [rdx], rax	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40025d7	        0x480f4e02	                 cmovle rax, qword [rdx]	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40025db	        0x48894538	            mov qword [rbp + 0x38], rax 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40025df	            0xeba4	                           jmp 0x4002585	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40025e1	      0xe800000000	                          call 0x40025e6	      1120	diff.c	FUNCTION_18
diff_move_to	DO,0:WHILE,1:IF,8:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,1	98
0x4003dd0	            0x4154	                                push r12	      2521	diff.c	FUNCTION_41
0x4003dd2	              0x55	                                push rbp	      2521	diff.c	FUNCTION_41
0x4003dd3	            0x31c0	                            xor eax, eax	      2526	diff.c	FUNCTION_41	CALL_1
0x4003dd5	              0x53	                                push rbx	      2521	diff.c	FUNCTION_41
0x4003dd6	            0x89fb	                            mov ebx, edi	      2521	diff.c	FUNCTION_41
0x4003dd8	        0x4883ec10	                           sub rsp, 0x10	      2521	diff.c	FUNCTION_41
0x4003ddc	    0x4c8b05000000	              mov r8, qword [0x04003de3]	      2526	diff.c	FUNCTION_41	CALL_1
0x4003de3	    0x488b15000000	            mov rdx, qword [0x04003dea] 	      2526	diff.c	FUNCTION_41	CALL_1
0x4003dea	    0x660f1f440000	                    nop word [rax + rax]	      2526	diff.c	FUNCTION_41	CALL_1
0x4003df0	      0x4c3b44c260	     cmp r8, qword [rdx + rax*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003df5	          0x4189c4	                           mov r12d, eax	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003df8	            0x7415	                            je 0x4003e0f	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003dfa	        0x4883c001	                              add rax, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003dfe	        0x4883f808	                              cmp rax, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4003e02	            0x75ec	                           jne 0x4003df0	       168	diff.c	FUNCTION_5	FOR_1
0x4003e04	        0x4883c410	                           add rsp, 0x10	      2570	diff.c	FUNCTION_41
0x4003e08	            0x31c0	                            xor eax, eax	      2528	diff.c	FUNCTION_41	IF_1
0x4003e0a	              0x5b	                                 pop rbx	      2570	diff.c	FUNCTION_41
0x4003e0b	              0x5d	                                 pop rbp	      2570	diff.c	FUNCTION_41
0x4003e0c	            0x415c	                                 pop r12	      2570	diff.c	FUNCTION_41
0x4003e0e	              0xc3	                                     ret	      2570	diff.c	FUNCTION_41
0x4003e0f	        0x488b7a58	            mov rdi, qword [rdx + 0x58] 	      2527	diff.c	FUNCTION_41	IF_1
0x4003e13	          0x4885ff	                           test rdi, rdi	      2527	diff.c	FUNCTION_41	IF_1
0x4003e16	            0x74ec	                            je 0x4003e04	      2527	diff.c	FUNCTION_41	IF_1
0x4003e18	    0x488b05000000	            mov rax, qword [0x04003e1f] 	      2523	diff.c	FUNCTION_41
0x4003e1f	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      2523	diff.c	FUNCTION_41
0x4003e23	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	      2530	diff.c	FUNCTION_41	IF_2
0x4003e29	            0x85c0	                           test eax, eax	      2530	diff.c	FUNCTION_41	IF_2
0x4003e2b	          0x4989e9	                             mov r9, rbp	      2530	diff.c	FUNCTION_41	IF_2
0x4003e2e	     0xf85cb000000	                           jne 0x4003eff	      2530	diff.c	FUNCTION_41	IF_2
0x4003e34	          0x4963cc	                        movsxd rcx, r12d	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003e37	    0x660f1f840000	                    nop word [rax + rax]	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003e40	        0x4883ee01	                              sub rsi, 1	      2536	diff.c	FUNCTION_41	WHILE_1
0x4003e44	            0x783f	                            js 0x4003e85	      2536	diff.c	FUNCTION_41	WHILE_1
0x4003e46	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003e49	     0xf8491000000	                            je 0x4003ee0	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003e4f	          0x83fb01	                              cmp ebx, 1	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e52	          0x4889f8	                            mov rax, rdi	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e55	            0x741b	                            je 0x4003e72	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e57	    0x660f1f840000	                    nop word [rax + rax]	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e60	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2547	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e63	            0x7465	                            je 0x4003eca	      2547	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e65	          0x488b00	                    mov rax, qword [rax]	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x4003e68	          0x4885c0	                           test rax, rax	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x4003e6b	            0x74d3	                            je 0x4003e40	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x4003e6d	          0x83fb01	                              cmp ebx, 1	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e70	            0x75ee	                           jne 0x4003e60	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e72	      0x488b54c808	       mov rdx, qword [rax + rcx*8 + 8] 	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e77	          0x4839d5	                            cmp rbp, rdx	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e7a	            0x7de9	                           jge 0x4003e65	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e7c	        0x4883ee01	                              sub rsi, 1	      2536	diff.c	FUNCTION_41	WHILE_1
0x4003e80	          0x4889d5	                            mov rbp, rdx	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003e83	            0x79c1	                           jns 0x4003e46	      2536	diff.c	FUNCTION_41	WHILE_1
0x4003e85	          0x498b00	                     mov rax, qword [r8]	      2558	diff.c	FUNCTION_41	IF_7
0x4003e88	          0x4839c5	                            cmp rbp, rax	      2558	diff.c	FUNCTION_41	IF_7
0x4003e8b	        0x480f4fe8	                          cmovg rbp, rax	      2558	diff.c	FUNCTION_41	IF_7
0x4003e8f	          0x4939e9	                             cmp r9, rbp	      2562	diff.c	FUNCTION_41	IF_8
0x4003e92	     0xf846cffffff	                            je 0x4003e04	      2562	diff.c	FUNCTION_41	IF_8
0x4003e98	      0xe800000000	                          call 0x4003e9d	      2565	diff.c	FUNCTION_41	CALL_3
0x4003e9d	    0x488b05000000	            mov rax, qword [0x04003ea4] 	      2566	diff.c	FUNCTION_41
0x4003ea4	        0x48896838	             mov qword [rax + 0x38], rbp	      2566	diff.c	FUNCTION_41
0x4003ea8	    0xc74040000000	               mov dword [rax + 0x40], 0	      2567	diff.c	FUNCTION_41
0x4003eaf	        0x4883c410	                           add rsp, 0x10	      2570	diff.c	FUNCTION_41
0x4003eb3	              0x5b	                                 pop rbx	      2570	diff.c	FUNCTION_41
0x4003eb4	      0xb801000000	                              mov eax, 1	      2569	diff.c	FUNCTION_41
0x4003eb9	              0x5d	                                 pop rbp	      2570	diff.c	FUNCTION_41
0x4003eba	            0x415c	                                 pop r12	      2570	diff.c	FUNCTION_41
0x4003ebc	              0xc3	                                     ret	      2570	diff.c	FUNCTION_41
0x4003ebd	           0xf1f00	                         nop dword [rax]	      2570	diff.c	FUNCTION_41
0x4003ec0	      0x483b6cca08	       cmp rbp, qword [rdx + rcx*8 + 8] 	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003ec5	            0x7e0b	                           jle 0x4003ed2	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003ec7	          0x4889d0	                            mov rax, rdx	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003eca	          0x488b10	                    mov rdx, qword [rax]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003ecd	          0x4885d2	                           test rdx, rdx	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003ed0	            0x75ee	                           jne 0x4003ec0	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003ed2	      0x488b6cc808	       mov rbp, qword [rax + rcx*8 + 8] 	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003ed7	      0xe964ffffff	                           jmp 0x4003e40	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003edc	         0xf1f4000	                         nop dword [rax]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4003ee0	      0x483b6ccf08	       cmp rbp, qword [rdi + rcx*8 + 8] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003ee5	     0xf8f64ffffff	                            jg 0x4003e4f	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4003eeb	          0x498b00	                     mov rax, qword [r8]	      2558	diff.c	FUNCTION_41	IF_7
0x4003eee	          0x4839c5	                            cmp rbp, rax	      2558	diff.c	FUNCTION_41	IF_7
0x4003ef1	        0x480f4fe8	                          cmovg rbp, rax	      2558	diff.c	FUNCTION_41	IF_7
0x4003ef5	          0x4939e9	                             cmp r9, rbp	      2562	diff.c	FUNCTION_41	IF_8
0x4003ef8	            0x759e	                           jne 0x4003e98	      2562	diff.c	FUNCTION_41	IF_8
0x4003efa	      0xe905ffffff	                           jmp 0x4003e04	      2562	diff.c	FUNCTION_41	IF_8
0x4003eff	            0x31ff	                            xor edi, edi	      2531	diff.c	FUNCTION_41	CALL_2
0x4003f01	      0x4889742408	                mov qword [rsp + 8], rsi	      2531	diff.c	FUNCTION_41	CALL_2
0x4003f06	      0xe800000000	                          call 0x4003f0b	      2531	diff.c	FUNCTION_41	CALL_2
0x4003f0b	    0x488b05000000	            mov rax, qword [0x04003f12] 	      2533	diff.c	FUNCTION_41	IF_3
0x4003f12	        0x488b7858	            mov rdi, qword [rax + 0x58] 	      2533	diff.c	FUNCTION_41	IF_3
0x4003f16	          0x4885ff	                           test rdi, rdi	      2533	diff.c	FUNCTION_41	IF_3
0x4003f19	     0xf84e5feffff	                            je 0x4003e04	      2533	diff.c	FUNCTION_41	IF_3
0x4003f1f	    0x488b05000000	            mov rax, qword [0x04003f26] 	      2533	diff.c	FUNCTION_41	IF_3
0x4003f26	    0x4c8b05000000	              mov r8, qword [0x04003f2d]	      2533	diff.c	FUNCTION_41	IF_3
0x4003f2d	      0x488b742408	                mov rsi, qword [rsp + 8]	      2533	diff.c	FUNCTION_41	IF_3
0x4003f32	        0x4c8b4838	              mov r9, qword [rax + 0x38]	      2533	diff.c	FUNCTION_41	IF_3
0x4003f36	      0xe9f9feffff	                           jmp 0x4003e34	      2533	diff.c	FUNCTION_41	IF_3
diff_redraw	DO,0:WHILE,0:IF,5:CALL,6:ELSE,1:functions,0:SWITCH,0:FOR,0	65
0x40007b0	              0x55	                                push rbp	       608	diff.c	FUNCTION_13
0x40007b1	              0x53	                                push rbx	       608	diff.c	FUNCTION_13
0x40007b2	        0x4883ec08	                              sub rsp, 8	       608	diff.c	FUNCTION_13
0x40007b6	    0x488b1d000000	            mov rbx, qword [0x040007bd] 	       612	diff.c	FUNCTION_13	CALL_1
0x40007bd	          0x4885db	                           test rbx, rbx	       612	diff.c	FUNCTION_13	CALL_1
0x40007c0	            0x7474	                            je 0x4000836	       612	diff.c	FUNCTION_13	CALL_1
0x40007c2	            0x89fd	                            mov ebp, edi	       612	diff.c	FUNCTION_13	CALL_1
0x40007c4	            0xeb13	                           jmp 0x40007d9	       612	diff.c	FUNCTION_13	CALL_1
0x40007c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       612	diff.c	FUNCTION_13	CALL_1
0x40007d0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       612	diff.c	FUNCTION_13	CALL_1
0x40007d4	          0x4885db	                           test rbx, rbx	       612	diff.c	FUNCTION_13	CALL_1
0x40007d7	            0x745d	                            je 0x4000836	       612	diff.c	FUNCTION_13	CALL_1
0x40007d9	    0x8b83c0010000	           mov eax, dword [rbx + 0x1c0] 	       613	diff.c	FUNCTION_13	IF_1
0x40007df	            0x85c0	                           test eax, eax	       613	diff.c	FUNCTION_13	IF_1
0x40007e1	            0x74ed	                            je 0x40007d0	       613	diff.c	FUNCTION_13	IF_1
0x40007e3	      0xbe23000000	                           mov esi, 0x23	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x40007e8	          0x4889df	                            mov rdi, rbx	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x40007eb	      0xe800000000	                          call 0x40007f0	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0x40007f0	            0x85ed	                           test ebp, ebp	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x40007f2	            0x757c	                           jne 0x4000870	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x40007f4	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x40007f8	          0x4889df	                            mov rdi, rbx	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x40007fb	      0xe800000000	                          call 0x4000800	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x4000800	    0x48391d000000	            cmp qword [0x04000807], rbx 	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000807	            0x7457	                            je 0x4000860	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000809	    0x8b9384000000	            mov edx, dword [rbx + 0x84] 	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x400080f	            0x85d2	                           test edx, edx	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000811	            0x7e4d	                           jle 0x4000860	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000813	            0x39c2	                            cmp edx, eax	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000815	            0x7f29	                            jg 0x4000840	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000817	            0x7d0a	                           jge 0x4000823	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x4000819	            0x85c0	                           test eax, eax	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x400081b	            0x7e06	                           jle 0x4000823	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x400081d	    0x898384000000	             mov dword [rbx + 0x84], eax	       628	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x4000823	            0x31f6	                            xor esi, esi	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x4000825	          0x4889df	                            mov rdi, rbx	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x4000828	      0xe800000000	                          call 0x400082d	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x400082d	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       612	diff.c	FUNCTION_13	CALL_1
0x4000831	          0x4885db	                           test rbx, rbx	       612	diff.c	FUNCTION_13	CALL_1
0x4000834	            0x75a3	                           jne 0x40007d9	       612	diff.c	FUNCTION_13	CALL_1
0x4000836	        0x4883c408	                              add rsp, 8	       632	diff.c	FUNCTION_13
0x400083a	              0x5b	                                 pop rbx	       632	diff.c	FUNCTION_13
0x400083b	              0x5d	                                 pop rbp	       632	diff.c	FUNCTION_13
0x400083c	              0xc3	                                     ret	       632	diff.c	FUNCTION_13
0x400083d	           0xf1f00	                         nop dword [rax]	       632	diff.c	FUNCTION_13
0x4000840	            0x85c0	                           test eax, eax	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000842	      0xba00000000	                              mov edx, 0	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000847	          0x4889df	                            mov rdi, rbx	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x400084a	           0xf48c2	                          cmovs eax, edx	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x400084d	            0x31f6	                            xor esi, esi	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x400084f	    0x898384000000	             mov dword [rbx + 0x84], eax	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x4000855	      0xe800000000	                          call 0x400085a	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x400085a	            0xebd1	                           jmp 0x400082d	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x400085c	         0xf1f4000	                         nop dword [rax]	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x4000860	            0x85c0	                           test eax, eax	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000862	     0xf8e68ffffff	                           jle 0x40007d0	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000868	    0x8b9384000000	            mov edx, dword [rbx + 0x84] 	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x400086e	            0xeba3	                           jmp 0x4000813	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x4000870	          0x4889df	                            mov rdi, rbx	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4000873	      0xe800000000	                          call 0x4000878	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4000878	            0x85c0	                           test eax, eax	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x400087a	     0xf8474ffffff	                            je 0x40007f4	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0x4000880	          0x4889df	                            mov rdi, rbx	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x4000883	      0xe800000000	                          call 0x4000888	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x4000888	      0xe967ffffff	                           jmp 0x40007f4	       618	diff.c	FUNCTION_13	IF_1	CALL_4
diffopt_horizontal	DO,0:WHILE,0:IF,0:CALL,0:ELSE,0:functions,0:SWITCH,0:FOR,0	4
0x4002d80	    0x8b0500000000	            mov eax, dword [0x04002d86] 	      1942	diff.c	FUNCTION_33
0x4002d86	          0xc1e803	                              shr eax, 3	      1942	diff.c	FUNCTION_33
0x4002d89	          0x83e001	                              and eax, 1	      1942	diff.c	FUNCTION_33
0x4002d8c	              0xc3	                                     ret	      1943	diff.c	FUNCTION_33
diffopt_changed	DO,0:WHILE,1:IF,12:CALL,15:ELSE,7:functions,0:SWITCH,0:FOR,0	167
0x4002af0	            0x4154	                                push r12	      1858	diff.c	FUNCTION_32
0x4002af2	              0x55	                                push rbp	      1858	diff.c	FUNCTION_32
0x4002af3	    0x41bc06000000	                             mov r12d, 6	      1860	diff.c	FUNCTION_32
0x4002af9	              0x53	                                push rbx	      1858	diff.c	FUNCTION_32
0x4002afa	      0xbd02000000	                              mov ebp, 2	      1862	diff.c	FUNCTION_32
0x4002aff	            0x31db	                            xor ebx, ebx	      1861	diff.c	FUNCTION_32
0x4002b01	        0x4883ec10	                           sub rsp, 0x10	      1858	diff.c	FUNCTION_32
0x4002b05	    0x488b15000000	            mov rdx, qword [0x04002b0c] 	      1865	diff.c	FUNCTION_32
0x4002b0c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1858	diff.c	FUNCTION_32
0x4002b15	      0x4889442408	                mov qword [rsp + 8], rax	      1858	diff.c	FUNCTION_32
0x4002b1a	            0x31c0	                            xor eax, eax	      1858	diff.c	FUNCTION_32
0x4002b1c	        0x48891424	                    mov qword [rsp], rdx	      1865	diff.c	FUNCTION_32
0x4002b20	        0x440fb602	                   movzx r8d, byte [rdx]	      1865	diff.c	FUNCTION_32
0x4002b24	         0xf1f4000	                         nop dword [rax]	      1865	diff.c	FUNCTION_32
0x4002b28	          0x4584c0	                           test r8b, r8b	      1866	diff.c	FUNCTION_32	WHILE_1
0x4002b2b	            0x7452	                            je 0x4002b7f	      1866	diff.c	FUNCTION_32	WHILE_1
0x4002b2d	      0xbf00000000	                              mov edi, 0	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4002b32	      0xb906000000	                              mov ecx, 6	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4002b37	          0x4889d6	                            mov rsi, rdx	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4002b3a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4002b3c	     0xf85ae000000	                           jne 0x4002bf0	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4002b42	        0x488d4206	                      lea rax, [rdx + 6]	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4002b46	          0x83cb01	                               or ebx, 1	      1871	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4002b49	        0x48890424	                    mov qword [rsp], rax	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4002b4d	      0x440fb64206	               movzx r8d, byte [rdx + 6]	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4002b52	          0x4889c2	                            mov rdx, rax	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4002b55	        0x4180f82c	                           cmp r8b, 0x2c	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002b59	            0x7409	                            je 0x4002b64	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002b5b	          0x4584c0	                           test r8b, r8b	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002b5e	     0xf855c010000	                           jne 0x4002cc0	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002b64	        0x4180f82c	                           cmp r8b, 0x2c	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002b68	            0x75be	                           jne 0x4002b28	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002b6a	        0x488d4201	                      lea rax, [rdx + 1]	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002b6e	        0x48890424	                    mov qword [rsp], rax	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002b72	      0x440fb64201	               movzx r8d, byte [rdx + 1]	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002b77	          0x4889c2	                            mov rdx, rax	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4002b7a	          0x4584c0	                           test r8b, r8b	      1866	diff.c	FUNCTION_32	WHILE_1
0x4002b7d	            0x75ae	                           jne 0x4002b2d	      1866	diff.c	FUNCTION_32	WHILE_1
0x4002b7f	            0x89d8	                            mov eax, ebx	      1915	diff.c	FUNCTION_32	IF_11
0x4002b81	          0x83e018	                           and eax, 0x18	      1915	diff.c	FUNCTION_32	IF_11
0x4002b84	          0x83f818	                           cmp eax, 0x18	      1915	diff.c	FUNCTION_32	IF_11
0x4002b87	     0xf8433010000	                            je 0x4002cc0	      1915	diff.c	FUNCTION_32	IF_11
0x4002b8d	    0x3b1d00000000	            cmp ebx, dword [0x04002b93] 	      1919	diff.c	FUNCTION_32	IF_12
0x4002b93	            0x7425	                            je 0x4002bba	      1919	diff.c	FUNCTION_32	IF_12
0x4002b95	    0x488b05000000	            mov rax, qword [0x04002b9c] 	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002b9c	          0x4885c0	                           test rax, rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002b9f	            0x7419	                            je 0x4002bba	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002ba1	     0xf1f80000000	                         nop dword [rax]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002ba8	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      1921	diff.c	FUNCTION_32	IF_12
0x4002bb2	          0x488b00	                    mov rax, qword [rax]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002bb5	          0x4885c0	                           test rax, rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002bb8	            0x75ee	                           jne 0x4002ba8	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4002bba	      0xbf01000000	                              mov edi, 1	      1927	diff.c	FUNCTION_32	CALL_14
0x4002bbf	    0x891d00000000	            mov dword [0x04002bc5], ebx 	      1923	diff.c	FUNCTION_32
0x4002bc5	    0x448925000000	           mov dword [0x04002bcc], r12d 	      1924	diff.c	FUNCTION_32
0x4002bcc	    0x892d00000000	            mov dword [0x04002bd2], ebp 	      1925	diff.c	FUNCTION_32
0x4002bd2	      0xe8d9dbffff	                    call sym.diff_redraw	      1927	diff.c	FUNCTION_32	CALL_14
0x4002bd7	            0x31f6	                            xor esi, esi	      1931	diff.c	FUNCTION_32	CALL_15
0x4002bd9	            0x31ff	                            xor edi, edi	      1931	diff.c	FUNCTION_32	CALL_15
0x4002bdb	      0xe800000000	                          call 0x4002be0	      1931	diff.c	FUNCTION_32	CALL_15
0x4002be0	      0xb801000000	                              mov eax, 1	      1933	diff.c	FUNCTION_32
0x4002be5	      0xe9d8000000	                           jmp 0x4002cc2	      1933	diff.c	FUNCTION_32
0x4002bea	    0x660f1f440000	                    nop word [rax + rax]	      1933	diff.c	FUNCTION_32
0x4002bf0	      0xbf00000000	                              mov edi, 0	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002bf5	      0xb908000000	                              mov ecx, 8	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002bfa	          0x4889d6	                            mov rsi, rdx	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002bfd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002bff	            0x7510	                           jne 0x4002c11	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002c01	         0xfb64208	               movzx eax, byte [rdx + 8]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002c05	          0x83e830	                           sub eax, 0x30	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002c08	          0x83f809	                              cmp eax, 9	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002c0b	     0xf868f000000	                           jbe 0x4002ca0	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4002c11	      0xbf00000000	                              mov edi, 0	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002c16	      0xb905000000	                              mov ecx, 5	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002c1b	          0x4889d6	                            mov rsi, rdx	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002c1e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002c20	            0x751e	                           jne 0x4002c40	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4002c22	        0x488d4205	                      lea rax, [rdx + 5]	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002c26	          0x83cb02	                               or ebx, 2	      1881	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002c29	        0x48890424	                    mov qword [rsp], rax	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002c2d	      0x440fb64205	               movzx r8d, byte [rdx + 5]	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002c32	          0x4889c2	                            mov rdx, rax	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002c35	      0xe91bffffff	                           jmp 0x4002b55	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002c3a	    0x660f1f440000	                    nop word [rax + rax]	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4002c40	      0xbf00000000	                              mov edi, 0	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4002c45	      0xb906000000	                              mov ecx, 6	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4002c4a	          0x4889d6	                            mov rsi, rdx	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4002c4d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4002c4f	            0x751f	                           jne 0x4002c70	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4002c51	        0x488d4206	                      lea rax, [rdx + 6]	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002c55	          0x83cb04	                               or ebx, 4	      1886	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002c58	        0x48890424	                    mov qword [rsp], rax	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002c5c	      0x440fb64206	               movzx r8d, byte [rdx + 6]	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002c61	          0x4889c2	                            mov rdx, rax	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002c64	      0xe9ecfeffff	                           jmp 0x4002b55	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002c69	     0xf1f80000000	                         nop dword [rax]	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4002c70	      0xbf00000000	                              mov edi, 0	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4002c75	      0xb90a000000	                            mov ecx, 0xa	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4002c7a	          0x4889d6	                            mov rsi, rdx	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4002c7d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4002c7f	            0x755f	                           jne 0x4002ce0	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4002c81	        0x488d420a	                    lea rax, [rdx + 0xa]	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4002c85	      0x440fb6420a	            movzx r8d, byte [rdx + 0xa] 	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4002c8a	          0x83cb08	                               or ebx, 8	      1891	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4002c8d	        0x48890424	                    mov qword [rsp], rax	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4002c91	          0x4889c2	                            mov rdx, rax	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4002c94	      0xe9bcfeffff	                           jmp 0x4002b55	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4002c99	     0xf1f80000000	                         nop dword [rax]	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4002ca0	        0x4883c208	                              add rdx, 8	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x4002ca4	          0x4889e7	                            mov rdi, rsp	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002ca7	        0x48891424	                    mov qword [rsp], rdx	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x4002cab	      0xe800000000	                          call 0x4002cb0	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002cb0	        0x488b1424	                    mov rdx, qword [rsp]	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002cb4	          0x4189c4	                           mov r12d, eax	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002cb7	        0x440fb602	                   movzx r8d, byte [rdx]	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002cbb	      0xe995feffff	                           jmp 0x4002b55	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4002cc0	            0x31c0	                            xor eax, eax	      1909	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4002cc2	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1934	diff.c	FUNCTION_32
0x4002cc7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1934	diff.c	FUNCTION_32
0x4002cd0	     0xf85a3000000	                           jne 0x4002d79	      1934	diff.c	FUNCTION_32
0x4002cd6	        0x4883c410	                           add rsp, 0x10	      1934	diff.c	FUNCTION_32
0x4002cda	              0x5b	                                 pop rbx	      1934	diff.c	FUNCTION_32
0x4002cdb	              0x5d	                                 pop rbp	      1934	diff.c	FUNCTION_32
0x4002cdc	            0x415c	                                 pop r12	      1934	diff.c	FUNCTION_32
0x4002cde	              0xc3	                                     ret	      1934	diff.c	FUNCTION_32
0x4002cdf	              0x90	                                     nop	      1934	diff.c	FUNCTION_32
0x4002ce0	      0xbf00000000	                              mov edi, 0	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4002ce5	      0xb908000000	                              mov ecx, 8	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4002cea	          0x4889d6	                            mov rsi, rdx	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4002ced	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4002cef	            0x751f	                           jne 0x4002d10	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4002cf1	        0x488d4208	                      lea rax, [rdx + 8]	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4002cf5	      0x440fb64208	               movzx r8d, byte [rdx + 8]	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4002cfa	          0x83cb10	                            or ebx, 0x10	      1896	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4002cfd	        0x48890424	                    mov qword [rsp], rax	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4002d01	          0x4889c2	                            mov rdx, rax	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4002d04	      0xe94cfeffff	                           jmp 0x4002b55	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4002d09	     0xf1f80000000	                         nop dword [rax]	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4002d10	      0xbf00000000	                              mov edi, 0	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d15	      0xb90b000000	                            mov ecx, 0xb	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d1a	          0x4889d6	                            mov rsi, rdx	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d1d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d1f	            0x750c	                           jne 0x4002d2d	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d21	         0xfb6420b	            movzx eax, byte [rdx + 0xb] 	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d25	          0x83e830	                           sub eax, 0x30	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d28	          0x83f809	                              cmp eax, 9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d2b	            0x762d	                           jbe 0x4002d5a	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4002d2d	      0xbf00000000	                              mov edi, 0	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002d32	      0xb909000000	                              mov ecx, 9	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002d37	          0x4889d6	                            mov rsi, rdx	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002d3a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002d3c	     0xf8513feffff	                           jne 0x4002b55	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4002d42	        0x488d4209	                      lea rax, [rdx + 9]	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4002d46	      0x440fb64209	               movzx r8d, byte [rdx + 9]	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4002d4b	          0x83cb20	                            or ebx, 0x20	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4002d4e	        0x48890424	                    mov qword [rsp], rax	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4002d52	          0x4889c2	                            mov rdx, rax	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4002d55	      0xe9fbfdffff	                           jmp 0x4002b55	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4002d5a	        0x4883c20b	                            add rdx, 0xb	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x4002d5e	          0x4889e7	                            mov rdi, rsp	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002d61	        0x48891424	                    mov qword [rsp], rdx	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x4002d65	      0xe800000000	                          call 0x4002d6a	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002d6a	        0x488b1424	                    mov rdx, qword [rsp]	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002d6e	            0x89c5	                            mov ebp, eax	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002d70	        0x440fb602	                   movzx r8d, byte [rdx]	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002d74	      0xe9dcfdffff	                           jmp 0x4002b55	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4002d79	      0xe800000000	                          call 0x4002d7e	      1934	diff.c	FUNCTION_32
diff_lnum_win	DO,0:WHILE,0:IF,6:CALL,3:ELSE,0:functions,0:SWITCH,0:FOR,1	80
0x4003f60	    0x488b0d000000	            mov rcx, qword [0x04003f67] 	      2658	diff.c	FUNCTION_44	CALL_1
0x4003f67	    0x4c8b0d000000	              mov r9, qword [0x04003f6e]	      2658	diff.c	FUNCTION_44	CALL_1
0x4003f6e	            0x31d2	                            xor edx, edx	      2658	diff.c	FUNCTION_44	CALL_1
0x4003f70	            0x4154	                                push r12	      2652	diff.c	FUNCTION_44
0x4003f72	              0x55	                                push rbp	      2652	diff.c	FUNCTION_44
0x4003f73	              0x53	                                push rbx	      2652	diff.c	FUNCTION_44
0x4003f74	         0xf1f4000	                         nop dword [rax]	      2652	diff.c	FUNCTION_44
0x4003f78	      0x493b4cd160	     cmp rcx, qword [r9 + rdx*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003f7d	          0x4863ea	                         movsxd rbp, edx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003f80	            0x7416	                            je 0x4003f98	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003f82	        0x4883c201	                              add rdx, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003f86	        0x4883fa08	                              cmp rdx, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4003f8a	            0x75ec	                           jne 0x4003f78	       168	diff.c	FUNCTION_5	FOR_1
0x4003f8c	              0x5b	                                 pop rbx	      2684	diff.c	FUNCTION_44
0x4003f8d	            0x31c0	                            xor eax, eax	      2660	diff.c	FUNCTION_44	IF_1
0x4003f8f	              0x5d	                                 pop rbp	      2684	diff.c	FUNCTION_44
0x4003f90	            0x415c	                                 pop r12	      2684	diff.c	FUNCTION_44
0x4003f92	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
0x4003f93	       0xf1f440000	                   nop dword [rax + rax]	      2684	diff.c	FUNCTION_44
0x4003f98	    0x418b81a00000	              mov eax, dword [r9 + 0xa0]	      2662	diff.c	FUNCTION_44	IF_2
0x4003f9f	          0x4989f4	                            mov r12, rsi	      2662	diff.c	FUNCTION_44	IF_2
0x4003fa2	          0x4889fb	                            mov rbx, rdi	      2662	diff.c	FUNCTION_44	IF_2
0x4003fa5	            0x85c0	                           test eax, eax	      2662	diff.c	FUNCTION_44	IF_2
0x4003fa7	     0xf85b3000000	                           jne 0x4004060	      2662	diff.c	FUNCTION_44	IF_2
0x4003fad	        0x498b5158	              mov rdx, qword [r9 + 0x58]	      2666	diff.c	FUNCTION_44	FOR_1
0x4003fb1	          0x4885d2	                           test rdx, rdx	      2666	diff.c	FUNCTION_44	FOR_1
0x4003fb4	            0x7431	                            je 0x4003fe7	      2666	diff.c	FUNCTION_44	FOR_1
0x4003fb6	    0x4c8d04ed0000	                         lea r8, [rbp*8]	      2666	diff.c	FUNCTION_44	FOR_1
0x4003fbe	      0x4a8b440248	       mov rax, qword [rdx + r8 + 0x48] 	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fc3	      0x4a03440208	           add rax, qword [rdx + r8 + 8]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fc8	          0x4839c3	                            cmp rbx, rax	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fcb	            0x7f12	                            jg 0x4003fdf	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fcd	            0xeb39	                           jmp 0x4004008	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fcf	              0x90	                                     nop	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fd0	      0x4a8b4c0208	          mov rcx, qword [rdx + r8 + 8] 	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fd5	      0x4a034c0248	        add rcx, qword [rdx + r8 + 0x48]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fda	          0x4839d9	                            cmp rcx, rbx	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fdd	            0x7d29	                           jge 0x4004008	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4003fdf	          0x488b12	                    mov rdx, qword [rdx]	      2666	diff.c	FUNCTION_44	FOR_1
0x4003fe2	          0x4885d2	                           test rdx, rdx	      2666	diff.c	FUNCTION_44	FOR_1
0x4003fe5	            0x75e9	                           jne 0x4003fd0	      2666	diff.c	FUNCTION_44	FOR_1
0x4003fe7	    0x488b15000000	            mov rdx, qword [0x04003fee] 	      2672	diff.c	FUNCTION_44	IF_4
0x4003fee	      0x498b442408	                mov rax, qword [r12 + 8]	      2672	diff.c	FUNCTION_44	IF_4
0x4003ff3	          0x482b1a	                    sub rbx, qword [rdx]	      2672	diff.c	FUNCTION_44	IF_4
0x4003ff6	          0x480318	                    add rbx, qword [rax]	      2672	diff.c	FUNCTION_44	IF_4
0x4003ff9	          0x4889d8	                            mov rax, rbx	      2672	diff.c	FUNCTION_44	IF_4
0x4003ffc	              0x5b	                                 pop rbx	      2684	diff.c	FUNCTION_44
0x4003ffd	              0x5d	                                 pop rbp	      2684	diff.c	FUNCTION_44
0x4003ffe	            0x415c	                                 pop r12	      2684	diff.c	FUNCTION_44
0x4004000	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
0x4004001	     0xf1f80000000	                         nop dword [rax]	      2684	diff.c	FUNCTION_44
0x4004008	            0x31c9	                            xor ecx, ecx	      2676	diff.c	FUNCTION_44	CALL_3
0x400400a	      0x498b742408	                mov rsi, qword [r12 + 8]	      2676	diff.c	FUNCTION_44	CALL_3
0x400400f	      0x493b74c960	     cmp rsi, qword [r9 + rcx*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004014	          0x4863c1	                         movsxd rax, ecx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004017	            0x741f	                            je 0x4004038	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004019	     0xf1f80000000	                         nop dword [rax]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004020	        0x4883c101	                              add rcx, 1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004024	        0x4883f908	                              cmp rcx, 8	       168	diff.c	FUNCTION_5	FOR_1
0x4004028	     0xf845effffff	                            je 0x4003f8c	       168	diff.c	FUNCTION_5	FOR_1
0x400402e	      0x493b74c960	     cmp rsi, qword [r9 + rcx*8 + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004033	          0x4863c1	                         movsxd rax, ecx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004036	            0x75e8	                           jne 0x4004020	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004038	        0x488d0cc2	                  lea rcx, [rdx + rax*8]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400403c	        0x488b4108	                mov rax, qword [rcx + 8]	      2680	diff.c	FUNCTION_44
0x4004040	          0x4889c7	                            mov rdi, rax	      2680	diff.c	FUNCTION_44
0x4004043	      0x482b7cea08	        sub rdi, qword [rdx + rbp*8 + 8]	      2680	diff.c	FUNCTION_44
0x4004048	        0x48034148	             add rax, qword [rcx + 0x48]	      2680	diff.c	FUNCTION_44
0x400404c	          0x4801fb	                            add rbx, rdi	      2680	diff.c	FUNCTION_44
0x400404f	          0x4839c3	                            cmp rbx, rax	      2680	diff.c	FUNCTION_44
0x4004052	        0x480f4ec3	                         cmovle rax, rbx	      2680	diff.c	FUNCTION_44
0x4004056	              0x5b	                                 pop rbx	      2684	diff.c	FUNCTION_44
0x4004057	              0x5d	                                 pop rbp	      2684	diff.c	FUNCTION_44
0x4004058	            0x415c	                                 pop r12	      2684	diff.c	FUNCTION_44
0x400405a	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
0x400405b	       0xf1f440000	                   nop dword [rax + rax]	      2684	diff.c	FUNCTION_44
0x4004060	            0x31ff	                            xor edi, edi	      2663	diff.c	FUNCTION_44	CALL_2
0x4004062	      0xe800000000	                          call 0x4004067	      2663	diff.c	FUNCTION_44	CALL_2
0x4004067	    0x4c8b0d000000	              mov r9, qword [0x0400406e]	      2663	diff.c	FUNCTION_44	CALL_2
0x400406e	      0xe93affffff	                           jmp 0x4003fad	      2663	diff.c	FUNCTION_44	CALL_2
diff_buf_delete	DO,0:WHILE,0:IF,0:CALL,0:ELSE,0:functions,1:SWITCH,0:FOR,0	34
0x4000890	              0x55	                                push rbp	        65	diff.c	FUNCTION_1
0x4000891	              0x53	                                push rbx	        65	diff.c	FUNCTION_1
0x4000892	        0x4883ec08	                              sub rsp, 8	        65	diff.c	FUNCTION_1
0x4000896	    0x488b1d000000	            mov rbx, qword [0x0400089d] 	        69	diff.c	FUNCTION_1
0x400089d	          0x4885db	                           test rbx, rbx	        69	diff.c	FUNCTION_1
0x40008a0	            0x742a	                            je 0x40008cc	        69	diff.c	FUNCTION_1
0x40008a2	          0x4889fd	                            mov rbp, rdi	        69	diff.c	FUNCTION_1
0x40008a5	           0xf1f00	                         nop dword [rax]	        69	diff.c	FUNCTION_1
0x40008a8	            0x31c0	                            xor eax, eax	        65	diff.c	FUNCTION_1
0x40008aa	    0x660f1f440000	                    nop word [rax + rax]	        65	diff.c	FUNCTION_1
0x40008b0	      0x483b6cc360	    cmp rbp, qword [rbx + rax*8 + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40008b5	          0x4863d0	                         movsxd rdx, eax	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40008b8	            0x741e	                            je 0x40008d8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40008ba	        0x4883c001	                              add rax, 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40008be	        0x4883f808	                              cmp rax, 8	       183	diff.c	FUNCTION_6	FOR_1
0x40008c2	            0x75ec	                           jne 0x40008b0	       183	diff.c	FUNCTION_6	FOR_1
0x40008c4	          0x488b1b	                    mov rbx, qword [rbx]	        69	diff.c	FUNCTION_1
0x40008c7	          0x4885db	                           test rbx, rbx	        69	diff.c	FUNCTION_1
0x40008ca	            0x75dc	                           jne 0x40008a8	        69	diff.c	FUNCTION_1
0x40008cc	        0x4883c408	                              add rsp, 8	        80	diff.c	FUNCTION_1
0x40008d0	              0x5b	                                 pop rbx	        80	diff.c	FUNCTION_1
0x40008d1	              0x5d	                                 pop rbp	        80	diff.c	FUNCTION_1
0x40008d2	              0xc3	                                     ret	        80	diff.c	FUNCTION_1
0x40008d3	       0xf1f440000	                   nop dword [rax + rax]	        80	diff.c	FUNCTION_1
0x40008d8	    0x48391d000000	            cmp qword [0x040008df], rbx 	        76	diff.c	IF_1	IF_2
0x40008df	    0x48c744d36000	       mov qword [rbx + rdx*8 + 0x60], 0	        74	diff.c	IF_1
0x40008e8	    0xc783a0000000	               mov dword [rbx + 0xa0], 1	        75	diff.c	IF_1
0x40008f2	            0x75d0	                           jne 0x40008c4	        76	diff.c	IF_1	IF_2
0x40008f4	      0xbf01000000	                              mov edi, 1	        77	diff.c	IF_1	CALL_2
0x40008f9	      0xe8b2feffff	                    call sym.diff_redraw	        77	diff.c	IF_1	CALL_2
0x40008fe	          0x488b1b	                    mov rbx, qword [rbx]	        69	diff.c	FUNCTION_1
0x4000901	          0x4885db	                           test rbx, rbx	        69	diff.c	FUNCTION_1
0x4000904	            0x75a2	                           jne 0x40008a8	        69	diff.c	FUNCTION_1
0x4000906	            0xebc4	                           jmp 0x40008cc	        69	diff.c	FUNCTION_1
diff_mode_buf	DO,0:WHILE,0:IF,1:CALL,2:ELSE,0:functions,0:SWITCH,0:FOR,0	20
0x4003d80	    0x488b0d000000	            mov rcx, qword [0x04003d87] 	      2509	diff.c	FUNCTION_40	CALL_1
0x4003d87	          0x4885c9	                           test rcx, rcx	      2509	diff.c	FUNCTION_40	CALL_1
0x4003d8a	            0x742a	                            je 0x4003db6	      2509	diff.c	FUNCTION_40	CALL_1
0x4003d8c	         0xf1f4000	                         nop dword [rax]	      2509	diff.c	FUNCTION_40	CALL_1
0x4003d90	        0x488d4160	                   lea rax, [rcx + 0x60]	      2509	diff.c	FUNCTION_40	CALL_1
0x4003d94	    0x488d91a00000	                   lea rdx, [rcx + 0xa0]	      2509	diff.c	FUNCTION_40	CALL_1
0x4003d9b	       0xf1f440000	                   nop dword [rax + rax]	      2509	diff.c	FUNCTION_40	CALL_1
0x4003da0	          0x483b38	                    cmp rdi, qword [rax]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003da3	            0x741b	                            je 0x4003dc0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003da5	        0x4883c008	                              add rax, 8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003da9	          0x4839d0	                            cmp rax, rdx	       183	diff.c	FUNCTION_6	FOR_1
0x4003dac	            0x75f2	                           jne 0x4003da0	       183	diff.c	FUNCTION_6	FOR_1
0x4003dae	          0x488b09	                    mov rcx, qword [rcx]	      2509	diff.c	FUNCTION_40	CALL_1
0x4003db1	          0x4885c9	                           test rcx, rcx	      2509	diff.c	FUNCTION_40	CALL_1
0x4003db4	            0x75da	                           jne 0x4003d90	      2509	diff.c	FUNCTION_40	CALL_1
0x4003db6	            0x31c0	                            xor eax, eax	      2512	diff.c	FUNCTION_40
0x4003db8	              0xc3	                                     ret	      2513	diff.c	FUNCTION_40
0x4003db9	     0xf1f80000000	                         nop dword [rax]	      2513	diff.c	FUNCTION_40
0x4003dc0	      0xb801000000	                              mov eax, 1	      2511	diff.c	FUNCTION_40	IF_1
0x4003dc5	              0xc3	                                     ret	      2511	diff.c	FUNCTION_40	IF_1
diff_check_fill	DO,0:WHILE,0:IF,2:CALL,1:ELSE,0:functions,0:SWITCH,0:FOR,0	12
0x4002820	    0x8b0500000000	            mov eax, dword [0x04002826] 	      1724	diff.c	FUNCTION_30	IF_1
0x4002826	          0x83e001	                              and eax, 1	      1724	diff.c	FUNCTION_30	IF_1
0x4002829	            0x7505	                           jne 0x4002830	      1724	diff.c	FUNCTION_30	IF_1
0x400282b	              0xc3	                                     ret	      1730	diff.c	FUNCTION_30
0x400282c	         0xf1f4000	                         nop dword [rax]	      1730	diff.c	FUNCTION_30
0x4002830	        0x4883ec08	                              sub rsp, 8	      1720	diff.c	FUNCTION_30
0x4002834	      0xe800000000	                          call 0x4002839	      1726	diff.c	FUNCTION_30	CALL_1
0x4002839	      0xba00000000	                              mov edx, 0	      1726	diff.c	FUNCTION_30	CALL_1
0x400283e	            0x85c0	                           test eax, eax	      1726	diff.c	FUNCTION_30	CALL_1
0x4002840	           0xf48c2	                          cmovs eax, edx	      1726	diff.c	FUNCTION_30	CALL_1
0x4002843	        0x4883c408	                              add rsp, 8	      1730	diff.c	FUNCTION_30
0x4002847	              0xc3	                                     ret	      1730	diff.c	FUNCTION_30
diff_infold	DO,0:WHILE,0:IF,8:CALL,1:ELSE,1:functions,0:SWITCH,0:FOR,2	73
0x4003190	    0x8b97c0010000	           mov edx, dword [rdi + 0x1c0] 	      2100	diff.c	FUNCTION_36	IF_1
0x4003196	            0x85d2	                           test edx, edx	      2100	diff.c	FUNCTION_36	IF_1
0x4003198	     0xf84ca000000	                            je 0x4003268	      2100	diff.c	FUNCTION_36	IF_1
0x400319e	              0x55	                                push rbp	      2093	diff.c	FUNCTION_36
0x400319f	              0x53	                                push rbx	      2093	diff.c	FUNCTION_36
0x40031a0	            0x31c0	                            xor eax, eax	      2100	diff.c	FUNCTION_36	IF_1
0x40031a2	            0x31c9	                            xor ecx, ecx	      2100	diff.c	FUNCTION_36	IF_1
0x40031a4	      0xbdffffffff	                     mov ebp, 0xffffffff	      2100	diff.c	FUNCTION_36	IF_1
0x40031a9	    0x41b901000000	                              mov r9d, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40031af	        0x4883ec08	                              sub rsp, 8	      2093	diff.c	FUNCTION_36
0x40031b3	    0x4c8b05000000	              mov r8, qword [0x040031ba]	      2093	diff.c	FUNCTION_36
0x40031ba	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2093	diff.c	FUNCTION_36
0x40031be	            0xeb11	                           jmp 0x40031d1	      2093	diff.c	FUNCTION_36
0x40031c0	          0x4885d2	                           test rdx, rdx	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40031c3	        0x410f45c9	                         cmovne ecx, r9d	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40031c7	        0x4883c001	                              add rax, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40031cb	        0x4883f808	                              cmp rax, 8	      2103	diff.c	FUNCTION_36	FOR_1
0x40031cf	            0x741f	                            je 0x40031f0	      2103	diff.c	FUNCTION_36	FOR_1
0x40031d1	      0x498b54c060	     mov rdx, qword [r8 + rax*8 + 0x60] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40031d6	          0x4839d7	                            cmp rdi, rdx	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40031d9	            0x75e5	                           jne 0x40031c0	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40031db	            0x89c5	                            mov ebp, eax	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40031dd	        0x4883c001	                              add rax, 1	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40031e1	        0x4883f808	                              cmp rax, 8	      2103	diff.c	FUNCTION_36	FOR_1
0x40031e5	            0x75ea	                           jne 0x40031d1	      2103	diff.c	FUNCTION_36	FOR_1
0x40031e7	    0x660f1f840000	                    nop word [rax + rax]	      2103	diff.c	FUNCTION_36	FOR_1
0x40031f0	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2112	diff.c	FUNCTION_36	IF_4
0x40031f3	            0x7463	                            je 0x4003258	      2112	diff.c	FUNCTION_36	IF_4
0x40031f5	          0x83e101	                              and ecx, 1	      2112	diff.c	FUNCTION_36	IF_4
0x40031f8	            0x745e	                            je 0x4003258	      2112	diff.c	FUNCTION_36	IF_4
0x40031fa	    0x418b80a00000	              mov eax, dword [r8 + 0xa0]	      2115	diff.c	FUNCTION_36	IF_5
0x4003201	          0x4889f3	                            mov rbx, rsi	      2115	diff.c	FUNCTION_36	IF_5
0x4003204	            0x85c0	                           test eax, eax	      2115	diff.c	FUNCTION_36	IF_5
0x4003206	            0x7568	                           jne 0x4003270	      2115	diff.c	FUNCTION_36	IF_5
0x4003208	        0x498b5058	              mov rdx, qword [r8 + 0x58]	      2119	diff.c	FUNCTION_36	IF_6
0x400320c	          0x4885d2	                           test rdx, rdx	      2119	diff.c	FUNCTION_36	IF_6
0x400320f	            0x7436	                            je 0x4003247	      2119	diff.c	FUNCTION_36	IF_6
0x4003211	    0x486335000000	         movsxd rsi, dword [0x04003218] 	      2119	diff.c	FUNCTION_36	IF_6
0x4003218	          0x4c63c5	                          movsxd r8, ebp	      2119	diff.c	FUNCTION_36	IF_6
0x400321b	        0x49c1e003	                               shl r8, 3	      2119	diff.c	FUNCTION_36	IF_6
0x400321f	              0x90	                                     nop	      2119	diff.c	FUNCTION_36	IF_6
0x4003220	        0x4a8d0c02	                     lea rcx, [rdx + r8]	      2119	diff.c	FUNCTION_36	IF_6
0x4003224	        0x488b4108	                mov rax, qword [rcx + 8]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4003228	          0x4889c7	                            mov rdi, rax	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x400322b	          0x4829f7	                            sub rdi, rsi	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x400322e	          0x4839df	                            cmp rdi, rbx	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4003231	            0x7f14	                            jg 0x4003247	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4003233	        0x48034148	             add rax, qword [rcx + 0x48]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4003237	          0x4801f0	                            add rax, rsi	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x400323a	          0x4839c3	                            cmp rbx, rax	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x400323d	            0x7c19	                            jl 0x4003258	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x400323f	          0x488b12	                    mov rdx, qword [rdx]	      2122	diff.c	FUNCTION_36	FOR_2
0x4003242	          0x4885d2	                           test rdx, rdx	      2122	diff.c	FUNCTION_36	FOR_2
0x4003245	            0x75d9	                           jne 0x4003220	      2122	diff.c	FUNCTION_36	FOR_2
0x4003247	        0x4883c408	                              add rsp, 8	      2132	diff.c	FUNCTION_36
0x400324b	      0xb801000000	                              mov eax, 1	      2120	diff.c	FUNCTION_36	IF_6
0x4003250	              0x5b	                                 pop rbx	      2132	diff.c	FUNCTION_36
0x4003251	              0x5d	                                 pop rbp	      2132	diff.c	FUNCTION_36
0x4003252	              0xc3	                                     ret	      2132	diff.c	FUNCTION_36
0x4003253	       0xf1f440000	                   nop dword [rax + rax]	      2132	diff.c	FUNCTION_36
0x4003258	        0x4883c408	                              add rsp, 8	      2132	diff.c	FUNCTION_36
0x400325c	            0x31c0	                            xor eax, eax	      2101	diff.c	FUNCTION_36	IF_1
0x400325e	              0x5b	                                 pop rbx	      2132	diff.c	FUNCTION_36
0x400325f	              0x5d	                                 pop rbp	      2132	diff.c	FUNCTION_36
0x4003260	              0xc3	                                     ret	      2132	diff.c	FUNCTION_36
0x4003261	     0xf1f80000000	                         nop dword [rax]	      2132	diff.c	FUNCTION_36
0x4003268	            0x31c0	                            xor eax, eax	      2101	diff.c	FUNCTION_36	IF_1
0x400326a	              0xc3	                                     ret	      2132	diff.c	FUNCTION_36
0x400326b	       0xf1f440000	                   nop dword [rax + rax]	      2132	diff.c	FUNCTION_36
0x4003270	            0x31ff	                            xor edi, edi	      2116	diff.c	FUNCTION_36	CALL_1
0x4003272	      0xe800000000	                          call 0x4003277	      2116	diff.c	FUNCTION_36	CALL_1
0x4003277	    0x4c8b05000000	              mov r8, qword [0x0400327e]	      2116	diff.c	FUNCTION_36	CALL_1
0x400327e	            0xeb88	                           jmp 0x4003208	      2116	diff.c	FUNCTION_36	CALL_1
diff_equal_char	DO,0:WHILE,0:IF,4:CALL,7:ELSE,1:functions,0:SWITCH,0:FOR,0	69
0x4000040	            0x4155	                                push r13	      1645	diff.c	FUNCTION_28
0x4000042	            0x4154	                                push r12	      1645	diff.c	FUNCTION_28
0x4000044	          0x4989d5	                            mov r13, rdx	      1645	diff.c	FUNCTION_28
0x4000047	              0x55	                                push rbp	      1645	diff.c	FUNCTION_28
0x4000048	              0x53	                                push rbx	      1645	diff.c	FUNCTION_28
0x4000049	          0x4889f5	                            mov rbp, rsi	      1645	diff.c	FUNCTION_28
0x400004c	          0x4989fc	                            mov r12, rdi	      1645	diff.c	FUNCTION_28
0x400004f	        0x4883ec08	                              sub rsp, 8	      1645	diff.c	FUNCTION_28
0x4000053	    0xff1500000000	                 call qword [0x04000059]	      1647	diff.c	FUNCTION_28
0x4000059	            0x89c3	                            mov ebx, eax	      1647	diff.c	FUNCTION_28
0x400005b	          0x4889ef	                            mov rdi, rbp	      1649	diff.c	FUNCTION_28	IF_1
0x400005e	    0xff1500000000	                 call qword [0x04000064]	      1649	diff.c	FUNCTION_28	IF_1
0x4000064	            0x39c3	                            cmp ebx, eax	      1649	diff.c	FUNCTION_28	IF_1
0x4000066	            0x7410	                            je 0x4000078	      1649	diff.c	FUNCTION_28	IF_1
0x4000068	            0x31c0	                            xor eax, eax	      1650	diff.c	FUNCTION_28	IF_1
0x400006a	        0x4883c408	                              add rsp, 8	      1671	diff.c	FUNCTION_28
0x400006e	              0x5b	                                 pop rbx	      1671	diff.c	FUNCTION_28
0x400006f	              0x5d	                                 pop rbp	      1671	diff.c	FUNCTION_28
0x4000070	            0x415c	                                 pop r12	      1671	diff.c	FUNCTION_28
0x4000072	            0x415d	                                 pop r13	      1671	diff.c	FUNCTION_28
0x4000074	              0xc3	                                     ret	      1671	diff.c	FUNCTION_28
0x4000075	           0xf1f00	                         nop dword [rax]	      1671	diff.c	FUNCTION_28
0x4000078	          0x83fb01	                              cmp ebx, 1	      1651	diff.c	FUNCTION_28	IF_2
0x400007b	            0x7e63	                           jle 0x40000e0	      1651	diff.c	FUNCTION_28	IF_2
0x400007d	          0x4863d3	                         movsxd rdx, ebx	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x4000080	          0x4889ee	                            mov rsi, rbp	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x4000083	          0x4c89e7	                            mov rdi, r12	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x4000086	      0xe800000000	                          call 0x400008b	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x400008b	            0x85c0	                           test eax, eax	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x400008d	            0x7439	                            je 0x40000c8	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x400008f	    0x8b0500000000	            mov eax, dword [0x04000095] 	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x4000095	            0x85c0	                           test eax, eax	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x4000097	            0x74cf	                            je 0x4000068	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x4000099	    0xf60500000000	               test byte [0x040000a0], 2	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x40000a0	            0x74c6	                            je 0x4000068	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x40000a2	          0x4c89e7	                            mov rdi, r12	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x40000a5	      0xe800000000	                          call 0x40000aa	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x40000aa	            0x89c7	                            mov edi, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x40000ac	      0xe800000000	                          call 0x40000b1	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x40000b1	          0x4889ef	                            mov rdi, rbp	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x40000b4	          0x4189c4	                           mov r12d, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x40000b7	      0xe800000000	                          call 0x40000bc	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x40000bc	            0x89c7	                            mov edi, eax	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x40000be	      0xe800000000	                          call 0x40000c3	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x40000c3	          0x4139c4	                           cmp r12d, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x40000c6	            0x75a0	                           jne 0x4000068	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x40000c8	        0x41895d00	                    mov dword [r13], ebx	      1659	diff.c	FUNCTION_28	IF_2
0x40000cc	        0x4883c408	                              add rsp, 8	      1671	diff.c	FUNCTION_28
0x40000d0	      0xb801000000	                              mov eax, 1	      1670	diff.c	FUNCTION_28
0x40000d5	              0x5b	                                 pop rbx	      1671	diff.c	FUNCTION_28
0x40000d6	              0x5d	                                 pop rbp	      1671	diff.c	FUNCTION_28
0x40000d7	            0x415c	                                 pop r12	      1671	diff.c	FUNCTION_28
0x40000d9	            0x415d	                                 pop r13	      1671	diff.c	FUNCTION_28
0x40000db	              0xc3	                                     ret	      1671	diff.c	FUNCTION_28
0x40000dc	         0xf1f4000	                         nop dword [rax]	      1671	diff.c	FUNCTION_28
0x40000e0	      0x450fb62424	                  movzx r12d, byte [r12]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x40000e5	         0xfb65d00	                   movzx ebx, byte [rbp]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x40000e9	          0x4138dc	                            cmp r12b, bl	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x40000ec	            0x7422	                            je 0x4000110	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x40000ee	    0xf60500000000	               test byte [0x040000f5], 2	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x40000f5	     0xf846dffffff	                            je 0x4000068	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x40000fb	      0xe800000000	                          call 0x4000100	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000100	          0x488b00	                    mov rax, qword [rax]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000103	          0x8b0c98	            mov ecx, dword [rax + rbx*4]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000106	        0x42390ca0	           cmp dword [rax + r12*4], ecx 	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x400010a	     0xf8558ffffff	                           jne 0x4000068	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x4000110	    0x41c745000100	                      mov dword [r13], 1	      1668	diff.c	FUNCTION_28	ELSE_1
0x4000118	      0xb801000000	                              mov eax, 1	      1670	diff.c	FUNCTION_28
0x400011d	      0xe948ffffff	                           jmp 0x400006a	      1670	diff.c	FUNCTION_28
nv_diffgetput	DO,0:WHILE,0:IF,2:CALL,2:ELSE,2:functions,0:SWITCH,0:FOR,0	40
0x4003cd0	              0x55	                                push rbp	      2140	diff.c	FUNCTION_37
0x4003cd1	              0x53	                                push rbx	      2140	diff.c	FUNCTION_37
0x4003cd2	            0x89fb	                            mov ebx, edi	      2140	diff.c	FUNCTION_37
0x4003cd4	    0x4881ece80000	                           sub rsp, 0xe8	      2140	diff.c	FUNCTION_37
0x4003cdb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2140	diff.c	FUNCTION_37
0x4003ce4	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      2140	diff.c	FUNCTION_37
0x4003cec	            0x31c0	                            xor eax, eax	      2140	diff.c	FUNCTION_37
0x4003cee	          0x4885f6	                           test rsi, rsi	      2144	diff.c	FUNCTION_37	IF_1
0x4003cf1	            0x755d	                           jne 0x4003d50	      2144	diff.c	FUNCTION_37	IF_1
0x4003cf3	    0x48c704240000	                      mov qword [rsp], 0	      2145	diff.c	FUNCTION_37	IF_1
0x4003cfb	          0x83fb01	                              cmp ebx, 1	      2152	diff.c	FUNCTION_37	IF_2
0x4003cfe	          0x4889e7	                            mov rdi, rsp	      2158	diff.c	FUNCTION_37	CALL_2
0x4003d01	    0xc74424380000	               mov dword [rsp + 0x38], 0	      2155	diff.c	FUNCTION_37
0x4003d09	            0x19c0	                            sbb eax, eax	      2152	diff.c	FUNCTION_37	IF_2
0x4003d0b	          0x83e0fd	                     and eax, 0xfffffffd	      2152	diff.c	FUNCTION_37	IF_2
0x4003d0e	          0x83c072	                           add eax, 0x72	      2152	diff.c	FUNCTION_37	IF_2
0x4003d11	        0x89442420	             mov dword [rsp + 0x20], eax	      2152	diff.c	FUNCTION_37	IF_2
0x4003d15	    0x488b05000000	            mov rax, qword [0x04003d1c] 	      2156	diff.c	FUNCTION_37
0x4003d1c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2156	diff.c	FUNCTION_37
0x4003d20	      0x4889442440	             mov qword [rsp + 0x40], rax	      2156	diff.c	FUNCTION_37
0x4003d25	      0x4889442448	             mov qword [rsp + 0x48], rax	      2157	diff.c	FUNCTION_37
0x4003d2a	      0xe800000000	                          call 0x4003d2f	      2158	diff.c	FUNCTION_37	CALL_2
0x4003d2f	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      2159	diff.c	FUNCTION_37
0x4003d37	    0x644833042528	                xor rax, qword fs:[0x28]	      2159	diff.c	FUNCTION_37
0x4003d40	            0x7533	                           jne 0x4003d75	      2159	diff.c	FUNCTION_37
0x4003d42	    0x4881c4e80000	                           add rsp, 0xe8	      2159	diff.c	FUNCTION_37
0x4003d49	              0x5b	                                 pop rbx	      2159	diff.c	FUNCTION_37
0x4003d4a	              0x5d	                                 pop rbp	      2159	diff.c	FUNCTION_37
0x4003d4b	              0xc3	                                     ret	      2159	diff.c	FUNCTION_37
0x4003d4c	         0xf1f4000	                         nop dword [rax]	      2159	diff.c	FUNCTION_37
0x4003d50	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4003d58	          0x4889f1	                            mov rcx, rsi	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4003d5b	      0xba00000000	                              mov edx, 0	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4003d60	      0xbe1e000000	                           mov esi, 0x1e	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4003d65	            0x31c0	                            xor eax, eax	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4003d67	          0x4889ef	                            mov rdi, rbp	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4003d6a	      0xe800000000	                          call 0x4003d6f	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4003d6f	        0x48892c24	                    mov qword [rsp], rbp	      2149	diff.c	FUNCTION_37	ELSE_1
0x4003d73	            0xeb86	                           jmp 0x4003cfb	      2149	diff.c	FUNCTION_37	ELSE_1
0x4003d75	      0xe800000000	                          call 0x4003d7a	      2159	diff.c	FUNCTION_37
diffopt_hiddenoff	DO,0:WHILE,0:IF,0:CALL,0:ELSE,0:functions,0:SWITCH,0:FOR,0	4
0x4002d90	    0x8b0500000000	            mov eax, dword [0x04002d96] 	      1951	diff.c	FUNCTION_34
0x4002d96	          0xc1e805	                              shr eax, 5	      1951	diff.c	FUNCTION_34
0x4002d99	          0x83e001	                              and eax, 1	      1951	diff.c	FUNCTION_34
0x4002d9c	              0xc3	                                     ret	      1952	diff.c	FUNCTION_34
